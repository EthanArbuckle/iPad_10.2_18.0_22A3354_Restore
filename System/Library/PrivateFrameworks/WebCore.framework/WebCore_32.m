uint64_t WebCore::JSMouseEvent::prototype(WebCore::JSMouseEvent *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  uint64_t v12;
  JSC::JSCell *v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;
  int v19;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_4;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSMouseEvent::s_info + ~((_QWORD)&WebCore::JSMouseEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSMouseEvent::s_info + ~((_QWORD)&WebCore::JSMouseEvent::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSMouseEvent::s_info)
  {
    v19 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v19) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v19;
      if (v11 == &WebCore::JSMouseEvent::s_info)
        goto LABEL_3;
    }
    goto LABEL_4;
  }
LABEL_3:
  v12 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v12)
  {
LABEL_4:
    v13 = (JSC::JSCell *)WebCore::JSUIEvent::prototype(this, a2, a3);
    Structure = WebCore::JSMouseEventPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v13);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSMouseEventPrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSMouseEvent::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v12 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSMouseEvent::s_info);
  }
  return *(_QWORD *)(v12 + 48);
}

uint64_t WebCore::JSMouseEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSUIEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSUIEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSUIEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSMouseEvent::createPrototype(WebCore::JSMouseEvent *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  JSC::JSCell *v5;
  unint64_t Structure;
  JSC::Structure *v7;

  v5 = (JSC::JSCell *)WebCore::JSUIEvent::prototype(this, a2, a3);
  Structure = WebCore::JSMouseEventPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v5);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSMouseEventPrototype::create(this, a2, Structure, v7);
}

uint64_t WebCore::JSMouseEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSMouseEventPrototype::create(WebCore::JSMouseEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<25u>(this, (uint64_t)&WebCore::JSMouseEvent::s_info, (uint64_t)&WebCore::JSMouseEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSMouseEvent>,(WebCore::DOMConstructorID)461>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t *v7;
  unint64_t v8;
  JSC::JSCell *v9;
  uint64_t Structure;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v13;
  unint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  unint64_t v18;
  unint64_t v19;
  WebCore::JSDOMGlobalObject *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  WTF::StringImpl *v24;
  unint64_t v25;
  int v26;
  int v27;
  uint64_t v28;

  v2 = *(_QWORD *)(a2 + 3312);
  v3 = *(_QWORD *)(v2 + 3688);
  if (v3)
    return v3;
  v7 = (uint64_t *)(a1 + 40136);
  v8 = *(_QWORD *)(v2 + 3968);
  if (!v8)
  {
    v9 = (JSC::JSCell *)WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
    Structure = WebCore::JSDOMConstructor<WebCore::JSUIEvent>::createStructure((uint64_t *)a1, a2, v9);
    v8 = WebCore::JSDOMConstructor<WebCore::JSUIEvent>::create(a1, Structure, (JSC::VM *)a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3968) = v8;
    if (v8)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
    }
  }
  LODWORD(v24) = 67099;
  if ((v8 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v8);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v7;
  if (*v7 < (unint64_t)v7[1])
    goto LABEL_9;
  SlowCase = v7[2];
  if ((SlowCase & 1) == 0)
  {
    v22 = *(_QWORD *)(SlowCase + 8) ^ v7[3];
    v7[1] = SlowCase + HIDWORD(v22);
    v7[2] = SlowCase + (int)v22;
LABEL_9:
    *v7 = SlowCase + 128;
    goto LABEL_10;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_10:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v8, &v24, &WebCore::JSDOMConstructor<WebCore::JSMouseEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v13 = (_QWORD *)v7[165];
  v3 = v13[2846];
  if (v3 >= v13[2847])
  {
    v3 = v13[2848];
    if ((v3 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v3 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_14;
    }
    v23 = *(_QWORD *)(v3 + 8) ^ v13[2849];
    v13[2847] = v3 + HIDWORD(v23);
    v13[2848] = v3 + (int)v23;
  }
  v13[2846] = v3 + 48;
LABEL_14:
  *(_DWORD *)v3 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v14 = *(_QWORD *)(v7[227] + 1768);
  v24 = 0;
  v25 = v3;
  v26 = -1;
  v27 = 0x1000000;
  v28 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v3, (JSC::VM *)a1, v14, 0xFFFE000000000001, 6, (uint64_t)&v24);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v16 = JSC::JSString::create(a1, &v24);
  v17 = v24;
  v24 = 0;
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v15);
    else
      *(_DWORD *)v17 -= 2;
  }
  *(_QWORD *)(v3 + 32) = v16;
  if (v16 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v3 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v3);
  v18 = *(_QWORD *)(v7[227] + 1968);
  v24 = 0;
  v25 = v3;
  v26 = -1;
  v27 = 0x1000000;
  v28 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v3, (JSC::VM *)a1, v18, v16, 6, (uint64_t)&v24);
  v19 = *(_QWORD *)(v7[227] + 2160);
  v21 = WebCore::JSMouseEvent::prototype((WebCore::JSMouseEvent *)a1, (JSC::VM *)a2, v20);
  v24 = 0;
  v25 = v3;
  v26 = -1;
  v27 = 0x1000000;
  v28 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v3, (JSC::VM *)a1, v19, v21, 14, (uint64_t)&v24);
  JSC::reifyStaticProperties<2u>((JSC::VM *)a1, (uint64_t)&WebCore::JSMouseEvent::s_info, (uint64_t)&WebCore::JSMouseEventConstructorTableValues, (JSC::JSObject *)v3);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3688) = v3;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v3;
}

unint64_t WebCore::jsMouseEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSMouseEventPrototype::s_info != (char **)(16
                                                          * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSMouseEvent>,(WebCore::DOMConstructorID)461>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsMouseEvent_screenX(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(*(_QWORD *)(a2 + 24) + 88) | 0xFFFE000000000000;
}

unint64_t WebCore::jsMouseEvent_screenY(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(*(_QWORD *)(a2 + 24) + 92) | 0xFFFE000000000000;
}

unint64_t WebCore::jsMouseEvent_clientX(uint64_t a1, uint64_t a2)
{
  return (*(_DWORD *)(*(_QWORD *)(a2 + 24) + 96) / 64) | 0xFFFE000000000000;
}

unint64_t WebCore::jsMouseEvent_clientY(uint64_t a1, uint64_t a2)
{
  return (*(_DWORD *)(*(_QWORD *)(a2 + 24) + 100) / 64) | 0xFFFE000000000000;
}

uint64_t WebCore::jsMouseEvent_ctrlKey(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a2 + 24) + 84) & 2) != 0)
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsMouseEvent_shiftKey(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a2 + 24) + 84) & 8) != 0)
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsMouseEvent_altKey(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a2 + 24) + 84) & 1) != 0)
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsMouseEvent_metaKey(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a2 + 24) + 84) & 4) != 0)
    return 7;
  else
    return 6;
}

unint64_t WebCore::jsMouseEvent_button(uint64_t a1, uint64_t a2)
{
  return *(__int16 *)(*(_QWORD *)(a2 + 24) + 154) & 0xFFFFFFFFLL | 0xFFFE000000000000;
}

unint64_t WebCore::jsMouseEvent_buttons(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int16 *)(*(_QWORD *)(a2 + 24) + 156) | 0xFFFE000000000000;
}

uint64_t WebCore::jsMouseEvent_relatedTarget(WebCore::DOMWrapperWorld **a1, uint64_t a2, uint64_t a3, WebCore::EventTarget *a4)
{
  WebCore::JSDOMGlobalObject *v4;

  v4 = *(WebCore::JSDOMGlobalObject **)(*(_QWORD *)(a2 + 24) + 160);
  if (v4)
    return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v4, a4);
  else
    return 2;
}

unint64_t WebCore::jsMouseEvent_movementX(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 104);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsMouseEvent_movementY(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 112);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsMouseEvent_webkitForce(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 168);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsMouseEvent_offsetX(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v3 + 152))
    return 0xFFFE000000000000;
  if (!*(_BYTE *)(v3 + 153))
    WebCore::MouseRelatedEvent::computeRelativePosition(*(int32x2_t **)(a2 + 24));
  return (((int)(*(_DWORD *)(v3 + 136) - (v2 & 0xFFFFFFC0) + 32) >> 6) + *(_DWORD *)(v3 + 136) / 64) | 0xFFFE000000000000;
}

unint64_t WebCore::jsMouseEvent_offsetY(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v3 + 152))
    return 0xFFFE000000000000;
  if (!*(_BYTE *)(v3 + 153))
    WebCore::MouseRelatedEvent::computeRelativePosition(*(int32x2_t **)(a2 + 24));
  return (((int)(*(_DWORD *)(v3 + 140) - (v2 & 0xFFFFFFC0) + 32) >> 6) + *(_DWORD *)(v3 + 140) / 64) | 0xFFFE000000000000;
}

unint64_t WebCore::jsMouseEvent_x(uint64_t a1, uint64_t a2)
{
  return (*(_DWORD *)(*(_QWORD *)(a2 + 24) + 96) / 64) | 0xFFFE000000000000;
}

unint64_t WebCore::jsMouseEvent_y(uint64_t a1, uint64_t a2)
{
  return (*(_DWORD *)(*(_QWORD *)(a2 + 24) + 100) / 64) | 0xFFFE000000000000;
}

uint64_t WebCore::jsMouseEvent_fromElement(WebCore::DOMWrapperWorld **a1, uint64_t a2)
{
  JSC::VM *v3;
  void *v4;
  WebCore::Document *v5;
  WebCore::Node *v6;
  unint64_t Wrapper;
  uint64_t v9;
  WebCore::Node *v10;
  uint64_t OutOfLineCachedWrapper;
  WebCore::Node *v12;
  WebCore::Node *v13;
  WebCore::Node *v14;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  (*(void (**)(WebCore::Node **__return_ptr))(**(_QWORD **)(a2 + 24) + 232))(&v13);
  v6 = v13;
  if (!v13)
    return 2;
  if (*((_BYTE *)v3 + 3328))
  {
    v9 = *((_QWORD *)v13 + 1);
    if (v9)
    {
      if ((*(_BYTE *)(v9 + 8) & 3) == 0)
      {
        Wrapper = *(_QWORD *)v9;
        if (*(_QWORD *)v9)
          goto LABEL_8;
      }
    }
  }
  else
  {
    v10 = v13;
    OutOfLineCachedWrapper = WebCore::getOutOfLineCachedWrapper((uint64_t)v3, (uint64_t)v13);
    v6 = v10;
    Wrapper = OutOfLineCachedWrapper;
    if (OutOfLineCachedWrapper)
    {
LABEL_8:
      v13 = 0;
LABEL_9:
      if (*((_DWORD *)v6 + 6) == 2)
      {
        if ((*((_WORD *)v6 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(v6, v4);
      }
      else
      {
        *((_DWORD *)v6 + 6) -= 2;
      }
      return Wrapper;
    }
  }
  *((_DWORD *)v6 + 6) += 2;
  v14 = v6;
  Wrapper = WebCore::createWrapper(a1, v3, (WebCore::JSDOMGlobalObject *)&v14, v5);
  v12 = v14;
  v14 = 0;
  if (v12)
  {
    if (*((_DWORD *)v12 + 6) == 2)
    {
      if ((*((_WORD *)v12 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v12, v4);
    }
    else
    {
      *((_DWORD *)v12 + 6) -= 2;
    }
  }
  v6 = v13;
  v13 = 0;
  if (v6)
    goto LABEL_9;
  return Wrapper;
}

uint64_t WebCore::jsMouseEvent_toElement(WebCore::DOMWrapperWorld **a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  WebCore::Document *v5;
  WebCore::Node *v6;
  unint64_t Wrapper;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  WebCore::Node *v16;
  int v17;
  uint64_t v18;
  WebCore::Node *v19;
  WebCore::Node *v20;
  WebCore::Node *v21;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  (*(void (**)(WebCore::Node **__return_ptr))(**(_QWORD **)(a2 + 24) + 224))(&v20);
  v6 = v20;
  if (!v20)
    return 2;
  if (!*(_BYTE *)(v3 + 3328))
  {
    v10 = *(_QWORD *)(*(_QWORD *)(v3 + 3320) + 32);
    if (v10)
    {
      v11 = *(_DWORD *)(v10 - 8);
      v12 = ((unint64_t)v20 + ~((_QWORD)v20 << 32)) ^ (((unint64_t)v20 + ~((_QWORD)v20 << 32)) >> 22);
      v13 = 9 * ((v12 + ~(v12 << 13)) ^ ((v12 + ~(v12 << 13)) >> 8));
      v14 = (v13 ^ (v13 >> 15)) + ~((v13 ^ (v13 >> 15)) << 27);
      v15 = v11 & ((v14 >> 31) ^ v14);
      v16 = *(WebCore::Node **)(v10 + 16 * v15);
      if (v16 == v20)
      {
LABEL_14:
        v18 = *(_QWORD *)(v10 + 16 * v15 + 8);
        if (v18)
        {
          if ((*(_BYTE *)(v18 + 8) & 3) == 0)
          {
            Wrapper = *(_QWORD *)v18;
            if (*(_QWORD *)v18)
              goto LABEL_21;
          }
        }
      }
      else
      {
        v17 = 1;
        while (v16)
        {
          v15 = ((_DWORD)v15 + v17) & v11;
          v16 = *(WebCore::Node **)(v10 + 16 * v15);
          ++v17;
          if (v16 == v20)
            goto LABEL_14;
        }
      }
    }
LABEL_17:
    *((_DWORD *)v20 + 6) += 2;
    v21 = v6;
    Wrapper = WebCore::createWrapper(a1, (JSC::VM *)v3, (WebCore::JSDOMGlobalObject *)&v21, v5);
    v19 = v21;
    v21 = 0;
    if (v19)
    {
      if (*((_DWORD *)v19 + 6) == 2)
      {
        if ((*((_WORD *)v19 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(v19, v4);
      }
      else
      {
        *((_DWORD *)v19 + 6) -= 2;
      }
    }
    v6 = v20;
LABEL_21:
    v20 = 0;
    if (!v6)
      return Wrapper;
    goto LABEL_22;
  }
  v9 = *((_QWORD *)v20 + 1);
  if (!v9)
    goto LABEL_17;
  if ((*(_BYTE *)(v9 + 8) & 3) != 0)
    goto LABEL_17;
  Wrapper = *(_QWORD *)v9;
  if (!*(_QWORD *)v9)
    goto LABEL_17;
  v20 = 0;
LABEL_22:
  if (*((_DWORD *)v6 + 6) == 2)
  {
    if ((*((_WORD *)v6 + 15) & 0x400) == 0)
      WebCore::Node::removedLastRef(v6, v4);
  }
  else
  {
    *((_DWORD *)v6 + 6) -= 2;
  }
  return Wrapper;
}

uint64_t WebCore::JSMouseEvent::subspaceForImpl(WebCore::JSMouseEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  WTF *v12;
  void *v13;
  int v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  WTF *v18;
  uint64_t v19;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3768);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v7))
  {
    goto LABEL_6;
  }
  MEMORY[0x19AEA534C](v7, a2);
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  if (!*(_QWORD *)(v9 + 3768))
  {
    v15 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v15, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v17 = v20;
    v20 = 0;
    if (v17)
      (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
    v18 = v21;
    v21 = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 1)
        WTF::fastFree(v18, v16);
      else
        --*(_DWORD *)v18;
    }
    v19 = *(_QWORD *)(v9 + 3768);
    *(_QWORD *)(v9 + 3768) = v15;
    if (v19)
      (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v11 = *(_QWORD *)(v3 + 3768);
  *(_QWORD *)(v3 + 3768) = v4;
  if (v11)
  {
    v12 = (WTF *)MEMORY[0x19AEA3528](v11, v10);
    WTF::fastFree(v12, v13);
  }
  v14 = __ldxr((unsigned __int8 *)v7);
  if (v14 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

JSC::JSGlobalObject *WebCore::convertDictionary<WebCore::MultiCacheQueryOptions>@<X0>(JSC::JSCell *this@<X1>, JSC::JSGlobalObject *result@<X0>, uint64_t a3@<X8>)
{
  JSC::VM *v4;
  BOOL v5;
  BOOL v6;
  BOOL v7;
  JSC::JSGlobalObject *v8;
  uint64_t Object;
  JSC::Structure *v10;
  WTF::StringImpl *v11;
  unint64_t v12;
  JSC::VM *v13;
  double v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  JSC::VM *v17;
  double v18;
  WTF::StringImpl *v19;
  unint64_t v20;
  JSC::VM *v21;
  double v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  JSC::VM *v26;
  WTF::StringImpl *v27;
  uint64_t v28;
  int v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  BOOL v32;
  int v33;
  uint64_t v34;
  int *v35;
  int v36;
  BOOL v37;
  int v38;
  uint64_t v39;
  int *v40;
  int v41;
  BOOL v42;
  int v43;
  uint64_t v44;
  int *v45;
  int v46;
  WTF::StringImpl *v47;
  int v48;
  JSC::VM *v49;
  WTF::StringImpl *v50;
  uint64_t v51;

  v4 = (JSC::VM *)*((_QWORD *)result + 7);
  v49 = v4;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v5 = 0;
    v6 = 0;
    v7 = 0;
LABEL_43:
    v25 = 0;
LABEL_44:
    *(_BYTE *)a3 = v6;
    *(_BYTE *)(a3 + 1) = v5;
    *(_BYTE *)(a3 + 2) = v7;
    *(_QWORD *)(a3 + 8) = v25;
    *(_DWORD *)(a3 + 16) = 0;
    return result;
  }
  v8 = result;
  if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
  {
    result = (JSC::JSGlobalObject *)JSC::throwTypeError();
LABEL_68:
    *(_DWORD *)(a3 + 16) = 1;
    return result;
  }
  v10 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v12 = JSC::JSObject::get(v10, v8, (unint64_t)v47);
  if (v47)
  {
    if (*(_DWORD *)v47 == 2)
      WTF::StringImpl::destroy(v47, v11);
    else
      *(_DWORD *)v47 -= 2;
  }
  if (*((_DWORD *)v4 + 20))
  {
    result = (JSC::JSGlobalObject *)JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    if ((_DWORD)result)
      goto LABEL_68;
  }
  if (v12 == 10)
  {
    v5 = 0;
    goto LABEL_16;
  }
  v13 = (JSC::VM *)*((_QWORD *)v8 + 7);
  if (v12 >= 0xFFFE000000000000)
  {
    v32 = (_DWORD)v12 == 0;
    goto LABEL_133;
  }
  *(_QWORD *)&v14 = v12 - 0x2000000000000;
  if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v12 & 0xFFFE000000000002) != 0)
    {
      v5 = v12 == 7;
      goto LABEL_15;
    }
    v33 = *(unsigned __int8 *)(v12 + 5);
    if (v33 == 3)
    {
      v36 = *(_DWORD *)(v12 + 8);
    }
    else
    {
      if (v33 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v5 = 1;
          goto LABEL_15;
        }
        v32 = *(_QWORD *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x28) == (_QWORD)v8;
        goto LABEL_133;
      }
      v34 = *(_QWORD *)(v12 + 8);
      if ((v34 & 1) != 0)
        v35 = (int *)(v12 + 16);
      else
        v35 = (int *)(v34 + 4);
      v36 = *v35;
    }
    v32 = v36 == 0;
LABEL_133:
    v5 = !v32;
    goto LABEL_15;
  }
  v5 = v14 > 0.0 || v14 < 0.0;
LABEL_15:
  if (*((_DWORD *)v13 + 20))
  {
    result = (JSC::JSGlobalObject *)JSC::VM::hasExceptionsAfterHandlingTraps(v13);
    if ((_DWORD)result)
      goto LABEL_68;
  }
LABEL_16:
  WTF::AtomStringImpl::addLiteral();
  v16 = JSC::JSObject::get(v10, v8, (unint64_t)v47);
  if (v47)
  {
    if (*(_DWORD *)v47 == 2)
      WTF::StringImpl::destroy(v47, v15);
    else
      *(_DWORD *)v47 -= 2;
  }
  if (*((_DWORD *)v4 + 20))
  {
    result = (JSC::JSGlobalObject *)JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    if ((_DWORD)result)
      goto LABEL_68;
  }
  if (v16 == 10)
  {
    v6 = 0;
    goto LABEL_27;
  }
  v17 = (JSC::VM *)*((_QWORD *)v8 + 7);
  if (v16 >= 0xFFFE000000000000)
  {
    v37 = (_DWORD)v16 == 0;
    goto LABEL_137;
  }
  *(_QWORD *)&v18 = v16 - 0x2000000000000;
  if (v16 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
  {
    if (v18 <= 0.0)
    {
      v6 = v18 < 0.0;
      goto LABEL_26;
    }
    goto LABEL_124;
  }
  if ((v16 & 0xFFFE000000000002) != 0)
  {
    v6 = v16 == 7;
    goto LABEL_26;
  }
  v38 = *(unsigned __int8 *)(v16 + 5);
  if (v38 == 3)
  {
    v41 = *(_DWORD *)(v16 + 8);
LABEL_122:
    v37 = v41 == 0;
    goto LABEL_137;
  }
  if (v38 == 2)
  {
    v39 = *(_QWORD *)(v16 + 8);
    if ((v39 & 1) != 0)
      v40 = (int *)(v16 + 16);
    else
      v40 = (int *)(v39 + 4);
    v41 = *v40;
    goto LABEL_122;
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0xA) & 1) == 0)
  {
LABEL_124:
    v6 = 1;
    goto LABEL_26;
  }
  v37 = *(_QWORD *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x28) == (_QWORD)v8;
LABEL_137:
  v6 = !v37;
LABEL_26:
  if (*((_DWORD *)v17 + 20))
  {
    result = (JSC::JSGlobalObject *)JSC::VM::hasExceptionsAfterHandlingTraps(v17);
    if ((_DWORD)result)
      goto LABEL_68;
  }
LABEL_27:
  WTF::AtomStringImpl::addLiteral();
  v20 = JSC::JSObject::get(v10, v8, (unint64_t)v47);
  if (v47)
  {
    if (*(_DWORD *)v47 == 2)
      WTF::StringImpl::destroy(v47, v19);
    else
      *(_DWORD *)v47 -= 2;
  }
  if (*((_DWORD *)v4 + 20))
  {
    result = (JSC::JSGlobalObject *)JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    if ((_DWORD)result)
      goto LABEL_68;
  }
  if (v20 == 10)
  {
    v7 = 0;
    goto LABEL_38;
  }
  v21 = (JSC::VM *)*((_QWORD *)v8 + 7);
  if (v20 >= 0xFFFE000000000000)
  {
    v42 = (_DWORD)v20 == 0;
    goto LABEL_127;
  }
  *(_QWORD *)&v22 = v20 - 0x2000000000000;
  if (v20 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
  {
    if (v22 <= 0.0)
    {
      v7 = v22 < 0.0;
      goto LABEL_37;
    }
    goto LABEL_131;
  }
  if ((v20 & 0xFFFE000000000002) != 0)
  {
    v7 = v20 == 7;
    goto LABEL_37;
  }
  v43 = *(unsigned __int8 *)(v20 + 5);
  if (v43 == 3)
  {
    v46 = *(_DWORD *)(v20 + 8);
LABEL_126:
    v42 = v46 == 0;
    goto LABEL_127;
  }
  if (v43 == 2)
  {
    v44 = *(_QWORD *)(v20 + 8);
    if ((v44 & 1) != 0)
      v45 = (int *)(v20 + 16);
    else
      v45 = (int *)(v44 + 4);
    v46 = *v45;
    goto LABEL_126;
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE) + 0xA) & 1) == 0)
  {
LABEL_131:
    v7 = 1;
    goto LABEL_37;
  }
  v42 = *(_QWORD *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE) + 0x28) == (_QWORD)v8;
LABEL_127:
  v7 = !v42;
LABEL_37:
  if (*((_DWORD *)v21 + 20))
  {
    result = (JSC::JSGlobalObject *)JSC::VM::hasExceptionsAfterHandlingTraps(v21);
    if ((_DWORD)result)
      goto LABEL_68;
  }
LABEL_38:
  WTF::AtomStringImpl::addLiteral();
  result = (JSC::JSGlobalObject *)JSC::JSObject::get(v10, v8, (unint64_t)v47);
  v24 = (uint64_t)result;
  if (v47)
  {
    if (*(_DWORD *)v47 == 2)
      result = (JSC::JSGlobalObject *)WTF::StringImpl::destroy(v47, v23);
    else
      *(_DWORD *)v47 -= 2;
  }
  if (*((_DWORD *)v4 + 20))
  {
    result = (JSC::JSGlobalObject *)JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    if ((_DWORD)result)
      goto LABEL_68;
  }
  if (v24 == 10)
    goto LABEL_43;
  v51 = v24;
  v26 = (JSC::VM *)*((_QWORD *)v8 + 7);
  if ((v24 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v24 + 5) == 2)
  {
    v27 = *(WTF::StringImpl **)(v24 + 8);
    if ((v27 & 1) != 0)
    {
      v27 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v24, v8);
      if (!v27)
        goto LABEL_51;
    }
    else if (!v27)
    {
LABEL_51:
      v50 = v27;
      goto LABEL_52;
    }
    *(_DWORD *)v27 += 2;
    goto LABEL_51;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v51, v8);
LABEL_52:
  if (!*((_DWORD *)v26 + 20))
  {
    v25 = v50;
LABEL_54:
    v28 = 0;
    v48 = 0;
    v47 = 0;
    v29 = 1;
    goto LABEL_55;
  }
  v25 = v50;
  if (!JSC::VM::hasExceptionsAfterHandlingTraps(v26))
    goto LABEL_54;
  v28 = 1;
  v48 = 1;
  v50 = 0;
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v31);
    else
      *(_DWORD *)v25 -= 2;
  }
  v29 = 0;
  v25 = 0;
  *(_DWORD *)(a3 + 16) = 1;
LABEL_55:
  result = (JSC::JSGlobalObject *)((uint64_t (*)(uint64_t *, WTF::StringImpl **))off_1E32BEA70[v28])(&v51, &v47);
  if (v29)
    goto LABEL_44;
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      return (JSC::JSGlobalObject *)WTF::StringImpl::destroy(v25, v30);
    else
      *(_DWORD *)v25 -= 2;
  }
  return result;
}

uint64_t WebCore::JSMutationCallback::handleEvent(uint64_t a1, void *a2, uint64_t a3, WebCore::MutationObserver *a4)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  objc_class *v11;
  JSValue v12;
  int v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  JSC::Structure *v17;
  uint64_t v18;
  uint64_t *v19;
  _QWORD *v21;
  char v22[8];
  uint64_t v23;
  WTF *v24;
  _OWORD v25[4];
  uint64_t v26;
  _BYTE v27[8];
  objc_class *v28;

  if (!WebCore::ActiveDOMCallback::canInvokeCallback((WebCore::ActiveDOMCallback *)a1, a2))
    return 2;
  ++*(_DWORD *)(a1 + 16);
  v8 = **(_QWORD **)(a1 + 24);
  if (!v8 || (*(_BYTE *)(v8 + 8) & 3) != 0)
    v9 = 0;
  else
    v9 = *(_QWORD *)v8;
  MEMORY[0x19AEA3294](v27, *(_QWORD *)(v9 + 56));
  v10 = WebCore::wrap<WebCore::MutationObserver>(v9, (WebCore::MutationObserver *)a2);
  v22[0] = 0;
  v24 = (WTF *)((char *)v25 + 8);
  memset(v25, 0, sizeof(v25));
  v26 = 0;
  *((_QWORD *)&v25[0] + 1) = WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLInterface<WebCore::MutationRecord>>>::convert<WTF::Ref<WebCore::MutationRecord,WTF::RawPtrTraits<WebCore::MutationRecord>,WTF::DefaultRefDerefTraits<WebCore::MutationRecord>>,0ul>(v9, v9, a3);
  v23 = 0x800000001;
  v11 = (objc_class *)WebCore::wrap<WebCore::MutationObserver>(v9, a4);
  v12.super.isa = v11;
  v13 = v23;
  if ((_DWORD)v23 == HIDWORD(v23) || v24 != (WTF *)((char *)v25 + 8) && v24)
  {
    if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v23, v12) == 1)
      v22[0] = 1;
  }
  else
  {
    *((_QWORD *)v24 + v23) = v11;
    LODWORD(v23) = v13 + 1;
  }
  v28 = 0;
  v14 = *(uint64_t **)(a1 + 24);
  v15 = *v14;
  if (*v14
    && (*(_BYTE *)(v15 + 8) & 3) == 0
    && *(_QWORD *)v15
    && ((v16 = v14[2]) == 0 || (*(_BYTE *)(v16 + 8) & 3) != 0 ? (v17 = 0) : (v17 = *(JSC::Structure **)v16),
        WebCore::JSCallbackData::invokeCallback(*(JSC::JSGlobalObject **)v15, v17, v10, (uint64_t)v22, 0, 0, (uint64_t *)&v28), (v12.super.isa = v28) != 0))
  {
    WebCore::reportException(*(JSC::JSGlobalObject **)(16 * (***(_DWORD ***)(*(_QWORD *)(a1 + 24) + 16) & 0xFFFFFFFE) + 0x28), (uint64_t)v28, 0, 0, 0);
    v18 = 1;
  }
  else
  {
    v18 = 0;
  }
  v19 = *(uint64_t **)&v25[0];
  if (*(_QWORD *)&v25[0])
  {
    v28 = (objc_class *)&v23;
    v21 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v25[0], (uint64_t *)&v28);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v19, v21);
  }
  if (v24 != (WTF *)((char *)v25 + 8) && v24)
    WTF::fastFree(v24, v12.super.isa);
  MEMORY[0x19AEA32A0](v27);
  if (*(_DWORD *)(a1 + 16) == 1)
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
  else
    --*(_DWORD *)(a1 + 16);
  return v18;
}

uint64_t WebCore::JSMutationEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSMutationEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSMutationEventPrototype::create(WebCore::JSMutationEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<10u>(this, (uint64_t)&WebCore::JSMutationEvent::s_info, (uint64_t)&WebCore::JSMutationEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSMutationEvent>,(WebCore::DOMConstructorID)462>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3696);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSMutationEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSMutationEvent::s_info + ~((_QWORD)&WebCore::JSMutationEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSMutationEvent::s_info + ~((_QWORD)&WebCore::JSMutationEvent::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSMutationEvent::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSMutationEvent::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEvent::prototype((WebCore::JSEvent *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSMutationEventPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSMutationEventPrototype::create((WebCore::JSMutationEventPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSMutationEvent::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSMutationEvent::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  JSC::reifyStaticProperties<3u>((JSC::VM *)a1, (uint64_t)&WebCore::JSMutationEvent::s_info, &WebCore::JSMutationEventConstructorTableValues, (JSC::JSObject *)v2);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3696) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsMutationEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSMutationEventPrototype::s_info != (char **)(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSMutationEvent>,(WebCore::DOMConstructorID)462>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsMutationEvent_relatedNode(WebCore::DOMWrapperWorld **a1, uint64_t a2, uint64_t a3, WebCore::Document *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t Wrapper;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  void *v16;
  WebCore::Node *v17;
  WebCore::Node *v19;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 72);
  if (!v4)
    return 2;
  v5 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  if (*(_BYTE *)(v5 + 3328))
  {
    v6 = *(_QWORD *)(v4 + 8);
    if (v6)
    {
LABEL_4:
      if ((*(_BYTE *)(v6 + 8) & 3) == 0)
      {
        Wrapper = *(_QWORD *)v6;
        if (*(_QWORD *)v6)
          return Wrapper;
      }
    }
  }
  else
  {
    v8 = *(_QWORD *)(*(_QWORD *)(v5 + 3320) + 32);
    if (v8)
    {
      v9 = *(_DWORD *)(v8 - 8);
      v10 = (~(v4 << 32) + v4) ^ ((unint64_t)(~(v4 << 32) + v4) >> 22);
      v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
      v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
      v13 = v9 & ((v12 >> 31) ^ v12);
      v14 = *(_QWORD *)(v8 + 16 * v13);
      if (v14 == v4)
      {
LABEL_13:
        v6 = *(_QWORD *)(v8 + 16 * v13 + 8);
        if (v6)
          goto LABEL_4;
      }
      else
      {
        v15 = 1;
        while (v14)
        {
          v13 = ((_DWORD)v13 + v15) & v9;
          v14 = *(_QWORD *)(v8 + 16 * v13);
          ++v15;
          if (v14 == v4)
            goto LABEL_13;
        }
      }
    }
  }
  *(_DWORD *)(v4 + 24) += 2;
  v19 = (WebCore::Node *)v4;
  Wrapper = WebCore::createWrapper(a1, (JSC::VM *)v5, (WebCore::JSDOMGlobalObject *)&v19, a4);
  v17 = v19;
  v19 = 0;
  if (v17)
  {
    if (*((_DWORD *)v17 + 6) == 2)
    {
      if ((*((_WORD *)v17 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v17, v16);
    }
    else
    {
      *((_DWORD *)v17 + 6) -= 2;
    }
  }
  return Wrapper;
}

uint64_t WebCore::jsMutationEvent_prevValue(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 80);
  if (!v4)
    return *v3;
  v5 = *(_DWORD *)v4;
  v6 = *(_DWORD *)(v4 + 4);
  *(_DWORD *)v4 += 2;
  if (v6)
  {
    if (v6 != 1)
    {
LABEL_4:
      v7 = *(_QWORD *)(v2 + 64760);
      if (!v7 || v4 != *(_QWORD *)(v7 + 8))
      {
        v7 = JSC::jsStringWithCacheSlowCase();
        v5 = *(_DWORD *)v4 - 2;
      }
      goto LABEL_7;
    }
    v9 = *(unsigned __int8 **)(v4 + 8);
    if ((*(_BYTE *)(v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
        goto LABEL_4;
      v10 = v11;
    }
    v7 = *(_QWORD *)(v2 + 8 * v10 + 42216);
  }
  else
  {
    v7 = *v3;
  }
LABEL_7:
  if (v5)
    *(_DWORD *)v4 = v5;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, a2);
  return v7;
}

uint64_t WebCore::jsMutationEvent_newValue(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 88);
  if (!v4)
    return *v3;
  v5 = *(_DWORD *)v4;
  v6 = *(_DWORD *)(v4 + 4);
  *(_DWORD *)v4 += 2;
  if (v6)
  {
    if (v6 != 1)
    {
LABEL_4:
      v7 = *(_QWORD *)(v2 + 64760);
      if (!v7 || v4 != *(_QWORD *)(v7 + 8))
      {
        v7 = JSC::jsStringWithCacheSlowCase();
        v5 = *(_DWORD *)v4 - 2;
      }
      goto LABEL_7;
    }
    v9 = *(unsigned __int8 **)(v4 + 8);
    if ((*(_BYTE *)(v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
        goto LABEL_4;
      v10 = v11;
    }
    v7 = *(_QWORD *)(v2 + 8 * v10 + 42216);
  }
  else
  {
    v7 = *v3;
  }
LABEL_7:
  if (v5)
    *(_DWORD *)v4 = v5;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, a2);
  return v7;
}

uint64_t WebCore::jsMutationEvent_attrName(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 96);
  if (!v4)
    return *v3;
  v5 = *(_DWORD *)v4;
  v6 = *(_DWORD *)(v4 + 4);
  *(_DWORD *)v4 += 2;
  if (v6)
  {
    if (v6 != 1)
    {
LABEL_4:
      v7 = *(_QWORD *)(v2 + 64760);
      if (!v7 || v4 != *(_QWORD *)(v7 + 8))
      {
        v7 = JSC::jsStringWithCacheSlowCase();
        v5 = *(_DWORD *)v4 - 2;
      }
      goto LABEL_7;
    }
    v9 = *(unsigned __int8 **)(v4 + 8);
    if ((*(_BYTE *)(v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
        goto LABEL_4;
      v10 = v11;
    }
    v7 = *(_QWORD *)(v2 + 8 * v10 + 42216);
  }
  else
  {
    v7 = *v3;
  }
LABEL_7:
  if (v5)
    *(_DWORD *)v4 = v5;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, a2);
  return v7;
}

unint64_t WebCore::jsMutationEvent_attrChange(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int16 *)(*(_QWORD *)(a2 + 24) + 104) | 0xFFFE000000000000;
}

uint64_t WebCore::JSMutationEvent::subspaceForImpl(WebCore::JSMutationEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3776);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3776))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3776);
    *(_QWORD *)(v8 + 3776) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3776);
  *(_QWORD *)(v3 + 3776) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSMutationObserver::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 88);
  if (!v2 || !*(_BYTE *)(v2 + 24))
    return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(a1 + 24) + 8) + 24))(*(_QWORD *)(*(_QWORD *)(a1 + 24) + 8));
  result = 75;
  __break(0xC471u);
  return result;
}

uint64_t WebCore::convert<WebCore::IDLSequence<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>>(uint64_t a1, JSC::JSGlobalObject *a2, uint64_t a3)
{
  uint64_t result;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;

  if ((a3 & 0xFFFE000000000002) == 0 && *(unsigned __int8 *)(a3 + 5) > 0x16u)
    return WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>>::convert(a2, a3, a1);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  JSC::throwTypeError();
  result = (uint64_t)v6;
  if (v6)
  {
    if (*(_DWORD *)v6 == 2)
      result = WTF::StringImpl::destroy(v6, v5);
    else
      *(_DWORD *)v6 -= 2;
  }
  *(_DWORD *)(a1 + 16) = 1;
  return result;
}

uint64_t std::optional<WTF::Vector<WTF::AtomString,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>>::operator=[abi:sn180100]<WTF::Vector<WTF::AtomString,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>,void>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v4;
  WTF *v5;
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl **v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl **v13;

  if (*(_BYTE *)(a1 + 16))
  {
    v4 = *(unsigned int *)(a1 + 12);
    if ((_DWORD)v4)
    {
      v9 = *(WTF::StringImpl ***)a1;
      v10 = 8 * v4;
      do
      {
        v11 = *v9;
        *v9 = 0;
        if (v11)
        {
          if (*(_DWORD *)v11 == 2)
          {
            v12 = v10;
            v13 = v9;
            WTF::StringImpl::destroy(v11, a2);
            v10 = v12;
            v9 = v13;
          }
          else
          {
            *(_DWORD *)v11 -= 2;
          }
        }
        ++v9;
        v10 -= 8;
      }
      while (v10);
    }
    v5 = *(WTF **)a1;
    if (*(_QWORD *)a1)
    {
      *(_QWORD *)a1 = 0;
      *(_DWORD *)(a1 + 8) = 0;
      WTF::fastFree(v5, a2);
    }
    v6 = *(_QWORD *)a2;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)a1 = v6;
    LODWORD(v6) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = 0;
    *(_DWORD *)(a1 + 8) = v6;
    LODWORD(v6) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = 0;
    *(_DWORD *)(a1 + 12) = v6;
  }
  else
  {
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    v7 = *(_QWORD *)a2;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)a1 = v7;
    LODWORD(v7) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = 0;
    *(_DWORD *)(a1 + 8) = v7;
    LODWORD(v7) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = 0;
    *(_DWORD *)(a1 + 12) = v7;
    *(_BYTE *)(a1 + 16) = 1;
  }
  return a1;
}

uint64_t WebCore::JSMutationObserver::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSMutationObserver::visitChildren(WebCore::JSMutationObserver *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    JSC::JSObject::visitChildren();
    result = (*(uint64_t (**)(_QWORD, JSC::JSCell *))(**(_QWORD **)(*((_QWORD *)this + 3) + 8) + 24))(*(_QWORD *)(*((_QWORD *)this + 3) + 8), a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSMutationObserverPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSMutationObserverPrototype::create(WebCore::JSMutationObserverPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSMutationObserver::s_info, &WebCore::JSMutationObserverPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSMutationObserver>,(WebCore::DOMConstructorID)463>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v6;
  JSC::JSCell *v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char **v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3704);
  if (v2)
    return v2;
  v6 = (uint64_t *)(a1 + 40136);
  v7 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v7 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v7);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v6;
  if (*v6 < (unint64_t)v6[1])
    goto LABEL_7;
  SlowCase = v6[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v6[3];
    v6[1] = SlowCase + HIDWORD(v32);
    v6[2] = SlowCase + (int)v32;
LABEL_7:
    *v6 = SlowCase + 128;
    goto LABEL_8;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_8:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v34, &WebCore::JSDOMConstructor<WebCore::JSMutationObserver>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v6[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_11;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v33);
    v10[2848] = v2 + (int)v33;
LABEL_11:
    v10[2846] = v2 + 48;
    goto LABEL_12;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_12:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v6[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v34);
  v14 = v34;
  v34 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v6[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v34);
  v16 = *(_QWORD *)(v6[227] + 2160);
  v17 = *(_QWORD *)(a2 + 3296);
  if (v17)
  {
    v18 = *(_DWORD *)(v17 - 8);
    v19 = ((unint64_t)&WebCore::JSMutationObserver::s_info + ~((_QWORD)&WebCore::JSMutationObserver::s_info << 32)) ^ (((unint64_t)&WebCore::JSMutationObserver::s_info + ~((_QWORD)&WebCore::JSMutationObserver::s_info << 32)) >> 22);
    v20 = 9 * ((v19 + ~(v19 << 13)) ^ ((v19 + ~(v19 << 13)) >> 8));
    v21 = (v20 ^ (v20 >> 15)) + ~((v20 ^ (v20 >> 15)) << 27);
    v22 = v18 & ((v21 >> 31) ^ v21);
    v23 = *(char ***)(v17 + 16 * v22);
    if (v23 == &WebCore::JSMutationObserver::s_info)
    {
LABEL_18:
      v24 = *(_QWORD *)(v17 + 16 * v22 + 8);
      if (v24)
        goto LABEL_20;
    }
    else
    {
      v31 = 1;
      while (v23)
      {
        v22 = ((_DWORD)v22 + v31) & v18;
        v23 = *(char ***)(v17 + 16 * v22);
        ++v31;
        if (v23 == &WebCore::JSMutationObserver::s_info)
          goto LABEL_18;
      }
    }
  }
  Structure = WebCore::JSMutationObserverPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSMutationObserverPrototype::create((WebCore::JSMutationObserverPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSMutationObserver::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSMutationObserver::s_info);
LABEL_20:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3704) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsMutationObserverConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSMutationObserverPrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSMutationObserver>,(WebCore::DOMConstructorID)463>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::createWrapper<WebCore::MutationObserver,WebCore::MutationObserver>(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  unint64_t v12;
  uint64_t *v13;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v15;
  JSC::Structure *v16;
  JSC::JSCell *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t SlowCase;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *Allocator;
  int v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  WTF *v35;
  void *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;

  v4 = *a2;
  v5 = *(_QWORD *)(a1 + 3296);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSMutationObserver::s_info + ~((_QWORD)&WebCore::JSMutationObserver::s_info << 32)) ^ (((unint64_t)&WebCore::JSMutationObserver::s_info + ~((_QWORD)&WebCore::JSMutationObserver::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSMutationObserver::s_info)
    {
LABEL_3:
      v12 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v12)
        goto LABEL_5;
    }
    else
    {
      v30 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v30) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v30;
        if (v11 == &WebCore::JSMutationObserver::s_info)
          goto LABEL_3;
      }
    }
  }
  v13 = *(uint64_t **)(a1 + 56);
  Structure = WebCore::JSMutationObserverPrototype::createStructure(v13, a1, *(JSC::JSCell **)(a1 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v17 = (JSC::JSCell *)WebCore::JSMutationObserverPrototype::create((WebCore::JSMutationObserverPrototype *)v13, Structure, v15, v16);
  v18 = WebCore::JSMutationObserver::createStructure(v13, a1, v17);
  v12 = WebCore::cacheDOMStructure((JSCell *)a1, v18, (uint64_t)&WebCore::JSMutationObserver::s_info);
LABEL_5:
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_QWORD *)(v19 + 41456);
  v21 = *(_QWORD *)(v20 + 23536);
  v22 = *(_QWORD **)(v21 + 3784);
  if (v22)
    goto LABEL_6;
  v31 = *(_QWORD *)(v20 + 22648);
  if (__ldaxr((unsigned __int8 *)v31))
  {
    __clrex();
LABEL_28:
    MEMORY[0x19AEA534C](v31);
    goto LABEL_29;
  }
  if (__stxr(1u, (unsigned __int8 *)v31))
    goto LABEL_28;
LABEL_29:
  v33 = *(_QWORD *)(v31 + 2824);
  v44 = *(_QWORD **)(v33 + 3784);
  if (!v44)
  {
    v42 = 32;
    std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", v19 + 192, v19 + 1872, &v42, JSC::JSCell::numberOfLowerTierCells, (uint64_t *)&v43);
    v38 = (uint64_t)v43;
    v44 = v43;
    v39 = *(_QWORD *)(v33 + 3784);
    *(_QWORD *)(v33 + 3784) = v43;
    if (v39)
      (*(void (**)(uint64_t))(*(_QWORD *)v39 + 8))(v39);
    v40 = *(unsigned int *)(v31 + 2844);
    if ((_DWORD)v40 == *(_DWORD *)(v31 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v31 + 2832, (unint64_t)&v44);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v31 + 2832) + 8 * v40) = v38;
      *(_DWORD *)(v31 + 2844) = v40 + 1;
    }
  }
  v22 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v34 = *(_QWORD *)(v21 + 3784);
  *(_QWORD *)(v21 + 3784) = v22;
  if (v34)
  {
    v35 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v35, v36);
  }
  v37 = __ldxr((unsigned __int8 *)v31);
  if (v37 != 1)
  {
    __clrex();
    goto LABEL_36;
  }
  if (__stlxr(0, (unsigned __int8 *)v31))
LABEL_36:
    WTF::Lock::unlockSlow((WTF::Lock *)v31);
LABEL_6:
  SlowCase = v22[3];
  if (SlowCase < v22[4])
  {
LABEL_7:
    v22[3] = SlowCase + 32;
    goto LABEL_8;
  }
  SlowCase = v22[5];
  if ((SlowCase & 1) == 0)
  {
    v41 = *(_QWORD *)(SlowCase + 8) ^ v22[6];
    v22[4] = SlowCase + HIDWORD(v41);
    v22[5] = SlowCase + (int)v41;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_8:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v12);
  v24 = *a2;
  *a2 = 0;
  *(_QWORD *)(SlowCase + 24) = v24;
  if (*(_BYTE *)(v19 + 755))
    __dmb(0xAu);
  v25 = *(_QWORD *)(a1 + 3320);
  if ((byte_1EE336168 & 1) == 0)
  {
    qword_1EE336160 = (uint64_t)&off_1E3393630;
    byte_1EE336168 = 1;
  }
  v44 = (_QWORD *)v4;
  if ((SlowCase & 8) != 0)
    v26 = (SlowCase - 112) | 1;
  else
    v26 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v26 & 1) != 0)
    v27 = v26 + 47;
  else
    v27 = *(_QWORD *)v26 + 32;
  Allocator = *(_QWORD **)(v27 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v27 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE336160;
  Allocator[2] = v25;
  v43 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v25 + 32), (uint64_t *)&v44, (uint64_t *)&v43);
  if (v43)
    v43[1] = 3;
  return SlowCase;
}

uint64_t WebCore::JSMutationRecord::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 88);
  if (!v2 || !*(_BYTE *)(v2 + 24))
    return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 24) + 88))(*(_QWORD *)(a1 + 24));
  result = 75;
  __break(0xC471u);
  return result;
}

WTF::StringImpl *WebCore::JSMutationRecordPrototype::finishCreation(WebCore::JSMutationRecordPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<10u>(a2, (uint64_t)&WebCore::JSMutationRecord::s_info, (uint64_t)&WebCore::JSMutationRecordPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSMutationRecord::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSMutationRecord::visitChildren(WebCore::JSMutationRecord *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    JSC::JSObject::visitChildren();
    result = (*(uint64_t (**)(_QWORD, JSC::JSCell *))(**((_QWORD **)this + 3) + 88))(*((_QWORD *)this + 3), a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

unint64_t WebCore::JSMutationRecord::createPrototype(WebCore::JSMutationRecord *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t v4;
  WebCore::JSDOMGlobalObject *v5;
  JSC::Structure *v6;

  v4 = JSC::Structure::create((uint64_t *)this, (int)a2, a2[82]);
  *(_DWORD *)(v4 + 16) |= 0x80000u;
  return WebCore::JSMutationRecordPrototype::create(this, v4, v5, v6);
}

unint64_t WebCore::JSMutationRecordPrototype::create(WebCore::JSMutationRecordPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSMutationRecordPrototype::finishCreation((WebCore::JSMutationRecordPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSMutationRecord>,(WebCore::DOMConstructorID)464>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v18;
  unint64_t v19;
  WTF::StringImpl *v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3712);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v20) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v18 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v18);
    v5[2] = SlowCase + (int)v18;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v20, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSMutationRecord>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 >= v9[2847])
  {
    v2 = v9[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v19 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v19);
    v9[2848] = v2 + (int)v19;
  }
  v9[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v20 = 0;
  v21 = v2;
  v22 = -1;
  v23 = 0x1000000;
  v24 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v20);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v20);
  v13 = v20;
  v20 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v20 = 0;
  v21 = v2;
  v22 = -1;
  v23 = 0x1000000;
  v24 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v20);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSMutationRecord>((WebCore::JSMutationRecord *)a1, (JSC::JSCell **)a2)+ 48);
  v20 = 0;
  v21 = v2;
  v22 = -1;
  v23 = 0x1000000;
  v24 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v16, 14, (uint64_t)&v20);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3712) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsMutationRecordConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSMutationRecordPrototype::s_info != (char **)(16
                                                              * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSMutationRecord>,(WebCore::DOMConstructorID)464>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsMutationRecord_addedNodes(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v3 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 32))(*(_QWORD *)(a2 + 24));
  return WebCore::JSConverter<WebCore::IDLInterface<WebCore::NodeList>>::convert<WebCore::NodeList*>(v2, v3);
}

uint64_t WebCore::jsMutationRecord_removedNodes(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v3 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 40))(*(_QWORD *)(a2 + 24));
  return WebCore::JSConverter<WebCore::IDLInterface<WebCore::NodeList>>::convert<WebCore::NodeList*>(v2, v3);
}

uint64_t WebCore::jsMutationRecord_previousSibling(WebCore::DOMWrapperWorld **a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  WebCore::Document *v5;
  uint64_t v6;
  unint64_t Wrapper;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  void *v16;
  WebCore::Node *v17;
  WebCore::Node *v19;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 48))(*(_QWORD *)(a2 + 24));
  if (!v4)
    return 2;
  if (*(_BYTE *)(v3 + 3328))
  {
    v6 = *(_QWORD *)(v4 + 8);
    if (v6)
    {
LABEL_4:
      if ((*(_BYTE *)(v6 + 8) & 3) == 0)
      {
        Wrapper = *(_QWORD *)v6;
        if (*(_QWORD *)v6)
          return Wrapper;
      }
    }
  }
  else
  {
    v8 = *(_QWORD *)(*(_QWORD *)(v3 + 3320) + 32);
    if (v8)
    {
      v9 = *(_DWORD *)(v8 - 8);
      v10 = (~(v4 << 32) + v4) ^ ((unint64_t)(~(v4 << 32) + v4) >> 22);
      v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
      v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
      v13 = v9 & ((v12 >> 31) ^ v12);
      v14 = *(_QWORD *)(v8 + 16 * v13);
      if (v14 == v4)
      {
LABEL_13:
        v6 = *(_QWORD *)(v8 + 16 * v13 + 8);
        if (v6)
          goto LABEL_4;
      }
      else
      {
        v15 = 1;
        while (v14)
        {
          v13 = ((_DWORD)v13 + v15) & v9;
          v14 = *(_QWORD *)(v8 + 16 * v13);
          ++v15;
          if (v14 == v4)
            goto LABEL_13;
        }
      }
    }
  }
  *(_DWORD *)(v4 + 24) += 2;
  v19 = (WebCore::Node *)v4;
  Wrapper = WebCore::createWrapper(a1, (JSC::VM *)v3, (WebCore::JSDOMGlobalObject *)&v19, v5);
  v17 = v19;
  v19 = 0;
  if (v17)
  {
    if (*((_DWORD *)v17 + 6) == 2)
    {
      if ((*((_WORD *)v17 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v17, v16);
    }
    else
    {
      *((_DWORD *)v17 + 6) -= 2;
    }
  }
  return Wrapper;
}

uint64_t WebCore::jsMutationRecord_nextSibling(WebCore::DOMWrapperWorld **a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  WebCore::Document *v5;
  uint64_t v6;
  unint64_t Wrapper;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  void *v16;
  WebCore::Node *v17;
  WebCore::Node *v19;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 56))(*(_QWORD *)(a2 + 24));
  if (!v4)
    return 2;
  if (*(_BYTE *)(v3 + 3328))
  {
    v6 = *(_QWORD *)(v4 + 8);
    if (v6)
    {
LABEL_4:
      if ((*(_BYTE *)(v6 + 8) & 3) == 0)
      {
        Wrapper = *(_QWORD *)v6;
        if (*(_QWORD *)v6)
          return Wrapper;
      }
    }
  }
  else
  {
    v8 = *(_QWORD *)(*(_QWORD *)(v3 + 3320) + 32);
    if (v8)
    {
      v9 = *(_DWORD *)(v8 - 8);
      v10 = (~(v4 << 32) + v4) ^ ((unint64_t)(~(v4 << 32) + v4) >> 22);
      v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
      v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
      v13 = v9 & ((v12 >> 31) ^ v12);
      v14 = *(_QWORD *)(v8 + 16 * v13);
      if (v14 == v4)
      {
LABEL_13:
        v6 = *(_QWORD *)(v8 + 16 * v13 + 8);
        if (v6)
          goto LABEL_4;
      }
      else
      {
        v15 = 1;
        while (v14)
        {
          v13 = ((_DWORD)v13 + v15) & v9;
          v14 = *(_QWORD *)(v8 + 16 * v13);
          ++v15;
          if (v14 == v4)
            goto LABEL_13;
        }
      }
    }
  }
  *(_DWORD *)(v4 + 24) += 2;
  v19 = (WebCore::Node *)v4;
  Wrapper = WebCore::createWrapper(a1, (JSC::VM *)v3, (WebCore::JSDOMGlobalObject *)&v19, v5);
  v17 = v19;
  v19 = 0;
  if (v17)
  {
    if (*((_DWORD *)v17 + 6) == 2)
    {
      if ((*((_WORD *)v17 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v17, v16);
    }
    else
    {
      *((_DWORD *)v17 + 6) -= 2;
    }
  }
  return Wrapper;
}

uint64_t WebCore::jsMutationRecord_attributeName(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v3 = *(_QWORD *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 64))(*(_QWORD *)(a2 + 24));
  if (!v3)
    return 2;
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_DWORD *)(v3 + 4);
  if (!v5)
    return *(_QWORD *)(v4 + 41968);
  if (v5 == 1)
  {
    v8 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    return *(_QWORD *)(v4 + 8 * v9 + 42216);
  }
LABEL_4:
  v6 = *(_QWORD *)(v4 + 64760);
  if (!v6 || v3 != *(_QWORD *)(v6 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v6;
}

uint64_t WebCore::jsMutationRecord_attributeNamespace(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v3 = *(_QWORD *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 72))(*(_QWORD *)(a2 + 24));
  if (!v3)
    return 2;
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_DWORD *)(v3 + 4);
  if (!v5)
    return *(_QWORD *)(v4 + 41968);
  if (v5 == 1)
  {
    v8 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    return *(_QWORD *)(v4 + 8 * v9 + 42216);
  }
LABEL_4:
  v6 = *(_QWORD *)(v4 + 64760);
  if (!v6 || v3 != *(_QWORD *)(v6 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v6;
}

uint64_t WebCore::jsMutationRecord_oldValue(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  uint64_t *v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;
  WTF::StringImpl *v12;

  (*(void (**)(WTF::StringImpl **__return_ptr))(**(_QWORD **)(a2 + 24) + 80))(&v12);
  v3 = v12;
  if (!v12)
    return 2;
  v4 = *(_QWORD *)(a1 + 56);
  v5 = (uint64_t *)(v4 + 41968);
  v6 = *((_DWORD *)v12 + 1);
  if (!v6)
    goto LABEL_14;
  if (v6 == 1)
  {
    v8 = (unsigned __int8 *)*((_QWORD *)v12 + 1);
    if ((*((_BYTE *)v12 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v5 = (uint64_t *)(v4 + 8 * v9 + 42216);
LABEL_14:
    v7 = *v5;
    goto LABEL_15;
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v12 != *(WTF::StringImpl **)(v7 + 8))
  {
    v7 = JSC::jsStringWithCacheSlowCase();
    v3 = v12;
    v12 = 0;
    if (!v3)
      return v7;
    goto LABEL_16;
  }
LABEL_15:
  v12 = 0;
LABEL_16:
  if (*(_DWORD *)v3 == 2)
    WTF::StringImpl::destroy(v3, v3);
  else
    *(_DWORD *)v3 -= 2;
  return v7;
}

uint64_t WebCore::JSMutationRecordOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

uint64_t WebCore::createWrapper<WebCore::MutationRecord,WebCore::MutationRecord>(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *a2;
  v5 = WebCore::getDOMStructure<WebCore::JSMutationRecord>(*(WebCore::JSMutationRecord **)(a1 + 56), (JSC::JSCell **)a1);
  v6 = WebCore::JSMutationRecord::create(v5, (JSC::VM *)a1, a2);
  WebCore::cacheWrapper<WebCore::MutationRecord,WebCore::JSMutationRecord>(*(_QWORD *)(a1 + 3320), v4, v6);
  return v6;
}

_DWORD *WebCore::JSNVShaderNoperspectiveInterpolation::destroy(WebCore::JSNVShaderNoperspectiveInterpolation *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[2];
  }
  return result;
}

uint64_t WebCore::JSNVShaderNoperspectiveInterpolation::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSNVShaderNoperspectiveInterpolationOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  unint64_t v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  if (a5)
  {
    *a5 = "Reachable from jsNVShaderNoperspectiveInterpolation";
    a5[1] = 52;
  }
  v6 = atomic_load((unint64_t *)(v5 + 16));
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) == v8)
  {
    v17 = a4;
    v18 = v6;
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, (void *)v6);
    a4 = v17;
    v6 = v18;
    if ((_DWORD)result)
    {
LABEL_12:
      if (*(_BYTE *)(a4 + 131))
        (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)a4 + 152))(a4, v6);
      return 1;
    }
  }
  else
  {
    v9 = v8[1];
    v10 = (v6 + ~(v6 << 32)) ^ ((v6 + ~(v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(_QWORD *)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v15 == v6)
        goto LABEL_12;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x194D58BBCLL);
      }
    }
  }
  return result;
}

_QWORD *WebCore::JSNVShaderNoperspectiveInterpolationOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _QWORD *result;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  ++v3[2];
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_DWORD **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_DWORD **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (v3[2] == 1)
    return (_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
  --v3[2];
  return result;
}

unint64_t WebCore::wrap<WebCore::NVShaderNoperspectiveInterpolation>(uint64_t a1, uint64_t a2, WTF::StringImpl *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  JSC::JSCell *v26;
  JSC::JSObject *Object;
  uint64_t *v28;
  unint64_t SlowCase;
  uint64_t v30;
  int v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  JSC::Structure *v36;
  int v37;
  JSC::JSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  WTF *v50;
  uint64_t v51;
  uint64_t v52;
  WTF *v53;
  void *v54;
  int v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  JSC::Structure *Allocator;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  WTF::StringImpl *v66[6];
  int v67;
  int v68;
  int v69;
  JSC::Structure *v70;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          v14 = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return v14;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*((_DWORD *)a3 + 2);
  if (*(void (***)(WebCore::NVShaderNoperspectiveInterpolation *__hidden))a3 != off_1E33DD138)
  {
    __break(0xC471u);
    JUMPOUT(0x194D59388);
  }
  v15 = *(_QWORD *)(a2 + 3296);
  if (v15)
  {
    v16 = *(_DWORD *)(v15 - 8);
    v17 = ((unint64_t)&WebCore::JSNVShaderNoperspectiveInterpolation::s_info
         + ~((_QWORD)&WebCore::JSNVShaderNoperspectiveInterpolation::s_info << 32)) ^ (((unint64_t)&WebCore::JSNVShaderNoperspectiveInterpolation::s_info
                                                                                      + ~((_QWORD)&WebCore::JSNVShaderNoperspectiveInterpolation::s_info << 32)) >> 22);
    v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
    v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
    v20 = v16 & ((v19 >> 31) ^ v19);
    v21 = *(char ***)(v15 + 16 * v20);
    if (v21 == &WebCore::JSNVShaderNoperspectiveInterpolation::s_info)
    {
LABEL_15:
      v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
      if (v23)
        goto LABEL_38;
    }
    else
    {
      v22 = 1;
      while (v21)
      {
        v20 = ((_DWORD)v20 + v22) & v16;
        v21 = *(char ***)(v15 + 16 * v20);
        ++v22;
        if (v21 == &WebCore::JSNVShaderNoperspectiveInterpolation::s_info)
          goto LABEL_15;
      }
    }
  }
  v24 = *(_QWORD *)(a2 + 56);
  v25 = (unint64_t *)(v24 + 40136);
  v26 = *(JSC::JSCell **)(a2 + 656);
  LODWORD(v66[0]) = 23;
  if (((unint64_t)v26 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v26);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)v24);
  }
  v28 = (uint64_t *)(v24 + 38904);
  SlowCase = *v25;
  if (*v25 < *(_QWORD *)(v24 + 40144))
    goto LABEL_20;
  SlowCase = *(_QWORD *)(v24 + 40152);
  if ((SlowCase & 1) == 0)
  {
    v62 = *(_QWORD *)(SlowCase + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = SlowCase + HIDWORD(v62);
    *(_QWORD *)(v24 + 40152) = SlowCase + (int)v62;
LABEL_20:
    *v25 = SlowCase + 128;
    goto LABEL_21;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_21:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, v24, a2, v26, v66, &WebCore::JSNVShaderNoperspectiveInterpolationPrototype::s_info, 0, 0);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v30 = *v28;
  if (*(_QWORD *)(v24 + 38904) < *(_QWORD *)(v24 + 38912))
    goto LABEL_24;
  v30 = *(_QWORD *)(v24 + 38920);
  if ((v30 & 1) == 0)
  {
    v63 = *(_QWORD *)(v30 + 8) ^ *(_QWORD *)(v24 + 38928);
    *(_QWORD *)(v24 + 38912) = v30 + HIDWORD(v63);
    *(_QWORD *)(v24 + 38920) = v30 + (int)v63;
LABEL_24:
    *v28 = v30 + 16;
    goto LABEL_25;
  }
  JSC::sanitizeStackForVM();
  v30 = JSC::LocalAllocator::allocateSlowCase();
LABEL_25:
  *(_DWORD *)v30 = 0;
  v31 = *(_DWORD *)(SlowCase + 8);
  *(_DWORD *)v30 = SlowCase >> 4;
  *(_DWORD *)(v30 + 4) = v31;
  v65 = SlowCase;
  *(_QWORD *)(v30 + 8) = 0;
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v32 = *(_QWORD *)(*(_QWORD *)(v24 + 41952) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v34 = JSC::JSString::create(v24, v66);
  v35 = v66[0];
  v66[0] = 0;
  if (v35)
  {
    if (*(_DWORD *)v35 == 2)
      WTF::StringImpl::destroy(v35, v33);
    else
      *(_DWORD *)v35 -= 2;
  }
  v36 = (JSC::Structure *)(16 * (*(_DWORD *)v30 & 0xFFFFFFFE));
  v69 = *(_DWORD *)v30;
  v70 = v36;
  v37 = JSC::Structure::outOfLineCapacity(v36);
  v67 = 0;
  v68 = v37;
  v66[0] = (WTF::StringImpl *)&v68;
  v66[1] = (WTF::StringImpl *)v30;
  v66[2] = (WTF::StringImpl *)v24;
  v66[3] = (WTF::StringImpl *)&v69;
  v66[4] = (WTF::StringImpl *)&v70;
  v66[5] = (WTF::StringImpl *)&v67;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v36, (JSC::VM *)v24, v32, 6, (uint64_t)v66);
  if ((*(_BYTE *)((16 * *(unsigned int *)v30) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(v30, v24, v67, v34);
  *((_DWORD *)v36 + 4) |= 0x10u;
  LODWORD(v66[0]) = 23;
  if ((v30 & 0xFFFE000000000002) == 0)
  {
    v38 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v30);
    if (v38)
      JSC::JSObject::didBecomePrototype(v38, (JSC::VM *)v24);
  }
  v39 = *v25;
  if (*v25 >= *(_QWORD *)(v24 + 40144))
  {
    v39 = *(_QWORD *)(v24 + 40152);
    if ((v39 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v39 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_35;
    }
    v64 = *(_QWORD *)(v39 + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = v39 + HIDWORD(v64);
    *(_QWORD *)(v24 + 40152) = v39 + (int)v64;
  }
  *v25 = v39 + 128;
LABEL_35:
  *(_DWORD *)v39 = 0;
  MEMORY[0x19AEA4278](v39, v24, a2, v30, v66, &WebCore::JSNVShaderNoperspectiveInterpolation::s_info, 0, 0, v65);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v23 = WebCore::cacheDOMStructure((JSCell *)a2, v39, (uint64_t)&WebCore::JSNVShaderNoperspectiveInterpolation::s_info);
LABEL_38:
  v40 = *(_QWORD *)(a2 + 56);
  v41 = *(_QWORD *)(v40 + 41456);
  v42 = *(_QWORD *)(v41 + 23536);
  v43 = *(_QWORD **)(v42 + 5104);
  if (v43)
    goto LABEL_58;
  v44 = *(_QWORD *)(v41 + 22648);
  if (__ldaxr((unsigned __int8 *)v44))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v44))
  {
    goto LABEL_43;
  }
  MEMORY[0x19AEA534C](v44);
LABEL_43:
  v46 = *(_QWORD *)(v44 + 2824);
  if (!*(_QWORD *)(v46 + 5104))
  {
    v47 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)v66, "IsoSpace T");
    v70 = 0;
    MEMORY[0x19AEA3204](v47, v66, v40 + 192, v40 + 1872, 32, 8, &v70);
    v49 = (uint64_t)v70;
    v70 = 0;
    if (v49)
      (*(void (**)(uint64_t))(*(_QWORD *)v49 + 8))(v49);
    v50 = v66[0];
    v66[0] = 0;
    if (v50)
    {
      if (*(_DWORD *)v50 == 1)
        WTF::fastFree(v50, v48);
      else
        --*(_DWORD *)v50;
    }
    v51 = *(_QWORD *)(v46 + 5104);
    *(_QWORD *)(v46 + 5104) = v47;
    if (v51)
      (*(void (**)(uint64_t))(*(_QWORD *)v51 + 8))(v51);
  }
  v43 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v52 = *(_QWORD *)(v42 + 5104);
  *(_QWORD *)(v42 + 5104) = v43;
  if (v52)
  {
    v53 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v53, v54);
  }
  v55 = __ldxr((unsigned __int8 *)v44);
  if (v55 != 1)
  {
    __clrex();
    goto LABEL_57;
  }
  if (__stlxr(0, (unsigned __int8 *)v44))
LABEL_57:
    WTF::Lock::unlockSlow((WTF::Lock *)v44);
LABEL_58:
  v14 = v43[3];
  if (v14 >= v43[4])
  {
    v14 = v43[5];
    if ((v14 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v14 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_60;
    }
    v61 = *(_QWORD *)(v14 + 8) ^ v43[6];
    v43[4] = v14 + HIDWORD(v61);
    v43[5] = v14 + (int)v61;
  }
  v43[3] = v14 + 32;
LABEL_60:
  *(_DWORD *)v14 = 0;
  WebCore::JSDOMObject::JSDOMObject(v14, v23);
  *(_QWORD *)(v14 + 24) = a3;
  if (*(_BYTE *)(v40 + 755))
    __dmb(0xAu);
  v56 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE336188 & 1) == 0)
  {
    qword_1EE336180 = (uint64_t)&off_1E32BE5C8;
    byte_1EE336188 = 1;
  }
  v66[0] = a3;
  if ((v14 & 8) != 0)
    v57 = (v14 - 112) | 1;
  else
    v57 = v14 & 0xFFFFFFFFFFFFC000;
  if ((v57 & 1) != 0)
    v58 = v57 + 47;
  else
    v58 = *(_QWORD *)v57 + 32;
  Allocator = *(JSC::Structure **)(v58 + 16);
  if (!Allocator)
    Allocator = (JSC::Structure *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v58 + 16) = *(_QWORD *)Allocator;
  *(_QWORD *)Allocator = v14;
  *((_QWORD *)Allocator + 1) = &qword_1EE336180;
  *((_QWORD *)Allocator + 2) = v56;
  v70 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v56 + 32), (uint64_t *)v66, (uint64_t *)&v70);
  if (v70)
    *((_QWORD *)v70 + 1) = 3;
  return v14;
}

BOOL WebCore::JSDOMConstructorNotConstructable<WebCore::JSNamedNodeMap>::initializeProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v13;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v13);
  v9 = v13;
  v13 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v11 = WebCore::getDOMStructure<WebCore::JSNamedNodeMap>((uint64_t *)a2, a3);
  return JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v11 + 48), 14);
}

unsigned int *WebCore::JSNamedNodeMap::destroy(unsigned int *this, JSC::JSCell *a2)
{
  uint64_t v2;

  v2 = *((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (v2)
  {
    this = *(unsigned int **)(*(_QWORD *)(v2 + 8) + 8);
    if (this[6] == 2)
    {
      if ((*((_WORD *)this + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)this, a2);
    }
    else
    {
      this[6] -= 2;
    }
  }
  return this;
}

uint64_t WebCore::JSNamedNodeMap::put(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  WebCore::JSDOMGlobalObject *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  JSC::VM *v21;
  int OwnProperty;
  uint64_t result;
  int v24;
  _BYTE v25[16];
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = *(_QWORD *)(a5 + 8);
  if (v8 != a1)
    return JSC::JSObject::put();
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSDOMGlobalObject::s_info && v11 != 0);
  }
  if (v10)
    v14 = (WebCore::JSDOMGlobalObject *)a2;
  else
    v14 = 0;
  v15 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v14);
  if (!v15)
    goto LABEL_23;
  v17 = v15;
  if (*(_BYTE *)(v15 + 274))
    goto LABEL_23;
  v18 = *(_BYTE **)(v15 + 496);
  if (!v18)
    v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
  if (!*(_QWORD *)v18)
    goto LABEL_23;
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
  if (!v19)
    goto LABEL_23;
  v20 = *(_QWORD *)(v19 + 680);
  if (*(_BYTE *)(v20 + 243))
  {
    if (!*(_BYTE *)(v20 + 242))
      goto LABEL_23;
LABEL_22:
    if (!v18[65])
      goto LABEL_23;
    return JSC::JSObject::put();
  }
  if ((*(_QWORD *)(v20 + 688) & 0x80000) != 0)
    goto LABEL_22;
LABEL_23:
  v21 = *(JSC::VM **)(a2 + 56);
  v36 = 0;
  v37 = 0;
  v38 = 0;
  v39 = 14;
  v16.n128_u64[0] = 0xFFFFFFFF00000000;
  v26 = 0xFFFFFFFF00000000;
  v28 = 0;
  v29 = 0;
  v27 = v8;
  v30 = 0x20000;
  v31 = 0;
  LOBYTE(v32) = 0;
  v33 = 0;
  v34 = 0;
  v35 = 0;
  OwnProperty = WebCore::JSNamedNodeMap::legacyPlatformObjectGetOwnProperty(a1, a2, a3, (WTF::String *)v25, 1, v16);
  if (*((_DWORD *)v21 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) != 0
    || OwnProperty
    && (JSC::PropertyDescriptor::setPropertySlot(), *((_DWORD *)v21 + 20))
    && (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) != 0)
  {
    result = 0;
  }
  else
  {
    result = JSC::ordinarySetWithOwnDescriptor();
  }
  if (v33)
  {
    v24 = *(_DWORD *)(v32 + 4);
    if (!v24)
    {
      __break(0xC471u);
      JUMPOUT(0x194D59874);
    }
    *(_DWORD *)(v32 + 4) = v24 - 1;
  }
  return result;
}

uint64_t WebCore::JSNamedNodeMap::putByIndex(JSC::JSObject *a1, JSC::JSCell *a2, JSC::JSGlobalObject *a3, uint64_t a4, objc_class *a5)
{
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  WebCore::JSDOMGlobalObject *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  JSValue v24;
  WTF::StringImpl *v25;

  v10 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSDOMGlobalObject::s_info && v12 != 0);
  }
  if (v11)
    v15 = a2;
  else
    v15 = 0;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v15);
  if (!v16)
    goto LABEL_22;
  v17 = v16;
  if (*(_BYTE *)(v16 + 274))
    goto LABEL_22;
  v18 = *(_BYTE **)(v16 + 496);
  if (!v18)
    v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
  if (!*(_QWORD *)v18)
    goto LABEL_22;
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
  if (!v19)
    goto LABEL_22;
  v20 = *(_QWORD *)(v19 + 680);
  if (*(_BYTE *)(v20 + 243))
  {
    if (!*(_BYTE *)(v20 + 242))
      goto LABEL_22;
  }
  else if ((*(_QWORD *)(v20 + 688) & 0x80000) == 0)
  {
    goto LABEL_22;
  }
  if (v18[65])
  {
    v24.super.isa = a5;
    return JSC::JSObject::putByIndex(a1, a2, a3, a4, v24);
  }
LABEL_22:
  JSC::Identifier::from();
  v22 = JSC::ordinarySetSlow();
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v21);
    else
      *(_DWORD *)v25 -= 2;
  }
  return v22;
}

uint64_t WebCore::JSNamedNodeMap::deleteProperty(uint64_t a1, WebCore::JSDOMGlobalObject *a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  char **v9;
  BOOL v10;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  WTF::String *v16;
  __n128 v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  _BYTE *v23;
  uint64_t v24;
  unsigned int v25;
  WTF::StringImpl *v26;
  uint64_t v27;
  void *v28;
  _BOOL4 hasAttribute;
  WTF::StringImpl *v30;
  JSC::VM *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  _BYTE *v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  unsigned __int16 *v40;
  uint64_t v41;
  unsigned int v42;
  BOOL v43;
  uint64_t result;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  unsigned __int16 *v50;
  uint64_t v51;
  unsigned int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 *v57;
  uint64_t v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  BOOL v63;
  unsigned int v64;
  uint64_t v65;
  unsigned __int8 *v66;
  uint64_t v67;
  unsigned int v68;
  WTF::StringImpl *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  char v76;
  JSC::VM *v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;

  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMGlobalObject::s_info && v9 != 0);
  }
  if (v8)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (v13)
  {
    v18 = v13;
    if (!*(_BYTE *)(v13 + 274))
    {
      v19 = *(_BYTE **)(v13 + 496);
      if (!v19)
        v19 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v18 - 192));
      if (*(_QWORD *)v19)
      {
        v20 = *(_QWORD *)(*(_QWORD *)v19 + 8);
        if (v20)
        {
          v21 = *(_QWORD *)(v20 + 680);
          if (*(_BYTE *)(v21 + 243))
          {
            if (!*(_BYTE *)(v21 + 242))
              goto LABEL_22;
          }
          else if ((*(_QWORD *)(v21 + 688) & 0x80000) == 0)
          {
            goto LABEL_22;
          }
          if (v19[65])
            return JSC::JSObject::deleteProperty();
        }
      }
    }
  }
LABEL_22:
  if (a3)
  {
    v22 = *(_DWORD *)(a3 + 16);
    if ((v22 & 0x20) != 0)
      return JSC::JSObject::deleteProperty();
    v23 = *(_BYTE **)(a3 + 8);
    v24 = *(unsigned int *)(a3 + 4);
    if ((v22 & 4) != 0)
    {
      if (!(_DWORD)v24)
        goto LABEL_29;
      v25 = *v23 - 48;
      if (v25 > 9 || v24 >= 2 && *v23 == 48)
        goto LABEL_29;
      v57 = v23 + 1;
      v58 = v24 - 1;
      while (v58)
      {
        if (v25 <= 0x19999999)
        {
          v59 = *v57 - 48;
          if (v59 <= 9)
          {
            v43 = __CFADD__(v59, 10 * v25);
            v25 = v59 + 10 * v25;
            ++v57;
            --v58;
            if (!v43)
              continue;
          }
        }
        goto LABEL_29;
      }
    }
    else
    {
      if (!(_DWORD)v24
        || (v25 = *(unsigned __int16 *)v23 - 48, v25 > 9)
        || v24 >= 2 && *(_WORD *)v23 == 48)
      {
LABEL_29:
        *(_DWORD *)a3 += 2;
        v26 = (WTF::StringImpl *)a3;
        goto LABEL_30;
      }
      v40 = (unsigned __int16 *)(v23 + 2);
      v41 = v24 - 1;
      while (v41)
      {
        if (v25 <= 0x19999999)
        {
          v42 = *v40 - 48;
          if (v42 <= 9)
          {
            v43 = __CFADD__(v42, 10 * v25);
            v25 = v42 + 10 * v25;
            ++v40;
            --v41;
            if (!v43)
              continue;
          }
        }
        goto LABEL_29;
      }
    }
    if (v25 != -1)
    {
      v60 = *(_QWORD *)(*(_QWORD *)(v6 + 8) + 8);
      v61 = *(_QWORD *)(v60 + 104);
      if (v61)
      {
        if ((*(_BYTE *)(v61 + 4) & 8) != 0)
          WebCore::StyledElement::synchronizeStyleAttributeInternalImpl(*(WebCore::StyledElement **)(*(_QWORD *)(v6 + 8) + 8), v14, v17, v15, v16);
        if ((*(_WORD *)(v60 + 28) & 0x20) != 0)
          WebCore::SVGElement::synchronizeAllAttributes((WebCore::SVGElement *)v60);
        v61 = *(_QWORD *)(v60 + 104);
        if (v61)
        {
          v62 = *(_DWORD *)(v61 + 4);
          LODWORD(v61) = (v62 & 1) != 0 ? *(_DWORD *)(v61 + 52) : v62 >> 5;
          if ((_DWORD)v61)
          {
            v61 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 8) + 8) + 104);
            if (v61)
              v63 = (*(_DWORD *)(v61 + 4) & 1) == 0;
            else
              v63 = 1;
            if (v63)
              LODWORD(v61) = *(_DWORD *)(v61 + 4) >> 5;
            else
              LODWORD(v61) = *(_DWORD *)(v61 + 52);
          }
        }
      }
      return v61 <= v25;
    }
    goto LABEL_29;
  }
  v26 = 0;
LABEL_30:
  v69 = v26;
  v27 = *(_QWORD *)(*(_QWORD *)(v6 + 8) + 8);
  *(_DWORD *)(v27 + 24) += 2;
  hasAttribute = WebCore::Element::hasAttribute((WebCore::Element *)v27, (const WTF::AtomString *)&v69, v15, v16, v17);
  if (*(_DWORD *)(v27 + 24) == 2)
  {
    if ((*(_WORD *)(v27 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v27, v28);
  }
  else
  {
    *(_DWORD *)(v27 + 24) -= 2;
  }
  v30 = v69;
  v69 = 0;
  if (v30)
  {
    if (*(_DWORD *)v30 != 2)
    {
      *(_DWORD *)v30 -= 2;
      goto LABEL_35;
    }
    WTF::StringImpl::destroy(v30, (WTF::StringImpl *)v28);
    if (hasAttribute)
      goto LABEL_36;
    return JSC::JSObject::deleteProperty();
  }
LABEL_35:
  if (!hasAttribute)
    return JSC::JSObject::deleteProperty();
LABEL_36:
  v31 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v71 = 0xFFFFFFFF00000000;
  v73 = 0;
  v74 = 0;
  v72 = a1;
  v75 = 196608;
  v76 = 0;
  v79 = 0;
  v80 = 0;
  v77 = v31;
  ++*((_DWORD *)v31 + 1);
  v78 = 1;
  if ((a3 >> 4))
  {
    v32 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
    if (((a3 >> 4) & ~*(_DWORD *)(v32 + 0x20)) == 0)
    {
      v33 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v31);
      if (v33)
      {
        v81 = a3;
        v34 = JSC::PropertyTable::get(v33, (uint64_t *)&v81);
        if ((_DWORD)v34 != -1)
        {
          if ((int)v34 > 63)
          {
            v46 = *(_QWORD *)(a1 + 8) - 8;
            v47 = 0x3F00000000 - (v34 << 32);
          }
          else
          {
            v46 = a1 + 16;
            v47 = v34 << 32;
          }
          v48 = *(_QWORD *)(v46 + (v47 >> 29));
          if ((v48 & 0xFFFE000000000002) == 0)
          {
            v49 = *(unsigned __int8 *)(v48 + 5);
            if (v49 == 6)
            {
              v53 = *(_DWORD *)(v32 + 16) & 3;
              v54 = *(_QWORD *)(v48 + 16);
              if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v48 & 0xFFFFFFFE) + 0x4C))
              {
                v56 = *(_QWORD *)(v48 + 24);
                v55 = *(_QWORD *)(v48 + 32);
                v69 = *(WTF::StringImpl **)(v48 + 8);
                v70 = v54;
                LODWORD(v71) = HIDWORD(v34);
                v73 = a1;
                BYTE1(v75) = 3;
                result = 1;
                if (v53 != 2)
                  LOBYTE(v75) = 1;
                HIBYTE(v75) = 1;
                v79 = v56;
                v80 = v55;
              }
              else
              {
                v69 = *(WTF::StringImpl **)(v48 + 8);
                v70 = v54;
                LODWORD(v71) = HIDWORD(v34);
                v73 = a1;
                result = 1;
                BYTE1(v75) = 3;
                if (v53 != 2)
                  LOBYTE(v75) = 1;
              }
              goto LABEL_59;
            }
            if (v49 == 5)
            {
              JSC::JSObject::fillGetterPropertySlot();
              result = 1;
              goto LABEL_59;
            }
          }
          v69 = (WTF::StringImpl *)v48;
          v73 = a1;
          v71 = __PAIR64__(v34, HIDWORD(v34));
          result = 1;
          LOWORD(v75) = 257;
          goto LABEL_59;
        }
      }
    }
  }
  if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
  {
    result = JSC::JSObject::getOwnStaticPropertySlot();
    if (!a3 || (result & 1) != 0)
      goto LABEL_59;
  }
  else if (!a3)
  {
LABEL_58:
    result = 0;
    goto LABEL_59;
  }
  v35 = *(_DWORD *)(a3 + 16);
  if ((v35 & 0x20) != 0)
    goto LABEL_58;
  v36 = *(_BYTE **)(a3 + 8);
  v37 = *(unsigned int *)(a3 + 4);
  if ((v35 & 4) != 0)
  {
    if ((_DWORD)v37)
    {
      v64 = *v36 - 48;
      if (v64 > 9 || v37 >= 2 && *v36 == 48)
      {
LABEL_132:
        v65 = 0;
      }
      else
      {
        v66 = v36 + 1;
        v67 = v37 - 1;
        while (v67)
        {
          if (v64 > 0x19999999)
            goto LABEL_132;
          v68 = *v66 - 48;
          if (v68 > 9)
            goto LABEL_132;
          v65 = 0;
          v43 = __CFADD__(v68, 10 * v64);
          v64 = v68 + 10 * v64;
          ++v66;
          --v67;
          if (v43)
            goto LABEL_133;
        }
        v65 = 0x100000000;
        if (v64 == -1)
          v65 = 0;
      }
    }
    else
    {
      v65 = 0;
    }
LABEL_133:
    if ((v65 & 0x100000000) == 0)
      goto LABEL_58;
  }
  else
  {
    if ((_DWORD)v37)
    {
      v38 = *(unsigned __int16 *)v36 - 48;
      if (v38 > 9 || v37 >= 2 && *(_WORD *)v36 == 48)
      {
LABEL_48:
        v39 = 0;
      }
      else
      {
        v50 = (unsigned __int16 *)(v36 + 2);
        v51 = v37 - 1;
        while (v51)
        {
          if (v38 <= 0x19999999)
          {
            v52 = *v50 - 48;
            if (v52 <= 9)
            {
              v43 = __CFADD__(v52, 10 * v38);
              v38 = v52 + 10 * v38;
              ++v50;
              --v51;
              if (!v43)
                continue;
            }
          }
          goto LABEL_48;
        }
        v10 = v38 == -1;
        v39 = 0x100000000;
        if (v10)
          v39 = 0;
      }
    }
    else
    {
      v39 = 0;
    }
    if ((v39 & 0x100000000) == 0)
      goto LABEL_58;
  }
  result = JSC::JSObject::getOwnPropertySlotByIndex();
LABEL_59:
  if (v78)
  {
    v45 = *((_DWORD *)v77 + 1);
    if (!v45)
    {
      __break(0xC471u);
      JUMPOUT(0x194D59EC8);
    }
    *((_DWORD *)v77 + 1) = v45 - 1;
  }
  if ((_DWORD)result)
    return JSC::JSObject::deleteProperty();
  return result;
}

uint64_t WebCore::JSNamedNodeMap::deletePropertyByIndex(WebCore::JSNamedNodeMap *this, JSC::JSCell *a2, JSC::JSGlobalObject *a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  WTF::String *v16;
  __n128 v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  BOOL v25;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = *((_QWORD *)this + 3);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (!v13)
    goto LABEL_22;
  v18 = v13;
  if (*(_BYTE *)(v13 + 274))
    goto LABEL_22;
  v19 = *(_BYTE **)(v13 + 496);
  if (!v19)
    v19 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v18 - 192));
  if (!*(_QWORD *)v19)
    goto LABEL_22;
  v20 = *(_QWORD *)(*(_QWORD *)v19 + 8);
  if (!v20)
    goto LABEL_22;
  v21 = *(_QWORD *)(v20 + 680);
  if (!*(_BYTE *)(v21 + 243))
  {
    if ((*(_QWORD *)(v21 + 688) & 0x80000) != 0)
      goto LABEL_21;
LABEL_22:
    v22 = *(_QWORD *)(*(_QWORD *)(v11 + 8) + 8);
    v23 = *(_QWORD *)(v22 + 104);
    if (!v23)
      return v23 <= a3;
    if ((*(_BYTE *)(v23 + 4) & 8) != 0)
      WebCore::StyledElement::synchronizeStyleAttributeInternalImpl(*(WebCore::StyledElement **)(*(_QWORD *)(v11 + 8) + 8), v14, v17, v15, v16);
    if ((*(_WORD *)(v22 + 28) & 0x20) != 0)
      WebCore::SVGElement::synchronizeAllAttributes((WebCore::SVGElement *)v22);
    v23 = *(_QWORD *)(v22 + 104);
    if (!v23)
      return v23 <= a3;
    v24 = *(_DWORD *)(v23 + 4);
    if ((v24 & 1) != 0)
    {
      LODWORD(v23) = *(_DWORD *)(v23 + 52);
      if ((_DWORD)v23)
      {
LABEL_32:
        v23 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v11 + 8) + 8) + 104);
        if (v23)
          v25 = (*(_DWORD *)(v23 + 4) & 1) == 0;
        else
          v25 = 1;
        if (v25)
          LODWORD(v23) = *(_DWORD *)(v23 + 4) >> 5;
        else
          LODWORD(v23) = *(_DWORD *)(v23 + 52);
      }
    }
    else
    {
      LODWORD(v23) = v24 >> 5;
      if (v24 >> 5)
        goto LABEL_32;
    }
    return v23 <= a3;
  }
  if (!*(_BYTE *)(v21 + 242))
    goto LABEL_22;
LABEL_21:
  if (!v19[65])
    goto LABEL_22;
  return JSC::JSObject::deletePropertyByIndex(this, a2, a3);
}

uint64_t WebCore::JSNamedNodeMap::getOwnPropertySlot(uint64_t a1, uint64_t a2, unint64_t a3, WTF::String *a4, __n128 a5)
{
  return WebCore::JSNamedNodeMap::legacyPlatformObjectGetOwnProperty(a1, a2, a3, a4, 0, a5);
}

uint64_t WebCore::JSNamedNodeMap::getOwnPropertySlotByIndex(unsigned int **this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5, __n128 a6)
{
  JSC::VM *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t OwnPropertySlotByIndex;
  __n128 v15;
  void *v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  char v21;
  WTF::StringImpl *v22;

  v9 = (JSC::VM *)*((_QWORD *)a2 + 7);
  if ((_DWORD)a3 == -1)
  {
    JSC::Identifier::from();
    _ZN7WebCoreL26accessVisibleNamedPropertyILNS_22LegacyOverrideBuiltInsE0ENS_14JSNamedNodeMapERZNS_L39visibleNamedPropertyItemAccessorFunctorINS_12IDLInterfaceINS_4AttrEEES2_ZNS2_25getOwnPropertySlotByIndexEPN3JSC8JSObjectEPNS7_14JSGlobalObjectEjRNS7_12PropertySlotEE3__0EEDcOT1_EUlRS2_NS7_12PropertyNameEE_EEDTclfp2_fp0_fp1_EERSA_RT0_SJ_SH_((unint64_t)&v20, (uint64_t)a2, (uint64_t)this, (unint64_t)v22, v15);
    if (v21)
    {
      if (v20)
        v17 = WebCore::wrap<WebCore::Attr>((int)a2, *(JSC::VM **)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28), v20);
      else
        v17 = 2;
      if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
      {
        OwnPropertySlotByIndex = 0;
      }
      else
      {
        *(_QWORD *)a4 = v17;
        *(_DWORD *)(a4 + 16) = 6;
        *(_QWORD *)(a4 + 32) = this;
        OwnPropertySlotByIndex = 1;
        *(_BYTE *)(a4 + 49) = 1;
      }
      std::optional<WTF::RefPtr<WebCore::HTMLOptionElement,WTF::RawPtrTraits<WebCore::HTMLOptionElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLOptionElement>>>::~optional(&v20, v16);
    }
    else
    {
      std::optional<WTF::RefPtr<WebCore::HTMLOptionElement,WTF::RawPtrTraits<WebCore::HTMLOptionElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLOptionElement>>>::~optional(&v20, v16);
      OwnPropertySlotByIndex = JSC::JSObject::getOwnPropertySlotByIndex();
    }
    v19 = v22;
    v22 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v18);
      else
        *(_DWORD *)v19 -= 2;
    }
    return OwnPropertySlotByIndex;
  }
  WebCore::NamedNodeMap::item(this[3], (unsigned __int8 *)a3, (uint64_t)a3, (WTF::String *)a4, &v20, a6);
  v10 = v20;
  if (v20)
  {
    v12 = WebCore::wrap<WebCore::Attr>((int)a2, *(JSC::VM **)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28), v20);
    if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    {
      OwnPropertySlotByIndex = 0;
    }
    else
    {
      *(_QWORD *)a4 = v12;
      *(_DWORD *)(a4 + 16) = 2;
      *(_QWORD *)(a4 + 32) = this;
      OwnPropertySlotByIndex = 1;
      *(_BYTE *)(a4 + 49) = 1;
    }
    if (*(_DWORD *)(v10 + 24) == 2)
    {
      if ((*(_WORD *)(v10 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v10, v11);
    }
    else
    {
      *(_DWORD *)(v10 + 24) -= 2;
    }
    return OwnPropertySlotByIndex;
  }
  return JSC::JSObject::getOwnPropertySlotByIndex();
}

uint64_t WebCore::JSNamedNodeMap::getOwnPropertyNames(uint64_t a1, unsigned __int8 *a2, uint64_t a3, WTF::String *a4, __n128 a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  BOOL v14;
  unsigned int v15;
  int v16;
  uint64_t *v17;
  WTF::StringImpl *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  WTF::StringImpl **v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unsigned int v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  unint64_t v41;
  unsigned int v42;
  int v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  WTF::StringImpl *v50;
  WTF::StringImpl *v51;
  WTF::StringImpl *v52;
  WTF *v53;
  WTF *v54;
  _QWORD *v55;
  WTF::StringImpl *v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  WTF::StringImpl **v61;
  WTF::StringImpl *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  WTF::StringImpl *v73;
  uint64_t v75;
  WTF::StringImpl *v76;
  int v77;
  WTF *v78;
  int v79;
  unsigned int v80;
  WTF::StringImpl *v81[2];
  char v82;
  uint64_t v83;
  WTF::StringImpl *v84;

  v77 = (int)a4;
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 8) + 8);
  v9 = *(_QWORD *)(v8 + 104);
  if (v9)
  {
    if ((*(_BYTE *)(v9 + 4) & 8) != 0)
      WebCore::StyledElement::synchronizeStyleAttributeInternalImpl(*(WebCore::StyledElement **)(*(_QWORD *)(v7 + 8) + 8), a2, a5, a3, a4);
    if ((*(_WORD *)(v8 + 28) & 0x20) != 0)
      WebCore::SVGElement::synchronizeAllAttributes((WebCore::SVGElement *)v8);
    v10 = *(_QWORD *)(v8 + 104);
    if (v10)
    {
      v11 = *(_DWORD *)(v10 + 4);
      if ((v11 & 1) != 0)
      {
        if (*(_DWORD *)(v10 + 52))
          goto LABEL_11;
      }
      else if (v11 >> 5)
      {
LABEL_11:
        v12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v7 + 8) + 8) + 104);
        v13 = *(_DWORD *)(v12 + 4);
        if (v12)
          v14 = (*(_DWORD *)(v12 + 4) & 1) == 0;
        else
          v14 = 1;
        if (v14)
        {
          v15 = v13 >> 5;
          if (v13 >> 5)
            goto LABEL_19;
        }
        else
        {
          v15 = *(_DWORD *)(v12 + 52);
          if (v15)
          {
LABEL_19:
            v16 = 0;
            v17 = (uint64_t *)(a3 + 8);
            while (1)
            {
              JSC::Identifier::from();
              v18 = v84;
              v78 = v84;
              v19 = *((_DWORD *)v84 + 4);
              if ((v19 & 0x20) != 0)
              {
                if ((*(_BYTE *)(a3 + 24) & 1) == 0 || *(_BYTE *)(a3 + 25) && (*((_BYTE *)v84 + 36) & 4) != 0)
                  goto LABEL_77;
              }
              else if ((*(_BYTE *)(a3 + 24) & 2) == 0)
              {
                goto LABEL_77;
              }
              v20 = *(_QWORD *)a3;
              v21 = *(unsigned int *)(*(_QWORD *)a3 + 20);
              if (v21 <= 0x13)
              {
                if ((_DWORD)v21)
                {
                  v22 = *(WTF::StringImpl ***)(v20 + 8);
                  while (*v22 != v84)
                  {
                    ++v22;
                    if (!--v21)
                      goto LABEL_36;
                  }
                  goto LABEL_77;
                }
LABEL_36:
                if ((v19 & 0x20) != 0)
                {
                  v43 = *(_DWORD *)v18 + 2;
                }
                else
                {
                  if ((v19 & 0x10) != 0)
                  {
                    *(_DWORD *)v18 += 2;
                  }
                  else
                  {
                    WTF::AtomStringImpl::addSlowCase();
                    v18 = v81[0];
                  }
                  v43 = *(_DWORD *)v18;
                  *(_DWORD *)v18 += 2;
                  if (!v43)
                  {
                    WTF::StringImpl::destroy(v18, (WTF::StringImpl *)a2);
LABEL_71:
                    v44 = (uint64_t *)(v20 + 8);
                    v81[0] = v18;
                    v45 = *(unsigned int *)(v20 + 20);
                    if ((_DWORD)v45 == *(_DWORD *)(v20 + 16))
                    {
                      v46 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v44, v45 + 1, (unint64_t)v81);
                      v45 = *(unsigned int *)(v20 + 20);
                      v47 = *(_QWORD *)(v20 + 8);
                      v48 = *v46;
                      *v46 = 0;
                      *(_QWORD *)(v47 + 8 * v45) = v48;
                    }
                    else
                    {
                      v49 = *v44;
                      v81[0] = 0;
                      *(_QWORD *)(v49 + 8 * v45) = v18;
                    }
                    *(_DWORD *)(v20 + 20) = v45 + 1;
                    v50 = v81[0];
                    v81[0] = 0;
                    if (v50)
                    {
                      if (*(_DWORD *)v50 == 2)
                        WTF::StringImpl::destroy(v50, (WTF::StringImpl *)a2);
                      else
                        *(_DWORD *)v50 -= 2;
                    }
                    goto LABEL_77;
                  }
                }
                *(_DWORD *)v18 = v43;
                goto LABEL_71;
              }
              if (!*v17 || !*(_DWORD *)(*v17 - 12))
                break;
LABEL_34:
              WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add((uint64_t *)(a3 + 8), (uint64_t *)&v78, (uint64_t)v81);
              if (v82)
              {
                v18 = v78;
                v20 = *(_QWORD *)a3;
                v19 = *((_DWORD *)v78 + 4);
                goto LABEL_36;
              }
LABEL_77:
              v51 = v84;
              v84 = 0;
              if (v51)
              {
                if (*(_DWORD *)v51 == 2)
                  WTF::StringImpl::destroy(v51, (WTF::StringImpl *)a2);
                else
                  *(_DWORD *)v51 -= 2;
              }
              if (++v16 == v15)
                goto LABEL_86;
            }
            v23 = *(uint64_t **)(v20 + 8);
            v24 = &v23[v21];
            while (1)
            {
              v25 = *v23;
              v26 = *v17;
              if (*v17
                || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash((uint64_t *)(a3 + 8), 8u, 0), (v26 = *v17) != 0))
              {
                v27 = *(_DWORD *)(v26 - 8);
              }
              else
              {
                v27 = 0;
              }
              v28 = (~(v25 << 32) + v25) ^ ((unint64_t)(~(v25 << 32) + v25) >> 22);
              v29 = 9 * ((v28 + ~(v28 << 13)) ^ ((v28 + ~(v28 << 13)) >> 8));
              v30 = (v29 ^ (v29 >> 15)) + ~((v29 ^ (v29 >> 15)) << 27);
              v31 = v27 & ((v30 >> 31) ^ v30);
              v32 = (uint64_t *)(v26 + 8 * v31);
              v33 = *v32;
              if (*v32)
              {
                v34 = 0;
                v35 = 1;
                while (v33 != v25)
                {
                  if (v33 == -1)
                    v34 = v32;
                  v31 = (v31 + v35) & v27;
                  v32 = (uint64_t *)(v26 + 8 * v31);
                  v33 = *v32;
                  ++v35;
                  if (!*v32)
                  {
                    if (v34)
                    {
                      *v34 = 0;
                      --*(_DWORD *)(*v17 - 16);
                      v32 = v34;
                    }
                    goto LABEL_51;
                  }
                }
                goto LABEL_64;
              }
LABEL_51:
              *v32 = v25;
              v36 = *v17;
              v37 = *v17 ? *(_DWORD *)(v36 - 12) + 1 : 1;
              *(_DWORD *)(v36 - 12) = v37;
              v38 = *v17;
              v39 = *v17 ? *(_DWORD *)(v38 - 12) : 0;
              v40 = (*(_DWORD *)(v38 - 16) + v39);
              v41 = *(unsigned int *)(v38 - 4);
              if (v41 > 0x400)
                break;
              if (3 * v41 <= 4 * v40)
              {
                if ((_DWORD)v41)
                  goto LABEL_60;
                v42 = 8;
                goto LABEL_63;
              }
LABEL_64:
              if (++v23 == v24)
                goto LABEL_34;
            }
            if (v41 > 2 * v40)
              goto LABEL_64;
LABEL_60:
            v42 = (_DWORD)v41 << (6 * *(_DWORD *)(v38 - 12) >= (2 * v41));
LABEL_63:
            WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash((uint64_t *)(a3 + 8), v42, v32);
            goto LABEL_64;
          }
        }
      }
    }
  }
LABEL_86:
  if (v77)
    return JSC::JSObject::getOwnPropertyNames();
  WebCore::NamedNodeMap::supportedPropertyNames(*(WebCore::NamedNodeMap **)(a1 + 24), a2, a3, a4, (uint64_t)&v78, a5);
  v53 = v78;
  if (!v80)
    goto LABEL_134;
  v54 = (WTF *)((char *)v78 + 8 * v80);
  v55 = (_QWORD *)(a3 + 8);
  do
  {
    v56 = *(WTF::StringImpl **)v53;
    if (*(_QWORD *)v53)
    {
      if ((*((_BYTE *)v56 + 16) & 0x10) != 0)
      {
        *(_DWORD *)v56 += 2;
      }
      else
      {
        WTF::AtomStringImpl::addSlowCase();
        v56 = v81[0];
      }
    }
    v57 = *(_DWORD *)v56;
    *(_DWORD *)v56 += 2;
    if (v57)
      *(_DWORD *)v56 = v57;
    else
      WTF::StringImpl::destroy(v56, v52);
    v84 = v56;
    v58 = *((_DWORD *)v56 + 4);
    if ((v58 & 0x20) != 0)
    {
      if ((*(_BYTE *)(a3 + 24) & 1) == 0 || *(_BYTE *)(a3 + 25) && (*((_BYTE *)v56 + 36) & 4) != 0)
        goto LABEL_126;
    }
    else if ((*(_BYTE *)(a3 + 24) & 2) == 0)
    {
      goto LABEL_126;
    }
    v59 = *(_QWORD *)a3;
    v60 = *(unsigned int *)(*(_QWORD *)a3 + 20);
    if (v60 > 0x13)
    {
      if (!*v55 || !*(_DWORD *)(*v55 - 12))
      {
        v63 = *(uint64_t **)(v59 + 8);
        v64 = 8 * v60;
        do
        {
          v65 = *v63++;
          v83 = v65;
          WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add((uint64_t *)(a3 + 8), &v83, (uint64_t)v81);
          v64 -= 8;
        }
        while (v64);
      }
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add((uint64_t *)(a3 + 8), (uint64_t *)&v84, (uint64_t)v81);
      if (v82)
      {
        v62 = v84;
        v59 = *(_QWORD *)a3;
        v58 = *((_DWORD *)v84 + 4);
        if ((v58 & 0x20) != 0)
        {
LABEL_115:
          v66 = *(_DWORD *)v62 + 2;
          goto LABEL_119;
        }
LABEL_107:
        if ((v58 & 0x10) != 0)
        {
          *(_DWORD *)v62 += 2;
        }
        else
        {
          WTF::AtomStringImpl::addSlowCase();
          v62 = v81[0];
        }
        v66 = *(_DWORD *)v62;
        *(_DWORD *)v62 += 2;
        if (v66)
LABEL_119:
          *(_DWORD *)v62 = v66;
        else
          WTF::StringImpl::destroy(v62, v52);
        v67 = (uint64_t *)(v59 + 8);
        v81[0] = v62;
        v68 = *(unsigned int *)(v59 + 20);
        if ((_DWORD)v68 == *(_DWORD *)(v59 + 16))
        {
          v69 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v67, v68 + 1, (unint64_t)v81);
          v68 = *(unsigned int *)(v59 + 20);
          v70 = *(_QWORD *)(v59 + 8);
          v71 = *v69;
          *v69 = 0;
          *(_QWORD *)(v70 + 8 * v68) = v71;
        }
        else
        {
          v72 = *v67;
          v81[0] = 0;
          *(_QWORD *)(v72 + 8 * v68) = v62;
        }
        *(_DWORD *)(v59 + 20) = v68 + 1;
        v73 = v81[0];
        v81[0] = 0;
        if (v73)
        {
          if (*(_DWORD *)v73 == 2)
            WTF::StringImpl::destroy(v73, v52);
          else
            *(_DWORD *)v73 -= 2;
        }
      }
    }
    else
    {
      if (!(_DWORD)v60)
      {
LABEL_106:
        v62 = v56;
        if ((v58 & 0x20) != 0)
          goto LABEL_115;
        goto LABEL_107;
      }
      v61 = *(WTF::StringImpl ***)(v59 + 8);
      while (*v61 != v56)
      {
        ++v61;
        if (!--v60)
          goto LABEL_106;
      }
    }
LABEL_126:
    if (*(_DWORD *)v56 == 2)
      WTF::StringImpl::destroy(v56, v52);
    else
      *(_DWORD *)v56 -= 2;
    v53 = (WTF *)((char *)v53 + 8);
  }
  while (v53 != v54);
  v53 = v78;
  if (!v80)
  {
LABEL_134:
    if (!v53)
      return JSC::JSObject::getOwnPropertyNames();
LABEL_144:
    v78 = 0;
    v79 = 0;
    WTF::fastFree(v53, v52);
    return JSC::JSObject::getOwnPropertyNames();
  }
  v75 = 8 * v80;
  do
  {
    v76 = *(WTF::StringImpl **)v53;
    *(_QWORD *)v53 = 0;
    if (v76)
    {
      if (*(_DWORD *)v76 == 2)
        WTF::StringImpl::destroy(v76, v52);
      else
        *(_DWORD *)v76 -= 2;
    }
    v53 = (WTF *)((char *)v53 + 8);
    v75 -= 8;
  }
  while (v75);
  v53 = v78;
  if (v78)
    goto LABEL_144;
  return JSC::JSObject::getOwnPropertyNames();
}

uint64_t WebCore::JSNamedNodeMap::defineOwnProperty(uint64_t a1, uint64_t a2, unint64_t a3, WTF::String *a4, int a5, __n128 a6)
{
  uint64_t v7;
  JSC::VM *v9;
  int v10;
  _BYTE *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  _WORD *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  int OwnPropertySlotByIndex;
  int v23;
  int v24;
  unsigned __int16 *v25;
  uint64_t v26;
  unsigned int v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  unsigned __int16 *v32;
  uint64_t v33;
  unsigned int v34;
  int OwnStaticPropertySlot;
  BOOL v36;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  _BOOL4 hasAttribute;
  WTF::StringImpl *v43;
  unsigned __int8 *v45;
  uint64_t v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  unsigned int v50;
  unsigned __int8 *v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  JSC::VM *v55;
  WTF::StringImpl *v56;

  v7 = a3;
  v9 = *(JSC::VM **)(a2 + 56);
  v55 = v9;
  if (a3)
  {
    v10 = *(_DWORD *)(a3 + 16);
    if ((v10 & 0x20) != 0)
      return JSC::JSObject::defineOwnProperty();
    v11 = *(_BYTE **)(a3 + 8);
    v12 = *(unsigned int *)(a3 + 4);
    if ((v10 & 4) != 0)
    {
      if (!(_DWORD)v12)
        goto LABEL_8;
      v13 = *v11 - 48;
      if (v13 > 9 || v12 >= 2 && *v11 == 48)
        goto LABEL_8;
      v45 = v11 + 1;
      v46 = v12 - 1;
      while (v46)
      {
        if (v13 <= 0x19999999)
        {
          v47 = *v45 - 48;
          if (v47 <= 9)
          {
            v28 = __CFADD__(v47, 10 * v13);
            v13 = v47 + 10 * v13;
            ++v45;
            --v46;
            if (!v28)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    else
    {
      if (!(_DWORD)v12)
        goto LABEL_8;
      v13 = *(unsigned __int16 *)v11 - 48;
      if (v13 > 9 || v12 >= 2 && *(_WORD *)v11 == 48)
        goto LABEL_8;
      v25 = (unsigned __int16 *)(v11 + 2);
      v26 = v12 - 1;
      while (v26)
      {
        if (v13 <= 0x19999999)
        {
          v27 = *v25 - 48;
          if (v27 <= 9)
          {
            v28 = __CFADD__(v27, 10 * v13);
            v13 = v27 + 10 * v13;
            ++v25;
            --v26;
            if (!v28)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    if (v13 != -1)
    {
      if (a5)
        JSC::throwTypeError();
      return 0;
    }
  }
LABEL_8:
  a6.n128_u64[0] = 0xFFFFFFFF00000000;
  v54 = *(_QWORD *)(a2 + 56);
  ++*((_DWORD *)v9 + 1);
  if ((a3 >> 4)
    && ((a3 >> 4) & ~*(_DWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x20)) == 0
    && (v14 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v9)) != 0
    && (v56 = (WTF::StringImpl *)v7, v15 = JSC::PropertyTable::get(v14, (uint64_t *)&v56), (_DWORD)v15 != -1))
  {
    if ((int)v15 > 63)
    {
      v29 = *(_QWORD *)(a1 + 8) - 8;
      v30 = 0x3F00000000 - (v15 << 32);
    }
    else
    {
      v29 = a1 + 16;
      v30 = v15 << 32;
    }
    a4 = *(WTF::String **)(v29 + (v30 >> 29));
    if (((unint64_t)a4 & 0xFFFE000000000002) != 0)
      goto LABEL_40;
    v31 = *((unsigned __int8 *)a4 + 5);
    if (v31 == 6)
    {
      OwnPropertySlotByIndex = 1;
      goto LABEL_24;
    }
    if (v31 != 5)
    {
LABEL_40:
      OwnPropertySlotByIndex = 1;
      goto LABEL_24;
    }
    JSC::JSObject::fillGetterPropertySlot();
    OwnPropertySlotByIndex = 1;
  }
  else
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) == 0)
    {
      if (!v7)
        goto LABEL_23;
LABEL_14:
      v16 = *(_DWORD *)(v7 + 16);
      if ((v16 & 0x20) != 0)
        goto LABEL_23;
      v17 = *(_WORD **)(v7 + 8);
      v18 = *(unsigned int *)(v7 + 4);
      if ((v16 & 4) == 0)
      {
        if ((_DWORD)v18)
        {
          v19 = (unsigned __int16)*v17 - 48;
          if (v19 > 9 || v18 >= 2 && *v17 == 48)
          {
LABEL_20:
            v20 = 0;
            v21 = 0;
            LODWORD(v18) = 0;
          }
          else
          {
            v32 = v17 + 1;
            v33 = v18 - 1;
            while (v33)
            {
              if (v19 <= 0x19999999)
              {
                v34 = *v32 - 48;
                if (v34 <= 9)
                {
                  v28 = __CFADD__(v34, 10 * v19);
                  v19 = v34 + 10 * v19;
                  ++v32;
                  --v33;
                  if (!v28)
                    continue;
                }
              }
              goto LABEL_20;
            }
            v36 = v19 == -1;
            LODWORD(v18) = v19 & 0xFFFFFF00;
            v21 = v19;
            v20 = 0x100000000;
            if (v36)
            {
              v20 = 0;
              v21 = 0;
              LODWORD(v18) = 0;
            }
          }
        }
        else
        {
          v20 = 0;
          v21 = 0;
        }
        a3 = v18 | v21;
        if ((v20 & 0x100000000) == 0)
          goto LABEL_23;
        goto LABEL_96;
      }
      if ((_DWORD)v18)
      {
        v48 = *(unsigned __int8 *)v17 - 48;
        if (v48 <= 9 && (v18 < 2 || *(_BYTE *)v17 != 48))
        {
          v51 = (unsigned __int8 *)v17 + 1;
          v52 = v18 - 1;
          while (v52)
          {
            if (v48 > 0x19999999)
              goto LABEL_93;
            v53 = *v51 - 48;
            if (v53 > 9)
              goto LABEL_93;
            v49 = 0;
            LODWORD(v18) = 0;
            v50 = 0;
            v28 = __CFADD__(v53, 10 * v48);
            v48 = v53 + 10 * v48;
            ++v51;
            --v52;
            if (v28)
              goto LABEL_95;
          }
          v49 = 0x100000000;
          if (v48 == -1)
          {
            v49 = 0;
            LODWORD(v18) = 0;
          }
          else
          {
            LODWORD(v18) = v48;
          }
          if (v48 == -1)
            v50 = 0;
          else
            v50 = v48 & 0xFFFFFF00;
LABEL_95:
          a3 = v50 | v18;
          if ((v49 & 0x100000000) != 0)
          {
LABEL_96:
            OwnPropertySlotByIndex = JSC::JSObject::getOwnPropertySlotByIndex();
            goto LABEL_24;
          }
LABEL_23:
          OwnPropertySlotByIndex = 0;
          goto LABEL_24;
        }
LABEL_93:
        v49 = 0;
        LODWORD(v18) = 0;
      }
      else
      {
        v49 = 0;
      }
      v50 = 0;
      goto LABEL_95;
    }
    OwnStaticPropertySlot = JSC::JSObject::getOwnStaticPropertySlot();
    OwnPropertySlotByIndex = OwnStaticPropertySlot;
    if (v7 && (OwnStaticPropertySlot & 1) == 0)
      goto LABEL_14;
  }
LABEL_24:
  v23 = *(_DWORD *)(v54 + 4);
  if (!v23)
  {
    __break(0xC471u);
    JUMPOUT(0x194D5AF78);
  }
  *(_DWORD *)(v54 + 4) = v23 - 1;
  if (*((_DWORD *)v55 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v55);
    if (((hasExceptionsAfterHandlingTraps | OwnPropertySlotByIndex) & 1) != 0)
    {
      v24 = hasExceptionsAfterHandlingTraps ^ 1;
      goto LABEL_69;
    }
  }
  else if ((OwnPropertySlotByIndex & 1) != 0)
  {
    v24 = 1;
    goto LABEL_69;
  }
  v38 = *(_QWORD *)(a1 + 24);
  if (v7)
  {
    *(_DWORD *)v7 += 2;
    v39 = v7;
  }
  else
  {
    v39 = 0;
  }
  v56 = (WTF::StringImpl *)v39;
  v40 = *(_QWORD *)(*(_QWORD *)(v38 + 8) + 8);
  *(_DWORD *)(v40 + 24) += 2;
  hasAttribute = WebCore::Element::hasAttribute((WebCore::Element *)v40, (const WTF::AtomString *)&v56, a3, a4, a6);
  if (*(_DWORD *)(v40 + 24) == 2)
  {
    if ((*(_WORD *)(v40 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v40, v41);
  }
  else
  {
    *(_DWORD *)(v40 + 24) -= 2;
  }
  v43 = v56;
  v56 = 0;
  if (v43)
  {
    if (*(_DWORD *)v43 == 2)
      WTF::StringImpl::destroy(v43, (WTF::StringImpl *)v41);
    else
      *(_DWORD *)v43 -= 2;
  }
  if ((hasAttribute & a5) == 1)
  {
    JSC::throwTypeError();
    v24 = 0;
  }
  else
  {
    v24 = !hasAttribute;
  }
LABEL_69:
  if (v24)
    return JSC::JSObject::defineOwnProperty();
  return 0;
}

uint64_t WebCore::JSNamedNodeMap::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSNamedNodeMapPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSNamedNodeMapPrototype::create(WebCore::JSNamedNodeMapPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  JSC::Structure *v20;
  int v21;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  unint64_t v27;
  uint64_t v28;
  int *v29;
  JSC::Structure **v30;
  int *v31;
  int v32;
  int v33;
  JSC::Structure *v34;
  int v35;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v23 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v23);
    *((_QWORD *)this + 4865) = SlowCase + (int)v23;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<9u>(this, (uint64_t)&WebCore::JSNamedNodeMap::s_info, (uint64_t)&WebCore::JSNamedNodeMapPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2712);
  v10 = *(_QWORD *)(*(_QWORD *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x28) + 672);
  v11 = (WTF::StringImpl *)MEMORY[0x1E0CBEBF0];
  *MEMORY[0x1E0CBEBF0] += 2;
  if (((unint64_t)v11 >> 4)
    && (((unint64_t)v11 >> 4) & ~*(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x20)) == 0
    && (v12 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE)), this)) != 0&& (v26 = v11, v13 = JSC::PropertyTable::get(v12, (uint64_t *)&v26), (_DWORD)v13 != -1))
  {
    if ((int)v13 > 63)
    {
      v24 = *(_QWORD *)(v10 + 8) - 8;
      v25 = 0x3F00000000 - (v13 << 32);
    }
    else
    {
      v24 = v10 + 16;
      v25 = v13 << 32;
    }
    v14 = *(_QWORD *)(v24 + (v25 >> 29));
  }
  else
  {
    v14 = 0;
  }
  v26 = 0;
  v27 = SlowCase;
  v28 = 0x1000000FFFFFFFFLL;
  v29 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, this, v9, v14, 4, (uint64_t)&v26);
  if (*(_DWORD *)v11 == 2)
    WTF::StringImpl::destroy(MEMORY[0x1E0CBEBF0], v15);
  else
    *(_DWORD *)v11 -= 2;
  v16 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v18 = JSC::JSString::create((uint64_t)this, &v26);
  v19 = v26;
  v26 = 0;
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v17);
    else
      *(_DWORD *)v19 -= 2;
  }
  v20 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v35 = *(_DWORD *)SlowCase;
  v34 = v20;
  v21 = JSC::Structure::outOfLineCapacity(v20);
  v32 = 0;
  v33 = v21;
  v26 = (WTF::StringImpl *)&v33;
  v27 = SlowCase;
  v28 = (uint64_t)this;
  v29 = &v35;
  v30 = &v34;
  v31 = &v32;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v20, this, v16, 6, (uint64_t)&v26);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v32, v18);
  *((_DWORD *)v20 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNamedNodeMap>,(WebCore::DOMConstructorID)465>(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  uint64_t Structure;
  JSC::Heap *v6;
  unint64_t v7;

  result = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3720);
  if (!result)
  {
    Structure = WebCore::JSDOMConstructorNotConstructable<WebCore::JSNamedNodeMap>::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 664));
    result = WebCore::JSDOMConstructorNotConstructable<WebCore::JSNamedNodeMap>::create(a1, Structure, a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3720) = result;
    if (result)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
      {
        v6 = (JSC::Heap *)(a1 + 192);
        v7 = result;
        JSC::Heap::writeBarrierSlowPath(v6, (const JSCell *)a2);
        return v7;
      }
    }
  }
  return result;
}

unint64_t _ZN7WebCoreL26accessVisibleNamedPropertyILNS_22LegacyOverrideBuiltInsE0ENS_14JSNamedNodeMapERZNS_L39visibleNamedPropertyItemAccessorFunctorINS_12IDLInterfaceINS_4AttrEEES2_ZNS2_25getOwnPropertySlotByIndexEPN3JSC8JSObjectEPNS7_14JSGlobalObjectEjRNS7_12PropertySlotEE3__0EEDcOT1_EUlRS2_NS7_12PropertyNameEE_EEDTclfp2_fp0_fp1_EERSA_RT0_SJ_SH_(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, __n128 a5)
{
  unint64_t v5;
  _BYTE *v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  void *v13;
  WebCore::Node *v14;
  int v15;
  JSC::VM *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  int v20;
  _BYTE *v21;
  uint64_t v22;
  unsigned int v23;
  unsigned __int16 *v24;
  uint64_t v25;
  unsigned int v26;
  BOOL v27;
  unint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 *v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  _WORD *v46;
  uint64_t v47;
  unsigned int v48;
  unsigned __int16 *v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  int v57;
  _BYTE *v58;
  uint64_t v59;
  unsigned int v60;
  unsigned __int16 *v61;
  uint64_t v62;
  unsigned int v63;
  unsigned __int8 *v64;
  uint64_t v65;
  unsigned int v66;
  int v67;
  unint64_t v68;
  JSC::VM *v69;
  uint64_t v70;
  char v71;
  int v72;
  int v73;
  unint64_t v74;
  unint64_t v75;
  unsigned __int8 *v76;
  uint64_t v77;
  unsigned int v78;
  JSC::VM *v79;
  uint64_t v80;
  int v81;
  unint64_t v82;
  char v83;
  int v84;
  uint64_t v85;
  unsigned int v86;
  uint64_t v87;
  int v88;
  int v89;
  BOOL v90;
  const WTF::StringImpl *v91;
  const unsigned __int8 *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  unint64_t v98;
  JSC::VM *v99;
  uint64_t v100;
  int v101;
  int v102;
  int v103;
  unint64_t v104;
  unint64_t v105;
  WebCore::Node *v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  char v113;
  JSC::VM *v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  WTF::StringImpl *v118;
  char v119;
  uint64_t v120;

  v9 = (_BYTE *)result;
  v120 = *MEMORY[0x1E0C80C00];
  if (a4)
  {
    if ((*(_BYTE *)(a4 + 16) & 0x20) != 0)
    {
LABEL_31:
      *v9 = 0;
      v9[8] = 0;
      return result;
    }
    v10 = *(_QWORD *)(a3 + 24);
    *(_DWORD *)a4 += 2;
    v11 = (WTF::StringImpl *)a4;
  }
  else
  {
    v11 = 0;
    v10 = *(_QWORD *)(a3 + 24);
  }
  v118 = v11;
  v12 = *(_QWORD *)(*(_QWORD *)(v10 + 8) + 8);
  *(_DWORD *)(v12 + 24) += 2;
  WebCore::Element::getAttributeNode(v12, (const WTF::AtomString *)&v118, a3, (WTF::String *)a4, &v106, a5);
  if (*(_DWORD *)(v12 + 24) == 2)
  {
    if ((*(_WORD *)(v12 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v12, v13);
  }
  else
  {
    *(_DWORD *)(v12 + 24) -= 2;
  }
  result = (unint64_t)v118;
  v118 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      result = WTF::StringImpl::destroy((WTF::StringImpl *)result, (WTF::StringImpl *)v13);
    else
      *(_DWORD *)result -= 2;
  }
  v14 = v106;
  if (!v106)
    goto LABEL_31;
  v15 = *((_DWORD *)v106 + 6);
  *((_DWORD *)v106 + 6) = v15 + 2;
  v106 = 0;
  if (v15)
  {
    *((_DWORD *)v14 + 6) = v15;
  }
  else if ((*((_WORD *)v14 + 15) & 0x400) == 0)
  {
    result = (unint64_t)WebCore::Node::removedLastRef(v14, v13);
  }
  v16 = *(JSC::VM **)(a2 + 56);
  v108 = 0xFFFFFFFF00000000;
  v110 = 0;
  v111 = 0;
  v109 = a3;
  v112 = 196608;
  v113 = 0;
  v116 = 0;
  v117 = 0;
  v114 = v16;
  ++*((_DWORD *)v16 + 1);
  v115 = 1;
  v17 = a4 >> 4;
  if ((a4 >> 4))
  {
    v18 = 16 * (*(_DWORD *)a3 & 0xFFFFFFFE);
    if ((v17 & ~*(_DWORD *)(v18 + 0x20)) == 0)
    {
      result = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE)), v16);
      if (result)
      {
        v118 = (WTF::StringImpl *)a4;
        result = JSC::PropertyTable::get(result, (uint64_t *)&v118);
        v19 = result;
        if ((_DWORD)result != -1)
        {
          v28 = HIDWORD(result);
          v29 = (uint64_t *)(a3 + 8 * (int)result + 16);
          if ((int)result >= 64)
            v29 = (uint64_t *)(*(_QWORD *)(a3 + 8) + ((uint64_t)(0x3F00000000 - (result << 32)) >> 29) - 8);
          v30 = *v29;
          if ((*v29 & 0xFFFE000000000002) == 0)
          {
            v31 = *(unsigned __int8 *)(v30 + 5);
            if (v31 == 6)
            {
              v32 = *(_DWORD *)(v18 + 16) & 3;
              v33 = *(_QWORD *)(v30 + 16);
              if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v30 & 0xFFFFFFFE) + 0x4C))
              {
                v35 = *(_QWORD *)(v30 + 24);
                v34 = *(_QWORD *)(v30 + 32);
                v106 = *(WebCore::Node **)(v30 + 8);
                v107 = v33;
                LODWORD(v108) = HIDWORD(result);
                v110 = a3;
LABEL_106:
                BYTE1(v112) = 3;
                if (v32 != 2)
                  LOBYTE(v112) = 1;
                HIBYTE(v112) = 1;
                v116 = v35;
                v117 = v34;
                goto LABEL_102;
              }
              v106 = *(WebCore::Node **)(v30 + 8);
              v107 = v33;
              LODWORD(v108) = HIDWORD(result);
              v110 = a3;
LABEL_126:
              BYTE1(v112) = 3;
              if (v32 != 2)
                LOBYTE(v112) = 1;
              goto LABEL_102;
            }
            if (v31 == 5)
              goto LABEL_109;
          }
          v106 = (WebCore::Node *)v30;
          v110 = a3;
LABEL_101:
          v108 = __PAIR64__(v19, v28);
          LOWORD(v112) = 257;
          goto LABEL_102;
        }
      }
    }
  }
  if ((*(_BYTE *)(a3 + 6) & 0x20) != 0)
  {
    result = JSC::JSObject::getOwnStaticPropertySlot();
    if ((result & 1) != 0)
      goto LABEL_102;
  }
  if (a4)
  {
    v20 = *(_DWORD *)(a4 + 16);
    if ((v20 & 0x20) == 0)
    {
      v21 = *(_BYTE **)(a4 + 8);
      v22 = *(unsigned int *)(a4 + 4);
      if ((v20 & 4) != 0)
      {
        if (!(_DWORD)v22)
          goto LABEL_62;
        v23 = *v21 - 48;
        if (v23 > 9 || v22 >= 2 && *v21 == 48)
          goto LABEL_62;
        v36 = v21 + 1;
        v37 = v22 - 1;
        while (v37)
        {
          if (v23 <= 0x19999999)
          {
            v38 = *v36 - 48;
            if (v38 <= 9)
            {
              v27 = __CFADD__(v38, 10 * v23);
              v23 = v38 + 10 * v23;
              ++v36;
              --v37;
              if (!v27)
                continue;
            }
          }
          goto LABEL_62;
        }
      }
      else
      {
        if (!(_DWORD)v22)
          goto LABEL_62;
        v23 = *(unsigned __int16 *)v21 - 48;
        if (v23 > 9 || v22 >= 2 && *(_WORD *)v21 == 48)
          goto LABEL_62;
        v24 = (unsigned __int16 *)(v21 + 2);
        v25 = v22 - 1;
        while (v25)
        {
          if (v23 <= 0x19999999)
          {
            v26 = *v24 - 48;
            if (v26 <= 9)
            {
              v27 = __CFADD__(v26, 10 * v23);
              v23 = v26 + 10 * v23;
              ++v24;
              --v25;
              if (!v27)
                continue;
            }
          }
          goto LABEL_62;
        }
      }
      if (v23 != -1)
      {
        result = JSC::JSObject::getOwnPropertySlotByIndex();
        if ((_DWORD)result)
          goto LABEL_102;
      }
    }
  }
LABEL_62:
  v39 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x30);
  if (!v39)
    v39 = *(_QWORD *)(a3 + 16);
  if ((v39 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v39 + 5) < 0x17u)
    goto LABEL_143;
  v40 = (_BYTE *)(v39 + 6);
  if ((*(_BYTE *)(v39 + 6) & 8) == 0)
  {
    v5 = *(_QWORD *)(a2 + 56);
    v41 = v39;
    while (1)
    {
      v42 = *(_DWORD *)v41 & 0xFFFFFFFE;
      v43 = 16 * v42;
      if ((_DWORD)v17)
      {
        if ((v17 & ~*(_DWORD *)(16 * v42 + 0x20)) == 0)
        {
          result = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)v43, (JSC::VM *)v5);
          if (result)
          {
            v118 = (WTF::StringImpl *)a4;
            result = JSC::PropertyTable::get(result, (uint64_t *)&v118);
            v19 = result;
            if ((_DWORD)result != -1)
              break;
          }
        }
      }
      if ((*v40 & 0x20) != 0)
      {
        result = JSC::JSObject::getOwnStaticPropertySlot();
        if ((result & 1) != 0)
          goto LABEL_102;
      }
      v44 = *(_QWORD *)(v43 + 48);
      if (!v44)
        v44 = *(_QWORD *)(v41 + 16);
      if ((v44 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v44 + 5) < 0x17u)
      {
        if (!a4)
          goto LABEL_143;
        v45 = *(_DWORD *)(a4 + 16);
        if ((v45 & 0x20) != 0)
          goto LABEL_143;
        v46 = *(_WORD **)(a4 + 8);
        v47 = *(unsigned int *)(a4 + 4);
        if ((v45 & 4) == 0)
        {
          if ((_DWORD)v47)
          {
            v48 = (unsigned __int16)*v46 - 48;
            if (v48 <= 9 && (v47 < 2 || *v46 != 48))
            {
              v49 = v46 + 1;
              v50 = v47 - 1;
              while (v50)
              {
                if (v48 <= 0x19999999)
                {
                  v51 = *v49 - 48;
                  if (v51 <= 9)
                  {
                    v27 = __CFADD__(v51, 10 * v48);
                    v48 = v51 + 10 * v48;
                    ++v49;
                    --v50;
                    if (!v27)
                      continue;
                  }
                }
                goto LABEL_143;
              }
              goto LABEL_142;
            }
          }
          goto LABEL_143;
        }
        if (!(_DWORD)v47)
          goto LABEL_143;
        v48 = *(unsigned __int8 *)v46 - 48;
        if (v48 > 9 || v47 >= 2 && *(_BYTE *)v46 == 48)
          goto LABEL_143;
        v64 = (unsigned __int8 *)v46 + 1;
        v65 = v47 - 1;
        while (v65)
        {
          if (v48 <= 0x19999999)
          {
            v66 = *v64 - 48;
            if (v66 <= 9)
            {
              v27 = __CFADD__(v66, 10 * v48);
              v48 = v66 + 10 * v48;
              ++v64;
              --v65;
              if (!v27)
                continue;
            }
          }
          goto LABEL_143;
        }
LABEL_142:
        if (v48 == -1)
        {
LABEL_143:
          *(_QWORD *)v9 = v14;
          v9[8] = 1;
          v14 = 0;
          goto LABEL_144;
        }
        v68 = v48;
        v69 = *(JSC::VM **)(a2 + 56);
        while (2)
        {
          v70 = 16 * (*(_DWORD *)v39 & 0xFFFFFFFE);
          result = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, WebCore::Node **))(16 * *(unsigned int *)(v70 + 0x4C) + 0x70))(v39, a2, v68, &v106);
          v71 = result;
          if (*((_DWORD *)v69 + 20))
          {
            result = JSC::VM::hasExceptionsAfterHandlingTraps(v69);
            if ((result & 1) != 0)
              goto LABEL_143;
          }
          if ((v71 & 1) != 0)
            goto LABEL_102;
          v72 = BYTE2(v112);
          if (BYTE2(v112) == 3)
          {
            if (v113)
              goto LABEL_143;
            v73 = *(unsigned __int8 *)(v39 + 5);
            if (v73 == 61)
            {
LABEL_171:
              v75 = *(_QWORD *)(16 * (*(_DWORD *)v39 & 0xFFFFFFFE) + 0x30);
              if (!v75)
                v75 = *(_QWORD *)(v39 + 16);
              goto LABEL_173;
            }
LABEL_164:
            if ((v73 - 39) <= 0xA)
            {
              if ((*(_BYTE *)(v39 + 40) & 7u) > 2)
              {
                LOBYTE(v118) = 0;
                v119 = 0;
                result = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v39, (WTF *)&v118);
                if ((_BYTE)v13)
                  v74 = result;
                else
                  v74 = 0;
              }
              else
              {
                v74 = *(_QWORD *)(v39 + 24);
              }
              if (v74 <= v68)
                goto LABEL_143;
              v72 = BYTE2(v112);
            }
          }
          else
          {
            v73 = *(unsigned __int8 *)(v39 + 5);
            if (v73 != 61)
              goto LABEL_164;
            if (BYTE2(v112) == 1)
              goto LABEL_143;
          }
          if ((*(_WORD *)(v70 + 12) & 0x800) == 0 || v72 == 3)
            goto LABEL_171;
          if ((*(_WORD *)(16 * (*(_DWORD *)v39 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
          {
            result = (*(uint64_t (**)(uint64_t, uint64_t))(16
                                                                 * *(unsigned int *)(16
                                                                                   * (*(_DWORD *)v39 & 0xFFFFFFFE)
                                                                                   + 0x4C)
                                                                 + 0xB0))(v39, a2);
            v75 = result;
          }
          else
          {
            v75 = *(_QWORD *)(16 * (*(_DWORD *)v39 & 0xFFFFFFFE) + 0x30);
            if (!v75)
              v75 = *(_QWORD *)(v39 + 16);
          }
          if (*((_DWORD *)v69 + 20))
          {
            result = JSC::VM::hasExceptionsAfterHandlingTraps(v69);
            if ((result & 1) != 0)
              goto LABEL_143;
          }
LABEL_173:
          if ((v75 & 0xFFFE000000000002) != 0)
            goto LABEL_143;
          v39 = v75;
          if (*(unsigned __int8 *)(v75 + 5) <= 0x16u)
            goto LABEL_143;
          continue;
        }
      }
      v40 = (_BYTE *)(v44 + 6);
      v41 = v44;
      if ((*(_BYTE *)(v44 + 6) & 8) != 0)
        goto LABEL_111;
    }
    v28 = HIDWORD(result);
    if ((int)result > 63)
    {
      v52 = *(_QWORD *)(v41 + 8) - 8;
      v53 = 0x3F00000000 - (result << 32);
    }
    else
    {
      v52 = v41 + 16;
      v53 = result << 32;
    }
    v54 = *(_QWORD *)(v52 + (v53 >> 29));
    if ((v54 & 0xFFFE000000000002) != 0)
      goto LABEL_100;
    v55 = *(unsigned __int8 *)(v54 + 5);
    if (v55 != 6)
    {
      if (v55 == 5)
        goto LABEL_109;
LABEL_100:
      v106 = (WebCore::Node *)v54;
      v110 = v41;
      goto LABEL_101;
    }
    v32 = *(_DWORD *)(v43 + 16) & 3;
    v56 = *(_QWORD *)(v54 + 16);
    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v54 & 0xFFFFFFFE) + 0x4C))
    {
      v35 = *(_QWORD *)(v54 + 24);
      v34 = *(_QWORD *)(v54 + 32);
      v106 = *(WebCore::Node **)(v54 + 8);
      v107 = v56;
      LODWORD(v108) = HIDWORD(result);
      v110 = v41;
      goto LABEL_106;
    }
    v106 = *(WebCore::Node **)(v54 + 8);
    v107 = v56;
    LODWORD(v108) = HIDWORD(result);
    v110 = v41;
    goto LABEL_126;
  }
  v44 = v39;
LABEL_111:
  if (!a4)
    goto LABEL_201;
  v57 = *(_DWORD *)(a4 + 16);
  if ((v57 & 0x20) != 0)
    goto LABEL_201;
  v58 = *(_BYTE **)(a4 + 8);
  v59 = *(unsigned int *)(a4 + 4);
  if ((v57 & 4) != 0)
  {
    if (!(_DWORD)v59)
      goto LABEL_201;
    v60 = *v58 - 48;
    if (v60 > 9 || v59 >= 2 && *v58 == 48)
      goto LABEL_201;
    v76 = v58 + 1;
    v77 = v59 - 1;
    while (v77)
    {
      if (v60 <= 0x19999999)
      {
        v78 = *v76 - 48;
        if (v78 <= 9)
        {
          v27 = __CFADD__(v78, 10 * v60);
          v60 = v78 + 10 * v60;
          ++v76;
          --v77;
          if (!v27)
            continue;
        }
      }
      goto LABEL_201;
    }
  }
  else
  {
    if (!(_DWORD)v59)
      goto LABEL_201;
    v60 = *(unsigned __int16 *)v58 - 48;
    if (v60 > 9 || v59 >= 2 && *(_WORD *)v58 == 48)
      goto LABEL_201;
    v61 = (unsigned __int16 *)(v58 + 2);
    v62 = v59 - 1;
    while (v62)
    {
      if (v60 <= 0x19999999)
      {
        v63 = *v61 - 48;
        if (v63 <= 9)
        {
          v27 = __CFADD__(v63, 10 * v60);
          v60 = v63 + 10 * v60;
          ++v61;
          --v62;
          if (!v27)
            continue;
        }
      }
      goto LABEL_201;
    }
  }
  if (v60 != -1)
  {
    v98 = v60;
    v99 = *(JSC::VM **)(a2 + 56);
    while (1)
    {
      v100 = 16 * (*(_DWORD *)v39 & 0xFFFFFFFE);
      result = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, WebCore::Node **))(16
                                                                                               * *(unsigned int *)(v100 + 0x4C)
                                                                                               + 0x70))(v39, a2, v98, &v106);
      v101 = result;
      if (*((_DWORD *)v99 + 20))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v99);
        if (((result | v101) & 1) != 0)
        {
          if ((result & 1) == 0)
            goto LABEL_102;
          goto LABEL_143;
        }
      }
      else if ((result & 1) != 0)
      {
        goto LABEL_102;
      }
      v102 = BYTE2(v112);
      if (BYTE2(v112) == 3)
      {
        if (v113)
          goto LABEL_143;
        v103 = *(unsigned __int8 *)(v39 + 5);
        if (v103 == 61)
        {
LABEL_293:
          v105 = *(_QWORD *)(16 * (*(_DWORD *)v39 & 0xFFFFFFFE) + 0x30);
          if (!v105)
            v105 = *(_QWORD *)(v39 + 16);
          goto LABEL_295;
        }
      }
      else
      {
        v103 = *(unsigned __int8 *)(v39 + 5);
        if (v103 == 61)
        {
          if (BYTE2(v112) == 1)
            goto LABEL_143;
          goto LABEL_291;
        }
      }
      if ((v103 - 39) <= 0xA)
      {
        if ((*(_BYTE *)(v39 + 40) & 7u) > 2)
        {
          LOBYTE(v118) = 0;
          v119 = 0;
          result = JSC::integerIndexedObjectLength<JSC::IdempotentArrayBufferByteLengthGetter<(std::memory_order)5>>(v39, (WTF *)&v118);
          if ((_BYTE)v13)
            v104 = result;
          else
            v104 = 0;
        }
        else
        {
          v104 = *(_QWORD *)(v39 + 24);
        }
        if (v104 <= v98)
          goto LABEL_143;
        v102 = BYTE2(v112);
      }
LABEL_291:
      if ((*(_WORD *)(v100 + 12) & 0x800) == 0 || v102 == 3)
        goto LABEL_293;
      if ((*(_WORD *)(16 * (*(_DWORD *)v39 & 0xFFFFFFFE) + 0xC) & 0x800) != 0)
      {
        result = (*(uint64_t (**)(uint64_t, uint64_t))(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)v39 & 0xFFFFFFFE)
                                                                               + 0x4C)
                                                             + 0xB0))(v39, a2);
        v105 = result;
      }
      else
      {
        v105 = *(_QWORD *)(16 * (*(_DWORD *)v39 & 0xFFFFFFFE) + 0x30);
        if (!v105)
          v105 = *(_QWORD *)(v39 + 16);
      }
      if (*((_DWORD *)v99 + 20))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v99);
        if ((result & 1) != 0)
          goto LABEL_143;
      }
LABEL_295:
      if ((v105 & 0xFFFE000000000002) == 0)
      {
        v39 = v105;
        if (*(unsigned __int8 *)(v105 + 5) > 0x16u)
          continue;
      }
      goto LABEL_143;
    }
  }
LABEL_201:
  v79 = *(JSC::VM **)(a2 + 56);
  while (1)
  {
    v80 = 16 * (*(_DWORD *)v44 & 0xFFFFFFFE);
    if ((*(_BYTE *)(v44 + 6) & 8) != 0)
    {
      result = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, WebCore::Node **))(16
                                                                                               * *(unsigned int *)(16 * (*(_DWORD *)v44 & 0xFFFFFFFE) + 0x4C)
                                                                                               + 0x68))(v44, a2, a4, &v106);
      v83 = result;
      if (*((_DWORD *)v79 + 20))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v79);
        if ((result & 1) != 0)
          goto LABEL_143;
      }
      if ((v83 & 1) != 0)
        goto LABEL_102;
      if (BYTE2(v112) == 3)
      {
        if (v113)
          goto LABEL_143;
        v84 = *(unsigned __int8 *)(v44 + 5);
        if (v84 == 61)
          goto LABEL_208;
      }
      else
      {
        v84 = *(unsigned __int8 *)(v44 + 5);
        if (v84 == 61)
        {
          if (BYTE2(v112) == 1)
            goto LABEL_143;
          goto LABEL_208;
        }
      }
      if (!a4)
        goto LABEL_208;
      if ((v84 - 50) < 0xFFFFFFF5)
        goto LABEL_208;
      v86 = *(_DWORD *)(a4 + 16);
      if ((v86 & 0x20) != 0)
        goto LABEL_208;
      v87 = *(unsigned int *)(a4 + 4);
      if (!(_DWORD)v87)
        goto LABEL_208;
      result = *(_QWORD *)(a4 + 8);
      if ((v86 & 4) != 0)
      {
        v88 = *(unsigned __int8 *)result;
        if ((_DWORD)v87 == 1)
        {
LABEL_244:
          if ((v88 - 48) < 0xA)
            goto LABEL_143;
          goto LABEL_208;
        }
        if (v88 == 45)
        {
          v89 = *(unsigned __int8 *)(result + 1);
          goto LABEL_248;
        }
      }
      else
      {
        v88 = *(unsigned __int16 *)result;
        if ((_DWORD)v87 == 1)
          goto LABEL_244;
        if (v88 == 45)
        {
          v89 = *(unsigned __int16 *)(result + 2);
LABEL_248:
          if ((v89 - 48) < 0xA)
          {
            if ((_DWORD)v87 == 2)
              goto LABEL_143;
LABEL_260:
            v5 = v5 & 0xFFFFFF0000000000 | v87 | ((unint64_t)((v86 >> 2) & 1) << 32);
            JSC::jsToNumber();
            v91 = (const WTF::StringImpl *)WTF::numberToString();
            result = WTF::equal((WTF *)a4, v91, v92);
            if ((result & 1) != 0)
              goto LABEL_143;
            goto LABEL_208;
          }
          if ((_DWORD)v87 != 9)
            goto LABEL_208;
          v90 = v89 == 73;
LABEL_258:
          if (!v90)
            goto LABEL_208;
          goto LABEL_260;
        }
      }
      if ((v88 - 48) < 0xA || (_DWORD)v87 == 8 && v88 == 73)
        goto LABEL_260;
      if ((_DWORD)v87 != 3)
        goto LABEL_208;
      v90 = v88 == 78;
      goto LABEL_258;
    }
    if ((_DWORD)v17)
    {
      if ((v17 & ~*(_DWORD *)(16 * (*(_DWORD *)v44 & 0xFFFFFFFE) + 0x20)) == 0)
      {
        result = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)v44 & 0xFFFFFFFE)), v79);
        if (result)
        {
          v118 = (WTF::StringImpl *)a4;
          result = JSC::PropertyTable::get(result, (uint64_t *)&v118);
          v19 = result;
          if ((_DWORD)result != -1)
            break;
        }
      }
    }
    if ((*(_BYTE *)(v44 + 6) & 0x20) != 0)
    {
      result = JSC::JSObject::getOwnStaticPropertySlot();
      if ((result & 1) != 0)
        goto LABEL_102;
    }
LABEL_208:
    if ((*(_WORD *)(v80 + 12) & 0x800) == 0)
    {
      v81 = *(_DWORD *)v44;
LABEL_210:
      v82 = *(_QWORD *)(16 * (v81 & 0xFFFFFFFE) + 0x30);
      if (!v82)
        v82 = *(_QWORD *)(v44 + 16);
      goto LABEL_212;
    }
    v81 = *(_DWORD *)v44;
    if (BYTE2(v112) == 3)
      goto LABEL_210;
    v85 = 16 * (v81 & 0xFFFFFFFE);
    if ((*(_WORD *)(v85 + 12) & 0x800) != 0)
    {
      result = (*(uint64_t (**)(uint64_t, uint64_t))(16 * *(unsigned int *)(v85 + 76) + 0xB0))(v44, a2);
      v82 = result;
    }
    else
    {
      v82 = *(_QWORD *)(v85 + 48);
      if (!v82)
        v82 = *(_QWORD *)(v44 + 16);
    }
    if (*((_DWORD *)v79 + 20))
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v79);
      if ((result & 1) != 0)
        goto LABEL_143;
    }
LABEL_212:
    if ((v82 & 0xFFFE000000000002) == 0)
    {
      v44 = v82;
      if (*(unsigned __int8 *)(v82 + 5) > 0x16u)
        continue;
    }
    goto LABEL_143;
  }
  v28 = HIDWORD(result);
  if ((int)result > 63)
  {
    v93 = *(_QWORD *)(v44 + 8) - 8;
    v94 = 0x3F00000000 - (result << 32);
  }
  else
  {
    v93 = v44 + 16;
    v94 = result << 32;
  }
  v95 = *(_QWORD *)(v93 + (v94 >> 29));
  if ((v95 & 0xFFFE000000000002) != 0)
  {
LABEL_270:
    v106 = (WebCore::Node *)v95;
    v110 = v44;
    goto LABEL_101;
  }
  v96 = *(unsigned __int8 *)(v95 + 5);
  if (v96 == 6)
  {
    v32 = *(_DWORD *)(v80 + 16) & 3;
    v97 = *(_QWORD *)(v95 + 16);
    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v95 & 0xFFFFFFFE) + 0x4C))
    {
      v35 = *(_QWORD *)(v95 + 24);
      v34 = *(_QWORD *)(v95 + 32);
      v106 = *(WebCore::Node **)(v95 + 8);
      v107 = v97;
      LODWORD(v108) = HIDWORD(result);
      v110 = v44;
      goto LABEL_106;
    }
    v106 = *(WebCore::Node **)(v95 + 8);
    v107 = v97;
    LODWORD(v108) = HIDWORD(result);
    v110 = v44;
    goto LABEL_126;
  }
  if (v96 != 5)
    goto LABEL_270;
LABEL_109:
  result = JSC::JSObject::fillGetterPropertySlot();
LABEL_102:
  *v9 = 0;
  v9[8] = 0;
LABEL_144:
  if (v115)
  {
    v67 = *((_DWORD *)v114 + 1);
    if (!v67)
    {
      __break(0xC471u);
      JUMPOUT(0x194D5BEACLL);
    }
    *((_DWORD *)v114 + 1) = v67 - 1;
  }
  if (v14)
  {
    if (*((_DWORD *)v14 + 6) == 2)
    {
      if ((*((_WORD *)v14 + 15) & 0x400) == 0)
        return (unint64_t)WebCore::Node::removedLastRef(v14, v13);
    }
    else
    {
      *((_DWORD *)v14 + 6) -= 2;
    }
  }
  return result;
}

unint64_t WebCore::jsNamedNodeMapConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSNamedNodeMapPrototype::s_info != (char **)(16
                                                            * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNamedNodeMap>,(WebCore::DOMConstructorID)465>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsNamedNodeMap_length(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, WTF::String *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  BOOL v10;

  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8);
  v7 = *(_QWORD *)(v6 + 104);
  if (!v7)
    return v7 | 0xFFFE000000000000;
  if ((*(_BYTE *)(v7 + 4) & 8) != 0)
    WebCore::StyledElement::synchronizeStyleAttributeInternalImpl(*(WebCore::StyledElement **)(*(_QWORD *)(v5 + 8) + 8), (unsigned __int8 *)a3, a1, a4, a5);
  if ((*(_WORD *)(v6 + 28) & 0x20) != 0)
    WebCore::SVGElement::synchronizeAllAttributes((WebCore::SVGElement *)v6);
  v7 = *(_QWORD *)(v6 + 104);
  if (!v7)
    return v7 | 0xFFFE000000000000;
  v8 = *(_DWORD *)(v7 + 4);
  LODWORD(v7) = (v8 & 1) != 0 ? *(_DWORD *)(v7 + 52) : v8 >> 5;
  if (!(_DWORD)v7)
    return v7 | 0xFFFE000000000000;
  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 8) + 8) + 104);
  if (v7)
    v10 = (*(_DWORD *)(v7 + 4) & 1) == 0;
  else
    v10 = 1;
  if (v10)
  {
    LODWORD(v7) = *(_DWORD *)(v7 + 4) >> 5;
    return v7 | 0xFFFE000000000000;
  }
  LODWORD(v7) = *(_DWORD *)(v7 + 52);
  if ((v7 & 0x80000000) == 0)
    return v7 | 0xFFFE000000000000;
  return COERCE__INT64((double)v7) + 0x2000000000000;
}

uint64_t WebCore::JSNamedNodeMapOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  void *v6;
  uint64_t *v7;
  uint64_t v8;
  WTF::ConcurrentPtrHashSet *v9;
  _DWORD *v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int v15;
  unsigned int v16;
  void *v17;
  uint64_t result;
  uint64_t v19;
  void *v20;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 8) + 8);
  if (a5)
  {
    *a5 = "Reachable from NamedNodeMapOwner";
    a5[1] = 33;
  }
  if ((*(_BYTE *)(v5 + 22) & 8) == 0)
  {
    while (1)
    {
      v6 = (void *)v5;
      if ((*(_WORD *)(v5 + 28) & 0x80) != 0)
      {
        v8 = *(_QWORD *)(v5 + 200);
        if (!v8)
          goto LABEL_11;
        v7 = (uint64_t *)(v8 + 8);
      }
      else
      {
        v7 = (uint64_t *)(v5 + 32);
      }
      v5 = *v7;
      if (!v5)
        goto LABEL_11;
    }
  }
  v6 = *(void **)(*(_QWORD *)(v5 + 40) + 8);
LABEL_11:
  v9 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v10 = (_DWORD *)*((_QWORD *)v9 + 6);
  if ((_DWORD *)((char *)v9 + 56) == v10)
  {
    v19 = a4;
    v20 = v6;
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v9, v6);
    a4 = v19;
    v6 = v20;
    if ((_DWORD)result)
    {
LABEL_20:
      if (*(_BYTE *)(a4 + 131))
        (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v6);
      return 1;
    }
  }
  else
  {
    v11 = v10[1];
    v12 = ((unint64_t)v6 + ~((_QWORD)v6 << 32)) ^ (((unint64_t)v6 + ~((_QWORD)v6 << 32)) >> 22);
    v13 = 9 * ((v12 + ~(v12 << 13)) ^ ((v12 + ~(v12 << 13)) >> 8));
    v14 = (v13 ^ (v13 >> 15)) + ~((v13 ^ (v13 >> 15)) << 27);
    v15 = v11 & ((v14 >> 31) ^ v14);
    v16 = v15;
    while (1)
    {
      v17 = *(void **)&v10[2 * v16 + 4];
      if (!v17)
        return 0;
      if (v6 == v17)
        goto LABEL_20;
      v16 = (v16 + 1) & v11;
      if (v16 == v15)
      {
        __break(0xC471u);
        JUMPOUT(0x194D5C810);
      }
    }
  }
  return result;
}

void WebCore::JSNamedNodeMapOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  int v24;
  _QWORD *v25;

  v3 = *(_QWORD **)(*(_QWORD *)a2 + 24);
  *(_DWORD *)(*(_QWORD *)(v3[1] + 8) + 24) += 2;
  if (!*(_DWORD *)(a3 + 48))
  {
    if (*v3)
    {
      *(_QWORD *)(*v3 + 8) = 3;
      *v3 = 0;
    }
LABEL_4:
    v4 = *(_QWORD *)(v3[1] + 8);
    if (*(_DWORD *)(v4 + 24) == 2)
    {
      if ((*(_WORD *)(v4 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v4, a2);
    }
    else
    {
      *(_DWORD *)(v4 + 24) -= 2;
    }
    return;
  }
  v7 = *(_QWORD *)(a3 + 32);
  v5 = (uint64_t *)(a3 + 32);
  v6 = v7;
  if (!v7)
    goto LABEL_4;
  v8 = *(_DWORD *)(v6 - 8);
  v9 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
  v10 = 9 * ((v9 + ~(v9 << 13)) ^ ((v9 + ~(v9 << 13)) >> 8));
  v11 = (v10 ^ (v10 >> 15)) + ~((v10 ^ (v10 >> 15)) << 27);
  v12 = v8 & ((v11 >> 31) ^ v11);
  v13 = *(_QWORD **)(v6 + 16 * v12);
  if (v13 != v3)
  {
    v24 = 1;
    while (v13)
    {
      v12 = ((_DWORD)v12 + v24) & v8;
      v13 = *(_QWORD **)(v6 + 16 * v12);
      ++v24;
      if (v13 == v3)
        goto LABEL_11;
    }
    v12 = *(unsigned int *)(v6 - 4);
  }
LABEL_11:
  if (v12 != *(_DWORD *)(v6 - 4))
  {
    v14 = (_QWORD *)(v6 + 16 * v12);
    *v14 = -1;
    v17 = v14[1];
    v16 = v14 + 1;
    v15 = v17;
    if (v17)
    {
      *(_QWORD *)(v15 + 8) = 3;
      *v16 = 0;
    }
    ++*(_DWORD *)(*v5 - 16);
    v18 = *v5;
    if (*v5)
      v19 = *(_DWORD *)(v18 - 12) - 1;
    else
      v19 = -1;
    *(_DWORD *)(v18 - 12) = v19;
    v20 = *v5;
    if (*v5)
    {
      v21 = 6 * *(_DWORD *)(v20 - 12);
      v22 = *(_DWORD *)(v20 - 4);
      if (v21 < v22 && v22 >= 9)
      {
        v25 = v3;
        WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v5, v22 >> 1, 0);
        v3 = v25;
      }
    }
  }
  if (v3)
    goto LABEL_4;
}

uint64_t WebCore::JSNamedNodeMap::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSNamedNodeMap::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSNamedNodeMap::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSNavigateEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  JSC::Structure *v2;
  unint64_t v3;
  JSC::VM *v5;
  uint64_t v7;
  int v8;
  unint64_t v9;
  JSC::JSCell *v10;
  uint64_t Object;
  WTF::StringImpl *v12;
  _BOOL4 v13;
  JSC::VM *v14;
  double v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  JSC::VM *v18;
  double v19;
  int v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  JSC::VM *v23;
  double v24;
  int v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  JSC::VM *v28;
  double v29;
  BOOL v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  __int128 v34;
  __int128 v35;
  WTF::StringImpl *v36;
  WebCore::JSDOMGlobalObject *v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  WebCore::AbortSignal *v40;
  WebCore::NavigationDestination *v41;
  WTF::StringImpl *v42;
  JSC::VM *v43;
  JSC::VM *v44;
  uint64_t v45;
  unsigned int v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char **v51;
  int v52;
  unint64_t v53;
  WebCore::JSEvent *v54;
  JSC::JSCell *v55;
  unint64_t Structure;
  JSC::Structure *v57;
  JSC::JSCell *v58;
  uint64_t v59;
  JSCell *v60;
  JSC::JSCell *v61;
  JSC::JSGlobalObject *v62;
  JSC::JSObject *v63;
  JSC::JSGlobalObject *v64;
  JSC::VM *v65;
  WebCore::JSDOMGlobalObject *v66;
  JSC::Structure *v67;
  JSC::VM *FunctionRealm;
  uint64_t v69;
  unsigned int v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char **v75;
  int v76;
  JSC::JSCell *v77;
  unint64_t v78;
  JSC::Structure *v79;
  JSC::JSCell *v80;
  uint64_t v81;
  unint64_t SubclassStructure;
  JSC::VM *v83;
  JSCell *v84;
  uint64_t v86;
  _BOOL4 v87;
  uint64_t v88;
  WTF::StringImpl *v90;
  WTF::StringImpl *v91;
  unint64_t v92;
  JSC::VM *v93;
  bmalloc::api *v94;
  void *v95;
  bmalloc::api *v96;
  void *v97;
  WTF::StringImpl *v98;
  int v99;
  WTF::StringImpl *v100;
  WTF::StringImpl *v101;
  unint64_t v102;
  uint64_t v103;
  WTF::StringImpl *v104;
  WTF::StringImpl *v105;
  unint64_t v106;
  BOOL v107;
  unint64_t v108;
  _DWORD *v109;
  int v110;
  WTF::StringImpl *v111;
  JSC::VM *v112;
  double v113;
  WTF::StringImpl *v114;
  WTF::StringImpl *v115;
  unint64_t v116;
  BOOL v117;
  JSC::VM *v118;
  double v119;
  WTF::StringImpl *v120;
  WTF::StringImpl *v121;
  WTF::StringImpl *v122;
  WTF::StringImpl *v123;
  unint64_t v124;
  int v125;
  WTF::StringImpl *v126;
  int v127;
  WTF::StringImpl *v128;
  WTF::StringImpl *v129;
  uint64_t v130;
  uint64_t v131;
  _BOOL4 v132;
  uint64_t v133;
  bmalloc::api *v135;
  void *v136;
  bmalloc::api *v137;
  void *v138;
  uint64_t v139;
  JSValue v140;
  uint64_t v141;
  JSC::Structure *v142;
  WTF::StringImpl *v143;
  unint64_t v144;
  BOOL v145;
  JSC::VM *v146;
  double v147;
  BOOL v148;
  int v149;
  uint64_t v150;
  int *v151;
  int v152;
  BOOL v153;
  int v154;
  uint64_t v155;
  int *v156;
  int v157;
  BOOL v158;
  int v159;
  uint64_t v160;
  int *v161;
  int v162;
  BOOL v163;
  int v164;
  uint64_t v165;
  int *v166;
  int v167;
  BOOL v168;
  int v169;
  uint64_t v170;
  int *v171;
  int v172;
  BOOL v173;
  int v174;
  uint64_t v175;
  int *v176;
  int v177;
  BOOL v178;
  int v179;
  uint64_t v180;
  int *v181;
  int v182;
  uint64_t v183;
  BOOL v184;
  BOOL v185;
  _DWORD *v186;
  JSC::VM *v187;
  WTF::StringImpl *v188;
  BOOL v189;
  int v190;
  int v191;
  WTF::StringImpl *v192;
  WebCore::AbortSignal *v193[2];
  WTF::StringImpl *v194[2];
  uint64_t v195;
  int v196;
  WTF::StringImpl *v197;
  WTF::StringImpl *v198;
  __int128 v199;
  __int128 v200;
  uint64_t v201;
  int v202;
  unsigned int v203;
  WTF::StringImpl *v204;
  int v205;
  JSC::VM *v206[2];

  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((unint64_t)(*(int *)(a2 + 32) - 1) <= 1)
  {
    v140.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v5, a1, v140);
  }
  v7 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v204);
  v8 = v205;
  if (v205)
  {
    v84 = 0;
    goto LABEL_109;
  }
  v9 = 0xFFFE000000000002;
  v10 = *(JSC::JSCell **)(a2 + 56);
  v206[0] = *((JSC::VM **)a1 + 7);
  if (((unint64_t)v10 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
LABEL_63:
    WebCore::throwRequiredMemberTypeError((int)a1, (int)v206, "destination", 12, "NavigateEventInit", 18, "NavigationDestination", 22);
  }
  else if (((unint64_t)v10 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v10)) == 0)
  {
LABEL_121:
    JSC::throwTypeError();
  }
  else
  {
    v2 = (JSC::Structure *)Object;
    WTF::AtomStringImpl::addLiteral();
    v3 = JSC::JSObject::get(v2, a1, (unint64_t)v198);
    if (v198)
    {
      if (*(_DWORD *)v198 == 2)
        WTF::StringImpl::destroy(v198, v12);
      else
        *(_DWORD *)v198 -= 2;
    }
    if (!*((_DWORD *)v206[0] + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v206[0]))
    {
      if (v3 == 10)
      {
        v13 = 0;
        goto LABEL_17;
      }
      v14 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v3 >= 0xFFFE000000000000)
        goto LABEL_302;
      *(_QWORD *)&v15 = v3 - 0x2000000000000;
      if (v3 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
      {
        v13 = v15 > 0.0 || v15 < 0.0;
        goto LABEL_16;
      }
      if ((v3 & 0xFFFE000000000002) != 0)
      {
        v13 = v3 == 7;
        goto LABEL_16;
      }
      v149 = *(unsigned __int8 *)(v3 + 5);
      if (v149 == 3)
      {
        v152 = *(_DWORD *)(v3 + 8);
      }
      else
      {
        if (v149 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0xA) & 1) != 0)
          {
            v148 = *(_QWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            goto LABEL_343;
          }
          v13 = 1;
          goto LABEL_16;
        }
        v150 = *(_QWORD *)(v3 + 8);
        if ((v150 & 1) != 0)
          v151 = (int *)(v3 + 16);
        else
          v151 = (int *)(v150 + 4);
        v152 = *v151;
      }
      v148 = v152 == 0;
      goto LABEL_343;
    }
  }
LABEL_64:
  v203 = 1;
  while (1)
  {
    v9 = v203;
    if (v203)
      break;
    if (!v205)
    {
      v33 = v204;
      v204 = 0;
      v197 = v33;
      LODWORD(v192) = (_DWORD)v198;
      v34 = v199;
      v199 = 0u;
      *(_OWORD *)v193 = v34;
      v35 = v200;
      v200 = 0u;
      *(_OWORD *)v194 = v35;
      v195 = v201;
      v196 = v202;
      WebCore::NavigateEvent::create(&v197, (unsigned __int8 *)&v192, (uint64_t *)v206);
      v38 = v194[1];
      v194[1] = 0;
      if (v38)
      {
        if (*(_DWORD *)v38 == 2)
          WTF::StringImpl::destroy(v38, v36);
        else
          *(_DWORD *)v38 -= 2;
      }
      v39 = v194[0];
      v194[0] = 0;
      if (v39)
      {
        if (*((_DWORD *)v39 + 4) == 1)
          (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v39 + 16))(v39);
        else
          --*((_DWORD *)v39 + 4);
      }
      v40 = v193[1];
      v193[1] = 0;
      if (v40)
      {
        if (*((_DWORD *)v40 + 6) == 1)
        {
          WebCore::AbortSignal::~AbortSignal(v40, v36);
          bmalloc::api::isoDeallocate(v94, v95);
        }
        else
        {
          --*((_DWORD *)v40 + 6);
        }
      }
      v41 = v193[0];
      v193[0] = 0;
      if (v41)
      {
        if (*(_DWORD *)v41 == 1)
        {
          WebCore::NavigationDestination::~NavigationDestination(v41, v36);
          bmalloc::api::isoDeallocate(v96, v97);
        }
        else
        {
          --*(_DWORD *)v41;
        }
      }
      v42 = v197;
      v197 = 0;
      if (v42)
      {
        if (*(_DWORD *)v42 == 2)
          WTF::StringImpl::destroy(v42, v36);
        else
          *(_DWORD *)v42 -= 2;
      }
      v43 = v206[0];
      if (*(void (***)(WebCore::NavigateEvent *__hidden))v206[0] != off_1E33FFE58)
      {
        __break(0xC471u);
        JUMPOUT(0x194D5D92CLL);
      }
      v44 = *(JSC::VM **)(v7 + 40);
      v45 = *((_QWORD *)v44 + 412);
      if (!v45)
        goto LABEL_89;
      v46 = *(_DWORD *)(v45 - 8);
      v47 = ((unint64_t)&WebCore::JSNavigateEvent::s_info + ~((_QWORD)&WebCore::JSNavigateEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSNavigateEvent::s_info + ~((_QWORD)&WebCore::JSNavigateEvent::s_info << 32)) >> 22);
      v48 = 9 * ((v47 + ~(v47 << 13)) ^ ((v47 + ~(v47 << 13)) >> 8));
      v49 = (v48 ^ (v48 >> 15)) + ~((v48 ^ (v48 >> 15)) << 27);
      v50 = v46 & ((v49 >> 31) ^ v49);
      v51 = *(char ***)(v45 + 16 * v50);
      if (v51 == &WebCore::JSNavigateEvent::s_info)
      {
LABEL_88:
        v53 = *(_QWORD *)(v45 + 16 * v50 + 8);
        if (!v53)
          goto LABEL_89;
      }
      else
      {
        v52 = 1;
        while (v51)
        {
          v50 = ((_DWORD)v50 + v52) & v46;
          v51 = *(char ***)(v45 + 16 * v50);
          ++v52;
          if (v51 == &WebCore::JSNavigateEvent::s_info)
            goto LABEL_88;
        }
LABEL_89:
        v54 = (WebCore::JSEvent *)*((_QWORD *)v44 + 7);
        v55 = (JSC::JSCell *)WebCore::JSEvent::prototype(v54, v44, v37);
        Structure = WebCore::JSNavigateEventPrototype::createStructure((uint64_t *)v54, (uint64_t)v44, v55);
        *(_DWORD *)(Structure + 16) |= 0x80000u;
        v58 = (JSC::JSCell *)WebCore::JSNavigateEventPrototype::create(v54, v44, Structure, v57);
        v59 = WebCore::JSNavigateEvent::createStructure((uint64_t *)v54, (uint64_t)v44, v58);
        v53 = WebCore::cacheDOMStructure((JSCell *)v44, v59, (uint64_t)&WebCore::JSNavigateEvent::s_info);
      }
      v60 = (JSCell *)WebCore::JSNavigateEvent::create(v53, v44, (uint64_t *)v206);
      WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*((_QWORD *)v44 + 415), (uint64_t)v43, (uint64_t)v60);
      v61 = *(JSC::JSCell **)(a2 + 40);
      if (((unint64_t)v61 & 0xFFFE000000000002) != 0
        || (v62 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v61)) == 0
        || (v64 = v62, v62 == *(JSC::JSGlobalObject **)(a2 + 24))
        || (v65 = (JSC::VM *)*((_QWORD *)a1 + 7),
            FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v62, v63),
            *((_DWORD *)v65 + 20))
        && (JSC::VM::hasExceptionsAfterHandlingTraps(v65) & 1) != 0)
      {
LABEL_103:
        if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
          v60 = 0;
        v83 = v206[0];
        v206[0] = 0;
        if (v83)
        {
          if (*((_DWORD *)v83 + 4) == 1)
            (*(void (**)(JSC::VM *))(*(_QWORD *)v83 + 8))(v83);
          else
            --*((_DWORD *)v83 + 4);
        }
        goto LABEL_107;
      }
      v69 = *((_QWORD *)FunctionRealm + 412);
      if (v69)
      {
        v70 = *(_DWORD *)(v69 - 8);
        v71 = ((unint64_t)&WebCore::JSNavigateEvent::s_info + ~((_QWORD)&WebCore::JSNavigateEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSNavigateEvent::s_info + ~((_QWORD)&WebCore::JSNavigateEvent::s_info << 32)) >> 22);
        v72 = 9 * ((v71 + ~(v71 << 13)) ^ ((v71 + ~(v71 << 13)) >> 8));
        v73 = (v72 ^ (v72 >> 15)) + ~((v72 ^ (v72 >> 15)) << 27);
        v74 = v70 & ((v73 >> 31) ^ v73);
        v75 = *(char ***)(v69 + 16 * v74);
        if (v75 != &WebCore::JSNavigateEvent::s_info)
        {
          v76 = 1;
          while (v75)
          {
            v74 = ((_DWORD)v74 + v76) & v70;
            v75 = *(char ***)(v69 + 16 * v74);
            ++v76;
            if (v75 == &WebCore::JSNavigateEvent::s_info)
              goto LABEL_99;
          }
          goto LABEL_100;
        }
LABEL_99:
        v66 = *(WebCore::JSDOMGlobalObject **)(v69 + 16 * v74 + 8);
        if (!v66)
          goto LABEL_100;
      }
      else
      {
LABEL_100:
        v77 = (JSC::JSCell *)WebCore::JSEvent::prototype(v65, FunctionRealm, v66);
        v78 = WebCore::JSNavigateEventPrototype::createStructure((uint64_t *)v65, (uint64_t)FunctionRealm, v77);
        *(_DWORD *)(v78 + 16) |= 0x80000u;
        v80 = (JSC::JSCell *)WebCore::JSNavigateEventPrototype::create(v65, FunctionRealm, v78, v79);
        v81 = WebCore::JSNavigateEvent::createStructure((uint64_t *)v65, (uint64_t)FunctionRealm, v80);
        v66 = (WebCore::JSDOMGlobalObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v81, (uint64_t)&WebCore::JSNavigateEvent::s_info);
      }
      SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v64, v66, v67);
      if (!*((_DWORD *)v65 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v65) & 1) == 0)
        JSC::JSObject::setStructure(v60, v65, SubclassStructure);
      goto LABEL_103;
    }
    v14 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_302:
    v148 = (_DWORD)v3 == 0;
LABEL_343:
    v13 = !v148;
LABEL_16:
    if (*((_DWORD *)v14 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v14))
      goto LABEL_64;
LABEL_17:
    WTF::AtomStringImpl::addLiteral();
    v16 = v198;
    v3 = JSC::JSObject::get(v2, a1, (unint64_t)v198);
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v17);
      else
        *(_DWORD *)v16 -= 2;
    }
    if (*((_DWORD *)v206[0] + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v206[0]))
      goto LABEL_64;
    if (v3 == 10)
    {
      v191 = 0;
      goto LABEL_32;
    }
    v18 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v3 >= 0xFFFE000000000000)
    {
      v153 = (_DWORD)v3 == 0;
      goto LABEL_373;
    }
    *(_QWORD *)&v19 = v3 - 0x2000000000000;
    if (v3 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      if (v19 <= 0.0)
      {
        LODWORD(v3) = v19 < 0.0;
        goto LABEL_27;
      }
    }
    else
    {
      if ((v3 & v9) != 0)
      {
        LODWORD(v3) = v3 == 7;
        goto LABEL_27;
      }
      v154 = *(unsigned __int8 *)(v3 + 5);
      if (v154 == 3)
      {
        v157 = *(_DWORD *)(v3 + 8);
LABEL_349:
        v153 = v157 == 0;
        goto LABEL_373;
      }
      if (v154 == 2)
      {
        v155 = *(_QWORD *)(v3 + 8);
        if ((v155 & 1) != 0)
          v156 = (int *)(v3 + 16);
        else
          v156 = (int *)(v155 + 4);
        v157 = *v156;
        goto LABEL_349;
      }
      if ((*(_BYTE *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0xA) & 1) != 0)
      {
        v153 = *(_QWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
LABEL_373:
        LODWORD(v3) = !v153;
        goto LABEL_27;
      }
    }
    LODWORD(v3) = 1;
LABEL_27:
    if (*((_DWORD *)v18 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v18))
      goto LABEL_64;
    if ((_DWORD)v3)
      v20 = 256;
    else
      v20 = 0;
    v191 = v20;
LABEL_32:
    WTF::AtomStringImpl::addLiteral();
    v21 = v198;
    v3 = JSC::JSObject::get(v2, a1, (unint64_t)v198);
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v22);
      else
        *(_DWORD *)v21 -= 2;
    }
    if (*((_DWORD *)v206[0] + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v206[0]))
      goto LABEL_64;
    if (v3 == 10)
    {
      v190 = 0;
      goto LABEL_47;
    }
    v23 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v3 >= 0xFFFE000000000000)
    {
      v158 = (_DWORD)v3 == 0;
      goto LABEL_377;
    }
    *(_QWORD *)&v24 = v3 - 0x2000000000000;
    if (v3 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      if (v24 <= 0.0)
      {
        LODWORD(v3) = v24 < 0.0;
        goto LABEL_42;
      }
    }
    else
    {
      if ((v3 & v9) != 0)
      {
        LODWORD(v3) = v3 == 7;
        goto LABEL_42;
      }
      v159 = *(unsigned __int8 *)(v3 + 5);
      if (v159 == 3)
      {
        v162 = *(_DWORD *)(v3 + 8);
LABEL_353:
        v158 = v162 == 0;
        goto LABEL_377;
      }
      if (v159 == 2)
      {
        v160 = *(_QWORD *)(v3 + 8);
        if ((v160 & 1) != 0)
          v161 = (int *)(v3 + 16);
        else
          v161 = (int *)(v160 + 4);
        v162 = *v161;
        goto LABEL_353;
      }
      if ((*(_BYTE *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0xA) & 1) != 0)
      {
        v158 = *(_QWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
LABEL_377:
        LODWORD(v3) = !v158;
        goto LABEL_42;
      }
    }
    LODWORD(v3) = 1;
LABEL_42:
    if (*((_DWORD *)v23 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v23))
      goto LABEL_64;
    if ((_DWORD)v3)
      v25 = 0x10000;
    else
      v25 = 0;
    v190 = v25;
LABEL_47:
    WTF::AtomStringImpl::addLiteral();
    v26 = v198;
    v3 = JSC::JSObject::get(v2, a1, (unint64_t)v198);
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
        WTF::StringImpl::destroy(v26, v27);
      else
        *(_DWORD *)v26 -= 2;
    }
    if (*((_DWORD *)v206[0] + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v206[0]))
      goto LABEL_64;
    if (v3 == 10)
    {
      v189 = 0;
      goto LABEL_58;
    }
    v28 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v3 >= 0xFFFE000000000000)
    {
      v163 = (_DWORD)v3 == 0;
      goto LABEL_381;
    }
    *(_QWORD *)&v29 = v3 - 0x2000000000000;
    if (v3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      if ((v3 & v9) != 0)
      {
        v30 = v3 == 7;
        goto LABEL_57;
      }
      v164 = *(unsigned __int8 *)(v3 + 5);
      if (v164 == 3)
      {
        v167 = *(_DWORD *)(v3 + 8);
      }
      else
      {
        if (v164 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_359:
            v30 = 1;
            goto LABEL_57;
          }
          v163 = *(_QWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
          goto LABEL_381;
        }
        v165 = *(_QWORD *)(v3 + 8);
        if ((v165 & 1) != 0)
          v166 = (int *)(v3 + 16);
        else
          v166 = (int *)(v165 + 4);
        v167 = *v166;
      }
      v163 = v167 == 0;
LABEL_381:
      v30 = !v163;
      goto LABEL_57;
    }
    if (v29 > 0.0)
      goto LABEL_359;
    v30 = v29 < 0.0;
LABEL_57:
    v189 = v30;
    if (*((_DWORD *)v28 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v28))
      goto LABEL_64;
LABEL_58:
    WTF::AtomStringImpl::addLiteral();
    v31 = v198;
    v3 = JSC::JSObject::get(v2, a1, (unint64_t)v198);
    if (v31)
    {
      if (*(_DWORD *)v31 == 2)
        WTF::StringImpl::destroy(v31, v32);
      else
        *(_DWORD *)v31 -= 2;
    }
    if (*((_DWORD *)v206[0] + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v206[0]))
      goto LABEL_64;
    if (v3 == 10)
      goto LABEL_63;
    v198 = (WTF::StringImpl *)*((_QWORD *)a1 + 7);
    if ((v3 & v9) != 0)
      goto LABEL_121;
    v86 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
    v87 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
    if ((_DWORD)v86)
    {
      v88 = 16 * v86;
      if ((char **)v88 != &WebCore::JSNavigationDestination::s_info)
      {
        do
        {
          v88 = *(_QWORD *)(v88 + 16);
          v87 = v88 != 0;
        }
        while ((char **)v88 != &WebCore::JSNavigationDestination::s_info && v88 != 0);
      }
    }
    if (!v87)
      goto LABEL_121;
    v3 = *(_QWORD *)(v3 + 24);
    if (!v3)
      goto LABEL_121;
    ++*(_DWORD *)v3;
    WTF::AtomStringImpl::addLiteral();
    v90 = v198;
    v92 = JSC::JSObject::get(v2, a1, (unint64_t)v198);
    if (v90)
    {
      if (*(_DWORD *)v90 == 2)
        WTF::StringImpl::destroy(v90, v91);
      else
        *(_DWORD *)v90 -= 2;
    }
    if (*((_DWORD *)v206[0] + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v206[0]))
    {
      v203 = 1;
      goto LABEL_219;
    }
    if (v92 == 10)
    {
      v93 = v5;
      v188 = 0;
      LODWORD(v193[0]) = 0;
      goto LABEL_136;
    }
    WebCore::Converter<WebCore::IDLNullable<WebCore::IDLDOMString>>::convert(a1, v92, (uint64_t)&v192);
    v99 = (int)v193[0];
    if (!LODWORD(v193[0]))
    {
      v93 = v5;
      v188 = v192;
LABEL_136:
      v192 = 0;
      WTF::AtomStringImpl::addLiteral();
      v100 = v198;
      v102 = JSC::JSObject::get(v2, a1, (unint64_t)v198);
      if (v100)
      {
        if (*(_DWORD *)v100 == 2)
          WTF::StringImpl::destroy(v100, v101);
        else
          *(_DWORD *)v100 -= 2;
      }
      if (*((_DWORD *)v206[0] + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v206[0]) & 1) != 0)
      {
        v109 = 0;
        v2 = 0;
        v110 = 1;
        v5 = v93;
LABEL_153:
        v111 = v188;
LABEL_206:
        v203 = v110;
        v99 = (int)v193[0];
        goto LABEL_207;
      }
      v5 = v93;
      if ((v102 | 8) == 0xA)
      {
        v186 = 0;
      }
      else
      {
        v198 = (WTF::StringImpl *)*((_QWORD *)a1 + 7);
        v108 = JSC::jsDynamicCast<WebCore::JSDOMFormData *>(v102);
        if (!v108 || (v139 = *(_QWORD *)(v108 + 24)) == 0)
        {
          JSC::throwTypeError();
          v109 = 0;
          v2 = 0;
          v110 = 1;
          goto LABEL_153;
        }
        v186 = *(_DWORD **)(v108 + 24);
        ++*(_DWORD *)(v139 + 16);
      }
      v103 = WebCore::JSDOMGlobalObject::scriptExecutionContext(a1);
      v187 = v93;
      if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v103 + 136))(v103) + 464) & 0x400000000000000) == 0)
      {
        v185 = 0;
        goto LABEL_165;
      }
      WTF::AtomStringImpl::addLiteral();
      v104 = v198;
      v106 = JSC::JSObject::get(v2, a1, (unint64_t)v198);
      if (v104)
      {
        if (*(_DWORD *)v104 == 2)
          WTF::StringImpl::destroy(v104, v105);
        else
          *(_DWORD *)v104 -= 2;
      }
      if (*((_DWORD *)v206[0] + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v206[0]) & 1) != 0)
      {
LABEL_204:
        v2 = 0;
        v110 = 1;
LABEL_205:
        v5 = v187;
        v111 = v188;
        v109 = v186;
        goto LABEL_206;
      }
      if (v106 == 10)
      {
        v107 = 0;
        goto LABEL_164;
      }
      v112 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v106 >= 0xFFFE000000000000)
      {
        v173 = (_DWORD)v106 == 0;
        goto LABEL_399;
      }
      *(_QWORD *)&v113 = v106 - 0x2000000000000;
      if (v106 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
      {
        if (v113 <= 0.0)
        {
          v107 = v113 < 0.0;
          goto LABEL_163;
        }
      }
      else
      {
        if ((v106 & 0xFFFE000000000002) != 0)
        {
          v107 = v106 == 7;
          goto LABEL_163;
        }
        v174 = *(unsigned __int8 *)(v106 + 5);
        if (v174 == 3)
        {
          v177 = *(_DWORD *)(v106 + 8);
          goto LABEL_398;
        }
        if (v174 == 2)
        {
          v175 = *(_QWORD *)(v106 + 8);
          if ((v175 & 1) != 0)
            v176 = (int *)(v106 + 16);
          else
            v176 = (int *)(v175 + 4);
          v177 = *v176;
LABEL_398:
          v173 = v177 == 0;
LABEL_399:
          v107 = !v173;
LABEL_163:
          if (*((_DWORD *)v112 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v112) & 1) != 0)
            goto LABEL_204;
LABEL_164:
          v185 = v107;
LABEL_165:
          WTF::AtomStringImpl::addLiteral();
          v114 = v198;
          v116 = JSC::JSObject::get(v2, a1, (unint64_t)v198);
          if (v114)
          {
            if (*(_DWORD *)v114 == 2)
              WTF::StringImpl::destroy(v114, v115);
            else
              *(_DWORD *)v114 -= 2;
          }
          if (*((_DWORD *)v206[0] + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v206[0]) & 1) != 0)
            goto LABEL_204;
          if (v116 == 10)
          {
            v117 = 0;
            goto LABEL_176;
          }
          v118 = (JSC::VM *)*((_QWORD *)a1 + 7);
          if (v116 >= 0xFFFE000000000000)
          {
            v168 = (_DWORD)v116 == 0;
            goto LABEL_405;
          }
          *(_QWORD *)&v119 = v116 - 0x2000000000000;
          if (v116 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
          {
            if (v119 <= 0.0)
            {
              v117 = v119 < 0.0;
              goto LABEL_175;
            }
          }
          else
          {
            if ((v116 & 0xFFFE000000000002) != 0)
            {
              v117 = v116 == 7;
              goto LABEL_175;
            }
            v169 = *(unsigned __int8 *)(v116 + 5);
            if (v169 == 3)
            {
              v172 = *(_DWORD *)(v116 + 8);
              goto LABEL_394;
            }
            if (v169 == 2)
            {
              v170 = *(_QWORD *)(v116 + 8);
              if ((v170 & 1) != 0)
                v171 = (int *)(v116 + 16);
              else
                v171 = (int *)(v170 + 4);
              v172 = *v171;
LABEL_394:
              v168 = v172 == 0;
LABEL_405:
              v117 = !v168;
LABEL_175:
              if (*((_DWORD *)v118 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v118) & 1) != 0)
                goto LABEL_204;
LABEL_176:
              WTF::AtomStringImpl::addLiteral();
              v120 = v198;
              v183 = JSC::JSObject::get(v2, a1, (unint64_t)v198);
              if (v120)
              {
                if (*(_DWORD *)v120 == 2)
                  WTF::StringImpl::destroy(v120, v121);
                else
                  *(_DWORD *)v120 -= 2;
              }
              v184 = v117;
              if (*((_DWORD *)v206[0] + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v206[0]) & 1) != 0)
                goto LABEL_204;
              WTF::AtomStringImpl::addLiteral();
              v122 = v198;
              v124 = JSC::JSObject::get(v2, a1, (unint64_t)v198);
              if (v122)
              {
                if (*(_DWORD *)v122 == 2)
                  WTF::StringImpl::destroy(v122, v123);
                else
                  *(_DWORD *)v122 -= 2;
              }
              if (*((_DWORD *)v206[0] + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v206[0]) & 1) != 0)
                goto LABEL_204;
              v125 = v191 | v13 | v190;
              if (v124 != 10)
              {
                v198 = (WTF::StringImpl *)*((_QWORD *)a1 + 7);
                v126 = v198;
                v127 = WebCore::parseEnumeration<WebCore::NavigationNavigationType>(a1, v124);
                if (*((_DWORD *)v126 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v126) & 1) != 0)
                  goto LABEL_204;
                if ((unsigned __int16)v127 > 0xFFu)
                {
                  v125 |= v127 << 24;
                  goto LABEL_188;
                }
LABEL_203:
                JSC::throwTypeError();
                goto LABEL_204;
              }
LABEL_188:
              WTF::AtomStringImpl::addLiteral();
              v128 = v198;
              v130 = JSC::JSObject::get(v2, a1, (unint64_t)v198);
              if (v128)
              {
                if (*(_DWORD *)v128 == 2)
                  WTF::StringImpl::destroy(v128, v129);
                else
                  *(_DWORD *)v128 -= 2;
              }
              if (*((_DWORD *)v206[0] + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v206[0]) & 1) != 0)
                goto LABEL_204;
              if (v130 == 10)
              {
                WebCore::throwRequiredMemberTypeError((int)a1, (int)v206, "signal", 7, "NavigateEventInit", 18, "AbortSignal", 12);
                goto LABEL_204;
              }
              v198 = (WTF::StringImpl *)*((_QWORD *)a1 + 7);
              if ((v130 & 0xFFFE000000000002) != 0)
                goto LABEL_203;
              v131 = *(unsigned int *)(16 * (*(_DWORD *)v130 & 0xFFFFFFFE) + 0x4C);
              v132 = *(_DWORD *)(16 * (*(_DWORD *)v130 & 0xFFFFFFFE) + 0x4C) != 0;
              if ((_DWORD)v131)
              {
                v133 = 16 * v131;
                if ((char **)v133 != &WebCore::JSAbortSignal::s_info)
                {
                  do
                  {
                    v133 = *(_QWORD *)(v133 + 16);
                    v132 = v133 != 0;
                  }
                  while ((char **)v133 != &WebCore::JSAbortSignal::s_info && v133 != 0);
                }
              }
              if (!v132)
                goto LABEL_203;
              v141 = *(_QWORD *)(v130 + 24);
              if (!v141)
                goto LABEL_203;
              v142 = *(JSC::Structure **)(v130 + 24);
              ++*(_DWORD *)(v141 + 24);
              WTF::AtomStringImpl::addLiteral();
              v143 = v198;
              v144 = JSC::JSObject::get(v2, a1, (unint64_t)v198);
              if (v143)
              {
                if (*(_DWORD *)v143 == 2)
                  WTF::StringImpl::destroy(v143, v98);
                else
                  *(_DWORD *)v143 -= 2;
              }
              if (*((_DWORD *)v206[0] + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v206[0]) & 1) != 0)
              {
LABEL_361:
                v110 = 1;
                v2 = v142;
                goto LABEL_205;
              }
              if (v144 == 10)
              {
                v145 = 0;
                goto LABEL_291;
              }
              v146 = (JSC::VM *)*((_QWORD *)a1 + 7);
              if (v144 >= 0xFFFE000000000000)
              {
                v178 = (_DWORD)v144 == 0;
                goto LABEL_420;
              }
              *(_QWORD *)&v147 = v144 - 0x2000000000000;
              if (v144 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
              {
                if (v147 <= 0.0)
                {
                  v145 = v147 < 0.0;
                  goto LABEL_290;
                }
              }
              else
              {
                if ((v144 & 0xFFFE000000000002) != 0)
                {
                  v145 = v144 == 7;
                  goto LABEL_290;
                }
                v179 = *(unsigned __int8 *)(v144 + 5);
                if (v179 == 3)
                {
                  v182 = *(_DWORD *)(v144 + 8);
                  goto LABEL_419;
                }
                if (v179 == 2)
                {
                  v180 = *(_QWORD *)(v144 + 8);
                  if ((v180 & 1) != 0)
                    v181 = (int *)(v144 + 16);
                  else
                    v181 = (int *)(v180 + 4);
                  v182 = *v181;
LABEL_419:
                  v178 = v182 == 0;
LABEL_420:
                  v145 = !v178;
LABEL_290:
                  if (*((_DWORD *)v146 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v146) & 1) != 0)
                    goto LABEL_361;
LABEL_291:
                  v110 = 0;
                  LODWORD(v198) = v125;
                  *(_QWORD *)&v199 = v3;
                  *((_QWORD *)&v199 + 1) = v142;
                  v5 = v187;
                  *(_QWORD *)&v200 = v186;
                  *((_QWORD *)&v200 + 1) = v188;
                  v201 = v183;
                  LOBYTE(v202) = v189;
                  BYTE1(v202) = v145;
                  BYTE2(v202) = v184;
                  HIBYTE(v202) = v185;
                  v111 = 0;
                  v109 = 0;
                  v2 = 0;
                  v3 = 0;
                  goto LABEL_206;
                }
                if ((*(_BYTE *)(16 * (*(_DWORD *)v144 & 0xFFFFFFFE) + 0xA) & 1) != 0)
                {
                  v178 = *(_QWORD *)(16 * (*(_DWORD *)v144 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
                  goto LABEL_420;
                }
              }
              v145 = 1;
              goto LABEL_290;
            }
            if ((*(_BYTE *)(16 * (*(_DWORD *)v116 & 0xFFFFFFFE) + 0xA) & 1) != 0)
            {
              v168 = *(_QWORD *)(16 * (*(_DWORD *)v116 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
              goto LABEL_405;
            }
          }
          v117 = 1;
          goto LABEL_175;
        }
        if ((*(_BYTE *)(16 * (*(_DWORD *)v106 & 0xFFFFFFFE) + 0xA) & 1) != 0)
        {
          v173 = *(_QWORD *)(16 * (*(_DWORD *)v106 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
          goto LABEL_399;
        }
      }
      v107 = 1;
      goto LABEL_163;
    }
    v111 = 0;
    v109 = 0;
    v2 = 0;
    v203 = 1;
LABEL_207:
    if (v99 != -1)
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32BEA70[v99])(&v197, &v192);
    if (!v111)
      goto LABEL_212;
    if (*(_DWORD *)v111 != 2)
    {
      *(_DWORD *)v111 -= 2;
LABEL_212:
      if (v109)
        goto LABEL_213;
      goto LABEL_215;
    }
    WTF::StringImpl::destroy(v111, v98);
    if (v109)
    {
LABEL_213:
      if (v109[4] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v109 + 16))(v109);
      else
        --v109[4];
    }
LABEL_215:
    if (v2)
    {
      if (*((_DWORD *)v2 + 6) != 1)
      {
        --*((_DWORD *)v2 + 6);
        goto LABEL_218;
      }
      WebCore::AbortSignal::~AbortSignal(v2, v98);
      bmalloc::api::isoDeallocate(v137, v138);
      if (v3)
        goto LABEL_219;
    }
    else
    {
LABEL_218:
      if (v3)
      {
LABEL_219:
        if (*(_DWORD *)v3 == 1)
        {
          WebCore::NavigationDestination::~NavigationDestination((WebCore::NavigationDestination *)v3, v98);
          bmalloc::api::isoDeallocate(v135, v136);
        }
        else
        {
          --*(_DWORD *)v3;
        }
      }
    }
  }
  v60 = 0;
  v84 = 0;
  if (v203 != -1)
  {
LABEL_107:
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32BF8E0[v9])(&v192, &v198);
    v84 = v60;
  }
  v8 = v205;
LABEL_109:
  if (v8 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32BEAA0[v8])(&v198, &v204);
  return v84;
}

uint64_t WebCore::JSNavigateEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSNavigateEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSNavigateEventPrototype::create(WebCore::JSNavigateEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  uint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  JSC::Structure *v18;
  int v19;
  unint64_t v21;
  WTF::StringImpl *v22[6];
  int v23;
  int v24;
  JSC::Structure *v25;
  int v26;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v21 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v21);
    *((_QWORD *)this + 4865) = SlowCase + (int)v21;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<13u>(this, (uint64_t)&WebCore::JSNavigateEvent::s_info, (uint64_t)&WebCore::JSNavigateEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                         + 0x28));
  if (v9 && *(_BYTE *)(v9 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194D5E464);
  }
  v10 = v9 - 192;
  if (!v9)
    v10 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v10 + 680) + 696) & 0x400000000000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v11 = v22[0];
    v12 = *((_DWORD *)this + 23281);
    *((_DWORD *)this + 23281) = 1;
    LODWORD(v22[0]) = -1;
    WORD2(v22[0]) = 1;
    JSC::JSObject::deleteProperty();
    *((_DWORD *)this + 23281) = v12;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v13);
      else
        *(_DWORD *)v11 -= 2;
    }
    if ((*(_BYTE *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x10) & 3) != 0)
      JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE)), this, (JSC::JSObject *)SlowCase);
  }
  v14 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v16 = JSC::JSString::create((uint64_t)this, v22);
  v17 = v22[0];
  v22[0] = 0;
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v15);
    else
      *(_DWORD *)v17 -= 2;
  }
  v18 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v26 = *(_DWORD *)SlowCase;
  v25 = v18;
  v19 = JSC::Structure::outOfLineCapacity(v18);
  v23 = 0;
  v24 = v19;
  v22[0] = (WTF::StringImpl *)&v24;
  v22[1] = (WTF::StringImpl *)SlowCase;
  v22[2] = this;
  v22[3] = (WTF::StringImpl *)&v26;
  v22[4] = (WTF::StringImpl *)&v25;
  v22[5] = (WTF::StringImpl *)&v23;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v18, this, v14, 6, (uint64_t)v22);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v23, v16);
  *((_DWORD *)v18 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSNavigateEvent>,(WebCore::DOMConstructorID)719>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5752);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSNavigateEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000002, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSNavigateEvent::s_info + ~((_QWORD)&WebCore::JSNavigateEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSNavigateEvent::s_info + ~((_QWORD)&WebCore::JSNavigateEvent::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSNavigateEvent::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSNavigateEvent::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEvent::prototype((WebCore::JSEvent *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSNavigateEventPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSNavigateEventPrototype::create((WebCore::JSNavigateEventPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSNavigateEvent::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSNavigateEvent::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5752) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsNavigateEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSNavigateEventPrototype::s_info != (char **)(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSNavigateEvent>,(WebCore::DOMConstructorID)719>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsNavigateEvent_navigationType(uint64_t a1, uint64_t a2)
{
  return WebCore::convertEnumerationToJS<WebCore::NavigationNavigationType>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned __int8 *)(*(_QWORD *)(a2 + 24) + 72));
}

uint64_t WebCore::jsNavigateEvent_destination(uint64_t a1, uint64_t a2)
{
  WTF *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t SlowCase;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char **v13;
  int v14;
  unint64_t v15;
  uint64_t *v16;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v18;
  JSC::Structure *v19;
  JSC::JSCell *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  WTF *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  WTF *v36;
  void *v37;
  int v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *Allocator;
  uint64_t v43;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unsigned int v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  WTF *v54;
  int v55;
  unint64_t v56;
  _QWORD *v57;
  WTF *v58;

  v2 = *(WTF **)(*(_QWORD *)(a2 + 24) + 80);
  if (!v2)
    return 2;
  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = *(_QWORD *)(v3 + 3320);
  if (*(_DWORD *)(v4 + 48))
  {
    v48 = *(_QWORD *)(v4 + 32);
    if (!v48)
      goto LABEL_6;
    v49 = *(_DWORD *)(v48 - 8);
    v50 = ((unint64_t)v2 + ~((_QWORD)v2 << 32)) ^ (((unint64_t)v2 + ~((_QWORD)v2 << 32)) >> 22);
    v51 = 9 * ((v50 + ~(v50 << 13)) ^ ((v50 + ~(v50 << 13)) >> 8));
    v52 = (v51 ^ (v51 >> 15)) + ~((v51 ^ (v51 >> 15)) << 27);
    v53 = v49 & ((v52 >> 31) ^ v52);
    v54 = *(WTF **)(v48 + 16 * v53);
    if (v54 != v2)
    {
      v55 = 1;
      while (v54)
      {
        v53 = ((_DWORD)v53 + v55) & v49;
        v54 = *(WTF **)(v48 + 16 * v53);
        ++v55;
        if (v54 == v2)
          goto LABEL_64;
      }
      goto LABEL_6;
    }
LABEL_64:
    v5 = *(_QWORD *)(v48 + 16 * v53 + 8);
    if (!v5)
      goto LABEL_6;
  }
  else
  {
    v5 = *((_QWORD *)v2 + 1);
    if (!v5)
      goto LABEL_6;
  }
  if ((*(_BYTE *)(v5 + 8) & 3) == 0)
  {
    SlowCase = *(_QWORD *)v5;
    if (*(_QWORD *)v5)
      return SlowCase;
  }
LABEL_6:
  ++*(_DWORD *)v2;
  v7 = *(_QWORD *)(v3 + 3296);
  if (v7)
  {
    v8 = *(_DWORD *)(v7 - 8);
    v9 = ((unint64_t)&WebCore::JSNavigationDestination::s_info
        + ~((_QWORD)&WebCore::JSNavigationDestination::s_info << 32)) ^ (((unint64_t)&WebCore::JSNavigationDestination::s_info
                                                                        + ~((_QWORD)&WebCore::JSNavigationDestination::s_info << 32)) >> 22);
    v10 = 9 * ((v9 + ~(v9 << 13)) ^ ((v9 + ~(v9 << 13)) >> 8));
    v11 = (v10 ^ (v10 >> 15)) + ~((v10 ^ (v10 >> 15)) << 27);
    v12 = v8 & ((v11 >> 31) ^ v11);
    v13 = *(char ***)(v7 + 16 * v12);
    if (v13 == &WebCore::JSNavigationDestination::s_info)
    {
LABEL_11:
      v15 = *(_QWORD *)(v7 + 16 * v12 + 8);
      if (v15)
        goto LABEL_13;
    }
    else
    {
      v14 = 1;
      while (v13)
      {
        v12 = ((_DWORD)v12 + v14) & v8;
        v13 = *(char ***)(v7 + 16 * v12);
        ++v14;
        if (v13 == &WebCore::JSNavigationDestination::s_info)
          goto LABEL_11;
      }
    }
  }
  v16 = *(uint64_t **)(v3 + 56);
  Structure = WebCore::JSNavigationDestinationPrototype::createStructure(v16, v3, *(JSC::JSCell **)(v3 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v20 = (JSC::JSCell *)WebCore::JSNavigationDestinationPrototype::create((WebCore::JSNavigationDestinationPrototype *)v16, Structure, v18, v19);
  v21 = WebCore::JSNavigationDestination::createStructure(v16, v3, v20);
  v15 = WebCore::cacheDOMStructure((JSCell *)v3, v21, (uint64_t)&WebCore::JSNavigationDestination::s_info);
LABEL_13:
  v22 = *(_QWORD *)(v3 + 56);
  v23 = *(_QWORD *)(v22 + 41456);
  v24 = *(_QWORD *)(v23 + 23536);
  v25 = *(_QWORD **)(v24 + 5864);
  if (v25)
    goto LABEL_34;
  v26 = *(_QWORD *)(v23 + 22648);
  if (__ldaxr((unsigned __int8 *)v26))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v26))
  {
    goto LABEL_19;
  }
  MEMORY[0x19AEA534C](v26);
LABEL_19:
  v28 = *(_QWORD *)(v26 + 2824);
  if (!*(_QWORD *)(v28 + 5864))
  {
    v29 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v58, "IsoSpace T");
    v57 = 0;
    MEMORY[0x19AEA3204](v29, &v58, v22 + 192, v22 + 1872, 32, 8, &v57);
    v31 = (uint64_t)v57;
    v57 = 0;
    if (v31)
      (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
    v32 = v58;
    v58 = 0;
    if (v32)
    {
      if (*(_DWORD *)v32 == 1)
        WTF::fastFree(v32, v30);
      else
        --*(_DWORD *)v32;
    }
    v33 = *(_QWORD *)(v28 + 5864);
    *(_QWORD *)(v28 + 5864) = v29;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
  }
  v25 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v35 = *(_QWORD *)(v24 + 5864);
  *(_QWORD *)(v24 + 5864) = v25;
  if (v35)
  {
    v36 = (WTF *)MEMORY[0x19AEA3528](v35, v34);
    WTF::fastFree(v36, v37);
  }
  v38 = __ldxr((unsigned __int8 *)v26);
  if (v38 != 1)
  {
    __clrex();
    goto LABEL_33;
  }
  if (__stlxr(0, (unsigned __int8 *)v26))
LABEL_33:
    WTF::Lock::unlockSlow((WTF::Lock *)v26);
LABEL_34:
  SlowCase = v25[3];
  if (SlowCase < v25[4])
  {
LABEL_35:
    v25[3] = SlowCase + 32;
    goto LABEL_36;
  }
  SlowCase = v25[5];
  if ((SlowCase & 1) == 0)
  {
    v56 = *(_QWORD *)(SlowCase + 8) ^ v25[6];
    v25[4] = SlowCase + HIDWORD(v56);
    v25[5] = SlowCase + (int)v56;
    goto LABEL_35;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_36:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v15);
  *(_QWORD *)(SlowCase + 24) = v2;
  if (*(_BYTE *)(v22 + 755))
    __dmb(0xAu);
  v39 = *(_QWORD *)(v3 + 3320);
  if ((byte_1EE3361C8 & 1) == 0)
  {
    qword_1EE3361C0 = (uint64_t)&off_1E32BE688;
    byte_1EE3361C8 = 1;
  }
  if (!*(_DWORD *)(v39 + 48))
  {
    if ((SlowCase & 8) != 0)
      v40 = (SlowCase - 112) | 1;
    else
      v40 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v40 & 1) != 0)
      v41 = v40 + 47;
    else
      v41 = *(_QWORD *)v40 + 32;
    Allocator = *(_QWORD **)(v41 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v41 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1EE3361C0;
    Allocator[2] = v39;
    v43 = *((_QWORD *)v2 + 1);
    *((_QWORD *)v2 + 1) = Allocator;
    if (!v43)
      return SlowCase;
LABEL_58:
    *(_QWORD *)(v43 + 8) = 3;
    return SlowCase;
  }
  v58 = v2;
  if ((SlowCase & 8) != 0)
    v45 = (SlowCase - 112) | 1;
  else
    v45 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v45 & 1) != 0)
    v46 = v45 + 47;
  else
    v46 = *(_QWORD *)v45 + 32;
  v47 = *(_QWORD **)(v46 + 16);
  if (!v47)
    v47 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v46 + 16) = *v47;
  *v47 = SlowCase;
  v47[1] = &qword_1EE3361C0;
  v47[2] = v39;
  v57 = v47;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v39 + 32), (uint64_t *)&v58, (uint64_t *)&v57);
  v43 = (uint64_t)v57;
  if (v57)
    goto LABEL_58;
  return SlowCase;
}

uint64_t WebCore::jsNavigateEvent_canIntercept(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(*(_QWORD *)(a2 + 24) + 136))
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsNavigateEvent_userInitiated(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(*(_QWORD *)(a2 + 24) + 137))
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsNavigateEvent_hashChange(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(*(_QWORD *)(a2 + 24) + 138))
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsNavigateEvent_signal(int a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 88);
  if (v2)
    return WebCore::wrap<WebCore::AbortSignal>(a1, *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v2);
  else
    return 2;
}

uint64_t WebCore::jsNavigateEvent_formData(uint64_t a1, uint64_t a2)
{
  WTF *v2;

  v2 = *(WTF **)(*(_QWORD *)(a2 + 24) + 96);
  if (v2)
    return WebCore::wrap<WebCore::DOMFormData>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v2);
  else
    return 2;
}

uint64_t WebCore::jsNavigateEvent_downloadRequest(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 104);
  if (!v2)
    return 2;
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_DWORD *)v2;
  v5 = *(_DWORD *)(v2 + 4);
  *(_DWORD *)v2 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_4:
      v6 = *(_QWORD *)(v3 + 64760);
      if (!v6 || v2 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v2 - 2;
      }
      goto LABEL_7;
    }
    v8 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v6 = *(_QWORD *)(v3 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *(_QWORD *)(v3 + 41968);
  }
LABEL_7:
  if (v4)
    *(_DWORD *)v2 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v2, a2);
  return v6;
}

uint64_t WebCore::jsNavigateEvent_info(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)(a2 + 24) + 128);
}

uint64_t WebCore::jsNavigateEvent_hasUAVisualTransition(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(*(_QWORD *)(a2 + 24) + 139))
    return 7;
  else
    return 6;
}

uint64_t WebCore::JSNavigateEvent::subspaceForImpl(WebCore::JSNavigateEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 5832);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 5832))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 5832);
    *(_QWORD *)(v8 + 5832) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 5832);
  *(_QWORD *)(v3 + 5832) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::convertDictionary<WebCore::Navigation::Options>(uint64_t result, JSC::JSGlobalObject *a2, JSC::JSCell *this)
{
  uint64_t v3;
  JSC::VM *v4;
  uint64_t v5;
  uint64_t Object;
  JSC::Structure *v8;
  WTF::StringImpl *v9;
  int v10;
  WTF::StringImpl *v11;

  v3 = result;
  v4 = (JSC::VM *)*((_QWORD *)a2 + 7);
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
    {
      result = JSC::throwTypeError();
    }
    else
    {
      v8 = (JSC::Structure *)Object;
      WTF::AtomStringImpl::addLiteral();
      result = JSC::JSObject::get(v8, a2, (unint64_t)v11);
      v5 = result;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          result = WTF::StringImpl::destroy(v11, v9);
        else
          *(_DWORD *)v11 -= 2;
      }
      if (!*((_DWORD *)v4 + 20))
        goto LABEL_9;
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
      if ((result & 1) == 0)
        goto LABEL_9;
    }
    v10 = 1;
    goto LABEL_10;
  }
  v5 = 10;
LABEL_9:
  v10 = 0;
  *(_QWORD *)v3 = v5;
LABEL_10:
  *(_DWORD *)(v3 + 8) = v10;
  return result;
}

uint64_t WebCore::JSNavigation::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEventTarget::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSNavigationPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSNavigationPrototype::create(WebCore::JSNavigationPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<17u>(this, (uint64_t)&WebCore::JSNavigation::s_info, (uint64_t)&WebCore::JSNavigationPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigation>,(WebCore::DOMConstructorID)720>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5760);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventTarget>,(WebCore::DOMConstructorID)450>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigation>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSNavigation::s_info + ~((_QWORD)&WebCore::JSNavigation::s_info << 32)) ^ (((unint64_t)&WebCore::JSNavigation::s_info + ~((_QWORD)&WebCore::JSNavigation::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSNavigation::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSNavigation::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEventTarget::prototype((WebCore::JSEventTarget *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSNavigationPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSNavigationPrototype::create((WebCore::JSNavigationPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSNavigation::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSNavigation::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5760) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsNavigationConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSNavigationPrototype::s_info != (char **)(16
                                                          * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigation>,(WebCore::DOMConstructorID)720>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsNavigation_currentEntry(int a1, uint64_t a2)
{
  uint64_t v3;
  JSC::VM *v4;
  unint64_t result;
  unint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  result = WebCore::Navigation::hasEntriesAndEventsDisabled((WebCore::Navigation *)v3);
  if ((result & 1) != 0 || !*(_BYTE *)(v3 + 48))
    return 2;
  v6 = *(_QWORD *)(v3 + 40);
  if (v6 < *(unsigned int *)(v3 + 84))
  {
    v7 = *(_QWORD *)(*(_QWORD *)(v3 + 72) + 8 * v6);
    if (v7)
      return WebCore::wrap<WebCore::NavigationHistoryEntry>(a1, v4, v7);
    return 2;
  }
  __break(0xC471u);
  return result;
}

uint64_t WebCore::jsNavigation_transition(uint64_t a1, uint64_t a2)
{
  WTF *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t SlowCase;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char **v13;
  int v14;
  unint64_t v15;
  uint64_t *v16;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v18;
  JSC::Structure *v19;
  JSC::JSCell *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  WTF *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  WTF *v36;
  void *v37;
  int v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *Allocator;
  uint64_t v43;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unsigned int v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  WTF *v54;
  int v55;
  unint64_t v56;
  _QWORD *v57;
  WTF *v58;

  v2 = *(WTF **)(*(_QWORD *)(a2 + 24) + 56);
  if (!v2)
    return 2;
  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = *(_QWORD *)(v3 + 3320);
  if (*(_DWORD *)(v4 + 48))
  {
    v48 = *(_QWORD *)(v4 + 32);
    if (!v48)
      goto LABEL_6;
    v49 = *(_DWORD *)(v48 - 8);
    v50 = ((unint64_t)v2 + ~((_QWORD)v2 << 32)) ^ (((unint64_t)v2 + ~((_QWORD)v2 << 32)) >> 22);
    v51 = 9 * ((v50 + ~(v50 << 13)) ^ ((v50 + ~(v50 << 13)) >> 8));
    v52 = (v51 ^ (v51 >> 15)) + ~((v51 ^ (v51 >> 15)) << 27);
    v53 = v49 & ((v52 >> 31) ^ v52);
    v54 = *(WTF **)(v48 + 16 * v53);
    if (v54 != v2)
    {
      v55 = 1;
      while (v54)
      {
        v53 = ((_DWORD)v53 + v55) & v49;
        v54 = *(WTF **)(v48 + 16 * v53);
        ++v55;
        if (v54 == v2)
          goto LABEL_64;
      }
      goto LABEL_6;
    }
LABEL_64:
    v5 = *(_QWORD *)(v48 + 16 * v53 + 8);
    if (!v5)
      goto LABEL_6;
  }
  else
  {
    v5 = *((_QWORD *)v2 + 1);
    if (!v5)
      goto LABEL_6;
  }
  if ((*(_BYTE *)(v5 + 8) & 3) == 0)
  {
    SlowCase = *(_QWORD *)v5;
    if (*(_QWORD *)v5)
      return SlowCase;
  }
LABEL_6:
  ++*(_DWORD *)v2;
  v7 = *(_QWORD *)(v3 + 3296);
  if (v7)
  {
    v8 = *(_DWORD *)(v7 - 8);
    v9 = ((unint64_t)&WebCore::JSNavigationTransition::s_info
        + ~((_QWORD)&WebCore::JSNavigationTransition::s_info << 32)) ^ (((unint64_t)&WebCore::JSNavigationTransition::s_info
                                                                       + ~((_QWORD)&WebCore::JSNavigationTransition::s_info << 32)) >> 22);
    v10 = 9 * ((v9 + ~(v9 << 13)) ^ ((v9 + ~(v9 << 13)) >> 8));
    v11 = (v10 ^ (v10 >> 15)) + ~((v10 ^ (v10 >> 15)) << 27);
    v12 = v8 & ((v11 >> 31) ^ v11);
    v13 = *(char ***)(v7 + 16 * v12);
    if (v13 == &WebCore::JSNavigationTransition::s_info)
    {
LABEL_11:
      v15 = *(_QWORD *)(v7 + 16 * v12 + 8);
      if (v15)
        goto LABEL_13;
    }
    else
    {
      v14 = 1;
      while (v13)
      {
        v12 = ((_DWORD)v12 + v14) & v8;
        v13 = *(char ***)(v7 + 16 * v12);
        ++v14;
        if (v13 == &WebCore::JSNavigationTransition::s_info)
          goto LABEL_11;
      }
    }
  }
  v16 = *(uint64_t **)(v3 + 56);
  Structure = WebCore::JSNavigationTransitionPrototype::createStructure(v16, v3, *(JSC::JSCell **)(v3 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v20 = (JSC::JSCell *)WebCore::JSNavigationTransitionPrototype::create((WebCore::JSNavigationTransitionPrototype *)v16, Structure, v18, v19);
  v21 = WebCore::JSNavigationTransition::createStructure(v16, v3, v20);
  v15 = WebCore::cacheDOMStructure((JSCell *)v3, v21, (uint64_t)&WebCore::JSNavigationTransition::s_info);
LABEL_13:
  v22 = *(_QWORD *)(v3 + 56);
  v23 = *(_QWORD *)(v22 + 41456);
  v24 = *(_QWORD *)(v23 + 23536);
  v25 = *(_QWORD **)(v24 + 5880);
  if (v25)
    goto LABEL_34;
  v26 = *(_QWORD *)(v23 + 22648);
  if (__ldaxr((unsigned __int8 *)v26))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v26))
  {
    goto LABEL_19;
  }
  MEMORY[0x19AEA534C](v26);
LABEL_19:
  v28 = *(_QWORD *)(v26 + 2824);
  if (!*(_QWORD *)(v28 + 5880))
  {
    v29 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v58, "IsoSpace T");
    v57 = 0;
    MEMORY[0x19AEA3204](v29, &v58, v22 + 192, v22 + 1872, 32, 8, &v57);
    v31 = (uint64_t)v57;
    v57 = 0;
    if (v31)
      (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
    v32 = v58;
    v58 = 0;
    if (v32)
    {
      if (*(_DWORD *)v32 == 1)
        WTF::fastFree(v32, v30);
      else
        --*(_DWORD *)v32;
    }
    v33 = *(_QWORD *)(v28 + 5880);
    *(_QWORD *)(v28 + 5880) = v29;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
  }
  v25 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v35 = *(_QWORD *)(v24 + 5880);
  *(_QWORD *)(v24 + 5880) = v25;
  if (v35)
  {
    v36 = (WTF *)MEMORY[0x19AEA3528](v35, v34);
    WTF::fastFree(v36, v37);
  }
  v38 = __ldxr((unsigned __int8 *)v26);
  if (v38 != 1)
  {
    __clrex();
    goto LABEL_33;
  }
  if (__stlxr(0, (unsigned __int8 *)v26))
LABEL_33:
    WTF::Lock::unlockSlow((WTF::Lock *)v26);
LABEL_34:
  SlowCase = v25[3];
  if (SlowCase < v25[4])
  {
LABEL_35:
    v25[3] = SlowCase + 32;
    goto LABEL_36;
  }
  SlowCase = v25[5];
  if ((SlowCase & 1) == 0)
  {
    v56 = *(_QWORD *)(SlowCase + 8) ^ v25[6];
    v25[4] = SlowCase + HIDWORD(v56);
    v25[5] = SlowCase + (int)v56;
    goto LABEL_35;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_36:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v15);
  *(_QWORD *)(SlowCase + 24) = v2;
  if (*(_BYTE *)(v22 + 755))
    __dmb(0xAu);
  v39 = *(_QWORD *)(v3 + 3320);
  if ((byte_1EE3361E8 & 1) == 0)
  {
    qword_1EE3361E0 = (uint64_t)&off_1E32BE6E8;
    byte_1EE3361E8 = 1;
  }
  if (!*(_DWORD *)(v39 + 48))
  {
    if ((SlowCase & 8) != 0)
      v40 = (SlowCase - 112) | 1;
    else
      v40 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v40 & 1) != 0)
      v41 = v40 + 47;
    else
      v41 = *(_QWORD *)v40 + 32;
    Allocator = *(_QWORD **)(v41 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v41 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1EE3361E0;
    Allocator[2] = v39;
    v43 = *((_QWORD *)v2 + 1);
    *((_QWORD *)v2 + 1) = Allocator;
    if (!v43)
      return SlowCase;
LABEL_58:
    *(_QWORD *)(v43 + 8) = 3;
    return SlowCase;
  }
  v58 = v2;
  if ((SlowCase & 8) != 0)
    v45 = (SlowCase - 112) | 1;
  else
    v45 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v45 & 1) != 0)
    v46 = v45 + 47;
  else
    v46 = *(_QWORD *)v45 + 32;
  v47 = *(_QWORD **)(v46 + 16);
  if (!v47)
    v47 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v46 + 16) = *v47;
  *v47 = SlowCase;
  v47[1] = &qword_1EE3361E0;
  v47[2] = v39;
  v57 = v47;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v39 + 32), (uint64_t *)&v58, (uint64_t *)&v57);
  v43 = (uint64_t)v57;
  if (v57)
    goto LABEL_58;
  return SlowCase;
}

uint64_t WebCore::jsNavigation_activation(uint64_t a1, uint64_t a2)
{
  WTF *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t SlowCase;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char **v13;
  int v14;
  unint64_t v15;
  uint64_t *v16;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v18;
  JSC::Structure *v19;
  JSC::JSCell *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  WTF *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  WTF *v36;
  void *v37;
  int v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *Allocator;
  uint64_t v43;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unsigned int v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  WTF *v54;
  int v55;
  unint64_t v56;
  _QWORD *v57;
  WTF *v58;

  v2 = *(WTF **)(*(_QWORD *)(a2 + 24) + 64);
  if (!v2)
    return 2;
  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = *(_QWORD *)(v3 + 3320);
  if (*(_DWORD *)(v4 + 48))
  {
    v48 = *(_QWORD *)(v4 + 32);
    if (!v48)
      goto LABEL_6;
    v49 = *(_DWORD *)(v48 - 8);
    v50 = ((unint64_t)v2 + ~((_QWORD)v2 << 32)) ^ (((unint64_t)v2 + ~((_QWORD)v2 << 32)) >> 22);
    v51 = 9 * ((v50 + ~(v50 << 13)) ^ ((v50 + ~(v50 << 13)) >> 8));
    v52 = (v51 ^ (v51 >> 15)) + ~((v51 ^ (v51 >> 15)) << 27);
    v53 = v49 & ((v52 >> 31) ^ v52);
    v54 = *(WTF **)(v48 + 16 * v53);
    if (v54 != v2)
    {
      v55 = 1;
      while (v54)
      {
        v53 = ((_DWORD)v53 + v55) & v49;
        v54 = *(WTF **)(v48 + 16 * v53);
        ++v55;
        if (v54 == v2)
          goto LABEL_64;
      }
      goto LABEL_6;
    }
LABEL_64:
    v5 = *(_QWORD *)(v48 + 16 * v53 + 8);
    if (!v5)
      goto LABEL_6;
  }
  else
  {
    v5 = *((_QWORD *)v2 + 1);
    if (!v5)
      goto LABEL_6;
  }
  if ((*(_BYTE *)(v5 + 8) & 3) == 0)
  {
    SlowCase = *(_QWORD *)v5;
    if (*(_QWORD *)v5)
      return SlowCase;
  }
LABEL_6:
  ++*(_DWORD *)v2;
  v7 = *(_QWORD *)(v3 + 3296);
  if (v7)
  {
    v8 = *(_DWORD *)(v7 - 8);
    v9 = ((unint64_t)&WebCore::JSNavigationActivation::s_info
        + ~((_QWORD)&WebCore::JSNavigationActivation::s_info << 32)) ^ (((unint64_t)&WebCore::JSNavigationActivation::s_info
                                                                       + ~((_QWORD)&WebCore::JSNavigationActivation::s_info << 32)) >> 22);
    v10 = 9 * ((v9 + ~(v9 << 13)) ^ ((v9 + ~(v9 << 13)) >> 8));
    v11 = (v10 ^ (v10 >> 15)) + ~((v10 ^ (v10 >> 15)) << 27);
    v12 = v8 & ((v11 >> 31) ^ v11);
    v13 = *(char ***)(v7 + 16 * v12);
    if (v13 == &WebCore::JSNavigationActivation::s_info)
    {
LABEL_11:
      v15 = *(_QWORD *)(v7 + 16 * v12 + 8);
      if (v15)
        goto LABEL_13;
    }
    else
    {
      v14 = 1;
      while (v13)
      {
        v12 = ((_DWORD)v12 + v14) & v8;
        v13 = *(char ***)(v7 + 16 * v12);
        ++v14;
        if (v13 == &WebCore::JSNavigationActivation::s_info)
          goto LABEL_11;
      }
    }
  }
  v16 = *(uint64_t **)(v3 + 56);
  Structure = WebCore::JSNavigationActivationPrototype::createStructure(v16, v3, *(JSC::JSCell **)(v3 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v20 = (JSC::JSCell *)WebCore::JSNavigationActivationPrototype::create((WebCore::JSNavigationActivationPrototype *)v16, Structure, v18, v19);
  v21 = WebCore::JSNavigationActivation::createStructure(v16, v3, v20);
  v15 = WebCore::cacheDOMStructure((JSCell *)v3, v21, (uint64_t)&WebCore::JSNavigationActivation::s_info);
LABEL_13:
  v22 = *(_QWORD *)(v3 + 56);
  v23 = *(_QWORD *)(v22 + 41456);
  v24 = *(_QWORD *)(v23 + 23536);
  v25 = *(_QWORD **)(v24 + 5848);
  if (v25)
    goto LABEL_34;
  v26 = *(_QWORD *)(v23 + 22648);
  if (__ldaxr((unsigned __int8 *)v26))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v26))
  {
    goto LABEL_19;
  }
  MEMORY[0x19AEA534C](v26);
LABEL_19:
  v28 = *(_QWORD *)(v26 + 2824);
  if (!*(_QWORD *)(v28 + 5848))
  {
    v29 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v58, "IsoSpace T");
    v57 = 0;
    MEMORY[0x19AEA3204](v29, &v58, v22 + 192, v22 + 1872, 32, 8, &v57);
    v31 = (uint64_t)v57;
    v57 = 0;
    if (v31)
      (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
    v32 = v58;
    v58 = 0;
    if (v32)
    {
      if (*(_DWORD *)v32 == 1)
        WTF::fastFree(v32, v30);
      else
        --*(_DWORD *)v32;
    }
    v33 = *(_QWORD *)(v28 + 5848);
    *(_QWORD *)(v28 + 5848) = v29;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
  }
  v25 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v35 = *(_QWORD *)(v24 + 5848);
  *(_QWORD *)(v24 + 5848) = v25;
  if (v35)
  {
    v36 = (WTF *)MEMORY[0x19AEA3528](v35, v34);
    WTF::fastFree(v36, v37);
  }
  v38 = __ldxr((unsigned __int8 *)v26);
  if (v38 != 1)
  {
    __clrex();
    goto LABEL_33;
  }
  if (__stlxr(0, (unsigned __int8 *)v26))
LABEL_33:
    WTF::Lock::unlockSlow((WTF::Lock *)v26);
LABEL_34:
  SlowCase = v25[3];
  if (SlowCase < v25[4])
  {
LABEL_35:
    v25[3] = SlowCase + 32;
    goto LABEL_36;
  }
  SlowCase = v25[5];
  if ((SlowCase & 1) == 0)
  {
    v56 = *(_QWORD *)(SlowCase + 8) ^ v25[6];
    v25[4] = SlowCase + HIDWORD(v56);
    v25[5] = SlowCase + (int)v56;
    goto LABEL_35;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_36:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v15);
  *(_QWORD *)(SlowCase + 24) = v2;
  if (*(_BYTE *)(v22 + 755))
    __dmb(0xAu);
  v39 = *(_QWORD *)(v3 + 3320);
  if ((byte_1EE3361B8 & 1) == 0)
  {
    qword_1EE3361B0 = (uint64_t)&off_1E32BE658;
    byte_1EE3361B8 = 1;
  }
  if (!*(_DWORD *)(v39 + 48))
  {
    if ((SlowCase & 8) != 0)
      v40 = (SlowCase - 112) | 1;
    else
      v40 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v40 & 1) != 0)
      v41 = v40 + 47;
    else
      v41 = *(_QWORD *)v40 + 32;
    Allocator = *(_QWORD **)(v41 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v41 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1EE3361B0;
    Allocator[2] = v39;
    v43 = *((_QWORD *)v2 + 1);
    *((_QWORD *)v2 + 1) = Allocator;
    if (!v43)
      return SlowCase;
LABEL_58:
    *(_QWORD *)(v43 + 8) = 3;
    return SlowCase;
  }
  v58 = v2;
  if ((SlowCase & 8) != 0)
    v45 = (SlowCase - 112) | 1;
  else
    v45 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v45 & 1) != 0)
    v46 = v45 + 47;
  else
    v46 = *(_QWORD *)v45 + 32;
  v47 = *(_QWORD **)(v46 + 16);
  if (!v47)
    v47 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v46 + 16) = *v47;
  *v47 = SlowCase;
  v47[1] = &qword_1EE3361B0;
  v47[2] = v39;
  v57 = v47;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v39 + 32), (uint64_t *)&v58, (uint64_t *)&v57);
  v43 = (uint64_t)v57;
  if (v57)
    goto LABEL_58;
  return SlowCase;
}

uint64_t WebCore::jsNavigation_canGoBack(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 24);
  result = WebCore::Navigation::hasEntriesAndEventsDisabled((WebCore::Navigation *)v2);
  if ((result & 1) != 0)
    return 6;
  if (*(_BYTE *)(v2 + 48))
  {
    if (*(_QWORD *)(v2 + 40))
      return 7;
    else
      return 6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t WebCore::jsNavigation_canGoForward(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 24);
  result = WebCore::Navigation::hasEntriesAndEventsDisabled((WebCore::Navigation *)v2);
  if ((result & 1) != 0)
    return 6;
  if (*(_BYTE *)(v2 + 48))
  {
    if (*(_QWORD *)(v2 + 40) == *(unsigned int *)(v2 + 84) - 1)
      return 6;
    else
      return 7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t WebCore::jsNavigation_onnavigate(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  bmalloc::api *v12;
  void *v13;

  v5 = *(WebCore **)(a2 + 24);
  ++*((_DWORD *)v5 + 6);
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v8 + 1280), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*((_DWORD *)v5 + 6) == 1)
  {
    WebCore::Navigation::~Navigation(v5, v9);
    bmalloc::api::isoDeallocate(v12, v13);
  }
  else
  {
    --*((_DWORD *)v5 + 6);
  }
  return v10;
}

BOOL WebCore::setJSNavigation_onnavigate(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  bmalloc::api *v17;
  void *v18;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v8 = (char **)(16 * v6);
    if ((_DWORD)v6)
      v9 = v8 == &WebCore::JSNavigation::s_info;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSNavigation::s_info && v8 != 0);
    }
    if (v7)
    {
      v11 = *(WebCore::EventTarget **)(a2 + 24);
      ++*((_DWORD *)v11 + 6);
      v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
      if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
        v13 = WebCore::threadGlobalDataSlow(a1);
      v14 = *(_QWORD *)(v13 + 40);
      if (!v14)
      {
        WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
        v14 = *(_QWORD *)(v13 + 40);
      }
      WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 1280), a3, (_DWORD *)a2);
      if (*((_DWORD *)v11 + 6) == 1)
      {
        WebCore::Navigation::~Navigation(v11, v15);
        bmalloc::api::isoDeallocate(v17, v18);
        if (a3)
        {
LABEL_19:
          if ((a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
            JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
        }
      }
      else
      {
        --*((_DWORD *)v11 + 6);
        if (a3)
          goto LABEL_19;
      }
      return 1;
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsNavigation_onnavigatesuccess(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  bmalloc::api *v12;
  void *v13;

  v5 = *(WebCore **)(a2 + 24);
  ++*((_DWORD *)v5 + 6);
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v8 + 1296), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*((_DWORD *)v5 + 6) == 1)
  {
    WebCore::Navigation::~Navigation(v5, v9);
    bmalloc::api::isoDeallocate(v12, v13);
  }
  else
  {
    --*((_DWORD *)v5 + 6);
  }
  return v10;
}

BOOL WebCore::setJSNavigation_onnavigatesuccess(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  bmalloc::api *v17;
  void *v18;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v8 = (char **)(16 * v6);
    if ((_DWORD)v6)
      v9 = v8 == &WebCore::JSNavigation::s_info;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSNavigation::s_info && v8 != 0);
    }
    if (v7)
    {
      v11 = *(WebCore::EventTarget **)(a2 + 24);
      ++*((_DWORD *)v11 + 6);
      v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
      if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
        v13 = WebCore::threadGlobalDataSlow(a1);
      v14 = *(_QWORD *)(v13 + 40);
      if (!v14)
      {
        WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
        v14 = *(_QWORD *)(v13 + 40);
      }
      WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 1296), a3, (_DWORD *)a2);
      if (*((_DWORD *)v11 + 6) == 1)
      {
        WebCore::Navigation::~Navigation(v11, v15);
        bmalloc::api::isoDeallocate(v17, v18);
        if (a3)
        {
LABEL_19:
          if ((a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
            JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
        }
      }
      else
      {
        --*((_DWORD *)v11 + 6);
        if (a3)
          goto LABEL_19;
      }
      return 1;
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsNavigation_onnavigateerror(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  bmalloc::api *v12;
  void *v13;

  v5 = *(WebCore **)(a2 + 24);
  ++*((_DWORD *)v5 + 6);
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v8 + 1288), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*((_DWORD *)v5 + 6) == 1)
  {
    WebCore::Navigation::~Navigation(v5, v9);
    bmalloc::api::isoDeallocate(v12, v13);
  }
  else
  {
    --*((_DWORD *)v5 + 6);
  }
  return v10;
}

BOOL WebCore::setJSNavigation_onnavigateerror(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  bmalloc::api *v17;
  void *v18;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v8 = (char **)(16 * v6);
    if ((_DWORD)v6)
      v9 = v8 == &WebCore::JSNavigation::s_info;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSNavigation::s_info && v8 != 0);
    }
    if (v7)
    {
      v11 = *(WebCore::EventTarget **)(a2 + 24);
      ++*((_DWORD *)v11 + 6);
      v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
      if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
        v13 = WebCore::threadGlobalDataSlow(a1);
      v14 = *(_QWORD *)(v13 + 40);
      if (!v14)
      {
        WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
        v14 = *(_QWORD *)(v13 + 40);
      }
      WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 1288), a3, (_DWORD *)a2);
      if (*((_DWORD *)v11 + 6) == 1)
      {
        WebCore::Navigation::~Navigation(v11, v15);
        bmalloc::api::isoDeallocate(v17, v18);
        if (a3)
        {
LABEL_19:
          if ((a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
            JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
        }
      }
      else
      {
        --*((_DWORD *)v11 + 6);
        if (a3)
          goto LABEL_19;
      }
      return 1;
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsNavigation_oncurrententrychange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  bmalloc::api *v12;
  void *v13;

  v5 = *(WebCore **)(a2 + 24);
  ++*((_DWORD *)v5 + 6);
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v8 + 552), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*((_DWORD *)v5 + 6) == 1)
  {
    WebCore::Navigation::~Navigation(v5, v9);
    bmalloc::api::isoDeallocate(v12, v13);
  }
  else
  {
    --*((_DWORD *)v5 + 6);
  }
  return v10;
}

BOOL WebCore::setJSNavigation_oncurrententrychange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  bmalloc::api *v17;
  void *v18;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v8 = (char **)(16 * v6);
    if ((_DWORD)v6)
      v9 = v8 == &WebCore::JSNavigation::s_info;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSNavigation::s_info && v8 != 0);
    }
    if (v7)
    {
      v11 = *(WebCore::EventTarget **)(a2 + 24);
      ++*((_DWORD *)v11 + 6);
      v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
      if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
        v13 = WebCore::threadGlobalDataSlow(a1);
      v14 = *(_QWORD *)(v13 + 40);
      if (!v14)
      {
        WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
        v14 = *(_QWORD *)(v13 + 40);
      }
      WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 552), a3, (_DWORD *)a2);
      if (*((_DWORD *)v11 + 6) == 1)
      {
        WebCore::Navigation::~Navigation(v11, v15);
        bmalloc::api::isoDeallocate(v17, v18);
        if (a3)
        {
LABEL_19:
          if ((a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
            JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
        }
      }
      else
      {
        --*((_DWORD *)v11 + 6);
        if (a3)
          goto LABEL_19;
      }
      return 1;
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::JSNavigationOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  void *v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  void *v15;
  uint64_t result;
  uint64_t v17;
  void *v18;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 32);
  if (!v5)
    return 0;
  v6 = *(void **)(v5 + 8);
  if (!v6)
    return 0;
  if (a5)
  {
    *a5 = "Reachable from Window";
    a5[1] = 22;
  }
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) != v8)
  {
    v9 = v8[1];
    v10 = ((unint64_t)v6 + ~((_QWORD)v6 << 32)) ^ (((unint64_t)v6 + ~((_QWORD)v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(void **)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v6 == v15)
        goto LABEL_14;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x194D61114);
      }
    }
  }
  v17 = a4;
  v18 = v6;
  result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, v6);
  a4 = v17;
  v6 = v18;
  if ((_DWORD)result)
  {
LABEL_14:
    if (*(_BYTE *)(a4 + 131))
      (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v6);
    return 1;
  }
  return result;
}

void WebCore::JSNavigationOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  WebCore::Navigation *v3;
  int v4;
  _DWORD *v5;
  bmalloc::api *v6;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  WebCore::Navigation *v16;
  int v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;

  v3 = *(WebCore::Navigation **)(*(_QWORD *)a2 + 24);
  v4 = *((_DWORD *)v3 + 6);
  *((_DWORD *)v3 + 6) = v4 + 1;
  v5 = (_DWORD *)((char *)v3 + 8);
  if (!v3)
    v5 = 0;
  if (*(_DWORD *)(a3 + 48))
  {
    v10 = *(_QWORD *)(a3 + 32);
    v8 = (uint64_t *)(a3 + 32);
    v9 = v10;
    if (v10)
    {
      v11 = *(_DWORD *)(v9 - 8);
      v12 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
      v13 = 9 * ((v12 + ~(v12 << 13)) ^ ((v12 + ~(v12 << 13)) >> 8));
      v14 = (v13 ^ (v13 >> 15)) + ~((v13 ^ (v13 >> 15)) << 27);
      v15 = v11 & ((v14 >> 31) ^ v14);
      v16 = *(WebCore::Navigation **)(v9 + 16 * v15);
      if (v16 != v3)
      {
        v17 = 1;
        while (v16)
        {
          v15 = ((_DWORD)v15 + v17) & v11;
          v16 = *(WebCore::Navigation **)(v9 + 16 * v15);
          ++v17;
          if (v16 == v3)
            goto LABEL_14;
        }
        v15 = *(unsigned int *)(v9 - 4);
      }
LABEL_14:
      if (v15 != *(_DWORD *)(v9 - 4))
      {
        v18 = (_QWORD *)(v9 + 16 * v15);
        *v18 = -1;
        v21 = v18[1];
        v20 = v18 + 1;
        v19 = v21;
        if (v21)
        {
          *(_QWORD *)(v19 + 8) = 3;
          *v20 = 0;
        }
        ++*(_DWORD *)(*v8 - 16);
        v22 = *v8;
        if (*v8)
          v23 = *(_DWORD *)(v22 - 12) - 1;
        else
          v23 = -1;
        *(_DWORD *)(v22 - 12) = v23;
        v24 = *v8;
        if (*v8)
        {
          v25 = 6 * *(_DWORD *)(v24 - 12);
          v26 = *(_DWORD *)(v24 - 4);
          if (v25 < v26 && v26 >= 9)
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v8, v26 >> 1, 0);
        }
      }
    }
    v4 = *((_DWORD *)v3 + 6) - 1;
  }
  else if (*(_QWORD *)v5)
  {
    *(_QWORD *)(*(_QWORD *)v5 + 8) = 3;
    *(_QWORD *)v5 = 0;
  }
  if (v4)
  {
    *((_DWORD *)v3 + 6) = v4;
  }
  else
  {
    WebCore::Navigation::~Navigation(v3, a2);
    bmalloc::api::isoDeallocate(v6, v7);
  }
}

unint64_t WebCore::wrap<WebCore::Navigation>(int a1, JSC::VM *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t SlowCase;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char **v14;
  int v15;
  unint64_t v16;
  WebCore::JSEventTarget *v17;
  JSC::JSCell *v18;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v20;
  JSC::Structure *v21;
  JSC::JSCell *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  WTF *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  WTF *v39;
  void *v40;
  int v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *Allocator;
  uint64_t v46;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  unsigned int v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  unint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  WTF *v62;

  v5 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v5 + 48))
  {
    v51 = *(_QWORD *)(v5 + 32);
    if (!v51)
      goto LABEL_5;
    v52 = *(_DWORD *)(v51 - 8);
    v53 = (~(a3 << 32) + a3) ^ ((unint64_t)(~(a3 << 32) + a3) >> 22);
    v54 = 9 * ((v53 + ~(v53 << 13)) ^ ((v53 + ~(v53 << 13)) >> 8));
    v55 = (v54 ^ (v54 >> 15)) + ~((v54 ^ (v54 >> 15)) << 27);
    v56 = v52 & ((v55 >> 31) ^ v55);
    v57 = *(_QWORD *)(v51 + 16 * v56);
    if (v57 != a3)
    {
      v58 = 1;
      while (v57)
      {
        v56 = ((_DWORD)v56 + v58) & v52;
        v57 = *(_QWORD *)(v51 + 16 * v56);
        ++v58;
        if (v57 == a3)
          goto LABEL_66;
      }
      goto LABEL_5;
    }
LABEL_66:
    v6 = *(_QWORD *)(v51 + 16 * v56 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *(_QWORD *)(a3 + 8);
    if (!v6)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    SlowCase = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return SlowCase;
  }
LABEL_5:
  ++*(_DWORD *)(a3 + 24);
  if (*(uint64_t (***)(WebCore::Navigation *__hidden))a3 != off_1E33FFF20)
  {
    __break(0xC471u);
    JUMPOUT(0x194D617C8);
  }
  v8 = *((_QWORD *)a2 + 412);
  if (v8)
  {
    v9 = *(_DWORD *)(v8 - 8);
    v10 = ((unint64_t)&WebCore::JSNavigation::s_info + ~((_QWORD)&WebCore::JSNavigation::s_info << 32)) ^ (((unint64_t)&WebCore::JSNavigation::s_info + ~((_QWORD)&WebCore::JSNavigation::s_info << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = *(char ***)(v8 + 16 * v13);
    if (v14 == &WebCore::JSNavigation::s_info)
    {
LABEL_11:
      v16 = *(_QWORD *)(v8 + 16 * v13 + 8);
      if (v16)
        goto LABEL_13;
    }
    else
    {
      v15 = 1;
      while (v14)
      {
        v13 = ((_DWORD)v13 + v15) & v9;
        v14 = *(char ***)(v8 + 16 * v13);
        ++v15;
        if (v14 == &WebCore::JSNavigation::s_info)
          goto LABEL_11;
      }
    }
  }
  v17 = (WebCore::JSEventTarget *)*((_QWORD *)a2 + 7);
  v18 = (JSC::JSCell *)WebCore::JSEventTarget::prototype(v17, a2, (WebCore::JSDOMGlobalObject *)a3);
  Structure = WebCore::JSNavigationPrototype::createStructure((uint64_t *)v17, (uint64_t)a2, v18);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v22 = (JSC::JSCell *)WebCore::JSNavigationPrototype::create(v17, Structure, v20, v21);
  v23 = WebCore::JSNavigation::createStructure((uint64_t *)v17, (uint64_t)a2, v22);
  v16 = WebCore::cacheDOMStructure((JSCell *)a2, v23, (uint64_t)&WebCore::JSNavigation::s_info);
LABEL_13:
  v24 = *((_QWORD *)a2 + 7);
  v25 = *(_QWORD *)(v24 + 41456);
  v26 = *(_QWORD *)(v25 + 23536);
  v27 = *(_QWORD **)(v26 + 5840);
  if (v27)
    goto LABEL_36;
  v28 = *(_QWORD *)(v25 + 22648);
  if (__ldaxr((unsigned __int8 *)v28))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v28))
  {
    goto LABEL_18;
  }
  MEMORY[0x19AEA534C](v28);
LABEL_18:
  v30 = *(_QWORD *)(v28 + 2824);
  v60 = *(_QWORD *)(v30 + 5840);
  if (!v60)
  {
    v31 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v62, "IsoSpace T");
    v61 = 0;
    MEMORY[0x19AEA3204](v31, &v62, v24 + 192, v24 + 1872, 32, 8, &v61);
    v33 = (uint64_t)v61;
    v61 = 0;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
    v34 = v62;
    v62 = 0;
    if (v34)
    {
      if (*(_DWORD *)v34 == 1)
        WTF::fastFree(v34, v32);
      else
        --*(_DWORD *)v34;
    }
    v60 = v31;
    v35 = *(_QWORD *)(v30 + 5840);
    *(_QWORD *)(v30 + 5840) = v31;
    if (v35)
      (*(void (**)(uint64_t))(*(_QWORD *)v35 + 8))(v35);
    v36 = *(unsigned int *)(v28 + 2844);
    if ((_DWORD)v36 == *(_DWORD *)(v28 + 2840))
    {
      v37 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v28 + 2832, v36 + 1, (unint64_t)&v60);
      v36 = *(unsigned int *)(v28 + 2844);
      *(_QWORD *)(*(_QWORD *)(v28 + 2832) + 8 * v36) = *v37;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v28 + 2832) + 8 * v36) = v31;
    }
    *(_DWORD *)(v28 + 2844) = v36 + 1;
  }
  v27 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v38 = *(_QWORD *)(v26 + 5840);
  *(_QWORD *)(v26 + 5840) = v27;
  if (v38)
  {
    v39 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v39, v40);
  }
  v41 = __ldxr((unsigned __int8 *)v28);
  if (v41 != 1)
  {
    __clrex();
    goto LABEL_35;
  }
  if (__stlxr(0, (unsigned __int8 *)v28))
LABEL_35:
    WTF::Lock::unlockSlow((WTF::Lock *)v28);
LABEL_36:
  SlowCase = v27[3];
  if (SlowCase < v27[4])
  {
LABEL_37:
    v27[3] = SlowCase + 32;
    goto LABEL_38;
  }
  SlowCase = v27[5];
  if ((SlowCase & 1) == 0)
  {
    v59 = *(_QWORD *)(SlowCase + 8) ^ v27[6];
    v27[4] = SlowCase + HIDWORD(v59);
    v27[5] = SlowCase + (int)v59;
    goto LABEL_37;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_38:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v16);
  *(_QWORD *)(SlowCase + 24) = a3;
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v42 = *((_QWORD *)a2 + 415);
  if ((byte_1EE3361A8 & 1) == 0)
  {
    qword_1EE3361A0 = (uint64_t)&off_1E32BE628;
    byte_1EE3361A8 = 1;
  }
  if (!*(_DWORD *)(v42 + 48))
  {
    if ((SlowCase & 8) != 0)
      v43 = (SlowCase - 112) | 1;
    else
      v43 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v43 & 1) != 0)
      v44 = v43 + 47;
    else
      v44 = *(_QWORD *)v43 + 32;
    Allocator = *(_QWORD **)(v44 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v44 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1EE3361A0;
    Allocator[2] = v42;
    v46 = *(_QWORD *)(a3 + 8);
    *(_QWORD *)(a3 + 8) = Allocator;
    if (!v46)
      return SlowCase;
LABEL_60:
    *(_QWORD *)(v46 + 8) = 3;
    return SlowCase;
  }
  v62 = (WTF *)a3;
  if ((SlowCase & 8) != 0)
    v48 = (SlowCase - 112) | 1;
  else
    v48 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v48 & 1) != 0)
    v49 = v48 + 47;
  else
    v49 = *(_QWORD *)v48 + 32;
  v50 = *(_QWORD **)(v49 + 16);
  if (!v50)
    v50 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v49 + 16) = *v50;
  *v50 = SlowCase;
  v50[1] = &qword_1EE3361A0;
  v50[2] = v42;
  v61 = v50;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v42 + 32), (uint64_t *)&v62, (uint64_t *)&v61);
  v46 = (uint64_t)v61;
  if (v61)
    goto LABEL_60;
  return SlowCase;
}

WebCore::NavigationActivation *WebCore::JSNavigationActivation::destroy(WebCore::JSNavigationActivation *this, JSC::JSCell *a2)
{
  WebCore::NavigationActivation *result;
  bmalloc::api *v4;
  void *v5;

  result = (WebCore::NavigationActivation *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
    {
      WebCore::NavigationActivation::~NavigationActivation(result, a2);
      return (WebCore::NavigationActivation *)bmalloc::api::isoDeallocate(v4, v5);
    }
    else
    {
      --*(_DWORD *)result;
    }
  }
  return result;
}

uint64_t WebCore::JSNavigationActivation::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSNavigationActivationPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSNavigationActivationPrototype::create(WebCore::JSNavigationActivationPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSNavigationActivation::s_info, &WebCore::JSNavigationActivationPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigationActivation>,(WebCore::DOMConstructorID)721>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5768);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigationActivation>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSNavigationActivation::s_info
         + ~((_QWORD)&WebCore::JSNavigationActivation::s_info << 32)) ^ (((unint64_t)&WebCore::JSNavigationActivation::s_info
                                                                        + ~((_QWORD)&WebCore::JSNavigationActivation::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSNavigationActivation::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSNavigationActivation::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSNavigationActivationPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSNavigationActivationPrototype::create((WebCore::JSNavigationActivationPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSNavigationActivation::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSNavigationActivation::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5768) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsNavigationActivationConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSNavigationActivationPrototype::s_info != (char **)(16
                                                                    * *(unsigned int *)(16
                                                                                      * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                      + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigationActivation>,(WebCore::DOMConstructorID)721>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsNavigationActivation_from(int a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 32);
  if (v2)
    return WebCore::wrap<WebCore::NavigationHistoryEntry>(a1, *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v2);
  else
    return 2;
}

unint64_t WebCore::jsNavigationActivation_entry(int a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::NavigationHistoryEntry>(a1, *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 24));
}

uint64_t WebCore::jsNavigationActivation_navigationType(uint64_t a1, uint64_t a2)
{
  return WebCore::convertEnumerationToJS<WebCore::NavigationNavigationType>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned __int8 *)(*(_QWORD *)(a2 + 24) + 16));
}

uint64_t WebCore::JSNavigationActivationOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

void WebCore::JSNavigationActivationOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  WebCore::NavigationActivation *v3;
  int v4;
  uint64_t v5;
  bmalloc::api *v6;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  WebCore::NavigationActivation *v16;
  int v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;

  v3 = *(WebCore::NavigationActivation **)(*(_QWORD *)a2 + 24);
  v4 = (*(_DWORD *)v3)++;
  if (*(_DWORD *)(a3 + 48))
  {
    v10 = *(_QWORD *)(a3 + 32);
    v8 = (uint64_t *)(a3 + 32);
    v9 = v10;
    if (v10)
    {
      v11 = *(_DWORD *)(v9 - 8);
      v12 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
      v13 = 9 * ((v12 + ~(v12 << 13)) ^ ((v12 + ~(v12 << 13)) >> 8));
      v14 = (v13 ^ (v13 >> 15)) + ~((v13 ^ (v13 >> 15)) << 27);
      v15 = v11 & ((v14 >> 31) ^ v14);
      v16 = *(WebCore::NavigationActivation **)(v9 + 16 * v15);
      if (v16 != v3)
      {
        v17 = 1;
        while (v16)
        {
          v15 = ((_DWORD)v15 + v17) & v11;
          v16 = *(WebCore::NavigationActivation **)(v9 + 16 * v15);
          ++v17;
          if (v16 == v3)
            goto LABEL_12;
        }
        v15 = *(unsigned int *)(v9 - 4);
      }
LABEL_12:
      if (v15 != *(_DWORD *)(v9 - 4))
      {
        v18 = (_QWORD *)(v9 + 16 * v15);
        *v18 = -1;
        v21 = v18[1];
        v20 = v18 + 1;
        v19 = v21;
        if (v21)
        {
          *(_QWORD *)(v19 + 8) = 3;
          *v20 = 0;
        }
        ++*(_DWORD *)(*v8 - 16);
        v22 = *v8;
        if (*v8)
          v23 = *(_DWORD *)(v22 - 12) - 1;
        else
          v23 = -1;
        *(_DWORD *)(v22 - 12) = v23;
        v24 = *v8;
        if (*v8)
        {
          v25 = 6 * *(_DWORD *)(v24 - 12);
          v26 = *(_DWORD *)(v24 - 4);
          if (v25 < v26 && v26 >= 9)
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v8, v26 >> 1, 0);
        }
      }
    }
    v4 = *(_DWORD *)v3 - 1;
  }
  else
  {
    v5 = *((_QWORD *)v3 + 1);
    if (v5)
    {
      *(_QWORD *)(v5 + 8) = 3;
      *((_QWORD *)v3 + 1) = 0;
    }
  }
  if (v4)
  {
    *(_DWORD *)v3 = v4;
  }
  else
  {
    WebCore::NavigationActivation::~NavigationActivation(v3, a2);
    bmalloc::api::isoDeallocate(v6, v7);
  }
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSNavigationCurrentEntryChangeEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  JSC::VM *v3;
  uint64_t v5;
  int v6;
  JSC::JSCell *v7;
  unint64_t v8;
  uint64_t Object;
  unint64_t v10;
  WTF::StringImpl *v11;
  unint64_t v12;
  BOOL v13;
  JSC::VM *v14;
  double v15;
  WTF::StringImpl *v16;
  unint64_t v17;
  JSC::VM *v18;
  double v19;
  BOOL v20;
  WTF::StringImpl *v21;
  unint64_t v22;
  BOOL v23;
  JSC::VM *v24;
  double v25;
  WTF::StringImpl *v26;
  uint64_t v27;
  JSCell *v28;
  uint64_t v29;
  uint64_t v31;
  _BOOL4 v32;
  uint64_t v33;
  WTF::StringImpl *v35;
  WTF::StringImpl *v36;
  uint64_t v37;
  WTF::StringImpl *v38;
  WebCore::JSDOMGlobalObject *v39;
  uint64_t v40;
  unsigned int v41;
  int v42;
  JSC::VM *v43;
  JSC::VM *v44;
  uint64_t v45;
  unsigned int v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char **v51;
  int v52;
  unint64_t v53;
  WebCore::JSEvent *v54;
  JSC::JSCell *v55;
  unint64_t Structure;
  JSC::Structure *v57;
  JSC::JSCell *v58;
  uint64_t v59;
  JSC::JSCell *v60;
  JSC::JSGlobalObject *v61;
  JSC::JSObject *v62;
  JSC::JSGlobalObject *v63;
  JSC::VM *v64;
  WebCore::JSDOMGlobalObject *v65;
  JSC::Structure *v66;
  JSC::VM *FunctionRealm;
  uint64_t v68;
  unsigned int v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char **v74;
  int v75;
  JSC::JSCell *v76;
  unint64_t v77;
  JSC::Structure *v78;
  JSC::JSCell *v79;
  uint64_t v80;
  unint64_t SubclassStructure;
  JSC::VM *v82;
  WebCore::HistoryItem *v83;
  void *v84;
  bmalloc::api *v85;
  void *v86;
  JSValue v87;
  WTF *v88;
  void *v89;
  WTF::StringImpl *v90;
  WebCore::HistoryItem *v91;
  void *v92;
  bmalloc::api *v93;
  void *v94;
  WTF *v95;
  void *v96;
  BOOL v97;
  int v98;
  uint64_t v99;
  int *v100;
  int v101;
  BOOL v102;
  int v103;
  uint64_t v104;
  int *v105;
  int v106;
  BOOL v107;
  int v108;
  uint64_t v109;
  int *v110;
  int v111;
  BOOL v112;
  BOOL v113;
  uint64_t v114;
  WTF::StringImpl *v115[2];
  int v116;
  WTF::StringImpl *v117;
  int v118;
  JSC::VM *v119;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((unint64_t)(*(int *)(a2 + 32) - 1) <= 1)
  {
    v87.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v3, a1, v87);
  }
  v5 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v117);
  v6 = v118;
  if (!v118)
  {
    v114 = v5;
    v7 = *(JSC::JSCell **)(a2 + 56);
    v119 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (((unint64_t)v7 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
LABEL_44:
      WebCore::throwRequiredMemberTypeError((int)a1, (int)&v119, "from", 5, "NavigationCurrentEntryChangeEventInit", 38, "NavigationHistoryEntry", 23);
    }
    else
    {
      v8 = 0xFFFE000000000002;
      if (((unint64_t)v7 & 0xFFFE000000000002) == 0)
      {
        Object = JSC::JSCell::getObject(v7);
        if (Object)
        {
          v10 = Object;
          WTF::AtomStringImpl::addLiteral();
          v12 = JSC::JSObject::get((JSC::Structure *)v10, a1, (unint64_t)v115[0]);
          if (v115[0])
          {
            if (*(_DWORD *)v115[0] == 2)
              WTF::StringImpl::destroy(v115[0], v11);
            else
              *(_DWORD *)v115[0] -= 2;
          }
          if (*((_DWORD *)v119 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v119))
            goto LABEL_45;
          if (v12 != 10)
          {
            v14 = (JSC::VM *)*((_QWORD *)a1 + 7);
            if (v12 >= 0xFFFE000000000000)
              goto LABEL_154;
            *(_QWORD *)&v15 = v12 - 0x2000000000000;
            if (v12 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
            {
              v13 = v15 > 0.0 || v15 < 0.0;
              goto LABEL_16;
            }
            if ((v12 & 0xFFFE000000000002) != 0)
            {
              v13 = v12 == 7;
              goto LABEL_16;
            }
            v98 = *(unsigned __int8 *)(v12 + 5);
            if (v98 == 3)
            {
              v101 = *(_DWORD *)(v12 + 8);
            }
            else
            {
              if (v98 != 2)
              {
                if ((*(_BYTE *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0xA) & 1) != 0)
                {
                  v97 = *(_QWORD *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
                  goto LABEL_198;
                }
                v13 = 1;
                goto LABEL_16;
              }
              v99 = *(_QWORD *)(v12 + 8);
              if ((v99 & 1) != 0)
                v100 = (int *)(v12 + 16);
              else
                v100 = (int *)(v99 + 4);
              v101 = *v100;
            }
            v97 = v101 == 0;
            goto LABEL_198;
          }
          v13 = 0;
          while (1)
          {
            WTF::AtomStringImpl::addLiteral();
            v17 = JSC::JSObject::get((JSC::Structure *)v10, a1, (unint64_t)v115[0]);
            if (v115[0])
            {
              if (*(_DWORD *)v115[0] == 2)
                WTF::StringImpl::destroy(v115[0], v16);
              else
                *(_DWORD *)v115[0] -= 2;
            }
            if (*((_DWORD *)v119 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v119))
              goto LABEL_45;
            if (v17 == 10)
            {
              v113 = 0;
              goto LABEL_28;
            }
            v18 = (JSC::VM *)*((_QWORD *)a1 + 7);
            if (v17 >= 0xFFFE000000000000)
              break;
            *(_QWORD *)&v19 = v17 - 0x2000000000000;
            if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              if ((v17 & v8) != 0)
              {
                v20 = v17 == 7;
                goto LABEL_27;
              }
              v103 = *(unsigned __int8 *)(v17 + 5);
              if (v103 == 3)
              {
                v106 = *(_DWORD *)(v17 + 8);
                goto LABEL_187;
              }
              if (v103 == 2)
              {
                v104 = *(_QWORD *)(v17 + 8);
                if ((v104 & 1) != 0)
                  v105 = (int *)(v17 + 16);
                else
                  v105 = (int *)(v104 + 4);
                v106 = *v105;
LABEL_187:
                v102 = v106 == 0;
              }
              else
              {
                if ((*(_BYTE *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0xA) & 1) == 0)
                {
LABEL_189:
                  v20 = 1;
                  goto LABEL_27;
                }
                v102 = *(_QWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
              }
LABEL_202:
              v20 = !v102;
              goto LABEL_27;
            }
            if (v19 > 0.0)
              goto LABEL_189;
            v20 = v19 < 0.0;
LABEL_27:
            v113 = v20;
            if (*((_DWORD *)v18 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v18))
              goto LABEL_45;
LABEL_28:
            WTF::AtomStringImpl::addLiteral();
            v22 = JSC::JSObject::get((JSC::Structure *)v10, a1, (unint64_t)v115[0]);
            if (v115[0])
            {
              if (*(_DWORD *)v115[0] == 2)
                WTF::StringImpl::destroy(v115[0], v21);
              else
                *(_DWORD *)v115[0] -= 2;
            }
            if (*((_DWORD *)v119 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v119))
              goto LABEL_45;
            v112 = v13;
            if (v22 == 10)
            {
              v23 = 0;
              goto LABEL_39;
            }
            v24 = (JSC::VM *)*((_QWORD *)a1 + 7);
            if (v22 >= 0xFFFE000000000000)
            {
              v107 = (_DWORD)v22 == 0;
              goto LABEL_192;
            }
            *(_QWORD *)&v25 = v22 - 0x2000000000000;
            if (v22 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              if ((v22 & v8) != 0)
              {
                v23 = v22 == 7;
                goto LABEL_38;
              }
              v108 = *(unsigned __int8 *)(v22 + 5);
              if (v108 == 3)
              {
                v111 = *(_DWORD *)(v22 + 8);
              }
              else
              {
                if (v108 != 2)
                {
                  if ((*(_BYTE *)(16 * (*(_DWORD *)v22 & 0xFFFFFFFE) + 0xA) & 1) == 0)
                  {
LABEL_196:
                    v23 = 1;
                    goto LABEL_38;
                  }
                  v107 = *(_QWORD *)(16 * (*(_DWORD *)v22 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
                  goto LABEL_192;
                }
                v109 = *(_QWORD *)(v22 + 8);
                if ((v109 & 1) != 0)
                  v110 = (int *)(v22 + 16);
                else
                  v110 = (int *)(v109 + 4);
                v111 = *v110;
              }
              v107 = v111 == 0;
LABEL_192:
              v23 = !v107;
              goto LABEL_38;
            }
            if (v25 > 0.0)
              goto LABEL_196;
            v23 = v25 < 0.0;
LABEL_38:
            if (*((_DWORD *)v24 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v24))
              goto LABEL_45;
LABEL_39:
            WTF::AtomStringImpl::addLiteral();
            v27 = JSC::JSObject::get((JSC::Structure *)v10, a1, (unint64_t)v115[0]);
            if (v115[0])
            {
              if (*(_DWORD *)v115[0] == 2)
                WTF::StringImpl::destroy(v115[0], v26);
              else
                *(_DWORD *)v115[0] -= 2;
            }
            if (*((_DWORD *)v119 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v119))
              goto LABEL_45;
            if (v27 == 10)
              goto LABEL_44;
            v115[0] = *((WTF::StringImpl **)a1 + 7);
            if ((v27 & v8) != 0)
              goto LABEL_60;
            v31 = *(unsigned int *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x4C);
            v32 = *(_DWORD *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x4C) != 0;
            if ((_DWORD)v31)
            {
              v33 = 16 * v31;
              if ((char **)v33 != &WebCore::JSNavigationHistoryEntry::s_info)
              {
                do
                {
                  v33 = *(_QWORD *)(v33 + 16);
                  v32 = v33 != 0;
                }
                while ((char **)v33 != &WebCore::JSNavigationHistoryEntry::s_info && v33 != 0);
              }
            }
            if (!v32)
              goto LABEL_60;
            v12 = *(_QWORD *)(v27 + 24);
            if (!v12)
              goto LABEL_60;
            ++*(_DWORD *)(v12 + 24);
            WTF::AtomStringImpl::addLiteral();
            v10 = JSC::JSObject::get((JSC::Structure *)v10, a1, (unint64_t)v115[0]);
            if (v115[0])
            {
              if (*(_DWORD *)v115[0] == 2)
                WTF::StringImpl::destroy(v115[0], v35);
              else
                *(_DWORD *)v115[0] -= 2;
            }
            if (*((_DWORD *)v119 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v119) & 1) != 0)
              goto LABEL_146;
            if ((v10 | 8) == 0xA)
            {
              v8 = (unint64_t)v3;
              v3 = 0;
            }
            else
            {
              v115[0] = *((WTF::StringImpl **)a1 + 7);
              v10 = WebCore::parseEnumeration<WebCore::NavigationNavigationType>(a1, v10);
              if (*((_DWORD *)v115[0] + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v115[0]) & 1) != 0)
                goto LABEL_146;
              if ((unsigned __int16)v10 <= 0xFFu)
              {
                JSC::throwTypeError();
LABEL_146:
                v116 = 1;
                if (*(_DWORD *)(v12 + 24) == 1)
                {
                  v91 = *(WebCore::HistoryItem **)(v12 + 64);
                  *(_QWORD *)(v12 + 64) = 0;
                  if (v91)
                  {
                    if (*(_DWORD *)v91 == 1)
                    {
                      WebCore::HistoryItem::~HistoryItem(v91, v90);
                      WTF::fastFree(v95, v96);
                    }
                    else
                    {
                      --*(_DWORD *)v91;
                    }
                  }
                  WebCore::ContextDestructionObserver::~ContextDestructionObserver((WebCore::ContextDestructionObserver *)(v12 + 32), v90);
                  WebCore::EventTarget::~EventTarget((WebCore::EventTarget *)v12, v92);
                  bmalloc::api::isoDeallocate(v93, v94);
                }
                else
                {
                  --*(_DWORD *)(v12 + 24);
                }
                goto LABEL_46;
              }
              v8 = (unint64_t)v3;
              v3 = (JSC::VM *)(v10 | 0x100);
            }
            LOBYTE(v115[0]) = v112;
            BYTE1(v115[0]) = v113;
            BYTE2(v115[0]) = v23;
            *(_WORD *)((char *)v115 + 3) = (_WORD)v3;
            v116 = 0;
            if (!v118)
            {
              v36 = v117;
              v117 = 0;
              v115[1] = 0;
              v37 = bmalloc::api::isoAllocate();
              WTF::MonotonicTime::now((WTF::MonotonicTime *)v37);
              *(_QWORD *)(v37 + 8) = 0;
              v41 = *(_DWORD *)(v37 + 20) & 0xFFC00000 | (v36 != 0) | 0x278200;
              *(_DWORD *)(v37 + 16) = 1;
              *(_DWORD *)(v37 + 20) = v41;
              if (v36)
                *(_DWORD *)v36 += 2;
              *(_QWORD *)(v37 + 24) = v36;
              *(_QWORD *)(v37 + 32) = 0;
              *(_QWORD *)(v37 + 40) = 0;
              *(_QWORD *)(v37 + 48) = 0;
              *(_QWORD *)(v37 + 56) = v40;
              *(_QWORD *)(v37 + 64) = 0;
              *(_QWORD *)v37 = off_1E33FFF98;
              *(_WORD *)(v37 + 72) = (_WORD)v3;
              v42 = *(_DWORD *)(v12 + 24);
              *(_DWORD *)(v12 + 24) = v42 + 1;
              *(_QWORD *)(v37 + 80) = v12;
              v119 = (JSC::VM *)v37;
              if (v42)
              {
                *(_DWORD *)(v12 + 24) = v42;
                if (v36)
                  goto LABEL_76;
              }
              else
              {
                v83 = *(WebCore::HistoryItem **)(v12 + 64);
                *(_QWORD *)(v12 + 64) = 0;
                if (v83)
                {
                  if (*(_DWORD *)v83 == 1)
                  {
                    WebCore::HistoryItem::~HistoryItem(v83, v38);
                    WTF::fastFree(v88, v89);
                  }
                  else
                  {
                    --*(_DWORD *)v83;
                  }
                }
                WebCore::ContextDestructionObserver::~ContextDestructionObserver((WebCore::ContextDestructionObserver *)(v12 + 32), v38);
                WebCore::EventTarget::~EventTarget((WebCore::EventTarget *)v12, v84);
                bmalloc::api::isoDeallocate(v85, v86);
                if (v36)
                {
LABEL_76:
                  if (*(_DWORD *)v36 == 2)
                    WTF::StringImpl::destroy(v36, v38);
                  else
                    *(_DWORD *)v36 -= 2;
                }
              }
              v43 = v119;
              if (*(void (***)(WebCore::NavigationCurrentEntryChangeEvent *__hidden))v119 != off_1E33FFF98)
              {
                __break(0xC471u);
                JUMPOUT(0x194D62C7CLL);
              }
              v44 = *(JSC::VM **)(v114 + 40);
              v45 = *((_QWORD *)v44 + 412);
              if (v45)
              {
                v46 = *(_DWORD *)(v45 - 8);
                v47 = ((unint64_t)&WebCore::JSNavigationCurrentEntryChangeEvent::s_info
                     + ~((_QWORD)&WebCore::JSNavigationCurrentEntryChangeEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSNavigationCurrentEntryChangeEvent::s_info
                                                                                                 + ~((_QWORD)&WebCore::JSNavigationCurrentEntryChangeEvent::s_info << 32)) >> 22);
                v48 = 9 * ((v47 + ~(v47 << 13)) ^ ((v47 + ~(v47 << 13)) >> 8));
                v49 = (v48 ^ (v48 >> 15)) + ~((v48 ^ (v48 >> 15)) << 27);
                v50 = v46 & ((v49 >> 31) ^ v49);
                v51 = *(char ***)(v45 + 16 * v50);
                if (v51 != &WebCore::JSNavigationCurrentEntryChangeEvent::s_info)
                {
                  v52 = 1;
                  while (v51)
                  {
                    v50 = ((_DWORD)v50 + v52) & v46;
                    v51 = *(char ***)(v45 + 16 * v50);
                    ++v52;
                    if (v51 == &WebCore::JSNavigationCurrentEntryChangeEvent::s_info)
                      goto LABEL_84;
                  }
                  goto LABEL_85;
                }
LABEL_84:
                v53 = *(_QWORD *)(v45 + 16 * v50 + 8);
                if (!v53)
                  goto LABEL_85;
              }
              else
              {
LABEL_85:
                v54 = (WebCore::JSEvent *)*((_QWORD *)v44 + 7);
                v55 = (JSC::JSCell *)WebCore::JSEvent::prototype(v54, *(JSC::VM **)(v114 + 40), v39);
                Structure = WebCore::JSNavigationCurrentEntryChangeEventPrototype::createStructure((uint64_t *)v54, (uint64_t)v44, v55);
                *(_DWORD *)(Structure + 16) |= 0x80000u;
                v58 = (JSC::JSCell *)WebCore::JSNavigationCurrentEntryChangeEventPrototype::create(v54, v44, Structure, v57);
                v59 = WebCore::JSNavigationCurrentEntryChangeEvent::createStructure((uint64_t *)v54, (uint64_t)v44, v58);
                v53 = WebCore::cacheDOMStructure((JSCell *)v44, v59, (uint64_t)&WebCore::JSNavigationCurrentEntryChangeEvent::s_info);
              }
              v28 = (JSCell *)WebCore::JSNavigationCurrentEntryChangeEvent::create(v53, v44, (uint64_t *)&v119);
              WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*((_QWORD *)v44 + 415), (uint64_t)v43, (uint64_t)v28);
              v60 = *(JSC::JSCell **)(a2 + 40);
              if (((unint64_t)v60 & 0xFFFE000000000002) != 0
                || (v61 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v60)) == 0
                || (v63 = v61, v61 == *(JSC::JSGlobalObject **)(a2 + 24))
                || (v64 = (JSC::VM *)*((_QWORD *)a1 + 7),
                    FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v61, v62),
                    *((_DWORD *)v64 + 20))
                && (JSC::VM::hasExceptionsAfterHandlingTraps(v64) & 1) != 0)
              {
LABEL_99:
                if (*(_DWORD *)(v8 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8) & 1) != 0)
                  v28 = 0;
                v82 = v119;
                v119 = 0;
                if (v82)
                {
                  if (*((_DWORD *)v82 + 4) == 1)
                    (*(void (**)(JSC::VM *))(*(_QWORD *)v82 + 8))(v82);
                  else
                    --*((_DWORD *)v82 + 4);
                }
                v29 = 0;
                goto LABEL_47;
              }
              v68 = *((_QWORD *)FunctionRealm + 412);
              if (v68)
              {
                v69 = *(_DWORD *)(v68 - 8);
                v70 = ((unint64_t)&WebCore::JSNavigationCurrentEntryChangeEvent::s_info
                     + ~((_QWORD)&WebCore::JSNavigationCurrentEntryChangeEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSNavigationCurrentEntryChangeEvent::s_info
                                                                                                 + ~((_QWORD)&WebCore::JSNavigationCurrentEntryChangeEvent::s_info << 32)) >> 22);
                v71 = 9 * ((v70 + ~(v70 << 13)) ^ ((v70 + ~(v70 << 13)) >> 8));
                v72 = (v71 ^ (v71 >> 15)) + ~((v71 ^ (v71 >> 15)) << 27);
                v73 = v69 & ((v72 >> 31) ^ v72);
                v74 = *(char ***)(v68 + 16 * v73);
                if (v74 != &WebCore::JSNavigationCurrentEntryChangeEvent::s_info)
                {
                  v75 = 1;
                  while (v74)
                  {
                    v73 = ((_DWORD)v73 + v75) & v69;
                    v74 = *(char ***)(v68 + 16 * v73);
                    ++v75;
                    if (v74 == &WebCore::JSNavigationCurrentEntryChangeEvent::s_info)
                      goto LABEL_95;
                  }
                  goto LABEL_96;
                }
LABEL_95:
                v65 = *(WebCore::JSDOMGlobalObject **)(v68 + 16 * v73 + 8);
                if (!v65)
                  goto LABEL_96;
              }
              else
              {
LABEL_96:
                v76 = (JSC::JSCell *)WebCore::JSEvent::prototype(v64, FunctionRealm, v65);
                v77 = WebCore::JSNavigationCurrentEntryChangeEventPrototype::createStructure((uint64_t *)v64, (uint64_t)FunctionRealm, v76);
                *(_DWORD *)(v77 + 16) |= 0x80000u;
                v79 = (JSC::JSCell *)WebCore::JSNavigationCurrentEntryChangeEventPrototype::create(v64, FunctionRealm, v77, v78);
                v80 = WebCore::JSNavigationCurrentEntryChangeEvent::createStructure((uint64_t *)v64, (uint64_t)FunctionRealm, v79);
                v65 = (WebCore::JSDOMGlobalObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v80, (uint64_t)&WebCore::JSNavigationCurrentEntryChangeEvent::s_info);
              }
              SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v63, v65, v66);
              if (!*((_DWORD *)v64 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v64) & 1) == 0)
                JSC::JSObject::setStructure(v28, v64, SubclassStructure);
              goto LABEL_99;
            }
            v14 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_154:
            v97 = (_DWORD)v12 == 0;
LABEL_198:
            v13 = !v97;
LABEL_16:
            if (*((_DWORD *)v14 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v14))
              goto LABEL_45;
          }
          v102 = (_DWORD)v17 == 0;
          goto LABEL_202;
        }
      }
LABEL_60:
      JSC::throwTypeError();
    }
LABEL_45:
    v116 = 1;
LABEL_46:
    v28 = 0;
    v29 = 1;
LABEL_47:
    ((void (*)(JSC::VM **, WTF::StringImpl **))off_1E32BFE50[v29])(&v119, v115);
    v6 = v118;
    goto LABEL_48;
  }
  v28 = 0;
LABEL_48:
  if (v6 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32BEAA0[v6])(v115, &v117);
  return v28;
}

uint64_t WebCore::JSNavigationCurrentEntryChangeEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSNavigationCurrentEntryChangeEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSNavigationCurrentEntryChangeEventPrototype::create(WebCore::JSNavigationCurrentEntryChangeEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSNavigationCurrentEntryChangeEvent::s_info, &WebCore::JSNavigationCurrentEntryChangeEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSNavigationCurrentEntryChangeEvent>,(WebCore::DOMConstructorID)722>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5776);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSNavigationCurrentEntryChangeEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000002, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSNavigationCurrentEntryChangeEvent::s_info
         + ~((_QWORD)&WebCore::JSNavigationCurrentEntryChangeEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSNavigationCurrentEntryChangeEvent::s_info
                                                                                     + ~((_QWORD)&WebCore::JSNavigationCurrentEntryChangeEvent::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSNavigationCurrentEntryChangeEvent::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSNavigationCurrentEntryChangeEvent::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEvent::prototype((WebCore::JSEvent *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSNavigationCurrentEntryChangeEventPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSNavigationCurrentEntryChangeEventPrototype::create((WebCore::JSNavigationCurrentEntryChangeEventPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSNavigationCurrentEntryChangeEvent::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSNavigationCurrentEntryChangeEvent::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5776) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsNavigationCurrentEntryChangeEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSNavigationCurrentEntryChangeEventPrototype::s_info != (char **)(16
                                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSNavigationCurrentEntryChangeEvent>,(WebCore::DOMConstructorID)722>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsNavigationCurrentEntryChangeEvent_navigationType(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int16 *)(*(_QWORD *)(a2 + 24) + 72) >= 0x100u)
    return WebCore::convertEnumerationToJS<WebCore::NavigationNavigationType>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(_WORD *)(*(_QWORD *)(a2 + 24) + 72));
  else
    return 2;
}

uint64_t WebCore::jsNavigationCurrentEntryChangeEvent_from(int a1, uint64_t a2)
{
  uint64_t v2;
  JSC::VM *v3;
  WTF::StringImpl *v4;
  unint64_t v5;
  WebCore::HistoryItem *v7;
  void *v8;
  bmalloc::api *v9;
  void *v10;
  WTF *v11;
  void *v12;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 80);
  if (!v2)
    return 2;
  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  ++*(_DWORD *)(v2 + 24);
  v5 = WebCore::wrap<WebCore::NavigationHistoryEntry>(a1, v3, v2);
  if (*(_DWORD *)(v2 + 24) == 1)
  {
    v7 = *(WebCore::HistoryItem **)(v2 + 64);
    *(_QWORD *)(v2 + 64) = 0;
    if (v7)
    {
      if (*(_DWORD *)v7 == 1)
      {
        WebCore::HistoryItem::~HistoryItem(v7, v4);
        WTF::fastFree(v11, v12);
      }
      else
      {
        --*(_DWORD *)v7;
      }
    }
    WebCore::ContextDestructionObserver::~ContextDestructionObserver((WebCore::ContextDestructionObserver *)(v2 + 32), v4);
    WebCore::EventTarget::~EventTarget((WebCore::EventTarget *)v2, v8);
    bmalloc::api::isoDeallocate(v9, v10);
  }
  else
  {
    --*(_DWORD *)(v2 + 24);
  }
  return v5;
}

uint64_t WebCore::JSNavigationCurrentEntryChangeEvent::subspaceForImpl(WebCore::JSNavigationCurrentEntryChangeEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 5856);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 5856))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 5856);
    *(_QWORD *)(v8 + 5856) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 5856);
  *(_QWORD *)(v3 + 5856) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

WebCore::NavigationDestination *WebCore::JSNavigationDestination::destroy(WebCore::JSNavigationDestination *this, JSC::JSCell *a2)
{
  WebCore::NavigationDestination *result;
  bmalloc::api *v4;
  void *v5;

  result = (WebCore::NavigationDestination *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
    {
      WebCore::NavigationDestination::~NavigationDestination(result, a2);
      return (WebCore::NavigationDestination *)bmalloc::api::isoDeallocate(v4, v5);
    }
    else
    {
      --*(_DWORD *)result;
    }
  }
  return result;
}

uint64_t WebCore::JSNavigationDestination::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSNavigationDestinationPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSNavigationDestinationPrototype::create(WebCore::JSNavigationDestinationPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<7u>(this, (uint64_t)&WebCore::JSNavigationDestination::s_info, &WebCore::JSNavigationDestinationPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigationDestination>,(WebCore::DOMConstructorID)723>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5784);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigationDestination>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSNavigationDestination::s_info
         + ~((_QWORD)&WebCore::JSNavigationDestination::s_info << 32)) ^ (((unint64_t)&WebCore::JSNavigationDestination::s_info
                                                                         + ~((_QWORD)&WebCore::JSNavigationDestination::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSNavigationDestination::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSNavigationDestination::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSNavigationDestinationPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSNavigationDestinationPrototype::create((WebCore::JSNavigationDestinationPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSNavigationDestination::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSNavigationDestination::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5784) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsNavigationDestinationConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSNavigationDestinationPrototype::s_info != (char **)(16
                                                                     * *(unsigned int *)(16
                                                                                       * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                       + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigationDestination>,(WebCore::DOMConstructorID)723>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsNavigationDestination_url(uint64_t a1, uint64_t a2, const WTF::String *a3)
{
  return JSC::jsOwnedString(*(JSC **)(a1 + 56), (JSC::VM *)(*(_QWORD *)(a2 + 24) + 24), a3);
}

uint64_t WebCore::jsNavigationDestination_key(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  WTF::StringImpl *v15;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 16);
  if (!v3)
  {
    v8 = 0;
    v9 = *(_QWORD *)(a1 + 56);
LABEL_19:
    v11 = *(_QWORD *)(v9 + 41968);
LABEL_20:
    if (!v8)
      return v11;
    goto LABEL_30;
  }
  v4 = *(_QWORD *)(v3 + 40);
  if (v4 && (v5 = *(_QWORD *)(v4 + 8)) != 0 && !*(_BYTE *)(v5 + 178))
  {
    v6 = v5 - 288;
    *(_DWORD *)(v5 - 264) += 2;
    if ((WebCore::Document::isFullyActive((WebCore::Document *)(v5 - 288)) & 1) != 0)
    {
      WTF::UUID::toString((WTF::UUID *)(*(_QWORD *)(v3 + 64) + 368));
LABEL_9:
      if (*(_DWORD *)(v6 + 24) == 2)
      {
        if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
          WebCore::Node::removedLastRef((WebCore::Node *)v6, v8);
      }
      else
      {
        *(_DWORD *)(v6 + 24) -= 2;
      }
      v8 = v15;
      goto LABEL_12;
    }
    v7 = 0;
  }
  else
  {
    v6 = 0;
    v7 = 1;
  }
  v8 = (WTF::StringImpl *)*MEMORY[0x1E0CBF6F0];
  if (*MEMORY[0x1E0CBF6F0])
    *(_DWORD *)v8 += 2;
  v15 = v8;
  if ((v7 & 1) == 0)
    goto LABEL_9;
LABEL_12:
  v9 = *(_QWORD *)(a1 + 56);
  if (!v8)
    goto LABEL_19;
  v10 = *((_DWORD *)v8 + 1);
  if (!v10)
    goto LABEL_19;
  if (v10 == 1)
  {
    v12 = (unsigned __int8 *)*((_QWORD *)v8 + 1);
    if ((*((_BYTE *)v8 + 16) & 4) != 0)
    {
      v13 = *v12;
    }
    else
    {
      v13 = *(unsigned __int16 *)v12;
      if (v13 > 0xFF)
        goto LABEL_15;
      v13 = v13;
    }
    v11 = *(_QWORD *)(v9 + 8 * v13 + 42216);
    goto LABEL_30;
  }
LABEL_15:
  v11 = *(_QWORD *)(v9 + 64760);
  if (!v11 || v8 != *(WTF::StringImpl **)(v11 + 8))
  {
    v11 = JSC::jsStringWithCacheSlowCase();
    v8 = v15;
    goto LABEL_20;
  }
LABEL_30:
  if (*(_DWORD *)v8 == 2)
    WTF::StringImpl::destroy(v8, v8);
  else
    *(_DWORD *)v8 -= 2;
  return v11;
}

uint64_t WebCore::jsNavigationDestination_id(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  WTF::StringImpl *v15;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 16);
  if (!v3)
  {
    v8 = 0;
    v9 = *(_QWORD *)(a1 + 56);
LABEL_19:
    v11 = *(_QWORD *)(v9 + 41968);
LABEL_20:
    if (!v8)
      return v11;
    goto LABEL_30;
  }
  v4 = *(_QWORD *)(v3 + 40);
  if (v4 && (v5 = *(_QWORD *)(v4 + 8)) != 0 && !*(_BYTE *)(v5 + 178))
  {
    v6 = v5 - 288;
    *(_DWORD *)(v5 - 264) += 2;
    if ((WebCore::Document::isFullyActive((WebCore::Document *)(v5 - 288)) & 1) != 0)
    {
      WTF::UUID::toString((WTF::UUID *)(v3 + 48));
LABEL_9:
      if (*(_DWORD *)(v6 + 24) == 2)
      {
        if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
          WebCore::Node::removedLastRef((WebCore::Node *)v6, v8);
      }
      else
      {
        *(_DWORD *)(v6 + 24) -= 2;
      }
      v8 = v15;
      goto LABEL_12;
    }
    v7 = 0;
  }
  else
  {
    v6 = 0;
    v7 = 1;
  }
  v8 = (WTF::StringImpl *)*MEMORY[0x1E0CBF6F0];
  if (*MEMORY[0x1E0CBF6F0])
    *(_DWORD *)v8 += 2;
  v15 = v8;
  if ((v7 & 1) == 0)
    goto LABEL_9;
LABEL_12:
  v9 = *(_QWORD *)(a1 + 56);
  if (!v8)
    goto LABEL_19;
  v10 = *((_DWORD *)v8 + 1);
  if (!v10)
    goto LABEL_19;
  if (v10 == 1)
  {
    v12 = (unsigned __int8 *)*((_QWORD *)v8 + 1);
    if ((*((_BYTE *)v8 + 16) & 4) != 0)
    {
      v13 = *v12;
    }
    else
    {
      v13 = *(unsigned __int16 *)v12;
      if (v13 > 0xFF)
        goto LABEL_15;
      v13 = v13;
    }
    v11 = *(_QWORD *)(v9 + 8 * v13 + 42216);
    goto LABEL_30;
  }
LABEL_15:
  v11 = *(_QWORD *)(v9 + 64760);
  if (!v11 || v8 != *(WTF::StringImpl **)(v11 + 8))
  {
    v11 = JSC::jsStringWithCacheSlowCase();
    v8 = v15;
    goto LABEL_20;
  }
LABEL_30:
  if (*(_DWORD *)v8 == 2)
    WTF::StringImpl::destroy(v8, v8);
  else
    *(_DWORD *)v8 -= 2;
  return v11;
}

uint64_t WebCore::jsNavigationDestination_index(uint64_t a1, uint64_t a2)
{
  WebCore::NavigationHistoryEntry *v2;
  uint64_t v3;

  v2 = *(WebCore::NavigationHistoryEntry **)(*(_QWORD *)(a2 + 24) + 16);
  if (!v2)
  {
    LODWORD(v3) = -1;
    return v3 | 0xFFFE000000000000;
  }
  v3 = WebCore::NavigationHistoryEntry::index(v2);
  if (v3 == (int)v3)
    return v3 | 0xFFFE000000000000;
  return COERCE__INT64((double)v3) + 0x2000000000000;
}

uint64_t WebCore::jsNavigationDestination_sameDocument(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(*(_QWORD *)(a2 + 24) + 64))
    return 7;
  else
    return 6;
}

uint64_t WebCore::JSNavigationDestinationOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

void WebCore::JSNavigationDestinationOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  WebCore::NavigationDestination *v3;
  int v4;
  uint64_t v5;
  bmalloc::api *v6;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  WebCore::NavigationDestination *v16;
  int v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;

  v3 = *(WebCore::NavigationDestination **)(*(_QWORD *)a2 + 24);
  v4 = (*(_DWORD *)v3)++;
  if (*(_DWORD *)(a3 + 48))
  {
    v10 = *(_QWORD *)(a3 + 32);
    v8 = (uint64_t *)(a3 + 32);
    v9 = v10;
    if (v10)
    {
      v11 = *(_DWORD *)(v9 - 8);
      v12 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
      v13 = 9 * ((v12 + ~(v12 << 13)) ^ ((v12 + ~(v12 << 13)) >> 8));
      v14 = (v13 ^ (v13 >> 15)) + ~((v13 ^ (v13 >> 15)) << 27);
      v15 = v11 & ((v14 >> 31) ^ v14);
      v16 = *(WebCore::NavigationDestination **)(v9 + 16 * v15);
      if (v16 != v3)
      {
        v17 = 1;
        while (v16)
        {
          v15 = ((_DWORD)v15 + v17) & v11;
          v16 = *(WebCore::NavigationDestination **)(v9 + 16 * v15);
          ++v17;
          if (v16 == v3)
            goto LABEL_12;
        }
        v15 = *(unsigned int *)(v9 - 4);
      }
LABEL_12:
      if (v15 != *(_DWORD *)(v9 - 4))
      {
        v18 = (_QWORD *)(v9 + 16 * v15);
        *v18 = -1;
        v21 = v18[1];
        v20 = v18 + 1;
        v19 = v21;
        if (v21)
        {
          *(_QWORD *)(v19 + 8) = 3;
          *v20 = 0;
        }
        ++*(_DWORD *)(*v8 - 16);
        v22 = *v8;
        if (*v8)
          v23 = *(_DWORD *)(v22 - 12) - 1;
        else
          v23 = -1;
        *(_DWORD *)(v22 - 12) = v23;
        v24 = *v8;
        if (*v8)
        {
          v25 = 6 * *(_DWORD *)(v24 - 12);
          v26 = *(_DWORD *)(v24 - 4);
          if (v25 < v26 && v26 >= 9)
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v8, v26 >> 1, 0);
        }
      }
    }
    v4 = *(_DWORD *)v3 - 1;
  }
  else
  {
    v5 = *((_QWORD *)v3 + 1);
    if (v5)
    {
      *(_QWORD *)(v5 + 8) = 3;
      *((_QWORD *)v3 + 1) = 0;
    }
  }
  if (v4)
  {
    *(_DWORD *)v3 = v4;
  }
  else
  {
    WebCore::NavigationDestination::~NavigationDestination(v3, a2);
    bmalloc::api::isoDeallocate(v6, v7);
  }
}

uint64_t WebCore::JSNavigationHistoryEntry::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEventTarget::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSNavigationHistoryEntryPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSNavigationHistoryEntryPrototype::create(WebCore::JSNavigationHistoryEntryPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<8u>(this, (uint64_t)&WebCore::JSNavigationHistoryEntry::s_info, (uint64_t)&WebCore::JSNavigationHistoryEntryPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigationHistoryEntry>,(WebCore::DOMConstructorID)724>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5792);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventTarget>,(WebCore::DOMConstructorID)450>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigationHistoryEntry>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSNavigationHistoryEntry::s_info
         + ~((_QWORD)&WebCore::JSNavigationHistoryEntry::s_info << 32)) ^ (((unint64_t)&WebCore::JSNavigationHistoryEntry::s_info
                                                                          + ~((_QWORD)&WebCore::JSNavigationHistoryEntry::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSNavigationHistoryEntry::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSNavigationHistoryEntry::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEventTarget::prototype((WebCore::JSEventTarget *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSNavigationHistoryEntryPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSNavigationHistoryEntryPrototype::create((WebCore::JSNavigationHistoryEntryPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSNavigationHistoryEntry::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSNavigationHistoryEntry::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5792) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsNavigationHistoryEntryConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSNavigationHistoryEntryPrototype::s_info != (char **)(16
                                                                      * *(unsigned int *)(16
                                                                                        * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                        + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigationHistoryEntry>,(WebCore::DOMConstructorID)724>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsNavigationHistoryEntry_url(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  _DWORD *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned __int8 *v14;
  unsigned int v15;
  unsigned int v16;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(v3 + 40);
  if (v4 && (v5 = *(_QWORD *)(v4 + 8)) != 0 && !*(_BYTE *)(v5 + 178))
  {
    v7 = (_DWORD *)(v5 - 264);
    *(_DWORD *)(v5 - 264) += 2;
    if (WebCore::Document::isFullyActive((WebCore::Document *)(v5 - 288)))
      v6 = (uint64_t *)(*(_QWORD *)(v3 + 64) + 16);
    else
      v6 = (uint64_t *)MEMORY[0x1E0CBF6F0];
    if (*v7 == 2)
    {
      if ((*(_WORD *)(v5 - 258) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)(v5 - 288), v8);
    }
    else
    {
      *v7 -= 2;
    }
  }
  else
  {
    v6 = (uint64_t *)MEMORY[0x1E0CBF6F0];
  }
  v9 = *v6;
  if (!*v6)
    return 2;
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_DWORD *)(v9 + 4);
  if (!v12)
    return *(_QWORD *)(v11 + 41968);
  if (v12 == 1)
  {
    v14 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v15 = *v14;
    }
    else
    {
      v16 = *(unsigned __int16 *)v14;
      if (v16 > 0xFF)
        goto LABEL_14;
      v15 = v16;
    }
    return *(_QWORD *)(v11 + 8 * v15 + 42216);
  }
LABEL_14:
  v10 = *(_QWORD *)(v11 + 64760);
  if (!v10 || v9 != *(_QWORD *)(v10 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v10;
}

uint64_t WebCore::jsNavigationHistoryEntry_key(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  unsigned int v14;
  WTF::StringImpl *v16;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(v3 + 40);
  if (v4 && (v5 = *(_QWORD *)(v4 + 8)) != 0 && !*(_BYTE *)(v5 + 178))
  {
    v6 = v5 - 288;
    *(_DWORD *)(v5 - 264) += 2;
    if ((WebCore::Document::isFullyActive((WebCore::Document *)(v5 - 288)) & 1) != 0)
    {
      WTF::UUID::toString((WTF::UUID *)(*(_QWORD *)(v3 + 64) + 368));
LABEL_8:
      if (*(_DWORD *)(v6 + 24) == 2)
      {
        if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
          WebCore::Node::removedLastRef((WebCore::Node *)v6, v8);
      }
      else
      {
        *(_DWORD *)(v6 + 24) -= 2;
      }
      v8 = v16;
      goto LABEL_11;
    }
    v7 = 0;
  }
  else
  {
    v6 = 0;
    v7 = 1;
  }
  v8 = (WTF::StringImpl *)*MEMORY[0x1E0CBF6F0];
  if (*MEMORY[0x1E0CBF6F0])
    *(_DWORD *)v8 += 2;
  v16 = v8;
  if ((v7 & 1) == 0)
    goto LABEL_8;
LABEL_11:
  v9 = *(_QWORD *)(a1 + 56);
  if (!v8 || (v10 = *((_DWORD *)v8 + 1)) == 0)
  {
    v11 = *(_QWORD *)(v9 + 41968);
LABEL_17:
    if (!v8)
      return v11;
    goto LABEL_30;
  }
  if (v10 != 1)
    goto LABEL_14;
  v12 = (unsigned __int8 *)*((_QWORD *)v8 + 1);
  if ((*((_BYTE *)v8 + 16) & 4) != 0)
  {
    v13 = *v12;
LABEL_29:
    v11 = *(_QWORD *)(v9 + 8 * v13 + 42216);
    goto LABEL_30;
  }
  v14 = *(unsigned __int16 *)v12;
  if (v14 <= 0xFF)
  {
    v13 = v14;
    goto LABEL_29;
  }
LABEL_14:
  v11 = *(_QWORD *)(v9 + 64760);
  if (!v11 || v8 != *(WTF::StringImpl **)(v11 + 8))
  {
    v11 = JSC::jsStringWithCacheSlowCase();
    v8 = v16;
    goto LABEL_17;
  }
LABEL_30:
  if (*(_DWORD *)v8 == 2)
    WTF::StringImpl::destroy(v8, v8);
  else
    *(_DWORD *)v8 -= 2;
  return v11;
}

uint64_t WebCore::jsNavigationHistoryEntry_id(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  unsigned int v14;
  WTF::StringImpl *v16;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(v3 + 40);
  if (v4 && (v5 = *(_QWORD *)(v4 + 8)) != 0 && !*(_BYTE *)(v5 + 178))
  {
    v6 = v5 - 288;
    *(_DWORD *)(v5 - 264) += 2;
    if ((WebCore::Document::isFullyActive((WebCore::Document *)(v5 - 288)) & 1) != 0)
    {
      WTF::UUID::toString((WTF::UUID *)(v3 + 48));
LABEL_8:
      if (*(_DWORD *)(v6 + 24) == 2)
      {
        if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
          WebCore::Node::removedLastRef((WebCore::Node *)v6, v8);
      }
      else
      {
        *(_DWORD *)(v6 + 24) -= 2;
      }
      v8 = v16;
      goto LABEL_11;
    }
    v7 = 0;
  }
  else
  {
    v6 = 0;
    v7 = 1;
  }
  v8 = (WTF::StringImpl *)*MEMORY[0x1E0CBF6F0];
  if (*MEMORY[0x1E0CBF6F0])
    *(_DWORD *)v8 += 2;
  v16 = v8;
  if ((v7 & 1) == 0)
    goto LABEL_8;
LABEL_11:
  v9 = *(_QWORD *)(a1 + 56);
  if (!v8 || (v10 = *((_DWORD *)v8 + 1)) == 0)
  {
    v11 = *(_QWORD *)(v9 + 41968);
LABEL_17:
    if (!v8)
      return v11;
    goto LABEL_30;
  }
  if (v10 != 1)
    goto LABEL_14;
  v12 = (unsigned __int8 *)*((_QWORD *)v8 + 1);
  if ((*((_BYTE *)v8 + 16) & 4) != 0)
  {
    v13 = *v12;
LABEL_29:
    v11 = *(_QWORD *)(v9 + 8 * v13 + 42216);
    goto LABEL_30;
  }
  v14 = *(unsigned __int16 *)v12;
  if (v14 <= 0xFF)
  {
    v13 = v14;
    goto LABEL_29;
  }
LABEL_14:
  v11 = *(_QWORD *)(v9 + 64760);
  if (!v11 || v8 != *(WTF::StringImpl **)(v11 + 8))
  {
    v11 = JSC::jsStringWithCacheSlowCase();
    v8 = v16;
    goto LABEL_17;
  }
LABEL_30:
  if (*(_DWORD *)v8 == 2)
    WTF::StringImpl::destroy(v8, v8);
  else
    *(_DWORD *)v8 -= 2;
  return v11;
}

unint64_t WebCore::jsNavigationHistoryEntry_index(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = WebCore::NavigationHistoryEntry::index(*(WebCore::NavigationHistoryEntry **)(a2 + 24));
  if (v2 == (int)v2)
    return v2 | 0xFFFE000000000000;
  else
    return COERCE__INT64((double)v2) + 0x2000000000000;
}

uint64_t WebCore::jsNavigationHistoryEntry_sameDocument(uint64_t a1, uint64_t a2)
{
  if (WebCore::NavigationHistoryEntry::sameDocument(*(WebCore::NavigationHistoryEntry **)(a2 + 24)))
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsNavigationHistoryEntry_ondispose(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  WebCore::HistoryItem *v12;
  void *v13;
  bmalloc::api *v14;
  void *v15;
  WTF *v16;
  void *v17;

  v5 = *(_QWORD *)(a2 + 24);
  ++*(_DWORD *)(v5 + 24);
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 640), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 1)
  {
    v12 = *(WebCore::HistoryItem **)(v5 + 64);
    *(_QWORD *)(v5 + 64) = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
      {
        WebCore::HistoryItem::~HistoryItem(v12, v9);
        WTF::fastFree(v16, v17);
      }
      else
      {
        --*(_DWORD *)v12;
      }
    }
    WebCore::ContextDestructionObserver::~ContextDestructionObserver((WebCore::ContextDestructionObserver *)(v5 + 32), v9);
    WebCore::EventTarget::~EventTarget((WebCore::EventTarget *)v5, v13);
    bmalloc::api::isoDeallocate(v14, v15);
  }
  else
  {
    --*(_DWORD *)(v5 + 24);
  }
  return v10;
}

BOOL WebCore::setJSNavigationHistoryEntry_ondispose(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  WebCore::HistoryItem *v17;
  void *v18;
  bmalloc::api *v19;
  void *v20;
  WTF *v21;
  void *v22;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v8 = (char **)(16 * v6);
    if ((_DWORD)v6)
      v9 = v8 == &WebCore::JSNavigationHistoryEntry::s_info;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSNavigationHistoryEntry::s_info && v8 != 0);
    }
    if (v7)
    {
      v11 = *(_QWORD *)(a2 + 24);
      ++*(_DWORD *)(v11 + 24);
      v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
      if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
        v13 = WebCore::threadGlobalDataSlow(a1);
      v14 = *(_QWORD *)(v13 + 40);
      if (!v14)
      {
        WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
        v14 = *(_QWORD *)(v13 + 40);
      }
      WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v11, (WTF::StringImpl **)(v14 + 640), a3, (_DWORD *)a2);
      if (*(_DWORD *)(v11 + 24) == 1)
      {
        v17 = *(WebCore::HistoryItem **)(v11 + 64);
        *(_QWORD *)(v11 + 64) = 0;
        if (v17)
        {
          if (*(_DWORD *)v17 == 1)
          {
            WebCore::HistoryItem::~HistoryItem(v17, v15);
            WTF::fastFree(v21, v22);
          }
          else
          {
            --*(_DWORD *)v17;
          }
        }
        WebCore::ContextDestructionObserver::~ContextDestructionObserver((WebCore::ContextDestructionObserver *)(v11 + 32), v15);
        WebCore::EventTarget::~EventTarget((WebCore::EventTarget *)v11, v18);
        bmalloc::api::isoDeallocate(v19, v20);
        if (!a3)
          return 1;
      }
      else
      {
        --*(_DWORD *)(v11 + 24);
        if (!a3)
          return 1;
      }
      if ((a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
      return 1;
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

unint64_t WebCore::wrap<WebCore::NavigationHistoryEntry>(int a1, JSC::VM *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t SlowCase;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char **v14;
  int v15;
  unint64_t v16;
  WebCore::JSEventTarget *v17;
  JSC::JSCell *v18;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v20;
  JSC::Structure *v21;
  JSC::JSCell *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  WTF *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  WTF *v39;
  void *v40;
  int v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *Allocator;
  uint64_t v46;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  unsigned int v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  unint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  WTF *v62;

  v5 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v5 + 48))
  {
    v51 = *(_QWORD *)(v5 + 32);
    if (!v51)
      goto LABEL_5;
    v52 = *(_DWORD *)(v51 - 8);
    v53 = (~(a3 << 32) + a3) ^ ((unint64_t)(~(a3 << 32) + a3) >> 22);
    v54 = 9 * ((v53 + ~(v53 << 13)) ^ ((v53 + ~(v53 << 13)) >> 8));
    v55 = (v54 ^ (v54 >> 15)) + ~((v54 ^ (v54 >> 15)) << 27);
    v56 = v52 & ((v55 >> 31) ^ v55);
    v57 = *(_QWORD *)(v51 + 16 * v56);
    if (v57 != a3)
    {
      v58 = 1;
      while (v57)
      {
        v56 = ((_DWORD)v56 + v58) & v52;
        v57 = *(_QWORD *)(v51 + 16 * v56);
        ++v58;
        if (v57 == a3)
          goto LABEL_66;
      }
      goto LABEL_5;
    }
LABEL_66:
    v6 = *(_QWORD *)(v51 + 16 * v56 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *(_QWORD *)(a3 + 8);
    if (!v6)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    SlowCase = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return SlowCase;
  }
LABEL_5:
  ++*(_DWORD *)(a3 + 24);
  if (*(uint64_t (***)(WebCore::NavigationHistoryEntry *__hidden))a3 != off_1E3400060)
  {
    __break(0xC471u);
    JUMPOUT(0x194D65C9CLL);
  }
  v8 = *((_QWORD *)a2 + 412);
  if (v8)
  {
    v9 = *(_DWORD *)(v8 - 8);
    v10 = ((unint64_t)&WebCore::JSNavigationHistoryEntry::s_info
         + ~((_QWORD)&WebCore::JSNavigationHistoryEntry::s_info << 32)) ^ (((unint64_t)&WebCore::JSNavigationHistoryEntry::s_info
                                                                          + ~((_QWORD)&WebCore::JSNavigationHistoryEntry::s_info << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = *(char ***)(v8 + 16 * v13);
    if (v14 == &WebCore::JSNavigationHistoryEntry::s_info)
    {
LABEL_11:
      v16 = *(_QWORD *)(v8 + 16 * v13 + 8);
      if (v16)
        goto LABEL_13;
    }
    else
    {
      v15 = 1;
      while (v14)
      {
        v13 = ((_DWORD)v13 + v15) & v9;
        v14 = *(char ***)(v8 + 16 * v13);
        ++v15;
        if (v14 == &WebCore::JSNavigationHistoryEntry::s_info)
          goto LABEL_11;
      }
    }
  }
  v17 = (WebCore::JSEventTarget *)*((_QWORD *)a2 + 7);
  v18 = (JSC::JSCell *)WebCore::JSEventTarget::prototype(v17, a2, (WebCore::JSDOMGlobalObject *)a3);
  Structure = WebCore::JSNavigationHistoryEntryPrototype::createStructure((uint64_t *)v17, (uint64_t)a2, v18);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v22 = (JSC::JSCell *)WebCore::JSNavigationHistoryEntryPrototype::create(v17, Structure, v20, v21);
  v23 = WebCore::JSNavigationHistoryEntry::createStructure((uint64_t *)v17, (uint64_t)a2, v22);
  v16 = WebCore::cacheDOMStructure((JSCell *)a2, v23, (uint64_t)&WebCore::JSNavigationHistoryEntry::s_info);
LABEL_13:
  v24 = *((_QWORD *)a2 + 7);
  v25 = *(_QWORD *)(v24 + 41456);
  v26 = *(_QWORD *)(v25 + 23536);
  v27 = *(_QWORD **)(v26 + 5872);
  if (v27)
    goto LABEL_36;
  v28 = *(_QWORD *)(v25 + 22648);
  if (__ldaxr((unsigned __int8 *)v28))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v28))
  {
    goto LABEL_18;
  }
  MEMORY[0x19AEA534C](v28);
LABEL_18:
  v30 = *(_QWORD *)(v28 + 2824);
  v60 = *(_QWORD *)(v30 + 5872);
  if (!v60)
  {
    v31 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v62, "IsoSpace T");
    v61 = 0;
    MEMORY[0x19AEA3204](v31, &v62, v24 + 192, v24 + 1872, 32, 8, &v61);
    v33 = (uint64_t)v61;
    v61 = 0;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
    v34 = v62;
    v62 = 0;
    if (v34)
    {
      if (*(_DWORD *)v34 == 1)
        WTF::fastFree(v34, v32);
      else
        --*(_DWORD *)v34;
    }
    v60 = v31;
    v35 = *(_QWORD *)(v30 + 5872);
    *(_QWORD *)(v30 + 5872) = v31;
    if (v35)
      (*(void (**)(uint64_t))(*(_QWORD *)v35 + 8))(v35);
    v36 = *(unsigned int *)(v28 + 2844);
    if ((_DWORD)v36 == *(_DWORD *)(v28 + 2840))
    {
      v37 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v28 + 2832, v36 + 1, (unint64_t)&v60);
      v36 = *(unsigned int *)(v28 + 2844);
      *(_QWORD *)(*(_QWORD *)(v28 + 2832) + 8 * v36) = *v37;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v28 + 2832) + 8 * v36) = v31;
    }
    *(_DWORD *)(v28 + 2844) = v36 + 1;
  }
  v27 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v38 = *(_QWORD *)(v26 + 5872);
  *(_QWORD *)(v26 + 5872) = v27;
  if (v38)
  {
    v39 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v39, v40);
  }
  v41 = __ldxr((unsigned __int8 *)v28);
  if (v41 != 1)
  {
    __clrex();
    goto LABEL_35;
  }
  if (__stlxr(0, (unsigned __int8 *)v28))
LABEL_35:
    WTF::Lock::unlockSlow((WTF::Lock *)v28);
LABEL_36:
  SlowCase = v27[3];
  if (SlowCase < v27[4])
  {
LABEL_37:
    v27[3] = SlowCase + 32;
    goto LABEL_38;
  }
  SlowCase = v27[5];
  if ((SlowCase & 1) == 0)
  {
    v59 = *(_QWORD *)(SlowCase + 8) ^ v27[6];
    v27[4] = SlowCase + HIDWORD(v59);
    v27[5] = SlowCase + (int)v59;
    goto LABEL_37;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_38:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v16);
  *(_QWORD *)(SlowCase + 24) = a3;
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v42 = *((_QWORD *)a2 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::EventTarget *)::owner = (uint64_t)&off_1E3276300;
  }
  if (!*(_DWORD *)(v42 + 48))
  {
    if ((SlowCase & 8) != 0)
      v43 = (SlowCase - 112) | 1;
    else
      v43 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v43 & 1) != 0)
      v44 = v43 + 47;
    else
      v44 = *(_QWORD *)v43 + 32;
    Allocator = *(_QWORD **)(v44 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v44 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::EventTarget *)::owner;
    Allocator[2] = v42;
    v46 = *(_QWORD *)(a3 + 8);
    *(_QWORD *)(a3 + 8) = Allocator;
    if (!v46)
      return SlowCase;
LABEL_60:
    *(_QWORD *)(v46 + 8) = 3;
    return SlowCase;
  }
  v62 = (WTF *)a3;
  if ((SlowCase & 8) != 0)
    v48 = (SlowCase - 112) | 1;
  else
    v48 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v48 & 1) != 0)
    v49 = v48 + 47;
  else
    v49 = *(_QWORD *)v48 + 32;
  v50 = *(_QWORD **)(v49 + 16);
  if (!v50)
    v50 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v49 + 16) = *v50;
  *v50 = SlowCase;
  v50[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::EventTarget *)::owner;
  v50[2] = v42;
  v61 = v50;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v42 + 32), (uint64_t *)&v62, (uint64_t *)&v61);
  v46 = (uint64_t)v61;
  if (v61)
    goto LABEL_60;
  return SlowCase;
}

void WebCore::JSNavigationInterceptHandler::~JSNavigationInterceptHandler(WebCore::JSNavigationInterceptHandler *this, void *a2)
{
  WTF *v2;
  void *v3;

  WebCore::JSAbortAlgorithm::~JSAbortAlgorithm(this, a2);
  WTF::fastFree(v2, v3);
}

uint64_t WebCore::JSNavigationInterceptHandler::handleEvent@<X0>(WebCore::JSNavigationInterceptHandler *this@<X0>, _DWORD *a2@<X8>)
{
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  JSC::JSPromise *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  JSC::Structure *v11;
  uint64_t v12;
  void *v13;
  JSC::JSGlobalObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t result;
  unsigned int v19;
  unsigned int v20;
  _QWORD *v21;
  uint64_t *v22;
  unsigned int v23;
  uint64_t v24;
  _BYTE v25[8];
  uint64_t v26;
  WTF *v27;
  _OWORD v28[4];
  uint64_t v29;
  _BYTE v30[15];
  char v31;

  v4 = (unsigned int *)((char *)this + 16);
  do
    v5 = __ldaxr(v4);
  while (__stlxr(v5 + 1, v4));
  v6 = **((_QWORD **)this + 3);
  if (!v6 || (*(_BYTE *)(v6 + 8) & 3) != 0)
    v7 = 0;
  else
    v7 = *(JSC::JSPromise **)v6;
  MEMORY[0x19AEA3294](v30, *((_QWORD *)v7 + 7));
  v25[0] = 0;
  v26 = 0x800000000;
  v27 = (WTF *)((char *)v28 + 8);
  memset(v28, 0, sizeof(v28));
  v29 = 0;
  v24 = 0;
  v8 = (uint64_t *)*((_QWORD *)this + 3);
  v9 = *v8;
  if (*v8 && (*(_BYTE *)(v9 + 8) & 3) == 0 && *(_QWORD *)v9)
  {
    v10 = v8[2];
    if (!v10 || (*(_BYTE *)(v10 + 8) & 3) != 0)
      v11 = 0;
    else
      v11 = *(JSC::Structure **)v10;
    v12 = WebCore::JSCallbackData::invokeCallback(*(JSC::JSGlobalObject **)v9, v11, 10, (uint64_t)v25, 0, 0, &v24);
    if (v24)
    {
      WebCore::reportException(*(JSC::JSGlobalObject **)(16 * (***(_DWORD ***)(*((_QWORD *)this + 3) + 16) & 0xFFFFFFFE) + 0x28), v24, 0, 0, 0);
      *a2 = 1;
      a2[2] = 1;
      goto LABEL_19;
    }
    v14 = (JSC::JSGlobalObject *)v12;
  }
  else
  {
    v14 = 0;
  }
  WebCore::Converter<WebCore::IDLPromise<WebCore::IDLUndefined>>::convert<WebCore::DefaultExceptionThrower>(v7, v14, (JSValue)&v31, (uint64_t)&v22);
  v15 = v23;
  if (!v23)
  {
    v16 = (uint64_t)v22;
    v22 = 0;
    *(_QWORD *)a2 = v16;
    a2[2] = 0;
LABEL_18:
    ((void (*)(char *, uint64_t **))off_1E32BEB50[v15])(&v31, &v22);
    goto LABEL_19;
  }
  *a2 = 1;
  a2[2] = 1;
  if ((_DWORD)v15 != -1)
    goto LABEL_18;
LABEL_19:
  v17 = *(uint64_t **)&v28[0];
  if (*(_QWORD *)&v28[0])
  {
    v22 = &v26;
    v21 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v28[0], (uint64_t *)&v22);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v17, v21);
  }
  if (v27 != (WTF *)((char *)v28 + 8) && v27)
    WTF::fastFree(v27, v13);
  result = MEMORY[0x19AEA32A0](v30);
  do
  {
    v19 = __ldaxr(v4);
    v20 = v19 - 1;
  }
  while (__stlxr(v20, v4));
  if (!v20)
  {
    atomic_store(1u, (unsigned int *)this + 4);
    return (*(uint64_t (**)(WebCore::JSNavigationInterceptHandler *))(*(_QWORD *)this + 16))(this);
  }
  return result;
}

uint64_t WebCore::convertEnumerationToJS<WebCore::NavigationNavigationType>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)(a1 + 41968);
  if ((_MergedGlobals_1139[0] & 1) == 0)
  {
    _MergedGlobals_21 += 2;
    dword_1ECE79030 += 2;
    qword_1EE336318 = (uint64_t)&_MergedGlobals_21;
    unk_1EE336320 = &dword_1ECE79030;
    dword_1ECE79050 += 2;
    dword_1ECE79070 += 2;
    qword_1EE336328 = (uint64_t)&dword_1ECE79050;
    unk_1EE336330 = &dword_1ECE79070;
    _MergedGlobals_1139[0] = 1;
  }
  v3 = *(_QWORD *)&_MergedGlobals_1139[8 * a2 + 480];
  if (!v3)
    return *v2;
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  *(_DWORD *)v3 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_6:
      v6 = *(_QWORD *)(a1 + 64760);
      if (!v6 || v3 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v3 - 2;
      }
      goto LABEL_9;
    }
    v8 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_6;
      v9 = v10;
    }
    v6 = *(_QWORD *)(a1 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *v2;
  }
LABEL_9:
  if (v4)
    *(_DWORD *)v3 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v3, a2);
  return v6;
}

uint64_t WebCore::parseEnumeration<WebCore::NavigationNavigationType>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  int v5;
  const char *v6;
  int v7;
  int v9;
  int v10;
  char **v13;
  int v14;
  int v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v23;
  unint64_t v24;

  v3 = a1;
  v24 = this;
  if ((this & 0xFFFE000000000002) == 0 && *(_BYTE *)(this + 5) == 2)
  {
    v4 = *(_QWORD *)(this + 8);
    if ((v4 & 1) != 0)
    {
      v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
      if (!v4)
      {
LABEL_6:
        if (v4)
          goto LABEL_7;
LABEL_34:
        v10 = 0;
        v9 = 0;
        return v10 | (v9 << 8);
      }
    }
    else if (!v4)
    {
      goto LABEL_6;
    }
    *(_DWORD *)v4 += 2;
    goto LABEL_6;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v24, a1);
  v4 = v23;
  if (!v23)
    goto LABEL_34;
LABEL_7:
  v5 = *(_DWORD *)(v4 + 16);
  v6 = *(const char **)(v4 + 8);
  v7 = *(_DWORD *)(v4 + 4);
  if (v6 != "push" && v7 == 4)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 112 || *(_WORD *)(v6 + 1) != 29557 || *((_WORD *)v6 + 1) != 26739)
        goto LABEL_16;
    }
    else
    {
      if (*(_WORD *)v6 != 112)
        goto LABEL_16;
      v14 = *(_DWORD *)(v6 + 2);
      v15 = *((_DWORD *)v6 + 1);
      if (v14 != 7536757 || v15 != 6815859)
        goto LABEL_16;
    }
    goto LABEL_41;
  }
  if (v6 == "push" && v7 == 4)
  {
LABEL_41:
    v13 = &WebCore::parseEnumerationFromString<WebCore::NavigationNavigationType>(WTF::String const&)::mappings;
    goto LABEL_42;
  }
  if (v6 != "reload" && v7 == 6)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 114 || *(_DWORD *)(v6 + 1) != 1634692197 || *(_DWORD *)(v6 + 2) != 1684107116)
        goto LABEL_16;
    }
    else
    {
      if (*(_WORD *)v6 != 114)
        goto LABEL_16;
      v18 = *(_QWORD *)(v6 + 2);
      v19 = *(_QWORD *)(v6 + 4);
      if (v18 != 0x61006F006C0065 || v19 != 0x640061006F006CLL)
        goto LABEL_16;
    }
    goto LABEL_30;
  }
  if (v6 == "reload" && v7 == 6)
  {
LABEL_30:
    v13 = &off_1E32BACC0;
LABEL_42:
    v10 = *((unsigned __int8 *)v13 + 16);
    v9 = 1;
    goto LABEL_43;
  }
  if (v6 == "replace" || v7 != 7)
  {
    if (v6 == "replace" && v7 == 7)
      goto LABEL_62;
    if (v6 == "traverse" || v7 != 8)
    {
      if (v7 != 8 || v6 != "traverse")
        goto LABEL_16;
    }
    else if ((v5 & 4) != 0)
    {
      if (*v6 != 116 || *(_DWORD *)(v6 + 1) != 1702257010 || *((_DWORD *)v6 + 1) != 1702064741)
        goto LABEL_16;
    }
    else
    {
      if (*(_WORD *)v6 != 116)
        goto LABEL_16;
      if (*((_QWORD *)v6 + 1) != 0x65007300720065 || *(_QWORD *)(v6 + 2) != 0x65007600610072)
        goto LABEL_16;
    }
    v13 = &off_1E32BACF0;
    goto LABEL_42;
  }
  if ((v5 & 4) != 0)
  {
    if (*v6 == 114 && *(_DWORD *)(v6 + 1) == 1634496613 && *(_DWORD *)(v6 + 3) == 1701011820)
      goto LABEL_62;
LABEL_16:
    v9 = 0;
    v10 = 0;
    goto LABEL_43;
  }
  if (*(_WORD *)v6 != 114)
    goto LABEL_16;
  v9 = 0;
  if (*(_QWORD *)(v6 + 2) == 0x61006C00700065)
  {
    v10 = 0;
    if (*(_QWORD *)(v6 + 6) == 0x6500630061006CLL)
    {
LABEL_62:
      v13 = &off_1E32BACD8;
      goto LABEL_42;
    }
  }
  else
  {
    v10 = 0;
  }
LABEL_43:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v10 | (v9 << 8);
}

_QWORD *WebCore::JSNavigationPreloadManager::destroy(_QWORD *this, JSC::JSCell *a2)
{
  uint64_t v2;
  int v3;
  bmalloc::api *v4;
  void *v5;

  v2 = this[3];
  this[3] = 0;
  if (v2)
  {
    this = *(_QWORD **)v2;
    v3 = *(_DWORD *)(*(_QWORD *)v2 + 24) - 1;
    if (v3)
    {
      *((_DWORD *)this + 6) = v3;
    }
    else
    {
      WebCore::ServiceWorkerRegistration::~ServiceWorkerRegistration((WebCore::ServiceWorkerRegistration *)this);
      return (_QWORD *)bmalloc::api::isoDeallocate(v4, v5);
    }
  }
  return this;
}

uint64_t WebCore::JSNavigationPreloadManager::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSNavigationPreloadManagerPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSNavigationPreloadManagerPrototype::create(WebCore::JSNavigationPreloadManagerPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSNavigationPreloadManager::s_info, &WebCore::JSNavigationPreloadManagerPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigationPreloadManager>,(WebCore::DOMConstructorID)902>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 7216);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigationPreloadManager>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSNavigationPreloadManager::s_info
         + ~((_QWORD)&WebCore::JSNavigationPreloadManager::s_info << 32)) ^ (((unint64_t)&WebCore::JSNavigationPreloadManager::s_info
                                                                            + ~((_QWORD)&WebCore::JSNavigationPreloadManager::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSNavigationPreloadManager::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSNavigationPreloadManager::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSNavigationPreloadManagerPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSNavigationPreloadManagerPrototype::create((WebCore::JSNavigationPreloadManagerPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSNavigationPreloadManager::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSNavigationPreloadManager::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 7216) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsNavigationPreloadManagerConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSNavigationPreloadManagerPrototype::s_info != (char **)(16
                                                                        * *(unsigned int *)(16
                                                                                          * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                          + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigationPreloadManager>,(WebCore::DOMConstructorID)902>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSNavigationPreloadManagerOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

WebCore::ServiceWorkerRegistration *WebCore::JSNavigationPreloadManagerOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  WebCore::ServiceWorkerRegistration **v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WebCore::ServiceWorkerRegistration **v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  WebCore::ServiceWorkerRegistration *result;
  bmalloc::api *v25;
  void *v26;

  v3 = *(WebCore::ServiceWorkerRegistration ***)(*(_QWORD *)a2 + 24);
  ++*((_DWORD *)*v3 + 6);
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(WebCore::ServiceWorkerRegistration ***)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(WebCore::ServiceWorkerRegistration ***)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  result = *v3;
  if (*((_DWORD *)*v3 + 6) == 1)
  {
    WebCore::ServiceWorkerRegistration::~ServiceWorkerRegistration(result);
    return (WebCore::ServiceWorkerRegistration *)bmalloc::api::isoDeallocate(v25, v26);
  }
  else
  {
    *((_DWORD *)result + 6) = *((_DWORD *)*v3 + 6) - 1;
  }
  return result;
}

unint64_t WebCore::wrap<WebCore::NavigationPreloadManager>(uint64_t a1, uint64_t a2, WTF *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF *v11;
  int v12;
  uint64_t v13;
  unint64_t SlowCase;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  uint64_t *v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  WTF *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  WTF *v44;
  void *v45;
  int v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *Allocator;
  unint64_t v52;
  _QWORD *v53;
  WTF *v54;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          SlowCase = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return SlowCase;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*(_DWORD *)(*(_QWORD *)a3 + 24);
  v15 = *(_QWORD *)(a2 + 3296);
  if (v15)
  {
    v16 = *(_DWORD *)(v15 - 8);
    v17 = ((unint64_t)&WebCore::JSNavigationPreloadManager::s_info
         + ~((_QWORD)&WebCore::JSNavigationPreloadManager::s_info << 32)) ^ (((unint64_t)&WebCore::JSNavigationPreloadManager::s_info
                                                                            + ~((_QWORD)&WebCore::JSNavigationPreloadManager::s_info << 32)) >> 22);
    v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
    v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
    v20 = v16 & ((v19 >> 31) ^ v19);
    v21 = *(char ***)(v15 + 16 * v20);
    if (v21 == &WebCore::JSNavigationPreloadManager::s_info)
    {
LABEL_14:
      v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
      if (v23)
        goto LABEL_16;
    }
    else
    {
      v22 = 1;
      while (v21)
      {
        v20 = ((_DWORD)v20 + v22) & v16;
        v21 = *(char ***)(v15 + 16 * v20);
        ++v22;
        if (v21 == &WebCore::JSNavigationPreloadManager::s_info)
          goto LABEL_14;
      }
    }
  }
  v24 = *(uint64_t **)(a2 + 56);
  Structure = WebCore::JSNavigationPreloadManagerPrototype::createStructure(v24, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSNavigationPreloadManagerPrototype::create((WebCore::JSNavigationPreloadManagerPrototype *)v24, Structure, v26, v27);
  v29 = WebCore::JSNavigationPreloadManager::createStructure(v24, a2, v28);
  v23 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSNavigationPreloadManager::s_info);
LABEL_16:
  v30 = *(_QWORD *)(a2 + 56);
  v31 = *(_QWORD *)(v30 + 41456);
  v32 = *(_QWORD *)(v31 + 23536);
  v33 = *(_QWORD **)(v32 + 7296);
  if (v33)
    goto LABEL_36;
  v34 = *(_QWORD *)(v31 + 22648);
  if (__ldaxr((unsigned __int8 *)v34))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v34))
  {
    goto LABEL_21;
  }
  MEMORY[0x19AEA534C](v34);
LABEL_21:
  v36 = *(_QWORD *)(v34 + 2824);
  if (!*(_QWORD *)(v36 + 7296))
  {
    v37 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v54, "IsoSpace T");
    v53 = 0;
    MEMORY[0x19AEA3204](v37, &v54, v30 + 192, v30 + 1872, 32, 8, &v53);
    v39 = (uint64_t)v53;
    v53 = 0;
    if (v39)
      (*(void (**)(uint64_t))(*(_QWORD *)v39 + 8))(v39);
    v40 = v54;
    v54 = 0;
    if (v40)
    {
      if (*(_DWORD *)v40 == 1)
        WTF::fastFree(v40, v38);
      else
        --*(_DWORD *)v40;
    }
    v41 = *(_QWORD *)(v36 + 7296);
    *(_QWORD *)(v36 + 7296) = v37;
    if (v41)
      (*(void (**)(uint64_t))(*(_QWORD *)v41 + 8))(v41);
  }
  v33 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v43 = *(_QWORD *)(v32 + 7296);
  *(_QWORD *)(v32 + 7296) = v33;
  if (v43)
  {
    v44 = (WTF *)MEMORY[0x19AEA3528](v43, v42);
    WTF::fastFree(v44, v45);
  }
  v46 = __ldxr((unsigned __int8 *)v34);
  if (v46 != 1)
  {
    __clrex();
    goto LABEL_35;
  }
  if (__stlxr(0, (unsigned __int8 *)v34))
LABEL_35:
    WTF::Lock::unlockSlow((WTF::Lock *)v34);
LABEL_36:
  SlowCase = v33[3];
  if (SlowCase >= v33[4])
  {
    SlowCase = v33[5];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_38;
    }
    v52 = *(_QWORD *)(SlowCase + 8) ^ v33[6];
    v33[4] = SlowCase + HIDWORD(v52);
    v33[5] = SlowCase + (int)v52;
  }
  v33[3] = SlowCase + 32;
LABEL_38:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v23);
  *(_QWORD *)(SlowCase + 24) = a3;
  if (*(_BYTE *)(v30 + 755))
    __dmb(0xAu);
  v47 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE3361D8 & 1) == 0)
  {
    qword_1EE3361D0 = (uint64_t)&off_1E32BE6B8;
    byte_1EE3361D8 = 1;
  }
  v54 = a3;
  if ((SlowCase & 8) != 0)
    v48 = (SlowCase - 112) | 1;
  else
    v48 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v48 & 1) != 0)
    v49 = v48 + 47;
  else
    v49 = *(_QWORD *)v48 + 32;
  Allocator = *(_QWORD **)(v49 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v49 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE3361D0;
  Allocator[2] = v47;
  v53 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v47 + 32), (uint64_t *)&v54, (uint64_t *)&v53);
  if (v53)
    v53[1] = 3;
  return SlowCase;
}

bmalloc::api *WebCore::JSNavigationTransition::destroy(WebCore::JSNavigationTransition *this, JSC::JSCell *a2)
{
  bmalloc::api *result;

  result = (bmalloc::api *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
    return WTF::RefCounted<WebCore::NavigationTransition>::deref(result, a2);
  return result;
}

uint64_t WebCore::JSNavigationTransition::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSNavigationTransitionPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSNavigationTransitionPrototype::create(WebCore::JSNavigationTransitionPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSNavigationTransition::s_info, &WebCore::JSNavigationTransitionPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigationTransition>,(WebCore::DOMConstructorID)725>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5800);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigationTransition>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSNavigationTransition::s_info
         + ~((_QWORD)&WebCore::JSNavigationTransition::s_info << 32)) ^ (((unint64_t)&WebCore::JSNavigationTransition::s_info
                                                                        + ~((_QWORD)&WebCore::JSNavigationTransition::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSNavigationTransition::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSNavigationTransition::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSNavigationTransitionPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSNavigationTransitionPrototype::create((WebCore::JSNavigationTransitionPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSNavigationTransition::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSNavigationTransition::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5800) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsNavigationTransitionConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSNavigationTransitionPrototype::s_info != (char **)(16
                                                                    * *(unsigned int *)(16
                                                                                      * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                      + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigationTransition>,(WebCore::DOMConstructorID)725>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsNavigationTransition_navigationType(uint64_t a1, uint64_t a2)
{
  return WebCore::convertEnumerationToJS<WebCore::NavigationNavigationType>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned __int8 *)(*(_QWORD *)(a2 + 24) + 16));
}

unint64_t WebCore::jsNavigationTransition_from(int a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::NavigationHistoryEntry>(a1, *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 24));
}

uint64_t WebCore::jsNavigationTransition_finished(JSC::JSGlobalObject *a1, uint64_t a2, WTF::StringImpl *a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((a2 & 0xFFFE000000000002) != 0)
    return WebCore::rejectPromiseWithGetterTypeError(a1, (JSC **)&WebCore::JSNavigationTransition::s_info, a3);
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSNavigationTransition::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSNavigationTransition::s_info && v5 != 0);
  }
  if (!v4)
    return WebCore::rejectPromiseWithGetterTypeError(a1, (JSC **)&WebCore::JSNavigationTransition::s_info, a3);
  v8 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 32);
  if (v8)
    ++*(_DWORD *)(v8 + 16);
  v9 = **(_QWORD **)(v8 + 24);
  if ((v9 & 0xFFFE000000000002) != 0)
  {
    v10 = 0;
  }
  else if (*(_BYTE *)(v9 + 5) == 68)
  {
    v10 = **(_QWORD **)(v8 + 24);
  }
  else
  {
    v10 = 0;
  }
  if (*(_DWORD *)(v8 + 16) == 1)
    (*(void (**)(uint64_t))(*(_QWORD *)v8 + 16))(v8);
  else
    --*(_DWORD *)(v8 + 16);
  return v10;
}

uint64_t WebCore::JSNavigationTransitionOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

bmalloc::api *WebCore::JSNavigationTransitionOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  bmalloc::api *v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  bmalloc::api *v14;
  int v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  bmalloc::api *v26;

  v3 = *(bmalloc::api **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  if (*(_DWORD *)(a3 + 48))
  {
    v8 = *(_QWORD *)(a3 + 32);
    v6 = (uint64_t *)(a3 + 32);
    v7 = v8;
    if (v8)
    {
      v9 = *(_DWORD *)(v7 - 8);
      v10 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
      v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
      v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
      v13 = v9 & ((v12 >> 31) ^ v12);
      v14 = *(bmalloc::api **)(v7 + 16 * v13);
      if (v14 != v3)
      {
        v15 = 1;
        while (v14)
        {
          v13 = ((_DWORD)v13 + v15) & v9;
          v14 = *(bmalloc::api **)(v7 + 16 * v13);
          ++v15;
          if (v14 == v3)
            goto LABEL_10;
        }
        v13 = *(unsigned int *)(v7 - 4);
      }
LABEL_10:
      if (v13 != *(_DWORD *)(v7 - 4))
      {
        v16 = (_QWORD *)(v7 + 16 * v13);
        *v16 = -1;
        v19 = v16[1];
        v18 = v16 + 1;
        v17 = v19;
        if (v19)
        {
          *(_QWORD *)(v17 + 8) = 3;
          *v18 = 0;
        }
        ++*(_DWORD *)(*v6 - 16);
        v20 = *v6;
        if (*v6)
          v21 = *(_DWORD *)(v20 - 12) - 1;
        else
          v21 = -1;
        *(_DWORD *)(v20 - 12) = v21;
        v22 = *v6;
        if (*v6)
        {
          v23 = 6 * *(_DWORD *)(v22 - 12);
          v24 = *(_DWORD *)(v22 - 4);
          if (v23 < v24 && v24 >= 9)
          {
            v26 = v3;
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v6, v24 >> 1, 0);
            v3 = v26;
          }
        }
      }
    }
  }
  else
  {
    v4 = *((_QWORD *)v3 + 1);
    if (v4)
    {
      *(_QWORD *)(v4 + 8) = 3;
      *((_QWORD *)v3 + 1) = 0;
    }
  }
  return WTF::RefCounted<WebCore::NavigationTransition>::deref(v3, a2);
}

uint64_t WebCore::JSNavigator::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 88);
  if (!v2 || !*(_BYTE *)(v2 + 24))
    return WebCore::JSNavigator::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
  result = 75;
  __break(0xC471u);
  return result;
}

_DWORD *WebCore::JSNavigator::destroy(WebCore::JSNavigator *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

uint64_t WebCore::JSNavigator::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSNavigator::visitChildren(WebCore::JSNavigator *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    JSC::JSObject::visitChildren();
    result = WebCore::JSNavigator::visitAdditionalChildren<JSC::AbstractSlotVisitor>((uint64_t)this, (uint64_t)a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigator>,(WebCore::DOMConstructorID)726>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5808);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigator>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSNavigator::s_info + ~((_QWORD)&WebCore::JSNavigator::s_info << 32)) ^ (((unint64_t)&WebCore::JSNavigator::s_info + ~((_QWORD)&WebCore::JSNavigator::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSNavigator::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSNavigator::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSNavigatorPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSNavigatorPrototype::create((WebCore::JSNavigatorPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSNavigator::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSNavigator::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5808) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsNavigatorConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSNavigatorPrototype::s_info != (char **)(16
                                                         * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigator>,(WebCore::DOMConstructorID)726>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsNavigator_hardwareConcurrency(WebCore::NavigatorBase *a1)
{
  int v1;

  v1 = WebCore::NavigatorBase::hardwareConcurrency(a1);
  if (v1 >= 0)
    return v1 | 0xFFFE000000000000;
  else
    return COERCE__INT64((double)(unint64_t)v1) + 0x2000000000000;
}

unint64_t WebCore::jsNavigator_gpu(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF *v4;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = (WTF *)WebCore::Navigator::gpu(*(WebCore::Navigator **)(a2 + 24));
  if (v4)
    return WebCore::wrap<WebCore::GPU>(a1, v3, v4);
  else
    return 2;
}

uint64_t WebCore::jsNavigator_audioSession(int a1, uint64_t a2)
{
  JSC::VM *v3;
  uint64_t v4;
  WebCore::AudioSession *v5;
  WebCore::AudioSession *v6;
  WebCore::AudioSessionIOS *v8;
  void *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int v13;
  void *v14;
  bmalloc::api *v15;
  void *v16;
  uint64_t v17;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::NavigatorAudioSession::audioSession(*(WebCore::NavigatorAudioSession **)(a2 + 24), &v17);
  v4 = v17;
  if (!v17)
    return 2;
  v5 = (WebCore::AudioSession *)WebCore::wrap<WebCore::DOMAudioSession>(a1, v3, v17);
  v6 = v5;
  v17 = 0;
  if (*(_DWORD *)(v4 + 24) == 1)
  {
    v8 = WebCore::AudioSession::sharedSession(v5);
    (*(void (**)(WebCore::AudioSessionIOS *, uint64_t))(*(_QWORD *)v8 + 216))(v8, v4 + 56);
    v10 = *(_QWORD *)(v4 + 64);
    if (v10)
    {
      *(_QWORD *)(v10 + 8) = 0;
      v11 = *(unsigned int **)(v4 + 64);
      *(_QWORD *)(v4 + 64) = 0;
      if (v11)
      {
        do
        {
          v12 = __ldaxr(v11);
          v13 = v12 - 1;
        }
        while (__stlxr(v13, v11));
        if (!v13)
        {
          atomic_store(1u, v11);
          WTF::fastFree((WTF *)v11, v9);
        }
      }
    }
    else
    {
      *(_QWORD *)(v4 + 64) = 0;
    }
    WebCore::EventTarget::~EventTarget((WebCore::EventTarget *)(v4 + 32), v9);
    WebCore::ActiveDOMObject::~ActiveDOMObject((WebCore::ActiveDOMObject *)v4, v14);
    bmalloc::api::isoDeallocate(v15, v16);
  }
  else
  {
    --*(_DWORD *)(v4 + 24);
  }
  return (uint64_t)v6;
}

uint64_t WebCore::jsNavigator_contacts(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const char **v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned __int8 *v8;
  void *v9;
  unint64_t v10;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int v18;
  unsigned __int8 *v19[2];

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v19[0] = "NavigatorContacts";
  v19[1] = (unsigned __int8 *)18;
  v5 = WTF::HashTable<WTF::ASCIILiteral,WTF::KeyValuePair<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashMap<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashTraits<WTF::ASCIILiteral>,WTF::HashTraits<std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::ASCIILiteral>>::lookup<WTF::HashMapTranslatorAdapter<WTF::HashMap<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashTraits<WTF::ASCIILiteral>,WTF::HashTraits<std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::IdentityHashTranslator<WTF::HashMap<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashTraits<WTF::ASCIILiteral>,WTF::HashTraits<std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::DefaultHash<WTF::ASCIILiteral>>>,WTF::ASCIILiteral>((uint64_t *)(v3 + 72), v19);
  if (!v5 || (v6 = (uint64_t)v5[2]) == 0)
  {
    v6 = WTF::fastMalloc((WTF *)0x18);
    *(_QWORD *)v6 = off_1E33534F0;
    *(_QWORD *)(v6 + 8) = 0;
    *(_QWORD *)(v6 + 16) = v3;
    v19[0] = (unsigned __int8 *)v6;
    WebCore::Supplement<WebCore::Navigator>::provideTo((uint64_t *)(v3 + 72), "NavigatorContacts", (unsigned __int8 *)0x12, (const char **)v19);
    v7 = v19[0];
    v19[0] = 0;
    if (v7)
      (*(void (**)(unsigned __int8 *))(*(_QWORD *)v7 + 8))(v7);
  }
  WebCore::NavigatorContacts::contacts((_QWORD *)v6, (uint64_t *)v19);
  v8 = v19[0];
  if (!v19[0])
    return 2;
  v10 = WebCore::wrap<WebCore::ContactsManager>(a1, v4, (WTF *)v19[0]);
  v19[0] = 0;
  if (*(_DWORD *)v8 == 1)
  {
    v12 = (unsigned int *)*((_QWORD *)v8 + 2);
    *((_QWORD *)v8 + 2) = 0;
    if (v12)
    {
      do
      {
        v13 = __ldaxr(v12);
        v14 = v13 - 1;
      }
      while (__stlxr(v14, v12));
      if (!v14)
      {
        atomic_store(1u, v12);
        WTF::fastFree((WTF *)v12, v9);
      }
    }
    v15 = *((_QWORD *)v8 + 1);
    if (v15)
    {
      *(_QWORD *)(v15 + 8) = 0;
      v16 = (unsigned int *)*((_QWORD *)v8 + 1);
      *((_QWORD *)v8 + 1) = 0;
      if (v16)
      {
        do
        {
          v17 = __ldaxr(v16);
          v18 = v17 - 1;
        }
        while (__stlxr(v18, v16));
        if (!v18)
        {
          atomic_store(1u, v16);
          WTF::fastFree((WTF *)v16, v9);
        }
      }
    }
    else
    {
      *((_QWORD *)v8 + 1) = 0;
    }
    bmalloc::api::isoDeallocate((bmalloc::api *)v8, v9);
  }
  else
  {
    --*(_DWORD *)v8;
  }
  return v10;
}

unint64_t WebCore::jsNavigator_credentials(uint64_t a1, WebCore::NavigatorCredentials **a2)
{
  uint64_t v3;
  WTF *v4;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = (WTF *)WebCore::NavigatorCredentials::credentials(a2[3], (WebCore::Navigator *)a2);
  if (v4)
    return WebCore::wrap<WebCore::CredentialsContainer>(a1, v3, v4);
  else
    return 2;
}

unint64_t WebCore::jsNavigator_identity(uint64_t a1, WebCore::NavigatorIdentity **a2)
{
  uint64_t v3;
  WTF *v4;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = (WTF *)WebCore::NavigatorIdentity::identity(a2[3], (WebCore::Navigator *)a2);
  if (v4)
    return WebCore::wrap<WebCore::CredentialsContainer>(a1, v3, v4);
  else
    return 2;
}

unint64_t WebCore::jsNavigator_mediaCapabilities(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  const char **v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 *v10[2];

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = (uint64_t *)(*(_QWORD *)(a2 + 24) + 72);
  v10[0] = "NavigatorMediaCapabilities";
  v10[1] = (unsigned __int8 *)27;
  v5 = WTF::HashTable<WTF::ASCIILiteral,WTF::KeyValuePair<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashMap<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashTraits<WTF::ASCIILiteral>,WTF::HashTraits<std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::ASCIILiteral>>::lookup<WTF::HashMapTranslatorAdapter<WTF::HashMap<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashTraits<WTF::ASCIILiteral>,WTF::HashTraits<std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::IdentityHashTranslator<WTF::HashMap<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashTraits<WTF::ASCIILiteral>,WTF::HashTraits<std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::DefaultHash<WTF::ASCIILiteral>>>,WTF::ASCIILiteral>(v4, v10);
  if (!v5 || (v6 = (uint64_t)v5[2]) == 0)
  {
    v6 = WTF::fastMalloc((WTF *)0x10);
    *(_QWORD *)v6 = off_1E335B788;
    v7 = WTF::fastMalloc((WTF *)0x28);
    *(_DWORD *)v7 = 1;
    *(_OWORD *)(v7 + 8) = 0u;
    *(_OWORD *)(v7 + 24) = 0u;
    *(_QWORD *)(v6 + 8) = v7;
    v10[0] = (unsigned __int8 *)v6;
    WebCore::Supplement<WebCore::Navigator>::provideTo(v4, "NavigatorMediaCapabilities", (unsigned __int8 *)0x1B, (const char **)v10);
    v8 = v10[0];
    v10[0] = 0;
    if (v8)
      (*(void (**)(unsigned __int8 *))(*(_QWORD *)v8 + 8))(v8);
  }
  return WebCore::wrap<WebCore::MediaCapabilities>(a1, v3, *(WTF **)(v6 + 8));
}

unint64_t WebCore::jsNavigator_mediaSession(uint64_t a1, WebCore::NavigatorMediaSession **a2)
{
  uint64_t v3;
  WebCore::MediaSession *v4;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = WebCore::NavigatorMediaSession::mediaSession(a2[3], (WebCore::Navigator *)a2);
  return WebCore::wrap<WebCore::MediaSession>(a1, v3, (uint64_t)v4);
}

unint64_t WebCore::jsNavigator_mediaDevices(int a1, WebCore::NavigatorMediaDevices **a2)
{
  JSC::VM *v3;
  WebCore::NavigatorMediaDevices *v4;
  uint64_t v5;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = (WebCore::NavigatorMediaDevices *)WebCore::NavigatorMediaDevices::from(a2[3], (WebCore::Navigator *)a2);
  v5 = WebCore::NavigatorMediaDevices::mediaDevices(v4);
  if (v5)
    return WebCore::wrap<WebCore::MediaDevices>(a1, v3, v5);
  else
    return 2;
}

unint64_t WebCore::jsNavigator_permissions(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const char **v5;
  uint64_t v6;
  unsigned __int8 *v7;
  WTF *v8;
  unsigned __int8 *v10[2];

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v10[0] = "NavigatorPermissions";
  v10[1] = (unsigned __int8 *)21;
  v5 = WTF::HashTable<WTF::ASCIILiteral,WTF::KeyValuePair<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashMap<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashTraits<WTF::ASCIILiteral>,WTF::HashTraits<std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::ASCIILiteral>>::lookup<WTF::HashMapTranslatorAdapter<WTF::HashMap<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashTraits<WTF::ASCIILiteral>,WTF::HashTraits<std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::IdentityHashTranslator<WTF::HashMap<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashTraits<WTF::ASCIILiteral>,WTF::HashTraits<std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::DefaultHash<WTF::ASCIILiteral>>>,WTF::ASCIILiteral>((uint64_t *)(v3 + 72), v10);
  if (!v5 || (v6 = (uint64_t)v5[2]) == 0)
  {
    v6 = WTF::fastMalloc((WTF *)0x18);
    *(_QWORD *)v6 = off_1E3365048;
    *(_QWORD *)(v6 + 8) = 0;
    *(_QWORD *)(v6 + 16) = v3;
    v10[0] = (unsigned __int8 *)v6;
    WebCore::Supplement<WebCore::Navigator>::provideTo((uint64_t *)(v3 + 72), "NavigatorPermissions", (unsigned __int8 *)0x15, (const char **)v10);
    v7 = v10[0];
    v10[0] = 0;
    if (v7)
      (*(void (**)(unsigned __int8 *))(*(_QWORD *)v7 + 8))(v7);
  }
  v8 = (WTF *)WebCore::NavigatorPermissions::permissions((WebCore::NavigatorPermissions *)v6);
  return WebCore::wrap<WebCore::Permissions>(a1, v4, v8);
}

unint64_t WebCore::jsNavigator_pushManager(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::PushManager>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), (WTF *)(*(_QWORD *)(a2 + 24) + 144));
}

unint64_t WebCore::jsNavigator_wakeLock(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  const char **v5;
  uint64_t v6;
  unsigned __int8 *v7;
  WTF *v8;
  unsigned __int8 *v10[2];

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v10[0] = "NavigatorScreenWakeLock";
  v10[1] = (unsigned __int8 *)24;
  v5 = WTF::HashTable<WTF::ASCIILiteral,WTF::KeyValuePair<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashMap<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashTraits<WTF::ASCIILiteral>,WTF::HashTraits<std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::ASCIILiteral>>::lookup<WTF::HashMapTranslatorAdapter<WTF::HashMap<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashTraits<WTF::ASCIILiteral>,WTF::HashTraits<std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::IdentityHashTranslator<WTF::HashMap<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashTraits<WTF::ASCIILiteral>,WTF::HashTraits<std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::DefaultHash<WTF::ASCIILiteral>>>,WTF::ASCIILiteral>((uint64_t *)(v3 + 72), v10);
  if (!v5 || (v6 = (uint64_t)v5[2]) == 0)
  {
    v6 = WTF::fastMalloc((WTF *)0x18);
    *(_QWORD *)v6 = off_1E3366580;
    *(_QWORD *)(v6 + 8) = 0;
    *(_QWORD *)(v6 + 16) = v3;
    v10[0] = (unsigned __int8 *)v6;
    WebCore::Supplement<WebCore::Navigator>::provideTo((uint64_t *)(v3 + 72), "NavigatorScreenWakeLock", (unsigned __int8 *)0x18, (const char **)v10);
    v7 = v10[0];
    v10[0] = 0;
    if (v7)
      (*(void (**)(unsigned __int8 *))(*(_QWORD *)v7 + 8))(v7);
  }
  v8 = (WTF *)WebCore::NavigatorScreenWakeLock::wakeLock((WebCore::NavigatorScreenWakeLock *)v6);
  return WebCore::wrap<WebCore::WakeLock>(a1, v4, v8);
}

unint64_t WebCore::jsNavigator_locks(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  WTF *v5;
  _DWORD *v6;
  WTF *v8;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v5 = *(WTF **)(v3 + 40);
  if (!v5)
  {
    WebCore::WebLockManager::create(*(WebCore::WebLockManager **)(a2 + 24), &v8);
    v5 = v8;
    v6 = *(_DWORD **)(v3 + 40);
    *(_QWORD *)(v3 + 40) = v8;
    if (v6)
    {
      if (v6[6] == 1)
      {
        (*(void (**)(_DWORD *))(*(_QWORD *)v6 + 16))(v6);
        v5 = *(WTF **)(v3 + 40);
      }
      else
      {
        --v6[6];
      }
    }
  }
  return WebCore::wrap<WebCore::WebLockManager>(a1, v4, v5);
}

uint64_t WebCore::jsNavigator_webdriver(uint64_t a1, WebCore::NavigatorWebDriver **a2)
{
  if (WebCore::NavigatorWebDriver::webdriver(a2[3], (const WebCore::Navigator *)a2))
    return 7;
  else
    return 6;
}

unint64_t WebCore::jsNavigator_maxTouchPoints()
{
  return 0xFFFE000000000005;
}

unint64_t WebCore::jsNavigator_userActivation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF *v4;
  void *v5;
  unint64_t v6;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;
  WTF *v11;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::NavigatorUserActivation::userActivation(*(WebCore::NavigatorUserActivation **)(a2 + 24), &v11);
  v4 = v11;
  v6 = WebCore::wrap<WebCore::UserActivation>(a1, v3, v11);
  v11 = 0;
  if (*(_DWORD *)v4 == 1)
  {
    v8 = (unsigned int *)*((_QWORD *)v4 + 1);
    *((_QWORD *)v4 + 1) = 0;
    if (v8)
    {
      do
      {
        v9 = __ldaxr(v8);
        v10 = v9 - 1;
      }
      while (__stlxr(v10, v8));
      if (!v10)
      {
        atomic_store(1u, v8);
        WTF::fastFree((WTF *)v8, v5);
      }
    }
    bmalloc::api::isoDeallocate(v4, v5);
  }
  else
  {
    --*(_DWORD *)v4;
  }
  return v6;
}

uint64_t WebCore::jsNavigator_cookieEnabled(uint64_t a1, uint64_t a2)
{
  if (WebCore::Navigator::cookieEnabled(*(WebCore::Navigator **)(a2 + 24)))
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsNavigator_appCodeName(uint64_t a1)
{
  uint64_t v2;
  WTF::StringImpl *v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned int v7;
  unsigned int v8;
  WTF::StringImpl *v10;

  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v2 = *(_QWORD *)(a1 + 56);
  v3 = v10;
  if (!v10 || (v4 = *((_DWORD *)v10 + 1)) == 0)
  {
    v5 = *(_QWORD *)(v2 + 41968);
LABEL_7:
    if (!v3)
      return v5;
    goto LABEL_15;
  }
  if (v4 != 1)
    goto LABEL_4;
  v6 = (unsigned __int8 *)*((_QWORD *)v10 + 1);
  if ((*((_BYTE *)v10 + 16) & 4) != 0)
  {
    v7 = *v6;
LABEL_14:
    v5 = *(_QWORD *)(v2 + 8 * v7 + 42216);
    goto LABEL_15;
  }
  v8 = *(unsigned __int16 *)v6;
  if (v8 <= 0xFF)
  {
    v7 = v8;
    goto LABEL_14;
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v10 != *(WTF::StringImpl **)(v5 + 8))
  {
    v5 = JSC::jsStringWithCacheSlowCase();
    v3 = v10;
    goto LABEL_7;
  }
LABEL_15:
  if (*(_DWORD *)v3 == 2)
    WTF::StringImpl::destroy(v3, v3);
  else
    *(_DWORD *)v3 -= 2;
  return v5;
}

uint64_t WebCore::jsNavigator_appName(uint64_t a1)
{
  uint64_t v2;
  WTF::StringImpl *v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned int v7;
  unsigned int v8;
  WTF::StringImpl *v10;

  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v2 = *(_QWORD *)(a1 + 56);
  v3 = v10;
  if (!v10 || (v4 = *((_DWORD *)v10 + 1)) == 0)
  {
    v5 = *(_QWORD *)(v2 + 41968);
LABEL_7:
    if (!v3)
      return v5;
    goto LABEL_15;
  }
  if (v4 != 1)
    goto LABEL_4;
  v6 = (unsigned __int8 *)*((_QWORD *)v10 + 1);
  if ((*((_BYTE *)v10 + 16) & 4) != 0)
  {
    v7 = *v6;
LABEL_14:
    v5 = *(_QWORD *)(v2 + 8 * v7 + 42216);
    goto LABEL_15;
  }
  v8 = *(unsigned __int16 *)v6;
  if (v8 <= 0xFF)
  {
    v7 = v8;
    goto LABEL_14;
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v10 != *(WTF::StringImpl **)(v5 + 8))
  {
    v5 = JSC::jsStringWithCacheSlowCase();
    v3 = v10;
    goto LABEL_7;
  }
LABEL_15:
  if (*(_DWORD *)v3 == 2)
    WTF::StringImpl::destroy(v3, v3);
  else
    *(_DWORD *)v3 -= 2;
  return v5;
}

uint64_t WebCore::jsNavigator_appVersion(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::Navigator::appVersion(*(uint64_t **)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

uint64_t WebCore::jsNavigator_platform(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;
  WTF::StringImpl *v11;

  WebCore::Navigator::platform(*(_QWORD *)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_8;
  }
  if (v5 != 1)
    goto LABEL_4;
  v8 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v9 = *v8;
LABEL_15:
    v6 = *(_QWORD *)(v3 + 8 * v9 + 42216);
    goto LABEL_16;
  }
  v10 = *(unsigned __int16 *)v8;
  if (v10 <= 0xFF)
  {
    v9 = v10;
    goto LABEL_15;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_16:
  v11 = 0;
LABEL_8:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

uint64_t WebCore::jsNavigator_product(uint64_t a1)
{
  uint64_t v2;
  WTF::StringImpl *v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned int v7;
  unsigned int v8;
  WTF::StringImpl *v10;

  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v2 = *(_QWORD *)(a1 + 56);
  v3 = v10;
  if (!v10 || (v4 = *((_DWORD *)v10 + 1)) == 0)
  {
    v5 = *(_QWORD *)(v2 + 41968);
LABEL_7:
    if (!v3)
      return v5;
    goto LABEL_15;
  }
  if (v4 != 1)
    goto LABEL_4;
  v6 = (unsigned __int8 *)*((_QWORD *)v10 + 1);
  if ((*((_BYTE *)v10 + 16) & 4) != 0)
  {
    v7 = *v6;
LABEL_14:
    v5 = *(_QWORD *)(v2 + 8 * v7 + 42216);
    goto LABEL_15;
  }
  v8 = *(unsigned __int16 *)v6;
  if (v8 <= 0xFF)
  {
    v7 = v8;
    goto LABEL_14;
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v10 != *(WTF::StringImpl **)(v5 + 8))
  {
    v5 = JSC::jsStringWithCacheSlowCase();
    v3 = v10;
    goto LABEL_7;
  }
LABEL_15:
  if (*(_DWORD *)v3 == 2)
    WTF::StringImpl::destroy(v3, v3);
  else
    *(_DWORD *)v3 -= 2;
  return v5;
}

uint64_t WebCore::jsNavigator_productSub(uint64_t a1)
{
  uint64_t v2;
  WTF::StringImpl *v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned int v7;
  unsigned int v8;
  WTF::StringImpl *v10;

  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v2 = *(_QWORD *)(a1 + 56);
  v3 = v10;
  if (!v10 || (v4 = *((_DWORD *)v10 + 1)) == 0)
  {
    v5 = *(_QWORD *)(v2 + 41968);
LABEL_7:
    if (!v3)
      return v5;
    goto LABEL_15;
  }
  if (v4 != 1)
    goto LABEL_4;
  v6 = (unsigned __int8 *)*((_QWORD *)v10 + 1);
  if ((*((_BYTE *)v10 + 16) & 4) != 0)
  {
    v7 = *v6;
LABEL_14:
    v5 = *(_QWORD *)(v2 + 8 * v7 + 42216);
    goto LABEL_15;
  }
  v8 = *(unsigned __int16 *)v6;
  if (v8 <= 0xFF)
  {
    v7 = v8;
    goto LABEL_14;
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v10 != *(WTF::StringImpl **)(v5 + 8))
  {
    v5 = JSC::jsStringWithCacheSlowCase();
    v3 = v10;
    goto LABEL_7;
  }
LABEL_15:
  if (*(_DWORD *)v3 == 2)
    WTF::StringImpl::destroy(v3, v3);
  else
    *(_DWORD *)v3 -= 2;
  return v5;
}

uint64_t WebCore::jsNavigator_vendorSub(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = *MEMORY[0x1E0CBF738];
  if (!*MEMORY[0x1E0CBF738])
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v3 = *(_DWORD *)v2;
  v4 = *(_DWORD *)(v2 + 4);
  *(_DWORD *)v2 += 2;
  v5 = *(_QWORD *)(a1 + 56);
  if (v4)
  {
    if (v4 != 1)
    {
LABEL_4:
      v6 = *(_QWORD *)(v5 + 64760);
      if (!v6 || v2 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v3 = *(_DWORD *)v2 - 2;
      }
      goto LABEL_7;
    }
    v8 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v6 = *(_QWORD *)(v5 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *(_QWORD *)(v5 + 41968);
  }
LABEL_7:
  if (v3)
    *(_DWORD *)v2 = v3;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v2, a2);
  return v6;
}

uint64_t WebCore::jsNavigator_onLine()
{
  uint64_t v0;
  uint64_t v1;

  v0 = WebCore::s_platformStrategies;
  v1 = *(_QWORD *)(WebCore::s_platformStrategies + 8);
  if (!v1)
  {
    v1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)WebCore::s_platformStrategies + 16))(WebCore::s_platformStrategies);
    *(_QWORD *)(v0 + 8) = v1;
  }
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v1 + 128))(v1))
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsNavigator_plugins(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = WebCore::Navigator::plugins(*(WebCore::Navigator **)(a2 + 24));
  return WebCore::wrap<WebCore::DOMPluginArray>(a1, v3, v4);
}

uint64_t WebCore::jsNavigator_mimeTypes(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = WebCore::Navigator::mimeTypes(*(WebCore::Navigator **)(a2 + 24));
  return WebCore::wrap<WebCore::DOMMimeTypeArray>(a1, v3, v4);
}

uint64_t WebCore::jsNavigator_pdfViewerEnabled(uint64_t a1, uint64_t a2)
{
  WebCore::Navigator *v2;

  v2 = *(WebCore::Navigator **)(a2 + 24);
  WebCore::Navigator::initializePluginAndMimeTypeArrays(v2);
  if (*((_BYTE *)v2 + 97))
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsNavigator_serviceWorker(WebCore::JSDOMGlobalObject *a1, uint64_t a2)
{
  JSC::VM *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  WebCore::NavigatorBase *v8;
  JSC::VM *v9;
  int v10;
  int v11;
  unint64_t v12;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  JSValue v16;
  uint64_t v17;
  int v18[2];
  WTF::StringImpl *v19;
  int v20;
  _BYTE v21[8];
  WTF::StringImpl *v22;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v5 = WebCore::JSDOMGlobalObject::scriptExecutionContext(a1);
  if (!v5)
    return 10;
  v7 = v5;
  v8 = *(WebCore::NavigatorBase **)(a2 + 24);
  v9 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  if (*(_BYTE *)(v5 + 274))
    goto LABEL_8;
  v10 = *(_DWORD *)(v5 - 168);
  *(_DWORD *)(v5 - 168) = v10 + 2;
  v11 = *(_DWORD *)(v5 + 76);
  if ((v11 & 4) != 0)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    LOBYTE(v18[0]) = 14;
    v20 = 1;
    v10 = *(_DWORD *)(v7 - 168) - 2;
  }
  if (v10)
  {
    *(_DWORD *)(v7 - 168) = v10;
  }
  else if ((*(_WORD *)(v7 - 162) & 0x400) == 0)
  {
    WebCore::Node::removedLastRef((WebCore::Node *)(v7 - 192), v6);
  }
  if ((v11 & 4) == 0)
  {
LABEL_8:
    *(_QWORD *)v18 = WebCore::NavigatorBase::serviceWorker(v8);
    v20 = 0;
LABEL_10:
    v12 = WebCore::wrap<WebCore::ServiceWorkerContainer>((int)a1, v9, *(WebCore::JSDOMGlobalObject **)v18);
LABEL_11:
    if (v20 != -1)
      ((void (*)(_BYTE *, int *))off_1E32C3178[v20])(v21, v18);
    return v12;
  }
  if (!v20)
    goto LABEL_10;
  if (v20 == 1)
  {
    v14 = (WTF::StringImpl *)LOBYTE(v18[0]);
    v21[0] = v18[0];
    v15 = v19;
    v19 = 0;
    v22 = v15;
    if (!*((_QWORD *)v4 + 2))
    {
      v16.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v18[0]), (JSC::JSGlobalObject *)&v22);
      JSC::VM::throwException(v4, a1, v16);
      v15 = v22;
    }
    v22 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v14);
      else
        *(_DWORD *)v15 -= 2;
    }
    v12 = 0;
    goto LABEL_11;
  }
  v17 = std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsNavigator_storage(v17);
}

unint64_t WebCore::jsNavigator_storage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  WTF *v5;
  void *v6;
  unsigned int *v7;
  unsigned int v8;
  bmalloc::api *v9;
  unsigned int *v11;
  unsigned int v12;
  unsigned int v13;
  bmalloc::api *v14;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v5 = *(WTF **)(v3 + 32);
  if (!v5)
  {
    v5 = (WTF *)bmalloc::api::isoAllocate();
    *(_DWORD *)v5 = 1;
    WTF::WeakPtrFactory<WebCore::MediaKeySystemClient,WTF::DefaultWeakPtrImpl>::initializeIfNeeded((unsigned int *)(v3 + 24), v3);
    v7 = *(unsigned int **)(v3 + 24);
    if (v7)
    {
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 + 1, v7));
    }
    *((_QWORD *)v5 + 1) = v7;
    v9 = *(bmalloc::api **)(v3 + 32);
    *(_QWORD *)(v3 + 32) = v5;
    if (v9)
    {
      if (*(_DWORD *)v9 == 1)
      {
        v11 = (unsigned int *)*((_QWORD *)v9 + 1);
        *((_QWORD *)v9 + 1) = 0;
        if (v11)
        {
          do
          {
            v12 = __ldaxr(v11);
            v13 = v12 - 1;
          }
          while (__stlxr(v13, v11));
          if (!v13)
          {
            atomic_store(1u, v11);
            v14 = v9;
            WTF::fastFree((WTF *)v11, v6);
            v9 = v14;
          }
        }
        bmalloc::api::isoDeallocate(v9, v6);
        v5 = *(WTF **)(v3 + 32);
      }
      else
      {
        --*(_DWORD *)v9;
      }
    }
  }
  return WebCore::wrap<WebCore::StorageManager>(a1, v4, v5);
}

uint64_t WebCore::JSNavigatorOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  void *v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  void *v15;
  uint64_t result;
  uint64_t v17;
  void *v18;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 64);
  if (!v5)
    return 0;
  v6 = *(void **)(v5 + 8);
  if (!v6)
    return 0;
  if (a5)
  {
    *a5 = "Reachable from Window";
    a5[1] = 22;
  }
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) != v8)
  {
    v9 = v8[1];
    v10 = ((unint64_t)v6 + ~((_QWORD)v6 << 32)) ^ (((unint64_t)v6 + ~((_QWORD)v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(void **)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v6 == v15)
        goto LABEL_14;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x194D69A68);
      }
    }
  }
  v17 = a4;
  v18 = v6;
  result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, v6);
  a4 = v17;
  v6 = v18;
  if ((_DWORD)result)
  {
LABEL_14:
    if (*(_BYTE *)(a4 + 131))
      (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v6);
    return 1;
  }
  return result;
}

uint64_t *WebCore::JSNavigatorOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  int v4;
  _DWORD *v5;
  uint64_t *result;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  v4 = v3[4];
  v3[4] = v4 + 1;
  v5 = v3 + 14;
  if (!v3)
    v5 = 0;
  if (*(_DWORD *)(a3 + 48))
  {
    result = JSC::weakRemove<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,WebCore::JSBlob *>((uint64_t *)(a3 + 32), (uint64_t)v3);
    v4 = v3[4] - 1;
  }
  else if (*(_QWORD *)v5)
  {
    *(_QWORD *)(*(_QWORD *)v5 + 8) = 3;
    *(_QWORD *)v5 = 0;
  }
  if (!v4)
    return (uint64_t *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 16))(v3);
  v3[4] = v4;
  return result;
}

uint64_t WebCore::JSNode::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, uint64_t a2)
{
  WebCore::JSEventTarget::visitOutputConstraints<JSC::AbstractSlotVisitor>(a1, a2);
  return WebCore::JSNode::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
}

uint64_t WebCore::JSNode::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEventTarget::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSNode::visitChildren(WebCore::JSNode *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    WebCore::JSEventTarget::visitChildren(this, a2, a3);
    result = WebCore::JSNode::visitAdditionalChildren<JSC::AbstractSlotVisitor>((uint64_t)this, (uint64_t)a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSNode::JSNode(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  return result;
}

{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  return result;
}

uint64_t WebCore::JSNode::protectedWrapped@<X0>(uint64_t this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(this + 24);
  *(_DWORD *)(v2 + 24) += 2;
  *a2 = v2;
  return this;
}

unint64_t WebCore::JSNode::createPrototype(WebCore::JSNode *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  JSC::JSCell *v5;
  unint64_t Structure;
  JSC::Structure *v7;

  v5 = (JSC::JSCell *)WebCore::JSEventTarget::prototype(this, a2, a3);
  Structure = WebCore::JSNodePrototype::createStructure((uint64_t *)this, (uint64_t)a2, v5);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSNodePrototype::create(this, a2, Structure, v7);
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNode>,(WebCore::DOMConstructorID)466>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v11;
  unint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  unint64_t v17;
  WebCore::JSDOMGlobalObject *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3728);
  if (v2)
    return v2;
  v6 = (uint64_t *)(a1 + 40136);
  v7 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventTarget>,(WebCore::DOMConstructorID)450>(a1, a2);
  v8 = v7;
  LODWORD(v22) = 67099;
  if ((v7 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v7);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v6;
  if (*v6 < (unint64_t)v6[1])
    goto LABEL_7;
  SlowCase = v6[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v6[3];
    v6[1] = SlowCase + HIDWORD(v20);
    v6[2] = SlowCase + (int)v20;
LABEL_7:
    *v6 = SlowCase + 128;
    goto LABEL_8;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_8:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v8, &v22, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSNode>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v11 = (_QWORD *)v6[165];
  v2 = v11[2846];
  if (v2 >= v11[2847])
  {
    v2 = v11[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_12;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v11[2849];
    v11[2847] = v2 + HIDWORD(v21);
    v11[2848] = v2 + (int)v21;
  }
  v11[2846] = v2 + 48;
LABEL_12:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v12 = *(_QWORD *)(v6[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v12, 0xFFFE000000000000, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v14 = JSC::JSString::create(a1, &v22);
  v15 = v22;
  v22 = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v13);
    else
      *(_DWORD *)v15 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v14;
  if (v14 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v16 = *(_QWORD *)(v6[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v14, 6, (uint64_t)&v22);
  v17 = *(_QWORD *)(v6[227] + 2160);
  v19 = WebCore::JSNode::prototype((WebCore::JSNode *)a1, (JSC::VM *)a2, v18);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v19, 14, (uint64_t)&v22);
  JSC::reifyStaticProperties<18u>((JSC::VM *)a1, (uint64_t)&WebCore::JSNode::s_info, (uint64_t)&WebCore::JSNodeConstructorTableValues, (JSC::JSObject *)v2);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3728) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsNodeConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSNodePrototype::s_info != (char **)(16
                                                    * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNode>,(WebCore::DOMConstructorID)466>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsNode_baseURI(JSC **a1, uint64_t a2, const WTF::String *a3)
{
  uint64_t v4;
  JSC::VM *v5;

  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 40) + 8);
  if (*(_QWORD *)(v4 + 848))
    v5 = (JSC::VM *)(v4 + 848);
  else
    v5 = (JSC::VM *)WTF::aboutBlankURL((WTF *)a1);
  return JSC::jsOwnedString(a1[7], v5, a3);
}

uint64_t WebCore::jsNode_isConnected(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a2 + 24) + 22) & 8) != 0)
    return 7;
  else
    return 6;
}

unint64_t WebCore::jsNode_ownerDocument(WebCore::DOMWrapperWorld **this, uint64_t a2, WebCore::Document *a3)
{
  WebCore::Node *v4;
  uint64_t v5;
  WebCore::Node *v6;
  JSC::JSGlobalObject *v8;
  uint64_t v9;
  unint64_t v10;
  void *v12;
  WebCore::Node *v13;
  WebCore::Node *v14;

  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) <= 0xEFu)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = *(WebCore::Node **)(a2 + 24);
  v5 = *((_QWORD *)v4 + 5);
  v6 = *(WebCore::Node **)(v5 + 8);
  if (v6 == v4 || v6 == 0)
    return 2;
  v8 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v9 = WebCore::cachedDocumentWrapper(this, v8, *(WebCore::JSDOMGlobalObject **)(v5 + 8), a3);
  if (v9)
    return v9;
  *((_DWORD *)v6 + 6) += 2;
  v14 = v6;
  v10 = WebCore::toJSNewlyCreated((uint64_t)this, v8, &v14);
  v13 = v14;
  v14 = 0;
  if (v13)
  {
    if (*((_DWORD *)v13 + 6) == 2)
    {
      if ((*((_WORD *)v13 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v13, v12);
    }
    else
    {
      *((_DWORD *)v13 + 6) -= 2;
    }
  }
  return v10;
}

uint64_t WebCore::jsNode_parentNode(WebCore::DOMWrapperWorld **a1, uint64_t a2, WebCore::Document *a3)
{
  uint64_t v3;
  JSC::VM *v4;
  uint64_t v6;

  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) <= 0xEFu)
    return JSC::throwDOMAttributeGetterTypeError();
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 32);
  v4 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v6 = v3;
  return WebCore::JSConverterOverloader<WebCore::IDLNullable<WebCore::IDLInterface<WebCore::Node>>,true,true>::convert<WebCore::ContainerNode *>(a1, v4, &v6, a3);
}

unint64_t WebCore::jsNode_parentElement(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::Element *a4)
{
  WebCore::JSDOMGlobalObject *v4;

  v4 = *(WebCore::JSDOMGlobalObject **)(*(_QWORD *)(a2 + 24) + 32);
  if (v4 && (*((_WORD *)v4 + 14) & 8) != 0)
    return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v4, a4);
  else
    return 2;
}

uint64_t WebCore::jsNode_childNodes(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _DWORD *v4;
  unint64_t Wrapper;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;

  v2 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::Node::childNodes(*(WebCore::Node **)(a2 + 24), (uint64_t *)&v7);
  if (!v7)
    return 2;
  v6 = v7;
  Wrapper = WebCore::getCachedWrapper<WebCore::NodeList>(*(_QWORD *)(*(_QWORD *)(v2 + 3320) + 32), *(_DWORD *)(*(_QWORD *)(v2 + 3320) + 48), (uint64_t)v7);
  if (!Wrapper)
  {
    ++v6[4];
    v8 = v6;
    Wrapper = WebCore::createWrapper(v2, (uint64_t *)&v8);
    v4 = v8;
    v8 = 0;
    if (v4)
    {
      if (v4[4] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v4 + 8))(v4);
      else
        --v4[4];
    }
  }
  if (v6[4] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v6 + 8))(v6);
  else
    --v6[4];
  return Wrapper;
}

uint64_t WebCore::jsNode_firstChild(WebCore::DOMWrapperWorld **a1, uint64_t a2, WebCore::Document *a3)
{
  WebCore::Document *v3;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  JSC::VM *v8;
  uint64_t v9;
  unint64_t Wrapper;
  uint64_t OutOfLineCachedWrapper;
  void *v13;
  WebCore::Node *v14;
  WebCore::Node *v15;

  v3 = a3;
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) <= 0xEFu)
    return JSC::throwDOMAttributeGetterTypeError();
  v5 = *(_QWORD *)(a2 + 24);
  if (v5)
    v6 = (*(_WORD *)(v5 + 28) & 4) == 0;
  else
    v6 = 1;
  if (v6)
    return 2;
  v7 = *(_QWORD *)(v5 + 80);
  if (!v7)
    return 2;
  v8 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  if (*((_BYTE *)v8 + 3328))
  {
    v9 = *(_QWORD *)(v7 + 8);
    if (v9)
    {
      if ((*(_BYTE *)(v9 + 8) & 3) == 0)
      {
        Wrapper = *(_QWORD *)v9;
        if (*(_QWORD *)v9)
          return Wrapper;
      }
    }
    goto LABEL_18;
  }
  OutOfLineCachedWrapper = WebCore::getOutOfLineCachedWrapper(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v7);
  if (OutOfLineCachedWrapper)
    return OutOfLineCachedWrapper;
LABEL_18:
  *(_DWORD *)(v7 + 24) += 2;
  v15 = (WebCore::Node *)v7;
  Wrapper = WebCore::createWrapper(a1, v8, (WebCore::JSDOMGlobalObject *)&v15, v3);
  v14 = v15;
  v15 = 0;
  if (v14)
  {
    if (*((_DWORD *)v14 + 6) == 2)
    {
      if ((*((_WORD *)v14 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v14, v13);
    }
    else
    {
      *((_DWORD *)v14 + 6) -= 2;
    }
  }
  return Wrapper;
}

uint64_t WebCore::jsNode_previousSibling(WebCore::DOMWrapperWorld **a1, uint64_t a2, WebCore::Document *a3)
{
  WebCore::Document *v3;
  WebCore::Node *v5;
  JSC::VM *v6;
  uint64_t v7;
  unint64_t Wrapper;
  uint64_t OutOfLineCachedWrapper;
  void *v11;
  WebCore::Node *v12;
  WebCore::Node *v13;

  v3 = a3;
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) <= 0xEFu)
    return JSC::throwDOMAttributeGetterTypeError();
  v5 = (WebCore::Node *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 48) & 0xFFFFFFFFFFFFLL);
  if (!v5)
    return 2;
  v6 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  if (*((_BYTE *)v6 + 3328))
  {
    v7 = *(_QWORD *)((*(_QWORD *)(*(_QWORD *)(a2 + 24) + 48) & 0xFFFFFFFFFFFFLL) + 8);
    if (v7)
    {
      if ((*(_BYTE *)(v7 + 8) & 3) == 0)
      {
        Wrapper = *(_QWORD *)v7;
        if (*(_QWORD *)v7)
          return Wrapper;
      }
    }
    goto LABEL_13;
  }
  OutOfLineCachedWrapper = WebCore::getOutOfLineCachedWrapper(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 48) & 0xFFFFFFFFFFFFLL);
  if (OutOfLineCachedWrapper)
    return OutOfLineCachedWrapper;
LABEL_13:
  *((_DWORD *)v5 + 6) += 2;
  v13 = v5;
  Wrapper = WebCore::createWrapper(a1, v6, (WebCore::JSDOMGlobalObject *)&v13, v3);
  v12 = v13;
  v13 = 0;
  if (v12)
  {
    if (*((_DWORD *)v12 + 6) == 2)
    {
      if ((*((_WORD *)v12 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v12, v11);
    }
    else
    {
      *((_DWORD *)v12 + 6) -= 2;
    }
  }
  return Wrapper;
}

uint64_t WebCore::jsNode_nextSibling(WebCore::DOMWrapperWorld **a1, uint64_t a2, WebCore::Document *a3)
{
  WebCore::Document *v3;
  uint64_t v5;
  JSC::VM *v6;
  uint64_t v7;
  unint64_t Wrapper;
  uint64_t OutOfLineCachedWrapper;
  void *v11;
  WebCore::Node *v12;
  WebCore::Node *v13;

  v3 = a3;
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) <= 0xEFu)
    return JSC::throwDOMAttributeGetterTypeError();
  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 56);
  if (!v5)
    return 2;
  v6 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  if (*((_BYTE *)v6 + 3328))
  {
    v7 = *(_QWORD *)(v5 + 8);
    if (v7)
    {
      if ((*(_BYTE *)(v7 + 8) & 3) == 0)
      {
        Wrapper = *(_QWORD *)v7;
        if (*(_QWORD *)v7)
          return Wrapper;
      }
    }
    goto LABEL_13;
  }
  OutOfLineCachedWrapper = WebCore::getOutOfLineCachedWrapper(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v5);
  if (OutOfLineCachedWrapper)
    return OutOfLineCachedWrapper;
LABEL_13:
  *(_DWORD *)(v5 + 24) += 2;
  v13 = (WebCore::Node *)v5;
  Wrapper = WebCore::createWrapper(a1, v6, (WebCore::JSDOMGlobalObject *)&v13, v3);
  v12 = v13;
  v13 = 0;
  if (v12)
  {
    if (*((_DWORD *)v12 + 6) == 2)
    {
      if ((*((_WORD *)v12 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v12, v11);
    }
    else
    {
      *((_DWORD *)v12 + 6) -= 2;
    }
  }
  return Wrapper;
}

uint64_t WebCore::jsNode_nodeValue(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  uint64_t *v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;
  WTF::StringImpl *v12;

  (*(void (**)(WTF::StringImpl **__return_ptr))(**(_QWORD **)(a2 + 24) + 112))(&v12);
  v3 = v12;
  if (!v12)
    return 2;
  v4 = *(_QWORD *)(a1 + 56);
  v5 = (uint64_t *)(v4 + 41968);
  v6 = *((_DWORD *)v12 + 1);
  if (!v6)
    goto LABEL_15;
  if (v6 == 1)
  {
    v9 = (unsigned __int8 *)*((_QWORD *)v12 + 1);
    if ((*((_BYTE *)v12 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
        goto LABEL_4;
      v10 = v11;
    }
    v5 = (uint64_t *)(v4 + 8 * v10 + 42216);
LABEL_15:
    v7 = *v5;
    goto LABEL_16;
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v12 != *(WTF::StringImpl **)(v7 + 8))
  {
    v7 = JSC::jsStringWithCacheSlowCase();
    v3 = v12;
    v12 = 0;
    if (!v3)
      return v7;
    goto LABEL_7;
  }
LABEL_16:
  v12 = 0;
LABEL_7:
  if (*(_DWORD *)v3 == 2)
    WTF::StringImpl::destroy(v3, v3);
  else
    *(_DWORD *)v3 -= 2;
  return v7;
}

BOOL WebCore::setJSNode_nodeValue(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  int v7;
  _BOOL8 v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF *v11;
  WTF *v14;
  uint64_t v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  int v20;
  WTF *v21;
  uint64_t v22;
  _BYTE v23[40];
  uint64_t v24;
  JSC::JSGlobalObject *v25;
  JSC::VM *v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  uint64_t v29;
  WTF::StringImpl *v30;
  char v31;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) <= 0xEFu)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(_QWORD *)(a2 + 24);
  v26 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v21 = (WTF *)v23;
  v22 = 4;
  v23[32] = 0;
  v24 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v25 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v21;
  WebCore::Converter<WebCore::IDLNullable<WebCore::IDLDOMString>>::convert(a1, (unint64_t)this, (uint64_t)&v19);
  v7 = v20;
  v8 = v20 == 0;
  if (!v20)
  {
    v9 = v19;
    v19 = 0;
    v27 = v9;
    (*(void (**)(uint64_t *__return_ptr, uint64_t, WTF::StringImpl **))(*(_QWORD *)v5 + 120))(&v29, v5, &v27);
    v10 = v27;
    v27 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
        WTF::StringImpl::destroy(v10, v6);
      else
        *(_DWORD *)v10 -= 2;
    }
    if (v31)
    {
      LOBYTE(v27) = v29;
      v17 = v30;
      v30 = 0;
      v28 = v17;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(a1, &v26, (unsigned __int8 *)&v27);
        v17 = v28;
      }
      v28 = 0;
      if (v17)
      {
        if (*(_DWORD *)v17 == 2)
          WTF::StringImpl::destroy(v17, v6);
        else
          *(_DWORD *)v17 -= 2;
      }
      if (v31)
      {
        v18 = v30;
        v30 = 0;
        if (v18)
        {
          if (*(_DWORD *)v18 == 2)
            WTF::StringImpl::destroy(v18, v6);
          else
            *(_DWORD *)v18 -= 2;
        }
      }
    }
    v7 = v20;
  }
  if (v7 != -1)
    ((void (*)(uint64_t *, WTF::StringImpl **))off_1E32BEA70[v7])(&v29, &v19);
  if (HIDWORD(v22))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v21, v25);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v24;
    if (HIDWORD(v22))
    {
      v14 = v21;
      v15 = 8 * HIDWORD(v22);
      do
      {
        v16 = *(_QWORD *)v14;
        *(_QWORD *)v14 = 0;
        if (v16)
        {
          if (*(_DWORD *)(v16 + 24) == 2)
          {
            if ((*(_WORD *)(v16 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v16, v6);
          }
          else
          {
            *(_DWORD *)(v16 + 24) -= 2;
          }
        }
        v14 = (WTF *)((char *)v14 + 8);
        v15 -= 8;
      }
      while (v15);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v24;
  }
  v11 = v21;
  if (v23 != (_BYTE *)v21 && v21 != 0)
  {
    v21 = 0;
    LODWORD(v22) = 0;
    WTF::fastFree(v11, v6);
  }
  return v8;
}

BOOL WebCore::setJSNode_textContent(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v4;
  unsigned __int16 *v5;
  WTF::StringImpl *v6;
  int v7;
  _BOOL8 v8;
  WTF::StringImpl *v9;
  unsigned int v10;
  WTF::StringImpl *v11;
  WTF *v12;
  WTF *v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  int v21;
  WTF *v22;
  uint64_t v23;
  _BYTE v24[40];
  uint64_t v25;
  JSC::JSGlobalObject *v26;
  JSC::VM *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  WTF::StringImpl *v31;
  uint64_t v32;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) <= 0xEFu)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned __int16 **)(a2 + 24);
  v27 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v22 = (WTF *)v24;
  v23 = 4;
  v24[32] = 0;
  v25 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v26 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v22;
  WebCore::Converter<WebCore::IDLNullable<WebCore::IDLDOMString>>::convert(a1, (unint64_t)this, (uint64_t)&v20);
  v7 = v21;
  v8 = v21 == 0;
  if (!v21)
  {
    v9 = v20;
    v20 = 0;
    v28 = v9;
    v10 = v5[14] >> 12;
    if (v10 == 1)
      goto LABEL_5;
    if (v10 > 0xB)
      goto LABEL_6;
    if (v10 == 11)
    {
LABEL_5:
      WebCore::ContainerNode::stringReplaceAll((WebCore::ContainerNode *)v5, (uint64_t)&v28);
    }
    else if (((1 << v10) & 0x19C) != 0)
    {
      (*(void (**)(uint64_t *__return_ptr, unsigned __int16 *, WTF::StringImpl **))(*(_QWORD *)v5 + 120))(&v30, v5, &v28);
      goto LABEL_7;
    }
LABEL_6:
    v30 = 0;
    v31 = 0;
    v32 = 0;
LABEL_7:
    v11 = v28;
    v28 = 0;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v6);
      else
        *(_DWORD *)v11 -= 2;
    }
    if ((_BYTE)v32)
    {
      LOBYTE(v28) = v30;
      v18 = v31;
      v31 = 0;
      v29 = v18;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(a1, &v27, (unsigned __int8 *)&v28);
        v18 = v29;
      }
      v29 = 0;
      if (v18)
      {
        if (*(_DWORD *)v18 == 2)
          WTF::StringImpl::destroy(v18, v6);
        else
          *(_DWORD *)v18 -= 2;
      }
      if ((_BYTE)v32)
      {
        v19 = v31;
        v31 = 0;
        if (v19)
        {
          if (*(_DWORD *)v19 == 2)
            WTF::StringImpl::destroy(v19, v6);
          else
            *(_DWORD *)v19 -= 2;
        }
      }
    }
    v7 = v21;
  }
  if (v7 != -1)
    ((void (*)(uint64_t *, WTF::StringImpl **))off_1E32BEA70[v7])(&v30, &v20);
  if (HIDWORD(v23))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v22, v26);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v25;
    if (HIDWORD(v23))
    {
      v15 = v22;
      v16 = 8 * HIDWORD(v23);
      do
      {
        v17 = *(_QWORD *)v15;
        *(_QWORD *)v15 = 0;
        if (v17)
        {
          if (*(_DWORD *)(v17 + 24) == 2)
          {
            if ((*(_WORD *)(v17 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v17, v6);
          }
          else
          {
            *(_DWORD *)(v17 + 24) -= 2;
          }
        }
        v15 = (WTF *)((char *)v15 + 8);
        v16 -= 8;
      }
      while (v16);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v25;
  }
  v12 = v22;
  if (v24 != (_BYTE *)v22 && v22 != 0)
  {
    v22 = 0;
    LODWORD(v23) = 0;
    WTF::fastFree(v12, v6);
  }
  return v8;
}

uint64_t WebCore::JSNode::subspaceForImpl(WebCore::JSNode *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3808);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 3808);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 3808);
    *(_QWORD *)(v8 + 3808) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 3808);
  *(_QWORD *)(v3 + 3808) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSNode::toWrapped(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) < 0xF0u)
    return 0;
  else
    return *(_QWORD *)(a2 + 24);
}

WebCore::JSNodeFilter *WebCore::JSNodeFilter::JSNodeFilter(WebCore::JSNodeFilter *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3)
{
  WebCore::ScriptExecutionContext *v6;
  _QWORD *v7;
  _QWORD *Allocator;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  v6 = (WebCore::ScriptExecutionContext *)WebCore::JSDOMGlobalObject::scriptExecutionContext(a3);
  *((_DWORD *)this + 4) = 1;
  *(_QWORD *)this = &off_1E33A18C0;
  *((_QWORD *)this + 1) = 0;
  WebCore::ContextDestructionObserver::observeContext(this, v6);
  *(_QWORD *)this = &off_1E32BB820;
  v7 = (_QWORD *)WTF::fastMalloc((WTF *)0x18);
  Allocator = 0;
  if (a3)
  {
    v16 = v7;
    if ((a3 & 8) != 0)
      v12 = ((unint64_t)a3 - 112) | 1;
    else
      v12 = (unint64_t)a3 & 0xFFFFFFFFFFFFC000;
    if ((v12 & 1) != 0)
      v13 = v12 + 47;
    else
      v13 = *(_QWORD *)v12 + 32;
    Allocator = *(_QWORD **)(v13 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v13 + 16) = *Allocator;
    *Allocator = a3;
    Allocator[1] = 0;
    Allocator[2] = 0;
    v7 = v16;
  }
  *v7 = Allocator;
  v7[1] = &off_1E32268A0;
  v9 = v7 + 1;
  if (a2)
  {
    v17 = v7;
    if ((a2 & 8) != 0)
      v14 = (a2 - 112) | 1;
    else
      v14 = a2 & 0xFFFFFFFFFFFFC000;
    if ((v14 & 1) != 0)
      v15 = v14 + 47;
    else
      v15 = *(_QWORD *)v14 + 32;
    v10 = *(_QWORD **)(v15 + 16);
    if (!v10)
      v10 = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v15 + 16) = *v10;
    *v10 = a2;
    v10[1] = v9;
    v10[2] = this;
    v7 = v17;
  }
  else
  {
    v10 = 0;
  }
  v7[2] = v10;
  *((_QWORD *)this + 3) = v7;
  return this;
}

void WebCore::JSNodeFilter::~JSNodeFilter(WebCore::JSNodeFilter *this, void *a2)
{
  WTF *v2;
  void *v3;

  WebCore::JSAbortAlgorithm::~JSAbortAlgorithm(this, a2);
  WTF::fastFree(v2, v3);
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNodeFilter>,(WebCore::DOMConstructorID)467>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v16;
  unint64_t v17;
  WTF::StringImpl *v18;
  unint64_t v19;
  int v20;
  int v21;
  uint64_t v22;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3736);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v18) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v16);
    v5[2] = SlowCase + (int)v16;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v18, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSNodeFilter>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 >= v9[2847])
  {
    v2 = v9[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v17 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v17);
    v9[2848] = v2 + (int)v17;
  }
  v9[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v18 = 0;
  v19 = v2;
  v20 = -1;
  v21 = 0x1000000;
  v22 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v18);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v18);
  v13 = v18;
  v18 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v18 = 0;
  v19 = v2;
  v20 = -1;
  v21 = 0x1000000;
  v22 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v18);
  JSC::reifyStaticProperties<16u>((JSC::VM *)a1, 0, (uint64_t)&WebCore::JSNodeFilterConstructorTableValues, (JSC::JSObject *)v2);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3736) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

uint64_t WebCore::JSNodeFilter::acceptNode@<X0>(WebCore::JSNodeFilter *this@<X0>, WebCore::Node *a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v6;
  WebCore::DOMWrapperWorld **v7;
  WebCore::Document *v8;
  uint64_t *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  JSC::JSGlobalObject *v13;
  uint64_t v14;
  JSC::Structure *v15;
  unint64_t v16;
  int v17;
  JSC::VM *v18;
  double v19;
  double v20;
  double v21;
  long double v22;
  double v23;
  uint64_t *v24;
  uint64_t result;
  _QWORD *v26;
  double v27;
  char hasExceptionsAfterHandlingTraps;
  uint64_t v29;
  char v30[8];
  uint64_t v31;
  WTF *v32;
  _OWORD v33[4];
  uint64_t v34;
  char v35[8];
  WTF::StringImpl *v36;

  ++*((_DWORD *)this + 4);
  v6 = **((_QWORD **)this + 3);
  if (!v6 || (*(_BYTE *)(v6 + 8) & 3) != 0)
    v7 = 0;
  else
    v7 = *(WebCore::DOMWrapperWorld ***)v6;
  MEMORY[0x19AEA3294](v35, v7[7]);
  v30[0] = 0;
  v32 = (WTF *)((char *)v33 + 8);
  memset(v33, 0, sizeof(v33));
  v34 = 0;
  *((_QWORD *)&v33[0] + 1) = WebCore::toJS<WebCore::IDLInterface<WebCore::Node>,WebCore::Node&>(v7, (JSC::VM *)v7, (uint64_t)a2, v8);
  v31 = 0x800000001;
  v29 = 0;
  v9 = (uint64_t *)*((_QWORD *)this + 3);
  WTF::AtomStringImpl::addLiteral();
  v11 = v36;
  v12 = *v9;
  if (!*v9 || (*(_BYTE *)(v12 + 8) & 3) != 0 || (v13 = *(JSC::JSGlobalObject **)v12) == 0)
  {
    v16 = 0;
    if (!v36)
      goto LABEL_15;
    goto LABEL_13;
  }
  v14 = v9[2];
  if (!v14 || (*(_BYTE *)(v14 + 8) & 3) != 0)
    v15 = 0;
  else
    v15 = *(JSC::Structure **)v14;
  v16 = WebCore::JSCallbackData::invokeCallback(v13, v15, 10, (uint64_t)v30, 2, v36, &v29);
  if (v11)
  {
LABEL_13:
    if (*(_DWORD *)v11 == 2)
      WTF::StringImpl::destroy(v11, v10);
    else
      *(_DWORD *)v11 -= 2;
  }
LABEL_15:
  if (v29)
  {
    JSC::VM::throwException();
LABEL_17:
    v17 = 1;
    *a3 = 1;
    goto LABEL_33;
  }
  v36 = (WTF::StringImpl *)v16;
  v18 = v7[7];
  if (v16 < 0xFFFE000000000000 || (v16 & 0x80000000) != 0)
  {
    if (v16 >= 0xFFFE000000000000)
    {
      v19 = (double)(int)v16;
    }
    else if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v36, (JSC::JSGlobalObject *)v7);
    }
    else
    {
      *(_QWORD *)&v19 = v16 - 0x2000000000000;
    }
    if (*((_DWORD *)v18 + 20))
    {
      v27 = v19;
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v18);
      v19 = v27;
      if ((hasExceptionsAfterHandlingTraps & 1) != 0)
        goto LABEL_17;
    }
    LOWORD(v16) = 0;
    if (fabs(v19) != INFINITY && v19 != 0.0)
    {
      v20 = -floor(-v19);
      v21 = floor(v19);
      if (v19 >= 0.0)
        v22 = v21;
      else
        v22 = v20;
      v23 = fmod(v22, 65536.0);
      if (v23 < 0.0)
        v23 = v23 + 65536.0;
      LODWORD(v16) = (int)v23;
    }
  }
  v17 = 0;
  *(_WORD *)a3 = v16;
LABEL_33:
  a3[1] = v17;
  v24 = *(uint64_t **)&v33[0];
  if (*(_QWORD *)&v33[0])
  {
    v36 = (WTF::StringImpl *)&v31;
    v26 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v33[0], (uint64_t *)&v36);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v24, v26);
  }
  if (v32 != (WTF *)((char *)v33 + 8) && v32)
    WTF::fastFree(v32, v10);
  result = MEMORY[0x19AEA32A0](v35);
  if (*((_DWORD *)this + 4) == 1)
    return (*(uint64_t (**)(WebCore::JSNodeFilter *))(*(_QWORD *)this + 16))(this);
  --*((_DWORD *)this + 4);
  return result;
}

uint64_t WebCore::toJS<WebCore::IDLInterface<WebCore::Node>,WebCore::Node&>(WebCore::DOMWrapperWorld **a1, JSC::VM *a2, uint64_t a3, WebCore::Document *a4)
{
  uint64_t v7;
  unint64_t Wrapper;
  uint64_t OutOfLineCachedWrapper;
  void *v11;
  WebCore::Node *v12;
  WebCore::Node *v13;

  if (*((_BYTE *)a2 + 3328))
  {
    v7 = *(_QWORD *)(a3 + 8);
    if (v7)
    {
      if ((*(_BYTE *)(v7 + 8) & 3) == 0)
      {
        Wrapper = *(_QWORD *)v7;
        if (*(_QWORD *)v7)
          return Wrapper;
      }
    }
  }
  else
  {
    OutOfLineCachedWrapper = WebCore::getOutOfLineCachedWrapper((uint64_t)a2, a3);
    if (OutOfLineCachedWrapper)
      return OutOfLineCachedWrapper;
  }
  *(_DWORD *)(a3 + 24) += 2;
  v13 = (WebCore::Node *)a3;
  Wrapper = WebCore::createWrapper(a1, a2, (WebCore::JSDOMGlobalObject *)&v13, a4);
  v12 = v13;
  v13 = 0;
  if (v12)
  {
    if (*((_DWORD *)v12 + 6) == 2)
    {
      if ((*((_WORD *)v12 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v12, v11);
    }
    else
    {
      *((_DWORD *)v12 + 6) -= 2;
    }
  }
  return Wrapper;
}

uint64_t WebCore::JSNodeFilter::visitJSFunction(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = *(uint64_t **)(*(_QWORD *)(a1 + 24) + 16);
  if (!v3 || (v3[1] & 3) != 0)
    v4 = 0;
  else
    v4 = *v3;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 24))(a2, v4);
}

{
  return WebCore::JSCallbackData::visitJSFunction<JSC::SlotVisitor>(*(_QWORD *)(a1 + 24), a2);
}

uint64_t WebCore::JSNodeIterator::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 88);
  if (!v2 || !*(_BYTE *)(v2 + 24))
    return WebCore::JSNodeIterator::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
  result = 75;
  __break(0xC471u);
  return result;
}

WebCore::NodeIterator *WebCore::JSNodeIterator::destroy(WebCore::JSNodeIterator *this, JSC::JSCell *a2)
{
  WebCore::NodeIterator *result;
  bmalloc::api *v4;
  void *v5;

  result = (WebCore::NodeIterator *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*((_DWORD *)result + 2) == 1)
    {
      WebCore::NodeIterator::~NodeIterator(result);
      return (WebCore::NodeIterator *)bmalloc::api::isoDeallocate(v4, v5);
    }
    else
    {
      --*((_DWORD *)result + 2);
    }
  }
  return result;
}

uint64_t WebCore::JSNodeIterator::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSNodeIterator::visitChildren(uint64_t a1, uint64_t a2)
{
  JSC::JSObject::visitChildren();
  return WebCore::JSNodeIterator::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
}

uint64_t WebCore::JSNodeIterator::visitChildren(WebCore::JSNodeIterator *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    JSC::JSObject::visitChildren();
    result = WebCore::JSNodeIterator::visitAdditionalChildren<JSC::AbstractSlotVisitor>((uint64_t)this, (uint64_t)a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSNodeIteratorPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSNodeIteratorPrototype::create(WebCore::JSNodeIteratorPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<9u>(this, (uint64_t)&WebCore::JSNodeIterator::s_info, (uint64_t)&WebCore::JSNodeIteratorPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNodeIterator>,(WebCore::DOMConstructorID)468>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  JSC::Structure *v26;
  JSC::JSCell *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3744);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v33) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v33, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSNodeIterator>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v32);
    v9[2848] = v2 + (int)v32;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v33);
  v13 = v33;
  v33 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v33);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSNodeIterator::s_info + ~((_QWORD)&WebCore::JSNodeIterator::s_info << 32)) ^ (((unint64_t)&WebCore::JSNodeIterator::s_info + ~((_QWORD)&WebCore::JSNodeIterator::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSNodeIterator::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSNodeIterator::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSNodeIteratorPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v27 = (JSC::JSCell *)WebCore::JSNodeIteratorPrototype::create((WebCore::JSNodeIteratorPrototype *)a1, (JSC::VM *)a2, Structure, v26);
  v28 = WebCore::JSNodeIterator::createStructure((uint64_t *)a1, a2, v27);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v28, (uint64_t)&WebCore::JSNodeIterator::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v24 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v29, 14, (uint64_t)&v33);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3744) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsNodeIteratorConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSNodeIteratorPrototype::s_info != (char **)(16
                                                            * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNodeIterator>,(WebCore::DOMConstructorID)468>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsNodeIterator_root(WebCore::DOMWrapperWorld **a1, uint64_t a2, uint64_t a3, WebCore::Document *a4)
{
  return WebCore::toJS<WebCore::IDLInterface<WebCore::Node>,WebCore::Node&>(a1, *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 24), a4);
}

uint64_t WebCore::jsNodeIterator_referenceNode(WebCore::DOMWrapperWorld **a1, uint64_t a2, uint64_t a3, WebCore::Document *a4)
{
  uint64_t v4;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  void *v16;
  WebCore::Node *v17;
  unint64_t Wrapper;
  WebCore::Node *v19;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 48);
  if (!v4)
    return 2;
  v6 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  if (*(_BYTE *)(v6 + 3328))
  {
    v7 = *(_BYTE **)(v4 + 8);
    if (v7)
    {
LABEL_6:
      if ((v7[8] & 3) == 0 && *(_QWORD *)v7)
        return *(_QWORD *)v7;
    }
  }
  else
  {
    v8 = *(_QWORD *)(*(_QWORD *)(v6 + 3320) + 32);
    if (v8)
    {
      v9 = *(_DWORD *)(v8 - 8);
      v10 = (~(v4 << 32) + v4) ^ ((unint64_t)(~(v4 << 32) + v4) >> 22);
      v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
      v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
      v13 = v9 & ((v12 >> 31) ^ v12);
      v14 = *(_QWORD *)(v8 + 16 * v13);
      if (v14 == v4)
      {
LABEL_14:
        v7 = *(_BYTE **)(v8 + 16 * v13 + 8);
        if (v7)
          goto LABEL_6;
      }
      else
      {
        v15 = 1;
        while (v14)
        {
          v13 = ((_DWORD)v13 + v15) & v9;
          v14 = *(_QWORD *)(v8 + 16 * v13);
          ++v15;
          if (v14 == v4)
            goto LABEL_14;
        }
      }
    }
  }
  *(_DWORD *)(v4 + 24) += 2;
  v19 = (WebCore::Node *)v4;
  Wrapper = WebCore::createWrapper(a1, (JSC::VM *)v6, (WebCore::JSDOMGlobalObject *)&v19, a4);
  v17 = v19;
  v19 = 0;
  if (v17)
  {
    if (*((_DWORD *)v17 + 6) == 2)
    {
      if ((*((_WORD *)v17 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v17, v16);
    }
    else
    {
      *((_DWORD *)v17 + 6) -= 2;
    }
  }
  return Wrapper;
}

uint64_t WebCore::jsNodeIterator_pointerBeforeReferenceNode(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(*(_QWORD *)(a2 + 24) + 56))
    return 7;
  else
    return 6;
}

unint64_t WebCore::jsNodeIterator_whatToShow(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(unsigned int *)(*(_QWORD *)(a2 + 24) + 40);
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

uint64_t WebCore::jsNodeIterator_filter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 32);
  if (!v2)
    return 2;
  v3 = *(_QWORD *)(v2 + 24);
  if (!v3)
    return 2;
  v4 = *(_BYTE **)(v3 + 16);
  if (!v4 || (v4[8] & 3) != 0)
    return 0;
  else
    return *(_QWORD *)v4;
}

uint64_t WebCore::JSNodeIteratorOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

void WebCore::JSNodeIteratorOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  WebCore::NodeIterator *v3;
  int v4;
  bmalloc::api *v5;
  void *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  WebCore::NodeIterator *v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;

  v3 = *(WebCore::NodeIterator **)(*(_QWORD *)a2 + 24);
  v4 = *((_DWORD *)v3 + 2);
  *((_DWORD *)v3 + 2) = v4 + 1;
  if (*(_DWORD *)(a3 + 48))
  {
    v9 = *(_QWORD *)(a3 + 32);
    v7 = (uint64_t *)(a3 + 32);
    v8 = v9;
    if (v9)
    {
      v10 = *(_DWORD *)(v8 - 8);
      v11 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
      v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
      v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
      v14 = v10 & ((v13 >> 31) ^ v13);
      v15 = *(WebCore::NodeIterator **)(v8 + 16 * v14);
      if (v15 != v3)
      {
        v16 = 1;
        while (v15)
        {
          v14 = ((_DWORD)v14 + v16) & v10;
          v15 = *(WebCore::NodeIterator **)(v8 + 16 * v14);
          ++v16;
          if (v15 == v3)
            goto LABEL_12;
        }
        v14 = *(unsigned int *)(v8 - 4);
      }
LABEL_12:
      if (v14 != *(_DWORD *)(v8 - 4))
      {
        v17 = (_QWORD *)(v8 + 16 * v14);
        *v17 = -1;
        v20 = v17[1];
        v19 = v17 + 1;
        v18 = v20;
        if (v20)
        {
          *(_QWORD *)(v18 + 8) = 3;
          *v19 = 0;
        }
        ++*(_DWORD *)(*v7 - 16);
        v21 = *v7;
        if (*v7)
          v22 = *(_DWORD *)(v21 - 12) - 1;
        else
          v22 = -1;
        *(_DWORD *)(v21 - 12) = v22;
        v23 = *v7;
        if (*v7)
        {
          v24 = 6 * *(_DWORD *)(v23 - 12);
          v25 = *(_DWORD *)(v23 - 4);
          if (v24 < v25 && v25 >= 9)
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v7, v25 >> 1, 0);
        }
      }
    }
    v4 = *((_DWORD *)v3 + 2) - 1;
  }
  else if (*(_QWORD *)v3)
  {
    *(_QWORD *)(*(_QWORD *)v3 + 8) = 3;
    *(_QWORD *)v3 = 0;
  }
  if (v4)
  {
    *((_DWORD *)v3 + 2) = v4;
  }
  else
  {
    WebCore::NodeIterator::~NodeIterator(v3);
    bmalloc::api::isoDeallocate(v5, v6);
  }
}

uint64_t WebCore::JSNodeIterator::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSNodeIterator::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSNodeIterator::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

uint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSNodeList>::initializeProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char **v19;
  uint64_t v20;
  unint64_t Structure;
  JSC::Structure *v22;
  JSC::JSCell *v23;
  uint64_t v24;
  uint64_t v25;
  int v27;
  WTF::StringImpl *v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;

  v6 = a2 + 41952;
  v7 = *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768);
  v28 = 0;
  v29 = a1;
  v30 = -1;
  v31 = 0x1000000;
  v32 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)a1, (JSC::VM *)a2, v7, 0xFFFE000000000000, 6, (uint64_t)&v28);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v9 = JSC::JSString::create(a2, &v28);
  v10 = v28;
  v28 = 0;
  if (v10)
  {
    if (*(_DWORD *)v10 == 2)
      WTF::StringImpl::destroy(v10, v8);
    else
      *(_DWORD *)v10 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v9;
  if (a1 && v9 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  v11 = *(_QWORD *)(*(_QWORD *)v6 + 1968);
  v28 = 0;
  v29 = a1;
  v30 = -1;
  v31 = 0x1000000;
  v32 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)a1, (JSC::VM *)a2, v11, v9, 6, (uint64_t)&v28);
  v12 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v13 = *(_QWORD *)(a3 + 3296);
  if (!v13)
    goto LABEL_7;
  v14 = *(_DWORD *)(v13 - 8);
  v15 = ((unint64_t)&WebCore::JSNodeList::s_info + ~((_QWORD)&WebCore::JSNodeList::s_info << 32)) ^ (((unint64_t)&WebCore::JSNodeList::s_info + ~((_QWORD)&WebCore::JSNodeList::s_info << 32)) >> 22);
  v16 = 9 * ((v15 + ~(v15 << 13)) ^ ((v15 + ~(v15 << 13)) >> 8));
  v17 = (v16 ^ (v16 >> 15)) + ~((v16 ^ (v16 >> 15)) << 27);
  v18 = v14 & ((v17 >> 31) ^ v17);
  v19 = *(char ***)(v13 + 16 * v18);
  if (v19 != &WebCore::JSNodeList::s_info)
  {
    v27 = 1;
    while (v19)
    {
      v18 = ((_DWORD)v18 + v27) & v14;
      v19 = *(char ***)(v13 + 16 * v18);
      ++v27;
      if (v19 == &WebCore::JSNodeList::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v20 = *(_QWORD *)(v13 + 16 * v18 + 8);
  if (!v20)
  {
LABEL_7:
    Structure = WebCore::JSNodeListPrototype::createStructure((uint64_t *)a2, a3, *(JSC::JSCell **)(a3 + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v23 = (JSC::JSCell *)WebCore::JSNodeListPrototype::create((WebCore::JSNodeListPrototype *)a2, (JSC::VM *)a3, Structure, v22);
    v24 = WebCore::JSNodeList::createStructure((uint64_t *)a2, a3, v23);
    v20 = WebCore::cacheDOMStructure((JSCell *)a3, v24, (uint64_t)&WebCore::JSNodeList::s_info);
  }
  v25 = *(_QWORD *)(v20 + 48);
  v28 = 0;
  v29 = a1;
  v30 = -1;
  v31 = 0x1000000;
  v32 = 0;
  return JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)a1, (JSC::VM *)a2, v12, v25, 14, (uint64_t)&v28);
}

uint64_t WebCore::JSNodeList::prototype(WebCore::JSNodeList *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t CachedDOMStructure;
  unint64_t Structure;
  JSC::Structure *v7;
  JSC::JSCell *v8;
  uint64_t v9;

  CachedDOMStructure = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSNodeList::s_info);
  if (!CachedDOMStructure)
  {
    Structure = WebCore::JSNodeListPrototype::createStructure((uint64_t *)this, (uint64_t)a2, a2[82]);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v8 = (JSC::JSCell *)WebCore::JSNodeListPrototype::create(this, (JSC::VM *)a2, Structure, v7);
    v9 = WebCore::JSNodeList::createStructure((uint64_t *)this, (uint64_t)a2, v8);
    CachedDOMStructure = WebCore::cacheDOMStructure((JSCell *)a2, v9, (uint64_t)&WebCore::JSNodeList::s_info);
  }
  return *(_QWORD *)(CachedDOMStructure + 48);
}

uint64_t WebCore::JSNodeList::put(uint64_t a1, WebCore::JSDOMGlobalObject *a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  WebCore::JSDOMGlobalObject *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  JSC::VM *v21;
  _BYTE *v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t result;
  unsigned __int16 *v26;
  uint64_t v27;
  unsigned int v28;
  BOOL v29;
  unsigned __int8 *v30;
  uint64_t v31;
  unsigned int v32;
  int OwnProperty;
  int v34;
  int v35;
  char hasExceptionsAfterHandlingTraps;
  char v37[16];
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v8 = *(_QWORD *)(a5 + 8);
  if (v8 != a1)
    return JSC::JSObject::put();
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSDOMGlobalObject::s_info && v11 != 0);
  }
  if (v10)
    v14 = a2;
  else
    v14 = 0;
  v15 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v14);
  if (v15)
  {
    v16 = v15;
    if (!*(_BYTE *)(v15 + 274))
    {
      v17 = *(_BYTE **)(v15 + 496);
      if (!v17)
        v17 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v16 - 192));
      if (*(_QWORD *)v17)
      {
        v18 = *(_QWORD *)(*(_QWORD *)v17 + 8);
        if (v18)
        {
          v19 = *(_QWORD *)(v18 + 680);
          if (*(_BYTE *)(v19 + 243))
          {
            if (!*(_BYTE *)(v19 + 242))
              goto LABEL_23;
          }
          else if ((*(_QWORD *)(v19 + 688) & 0x80000) == 0)
          {
            goto LABEL_23;
          }
          if (v17[65])
            return JSC::JSObject::put();
        }
      }
    }
  }
LABEL_23:
  if (!a3)
    return JSC::JSObject::put();
  v20 = *(_DWORD *)(a3 + 16);
  if ((v20 & 0x20) != 0)
    return JSC::JSObject::put();
  v21 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v22 = *(_BYTE **)(a3 + 8);
  v23 = *(unsigned int *)(a3 + 4);
  if ((v20 & 4) != 0)
  {
    if (!(_DWORD)v23)
      return JSC::JSObject::put();
    v24 = *v22 - 48;
    if (v24 > 9 || v23 >= 2 && *v22 == 48)
      return JSC::JSObject::put();
    v30 = v22 + 1;
    v31 = v23 - 1;
    while (v31)
    {
      if (v24 <= 0x19999999)
      {
        v32 = *v30 - 48;
        if (v32 <= 9)
        {
          v29 = __CFADD__(v32, 10 * v24);
          v24 = v32 + 10 * v24;
          ++v30;
          --v31;
          if (!v29)
            continue;
        }
      }
      return JSC::JSObject::put();
    }
  }
  else
  {
    if (!(_DWORD)v23)
      return JSC::JSObject::put();
    v24 = *(unsigned __int16 *)v22 - 48;
    if (v24 > 9 || v23 >= 2 && *(_WORD *)v22 == 48)
      return JSC::JSObject::put();
    v26 = (unsigned __int16 *)(v22 + 2);
    v27 = v23 - 1;
    while (v27)
    {
      if (v24 <= 0x19999999)
      {
        v28 = *v26 - 48;
        if (v28 <= 9)
        {
          v29 = __CFADD__(v28, 10 * v24);
          v24 = v28 + 10 * v24;
          ++v26;
          --v27;
          if (!v29)
            continue;
        }
      }
      return JSC::JSObject::put();
    }
  }
  if (v24 == -1)
    return JSC::JSObject::put();
  v48 = 0;
  v49 = 0;
  v50 = 0;
  v51 = 14;
  v38 = 0xFFFFFFFF00000000;
  v40 = 0;
  v41 = 0;
  v39 = v8;
  v42 = 0x20000;
  v43 = 0;
  LOBYTE(v44) = 0;
  v45 = 0;
  v46 = 0;
  v47 = 0;
  OwnProperty = WebCore::JSNodeList::legacyPlatformObjectGetOwnProperty(a1, (WebCore::DOMWrapperWorld **)a2, a3, (uint64_t)v37);
  if (*((_DWORD *)v21 + 20)
    && (v35 = OwnProperty,
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v21),
        OwnProperty = v35,
        (hasExceptionsAfterHandlingTraps & 1) != 0)
    || OwnProperty
    && (JSC::PropertyDescriptor::setPropertySlot(), *((_DWORD *)v21 + 20))
    && (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) != 0)
  {
    result = 0;
  }
  else
  {
    result = JSC::ordinarySetWithOwnDescriptor();
  }
  if (v45)
  {
    v34 = *(_DWORD *)(v44 + 4);
    if (!v34)
    {
      __break(0xC471u);
      JUMPOUT(0x194D6CDA4);
    }
    *(_DWORD *)(v44 + 4) = v34 - 1;
  }
  return result;
}

uint64_t WebCore::JSNodeList::putByIndex(JSC::JSObject *a1, JSC::JSCell *a2, JSC::JSGlobalObject *a3, uint64_t a4, objc_class *a5)
{
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  WebCore::JSDOMGlobalObject *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  JSValue v24;
  WTF::StringImpl *v25;

  v10 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSDOMGlobalObject::s_info && v12 != 0);
  }
  if (v11)
    v15 = a2;
  else
    v15 = 0;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v15);
  if (!v16)
    goto LABEL_22;
  v17 = v16;
  if (*(_BYTE *)(v16 + 274))
    goto LABEL_22;
  v18 = *(_BYTE **)(v16 + 496);
  if (!v18)
    v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
  if (!*(_QWORD *)v18)
    goto LABEL_22;
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
  if (!v19)
    goto LABEL_22;
  v20 = *(_QWORD *)(v19 + 680);
  if (*(_BYTE *)(v20 + 243))
  {
    if (!*(_BYTE *)(v20 + 242))
      goto LABEL_22;
  }
  else if ((*(_QWORD *)(v20 + 688) & 0x80000) == 0)
  {
    goto LABEL_22;
  }
  if (v18[65])
  {
    v24.super.isa = a5;
    return JSC::JSObject::putByIndex(a1, a2, a3, a4, v24);
  }
LABEL_22:
  JSC::Identifier::from();
  v22 = JSC::ordinarySetSlow();
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v21);
    else
      *(_DWORD *)v25 -= 2;
  }
  return v22;
}

uint64_t WebCore::JSNodeList::deleteProperty(uint64_t a1, WebCore::JSDOMGlobalObject *a2, uint64_t a3)
{
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::JSDOMGlobalObject *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _BYTE *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned __int16 *v25;
  uint64_t v26;
  unsigned int v27;
  BOOL v28;
  unsigned int v29;
  uint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unsigned int v35;

  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDOMGlobalObject::s_info && v6 != 0);
  }
  v9 = *(_QWORD *)(a1 + 24);
  if (v5)
    v10 = a2;
  else
    v10 = 0;
  v11 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v10);
  if (v11)
  {
    v12 = v11;
    if (!*(_BYTE *)(v11 + 274))
    {
      v13 = *(_BYTE **)(v11 + 496);
      if (!v13)
        v13 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v12 - 192));
      if (*(_QWORD *)v13)
      {
        v14 = *(_QWORD *)(*(_QWORD *)v13 + 8);
        if (v14)
        {
          v15 = *(_QWORD *)(v14 + 680);
          if (*(_BYTE *)(v15 + 243))
          {
            if (*(_BYTE *)(v15 + 242))
            {
LABEL_21:
              if (v13[65])
                return JSC::JSObject::deleteProperty();
            }
          }
          else if ((*(_QWORD *)(v15 + 688) & 0x80000) != 0)
          {
            goto LABEL_21;
          }
        }
      }
    }
  }
  if (a3)
  {
    v16 = *(_DWORD *)(a3 + 16);
    if ((v16 & 0x20) == 0)
    {
      v17 = *(_BYTE **)(a3 + 8);
      v18 = *(unsigned int *)(a3 + 4);
      if ((v16 & 4) != 0)
      {
        if (!(_DWORD)v18 || (v29 = *v17 - 48, v29 > 9) || v18 >= 2 && *v17 == 48)
        {
LABEL_46:
          v30 = 0;
          v31 = 0;
          v32 = 0;
        }
        else
        {
          v33 = v18 - 1;
          v34 = v17 + 1;
          while (v33)
          {
            if (v29 > 0x19999999)
              goto LABEL_46;
            v35 = *v34 - 48;
            if (v35 > 9)
              goto LABEL_46;
            v30 = 0;
            v31 = 0;
            v32 = 0;
            v28 = __CFADD__(v35, 10 * v29);
            v29 = v35 + 10 * v29;
            --v33;
            ++v34;
            if (v28)
              goto LABEL_47;
          }
          v30 = 0x100000000;
          if (v29 == -1)
          {
            v30 = 0;
            v31 = 0;
          }
          else
          {
            v31 = v29;
          }
          if (v29 == -1)
            v32 = 0;
          else
            v32 = v29 & 0xFFFFFF00;
        }
LABEL_47:
        v23 = v32 | v31;
        if ((v30 & 0x100000000) != 0)
          return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9) <= v23;
      }
      else
      {
        if ((_DWORD)v18
          && (v19 = *(unsigned __int16 *)v17 - 48, v19 <= 9)
          && (v18 < 2 || *(_WORD *)v17 != 48))
        {
          v25 = (unsigned __int16 *)(v17 + 2);
          v26 = v18 - 1;
          while (v26)
          {
            if (v19 <= 0x19999999)
            {
              v27 = *v25 - 48;
              if (v27 <= 9)
              {
                v28 = __CFADD__(v27, 10 * v19);
                v19 = v27 + 10 * v19;
                ++v25;
                --v26;
                if (!v28)
                  continue;
              }
            }
            goto LABEL_29;
          }
          v7 = v19 == -1;
          v22 = v19 & 0xFFFFFF00;
          v21 = v19;
          v20 = 0x100000000;
          if (v7)
          {
            v20 = 0;
            v21 = 0;
            v22 = 0;
          }
        }
        else
        {
LABEL_29:
          v20 = 0;
          v21 = 0;
          v22 = 0;
        }
        v23 = v22 | v21;
        if ((v20 & 0x100000000) != 0)
          return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9) <= v23;
      }
    }
  }
  return JSC::JSObject::deleteProperty();
}

uint64_t WebCore::JSNodeList::deletePropertyByIndex(WebCore::JSNodeList *this, JSC::JSCell *a2, JSC::JSGlobalObject *a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = *((_QWORD *)this + 3);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (!v13)
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  v15 = *(_BYTE **)(v13 + 496);
  if (!v15)
    v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
  if (!*(_QWORD *)v15)
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
  if (!v16)
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  v17 = *(_QWORD *)(v16 + 680);
  if (*(_BYTE *)(v17 + 243))
  {
    if (!*(_BYTE *)(v17 + 242))
      return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  }
  else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
  {
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  }
  if (!v15[65])
    return (*(unsigned int (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11) <= a3;
  return JSC::JSObject::deletePropertyByIndex(this, a2, a3);
}

uint64_t WebCore::JSNodeList::getOwnPropertyNames(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  int v4;
  int v5;
  int v6;
  uint64_t *v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl **v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unsigned int v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  unsigned int v33;
  int v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45[2];
  char v46;
  WTF::StringImpl *v47;

  v4 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 24) + 16))(*(_QWORD *)(a1 + 24));
  if (v4)
  {
    v5 = v4;
    v6 = 0;
    v7 = a3 + 1;
    while (1)
    {
      JSC::Identifier::from();
      v9 = v44;
      v47 = v44;
      v10 = *((_DWORD *)v44 + 4);
      if ((v10 & 0x20) != 0)
      {
        if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*((_BYTE *)v44 + 36) & 4) != 0)
          goto LABEL_60;
      }
      else if ((a3[3] & 2) == 0)
      {
        goto LABEL_60;
      }
      v11 = *a3;
      v12 = *(unsigned int *)(*a3 + 20);
      if (v12 <= 0x13)
      {
        if ((_DWORD)v12)
        {
          v13 = *(WTF::StringImpl ***)(v11 + 8);
          while (*v13 != v44)
          {
            ++v13;
            if (!--v12)
              goto LABEL_19;
          }
          goto LABEL_60;
        }
LABEL_19:
        if ((v10 & 0x20) != 0)
        {
          v34 = *(_DWORD *)v9 + 2;
        }
        else
        {
          if ((v10 & 0x10) != 0)
          {
            *(_DWORD *)v9 += 2;
          }
          else
          {
            WTF::AtomStringImpl::addSlowCase();
            v9 = v45[0];
          }
          v34 = *(_DWORD *)v9;
          *(_DWORD *)v9 += 2;
          if (!v34)
          {
            WTF::StringImpl::destroy(v9, v8);
LABEL_54:
            v35 = (uint64_t *)(v11 + 8);
            v45[0] = v9;
            v36 = *(unsigned int *)(v11 + 20);
            if ((_DWORD)v36 == *(_DWORD *)(v11 + 16))
            {
              v37 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v35, v36 + 1, (unint64_t)v45);
              v36 = *(unsigned int *)(v11 + 20);
              v38 = *(_QWORD *)(v11 + 8);
              v39 = *v37;
              *v37 = 0;
              *(_QWORD *)(v38 + 8 * v36) = v39;
            }
            else
            {
              v40 = *v35;
              v45[0] = 0;
              *(_QWORD *)(v40 + 8 * v36) = v9;
            }
            *(_DWORD *)(v11 + 20) = v36 + 1;
            v41 = v45[0];
            v45[0] = 0;
            if (v41)
            {
              if (*(_DWORD *)v41 == 2)
                WTF::StringImpl::destroy(v41, v8);
              else
                *(_DWORD *)v41 -= 2;
            }
            goto LABEL_60;
          }
        }
        *(_DWORD *)v9 = v34;
        goto LABEL_54;
      }
      if (!*v7 || !*(_DWORD *)(*v7 - 12))
        break;
LABEL_17:
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v47, (uint64_t)v45);
      if (v46)
      {
        v9 = v47;
        v11 = *a3;
        v10 = *((_DWORD *)v47 + 4);
        goto LABEL_19;
      }
LABEL_60:
      v42 = v44;
      v44 = 0;
      if (v42)
      {
        if (*(_DWORD *)v42 == 2)
          WTF::StringImpl::destroy(v42, v8);
        else
          *(_DWORD *)v42 -= 2;
      }
      if (++v6 == v5)
        return JSC::JSObject::getOwnPropertyNames();
    }
    v14 = *(uint64_t **)(v11 + 8);
    v15 = &v14[v12];
    while (1)
    {
      v16 = *v14;
      v17 = *v7;
      if (*v7
        || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, 8u, 0), (v17 = *v7) != 0))
      {
        v18 = *(_DWORD *)(v17 - 8);
      }
      else
      {
        v18 = 0;
      }
      v19 = (~(v16 << 32) + v16) ^ ((unint64_t)(~(v16 << 32) + v16) >> 22);
      v20 = 9 * ((v19 + ~(v19 << 13)) ^ ((v19 + ~(v19 << 13)) >> 8));
      v21 = (v20 ^ (v20 >> 15)) + ~((v20 ^ (v20 >> 15)) << 27);
      v22 = v18 & ((v21 >> 31) ^ v21);
      v23 = (uint64_t *)(v17 + 8 * v22);
      v24 = *v23;
      if (*v23)
      {
        v25 = 0;
        v26 = 1;
        while (v24 != v16)
        {
          if (v24 == -1)
            v25 = v23;
          v22 = (v22 + v26) & v18;
          v23 = (uint64_t *)(v17 + 8 * v22);
          v24 = *v23;
          ++v26;
          if (!*v23)
          {
            if (v25)
            {
              *v25 = 0;
              --*(_DWORD *)(*v7 - 16);
              v23 = v25;
            }
            goto LABEL_34;
          }
        }
        goto LABEL_47;
      }
LABEL_34:
      *v23 = v16;
      v27 = *v7;
      v28 = *v7 ? *(_DWORD *)(v27 - 12) + 1 : 1;
      *(_DWORD *)(v27 - 12) = v28;
      v29 = *v7;
      v30 = *v7 ? *(_DWORD *)(v29 - 12) : 0;
      v31 = (*(_DWORD *)(v29 - 16) + v30);
      v32 = *(unsigned int *)(v29 - 4);
      if (v32 > 0x400)
        break;
      if (3 * v32 <= 4 * v31)
      {
        if ((_DWORD)v32)
          goto LABEL_43;
        v33 = 8;
        goto LABEL_46;
      }
LABEL_47:
      if (++v14 == v15)
        goto LABEL_17;
    }
    if (v32 > 2 * v31)
      goto LABEL_47;
LABEL_43:
    v33 = (_DWORD)v32 << (6 * *(_DWORD *)(v29 - 12) >= (2 * v32));
LABEL_46:
    WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, v33, v23);
    goto LABEL_47;
  }
  return JSC::JSObject::getOwnPropertyNames();
}

uint64_t WebCore::JSNodeList::defineOwnProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  _BYTE *v6;
  uint64_t v7;
  unsigned int v8;
  unsigned __int16 *v10;
  uint64_t v11;
  unsigned int v12;
  BOOL v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;

  if (!a3)
    return JSC::JSObject::defineOwnProperty();
  v5 = *(_DWORD *)(a3 + 16);
  if ((v5 & 0x20) != 0)
    return JSC::JSObject::defineOwnProperty();
  v6 = *(_BYTE **)(a3 + 8);
  v7 = *(unsigned int *)(a3 + 4);
  if ((v5 & 4) != 0)
  {
    if (!(_DWORD)v7)
      return JSC::JSObject::defineOwnProperty();
    v8 = *v6 - 48;
    if (v8 > 9 || v7 >= 2 && *v6 == 48)
      return JSC::JSObject::defineOwnProperty();
    v14 = v7 - 1;
    v15 = v6 + 1;
    while (v14)
    {
      if (v8 <= 0x19999999)
      {
        v16 = *v15 - 48;
        if (v16 <= 9)
        {
          v13 = __CFADD__(v16, 10 * v8);
          v8 = v16 + 10 * v8;
          --v14;
          ++v15;
          if (!v13)
            continue;
        }
      }
      return JSC::JSObject::defineOwnProperty();
    }
  }
  else
  {
    if (!(_DWORD)v7)
      return JSC::JSObject::defineOwnProperty();
    v8 = *(unsigned __int16 *)v6 - 48;
    if (v8 > 9 || v7 >= 2 && *(_WORD *)v6 == 48)
      return JSC::JSObject::defineOwnProperty();
    v10 = (unsigned __int16 *)(v6 + 2);
    v11 = v7 - 1;
    while (v11)
    {
      if (v8 <= 0x19999999)
      {
        v12 = *v10 - 48;
        if (v12 <= 9)
        {
          v13 = __CFADD__(v12, 10 * v8);
          v8 = v12 + 10 * v8;
          ++v10;
          --v11;
          if (!v13)
            continue;
        }
      }
      return JSC::JSObject::defineOwnProperty();
    }
  }
  if (v8 == -1)
    return JSC::JSObject::defineOwnProperty();
  if (a5)
    JSC::throwTypeError();
  return 0;
}

uint64_t WebCore::JSNodeList::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSNodeList::estimatedSize(WebCore::JSNodeList *this, JSC::JSCell *a2, JSC::VM *a3)
{
  uint64_t v4;

  v4 = JSC::JSObject::estimatedSize(this, a2, a3);
  return (*(uint64_t (**)(_QWORD))(**((_QWORD **)this + 3) + 56))(*((_QWORD *)this + 3)) + v4;
}

uint64_t WebCore::JSNodeList::visitChildren(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  JSC::JSObject::visitChildren();
  result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 24) + 56))(*(_QWORD *)(a1 + 24));
  if (*(_BYTE *)(a2 + 184))
  {
    *(_QWORD *)(a2 + 144) += result;
    v5 = *(_QWORD *)(a2 + 160);
    v6 = __CFADD__(v5, result);
    v7 = v5 + result;
    if (v6)
      *(_BYTE *)(a2 + 152) = 1;
    else
      *(_QWORD *)(a2 + 160) = v7;
  }
  return result;
}

uint64_t WebCore::JSNodeList::visitChildren(WebCore::JSNodeList *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];
  uint64_t v9;
  char v10;

  v8[0] = a2;
  v8[1] = this;
  v10 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v9 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v8;
    JSC::JSObject::visitChildren();
    v6 = (*(uint64_t (**)(_QWORD))(**((_QWORD **)this + 3) + 56))(*((_QWORD *)this + 3));
    result = (*(uint64_t (**)(JSC::JSCell *, uint64_t))(*(_QWORD *)a2 + 96))(a2, v6);
    *(_QWORD *)(v8[0] + 88) = v9;
  }
  return result;
}

uint64_t WebCore::JSNodeList::legacyPlatformObjectGetOwnProperty(uint64_t a1, WebCore::DOMWrapperWorld **a2, unint64_t a3, uint64_t a4)
{
  JSC::VM *v6;
  int v9;
  _BYTE *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  _BYTE *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t result;
  unsigned __int16 *v22;
  uint64_t v23;
  unsigned int v24;
  BOOL v25;
  unsigned __int16 *v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 *v40;
  unsigned int v41;
  uint64_t v42;
  WebCore::Document *v43;
  uint64_t v44;
  unsigned int v45;
  unsigned __int8 *v46;
  uint64_t v47;
  unsigned int v48;
  unint64_t v49;

  v6 = a2[7];
  if (!a3)
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
      return JSC::JSObject::getOwnStaticPropertySlot();
    return 0;
  }
  v9 = *(_DWORD *)(a3 + 16);
  if ((v9 & 0x20) == 0)
  {
    v10 = *(_BYTE **)(a3 + 8);
    v11 = *(unsigned int *)(a3 + 4);
    if ((v9 & 4) != 0)
    {
      if (!(_DWORD)v11)
        goto LABEL_6;
      v12 = *v10 - 48;
      if (v12 > 9 || v11 >= 2 && *v10 == 48)
        goto LABEL_6;
      v39 = v11 - 1;
      v40 = v10 + 1;
      while (v39)
      {
        if (v12 <= 0x19999999)
        {
          v41 = *v40 - 48;
          if (v41 <= 9)
          {
            v25 = __CFADD__(v41, 10 * v12);
            v12 = v41 + 10 * v12;
            --v39;
            ++v40;
            if (!v25)
              continue;
          }
        }
        goto LABEL_6;
      }
    }
    else
    {
      if (!(_DWORD)v11)
        goto LABEL_6;
      v12 = *(unsigned __int16 *)v10 - 48;
      if (v12 > 9 || v11 >= 2 && *(_WORD *)v10 == 48)
        goto LABEL_6;
      v22 = (unsigned __int16 *)(v10 + 2);
      v23 = v11 - 1;
      while (v23)
      {
        if (v12 <= 0x19999999)
        {
          v24 = *v22 - 48;
          if (v24 <= 9)
          {
            v25 = __CFADD__(v24, 10 * v12);
            v12 = v24 + 10 * v12;
            ++v22;
            --v23;
            if (!v25)
              continue;
          }
        }
        goto LABEL_6;
      }
    }
    if (v12 != -1)
    {
      v42 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 24) + 24))(*(_QWORD *)(a1 + 24));
      if (v42)
      {
        v44 = WebCore::toJS<WebCore::IDLNullable<WebCore::IDLInterface<WebCore::Node>>,WebCore::Node*>(a2, *(JSC::VM **)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28), v42, v43);
        if (!*((_DWORD *)v6 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) == 0)
        {
          *(_QWORD *)a4 = v44;
          *(_DWORD *)(a4 + 16) = 2;
          *(_QWORD *)(a4 + 32) = a1;
          result = 1;
          *(_BYTE *)(a4 + 49) = 1;
          return result;
        }
        return 0;
      }
      v6 = a2[7];
    }
  }
LABEL_6:
  if (!(a3 >> 4)
    || (v13 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE), ((a3 >> 4) & ~*(_DWORD *)(v13 + 0x20)) != 0)
    || (v14 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v6)) == 0
    || (v49 = a3, v15 = JSC::PropertyTable::get(v14, (uint64_t *)&v49), (_DWORD)v15 == -1))
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) == 0 || (JSC::JSObject::getOwnStaticPropertySlot() & 1) == 0)
    {
      v16 = *(_DWORD *)(a3 + 16);
      if ((v16 & 0x20) == 0)
      {
        v17 = *(_BYTE **)(a3 + 8);
        v18 = *(unsigned int *)(a3 + 4);
        if ((v16 & 4) != 0)
        {
          if ((_DWORD)v18)
          {
            v45 = *v17 - 48;
            if (v45 > 9 || v18 >= 2 && *v17 == 48)
            {
LABEL_78:
              v20 = 0;
            }
            else
            {
              v46 = v17 + 1;
              v47 = v18 - 1;
              while (v47)
              {
                if (v45 > 0x19999999)
                  goto LABEL_78;
                v48 = *v46 - 48;
                if (v48 > 9)
                  goto LABEL_78;
                v20 = 0;
                v25 = __CFADD__(v48, 10 * v45);
                v45 = v48 + 10 * v45;
                ++v46;
                --v47;
                if (v25)
                  goto LABEL_16;
              }
              v20 = 0x100000000;
              if (v45 == -1)
                v20 = 0;
            }
          }
          else
          {
            v20 = 0;
          }
        }
        else if ((_DWORD)v18)
        {
          v19 = *(unsigned __int16 *)v17 - 48;
          if (v19 > 9 || v18 >= 2 && *(_WORD *)v17 == 48)
          {
LABEL_15:
            v20 = 0;
          }
          else
          {
            v26 = (unsigned __int16 *)(v17 + 2);
            v27 = v18 - 1;
            while (v27)
            {
              if (v19 <= 0x19999999)
              {
                v28 = *v26 - 48;
                if (v28 <= 9)
                {
                  v25 = __CFADD__(v28, 10 * v19);
                  v19 = v28 + 10 * v19;
                  ++v26;
                  --v27;
                  if (!v25)
                    continue;
                }
              }
              goto LABEL_15;
            }
            v33 = v19 == -1;
            v20 = 0x100000000;
            if (v33)
              v20 = 0;
          }
        }
        else
        {
          v20 = 0;
        }
LABEL_16:
        if ((v20 & 0x100000000) != 0)
          return JSC::JSObject::getOwnPropertySlotByIndex();
      }
      return 0;
    }
    return 1;
  }
  if ((int)v15 > 63)
  {
    v29 = *(_QWORD *)(a1 + 8) - 8;
    v30 = 0x3F00000000 - (v15 << 32);
  }
  else
  {
    v29 = a1 + 16;
    v30 = v15 << 32;
  }
  v31 = *(_QWORD *)(v29 + (v30 >> 29));
  if ((v31 & 0xFFFE000000000002) != 0)
  {
LABEL_41:
    *(_QWORD *)a4 = v31;
    *(_QWORD *)(a4 + 32) = a1;
    *(_DWORD *)(a4 + 16) = HIDWORD(v15);
    *(_DWORD *)(a4 + 20) = v15;
    result = 1;
    *(_WORD *)(a4 + 48) = 257;
    return result;
  }
  v32 = *(unsigned __int8 *)(v31 + 5);
  if (v32 != 6)
  {
    if (v32 == 5)
    {
      JSC::JSObject::fillGetterPropertySlot();
      return 1;
    }
    goto LABEL_41;
  }
  v34 = *(_DWORD *)(v13 + 16) & 3;
  v36 = *(_QWORD *)(v31 + 8);
  v35 = *(_QWORD *)(v31 + 16);
  if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v31 & 0xFFFFFFFE) + 0x4C))
  {
    v38 = *(_QWORD *)(v31 + 24);
    v37 = *(_QWORD *)(v31 + 32);
    *(_QWORD *)a4 = v36;
    *(_QWORD *)(a4 + 8) = v35;
    *(_DWORD *)(a4 + 16) = HIDWORD(v15);
    *(_QWORD *)(a4 + 32) = a1;
    *(_BYTE *)(a4 + 49) = 3;
    result = 1;
    if (v34 != 2)
      *(_BYTE *)(a4 + 48) = 1;
    *(_BYTE *)(a4 + 51) = 1;
    *(_QWORD *)(a4 + 72) = v38;
    *(_QWORD *)(a4 + 80) = v37;
  }
  else
  {
    *(_QWORD *)a4 = v36;
    *(_QWORD *)(a4 + 8) = v35;
    *(_DWORD *)(a4 + 16) = HIDWORD(v15);
    *(_QWORD *)(a4 + 32) = a1;
    result = 1;
    *(_BYTE *)(a4 + 49) = 3;
    if (v34 != 2)
      *(_BYTE *)(a4 + 48) = 1;
  }
  return result;
}

uint64_t WebCore::toJS<WebCore::IDLNullable<WebCore::IDLInterface<WebCore::Node>>,WebCore::Node*>(WebCore::DOMWrapperWorld **a1, JSC::VM *a2, uint64_t a3, WebCore::Document *a4)
{
  uint64_t v7;
  unint64_t Wrapper;
  uint64_t OutOfLineCachedWrapper;
  void *v11;
  WebCore::Node *v12;
  WebCore::Node *v13;

  if (!a3)
    return 2;
  if (*((_BYTE *)a2 + 3328))
  {
    v7 = *(_QWORD *)(a3 + 8);
    if (v7)
    {
      if ((*(_BYTE *)(v7 + 8) & 3) == 0)
      {
        Wrapper = *(_QWORD *)v7;
        if (*(_QWORD *)v7)
          return Wrapper;
      }
    }
  }
  else
  {
    OutOfLineCachedWrapper = WebCore::getOutOfLineCachedWrapper((uint64_t)a2, a3);
    if (OutOfLineCachedWrapper)
      return OutOfLineCachedWrapper;
  }
  *(_DWORD *)(a3 + 24) += 2;
  v13 = (WebCore::Node *)a3;
  Wrapper = WebCore::createWrapper(a1, a2, (WebCore::JSDOMGlobalObject *)&v13, a4);
  v12 = v13;
  v13 = 0;
  if (v12)
  {
    if (*((_DWORD *)v12 + 6) == 2)
    {
      if ((*((_WORD *)v12 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v12, v11);
    }
    else
    {
      *((_DWORD *)v12 + 6) -= 2;
    }
  }
  return Wrapper;
}

uint64_t WebCore::jsNodeListConstructor(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t SlowCase;
  _QWORD *v5;
  unint64_t v7;

  v2 = *(_QWORD *)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSNodeListPrototype::s_info != (char **)(16
                                                        * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  SlowCase = *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 3752);
  if (!SlowCase)
  {
    WebCore::JSDOMConstructorNotConstructable<WebCore::JSNodeList>::createStructure((uint64_t *)v2, v3, *(JSC::JSCell **)(v3 + 664));
    v5 = *(_QWORD **)(v2 + 41456);
    SlowCase = v5[2846];
    if (SlowCase >= v5[2847])
    {
      SlowCase = v5[2848];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
        goto LABEL_6;
      }
      v7 = *(_QWORD *)(SlowCase + 8) ^ v5[2849];
      v5[2847] = SlowCase + HIDWORD(v7);
      v5[2848] = SlowCase + (int)v7;
    }
    v5[2846] = SlowCase + 48;
LABEL_6:
    *(_DWORD *)SlowCase = 0;
    JSC::InternalFunction::InternalFunction();
    if (*(_BYTE *)(v2 + 755))
      __dmb(0xAu);
    WebCore::JSDOMConstructorNotConstructable<WebCore::JSNodeList>::initializeProperties(SlowCase, v2, v3);
    *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 3752) = SlowCase;
    if (*(_DWORD *)(v2 + 760) >= *(unsigned __int8 *)(v3 + 7))
      JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v2 + 192), (const JSCell *)v3);
  }
  return SlowCase;
}

unint64_t WebCore::jsNodeList_length(uint64_t a1, uint64_t a2)
{
  unsigned int v2;

  v2 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a2 + 24) + 16))(*(_QWORD *)(a2 + 24));
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

uint64_t WebCore::JSNodeList::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSNodeList::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSNodeList::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSNotification>::construct(JSC *this, uint64_t a2)
{
  JSC::VM *v3;
  uint64_t v5;
  uint64_t v6;
  WebCore::ScriptExecutionContext *v7;
  uint64_t v8;
  JSC::VM *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WebCore::JSDOMGlobalObject *v19;
  WTF::StringImpl *v20;
  JSC::VM *v21;
  JSC::VM *v22;
  WTF::StringImpl *v23;
  void *v24;
  JSCell *v25;
  JSC::JSCell *v26;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v28;
  JSC::JSGlobalObject *v29;
  JSC::VM *v30;
  JSC::JSObject *v31;
  JSC::Structure *v32;
  JSC::VM *FunctionRealm;
  uint64_t v34;
  unsigned int v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char **v40;
  int v41;
  JSC::JSCell *v42;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v44;
  JSC::Structure *v45;
  JSC::JSCell *v46;
  uint64_t v47;
  unint64_t SubclassStructure;
  JSCell *v49;
  uint64_t v50;
  bmalloc::api *v52;
  void *v53;
  JSValue v54;
  WTF::StringImpl *v56;
  WTF::StringImpl *v57;
  WebCore::JSNotification *v58;
  JSC::VM *v59;
  WebCore::JSDOMGlobalObject *v60;
  WTF::StringImpl *v61;
  WTF::StringImpl *v62[2];
  __int128 v63;
  uint64_t v64;
  __int128 v65;
  __int16 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  WTF::StringImpl *v70;
  WTF::StringImpl *v71;
  WTF::StringImpl *v72;
  int v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  __int128 v78;
  __int16 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  unsigned int v83;
  WTF::StringImpl *v84;
  int v85;
  JSC::VM *v86;

  v3 = (JSC::VM *)*((_QWORD *)this + 7);
  v86 = v3;
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v54.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v3, this, v54);
  }
  v5 = *(_QWORD *)(a2 + 24);
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(v5 + 40));
  if (!v6)
    return (JSCell *)WebCore::throwConstructorScriptExecutionContextUnavailableError(this, &v86, (uint64_t)"Notification", 13);
  v7 = (WebCore::ScriptExecutionContext *)v6;
  v8 = *(_QWORD *)(a2 + 48);
  v74 = v8;
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v8 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v8 + 5) == 2)
  {
    v10 = *(WTF::StringImpl **)(v8 + 8);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v8, this);
      if (!v10)
        goto LABEL_8;
    }
    else if (!v10)
    {
LABEL_8:
      v61 = v10;
      goto LABEL_9;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_8;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v74, this);
LABEL_9:
  if (*((_DWORD *)v9 + 20))
  {
    v11 = v61;
    if (JSC::VM::hasExceptionsAfterHandlingTraps(v9))
    {
      v85 = 1;
      v61 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v56);
        else
          *(_DWORD *)v11 -= 2;
      }
      v49 = 0;
      v50 = 1;
      goto LABEL_43;
    }
  }
  else
  {
    v11 = v61;
  }
  v84 = v11;
  v85 = 0;
  if ((unint64_t)(*(int *)(a2 + 32) - 3) > 0xFFFFFFFFFFFFFFFDLL)
    v12 = 10;
  else
    v12 = *(_QWORD *)(a2 + 56);
  WebCore::convertDictionary<WebCore::Notification::Options>((JSC::JSCell *)v12, this, (uint64_t)&v74);
  v13 = v83;
  if (v83)
  {
    v25 = 0;
    v49 = 0;
    if (v83 == -1)
      goto LABEL_42;
    goto LABEL_41;
  }
  v14 = v76;
  *(_OWORD *)v62 = v75;
  v75 = 0u;
  v76 = 0u;
  v63 = v14;
  v15 = v78;
  v78 = 0u;
  v65 = v15;
  v16 = v80;
  v80 = 0u;
  v84 = 0;
  v70 = v11;
  LOBYTE(v61) = v74;
  v64 = v77;
  v66 = v79;
  v67 = v16;
  v68 = v81;
  v69 = v82;
  LODWORD(v81) = v81 & 0xFFFFFFFE;
  WebCore::Notification::create(v7, (uint64_t)&v70, (unsigned __int8 *)&v61, (uint64_t)&v71);
  WebCore::Notification::Options::~Options((WebCore::Notification::Options *)&v61, v17);
  v20 = v70;
  v70 = 0;
  if (v20)
  {
    if (*(_DWORD *)v20 == 2)
      WTF::StringImpl::destroy(v20, v18);
    else
      *(_DWORD *)v20 -= 2;
  }
  v21 = v86;
  if (*((_DWORD *)v86 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v86) & 1) != 0)
    goto LABEL_73;
  if (!v73)
  {
    v22 = *(JSC::VM **)(v5 + 40);
    v23 = v71;
    v71 = 0;
    v61 = v23;
    if (*(uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))v23 != &off_1E33647F0)
    {
      __break(0xC471u);
      JUMPOUT(0x194D6E728);
    }
    v25 = (JSCell *)WebCore::createWrapper<WebCore::Notification,WebCore::Notification>(v22, (JSC::VM *)&v61, v19);
    if (v61)
    {
      if (*((_DWORD *)v61 + 6) == 1)
      {
        WebCore::Notification::~Notification(v61, v24);
        bmalloc::api::isoDeallocate(v52, v53);
      }
      else
      {
        --*((_DWORD *)v61 + 6);
      }
    }
    goto LABEL_24;
  }
  if (v73 == 1)
  {
    LOBYTE(v61) = (_BYTE)v71;
    v57 = v72;
    v72 = 0;
    v62[0] = v57;
    if (!*((_QWORD *)v21 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v86, (unsigned __int8 *)&v61);
      v57 = v62[0];
    }
    v62[0] = 0;
    if (v57)
    {
      if (*(_DWORD *)v57 == 2)
        WTF::StringImpl::destroy(v57, v18);
      else
        *(_DWORD *)v57 -= 2;
    }
    v25 = 0;
LABEL_24:
    if (*((_DWORD *)v21 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) != 0)
    {
LABEL_73:
      v25 = 0;
LABEL_39:
      if (v73 != -1)
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32C1B28[v73])(&v61, &v71);
LABEL_41:
      (*(&off_1E32C1B38 + v13))((int)&v61, (WebCore::Notification::Options *)&v74);
      v49 = v25;
LABEL_42:
      v50 = 0;
LABEL_43:
      ((void (*)(uint64_t *, WTF::StringImpl **))off_1E32BEA70[v50])(&v74, &v84);
      return v49;
    }
    v26 = *(JSC::JSCell **)(a2 + 40);
    if (((unint64_t)v26 & 0xFFFE000000000002) != 0
      || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v26)) == 0
      || (v29 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
      || (v30 = (JSC::VM *)*((_QWORD *)this + 7),
          FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(this, Object, v28),
          *((_DWORD *)v30 + 20))
      && (JSC::VM::hasExceptionsAfterHandlingTraps(v30) & 1) != 0)
    {
LABEL_38:
      if (!*((_DWORD *)v21 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) == 0)
        goto LABEL_39;
      goto LABEL_73;
    }
    v34 = *((_QWORD *)FunctionRealm + 412);
    if (v34)
    {
      v35 = *(_DWORD *)(v34 - 8);
      v36 = ((unint64_t)&WebCore::JSNotification::s_info + ~((_QWORD)&WebCore::JSNotification::s_info << 32)) ^ (((unint64_t)&WebCore::JSNotification::s_info + ~((_QWORD)&WebCore::JSNotification::s_info << 32)) >> 22);
      v37 = 9 * ((v36 + ~(v36 << 13)) ^ ((v36 + ~(v36 << 13)) >> 8));
      v38 = (v37 ^ (v37 >> 15)) + ~((v37 ^ (v37 >> 15)) << 27);
      v39 = v35 & ((v38 >> 31) ^ v38);
      v40 = *(char ***)(v34 + 16 * v39);
      if (v40 == &WebCore::JSNotification::s_info)
      {
LABEL_34:
        v31 = *(JSC::JSObject **)(v34 + 16 * v39 + 8);
        if (v31)
        {
LABEL_36:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(this, v29, v31, v32);
          if (!*((_DWORD *)v30 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v30) & 1) == 0)
            JSC::JSObject::setStructure(v25, v30, SubclassStructure);
          goto LABEL_38;
        }
      }
      else
      {
        v41 = 1;
        while (v40)
        {
          v39 = ((_DWORD)v39 + v41) & v35;
          v40 = *(char ***)(v34 + 16 * v39);
          ++v41;
          if (v40 == &WebCore::JSNotification::s_info)
            goto LABEL_34;
        }
      }
    }
    v42 = (JSC::JSCell *)WebCore::JSEventTarget::prototype(v30, FunctionRealm, v31);
    Structure = WebCore::JSNotificationPrototype::createStructure((uint64_t *)v30, (uint64_t)FunctionRealm, v42);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v46 = (JSC::JSCell *)WebCore::JSNotificationPrototype::create(v30, Structure, v44, v45);
    v47 = WebCore::JSNotification::createStructure((uint64_t *)v30, (uint64_t)FunctionRealm, v46);
    v31 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v47, (uint64_t)&WebCore::JSNotification::s_info);
    goto LABEL_36;
  }
  v58 = (WebCore::JSNotification *)std::__throw_bad_variant_access[abi:sn180100]();
  return (JSCell *)WebCore::JSNotification::prototype(v58, v59, v60);
}

uint64_t WebCore::JSNotification::prototype(WebCore::JSNotification *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  JSC::JSCell *v14;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v16;
  JSC::Structure *v17;
  JSC::JSCell *v18;
  uint64_t v19;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSNotification::s_info + ~((_QWORD)&WebCore::JSNotification::s_info << 32)) ^ (((unint64_t)&WebCore::JSNotification::s_info + ~((_QWORD)&WebCore::JSNotification::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSNotification::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSNotification::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    v14 = (JSC::JSCell *)WebCore::JSEventTarget::prototype(this, a2, a3);
    Structure = WebCore::JSNotificationPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v14);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v18 = (JSC::JSCell *)WebCore::JSNotificationPrototype::create(this, Structure, v16, v17);
    v19 = WebCore::JSNotification::createStructure((uint64_t *)this, (uint64_t)a2, v18);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v19, (uint64_t)&WebCore::JSNotification::s_info);
  }
  return *(_QWORD *)(v13 + 48);
}

uint64_t WebCore::JSNotification::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24) - 32);
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEventTarget::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSNotification::visitChildren(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  JSC::JSObject::visitChildren();
  result = WebCore::JSEventTarget::visitAdditionalChildren<JSC::SlotVisitor>(a1, a2);
  v5 = *(_QWORD *)(a1 + 32);
  if ((v5 & 0xFFFE000000000002) == 0 && v5 != 0)
  {
    if ((v5 & 8) != 0)
    {
      if ((*(_BYTE *)(v5 - 79) & 1) == 0)
        return JSC::SlotVisitor::appendSlow();
    }
    else
    {
      v7 = v5 & 0xFFFFFFFFFFFFC000;
      if (*(_DWORD *)(v5 & 0xFFFFFFFFFFFFC000 | 0x20) != *(_DWORD *)(a2 + 132))
      {
        v8 = *(_QWORD *)(a1 + 32);
        v9 = v5 & 0xFFFFFFFFFFFFC000;
        result = JSC::MarkedBlock::aboutToMarkSlow((JSC::MarkedBlock *)(v5 & 0xFFFFFFFFFFFFC000));
        v5 = v8;
        v7 = v9;
      }
      if (((*(_QWORD *)(v7 + 8 * ((v5 >> 10) & 0xF) + 40) >> (v5 >> 4)) & 1) == 0)
        return JSC::SlotVisitor::appendSlow();
    }
    if (*(_QWORD *)(a2 + 168))
      return JSC::SlotVisitor::appendSlow();
  }
  return result;
}

uint64_t WebCore::JSNotification::visitChildren(WebCore::JSNotification *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    result = WebCore::JSEventTarget::visitChildren(this, a2, a3);
    if ((*((_QWORD *)this + 4) & 0xFFFE000000000002) == 0)
      result = (*(uint64_t (**)(JSC::JSCell *))(*(_QWORD *)a2 + 24))(a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSNotification::JSNotification(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  v5 = v4 + 32;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v5;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  v5 = v4 + 32;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v5;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t WebCore::JSNotification::protectedWrapped@<X0>(uint64_t this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(this + 24);
  ++*(_DWORD *)(v2 - 8);
  *a2 = v2 - 32;
  return this;
}

unint64_t WebCore::JSNotification::createPrototype(WebCore::JSNotification *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  JSC::JSCell *v5;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v5 = (JSC::JSCell *)WebCore::JSEventTarget::prototype(this, a2, a3);
  Structure = WebCore::JSNotificationPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v5);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSNotificationPrototype::create(this, Structure, v7, v8);
}

uint64_t WebCore::JSNotificationPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSNotificationPrototype::create(WebCore::JSNotificationPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  int v11;
  WTF::StringImpl *v12;
  unint64_t v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  JSC::Structure *v17;
  int v18;
  unint64_t v20;
  WTF::StringImpl *v21[6];
  int v22;
  int v23;
  JSC::Structure *v24;
  int v25;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v20);
    *((_QWORD *)this + 4865) = SlowCase + (int)v20;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<17u>(this, (uint64_t)&WebCore::JSNotification::s_info, (uint64_t)&WebCore::JSNotificationPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                         + 0x28));
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 136))(v9) + 472) & 0x1000000000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v10 = v21[0];
    v11 = *((_DWORD *)this + 23281);
    *((_DWORD *)this + 23281) = 1;
    LODWORD(v21[0]) = -1;
    WORD2(v21[0]) = 1;
    JSC::JSObject::deleteProperty();
    *((_DWORD *)this + 23281) = v11;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
        WTF::StringImpl::destroy(v10, v12);
      else
        *(_DWORD *)v10 -= 2;
    }
    if ((*(_BYTE *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x10) & 3) != 0)
      JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE)), this, (JSC::JSObject *)SlowCase);
  }
  v13 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v15 = JSC::JSString::create((uint64_t)this, v21);
  v16 = v21[0];
  v21[0] = 0;
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v14);
    else
      *(_DWORD *)v16 -= 2;
  }
  v17 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v25 = *(_DWORD *)SlowCase;
  v24 = v17;
  v18 = JSC::Structure::outOfLineCapacity(v17);
  v22 = 0;
  v23 = v18;
  v21[0] = (WTF::StringImpl *)&v23;
  v21[1] = (WTF::StringImpl *)SlowCase;
  v21[2] = this;
  v21[3] = (WTF::StringImpl *)&v25;
  v21[4] = (WTF::StringImpl *)&v24;
  v21[5] = (WTF::StringImpl *)&v22;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v17, this, v13, 6, (uint64_t)v21);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v22, v15);
  *((_DWORD *)v17 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSNotification>,(WebCore::DOMConstructorID)174>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  WTF::StringImpl *v23;
  int v24;
  WTF::StringImpl *v25;
  unint64_t v27;
  unint64_t v28;
  WTF::StringImpl *v29;
  unint64_t v30;
  int v31;
  int v32;
  uint64_t v33;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1392);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventTarget>,(WebCore::DOMConstructorID)450>(a1, a2);
  v7 = v6;
  LODWORD(v29) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v27 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v27);
    v5[2] = SlowCase + (int)v27;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v29, &WebCore::JSDOMConstructor<WebCore::JSNotification>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v28 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v28);
    v10[2848] = v2 + (int)v28;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v29 = 0;
  v30 = v2;
  v31 = -1;
  v32 = 0x1000000;
  v33 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v29);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v29);
  v14 = v29;
  v29 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v29 = 0;
  v30 = v2;
  v31 = -1;
  v32 = 0x1000000;
  v33 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v29);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v18 = WebCore::JSNotification::prototype((WebCore::JSNotification *)a1, (JSC::VM *)a2, v17);
  v29 = 0;
  v30 = v2;
  v31 = -1;
  v32 = 0x1000000;
  v33 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v18, 14, (uint64_t)&v29);
  JSC::reifyStaticProperties<2u>((JSC::VM *)a1, (uint64_t)&WebCore::JSNotification::s_info, (uint64_t)&WebCore::JSNotificationConstructorTableValues, (JSC::JSObject *)v2);
  v19 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  if ((_DWORD)v19)
  {
    v21 = 16 * v19;
    if ((char **)v21 != &WebCore::JSDOMWindowBase::s_info)
    {
      do
      {
        v21 = *(_QWORD *)(v21 + 16);
        v20 = v21 != 0;
      }
      while ((char **)v21 != &WebCore::JSDOMWindowBase::s_info && v21 != 0);
    }
  }
  if (!v20)
  {
    WTF::AtomStringImpl::addLiteral();
    v23 = v29;
    v24 = *(_DWORD *)(a1 + 93124);
    *(_DWORD *)(a1 + 93124) = 1;
    LODWORD(v29) = -1;
    WORD2(v29) = 1;
    JSC::JSObject::deleteProperty();
    *(_DWORD *)(a1 + 93124) = v24;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v25);
      else
        *(_DWORD *)v23 -= 2;
    }
  }
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1392) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsNotificationConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSNotificationPrototype::s_info != (char **)(16
                                                            * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSNotification>,(WebCore::DOMConstructorID)174>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsNotificationConstructor_permission(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = WebCore::JSDOMGlobalObject::scriptExecutionContext((WebCore::JSDOMGlobalObject *)a1);
  if (!v2)
    return 10;
  v3 = v2;
  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 144))(v2);
  if (v4)
  {
    v5 = v4;
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v3 + 24))(v3))
      v6 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v5 + 40))(v5, v3);
    else
      v6 = 1;
  }
  else
  {
    v6 = 0;
  }
  return WebCore::convertEnumerationToJS<WebCore::NotificationPermission>(a1[7], (WTF::StringImpl *)v6);
}

uint64_t WebCore::jsNotification_onclick(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  bmalloc::api *v12;
  void *v13;

  v5 = *(WebCore **)(a2 + 24);
  ++*((_DWORD *)v5 - 2);
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v8 + 400), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*((_DWORD *)v5 - 2) == 1)
  {
    WebCore::Notification::~Notification((WebCore *)((char *)v5 - 32), v9);
    bmalloc::api::isoDeallocate(v12, v13);
  }
  else
  {
    --*((_DWORD *)v5 - 2);
  }
  return v10;
}

BOOL WebCore::setJSNotification_onclick(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  bmalloc::api *v17;
  void *v18;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v8 = (char **)(16 * v6);
    if ((_DWORD)v6)
      v9 = v8 == &WebCore::JSNotification::s_info;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSNotification::s_info && v8 != 0);
    }
    if (v7)
    {
      v11 = *(WebCore::EventTarget **)(a2 + 24);
      ++*((_DWORD *)v11 - 2);
      v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
      if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
        v13 = WebCore::threadGlobalDataSlow(a1);
      v14 = *(_QWORD *)(v13 + 40);
      if (!v14)
      {
        WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
        v14 = *(_QWORD *)(v13 + 40);
      }
      WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 400), a3, (_DWORD *)a2);
      if (*((_DWORD *)v11 - 2) == 1)
      {
        WebCore::Notification::~Notification((WebCore::EventTarget *)((char *)v11 - 32), v15);
        bmalloc::api::isoDeallocate(v17, v18);
        if (a3)
        {
LABEL_19:
          if ((a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
            JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
        }
      }
      else
      {
        --*((_DWORD *)v11 - 2);
        if (a3)
          goto LABEL_19;
      }
      return 1;
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsNotification_onerror(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  bmalloc::api *v12;
  void *v13;

  v5 = *(WebCore **)(a2 + 24);
  ++*((_DWORD *)v5 - 2);
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v8 + 784), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*((_DWORD *)v5 - 2) == 1)
  {
    WebCore::Notification::~Notification((WebCore *)((char *)v5 - 32), v9);
    bmalloc::api::isoDeallocate(v12, v13);
  }
  else
  {
    --*((_DWORD *)v5 - 2);
  }
  return v10;
}

BOOL WebCore::setJSNotification_onerror(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  bmalloc::api *v17;
  void *v18;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v8 = (char **)(16 * v6);
    if ((_DWORD)v6)
      v9 = v8 == &WebCore::JSNotification::s_info;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSNotification::s_info && v8 != 0);
    }
    if (v7)
    {
      v11 = *(WebCore::EventTarget **)(a2 + 24);
      ++*((_DWORD *)v11 - 2);
      v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
      if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
        v13 = WebCore::threadGlobalDataSlow(a1);
      v14 = *(_QWORD *)(v13 + 40);
      if (!v14)
      {
        WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
        v14 = *(_QWORD *)(v13 + 40);
      }
      WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 784), a3, (_DWORD *)a2);
      if (*((_DWORD *)v11 - 2) == 1)
      {
        WebCore::Notification::~Notification((WebCore::EventTarget *)((char *)v11 - 32), v15);
        bmalloc::api::isoDeallocate(v17, v18);
        if (a3)
        {
LABEL_19:
          if ((a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
            JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
        }
      }
      else
      {
        --*((_DWORD *)v11 - 2);
        if (a3)
          goto LABEL_19;
      }
      return 1;
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

unint64_t WebCore::jsNotification_defaultAction(uint64_t a1, uint64_t a2, const WTF::String *a3)
{
  return JSC::jsOwnedString(*(JSC **)(a1 + 56), (JSC::VM *)(*(_QWORD *)(a2 + 24) + 48), a3);
}

uint64_t WebCore::jsNotification_title(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 88);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsNotification_dir(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  v4 = *(unsigned __int8 *)(*((_QWORD *)a2 + 3) + 96);
  if ((byte_1EE336139 & 1) == 0)
  {
    dword_1ECE79090 += 2;
    byte_1EE336139 = 1;
    dword_1ECE790B0 += 2;
    qword_1EE336300 = (uint64_t)&dword_1ECE79090;
    unk_1EE336308 = &dword_1ECE790B0;
    dword_1ECE790D0 += 2;
    qword_1EE336310 = (uint64_t)&dword_1ECE790D0;
  }
  v5 = *(_QWORD *)&_MergedGlobals_1139[8 * v4 + 456];
  if (!v5)
    return *v3;
  v6 = *(_DWORD *)v5;
  v7 = *(_DWORD *)(v5 + 4);
  *(_DWORD *)v5 += 2;
  if (v7)
  {
    if (v7 != 1)
    {
LABEL_6:
      v8 = *(_QWORD *)(v2 + 64760);
      if (!v8 || v5 != *(_QWORD *)(v8 + 8))
      {
        v8 = JSC::jsStringWithCacheSlowCase();
        v6 = *(_DWORD *)v5 - 2;
      }
      goto LABEL_9;
    }
    v10 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_6;
      v11 = v12;
    }
    v8 = *(_QWORD *)(v2 + 8 * v11 + 42216);
  }
  else
  {
    v8 = *v3;
  }
LABEL_9:
  if (v6)
    *(_DWORD *)v5 = v6;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v5, a2);
  return v8;
}

uint64_t WebCore::jsNotification_lang(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsNotification_body(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 112);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsNotification_tag(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 120);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

unint64_t WebCore::jsNotification_icon(uint64_t a1, uint64_t a2, const WTF::String *a3)
{
  return JSC::jsOwnedString(*(JSC **)(a1 + 56), (JSC::VM *)(*(_QWORD *)(a2 + 24) + 128), a3);
}

uint64_t WebCore::jsNotification_silent(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = 6;
  if (*(_WORD *)(*(_QWORD *)(a2 + 24) + 176))
    v2 = 7;
  if (*(unsigned __int16 *)(*(_QWORD *)(a2 + 24) + 176) >= 0x100u)
    return v2;
  else
    return 2;
}

unint64_t WebCore::jsNotification_data(WTF::StringImpl *a1, uint64_t a2)
{
  unint64_t v2;
  JSC::VM *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a2 + 32);
  if (!v2)
  {
    v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
    v2 = (unint64_t)WebCore::SerializedScriptValue::deserialize(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 168), a1, a1, 0, 0);
    if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    {
      return 0;
    }
    else
    {
      v6 = *((_QWORD *)a1 + 7);
      *(_QWORD *)(a2 + 32) = v2;
      if ((v2 & 0xFFFE000000000002) == 0 && v2 && *(_DWORD *)(v6 + 760) >= *(unsigned __int8 *)(a2 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v6 + 192), (const JSCell *)a2);
    }
  }
  return v2;
}

uint64_t WebCore::jsNotification_onclose(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  bmalloc::api *v12;
  void *v13;

  v5 = *(WebCore **)(a2 + 24);
  ++*((_DWORD *)v5 - 2);
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v8 + 408), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*((_DWORD *)v5 - 2) == 1)
  {
    WebCore::Notification::~Notification((WebCore *)((char *)v5 - 32), v9);
    bmalloc::api::isoDeallocate(v12, v13);
  }
  else
  {
    --*((_DWORD *)v5 - 2);
  }
  return v10;
}

BOOL WebCore::setJSNotification_onclose(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  bmalloc::api *v17;
  void *v18;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v8 = (char **)(16 * v6);
    if ((_DWORD)v6)
      v9 = v8 == &WebCore::JSNotification::s_info;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSNotification::s_info && v8 != 0);
    }
    if (v7)
    {
      v11 = *(WebCore::EventTarget **)(a2 + 24);
      ++*((_DWORD *)v11 - 2);
      v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
      if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
        v13 = WebCore::threadGlobalDataSlow(a1);
      v14 = *(_QWORD *)(v13 + 40);
      if (!v14)
      {
        WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
        v14 = *(_QWORD *)(v13 + 40);
      }
      WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 408), a3, (_DWORD *)a2);
      if (*((_DWORD *)v11 - 2) == 1)
      {
        WebCore::Notification::~Notification((WebCore::EventTarget *)((char *)v11 - 32), v15);
        bmalloc::api::isoDeallocate(v17, v18);
        if (a3)
        {
LABEL_19:
          if ((a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
            JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
        }
      }
      else
      {
        --*((_DWORD *)v11 - 2);
        if (a3)
          goto LABEL_19;
      }
      return 1;
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsNotification_ondisplay(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  bmalloc::api *v12;
  void *v13;

  v5 = *(WebCore **)(a2 + 24);
  ++*((_DWORD *)v5 - 2);
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v8 + 1848), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*((_DWORD *)v5 - 2) == 1)
  {
    WebCore::Notification::~Notification((WebCore *)((char *)v5 - 32), v9);
    bmalloc::api::isoDeallocate(v12, v13);
  }
  else
  {
    --*((_DWORD *)v5 - 2);
  }
  return v10;
}

BOOL WebCore::setJSNotification_ondisplay(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  bmalloc::api *v17;
  void *v18;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v8 = (char **)(16 * v6);
    if ((_DWORD)v6)
      v9 = v8 == &WebCore::JSNotification::s_info;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSNotification::s_info && v8 != 0);
    }
    if (v7)
    {
      v11 = *(WebCore::EventTarget **)(a2 + 24);
      ++*((_DWORD *)v11 - 2);
      v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
      if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
        v13 = WebCore::threadGlobalDataSlow(a1);
      v14 = *(_QWORD *)(v13 + 40);
      if (!v14)
      {
        WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
        v14 = *(_QWORD *)(v13 + 40);
      }
      WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 1848), a3, (_DWORD *)a2);
      if (*((_DWORD *)v11 - 2) == 1)
      {
        WebCore::Notification::~Notification((WebCore::EventTarget *)((char *)v11 - 32), v15);
        bmalloc::api::isoDeallocate(v17, v18);
        if (a3)
        {
LABEL_19:
          if ((a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
            JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
        }
      }
      else
      {
        --*((_DWORD *)v11 - 2);
        if (a3)
          goto LABEL_19;
      }
      return 1;
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsNotification_onshow(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  bmalloc::api *v12;
  void *v13;

  v5 = *(WebCore **)(a2 + 24);
  ++*((_DWORD *)v5 - 2);
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v8 + 1848), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*((_DWORD *)v5 - 2) == 1)
  {
    WebCore::Notification::~Notification((WebCore *)((char *)v5 - 32), v9);
    bmalloc::api::isoDeallocate(v12, v13);
  }
  else
  {
    --*((_DWORD *)v5 - 2);
  }
  return v10;
}

BOOL WebCore::setJSNotification_onshow(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  bmalloc::api *v17;
  void *v18;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v8 = (char **)(16 * v6);
    if ((_DWORD)v6)
      v9 = v8 == &WebCore::JSNotification::s_info;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSNotification::s_info && v8 != 0);
    }
    if (v7)
    {
      v11 = *(WebCore::EventTarget **)(a2 + 24);
      ++*((_DWORD *)v11 - 2);
      v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
      if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
        v13 = WebCore::threadGlobalDataSlow(a1);
      v14 = *(_QWORD *)(v13 + 40);
      if (!v14)
      {
        WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
        v14 = *(_QWORD *)(v13 + 40);
      }
      WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 1848), a3, (_DWORD *)a2);
      if (*((_DWORD *)v11 - 2) == 1)
      {
        WebCore::Notification::~Notification((WebCore::EventTarget *)((char *)v11 - 32), v15);
        bmalloc::api::isoDeallocate(v17, v18);
        if (a3)
        {
LABEL_19:
          if ((a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
            JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
        }
      }
      else
      {
        --*((_DWORD *)v11 - 2);
        if (a3)
          goto LABEL_19;
      }
      return 1;
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::JSNotification::subspaceForImpl(WebCore::JSNotification *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 1416);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 1416);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 40, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 1416);
    *(_QWORD *)(v8 + 1416) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 1416);
  *(_QWORD *)(v3 + 1416) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSNotificationOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v6 = *(_QWORD *)(v5 - 24);
  if (!v6)
    return 0;
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7 || *(_BYTE *)(v7 + 180))
    return 0;
  if (*(_QWORD *)(v5 - 16)
    || (result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 - 32) + 64))(v5 - 32), (_DWORD)result))
  {
    if (a5)
    {
      *a5 = "ActiveDOMObject with pending activity";
      a5[1] = 38;
    }
    return 1;
  }
  return result;
}

void WebCore::JSNotificationOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  WebCore::Notification *v4;
  int v5;
  uint64_t v6;
  bmalloc::api *v7;
  void *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  WebCore::Notification *v17;
  int v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v29;

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v4 = (WebCore::Notification *)(v3 - 32);
  v5 = *(_DWORD *)(v3 - 8);
  *(_DWORD *)(v3 - 8) = v5 + 1;
  if (*(_DWORD *)(a3 + 48))
  {
    v11 = *(_QWORD *)(a3 + 32);
    v9 = (uint64_t *)(a3 + 32);
    v10 = v11;
    if (v11)
    {
      v12 = *(_DWORD *)(v10 - 8);
      v13 = ((unint64_t)v4 + ~((_QWORD)v4 << 32)) ^ (((unint64_t)v4 + ~((_QWORD)v4 << 32)) >> 22);
      v14 = 9 * ((v13 + ~(v13 << 13)) ^ ((v13 + ~(v13 << 13)) >> 8));
      v15 = (v14 ^ (v14 >> 15)) + ~((v14 ^ (v14 >> 15)) << 27);
      v16 = v12 & ((v15 >> 31) ^ v15);
      v17 = *(WebCore::Notification **)(v10 + 16 * v16);
      if (v17 != v4)
      {
        v18 = 1;
        while (v17)
        {
          v16 = ((_DWORD)v16 + v18) & v12;
          v17 = *(WebCore::Notification **)(v10 + 16 * v16);
          ++v18;
          if (v17 == v4)
            goto LABEL_12;
        }
        v16 = *(unsigned int *)(v10 - 4);
      }
LABEL_12:
      if (v16 != *(_DWORD *)(v10 - 4))
      {
        v19 = (_QWORD *)(v10 + 16 * v16);
        *v19 = -1;
        v22 = v19[1];
        v21 = v19 + 1;
        v20 = v22;
        if (v22)
        {
          *(_QWORD *)(v20 + 8) = 3;
          *v21 = 0;
        }
        ++*(_DWORD *)(*v9 - 16);
        v23 = *v9;
        if (*v9)
          v24 = *(_DWORD *)(v23 - 12) - 1;
        else
          v24 = -1;
        *(_DWORD *)(v23 - 12) = v24;
        v25 = *v9;
        if (*v9)
        {
          v26 = 6 * *(_DWORD *)(v25 - 12);
          v27 = *(_DWORD *)(v25 - 4);
          if (v26 < v27 && v27 >= 9)
          {
            v29 = v3;
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v9, v27 >> 1, 0);
            v3 = v29;
          }
        }
      }
    }
    v5 = *(_DWORD *)(v3 - 8) - 1;
  }
  else
  {
    v6 = *(_QWORD *)(v3 + 8);
    if (v6)
    {
      *(_QWORD *)(v6 + 8) = 3;
      *(_QWORD *)(v3 + 8) = 0;
    }
  }
  if (v5)
  {
    *(_DWORD *)(v3 - 8) = v5;
  }
  else
  {
    WebCore::Notification::~Notification(v4, a2);
    bmalloc::api::isoDeallocate(v7, v8);
  }
}

unint64_t WebCore::createWrapper<WebCore::Notification,WebCore::Notification>(JSC::VM *a1, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSEventTarget *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v18;
  JSC::Structure *v19;
  JSC::JSCell *v20;
  uint64_t v21;
  WebCore::JSNotification *v22;
  _QWORD *v23;
  unint64_t SlowCase;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *Allocator;
  uint64_t v32;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;

  v5 = *(_QWORD *)a2;
  v6 = *((_QWORD *)a1 + 412);
  if (v6)
  {
    v7 = *(_DWORD *)(v6 - 8);
    v8 = ((unint64_t)&WebCore::JSNotification::s_info + ~((_QWORD)&WebCore::JSNotification::s_info << 32)) ^ (((unint64_t)&WebCore::JSNotification::s_info + ~((_QWORD)&WebCore::JSNotification::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(char ***)(v6 + 16 * v11);
    if (v12 == &WebCore::JSNotification::s_info)
    {
LABEL_6:
      v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
      if (v14)
        goto LABEL_8;
    }
    else
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(char ***)(v6 + 16 * v11);
        ++v13;
        if (v12 == &WebCore::JSNotification::s_info)
          goto LABEL_6;
      }
    }
  }
  v15 = (WebCore::JSEventTarget *)*((_QWORD *)a1 + 7);
  v16 = (JSC::JSCell *)WebCore::JSEventTarget::prototype(v15, a1, a3);
  Structure = WebCore::JSNotificationPrototype::createStructure((uint64_t *)v15, (uint64_t)a1, v16);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v20 = (JSC::JSCell *)WebCore::JSNotificationPrototype::create(v15, Structure, v18, v19);
  v21 = WebCore::JSNotification::createStructure((uint64_t *)v15, (uint64_t)a1, v20);
  v14 = WebCore::cacheDOMStructure((JSCell *)a1, v21, (uint64_t)&WebCore::JSNotification::s_info);
LABEL_8:
  v22 = (WebCore::JSNotification *)*((_QWORD *)a1 + 7);
  v23 = (_QWORD *)WebCore::JSNotification::subspaceForImpl(v22, a2);
  SlowCase = v23[3];
  if (SlowCase < v23[4])
  {
LABEL_9:
    v23[3] = SlowCase + 48;
    goto LABEL_10;
  }
  SlowCase = v23[5];
  if ((SlowCase & 1) == 0)
  {
    v37 = *(_QWORD *)(SlowCase + 8) ^ v23[6];
    v23[4] = SlowCase + HIDWORD(v37);
    v23[5] = SlowCase + (int)v37;
    goto LABEL_9;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_10:
  *(_DWORD *)SlowCase = 0;
  v25 = *(_QWORD *)a2;
  *(_QWORD *)a2 = 0;
  v26 = v25 + 32;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v14);
  *(_QWORD *)(SlowCase + 24) = v26;
  *(_QWORD *)(SlowCase + 32) = 0;
  if (*((_BYTE *)v22 + 755))
    __dmb(0xAu);
  v27 = *((_QWORD *)a1 + 415);
  if ((byte_1EE336218 & 1) == 0)
  {
    qword_1EE336210 = (uint64_t)&off_1E32BE778;
    byte_1EE336218 = 1;
  }
  if (v5)
    v28 = (uint64_t *)(v5 + 40);
  else
    v28 = 0;
  if (!*(_DWORD *)(v27 + 48))
  {
    if ((SlowCase & 8) != 0)
      v29 = (SlowCase - 112) | 1;
    else
      v29 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v29 & 1) != 0)
      v30 = v29 + 47;
    else
      v30 = *(_QWORD *)v29 + 32;
    Allocator = *(_QWORD **)(v30 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v30 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1EE336210;
    Allocator[2] = v27;
    v32 = *v28;
    *v28 = (uint64_t)Allocator;
    if (!v32)
      return SlowCase;
LABEL_35:
    *(_QWORD *)(v32 + 8) = 3;
    return SlowCase;
  }
  v39 = v5;
  if ((SlowCase & 8) != 0)
    v34 = (SlowCase - 112) | 1;
  else
    v34 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v34 & 1) != 0)
    v35 = v34 + 47;
  else
    v35 = *(_QWORD *)v34 + 32;
  v36 = *(_QWORD **)(v35 + 16);
  if (!v36)
    v36 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v35 + 16) = *v36;
  *v36 = SlowCase;
  v36[1] = &qword_1EE336210;
  v36[2] = v27;
  v38 = v36;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v27 + 32), &v39, (uint64_t *)&v38);
  v32 = (uint64_t)v38;
  if (v38)
    goto LABEL_35;
  return SlowCase;
}

uint64_t WebCore::wrap<WebCore::Notification>(int a1, JSC::VM *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  uint64_t result;
  bmalloc::api *v8;
  void *v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  WebCore::Notification *v18;

  v3 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v3 + 48))
  {
    v10 = *(_QWORD *)(v3 + 32);
    if (!v10)
      goto LABEL_5;
    v11 = *(_DWORD *)(v10 - 8);
    v12 = (~(a3 << 32) + a3) ^ ((unint64_t)(~(a3 << 32) + a3) >> 22);
    v13 = 9 * ((v12 + ~(v12 << 13)) ^ ((v12 + ~(v12 << 13)) >> 8));
    v14 = (v13 ^ (v13 >> 15)) + ~((v13 ^ (v13 >> 15)) << 27);
    v15 = v11 & ((v14 >> 31) ^ v14);
    v16 = *(_QWORD *)(v10 + 16 * v15);
    if (v16 != a3)
    {
      v17 = 1;
      while (v16)
      {
        v15 = ((_DWORD)v15 + v17) & v11;
        v16 = *(_QWORD *)(v10 + 16 * v15);
        ++v17;
        if (v16 == a3)
          goto LABEL_16;
      }
      goto LABEL_5;
    }
LABEL_16:
    v4 = *(_QWORD *)(v10 + 16 * v15 + 8);
    if (!v4)
      goto LABEL_5;
  }
  else
  {
    v4 = *(_QWORD *)(a3 + 40);
    if (!v4)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v4 + 8) & 3) == 0)
  {
    v5 = *(_QWORD *)v4;
    if (*(_QWORD *)v4)
      return v5;
  }
LABEL_5:
  ++*(_DWORD *)(a3 + 24);
  v18 = (WebCore::Notification *)a3;
  if (*(uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))a3 == &off_1E33647F0)
  {
    v5 = WebCore::createWrapper<WebCore::Notification,WebCore::Notification>(a2, (JSC::VM *)&v18, (WebCore::JSDOMGlobalObject *)a3);
    if (v18)
    {
      if (*((_DWORD *)v18 + 6) == 1)
      {
        WebCore::Notification::~Notification(v18, v6);
        bmalloc::api::isoDeallocate(v8, v9);
      }
      else
      {
        --*((_DWORD *)v18 + 6);
      }
    }
    return v5;
  }
  result = 691;
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSNotification::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSNotification::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSNotification::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24) - 32;
  else
    return 0;
}

uint64_t WebCore::parseEnumerationFromString<WebCore::NotificationDirection>(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;
  const char *v3;
  int v4;
  uint64_t v5;
  int v7;
  uint64_t v9;
  BOOL v10;
  char **v11;
  int v12;
  int v13;
  int v14;
  BOOL v17;

  v1 = *a1;
  if (!*a1)
  {
    v7 = 0;
    return v1 | (v7 << 8);
  }
  v2 = *(unsigned int *)(v1 + 16);
  v3 = *(const char **)(v1 + 8);
  v4 = *(_DWORD *)(v1 + 4);
  v5 = (v2 >> 2) & 1;
  if (v3 == "auto" || v4 != 4)
  {
    if (v3 != "auto" || v4 != 4)
    {
      v9 = v5 << 32;
      v10 = v4 != 3;
      if (v3 == "ltr" || v4 != 3)
      {
        v17 = v3 == "ltr" && v4 == 3;
        v12 = v4;
        if (v17)
          goto LABEL_21;
      }
      else if ((_DWORD)v5)
      {
        if (*v3 == 108 && *(_WORD *)(v3 + 1) == 29300)
        {
LABEL_21:
          v11 = &off_1E32BC178;
LABEL_38:
          LODWORD(v1) = *((unsigned __int8 *)v11 + 16);
          v7 = 1;
          return v1 | (v7 << 8);
        }
        v10 = 0;
        v12 = 3;
        v9 = 0x100000000;
      }
      else
      {
        if (*(_WORD *)v3 == 108 && *(_DWORD *)(v3 + 2) == 7471220)
          goto LABEL_21;
        v10 = 0;
        v12 = 3;
      }
      if (v3 == "rtl" || v10)
      {
        if (v4 == 3 && v3 == "rtl")
          goto LABEL_30;
      }
      else
      {
        if (!v12)
        {
LABEL_30:
          v11 = &off_1E32BC190;
          goto LABEL_38;
        }
        if (v9)
        {
          if (*v3 == 114 && *(_WORD *)(v3 + 1) == 27764)
            goto LABEL_30;
        }
        else if (*(_WORD *)v3 == 114 && *(_DWORD *)(v3 + 2) == 7078004)
        {
          goto LABEL_30;
        }
      }
      goto LABEL_11;
    }
LABEL_37:
    v11 = &WebCore::parseEnumerationFromString<WebCore::NotificationDirection>(WTF::String const&)::mappings;
    goto LABEL_38;
  }
  if ((_DWORD)v5)
  {
    if (*v3 == 97 && *(_WORD *)(v3 + 1) == 29813 && *((_WORD *)v3 + 1) == 28532)
      goto LABEL_37;
  }
  else if (*(_WORD *)v3 == 97)
  {
    v13 = *(_DWORD *)(v3 + 2);
    v14 = *((_DWORD *)v3 + 1);
    if (v13 == 7602293 && v14 == 7274612)
      goto LABEL_37;
  }
LABEL_11:
  v7 = 0;
  LODWORD(v1) = 0;
  return v1 | (v7 << 8);
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSNotificationEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  JSC::VM *v3;
  uint64_t v5;
  int v6;
  JSC::JSCell *v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  BOOL v11;
  uint64_t Object;
  WTF::StringImpl *v13;
  unint64_t v14;
  JSC::VM *v15;
  double v16;
  BOOL v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  unint64_t v20;
  JSC::VM *v21;
  double v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  unint64_t v25;
  JSC::VM *v26;
  double v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  JSC::VM *v31;
  uint64_t v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  JSC::VM *v35;
  __int128 v36;
  WTF::StringImpl *v37;
  WebCore::JSDOMGlobalObject *v38;
  WTF::StringImpl *v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char **v50;
  int v51;
  unint64_t v52;
  WebCore::JSExtendableEvent *v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char **v58;
  int v59;
  uint64_t v60;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  unint64_t v63;
  JSC::Structure *v64;
  JSC::JSCell *v65;
  uint64_t v66;
  JSCell *v67;
  JSC::JSCell *v68;
  JSC::JSGlobalObject *v69;
  JSC::JSObject *v70;
  JSC::JSGlobalObject *v71;
  JSC::VM *v72;
  JSC::JSObject *v73;
  JSC::Structure *v74;
  JSC::VM *FunctionRealm;
  uint64_t v76;
  unsigned int v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  char **v82;
  int v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char **v88;
  int v89;
  uint64_t v90;
  JSC::JSCell *v91;
  uint64_t v92;
  unint64_t v93;
  JSC::Structure *v94;
  JSC::JSCell *v95;
  uint64_t v96;
  unint64_t SubclassStructure;
  void (***v98)(WebCore::NotificationEvent *__hidden);
  uint64_t v100;
  BOOL v101;
  char **v102;
  BOOL v103;
  uint64_t v105;
  bmalloc::api *v106;
  void *v107;
  JSValue v108;
  int hasExceptionsAfterHandlingTraps;
  BOOL v110;
  int v111;
  uint64_t v112;
  int *v113;
  int v114;
  BOOL v115;
  int v116;
  uint64_t v117;
  int *v118;
  int v119;
  BOOL v120;
  int v121;
  uint64_t v122;
  int *v123;
  int v124;
  BOOL v125;
  uint64_t v126;
  JSC::VM *v127;
  uint64_t v128;
  WTF::StringImpl *v129[2];
  WTF::StringImpl *v130;
  __int128 v131;
  unsigned int v132;
  JSC::VM *v133;
  int v134;
  JSC::VM *v135;
  void (***v136)(WebCore::NotificationEvent *__hidden);

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((unint64_t)(*(int *)(a2 + 32) - 1) <= 1)
  {
    v108.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v3, a1, v108);
  }
  v5 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v133);
  v6 = v134;
  if (!v134)
  {
    v127 = v3;
    v7 = *(JSC::JSCell **)(a2 + 56);
    v135 = (JSC::VM *)*((_QWORD *)a1 + 7);
    v8 = (unint64_t)v7 & 0xFFFFFFFFFFFFFFF7;
    v126 = v5;
    if (((unint64_t)v7 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v9 = 0;
      v125 = 0;
      v10 = 0;
      v11 = 0;
      goto LABEL_45;
    }
    if (((unint64_t)v7 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v7)) == 0)
    {
      JSC::throwTypeError();
      goto LABEL_152;
    }
    v9 = Object;
    WTF::AtomStringImpl::addLiteral();
    v14 = JSC::JSObject::get((JSC::Structure *)v9, a1, (unint64_t)v130);
    if (v130)
    {
      if (*(_DWORD *)v130 == 2)
        WTF::StringImpl::destroy(v130, v13);
      else
        *(_DWORD *)v130 -= 2;
    }
    if (*((_DWORD *)v135 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v135) & 1) != 0)
    {
LABEL_152:
      v67 = 0;
      LODWORD(v8) = 1;
      v132 = 1;
LABEL_118:
      ((void (*)(uint64_t *, WTF::StringImpl **))off_1E32C1E60[v8])(&v128, &v130);
LABEL_119:
      v6 = v134;
      goto LABEL_120;
    }
    if (v14 != 10)
    {
      v15 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v14 >= 0xFFFE000000000000)
        goto LABEL_186;
      *(_QWORD *)&v16 = v14 - 0x2000000000000;
      if (v14 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
      {
        v17 = v16 > 0.0 || v16 < 0.0;
        goto LABEL_17;
      }
      if ((v14 & 0xFFFE000000000002) != 0)
      {
        v17 = v14 == 7;
        goto LABEL_17;
      }
      v111 = *(unsigned __int8 *)(v14 + 5);
      if (v111 == 3)
      {
        v114 = *(_DWORD *)(v14 + 8);
      }
      else
      {
        if (v111 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0xA) & 1) != 0)
          {
            v110 = *(_QWORD *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            goto LABEL_230;
          }
          v17 = 1;
          goto LABEL_17;
        }
        v112 = *(_QWORD *)(v14 + 8);
        if ((v112 & 1) != 0)
          v113 = (int *)(v14 + 16);
        else
          v113 = (int *)(v112 + 4);
        v114 = *v113;
      }
      v110 = v114 == 0;
      goto LABEL_230;
    }
    v125 = 0;
    while (1)
    {
      WTF::AtomStringImpl::addLiteral();
      v18 = v130;
      v20 = JSC::JSObject::get((JSC::Structure *)v9, a1, (unint64_t)v130);
      if (v18)
      {
        if (*(_DWORD *)v18 == 2)
          WTF::StringImpl::destroy(v18, v19);
        else
          *(_DWORD *)v18 -= 2;
      }
      if (*((_DWORD *)v135 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v135) & 1) != 0)
        goto LABEL_152;
      if (v20 == 10)
      {
        v10 = 0;
        goto LABEL_29;
      }
      v21 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v20 >= 0xFFFE000000000000)
        break;
      *(_QWORD *)&v22 = v20 - 0x2000000000000;
      if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        if ((v20 & 0xFFFE000000000002) != 0)
        {
          v10 = v20 == 7;
          goto LABEL_28;
        }
        v116 = *(unsigned __int8 *)(v20 + 5);
        if (v116 == 3)
        {
          v119 = *(_DWORD *)(v20 + 8);
          goto LABEL_219;
        }
        if (v116 == 2)
        {
          v117 = *(_QWORD *)(v20 + 8);
          if ((v117 & 1) != 0)
            v118 = (int *)(v20 + 16);
          else
            v118 = (int *)(v117 + 4);
          v119 = *v118;
LABEL_219:
          v115 = v119 == 0;
        }
        else
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_221:
            v10 = 1;
            goto LABEL_28;
          }
          v115 = *(_QWORD *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
        }
LABEL_234:
        v10 = !v115;
        goto LABEL_28;
      }
      if (v22 > 0.0)
        goto LABEL_221;
      v10 = v22 < 0.0;
LABEL_28:
      if (*((_DWORD *)v21 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) != 0)
        goto LABEL_152;
LABEL_29:
      WTF::AtomStringImpl::addLiteral();
      v23 = v130;
      v25 = JSC::JSObject::get((JSC::Structure *)v9, a1, (unint64_t)v130);
      if (v23)
      {
        if (*(_DWORD *)v23 == 2)
          WTF::StringImpl::destroy(v23, v24);
        else
          *(_DWORD *)v23 -= 2;
      }
      if (*((_DWORD *)v135 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v135) & 1) != 0)
        goto LABEL_152;
      if (v25 == 10)
      {
        v11 = 0;
        goto LABEL_40;
      }
      v26 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v25 >= 0xFFFE000000000000)
      {
        v120 = (_DWORD)v25 == 0;
        goto LABEL_224;
      }
      *(_QWORD *)&v27 = v25 - 0x2000000000000;
      if (v25 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        if ((v25 & 0xFFFE000000000002) != 0)
        {
          v11 = v25 == 7;
          goto LABEL_39;
        }
        v121 = *(unsigned __int8 *)(v25 + 5);
        if (v121 == 3)
        {
          v124 = *(_DWORD *)(v25 + 8);
        }
        else
        {
          if (v121 != 2)
          {
            if ((*(_BYTE *)(16 * (*(_DWORD *)v25 & 0xFFFFFFFE) + 0xA) & 1) == 0)
            {
LABEL_228:
              v11 = 1;
              goto LABEL_39;
            }
            v120 = *(_QWORD *)(16 * (*(_DWORD *)v25 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            goto LABEL_224;
          }
          v122 = *(_QWORD *)(v25 + 8);
          if ((v122 & 1) != 0)
            v123 = (int *)(v25 + 16);
          else
            v123 = (int *)(v122 + 4);
          v124 = *v123;
        }
        v120 = v124 == 0;
LABEL_224:
        v11 = !v120;
        goto LABEL_39;
      }
      if (v27 > 0.0)
        goto LABEL_228;
      v11 = v27 < 0.0;
LABEL_39:
      if (*((_DWORD *)v26 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v26) & 1) != 0)
        goto LABEL_152;
LABEL_40:
      WTF::AtomStringImpl::addLiteral();
      v28 = v130;
      v30 = JSC::JSObject::get((JSC::Structure *)v9, a1, (unint64_t)v130);
      if (v28)
      {
        if (*(_DWORD *)v28 == 2)
          WTF::StringImpl::destroy(v28, v29);
        else
          *(_DWORD *)v28 -= 2;
      }
      if (*((_DWORD *)v135 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v135) & 1) != 0)
        goto LABEL_152;
      if (v30 != 10)
      {
        v130 = (WTF::StringImpl *)v30;
        v31 = (JSC::VM *)*((_QWORD *)a1 + 7);
        if ((v30 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v30 + 5) != 2)
        {
          JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v130, a1);
        }
        else
        {
          v32 = *(_QWORD *)(v30 + 8);
          if ((v32 & 1) != 0)
          {
            v32 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v30, a1);
            if (v32)
LABEL_53:
              *(_DWORD *)v32 += 2;
          }
          else if (v32)
          {
            goto LABEL_53;
          }
          v136 = (void (***)(WebCore::NotificationEvent *__hidden))v32;
        }
        if (*((_DWORD *)v31 + 20))
        {
          hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v31);
          v14 = (unint64_t)v136;
          if (hasExceptionsAfterHandlingTraps)
          {
            LODWORD(v129[0]) = 1;
            v136 = 0;
            if (v14)
            {
              if (*(_DWORD *)v14 == 2)
                WTF::StringImpl::destroy((WTF::StringImpl *)v14, v34);
              else
                *(_DWORD *)v14 -= 2;
            }
            v14 = 0;
            goto LABEL_64;
          }
        }
        else
        {
          v14 = (unint64_t)v136;
        }
        LODWORD(v129[0]) = 0;
        v128 = 0;
        goto LABEL_58;
      }
LABEL_45:
      v14 = *MEMORY[0x1E0CBF738];
      if (*MEMORY[0x1E0CBF738])
        *(_DWORD *)v14 += 2;
      LODWORD(v129[0]) = 0;
      v128 = 0;
      if (v8 == 2)
      {
LABEL_63:
        WebCore::throwRequiredMemberTypeError((int)a1, (int)&v135, "notification", 13, "NotificationEventInit", 22, "Notification", 13);
LABEL_64:
        v8 = 1;
        goto LABEL_65;
      }
LABEL_58:
      WTF::AtomStringImpl::addLiteral();
      v33 = v130;
      v9 = JSC::JSObject::get((JSC::Structure *)v9, a1, (unint64_t)v130);
      if (v33)
      {
        if (*(_DWORD *)v33 == 2)
          WTF::StringImpl::destroy(v33, v34);
        else
          *(_DWORD *)v33 -= 2;
      }
      if (*((_DWORD *)v135 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v135) & 1) != 0)
        goto LABEL_64;
      if (v9 == 10)
        goto LABEL_63;
      v130 = (WTF::StringImpl *)*((_QWORD *)a1 + 7);
      if ((v9 & 0xFFFE000000000002) != 0)
        goto LABEL_134;
      v100 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
      v101 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
      v102 = (char **)(16 * v100);
      if ((_DWORD)v100)
        v103 = v102 == &WebCore::JSNotification::s_info;
      else
        v103 = 1;
      if (!v103)
      {
        do
        {
          v102 = (char **)v102[2];
          v101 = v102 != 0;
        }
        while (v102 != &WebCore::JSNotification::s_info && v102 != 0);
      }
      if (!v101)
      {
LABEL_134:
        JSC::throwTypeError();
        goto LABEL_64;
      }
      v8 = 0;
      v105 = *(_QWORD *)(v9 + 24);
      ++*(_DWORD *)(v105 - 8);
      LOBYTE(v130) = v125;
      BYTE1(v130) = v10;
      BYTE2(v130) = v11;
      *(_QWORD *)&v131 = v105 - 32;
      *((_QWORD *)&v131 + 1) = v14;
      v14 = 0;
LABEL_65:
      v132 = v8;
      if (LODWORD(v129[0]) != -1)
        ((void (*)(void (****)(WebCore::NotificationEvent *__hidden), uint64_t *))off_1E32BEA70[LODWORD(v129[0])])(&v136, &v128);
      if (!v14)
        goto LABEL_70;
      if (*(_DWORD *)v14 != 2)
      {
        *(_DWORD *)v14 -= 2;
LABEL_70:
        if ((_DWORD)v8)
          goto LABEL_138;
        goto LABEL_71;
      }
      WTF::StringImpl::destroy((WTF::StringImpl *)v14, v34);
      v8 = v132;
      if (v132)
      {
LABEL_138:
        v67 = 0;
        if ((_DWORD)v8 == -1)
          goto LABEL_119;
        goto LABEL_118;
      }
LABEL_71:
      if (!v134)
      {
        v35 = v133;
        v133 = 0;
        v135 = v35;
        LOWORD(v128) = (_WORD)v130;
        BYTE2(v128) = BYTE2(v130);
        v36 = v131;
        v131 = 0uLL;
        *(_OWORD *)v129 = v36;
        WebCore::NotificationEvent::create(&v135, (unsigned __int8 *)&v128, 0, (uint64_t *)&v136);
        v39 = v129[1];
        v129[1] = 0;
        if (v39)
        {
          if (*(_DWORD *)v39 == 2)
            WTF::StringImpl::destroy(v39, v37);
          else
            *(_DWORD *)v39 -= 2;
        }
        v40 = v129[0];
        v129[0] = 0;
        if (v40)
        {
          if (*((_DWORD *)v40 + 6) == 1)
          {
            WebCore::Notification::~Notification(v40, v37);
            bmalloc::api::isoDeallocate(v106, v107);
          }
          else
          {
            --*((_DWORD *)v40 + 6);
          }
        }
        v41 = v135;
        v135 = 0;
        if (v41)
        {
          if (*(_DWORD *)v41 == 2)
            WTF::StringImpl::destroy(v41, v37);
          else
            *(_DWORD *)v41 -= 2;
        }
        v42 = (uint64_t)v136;
        if (*v136 != off_1E33648E8)
        {
          __break(0xC471u);
          JUMPOUT(0x194D71958);
        }
        v43 = *(_QWORD *)(v126 + 40);
        v44 = *(_QWORD *)(v43 + 3296);
        if (!v44)
        {
          v53 = *(WebCore::JSExtendableEvent **)(v43 + 56);
          goto LABEL_93;
        }
        v45 = *(_DWORD *)(v44 - 8);
        v46 = ((unint64_t)&WebCore::JSNotificationEvent::s_info
             + ~((_QWORD)&WebCore::JSNotificationEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSNotificationEvent::s_info
                                                                         + ~((_QWORD)&WebCore::JSNotificationEvent::s_info << 32)) >> 22);
        v47 = 9 * ((v46 + ~(v46 << 13)) ^ ((v46 + ~(v46 << 13)) >> 8));
        v48 = (v47 ^ (v47 >> 15)) + ~((v47 ^ (v47 >> 15)) << 27);
        v49 = v45 & ((v48 >> 31) ^ v48);
        v50 = *(char ***)(v44 + 16 * v49);
        if (v50 == &WebCore::JSNotificationEvent::s_info)
        {
LABEL_87:
          v52 = *(_QWORD *)(v44 + 16 * v49 + 8);
          if (!v52)
            goto LABEL_88;
        }
        else
        {
          v51 = 1;
          while (v50)
          {
            v49 = ((_DWORD)v49 + v51) & v45;
            v50 = *(char ***)(v44 + 16 * v49);
            ++v51;
            if (v50 == &WebCore::JSNotificationEvent::s_info)
              goto LABEL_87;
          }
LABEL_88:
          v53 = *(WebCore::JSExtendableEvent **)(v43 + 56);
          v54 = ((unint64_t)&WebCore::JSExtendableEvent::s_info
               + ~((_QWORD)&WebCore::JSExtendableEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSExtendableEvent::s_info
                                                                         + ~((_QWORD)&WebCore::JSExtendableEvent::s_info << 32)) >> 22);
          v55 = 9 * ((v54 + ~(v54 << 13)) ^ ((v54 + ~(v54 << 13)) >> 8));
          v56 = (v55 ^ (v55 >> 15)) + ~((v55 ^ (v55 >> 15)) << 27);
          v57 = v45 & ((v56 >> 31) ^ v56);
          v58 = *(char ***)(v44 + 16 * v57);
          if (v58 == &WebCore::JSExtendableEvent::s_info)
          {
LABEL_92:
            v60 = *(_QWORD *)(v44 + 16 * v57 + 8);
            if (!v60)
              goto LABEL_93;
          }
          else
          {
            v59 = 1;
            while (v58)
            {
              v57 = ((_DWORD)v57 + v59) & v45;
              v58 = *(char ***)(v44 + 16 * v57);
              ++v59;
              if (v58 == &WebCore::JSExtendableEvent::s_info)
                goto LABEL_92;
            }
LABEL_93:
            Prototype = (JSC::JSCell *)WebCore::JSExtendableEvent::createPrototype(v53, *(JSC::VM **)(v126 + 40), v38);
            Structure = WebCore::JSExtendableEvent::createStructure((uint64_t *)v53, v43, Prototype);
            v60 = WebCore::cacheDOMStructure((JSCell *)v43, Structure, (uint64_t)&WebCore::JSExtendableEvent::s_info);
          }
          v63 = WebCore::JSNotificationEventPrototype::createStructure((uint64_t *)v53, v43, *(JSC::JSCell **)(v60 + 48));
          *(_DWORD *)(v63 + 16) |= 0x80000u;
          v65 = (JSC::JSCell *)WebCore::JSNotificationEventPrototype::create(v53, (JSC::VM *)v43, v63, v64);
          v66 = WebCore::JSNotificationEvent::createStructure((uint64_t *)v53, v43, v65);
          v52 = WebCore::cacheDOMStructure((JSCell *)v43, v66, (uint64_t)&WebCore::JSNotificationEvent::s_info);
        }
        v67 = (JSCell *)WebCore::JSNotificationEvent::create(v52, (JSC::VM *)v43, (uint64_t *)&v136);
        WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*(_QWORD *)(v43 + 3320), v42, (uint64_t)v67);
        v68 = *(JSC::JSCell **)(a2 + 40);
        if (((unint64_t)v68 & 0xFFFE000000000002) != 0
          || (v69 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v68)) == 0
          || (v71 = v69, v69 == *(JSC::JSGlobalObject **)(a2 + 24))
          || (v72 = (JSC::VM *)*((_QWORD *)a1 + 7),
              FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v69, v70),
              *((_DWORD *)v72 + 20))
          && (JSC::VM::hasExceptionsAfterHandlingTraps(v72) & 1) != 0)
        {
LABEL_114:
          if (*((_DWORD *)v127 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v127) & 1) != 0)
            v67 = 0;
          v98 = v136;
          v136 = 0;
          if (v98)
          {
            if (*((_DWORD *)v98 + 4) == 1)
              (*v98)[1]((WebCore::NotificationEvent *)v98);
            else
              --*((_DWORD *)v98 + 4);
          }
          goto LABEL_118;
        }
        v76 = *((_QWORD *)FunctionRealm + 412);
        if (v76)
        {
          v77 = *(_DWORD *)(v76 - 8);
          v78 = ((unint64_t)&WebCore::JSNotificationEvent::s_info
               + ~((_QWORD)&WebCore::JSNotificationEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSNotificationEvent::s_info
                                                                           + ~((_QWORD)&WebCore::JSNotificationEvent::s_info << 32)) >> 22);
          v79 = 9 * ((v78 + ~(v78 << 13)) ^ ((v78 + ~(v78 << 13)) >> 8));
          v80 = (v79 ^ (v79 >> 15)) + ~((v79 ^ (v79 >> 15)) << 27);
          v81 = v77 & ((v80 >> 31) ^ v80);
          v82 = *(char ***)(v76 + 16 * v81);
          if (v82 == &WebCore::JSNotificationEvent::s_info)
          {
LABEL_104:
            v73 = *(JSC::JSObject **)(v76 + 16 * v81 + 8);
            if (!v73)
              goto LABEL_105;
          }
          else
          {
            v83 = 1;
            while (v82)
            {
              v81 = ((_DWORD)v81 + v83) & v77;
              v82 = *(char ***)(v76 + 16 * v81);
              ++v83;
              if (v82 == &WebCore::JSNotificationEvent::s_info)
                goto LABEL_104;
            }
LABEL_105:
            v84 = ((unint64_t)&WebCore::JSExtendableEvent::s_info
                 + ~((_QWORD)&WebCore::JSExtendableEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSExtendableEvent::s_info
                                                                           + ~((_QWORD)&WebCore::JSExtendableEvent::s_info << 32)) >> 22);
            v85 = 9 * ((v84 + ~(v84 << 13)) ^ ((v84 + ~(v84 << 13)) >> 8));
            v86 = (v85 ^ (v85 >> 15)) + ~((v85 ^ (v85 >> 15)) << 27);
            v87 = v77 & ((v86 >> 31) ^ v86);
            v88 = *(char ***)(v76 + 16 * v87);
            if (v88 != &WebCore::JSExtendableEvent::s_info)
            {
              v89 = 1;
              while (v88)
              {
                v87 = ((_DWORD)v87 + v89) & v77;
                v88 = *(char ***)(v76 + 16 * v87);
                ++v89;
                if (v88 == &WebCore::JSExtendableEvent::s_info)
                  goto LABEL_109;
              }
              goto LABEL_110;
            }
LABEL_109:
            v90 = *(_QWORD *)(v76 + 16 * v87 + 8);
            if (!v90)
              goto LABEL_110;
LABEL_111:
            v93 = WebCore::JSNotificationEventPrototype::createStructure((uint64_t *)v72, (uint64_t)FunctionRealm, *(JSC::JSCell **)(v90 + 48));
            *(_DWORD *)(v93 + 16) |= 0x80000u;
            v95 = (JSC::JSCell *)WebCore::JSNotificationEventPrototype::create(v72, FunctionRealm, v93, v94);
            v96 = WebCore::JSNotificationEvent::createStructure((uint64_t *)v72, (uint64_t)FunctionRealm, v95);
            v73 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v96, (uint64_t)&WebCore::JSNotificationEvent::s_info);
          }
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v71, v73, v74);
          if (!*((_DWORD *)v72 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v72) & 1) == 0)
            JSC::JSObject::setStructure(v67, v72, SubclassStructure);
          goto LABEL_114;
        }
LABEL_110:
        v91 = (JSC::JSCell *)WebCore::JSExtendableEvent::createPrototype(v72, FunctionRealm, v73);
        v92 = WebCore::JSExtendableEvent::createStructure((uint64_t *)v72, (uint64_t)FunctionRealm, v91);
        v90 = WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v92, (uint64_t)&WebCore::JSExtendableEvent::s_info);
        goto LABEL_111;
      }
      v15 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_186:
      v110 = (_DWORD)v14 == 0;
LABEL_230:
      v17 = !v110;
LABEL_17:
      v125 = v17;
      if (*((_DWORD *)v15 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) != 0)
        goto LABEL_152;
    }
    v115 = (_DWORD)v20 == 0;
    goto LABEL_234;
  }
  v67 = 0;
LABEL_120:
  if (v6 != -1)
    ((void (*)(WTF::StringImpl **, JSC::VM **))off_1E32BEAA0[v6])(&v130, &v133);
  return v67;
}

uint64_t WebCore::JSNotificationEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSExtendableEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSExtendableEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSExtendableEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSNotificationEvent::createPrototype(WebCore::JSNotificationEvent *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  unint64_t v16;
  JSC::Structure *v17;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSExtendableEvent::s_info + ~((_QWORD)&WebCore::JSExtendableEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSExtendableEvent::s_info + ~((_QWORD)&WebCore::JSExtendableEvent::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSExtendableEvent::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSExtendableEvent::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Prototype = (JSC::JSCell *)WebCore::JSExtendableEvent::createPrototype(this, a2, a3);
    Structure = WebCore::JSExtendableEvent::createStructure((uint64_t *)this, (uint64_t)a2, Prototype);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSExtendableEvent::s_info);
  }
  v16 = WebCore::JSNotificationEventPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v13 + 48));
  *(_DWORD *)(v16 + 16) |= 0x80000u;
  return WebCore::JSNotificationEventPrototype::create(this, a2, v16, v17);
}

uint64_t WebCore::JSNotificationEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSNotificationEventPrototype::create(WebCore::JSNotificationEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSNotificationEvent::s_info, &WebCore::JSNotificationEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSNotificationEvent>,(WebCore::DOMConstructorID)175>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char **v31;
  int v32;
  uint64_t v33;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  unint64_t v36;
  JSC::Structure *v37;
  JSC::JSCell *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v42;
  unint64_t v43;
  WTF::StringImpl *v44;
  unint64_t v45;
  int v46;
  int v47;
  uint64_t v48;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1400);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSExtendableEvent>,(WebCore::DOMConstructorID)899>(a1, a2);
  v7 = v6;
  LODWORD(v44) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v42 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v42);
    v5[2] = SlowCase + (int)v42;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v44, &WebCore::JSDOMConstructor<WebCore::JSNotificationEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v43 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v43);
    v10[2848] = v2 + (int)v43;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v44 = 0;
  v45 = v2;
  v46 = -1;
  v47 = 0x1000000;
  v48 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000002, 6, (uint64_t)&v44);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v44);
  v14 = v44;
  v44 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v44 = 0;
  v45 = v2;
  v46 = -1;
  v47 = 0x1000000;
  v48 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v44);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (!v18)
    goto LABEL_26;
  v19 = *(_DWORD *)(v18 - 8);
  v20 = ((unint64_t)&WebCore::JSNotificationEvent::s_info + ~((_QWORD)&WebCore::JSNotificationEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSNotificationEvent::s_info + ~((_QWORD)&WebCore::JSNotificationEvent::s_info << 32)) >> 22);
  v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
  v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
  v23 = v19 & ((v22 >> 31) ^ v22);
  v24 = *(char ***)(v18 + 16 * v23);
  if (v24 == &WebCore::JSNotificationEvent::s_info)
  {
LABEL_20:
    v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
    if (v26)
      goto LABEL_28;
  }
  else
  {
    v25 = 1;
    while (v24)
    {
      v23 = ((_DWORD)v23 + v25) & v19;
      v24 = *(char ***)(v18 + 16 * v23);
      ++v25;
      if (v24 == &WebCore::JSNotificationEvent::s_info)
        goto LABEL_20;
    }
  }
  v27 = ((unint64_t)&WebCore::JSExtendableEvent::s_info + ~((_QWORD)&WebCore::JSExtendableEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSExtendableEvent::s_info + ~((_QWORD)&WebCore::JSExtendableEvent::s_info << 32)) >> 22);
  v28 = 9 * ((v27 + ~(v27 << 13)) ^ ((v27 + ~(v27 << 13)) >> 8));
  v29 = (v28 ^ (v28 >> 15)) + ~((v28 ^ (v28 >> 15)) << 27);
  v30 = v19 & ((v29 >> 31) ^ v29);
  v31 = *(char ***)(v18 + 16 * v30);
  if (v31 != &WebCore::JSExtendableEvent::s_info)
  {
    v32 = 1;
    while (v31)
    {
      v30 = ((_DWORD)v30 + v32) & v19;
      v31 = *(char ***)(v18 + 16 * v30);
      ++v32;
      if (v31 == &WebCore::JSExtendableEvent::s_info)
        goto LABEL_25;
    }
    goto LABEL_26;
  }
LABEL_25:
  v33 = *(_QWORD *)(v18 + 16 * v30 + 8);
  if (!v33)
  {
LABEL_26:
    Prototype = (JSC::JSCell *)WebCore::JSExtendableEvent::createPrototype((WebCore::JSExtendableEvent *)a1, (JSC::VM *)a2, v16);
    Structure = WebCore::JSExtendableEvent::createStructure((uint64_t *)a1, a2, Prototype);
    v33 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSExtendableEvent::s_info);
  }
  v36 = WebCore::JSNotificationEventPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(v33 + 48));
  *(_DWORD *)(v36 + 16) |= 0x80000u;
  v38 = (JSC::JSCell *)WebCore::JSNotificationEventPrototype::create((WebCore::JSNotificationEventPrototype *)a1, (JSC::VM *)a2, v36, v37);
  v39 = WebCore::JSNotificationEvent::createStructure((uint64_t *)a1, a2, v38);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v39, (uint64_t)&WebCore::JSNotificationEvent::s_info);
LABEL_28:
  v40 = *(_QWORD *)(v26 + 48);
  v44 = 0;
  v45 = v2;
  v46 = -1;
  v47 = 0x1000000;
  v48 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v40, 14, (uint64_t)&v44);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1400) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsNotificationEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSNotificationEventPrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSNotificationEvent>,(WebCore::DOMConstructorID)175>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsNotificationEvent_notification(int a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 104);
  if (v2)
    return WebCore::wrap<WebCore::Notification>(a1, *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v2);
  else
    return 2;
}

uint64_t WebCore::jsNotificationEvent_action(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 112);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::JSNotificationEvent::subspaceForImpl(WebCore::JSNotificationEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 1424);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 1424))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 1424);
    *(_QWORD *)(v8 + 1424) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 1424);
  *(_QWORD *)(v3 + 1424) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

void WebCore::convertDictionary<WebCore::Notification::Options>(JSC::JSCell *this@<X1>, JSC::JSGlobalObject *a2@<X0>, uint64_t a3@<X8>)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::Structure *Object;
  WTF::StringImpl *v8;
  WTF::StringImpl **v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  JSC::VM *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  unsigned __int16 v27;
  JSC::VM *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  int v34;
  WTF::StringImpl *v35;
  WTF::StringImpl *v36;
  int v37;
  WTF::StringImpl *v38;
  uint64_t v39;
  WTF::StringImpl *v40;
  JSC::VM *v41;
  _DWORD *v42;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  unint64_t v46;
  __int16 v47;
  JSC::VM *v48;
  double v49;
  __int16 v50;
  WTF::StringImpl *v51;
  uint64_t v52;
  WTF::StringImpl *v53;
  JSC::VM *v54;
  WTF::StringImpl *v55;
  WTF::StringImpl *v56;
  int v57;
  WTF::StringImpl *v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  int v63;
  int v64;
  char v65;
  int v66;
  int v67;
  int hasExceptionsAfterHandlingTraps;
  BOOL v69;
  int v70;
  uint64_t v71;
  int *v72;
  int v73;
  WTF::StringImpl *v74;
  int v75;
  WTF::StringImpl *v76;
  int v77;
  WTF::StringImpl *v78;
  int v79;
  char v80[8];
  WTF::StringImpl *v81[2];
  WTF::StringImpl *v82[2];
  _OWORD v83[2];
  __int128 v84;
  __int128 v85;
  __int128 v86;
  JSC::VM *v87;
  WTF::StringImpl *v88;
  _QWORD v89[2];

  v5 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v87 = v5;
  v6 = (unint64_t)this & 0xFFFFFFFFFFFFFFF7;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    Object = 0;
LABEL_5:
    *(_OWORD *)v82 = 0u;
    memset(v83, 0, 26);
    *(_OWORD *)v81 = 0u;
    v84 = 0uLL;
    WTF::URL::invalidate((WTF::URL *)((char *)&v84 + 8));
    v9 = (WTF::StringImpl **)MEMORY[0x1E0CBF738];
    if (v6 == 2)
      goto LABEL_11;
    WTF::AtomStringImpl::addLiteral();
    v10 = JSC::JSObject::get(Object, a2, (unint64_t)v78);
    if (v78)
    {
      if (*(_DWORD *)v78 == 2)
        WTF::StringImpl::destroy(v78, v8);
      else
        *(_DWORD *)v78 -= 2;
    }
    if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
    {
      *(_DWORD *)(a3 + 120) = 1;
      goto LABEL_133;
    }
    if (v10 == 10)
    {
LABEL_11:
      v11 = *v9;
      if (*v9)
        *(_DWORD *)v11 += 2;
LABEL_21:
      v79 = 0;
      v78 = 0;
      v14 = v81[1];
      v81[1] = v11;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v8);
        else
          *(_DWORD *)v14 -= 2;
      }
      if (v6 == 2)
        goto LABEL_30;
      WTF::AtomStringImpl::addLiteral();
      v15 = v76;
      v17 = JSC::JSObject::get(Object, a2, (unint64_t)v76);
      if (v15)
      {
        if (*(_DWORD *)v15 == 2)
          WTF::StringImpl::destroy(v15, v16);
        else
          *(_DWORD *)v15 -= 2;
      }
      if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
        goto LABEL_192;
      if (v17 == 10)
LABEL_30:
        v17 = 2;
      *(_QWORD *)&v83[0] = v17;
      v18 = WebCore::JSDOMGlobalObject::scriptExecutionContext(a2);
      if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v18 + 136))(v18) + 472) & 0x1000000000000) == 0)
      {
LABEL_47:
        if (v6 == 2)
        {
          v80[0] = 0;
          goto LABEL_82;
        }
        WTF::AtomStringImpl::addLiteral();
        v24 = v76;
        v26 = JSC::JSObject::get(Object, a2, (unint64_t)v76);
        if (v24)
        {
          if (*(_DWORD *)v24 == 2)
            WTF::StringImpl::destroy(v24, v25);
          else
            *(_DWORD *)v24 -= 2;
        }
        if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
        {
LABEL_192:
          *(_DWORD *)(a3 + 120) = 1;
          goto LABEL_131;
        }
        if (v26 == 10)
        {
          LOBYTE(v27) = 0;
          goto LABEL_66;
        }
        v28 = (JSC::VM *)*((_QWORD *)a2 + 7);
        v89[0] = v28;
        v76 = (WTF::StringImpl *)v26;
        if ((v26 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v26 + 5) != 2)
        {
          JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v76, a2);
          v29 = v74;
LABEL_61:
          v27 = WebCore::parseEnumerationFromString<WebCore::NotificationDirection>((uint64_t *)&v74);
          v74 = 0;
          if (v29)
          {
            if (*(_DWORD *)v29 == 2)
              WTF::StringImpl::destroy(v29, v30);
            else
              *(_DWORD *)v29 -= 2;
          }
          if (*((_DWORD *)v28 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v28) & 1) != 0)
            goto LABEL_192;
          if (v27 <= 0xFFu)
          {
            JSC::throwTypeError();
            goto LABEL_192;
          }
LABEL_66:
          v80[0] = v27;
          WTF::AtomStringImpl::addLiteral();
          v31 = v76;
          v33 = JSC::JSObject::get(Object, a2, (unint64_t)v76);
          if (v31)
          {
            if (*(_DWORD *)v31 == 2)
              WTF::StringImpl::destroy(v31, v32);
            else
              *(_DWORD *)v31 -= 2;
          }
          v5 = v87;
          if (*((_DWORD *)v87 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v87))
            goto LABEL_192;
          if (v33 == 10)
          {
LABEL_77:
            WTF::AtomStringImpl::addLiteral();
            v38 = v76;
            v39 = JSC::JSObject::get(Object, a2, (unint64_t)v76);
            if (v38)
            {
              if (*(_DWORD *)v38 == 2)
                WTF::StringImpl::destroy(v38, v8);
              else
                *(_DWORD *)v38 -= 2;
            }
            if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
              goto LABEL_192;
            if (v39 == 10)
            {
LABEL_82:
              v40 = *v9;
              if (*v9)
                *(_DWORD *)v40 += 2;
              goto LABEL_92;
            }
            v74 = (WTF::StringImpl *)v39;
            v41 = (JSC::VM *)*((_QWORD *)a2 + 7);
            if ((v39 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v39 + 5) != 2)
            {
              JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v74, a2);
LABEL_90:
              if (*((_DWORD *)v41 + 20))
              {
                hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v41);
                v40 = (WTF::StringImpl *)v89[0];
                if (hasExceptionsAfterHandlingTraps)
                {
                  v63 = 1;
                  v77 = 1;
                  v89[0] = 0;
                  if (v40)
                  {
                    if (*(_DWORD *)v40 == 2)
                      WTF::StringImpl::destroy(v40, v8);
                    else
                      *(_DWORD *)v40 -= 2;
                  }
                  *(_DWORD *)(a3 + 120) = 1;
LABEL_130:
                  ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32BEA70[v63])(&v74, &v76);
                  goto LABEL_131;
                }
              }
              else
              {
                v40 = (WTF::StringImpl *)v89[0];
              }
LABEL_92:
              v77 = 0;
              v76 = 0;
              v43 = v81[0];
              v81[0] = v40;
              if (v43)
              {
                if (*(_DWORD *)v43 == 2)
                  WTF::StringImpl::destroy(v43, v8);
                else
                  *(_DWORD *)v43 -= 2;
              }
              if (v6 == 2)
              {
                WORD4(v83[1]) = 0;
                goto LABEL_114;
              }
              WTF::AtomStringImpl::addLiteral();
              v44 = v74;
              v46 = JSC::JSObject::get(Object, a2, (unint64_t)v74);
              if (v44)
              {
                if (*(_DWORD *)v44 == 2)
                  WTF::StringImpl::destroy(v44, v45);
                else
                  *(_DWORD *)v44 -= 2;
              }
              if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
              {
LABEL_206:
                *(_DWORD *)(a3 + 120) = 1;
LABEL_129:
                v63 = v77;
                if (v77 == -1)
                  goto LABEL_131;
                goto LABEL_130;
              }
              if ((v46 | 8) == 0xA)
              {
                v47 = 0;
                goto LABEL_109;
              }
              v48 = (JSC::VM *)*((_QWORD *)a2 + 7);
              if (v46 >= 0xFFFE000000000000)
              {
                v69 = (_DWORD)v46 == 0;
                goto LABEL_224;
              }
              *(_QWORD *)&v49 = v46 - 0x2000000000000;
              if (v46 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
              {
                if (v49 <= 0.0)
                {
                  v50 = v49 < 0.0;
                  goto LABEL_107;
                }
              }
              else
              {
                if ((v46 & 0xFFFE000000000002) != 0)
                {
                  v50 = v46 == 7;
                  goto LABEL_107;
                }
                v70 = *(unsigned __int8 *)(v46 + 5);
                if (v70 == 3)
                {
                  v73 = *(_DWORD *)(v46 + 8);
LABEL_220:
                  v69 = v73 == 0;
                  goto LABEL_224;
                }
                if (v70 == 2)
                {
                  v71 = *(_QWORD *)(v46 + 8);
                  if ((v71 & 1) != 0)
                    v72 = (int *)(v46 + 16);
                  else
                    v72 = (int *)(v71 + 4);
                  v73 = *v72;
                  goto LABEL_220;
                }
                if ((*(_BYTE *)(16 * (*(_DWORD *)v46 & 0xFFFFFFFE) + 0xA) & 1) != 0)
                {
                  v69 = *(_QWORD *)(16 * (*(_DWORD *)v46 & 0xFFFFFFFE) + 0x28) == (_QWORD)a2;
LABEL_224:
                  v50 = !v69;
                  goto LABEL_107;
                }
              }
              v50 = 1;
LABEL_107:
              if (*((_DWORD *)v48 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v48) & 1) != 0)
                goto LABEL_206;
              v47 = v50 | 0x100;
LABEL_109:
              WORD4(v83[1]) = v47;
              WTF::AtomStringImpl::addLiteral();
              v51 = v74;
              v52 = JSC::JSObject::get(Object, a2, (unint64_t)v74);
              if (v51)
              {
                if (*(_DWORD *)v51 == 2)
                  WTF::StringImpl::destroy(v51, v8);
                else
                  *(_DWORD *)v51 -= 2;
              }
              if (*((_DWORD *)v87 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v87))
                goto LABEL_206;
              if (v52 == 10)
              {
LABEL_114:
                v53 = *v9;
                if (*v9)
                  *(_DWORD *)v53 += 2;
                goto LABEL_124;
              }
              v89[0] = v52;
              v54 = (JSC::VM *)*((_QWORD *)a2 + 7);
              if ((v52 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v52 + 5) != 2)
              {
                JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v89, a2);
LABEL_122:
                if (*((_DWORD *)v54 + 20))
                {
                  v67 = JSC::VM::hasExceptionsAfterHandlingTraps(v54);
                  v53 = v88;
                  if (v67)
                  {
                    v75 = 1;
                    v88 = 0;
                    if (v53)
                    {
                      if (*(_DWORD *)v53 == 2)
                        WTF::StringImpl::destroy(v53, v8);
                      else
                        *(_DWORD *)v53 -= 2;
                    }
                    v57 = 1;
                    goto LABEL_128;
                  }
                }
                else
                {
                  v53 = v88;
                }
LABEL_124:
                v75 = 0;
                v74 = 0;
                v56 = v82[0];
                v82[0] = v53;
                if (v56)
                {
                  if (*(_DWORD *)v56 == 2)
                  {
                    WTF::StringImpl::destroy(v56, v8);
                    v53 = v82[0];
                  }
                  else
                  {
                    *(_DWORD *)v56 -= 2;
                  }
                }
                v57 = 0;
                *(_BYTE *)a3 = v80[0];
                v58 = v82[1];
                v59 = *(_QWORD *)&v83[0];
                *(_QWORD *)(a3 + 24) = v53;
                *(_QWORD *)(a3 + 32) = v58;
                v60 = *(_OWORD *)v81;
                *(_OWORD *)v81 = 0u;
                *(_OWORD *)v82 = 0u;
                *(_OWORD *)(a3 + 8) = v60;
                *(_QWORD *)(a3 + 40) = v59;
                v61 = *(_OWORD *)((char *)v83 + 8);
                *(_OWORD *)((char *)v83 + 8) = 0u;
                *(_OWORD *)(a3 + 48) = v61;
                *(_WORD *)(a3 + 64) = WORD4(v83[1]);
                v62 = v84;
                v84 = 0u;
                *(_OWORD *)(a3 + 72) = v62;
                LODWORD(v62) = v85;
                *(_OWORD *)(a3 + 88) = v85;
                *(_OWORD *)(a3 + 104) = v86;
                LODWORD(v85) = v62 & 0xFFFFFFFE;
LABEL_128:
                *(_DWORD *)(a3 + 120) = v57;
                ((void (*)(_QWORD *, WTF::StringImpl **))off_1E32BEA70[v57])(v89, &v74);
                goto LABEL_129;
              }
              v55 = *(WTF::StringImpl **)(v52 + 8);
              if ((v55 & 1) != 0)
              {
                v55 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v52, a2);
                if (!v55)
                  goto LABEL_121;
              }
              else if (!v55)
              {
LABEL_121:
                v88 = v55;
                goto LABEL_122;
              }
              *(_DWORD *)v55 += 2;
              goto LABEL_121;
            }
            v42 = *(_DWORD **)(v39 + 8);
            if ((v42 & 1) != 0)
            {
              v42 = *(_DWORD **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v39, a2);
              if (!v42)
                goto LABEL_89;
            }
            else if (!v42)
            {
LABEL_89:
              v89[0] = v42;
              goto LABEL_90;
            }
            *v42 += 2;
            goto LABEL_89;
          }
          WebCore::valueToUSVString(a2, v33, (uint64_t)&v76);
          v34 = v77;
          if (v77)
          {
            *(_DWORD *)(a3 + 120) = 1;
            v37 = v34;
          }
          else
          {
            v35 = v76;
            v76 = 0;
            v36 = v82[1];
            v82[1] = v35;
            if (!v36)
            {
              v37 = 0;
              goto LABEL_75;
            }
            if (*(_DWORD *)v36 != 2)
            {
              v37 = 0;
              *(_DWORD *)v36 -= 2;
              goto LABEL_75;
            }
            WTF::StringImpl::destroy(v36, v8);
            v37 = v77;
          }
          if (v37 == -1)
          {
LABEL_76:
            if (v34)
              goto LABEL_131;
            goto LABEL_77;
          }
LABEL_75:
          ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32BEA70[v37])(&v74, &v76);
          goto LABEL_76;
        }
        v29 = *(WTF::StringImpl **)(v26 + 8);
        if ((v29 & 1) != 0)
        {
          v29 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v26, a2);
          if (!v29)
            goto LABEL_60;
        }
        else if (!v29)
        {
LABEL_60:
          v74 = v29;
          goto LABEL_61;
        }
        *(_DWORD *)v29 += 2;
        goto LABEL_60;
      }
      if (v6 == 2)
        goto LABEL_38;
      WTF::AtomStringImpl::addLiteral();
      v19 = v76;
      v20 = JSC::JSObject::get(Object, a2, (unint64_t)v76);
      if (v19)
      {
        if (*(_DWORD *)v19 == 2)
          WTF::StringImpl::destroy(v19, v8);
        else
          *(_DWORD *)v19 -= 2;
      }
      if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
        goto LABEL_192;
      if (v20 == 10)
      {
LABEL_38:
        v21 = *v9;
        if (*v9)
          *(_DWORD *)v21 += 2;
        v77 = 0;
      }
      else
      {
        WebCore::valueToUSVString(a2, v20, (uint64_t)&v76);
        v22 = v77;
        if (v77)
        {
          v65 = 0;
          *(_DWORD *)(a3 + 120) = 1;
LABEL_140:
          if (v22 != -1)
            ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32BEA70[v22])(&v74, &v76);
          if ((v65 & 1) == 0)
          {
LABEL_131:
            v64 = v79;
            if (v79 == -1)
            {
LABEL_133:
              WebCore::Notification::Options::~Options((WebCore::Notification::Options *)v80, v8);
              return;
            }
LABEL_132:
            ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32BEA70[v64])(&v76, &v78);
            goto LABEL_133;
          }
          goto LABEL_47;
        }
        v21 = v76;
      }
      v76 = 0;
      v23 = (WTF::StringImpl *)v84;
      *(_QWORD *)&v84 = v21;
      if (!v23)
      {
LABEL_46:
        _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJS9_SB_EEEEEEDcSF_DpT0_((uint64_t)&v74, (WTF::StringImpl *)&v76);
        goto LABEL_47;
      }
      if (*(_DWORD *)v23 != 2)
      {
        *(_DWORD *)v23 -= 2;
        goto LABEL_46;
      }
      WTF::StringImpl::destroy(v23, v8);
      v65 = 1;
      v22 = v77;
      goto LABEL_140;
    }
    v76 = (WTF::StringImpl *)v10;
    v12 = (JSC::VM *)*((_QWORD *)a2 + 7);
    if ((v10 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v10 + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v76, a2);
LABEL_19:
      if (*((_DWORD *)v12 + 20))
      {
        v66 = JSC::VM::hasExceptionsAfterHandlingTraps(v12);
        v11 = v74;
        if (v66)
        {
          v64 = 1;
          v79 = 1;
          v74 = 0;
          if (v11)
          {
            if (*(_DWORD *)v11 == 2)
              WTF::StringImpl::destroy(v11, v8);
            else
              *(_DWORD *)v11 -= 2;
          }
          *(_DWORD *)(a3 + 120) = 1;
          goto LABEL_132;
        }
      }
      else
      {
        v11 = v74;
      }
      goto LABEL_21;
    }
    v13 = *(WTF::StringImpl **)(v10 + 8);
    if ((v13 & 1) != 0)
    {
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v10, a2);
      if (!v13)
        goto LABEL_18;
    }
    else if (!v13)
    {
LABEL_18:
      v74 = v13;
      goto LABEL_19;
    }
    *(_DWORD *)v13 += 2;
    goto LABEL_18;
  }
  if (((unint64_t)this & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::Structure *)JSC::JSCell::getObject(this);
    if (Object)
      goto LABEL_5;
  }
  JSC::throwTypeError();
  *(_DWORD *)(a3 + 120) = 1;
}

uint64_t WebCore::convertEnumerationToJS<WebCore::NotificationPermission>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)(a1 + 41968);
  {
    WebCore::convertEnumerationToString(WebCore::NotificationPermission)::$_0::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::NotificationPermission)::$_1::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::NotificationPermission)::values[0] = (uint64_t)&WebCore::convertEnumerationToString(WebCore::NotificationPermission)::$_0::operator() const(void)::impl;
    unk_1EE2F48C0 = &WebCore::convertEnumerationToString(WebCore::NotificationPermission)::$_1::operator() const(void)::impl;
    WebCore::convertEnumerationToString(WebCore::NotificationPermission)::$_2::operator() const(void)::impl += 2;
    qword_1EE2F48C8 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::NotificationPermission)::$_2::operator() const(void)::impl;
  }
  v3 = WebCore::convertEnumerationToString(WebCore::NotificationPermission)::values[(int)a2];
  if (!v3)
    return *v2;
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  *(_DWORD *)v3 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_6:
      v6 = *(_QWORD *)(a1 + 64760);
      if (!v6 || v3 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v3 - 2;
      }
      goto LABEL_9;
    }
    v8 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_6;
      v9 = v10;
    }
    v6 = *(_QWORD *)(a1 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *v2;
  }
LABEL_9:
  if (v4)
    *(_DWORD *)v3 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v3, a2);
  return v6;
}

void WebCore::JSNotificationPermissionCallback::~JSNotificationPermissionCallback(WebCore::JSNotificationPermissionCallback *this, void *a2)
{
  WTF *v2;
  void *v3;

  WebCore::JSAbortAlgorithm::~JSAbortAlgorithm(this, a2);
  WTF::fastFree(v2, v3);
}

uint64_t WebCore::JSNotificationPermissionCallback::handleEvent(uint64_t a1, void *a2)
{
  uint64_t *v4;
  uint64_t v5;
  void *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  JSC::Structure *v10;
  uint64_t v11;
  uint64_t *v13;
  _QWORD *v14;
  _BYTE v15[8];
  uint64_t v16;
  WTF *v17;
  _OWORD v18[4];
  uint64_t v19;
  _BYTE v20[8];
  uint64_t *v21;

  if (!WebCore::ActiveDOMCallback::canInvokeCallback((WebCore::ActiveDOMCallback *)a1, a2))
    return 2;
  ++*(_DWORD *)(a1 + 16);
  v4 = **(uint64_t ***)(a1 + 24);
  if (!v4 || (v4[1] & 3) != 0)
    v5 = 0;
  else
    v5 = *v4;
  MEMORY[0x19AEA3294](v20, *(_QWORD *)(v5 + 56));
  v15[0] = 0;
  v16 = 0x800000000;
  v17 = (WTF *)((char *)v18 + 8);
  v19 = 0;
  memset(v18, 0, sizeof(v18));
  v6 = (void *)WebCore::convertEnumerationToJS<WebCore::NotificationPermission>(*(_QWORD *)(v5 + 56), (WTF::StringImpl *)a2);
  *((_QWORD *)&v18[0] + 1) = v6;
  LODWORD(v16) = 1;
  v21 = 0;
  v7 = *(uint64_t **)(a1 + 24);
  v8 = *v7;
  if (*v7
    && (*(_BYTE *)(v8 + 8) & 3) == 0
    && *(_QWORD *)v8
    && ((v9 = v7[2]) == 0 || (*(_BYTE *)(v9 + 8) & 3) != 0 ? (v10 = 0) : (v10 = *(JSC::Structure **)v9),
        WebCore::JSCallbackData::invokeCallback(*(JSC::JSGlobalObject **)v8, v10, 10, (uint64_t)v15, 0, 0, (uint64_t *)&v21), (v6 = v21) != 0))
  {
    WebCore::reportException(*(JSC::JSGlobalObject **)(16 * (***(_DWORD ***)(*(_QWORD *)(a1 + 24) + 16) & 0xFFFFFFFE) + 0x28), (uint64_t)v21, 0, 0, 0);
    v11 = 1;
  }
  else
  {
    v11 = 0;
  }
  if (*(_QWORD *)&v18[0])
  {
    v21 = &v16;
    v13 = *(uint64_t **)&v18[0];
    v14 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v18[0], (uint64_t *)&v21);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v13, v14);
  }
  if (v17 != (WTF *)((char *)v18 + 8) && v17)
    WTF::fastFree(v17, v6);
  MEMORY[0x19AEA32A0](v20);
  if (*(_DWORD *)(a1 + 16) == 1)
    (*(void (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
  else
    --*(_DWORD *)(a1 + 16);
  return v11;
}

_DWORD *WebCore::JSOESDrawBuffersIndexed::destroy(WebCore::JSOESDrawBuffersIndexed *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[2];
  }
  return result;
}

uint64_t WebCore::JSOESDrawBuffersIndexed::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSOESDrawBuffersIndexedOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  unint64_t v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  if (a5)
  {
    *a5 = "Reachable from jsOESDrawBuffersIndexed";
    a5[1] = 39;
  }
  v6 = atomic_load((unint64_t *)(v5 + 16));
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) == v8)
  {
    v17 = a4;
    v18 = v6;
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, (void *)v6);
    a4 = v17;
    v6 = v18;
    if ((_DWORD)result)
    {
LABEL_12:
      if (*(_BYTE *)(a4 + 131))
        (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)a4 + 152))(a4, v6);
      return 1;
    }
  }
  else
  {
    v9 = v8[1];
    v10 = (v6 + ~(v6 << 32)) ^ ((v6 + ~(v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(_QWORD *)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v15 == v6)
        goto LABEL_12;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x194D73984);
      }
    }
  }
  return result;
}

_QWORD *WebCore::JSOESDrawBuffersIndexedOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _QWORD *result;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  ++v3[2];
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_DWORD **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_DWORD **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (v3[2] == 1)
    return (_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
  --v3[2];
  return result;
}

unint64_t WebCore::wrap<WebCore::OESDrawBuffersIndexed>(uint64_t a1, uint64_t a2, WTF::StringImpl *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  JSC::JSCell *v26;
  JSC::JSObject *Object;
  uint64_t *v28;
  unint64_t SlowCase;
  uint64_t v30;
  int v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  JSC::Structure *v36;
  int v37;
  JSC::JSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  WTF *v50;
  uint64_t v51;
  uint64_t v52;
  WTF *v53;
  void *v54;
  int v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  JSC::Structure *Allocator;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  WTF::StringImpl *v66[6];
  int v67;
  int v68;
  int v69;
  JSC::Structure *v70;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          v14 = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return v14;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*((_DWORD *)a3 + 2);
  if (*(void (***)(WebCore::OESDrawBuffersIndexed *__hidden))a3 != off_1E33DD158)
  {
    __break(0xC471u);
    JUMPOUT(0x194D7416CLL);
  }
  v15 = *(_QWORD *)(a2 + 3296);
  if (v15)
  {
    v16 = *(_DWORD *)(v15 - 8);
    v17 = ((unint64_t)&WebCore::JSOESDrawBuffersIndexed::s_info
         + ~((_QWORD)&WebCore::JSOESDrawBuffersIndexed::s_info << 32)) ^ (((unint64_t)&WebCore::JSOESDrawBuffersIndexed::s_info
                                                                         + ~((_QWORD)&WebCore::JSOESDrawBuffersIndexed::s_info << 32)) >> 22);
    v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
    v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
    v20 = v16 & ((v19 >> 31) ^ v19);
    v21 = *(char ***)(v15 + 16 * v20);
    if (v21 == &WebCore::JSOESDrawBuffersIndexed::s_info)
    {
LABEL_15:
      v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
      if (v23)
        goto LABEL_38;
    }
    else
    {
      v22 = 1;
      while (v21)
      {
        v20 = ((_DWORD)v20 + v22) & v16;
        v21 = *(char ***)(v15 + 16 * v20);
        ++v22;
        if (v21 == &WebCore::JSOESDrawBuffersIndexed::s_info)
          goto LABEL_15;
      }
    }
  }
  v24 = *(_QWORD *)(a2 + 56);
  v25 = (unint64_t *)(v24 + 40136);
  v26 = *(JSC::JSCell **)(a2 + 656);
  LODWORD(v66[0]) = 23;
  if (((unint64_t)v26 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v26);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)v24);
  }
  v28 = (uint64_t *)(v24 + 38904);
  SlowCase = *v25;
  if (*v25 < *(_QWORD *)(v24 + 40144))
    goto LABEL_20;
  SlowCase = *(_QWORD *)(v24 + 40152);
  if ((SlowCase & 1) == 0)
  {
    v62 = *(_QWORD *)(SlowCase + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = SlowCase + HIDWORD(v62);
    *(_QWORD *)(v24 + 40152) = SlowCase + (int)v62;
LABEL_20:
    *v25 = SlowCase + 128;
    goto LABEL_21;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_21:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, v24, a2, v26, v66, &WebCore::JSOESDrawBuffersIndexedPrototype::s_info, 0, 0);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v30 = *v28;
  if (*(_QWORD *)(v24 + 38904) < *(_QWORD *)(v24 + 38912))
    goto LABEL_24;
  v30 = *(_QWORD *)(v24 + 38920);
  if ((v30 & 1) == 0)
  {
    v63 = *(_QWORD *)(v30 + 8) ^ *(_QWORD *)(v24 + 38928);
    *(_QWORD *)(v24 + 38912) = v30 + HIDWORD(v63);
    *(_QWORD *)(v24 + 38920) = v30 + (int)v63;
LABEL_24:
    *v28 = v30 + 16;
    goto LABEL_25;
  }
  JSC::sanitizeStackForVM();
  v30 = JSC::LocalAllocator::allocateSlowCase();
LABEL_25:
  *(_DWORD *)v30 = 0;
  v31 = *(_DWORD *)(SlowCase + 8);
  *(_DWORD *)v30 = SlowCase >> 4;
  *(_DWORD *)(v30 + 4) = v31;
  v65 = SlowCase;
  *(_QWORD *)(v30 + 8) = 0;
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<7u>((JSC::VM *)v24, (uint64_t)&WebCore::JSOESDrawBuffersIndexed::s_info, &WebCore::JSOESDrawBuffersIndexedPrototypeTableValues, (JSC::JSObject *)v30);
  v32 = *(_QWORD *)(*(_QWORD *)(v24 + 41952) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v34 = JSC::JSString::create(v24, v66);
  v35 = v66[0];
  v66[0] = 0;
  if (v35)
  {
    if (*(_DWORD *)v35 == 2)
      WTF::StringImpl::destroy(v35, v33);
    else
      *(_DWORD *)v35 -= 2;
  }
  v36 = (JSC::Structure *)(16 * (*(_DWORD *)v30 & 0xFFFFFFFE));
  v69 = *(_DWORD *)v30;
  v70 = v36;
  v37 = JSC::Structure::outOfLineCapacity(v36);
  v67 = 0;
  v68 = v37;
  v66[0] = (WTF::StringImpl *)&v68;
  v66[1] = (WTF::StringImpl *)v30;
  v66[2] = (WTF::StringImpl *)v24;
  v66[3] = (WTF::StringImpl *)&v69;
  v66[4] = (WTF::StringImpl *)&v70;
  v66[5] = (WTF::StringImpl *)&v67;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v36, (JSC::VM *)v24, v32, 6, (uint64_t)v66);
  if ((*(_BYTE *)((16 * *(unsigned int *)v30) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(v30, v24, v67, v34);
  *((_DWORD *)v36 + 4) |= 0x10u;
  LODWORD(v66[0]) = 23;
  if ((v30 & 0xFFFE000000000002) == 0)
  {
    v38 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v30);
    if (v38)
      JSC::JSObject::didBecomePrototype(v38, (JSC::VM *)v24);
  }
  v39 = *v25;
  if (*v25 >= *(_QWORD *)(v24 + 40144))
  {
    v39 = *(_QWORD *)(v24 + 40152);
    if ((v39 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v39 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_35;
    }
    v64 = *(_QWORD *)(v39 + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = v39 + HIDWORD(v64);
    *(_QWORD *)(v24 + 40152) = v39 + (int)v64;
  }
  *v25 = v39 + 128;
LABEL_35:
  *(_DWORD *)v39 = 0;
  MEMORY[0x19AEA4278](v39, v24, a2, v30, v66, &WebCore::JSOESDrawBuffersIndexed::s_info, 0, 0, v65);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v23 = WebCore::cacheDOMStructure((JSCell *)a2, v39, (uint64_t)&WebCore::JSOESDrawBuffersIndexed::s_info);
LABEL_38:
  v40 = *(_QWORD *)(a2 + 56);
  v41 = *(_QWORD *)(v40 + 41456);
  v42 = *(_QWORD *)(v41 + 23536);
  v43 = *(_QWORD **)(v42 + 5112);
  if (v43)
    goto LABEL_58;
  v44 = *(_QWORD *)(v41 + 22648);
  if (__ldaxr((unsigned __int8 *)v44))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v44))
  {
    goto LABEL_43;
  }
  MEMORY[0x19AEA534C](v44);
LABEL_43:
  v46 = *(_QWORD *)(v44 + 2824);
  if (!*(_QWORD *)(v46 + 5112))
  {
    v47 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)v66, "IsoSpace T");
    v70 = 0;
    MEMORY[0x19AEA3204](v47, v66, v40 + 192, v40 + 1872, 32, 8, &v70);
    v49 = (uint64_t)v70;
    v70 = 0;
    if (v49)
      (*(void (**)(uint64_t))(*(_QWORD *)v49 + 8))(v49);
    v50 = v66[0];
    v66[0] = 0;
    if (v50)
    {
      if (*(_DWORD *)v50 == 1)
        WTF::fastFree(v50, v48);
      else
        --*(_DWORD *)v50;
    }
    v51 = *(_QWORD *)(v46 + 5112);
    *(_QWORD *)(v46 + 5112) = v47;
    if (v51)
      (*(void (**)(uint64_t))(*(_QWORD *)v51 + 8))(v51);
  }
  v43 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v52 = *(_QWORD *)(v42 + 5112);
  *(_QWORD *)(v42 + 5112) = v43;
  if (v52)
  {
    v53 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v53, v54);
  }
  v55 = __ldxr((unsigned __int8 *)v44);
  if (v55 != 1)
  {
    __clrex();
    goto LABEL_57;
  }
  if (__stlxr(0, (unsigned __int8 *)v44))
LABEL_57:
    WTF::Lock::unlockSlow((WTF::Lock *)v44);
LABEL_58:
  v14 = v43[3];
  if (v14 >= v43[4])
  {
    v14 = v43[5];
    if ((v14 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v14 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_60;
    }
    v61 = *(_QWORD *)(v14 + 8) ^ v43[6];
    v43[4] = v14 + HIDWORD(v61);
    v43[5] = v14 + (int)v61;
  }
  v43[3] = v14 + 32;
LABEL_60:
  *(_DWORD *)v14 = 0;
  WebCore::JSDOMObject::JSDOMObject(v14, v23);
  *(_QWORD *)(v14 + 24) = a3;
  if (*(_BYTE *)(v40 + 755))
    __dmb(0xAu);
  v56 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE336228 & 1) == 0)
  {
    qword_1EE336220 = (uint64_t)&off_1E32BE7A8;
    byte_1EE336228 = 1;
  }
  v66[0] = a3;
  if ((v14 & 8) != 0)
    v57 = (v14 - 112) | 1;
  else
    v57 = v14 & 0xFFFFFFFFFFFFC000;
  if ((v57 & 1) != 0)
    v58 = v57 + 47;
  else
    v58 = *(_QWORD *)v57 + 32;
  Allocator = *(JSC::Structure **)(v58 + 16);
  if (!Allocator)
    Allocator = (JSC::Structure *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v58 + 16) = *(_QWORD *)Allocator;
  *(_QWORD *)Allocator = v14;
  *((_QWORD *)Allocator + 1) = &qword_1EE336220;
  *((_QWORD *)Allocator + 2) = v56;
  v70 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v56 + 32), (uint64_t *)v66, (uint64_t *)&v70);
  if (v70)
    *((_QWORD *)v70 + 1) = 3;
  return v14;
}

_DWORD *WebCore::JSOESElementIndexUint::destroy(WebCore::JSOESElementIndexUint *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[2];
  }
  return result;
}

uint64_t WebCore::JSOESElementIndexUint::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSOESElementIndexUintOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  unint64_t v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  if (a5)
  {
    *a5 = "Reachable from jsOESElementIndexUint";
    a5[1] = 37;
  }
  v6 = atomic_load((unint64_t *)(v5 + 16));
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) == v8)
  {
    v17 = a4;
    v18 = v6;
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, (void *)v6);
    a4 = v17;
    v6 = v18;
    if ((_DWORD)result)
    {
LABEL_12:
      if (*(_BYTE *)(a4 + 131))
        (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)a4 + 152))(a4, v6);
      return 1;
    }
  }
  else
  {
    v9 = v8[1];
    v10 = (v6 + ~(v6 << 32)) ^ ((v6 + ~(v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(_QWORD *)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v15 == v6)
        goto LABEL_12;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x194D74530);
      }
    }
  }
  return result;
}

_QWORD *WebCore::JSOESElementIndexUintOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _QWORD *result;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  ++v3[2];
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_DWORD **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_DWORD **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (v3[2] == 1)
    return (_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
  --v3[2];
  return result;
}

unint64_t WebCore::wrap<WebCore::OESElementIndexUint>(uint64_t a1, uint64_t a2, WTF::StringImpl *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  JSC::JSCell *v26;
  JSC::JSObject *Object;
  uint64_t *v28;
  unint64_t SlowCase;
  uint64_t v30;
  int v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  JSC::Structure *v36;
  int v37;
  JSC::JSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  WTF *v50;
  uint64_t v51;
  uint64_t v52;
  WTF *v53;
  void *v54;
  int v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  JSC::Structure *Allocator;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  WTF::StringImpl *v66[6];
  int v67;
  int v68;
  int v69;
  JSC::Structure *v70;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          v14 = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return v14;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*((_DWORD *)a3 + 2);
  if (*(void (***)(WebCore::OESElementIndexUint *__hidden))a3 != off_1E33DD178)
  {
    __break(0xC471u);
    JUMPOUT(0x194D74CFCLL);
  }
  v15 = *(_QWORD *)(a2 + 3296);
  if (v15)
  {
    v16 = *(_DWORD *)(v15 - 8);
    v17 = ((unint64_t)&WebCore::JSOESElementIndexUint::s_info
         + ~((_QWORD)&WebCore::JSOESElementIndexUint::s_info << 32)) ^ (((unint64_t)&WebCore::JSOESElementIndexUint::s_info
                                                                       + ~((_QWORD)&WebCore::JSOESElementIndexUint::s_info << 32)) >> 22);
    v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
    v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
    v20 = v16 & ((v19 >> 31) ^ v19);
    v21 = *(char ***)(v15 + 16 * v20);
    if (v21 == &WebCore::JSOESElementIndexUint::s_info)
    {
LABEL_15:
      v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
      if (v23)
        goto LABEL_38;
    }
    else
    {
      v22 = 1;
      while (v21)
      {
        v20 = ((_DWORD)v20 + v22) & v16;
        v21 = *(char ***)(v15 + 16 * v20);
        ++v22;
        if (v21 == &WebCore::JSOESElementIndexUint::s_info)
          goto LABEL_15;
      }
    }
  }
  v24 = *(_QWORD *)(a2 + 56);
  v25 = (unint64_t *)(v24 + 40136);
  v26 = *(JSC::JSCell **)(a2 + 656);
  LODWORD(v66[0]) = 23;
  if (((unint64_t)v26 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v26);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)v24);
  }
  v28 = (uint64_t *)(v24 + 38904);
  SlowCase = *v25;
  if (*v25 < *(_QWORD *)(v24 + 40144))
    goto LABEL_20;
  SlowCase = *(_QWORD *)(v24 + 40152);
  if ((SlowCase & 1) == 0)
  {
    v62 = *(_QWORD *)(SlowCase + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = SlowCase + HIDWORD(v62);
    *(_QWORD *)(v24 + 40152) = SlowCase + (int)v62;
LABEL_20:
    *v25 = SlowCase + 128;
    goto LABEL_21;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_21:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, v24, a2, v26, v66, &WebCore::JSOESElementIndexUintPrototype::s_info, 0, 0);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v30 = *v28;
  if (*(_QWORD *)(v24 + 38904) < *(_QWORD *)(v24 + 38912))
    goto LABEL_24;
  v30 = *(_QWORD *)(v24 + 38920);
  if ((v30 & 1) == 0)
  {
    v63 = *(_QWORD *)(v30 + 8) ^ *(_QWORD *)(v24 + 38928);
    *(_QWORD *)(v24 + 38912) = v30 + HIDWORD(v63);
    *(_QWORD *)(v24 + 38920) = v30 + (int)v63;
LABEL_24:
    *v28 = v30 + 16;
    goto LABEL_25;
  }
  JSC::sanitizeStackForVM();
  v30 = JSC::LocalAllocator::allocateSlowCase();
LABEL_25:
  *(_DWORD *)v30 = 0;
  v31 = *(_DWORD *)(SlowCase + 8);
  *(_DWORD *)v30 = SlowCase >> 4;
  *(_DWORD *)(v30 + 4) = v31;
  v65 = SlowCase;
  *(_QWORD *)(v30 + 8) = 0;
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v32 = *(_QWORD *)(*(_QWORD *)(v24 + 41952) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v34 = JSC::JSString::create(v24, v66);
  v35 = v66[0];
  v66[0] = 0;
  if (v35)
  {
    if (*(_DWORD *)v35 == 2)
      WTF::StringImpl::destroy(v35, v33);
    else
      *(_DWORD *)v35 -= 2;
  }
  v36 = (JSC::Structure *)(16 * (*(_DWORD *)v30 & 0xFFFFFFFE));
  v69 = *(_DWORD *)v30;
  v70 = v36;
  v37 = JSC::Structure::outOfLineCapacity(v36);
  v67 = 0;
  v68 = v37;
  v66[0] = (WTF::StringImpl *)&v68;
  v66[1] = (WTF::StringImpl *)v30;
  v66[2] = (WTF::StringImpl *)v24;
  v66[3] = (WTF::StringImpl *)&v69;
  v66[4] = (WTF::StringImpl *)&v70;
  v66[5] = (WTF::StringImpl *)&v67;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v36, (JSC::VM *)v24, v32, 6, (uint64_t)v66);
  if ((*(_BYTE *)((16 * *(unsigned int *)v30) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(v30, v24, v67, v34);
  *((_DWORD *)v36 + 4) |= 0x10u;
  LODWORD(v66[0]) = 23;
  if ((v30 & 0xFFFE000000000002) == 0)
  {
    v38 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v30);
    if (v38)
      JSC::JSObject::didBecomePrototype(v38, (JSC::VM *)v24);
  }
  v39 = *v25;
  if (*v25 >= *(_QWORD *)(v24 + 40144))
  {
    v39 = *(_QWORD *)(v24 + 40152);
    if ((v39 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v39 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_35;
    }
    v64 = *(_QWORD *)(v39 + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = v39 + HIDWORD(v64);
    *(_QWORD *)(v24 + 40152) = v39 + (int)v64;
  }
  *v25 = v39 + 128;
LABEL_35:
  *(_DWORD *)v39 = 0;
  MEMORY[0x19AEA4278](v39, v24, a2, v30, v66, &WebCore::JSOESElementIndexUint::s_info, 0, 0, v65);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v23 = WebCore::cacheDOMStructure((JSCell *)a2, v39, (uint64_t)&WebCore::JSOESElementIndexUint::s_info);
LABEL_38:
  v40 = *(_QWORD *)(a2 + 56);
  v41 = *(_QWORD *)(v40 + 41456);
  v42 = *(_QWORD *)(v41 + 23536);
  v43 = *(_QWORD **)(v42 + 5120);
  if (v43)
    goto LABEL_58;
  v44 = *(_QWORD *)(v41 + 22648);
  if (__ldaxr((unsigned __int8 *)v44))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v44))
  {
    goto LABEL_43;
  }
  MEMORY[0x19AEA534C](v44);
LABEL_43:
  v46 = *(_QWORD *)(v44 + 2824);
  if (!*(_QWORD *)(v46 + 5120))
  {
    v47 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)v66, "IsoSpace T");
    v70 = 0;
    MEMORY[0x19AEA3204](v47, v66, v40 + 192, v40 + 1872, 32, 8, &v70);
    v49 = (uint64_t)v70;
    v70 = 0;
    if (v49)
      (*(void (**)(uint64_t))(*(_QWORD *)v49 + 8))(v49);
    v50 = v66[0];
    v66[0] = 0;
    if (v50)
    {
      if (*(_DWORD *)v50 == 1)
        WTF::fastFree(v50, v48);
      else
        --*(_DWORD *)v50;
    }
    v51 = *(_QWORD *)(v46 + 5120);
    *(_QWORD *)(v46 + 5120) = v47;
    if (v51)
      (*(void (**)(uint64_t))(*(_QWORD *)v51 + 8))(v51);
  }
  v43 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v52 = *(_QWORD *)(v42 + 5120);
  *(_QWORD *)(v42 + 5120) = v43;
  if (v52)
  {
    v53 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v53, v54);
  }
  v55 = __ldxr((unsigned __int8 *)v44);
  if (v55 != 1)
  {
    __clrex();
    goto LABEL_57;
  }
  if (__stlxr(0, (unsigned __int8 *)v44))
LABEL_57:
    WTF::Lock::unlockSlow((WTF::Lock *)v44);
LABEL_58:
  v14 = v43[3];
  if (v14 >= v43[4])
  {
    v14 = v43[5];
    if ((v14 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v14 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_60;
    }
    v61 = *(_QWORD *)(v14 + 8) ^ v43[6];
    v43[4] = v14 + HIDWORD(v61);
    v43[5] = v14 + (int)v61;
  }
  v43[3] = v14 + 32;
LABEL_60:
  *(_DWORD *)v14 = 0;
  WebCore::JSDOMObject::JSDOMObject(v14, v23);
  *(_QWORD *)(v14 + 24) = a3;
  if (*(_BYTE *)(v40 + 755))
    __dmb(0xAu);
  v56 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE336238 & 1) == 0)
  {
    qword_1EE336230 = (uint64_t)&off_1E32BE7D8;
    byte_1EE336238 = 1;
  }
  v66[0] = a3;
  if ((v14 & 8) != 0)
    v57 = (v14 - 112) | 1;
  else
    v57 = v14 & 0xFFFFFFFFFFFFC000;
  if ((v57 & 1) != 0)
    v58 = v57 + 47;
  else
    v58 = *(_QWORD *)v57 + 32;
  Allocator = *(JSC::Structure **)(v58 + 16);
  if (!Allocator)
    Allocator = (JSC::Structure *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v58 + 16) = *(_QWORD *)Allocator;
  *(_QWORD *)Allocator = v14;
  *((_QWORD *)Allocator + 1) = &qword_1EE336230;
  *((_QWORD *)Allocator + 2) = v56;
  v70 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v56 + 32), (uint64_t *)v66, (uint64_t *)&v70);
  if (v70)
    *((_QWORD *)v70 + 1) = 3;
  return v14;
}

_DWORD *WebCore::JSOESFBORenderMipmap::destroy(WebCore::JSOESFBORenderMipmap *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[2];
  }
  return result;
}

uint64_t WebCore::JSOESFBORenderMipmap::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSOESFBORenderMipmapOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  unint64_t v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  if (a5)
  {
    *a5 = "Reachable from jsOESFBORenderMipmap";
    a5[1] = 36;
  }
  v6 = atomic_load((unint64_t *)(v5 + 16));
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) == v8)
  {
    v17 = a4;
    v18 = v6;
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, (void *)v6);
    a4 = v17;
    v6 = v18;
    if ((_DWORD)result)
    {
LABEL_12:
      if (*(_BYTE *)(a4 + 131))
        (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)a4 + 152))(a4, v6);
      return 1;
    }
  }
  else
  {
    v9 = v8[1];
    v10 = (v6 + ~(v6 << 32)) ^ ((v6 + ~(v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(_QWORD *)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v15 == v6)
        goto LABEL_12;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x194D750C0);
      }
    }
  }
  return result;
}

_QWORD *WebCore::JSOESFBORenderMipmapOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _QWORD *result;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  ++v3[2];
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_DWORD **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_DWORD **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (v3[2] == 1)
    return (_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
  --v3[2];
  return result;
}

unint64_t WebCore::wrap<WebCore::OESFBORenderMipmap>(uint64_t a1, uint64_t a2, WTF::StringImpl *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  JSC::JSCell *v26;
  JSC::JSObject *Object;
  uint64_t *v28;
  unint64_t SlowCase;
  uint64_t v30;
  int v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  JSC::Structure *v36;
  int v37;
  JSC::JSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  WTF *v50;
  uint64_t v51;
  uint64_t v52;
  WTF *v53;
  void *v54;
  int v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  JSC::Structure *Allocator;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  WTF::StringImpl *v66[6];
  int v67;
  int v68;
  int v69;
  JSC::Structure *v70;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          v14 = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return v14;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*((_DWORD *)a3 + 2);
  if (*(void (***)(WebCore::OESFBORenderMipmap *__hidden))a3 != off_1E33DD1F8)
  {
    __break(0xC471u);
    JUMPOUT(0x194D7588CLL);
  }
  v15 = *(_QWORD *)(a2 + 3296);
  if (v15)
  {
    v16 = *(_DWORD *)(v15 - 8);
    v17 = ((unint64_t)&WebCore::JSOESFBORenderMipmap::s_info
         + ~((_QWORD)&WebCore::JSOESFBORenderMipmap::s_info << 32)) ^ (((unint64_t)&WebCore::JSOESFBORenderMipmap::s_info
                                                                      + ~((_QWORD)&WebCore::JSOESFBORenderMipmap::s_info << 32)) >> 22);
    v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
    v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
    v20 = v16 & ((v19 >> 31) ^ v19);
    v21 = *(char ***)(v15 + 16 * v20);
    if (v21 == &WebCore::JSOESFBORenderMipmap::s_info)
    {
LABEL_15:
      v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
      if (v23)
        goto LABEL_38;
    }
    else
    {
      v22 = 1;
      while (v21)
      {
        v20 = ((_DWORD)v20 + v22) & v16;
        v21 = *(char ***)(v15 + 16 * v20);
        ++v22;
        if (v21 == &WebCore::JSOESFBORenderMipmap::s_info)
          goto LABEL_15;
      }
    }
  }
  v24 = *(_QWORD *)(a2 + 56);
  v25 = (unint64_t *)(v24 + 40136);
  v26 = *(JSC::JSCell **)(a2 + 656);
  LODWORD(v66[0]) = 23;
  if (((unint64_t)v26 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v26);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)v24);
  }
  v28 = (uint64_t *)(v24 + 38904);
  SlowCase = *v25;
  if (*v25 < *(_QWORD *)(v24 + 40144))
    goto LABEL_20;
  SlowCase = *(_QWORD *)(v24 + 40152);
  if ((SlowCase & 1) == 0)
  {
    v62 = *(_QWORD *)(SlowCase + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = SlowCase + HIDWORD(v62);
    *(_QWORD *)(v24 + 40152) = SlowCase + (int)v62;
LABEL_20:
    *v25 = SlowCase + 128;
    goto LABEL_21;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_21:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, v24, a2, v26, v66, &WebCore::JSOESFBORenderMipmapPrototype::s_info, 0, 0);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v30 = *v28;
  if (*(_QWORD *)(v24 + 38904) < *(_QWORD *)(v24 + 38912))
    goto LABEL_24;
  v30 = *(_QWORD *)(v24 + 38920);
  if ((v30 & 1) == 0)
  {
    v63 = *(_QWORD *)(v30 + 8) ^ *(_QWORD *)(v24 + 38928);
    *(_QWORD *)(v24 + 38912) = v30 + HIDWORD(v63);
    *(_QWORD *)(v24 + 38920) = v30 + (int)v63;
LABEL_24:
    *v28 = v30 + 16;
    goto LABEL_25;
  }
  JSC::sanitizeStackForVM();
  v30 = JSC::LocalAllocator::allocateSlowCase();
LABEL_25:
  *(_DWORD *)v30 = 0;
  v31 = *(_DWORD *)(SlowCase + 8);
  *(_DWORD *)v30 = SlowCase >> 4;
  *(_DWORD *)(v30 + 4) = v31;
  v65 = SlowCase;
  *(_QWORD *)(v30 + 8) = 0;
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v32 = *(_QWORD *)(*(_QWORD *)(v24 + 41952) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v34 = JSC::JSString::create(v24, v66);
  v35 = v66[0];
  v66[0] = 0;
  if (v35)
  {
    if (*(_DWORD *)v35 == 2)
      WTF::StringImpl::destroy(v35, v33);
    else
      *(_DWORD *)v35 -= 2;
  }
  v36 = (JSC::Structure *)(16 * (*(_DWORD *)v30 & 0xFFFFFFFE));
  v69 = *(_DWORD *)v30;
  v70 = v36;
  v37 = JSC::Structure::outOfLineCapacity(v36);
  v67 = 0;
  v68 = v37;
  v66[0] = (WTF::StringImpl *)&v68;
  v66[1] = (WTF::StringImpl *)v30;
  v66[2] = (WTF::StringImpl *)v24;
  v66[3] = (WTF::StringImpl *)&v69;
  v66[4] = (WTF::StringImpl *)&v70;
  v66[5] = (WTF::StringImpl *)&v67;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v36, (JSC::VM *)v24, v32, 6, (uint64_t)v66);
  if ((*(_BYTE *)((16 * *(unsigned int *)v30) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(v30, v24, v67, v34);
  *((_DWORD *)v36 + 4) |= 0x10u;
  LODWORD(v66[0]) = 23;
  if ((v30 & 0xFFFE000000000002) == 0)
  {
    v38 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v30);
    if (v38)
      JSC::JSObject::didBecomePrototype(v38, (JSC::VM *)v24);
  }
  v39 = *v25;
  if (*v25 >= *(_QWORD *)(v24 + 40144))
  {
    v39 = *(_QWORD *)(v24 + 40152);
    if ((v39 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v39 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_35;
    }
    v64 = *(_QWORD *)(v39 + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = v39 + HIDWORD(v64);
    *(_QWORD *)(v24 + 40152) = v39 + (int)v64;
  }
  *v25 = v39 + 128;
LABEL_35:
  *(_DWORD *)v39 = 0;
  MEMORY[0x19AEA4278](v39, v24, a2, v30, v66, &WebCore::JSOESFBORenderMipmap::s_info, 0, 0, v65);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v23 = WebCore::cacheDOMStructure((JSCell *)a2, v39, (uint64_t)&WebCore::JSOESFBORenderMipmap::s_info);
LABEL_38:
  v40 = *(_QWORD *)(a2 + 56);
  v41 = *(_QWORD *)(v40 + 41456);
  v42 = *(_QWORD *)(v41 + 23536);
  v43 = *(_QWORD **)(v42 + 5128);
  if (v43)
    goto LABEL_58;
  v44 = *(_QWORD *)(v41 + 22648);
  if (__ldaxr((unsigned __int8 *)v44))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v44))
  {
    goto LABEL_43;
  }
  MEMORY[0x19AEA534C](v44);
LABEL_43:
  v46 = *(_QWORD *)(v44 + 2824);
  if (!*(_QWORD *)(v46 + 5128))
  {
    v47 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)v66, "IsoSpace T");
    v70 = 0;
    MEMORY[0x19AEA3204](v47, v66, v40 + 192, v40 + 1872, 32, 8, &v70);
    v49 = (uint64_t)v70;
    v70 = 0;
    if (v49)
      (*(void (**)(uint64_t))(*(_QWORD *)v49 + 8))(v49);
    v50 = v66[0];
    v66[0] = 0;
    if (v50)
    {
      if (*(_DWORD *)v50 == 1)
        WTF::fastFree(v50, v48);
      else
        --*(_DWORD *)v50;
    }
    v51 = *(_QWORD *)(v46 + 5128);
    *(_QWORD *)(v46 + 5128) = v47;
    if (v51)
      (*(void (**)(uint64_t))(*(_QWORD *)v51 + 8))(v51);
  }
  v43 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v52 = *(_QWORD *)(v42 + 5128);
  *(_QWORD *)(v42 + 5128) = v43;
  if (v52)
  {
    v53 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v53, v54);
  }
  v55 = __ldxr((unsigned __int8 *)v44);
  if (v55 != 1)
  {
    __clrex();
    goto LABEL_57;
  }
  if (__stlxr(0, (unsigned __int8 *)v44))
LABEL_57:
    WTF::Lock::unlockSlow((WTF::Lock *)v44);
LABEL_58:
  v14 = v43[3];
  if (v14 >= v43[4])
  {
    v14 = v43[5];
    if ((v14 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v14 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_60;
    }
    v61 = *(_QWORD *)(v14 + 8) ^ v43[6];
    v43[4] = v14 + HIDWORD(v61);
    v43[5] = v14 + (int)v61;
  }
  v43[3] = v14 + 32;
LABEL_60:
  *(_DWORD *)v14 = 0;
  WebCore::JSDOMObject::JSDOMObject(v14, v23);
  *(_QWORD *)(v14 + 24) = a3;
  if (*(_BYTE *)(v40 + 755))
    __dmb(0xAu);
  v56 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE336248 & 1) == 0)
  {
    qword_1EE336240 = (uint64_t)&off_1E32BE808;
    byte_1EE336248 = 1;
  }
  v66[0] = a3;
  if ((v14 & 8) != 0)
    v57 = (v14 - 112) | 1;
  else
    v57 = v14 & 0xFFFFFFFFFFFFC000;
  if ((v57 & 1) != 0)
    v58 = v57 + 47;
  else
    v58 = *(_QWORD *)v57 + 32;
  Allocator = *(JSC::Structure **)(v58 + 16);
  if (!Allocator)
    Allocator = (JSC::Structure *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v58 + 16) = *(_QWORD *)Allocator;
  *(_QWORD *)Allocator = v14;
  *((_QWORD *)Allocator + 1) = &qword_1EE336240;
  *((_QWORD *)Allocator + 2) = v56;
  v70 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v56 + 32), (uint64_t *)v66, (uint64_t *)&v70);
  if (v70)
    *((_QWORD *)v70 + 1) = 3;
  return v14;
}

_DWORD *WebCore::JSOESSampleVariables::destroy(WebCore::JSOESSampleVariables *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[2];
  }
  return result;
}

uint64_t WebCore::JSOESSampleVariables::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSOESSampleVariablesOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  unint64_t v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  if (a5)
  {
    *a5 = "Reachable from jsOESSampleVariables";
    a5[1] = 36;
  }
  v6 = atomic_load((unint64_t *)(v5 + 16));
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) == v8)
  {
    v17 = a4;
    v18 = v6;
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, (void *)v6);
    a4 = v17;
    v6 = v18;
    if ((_DWORD)result)
    {
LABEL_12:
      if (*(_BYTE *)(a4 + 131))
        (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)a4 + 152))(a4, v6);
      return 1;
    }
  }
  else
  {
    v9 = v8[1];
    v10 = (v6 + ~(v6 << 32)) ^ ((v6 + ~(v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(_QWORD *)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v15 == v6)
        goto LABEL_12;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x194D75C50);
      }
    }
  }
  return result;
}

_QWORD *WebCore::JSOESSampleVariablesOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _QWORD *result;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  ++v3[2];
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_DWORD **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_DWORD **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (v3[2] == 1)
    return (_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
  --v3[2];
  return result;
}

unint64_t WebCore::wrap<WebCore::OESSampleVariables>(uint64_t a1, uint64_t a2, WTF::StringImpl *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  JSC::JSCell *v26;
  JSC::JSObject *Object;
  uint64_t *v28;
  unint64_t SlowCase;
  uint64_t v30;
  int v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  JSC::Structure *v36;
  int v37;
  JSC::JSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  WTF *v50;
  uint64_t v51;
  uint64_t v52;
  WTF *v53;
  void *v54;
  int v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  JSC::Structure *Allocator;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  WTF::StringImpl *v66[6];
  int v67;
  int v68;
  int v69;
  JSC::Structure *v70;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          v14 = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return v14;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*((_DWORD *)a3 + 2);
  if (*(void (***)(WebCore::OESSampleVariables *__hidden))a3 != off_1E33DD218)
  {
    __break(0xC471u);
    JUMPOUT(0x194D7641CLL);
  }
  v15 = *(_QWORD *)(a2 + 3296);
  if (v15)
  {
    v16 = *(_DWORD *)(v15 - 8);
    v17 = ((unint64_t)&WebCore::JSOESSampleVariables::s_info
         + ~((_QWORD)&WebCore::JSOESSampleVariables::s_info << 32)) ^ (((unint64_t)&WebCore::JSOESSampleVariables::s_info
                                                                      + ~((_QWORD)&WebCore::JSOESSampleVariables::s_info << 32)) >> 22);
    v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
    v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
    v20 = v16 & ((v19 >> 31) ^ v19);
    v21 = *(char ***)(v15 + 16 * v20);
    if (v21 == &WebCore::JSOESSampleVariables::s_info)
    {
LABEL_15:
      v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
      if (v23)
        goto LABEL_38;
    }
    else
    {
      v22 = 1;
      while (v21)
      {
        v20 = ((_DWORD)v20 + v22) & v16;
        v21 = *(char ***)(v15 + 16 * v20);
        ++v22;
        if (v21 == &WebCore::JSOESSampleVariables::s_info)
          goto LABEL_15;
      }
    }
  }
  v24 = *(_QWORD *)(a2 + 56);
  v25 = (unint64_t *)(v24 + 40136);
  v26 = *(JSC::JSCell **)(a2 + 656);
  LODWORD(v66[0]) = 23;
  if (((unint64_t)v26 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v26);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)v24);
  }
  v28 = (uint64_t *)(v24 + 38904);
  SlowCase = *v25;
  if (*v25 < *(_QWORD *)(v24 + 40144))
    goto LABEL_20;
  SlowCase = *(_QWORD *)(v24 + 40152);
  if ((SlowCase & 1) == 0)
  {
    v62 = *(_QWORD *)(SlowCase + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = SlowCase + HIDWORD(v62);
    *(_QWORD *)(v24 + 40152) = SlowCase + (int)v62;
LABEL_20:
    *v25 = SlowCase + 128;
    goto LABEL_21;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_21:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, v24, a2, v26, v66, &WebCore::JSOESSampleVariablesPrototype::s_info, 0, 0);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v30 = *v28;
  if (*(_QWORD *)(v24 + 38904) < *(_QWORD *)(v24 + 38912))
    goto LABEL_24;
  v30 = *(_QWORD *)(v24 + 38920);
  if ((v30 & 1) == 0)
  {
    v63 = *(_QWORD *)(v30 + 8) ^ *(_QWORD *)(v24 + 38928);
    *(_QWORD *)(v24 + 38912) = v30 + HIDWORD(v63);
    *(_QWORD *)(v24 + 38920) = v30 + (int)v63;
LABEL_24:
    *v28 = v30 + 16;
    goto LABEL_25;
  }
  JSC::sanitizeStackForVM();
  v30 = JSC::LocalAllocator::allocateSlowCase();
LABEL_25:
  *(_DWORD *)v30 = 0;
  v31 = *(_DWORD *)(SlowCase + 8);
  *(_DWORD *)v30 = SlowCase >> 4;
  *(_DWORD *)(v30 + 4) = v31;
  v65 = SlowCase;
  *(_QWORD *)(v30 + 8) = 0;
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v32 = *(_QWORD *)(*(_QWORD *)(v24 + 41952) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v34 = JSC::JSString::create(v24, v66);
  v35 = v66[0];
  v66[0] = 0;
  if (v35)
  {
    if (*(_DWORD *)v35 == 2)
      WTF::StringImpl::destroy(v35, v33);
    else
      *(_DWORD *)v35 -= 2;
  }
  v36 = (JSC::Structure *)(16 * (*(_DWORD *)v30 & 0xFFFFFFFE));
  v69 = *(_DWORD *)v30;
  v70 = v36;
  v37 = JSC::Structure::outOfLineCapacity(v36);
  v67 = 0;
  v68 = v37;
  v66[0] = (WTF::StringImpl *)&v68;
  v66[1] = (WTF::StringImpl *)v30;
  v66[2] = (WTF::StringImpl *)v24;
  v66[3] = (WTF::StringImpl *)&v69;
  v66[4] = (WTF::StringImpl *)&v70;
  v66[5] = (WTF::StringImpl *)&v67;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v36, (JSC::VM *)v24, v32, 6, (uint64_t)v66);
  if ((*(_BYTE *)((16 * *(unsigned int *)v30) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(v30, v24, v67, v34);
  *((_DWORD *)v36 + 4) |= 0x10u;
  LODWORD(v66[0]) = 23;
  if ((v30 & 0xFFFE000000000002) == 0)
  {
    v38 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v30);
    if (v38)
      JSC::JSObject::didBecomePrototype(v38, (JSC::VM *)v24);
  }
  v39 = *v25;
  if (*v25 >= *(_QWORD *)(v24 + 40144))
  {
    v39 = *(_QWORD *)(v24 + 40152);
    if ((v39 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v39 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_35;
    }
    v64 = *(_QWORD *)(v39 + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = v39 + HIDWORD(v64);
    *(_QWORD *)(v24 + 40152) = v39 + (int)v64;
  }
  *v25 = v39 + 128;
LABEL_35:
  *(_DWORD *)v39 = 0;
  MEMORY[0x19AEA4278](v39, v24, a2, v30, v66, &WebCore::JSOESSampleVariables::s_info, 0, 0, v65);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v23 = WebCore::cacheDOMStructure((JSCell *)a2, v39, (uint64_t)&WebCore::JSOESSampleVariables::s_info);
LABEL_38:
  v40 = *(_QWORD *)(a2 + 56);
  v41 = *(_QWORD *)(v40 + 41456);
  v42 = *(_QWORD *)(v41 + 23536);
  v43 = *(_QWORD **)(v42 + 5136);
  if (v43)
    goto LABEL_58;
  v44 = *(_QWORD *)(v41 + 22648);
  if (__ldaxr((unsigned __int8 *)v44))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v44))
  {
    goto LABEL_43;
  }
  MEMORY[0x19AEA534C](v44);
LABEL_43:
  v46 = *(_QWORD *)(v44 + 2824);
  if (!*(_QWORD *)(v46 + 5136))
  {
    v47 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)v66, "IsoSpace T");
    v70 = 0;
    MEMORY[0x19AEA3204](v47, v66, v40 + 192, v40 + 1872, 32, 8, &v70);
    v49 = (uint64_t)v70;
    v70 = 0;
    if (v49)
      (*(void (**)(uint64_t))(*(_QWORD *)v49 + 8))(v49);
    v50 = v66[0];
    v66[0] = 0;
    if (v50)
    {
      if (*(_DWORD *)v50 == 1)
        WTF::fastFree(v50, v48);
      else
        --*(_DWORD *)v50;
    }
    v51 = *(_QWORD *)(v46 + 5136);
    *(_QWORD *)(v46 + 5136) = v47;
    if (v51)
      (*(void (**)(uint64_t))(*(_QWORD *)v51 + 8))(v51);
  }
  v43 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v52 = *(_QWORD *)(v42 + 5136);
  *(_QWORD *)(v42 + 5136) = v43;
  if (v52)
  {
    v53 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v53, v54);
  }
  v55 = __ldxr((unsigned __int8 *)v44);
  if (v55 != 1)
  {
    __clrex();
    goto LABEL_57;
  }
  if (__stlxr(0, (unsigned __int8 *)v44))
LABEL_57:
    WTF::Lock::unlockSlow((WTF::Lock *)v44);
LABEL_58:
  v14 = v43[3];
  if (v14 >= v43[4])
  {
    v14 = v43[5];
    if ((v14 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v14 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_60;
    }
    v61 = *(_QWORD *)(v14 + 8) ^ v43[6];
    v43[4] = v14 + HIDWORD(v61);
    v43[5] = v14 + (int)v61;
  }
  v43[3] = v14 + 32;
LABEL_60:
  *(_DWORD *)v14 = 0;
  WebCore::JSDOMObject::JSDOMObject(v14, v23);
  *(_QWORD *)(v14 + 24) = a3;
  if (*(_BYTE *)(v40 + 755))
    __dmb(0xAu);
  v56 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE336258 & 1) == 0)
  {
    qword_1EE336250 = (uint64_t)&off_1E32BE838;
    byte_1EE336258 = 1;
  }
  v66[0] = a3;
  if ((v14 & 8) != 0)
    v57 = (v14 - 112) | 1;
  else
    v57 = v14 & 0xFFFFFFFFFFFFC000;
  if ((v57 & 1) != 0)
    v58 = v57 + 47;
  else
    v58 = *(_QWORD *)v57 + 32;
  Allocator = *(JSC::Structure **)(v58 + 16);
  if (!Allocator)
    Allocator = (JSC::Structure *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v58 + 16) = *(_QWORD *)Allocator;
  *(_QWORD *)Allocator = v14;
  *((_QWORD *)Allocator + 1) = &qword_1EE336250;
  *((_QWORD *)Allocator + 2) = v56;
  v70 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v56 + 32), (uint64_t *)v66, (uint64_t *)&v70);
  if (v70)
    *((_QWORD *)v70 + 1) = 3;
  return v14;
}

_DWORD *WebCore::JSOESShaderMultisampleInterpolation::destroy(WebCore::JSOESShaderMultisampleInterpolation *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[2];
  }
  return result;
}

uint64_t WebCore::JSOESShaderMultisampleInterpolation::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSOESShaderMultisampleInterpolationOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  unint64_t v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  if (a5)
  {
    *a5 = "Reachable from jsOESShaderMultisampleInterpolation";
    a5[1] = 51;
  }
  v6 = atomic_load((unint64_t *)(v5 + 16));
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) == v8)
  {
    v17 = a4;
    v18 = v6;
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, (void *)v6);
    a4 = v17;
    v6 = v18;
    if ((_DWORD)result)
    {
LABEL_12:
      if (*(_BYTE *)(a4 + 131))
        (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)a4 + 152))(a4, v6);
      return 1;
    }
  }
  else
  {
    v9 = v8[1];
    v10 = (v6 + ~(v6 << 32)) ^ ((v6 + ~(v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(_QWORD *)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v15 == v6)
        goto LABEL_12;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x194D767E0);
      }
    }
  }
  return result;
}

_QWORD *WebCore::JSOESShaderMultisampleInterpolationOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _QWORD *result;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  ++v3[2];
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_DWORD **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_DWORD **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (v3[2] == 1)
    return (_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
  --v3[2];
  return result;
}

unint64_t WebCore::wrap<WebCore::OESShaderMultisampleInterpolation>(uint64_t a1, uint64_t a2, WTF::StringImpl *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  JSC::JSCell *v26;
  JSC::JSObject *Object;
  uint64_t *v28;
  unint64_t SlowCase;
  uint64_t v30;
  int v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  JSC::Structure *v36;
  int v37;
  JSC::JSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  WTF *v50;
  uint64_t v51;
  uint64_t v52;
  WTF *v53;
  void *v54;
  int v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  JSC::Structure *Allocator;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  WTF::StringImpl *v66[6];
  int v67;
  int v68;
  int v69;
  JSC::Structure *v70;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          v14 = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return v14;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*((_DWORD *)a3 + 2);
  if (*(void (***)(WebCore::OESShaderMultisampleInterpolation *__hidden))a3 != off_1E33DD238)
  {
    __break(0xC471u);
    JUMPOUT(0x194D76FC8);
  }
  v15 = *(_QWORD *)(a2 + 3296);
  if (v15)
  {
    v16 = *(_DWORD *)(v15 - 8);
    v17 = ((unint64_t)&WebCore::JSOESShaderMultisampleInterpolation::s_info
         + ~((_QWORD)&WebCore::JSOESShaderMultisampleInterpolation::s_info << 32)) ^ (((unint64_t)&WebCore::JSOESShaderMultisampleInterpolation::s_info
                                                                                     + ~((_QWORD)&WebCore::JSOESShaderMultisampleInterpolation::s_info << 32)) >> 22);
    v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
    v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
    v20 = v16 & ((v19 >> 31) ^ v19);
    v21 = *(char ***)(v15 + 16 * v20);
    if (v21 == &WebCore::JSOESShaderMultisampleInterpolation::s_info)
    {
LABEL_15:
      v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
      if (v23)
        goto LABEL_38;
    }
    else
    {
      v22 = 1;
      while (v21)
      {
        v20 = ((_DWORD)v20 + v22) & v16;
        v21 = *(char ***)(v15 + 16 * v20);
        ++v22;
        if (v21 == &WebCore::JSOESShaderMultisampleInterpolation::s_info)
          goto LABEL_15;
      }
    }
  }
  v24 = *(_QWORD *)(a2 + 56);
  v25 = (unint64_t *)(v24 + 40136);
  v26 = *(JSC::JSCell **)(a2 + 656);
  LODWORD(v66[0]) = 23;
  if (((unint64_t)v26 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v26);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)v24);
  }
  v28 = (uint64_t *)(v24 + 38904);
  SlowCase = *v25;
  if (*v25 < *(_QWORD *)(v24 + 40144))
    goto LABEL_20;
  SlowCase = *(_QWORD *)(v24 + 40152);
  if ((SlowCase & 1) == 0)
  {
    v62 = *(_QWORD *)(SlowCase + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = SlowCase + HIDWORD(v62);
    *(_QWORD *)(v24 + 40152) = SlowCase + (int)v62;
LABEL_20:
    *v25 = SlowCase + 128;
    goto LABEL_21;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_21:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, v24, a2, v26, v66, &WebCore::JSOESShaderMultisampleInterpolationPrototype::s_info, 0, 0);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v30 = *v28;
  if (*(_QWORD *)(v24 + 38904) < *(_QWORD *)(v24 + 38912))
    goto LABEL_24;
  v30 = *(_QWORD *)(v24 + 38920);
  if ((v30 & 1) == 0)
  {
    v63 = *(_QWORD *)(v30 + 8) ^ *(_QWORD *)(v24 + 38928);
    *(_QWORD *)(v24 + 38912) = v30 + HIDWORD(v63);
    *(_QWORD *)(v24 + 38920) = v30 + (int)v63;
LABEL_24:
    *v28 = v30 + 16;
    goto LABEL_25;
  }
  JSC::sanitizeStackForVM();
  v30 = JSC::LocalAllocator::allocateSlowCase();
LABEL_25:
  *(_DWORD *)v30 = 0;
  v31 = *(_DWORD *)(SlowCase + 8);
  *(_DWORD *)v30 = SlowCase >> 4;
  *(_DWORD *)(v30 + 4) = v31;
  v65 = SlowCase;
  *(_QWORD *)(v30 + 8) = 0;
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>((JSC::VM *)v24, (uint64_t)&WebCore::JSOESShaderMultisampleInterpolation::s_info, &WebCore::JSOESShaderMultisampleInterpolationPrototypeTableValues, (JSC::JSObject *)v30);
  v32 = *(_QWORD *)(*(_QWORD *)(v24 + 41952) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v34 = JSC::JSString::create(v24, v66);
  v35 = v66[0];
  v66[0] = 0;
  if (v35)
  {
    if (*(_DWORD *)v35 == 2)
      WTF::StringImpl::destroy(v35, v33);
    else
      *(_DWORD *)v35 -= 2;
  }
  v36 = (JSC::Structure *)(16 * (*(_DWORD *)v30 & 0xFFFFFFFE));
  v69 = *(_DWORD *)v30;
  v70 = v36;
  v37 = JSC::Structure::outOfLineCapacity(v36);
  v67 = 0;
  v68 = v37;
  v66[0] = (WTF::StringImpl *)&v68;
  v66[1] = (WTF::StringImpl *)v30;
  v66[2] = (WTF::StringImpl *)v24;
  v66[3] = (WTF::StringImpl *)&v69;
  v66[4] = (WTF::StringImpl *)&v70;
  v66[5] = (WTF::StringImpl *)&v67;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v36, (JSC::VM *)v24, v32, 6, (uint64_t)v66);
  if ((*(_BYTE *)((16 * *(unsigned int *)v30) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(v30, v24, v67, v34);
  *((_DWORD *)v36 + 4) |= 0x10u;
  LODWORD(v66[0]) = 23;
  if ((v30 & 0xFFFE000000000002) == 0)
  {
    v38 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v30);
    if (v38)
      JSC::JSObject::didBecomePrototype(v38, (JSC::VM *)v24);
  }
  v39 = *v25;
  if (*v25 >= *(_QWORD *)(v24 + 40144))
  {
    v39 = *(_QWORD *)(v24 + 40152);
    if ((v39 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v39 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_35;
    }
    v64 = *(_QWORD *)(v39 + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = v39 + HIDWORD(v64);
    *(_QWORD *)(v24 + 40152) = v39 + (int)v64;
  }
  *v25 = v39 + 128;
LABEL_35:
  *(_DWORD *)v39 = 0;
  MEMORY[0x19AEA4278](v39, v24, a2, v30, v66, &WebCore::JSOESShaderMultisampleInterpolation::s_info, 0, 0, v65);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v23 = WebCore::cacheDOMStructure((JSCell *)a2, v39, (uint64_t)&WebCore::JSOESShaderMultisampleInterpolation::s_info);
LABEL_38:
  v40 = *(_QWORD *)(a2 + 56);
  v41 = *(_QWORD *)(v40 + 41456);
  v42 = *(_QWORD *)(v41 + 23536);
  v43 = *(_QWORD **)(v42 + 5144);
  if (v43)
    goto LABEL_58;
  v44 = *(_QWORD *)(v41 + 22648);
  if (__ldaxr((unsigned __int8 *)v44))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v44))
  {
    goto LABEL_43;
  }
  MEMORY[0x19AEA534C](v44);
LABEL_43:
  v46 = *(_QWORD *)(v44 + 2824);
  if (!*(_QWORD *)(v46 + 5144))
  {
    v47 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)v66, "IsoSpace T");
    v70 = 0;
    MEMORY[0x19AEA3204](v47, v66, v40 + 192, v40 + 1872, 32, 8, &v70);
    v49 = (uint64_t)v70;
    v70 = 0;
    if (v49)
      (*(void (**)(uint64_t))(*(_QWORD *)v49 + 8))(v49);
    v50 = v66[0];
    v66[0] = 0;
    if (v50)
    {
      if (*(_DWORD *)v50 == 1)
        WTF::fastFree(v50, v48);
      else
        --*(_DWORD *)v50;
    }
    v51 = *(_QWORD *)(v46 + 5144);
    *(_QWORD *)(v46 + 5144) = v47;
    if (v51)
      (*(void (**)(uint64_t))(*(_QWORD *)v51 + 8))(v51);
  }
  v43 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v52 = *(_QWORD *)(v42 + 5144);
  *(_QWORD *)(v42 + 5144) = v43;
  if (v52)
  {
    v53 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v53, v54);
  }
  v55 = __ldxr((unsigned __int8 *)v44);
  if (v55 != 1)
  {
    __clrex();
    goto LABEL_57;
  }
  if (__stlxr(0, (unsigned __int8 *)v44))
LABEL_57:
    WTF::Lock::unlockSlow((WTF::Lock *)v44);
LABEL_58:
  v14 = v43[3];
  if (v14 >= v43[4])
  {
    v14 = v43[5];
    if ((v14 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v14 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_60;
    }
    v61 = *(_QWORD *)(v14 + 8) ^ v43[6];
    v43[4] = v14 + HIDWORD(v61);
    v43[5] = v14 + (int)v61;
  }
  v43[3] = v14 + 32;
LABEL_60:
  *(_DWORD *)v14 = 0;
  WebCore::JSDOMObject::JSDOMObject(v14, v23);
  *(_QWORD *)(v14 + 24) = a3;
  if (*(_BYTE *)(v40 + 755))
    __dmb(0xAu);
  v56 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE336268 & 1) == 0)
  {
    qword_1EE336260 = (uint64_t)&off_1E32BE868;
    byte_1EE336268 = 1;
  }
  v66[0] = a3;
  if ((v14 & 8) != 0)
    v57 = (v14 - 112) | 1;
  else
    v57 = v14 & 0xFFFFFFFFFFFFC000;
  if ((v57 & 1) != 0)
    v58 = v57 + 47;
  else
    v58 = *(_QWORD *)v57 + 32;
  Allocator = *(JSC::Structure **)(v58 + 16);
  if (!Allocator)
    Allocator = (JSC::Structure *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v58 + 16) = *(_QWORD *)Allocator;
  *(_QWORD *)Allocator = v14;
  *((_QWORD *)Allocator + 1) = &qword_1EE336260;
  *((_QWORD *)Allocator + 2) = v56;
  v70 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v56 + 32), (uint64_t *)v66, (uint64_t *)&v70);
  if (v70)
    *((_QWORD *)v70 + 1) = 3;
  return v14;
}

_DWORD *WebCore::JSOESStandardDerivatives::destroy(WebCore::JSOESStandardDerivatives *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[2];
  }
  return result;
}

uint64_t WebCore::JSOESStandardDerivatives::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSOESStandardDerivativesOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  unint64_t v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  if (a5)
  {
    *a5 = "Reachable from jsOESStandardDerivatives";
    a5[1] = 40;
  }
  v6 = atomic_load((unint64_t *)(v5 + 16));
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) == v8)
  {
    v17 = a4;
    v18 = v6;
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, (void *)v6);
    a4 = v17;
    v6 = v18;
    if ((_DWORD)result)
    {
LABEL_12:
      if (*(_BYTE *)(a4 + 131))
        (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)a4 + 152))(a4, v6);
      return 1;
    }
  }
  else
  {
    v9 = v8[1];
    v10 = (v6 + ~(v6 << 32)) ^ ((v6 + ~(v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(_QWORD *)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v15 == v6)
        goto LABEL_12;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x194D7738CLL);
      }
    }
  }
  return result;
}

_QWORD *WebCore::JSOESStandardDerivativesOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _QWORD *result;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  ++v3[2];
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_DWORD **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_DWORD **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (v3[2] == 1)
    return (_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
  --v3[2];
  return result;
}

unint64_t WebCore::wrap<WebCore::OESStandardDerivatives>(uint64_t a1, uint64_t a2, WTF::StringImpl *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  JSC::JSCell *v26;
  JSC::JSObject *Object;
  uint64_t *v28;
  unint64_t SlowCase;
  uint64_t v30;
  int v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  WTF::StringImpl *v35;
  uint64_t v36;
  WTF::StringImpl *v37;
  JSC::Structure *v38;
  int v39;
  JSC::JSObject *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  WTF *v52;
  uint64_t v53;
  uint64_t v54;
  WTF *v55;
  void *v56;
  int v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  JSC::Structure *Allocator;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  WTF::StringImpl *v68[6];
  int v69;
  int v70;
  int v71;
  JSC::Structure *v72;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          v14 = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return v14;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*((_DWORD *)a3 + 2);
  if (*(void (***)(WebCore::OESStandardDerivatives *__hidden))a3 != off_1E33DD258)
  {
    __break(0xC471u);
    JUMPOUT(0x194D77BD8);
  }
  v15 = *(_QWORD *)(a2 + 3296);
  if (v15)
  {
    v16 = *(_DWORD *)(v15 - 8);
    v17 = ((unint64_t)&WebCore::JSOESStandardDerivatives::s_info
         + ~((_QWORD)&WebCore::JSOESStandardDerivatives::s_info << 32)) ^ (((unint64_t)&WebCore::JSOESStandardDerivatives::s_info
                                                                          + ~((_QWORD)&WebCore::JSOESStandardDerivatives::s_info << 32)) >> 22);
    v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
    v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
    v20 = v16 & ((v19 >> 31) ^ v19);
    v21 = *(char ***)(v15 + 16 * v20);
    if (v21 == &WebCore::JSOESStandardDerivatives::s_info)
    {
LABEL_15:
      v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
      if (v23)
        goto LABEL_43;
    }
    else
    {
      v22 = 1;
      while (v21)
      {
        v20 = ((_DWORD)v20 + v22) & v16;
        v21 = *(char ***)(v15 + 16 * v20);
        ++v22;
        if (v21 == &WebCore::JSOESStandardDerivatives::s_info)
          goto LABEL_15;
      }
    }
  }
  v24 = *(_QWORD *)(a2 + 56);
  v25 = (unint64_t *)(v24 + 40136);
  v26 = *(JSC::JSCell **)(a2 + 656);
  LODWORD(v68[0]) = 23;
  if (((unint64_t)v26 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v26);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)v24);
  }
  v28 = (uint64_t *)(v24 + 38904);
  SlowCase = *v25;
  if (*v25 < *(_QWORD *)(v24 + 40144))
    goto LABEL_20;
  SlowCase = *(_QWORD *)(v24 + 40152);
  if ((SlowCase & 1) == 0)
  {
    v64 = *(_QWORD *)(SlowCase + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = SlowCase + HIDWORD(v64);
    *(_QWORD *)(v24 + 40152) = SlowCase + (int)v64;
LABEL_20:
    *v25 = SlowCase + 128;
    goto LABEL_21;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_21:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, v24, a2, v26, v68, &WebCore::JSOESStandardDerivativesPrototype::s_info, 0, 0);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v30 = *v28;
  if (*(_QWORD *)(v24 + 38904) < *(_QWORD *)(v24 + 38912))
    goto LABEL_24;
  v30 = *(_QWORD *)(v24 + 38920);
  if ((v30 & 1) == 0)
  {
    v65 = *(_QWORD *)(v30 + 8) ^ *(_QWORD *)(v24 + 38928);
    *(_QWORD *)(v24 + 38912) = v30 + HIDWORD(v65);
    *(_QWORD *)(v24 + 38920) = v30 + (int)v65;
LABEL_24:
    *v28 = v30 + 16;
    goto LABEL_25;
  }
  JSC::sanitizeStackForVM();
  v30 = JSC::LocalAllocator::allocateSlowCase();
LABEL_25:
  *(_DWORD *)v30 = 0;
  v31 = *(_DWORD *)(SlowCase + 8);
  *(_DWORD *)v30 = SlowCase >> 4;
  *(_DWORD *)(v30 + 4) = v31;
  v67 = SlowCase;
  *(_QWORD *)(v30 + 8) = 0;
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  if ((*(_BYTE *)((16 * *(unsigned int *)v30) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)v30, (JSC::VM *)v24);
  WTF::AtomStringImpl::addLiteral();
  v32 = v68[0];
  JSC::reifyStaticProperty((JSC::VM *)v24, (uint64_t)&WebCore::JSOESStandardDerivatives::s_info, (unint64_t *)v68, (uint64_t)&WebCore::JSOESStandardDerivativesPrototypeTableValues, (unsigned __int8 *)v30);
  if (v32)
  {
    if (*(_DWORD *)v32 == 2)
      WTF::StringImpl::destroy(v32, v33);
    else
      *(_DWORD *)v32 -= 2;
  }
  v34 = *(_QWORD *)(*(_QWORD *)(v24 + 41952) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v36 = JSC::JSString::create(v24, v68);
  v37 = v68[0];
  v68[0] = 0;
  if (v37)
  {
    if (*(_DWORD *)v37 == 2)
      WTF::StringImpl::destroy(v37, v35);
    else
      *(_DWORD *)v37 -= 2;
  }
  v38 = (JSC::Structure *)(16 * (*(_DWORD *)v30 & 0xFFFFFFFE));
  v71 = *(_DWORD *)v30;
  v72 = v38;
  v39 = JSC::Structure::outOfLineCapacity(v38);
  v69 = 0;
  v70 = v39;
  v68[0] = (WTF::StringImpl *)&v70;
  v68[1] = (WTF::StringImpl *)v30;
  v68[2] = (WTF::StringImpl *)v24;
  v68[3] = (WTF::StringImpl *)&v71;
  v68[4] = (WTF::StringImpl *)&v72;
  v68[5] = (WTF::StringImpl *)&v69;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v38, (JSC::VM *)v24, v34, 6, (uint64_t)v68);
  if ((*(_BYTE *)((16 * *(unsigned int *)v30) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(v30, v24, v69, v36);
  *((_DWORD *)v38 + 4) |= 0x10u;
  LODWORD(v68[0]) = 23;
  if ((v30 & 0xFFFE000000000002) == 0)
  {
    v40 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v30);
    if (v40)
      JSC::JSObject::didBecomePrototype(v40, (JSC::VM *)v24);
  }
  v41 = *v25;
  if (*v25 >= *(_QWORD *)(v24 + 40144))
  {
    v41 = *(_QWORD *)(v24 + 40152);
    if ((v41 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v41 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_40;
    }
    v66 = *(_QWORD *)(v41 + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = v41 + HIDWORD(v66);
    *(_QWORD *)(v24 + 40152) = v41 + (int)v66;
  }
  *v25 = v41 + 128;
LABEL_40:
  *(_DWORD *)v41 = 0;
  MEMORY[0x19AEA4278](v41, v24, a2, v30, v68, &WebCore::JSOESStandardDerivatives::s_info, 0, 0, v67);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v23 = WebCore::cacheDOMStructure((JSCell *)a2, v41, (uint64_t)&WebCore::JSOESStandardDerivatives::s_info);
LABEL_43:
  v42 = *(_QWORD *)(a2 + 56);
  v43 = *(_QWORD *)(v42 + 41456);
  v44 = *(_QWORD *)(v43 + 23536);
  v45 = *(_QWORD **)(v44 + 5152);
  if (v45)
    goto LABEL_63;
  v46 = *(_QWORD *)(v43 + 22648);
  if (__ldaxr((unsigned __int8 *)v46))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v46))
  {
    goto LABEL_48;
  }
  MEMORY[0x19AEA534C](v46);
LABEL_48:
  v48 = *(_QWORD *)(v46 + 2824);
  if (!*(_QWORD *)(v48 + 5152))
  {
    v49 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)v68, "IsoSpace T");
    v72 = 0;
    MEMORY[0x19AEA3204](v49, v68, v42 + 192, v42 + 1872, 32, 8, &v72);
    v51 = (uint64_t)v72;
    v72 = 0;
    if (v51)
      (*(void (**)(uint64_t))(*(_QWORD *)v51 + 8))(v51);
    v52 = v68[0];
    v68[0] = 0;
    if (v52)
    {
      if (*(_DWORD *)v52 == 1)
        WTF::fastFree(v52, v50);
      else
        --*(_DWORD *)v52;
    }
    v53 = *(_QWORD *)(v48 + 5152);
    *(_QWORD *)(v48 + 5152) = v49;
    if (v53)
      (*(void (**)(uint64_t))(*(_QWORD *)v53 + 8))(v53);
  }
  v45 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v54 = *(_QWORD *)(v44 + 5152);
  *(_QWORD *)(v44 + 5152) = v45;
  if (v54)
  {
    v55 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v55, v56);
  }
  v57 = __ldxr((unsigned __int8 *)v46);
  if (v57 != 1)
  {
    __clrex();
    goto LABEL_62;
  }
  if (__stlxr(0, (unsigned __int8 *)v46))
LABEL_62:
    WTF::Lock::unlockSlow((WTF::Lock *)v46);
LABEL_63:
  v14 = v45[3];
  if (v14 >= v45[4])
  {
    v14 = v45[5];
    if ((v14 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v14 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_65;
    }
    v63 = *(_QWORD *)(v14 + 8) ^ v45[6];
    v45[4] = v14 + HIDWORD(v63);
    v45[5] = v14 + (int)v63;
  }
  v45[3] = v14 + 32;
LABEL_65:
  *(_DWORD *)v14 = 0;
  WebCore::JSDOMObject::JSDOMObject(v14, v23);
  *(_QWORD *)(v14 + 24) = a3;
  if (*(_BYTE *)(v42 + 755))
    __dmb(0xAu);
  v58 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE336278 & 1) == 0)
  {
    qword_1EE336270 = (uint64_t)&off_1E32BE898;
    byte_1EE336278 = 1;
  }
  v68[0] = a3;
  if ((v14 & 8) != 0)
    v59 = (v14 - 112) | 1;
  else
    v59 = v14 & 0xFFFFFFFFFFFFC000;
  if ((v59 & 1) != 0)
    v60 = v59 + 47;
  else
    v60 = *(_QWORD *)v59 + 32;
  Allocator = *(JSC::Structure **)(v60 + 16);
  if (!Allocator)
    Allocator = (JSC::Structure *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v60 + 16) = *(_QWORD *)Allocator;
  *(_QWORD *)Allocator = v14;
  *((_QWORD *)Allocator + 1) = &qword_1EE336270;
  *((_QWORD *)Allocator + 2) = v58;
  v72 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v58 + 32), (uint64_t *)v68, (uint64_t *)&v72);
  if (v72)
    *((_QWORD *)v72 + 1) = 3;
  return v14;
}

_DWORD *WebCore::JSOESTextureFloat::destroy(WebCore::JSOESTextureFloat *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[2];
  }
  return result;
}

uint64_t WebCore::JSOESTextureFloat::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSOESTextureFloatOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  unint64_t v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  if (a5)
  {
    *a5 = "Reachable from jsOESTextureFloat";
    a5[1] = 33;
  }
  v6 = atomic_load((unint64_t *)(v5 + 16));
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) == v8)
  {
    v17 = a4;
    v18 = v6;
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, (void *)v6);
    a4 = v17;
    v6 = v18;
    if ((_DWORD)result)
    {
LABEL_12:
      if (*(_BYTE *)(a4 + 131))
        (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)a4 + 152))(a4, v6);
      return 1;
    }
  }
  else
  {
    v9 = v8[1];
    v10 = (v6 + ~(v6 << 32)) ^ ((v6 + ~(v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(_QWORD *)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v15 == v6)
        goto LABEL_12;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x194D77F9CLL);
      }
    }
  }
  return result;
}

_QWORD *WebCore::JSOESTextureFloatOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _QWORD *result;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  ++v3[2];
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_DWORD **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_DWORD **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (v3[2] == 1)
    return (_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
  --v3[2];
  return result;
}

unint64_t WebCore::wrap<WebCore::OESTextureFloat>(uint64_t a1, uint64_t a2, WTF::StringImpl *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  JSC::JSCell *v26;
  JSC::JSObject *Object;
  uint64_t *v28;
  unint64_t SlowCase;
  uint64_t v30;
  int v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  JSC::Structure *v36;
  int v37;
  JSC::JSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  WTF *v50;
  uint64_t v51;
  uint64_t v52;
  WTF *v53;
  void *v54;
  int v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  JSC::Structure *Allocator;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  WTF::StringImpl *v66[6];
  int v67;
  int v68;
  int v69;
  JSC::Structure *v70;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          v14 = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return v14;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*((_DWORD *)a3 + 2);
  if (*(void (***)(WebCore::OESTextureFloat *__hidden))a3 != off_1E33DD278)
  {
    __break(0xC471u);
    JUMPOUT(0x194D78768);
  }
  v15 = *(_QWORD *)(a2 + 3296);
  if (v15)
  {
    v16 = *(_DWORD *)(v15 - 8);
    v17 = ((unint64_t)&WebCore::JSOESTextureFloat::s_info + ~((_QWORD)&WebCore::JSOESTextureFloat::s_info << 32)) ^ (((unint64_t)&WebCore::JSOESTextureFloat::s_info + ~((_QWORD)&WebCore::JSOESTextureFloat::s_info << 32)) >> 22);
    v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
    v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
    v20 = v16 & ((v19 >> 31) ^ v19);
    v21 = *(char ***)(v15 + 16 * v20);
    if (v21 == &WebCore::JSOESTextureFloat::s_info)
    {
LABEL_15:
      v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
      if (v23)
        goto LABEL_38;
    }
    else
    {
      v22 = 1;
      while (v21)
      {
        v20 = ((_DWORD)v20 + v22) & v16;
        v21 = *(char ***)(v15 + 16 * v20);
        ++v22;
        if (v21 == &WebCore::JSOESTextureFloat::s_info)
          goto LABEL_15;
      }
    }
  }
  v24 = *(_QWORD *)(a2 + 56);
  v25 = (unint64_t *)(v24 + 40136);
  v26 = *(JSC::JSCell **)(a2 + 656);
  LODWORD(v66[0]) = 23;
  if (((unint64_t)v26 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v26);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)v24);
  }
  v28 = (uint64_t *)(v24 + 38904);
  SlowCase = *v25;
  if (*v25 < *(_QWORD *)(v24 + 40144))
    goto LABEL_20;
  SlowCase = *(_QWORD *)(v24 + 40152);
  if ((SlowCase & 1) == 0)
  {
    v62 = *(_QWORD *)(SlowCase + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = SlowCase + HIDWORD(v62);
    *(_QWORD *)(v24 + 40152) = SlowCase + (int)v62;
LABEL_20:
    *v25 = SlowCase + 128;
    goto LABEL_21;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_21:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, v24, a2, v26, v66, &WebCore::JSOESTextureFloatPrototype::s_info, 0, 0);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v30 = *v28;
  if (*(_QWORD *)(v24 + 38904) < *(_QWORD *)(v24 + 38912))
    goto LABEL_24;
  v30 = *(_QWORD *)(v24 + 38920);
  if ((v30 & 1) == 0)
  {
    v63 = *(_QWORD *)(v30 + 8) ^ *(_QWORD *)(v24 + 38928);
    *(_QWORD *)(v24 + 38912) = v30 + HIDWORD(v63);
    *(_QWORD *)(v24 + 38920) = v30 + (int)v63;
LABEL_24:
    *v28 = v30 + 16;
    goto LABEL_25;
  }
  JSC::sanitizeStackForVM();
  v30 = JSC::LocalAllocator::allocateSlowCase();
LABEL_25:
  *(_DWORD *)v30 = 0;
  v31 = *(_DWORD *)(SlowCase + 8);
  *(_DWORD *)v30 = SlowCase >> 4;
  *(_DWORD *)(v30 + 4) = v31;
  v65 = SlowCase;
  *(_QWORD *)(v30 + 8) = 0;
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v32 = *(_QWORD *)(*(_QWORD *)(v24 + 41952) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v34 = JSC::JSString::create(v24, v66);
  v35 = v66[0];
  v66[0] = 0;
  if (v35)
  {
    if (*(_DWORD *)v35 == 2)
      WTF::StringImpl::destroy(v35, v33);
    else
      *(_DWORD *)v35 -= 2;
  }
  v36 = (JSC::Structure *)(16 * (*(_DWORD *)v30 & 0xFFFFFFFE));
  v69 = *(_DWORD *)v30;
  v70 = v36;
  v37 = JSC::Structure::outOfLineCapacity(v36);
  v67 = 0;
  v68 = v37;
  v66[0] = (WTF::StringImpl *)&v68;
  v66[1] = (WTF::StringImpl *)v30;
  v66[2] = (WTF::StringImpl *)v24;
  v66[3] = (WTF::StringImpl *)&v69;
  v66[4] = (WTF::StringImpl *)&v70;
  v66[5] = (WTF::StringImpl *)&v67;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v36, (JSC::VM *)v24, v32, 6, (uint64_t)v66);
  if ((*(_BYTE *)((16 * *(unsigned int *)v30) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(v30, v24, v67, v34);
  *((_DWORD *)v36 + 4) |= 0x10u;
  LODWORD(v66[0]) = 23;
  if ((v30 & 0xFFFE000000000002) == 0)
  {
    v38 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v30);
    if (v38)
      JSC::JSObject::didBecomePrototype(v38, (JSC::VM *)v24);
  }
  v39 = *v25;
  if (*v25 >= *(_QWORD *)(v24 + 40144))
  {
    v39 = *(_QWORD *)(v24 + 40152);
    if ((v39 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v39 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_35;
    }
    v64 = *(_QWORD *)(v39 + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = v39 + HIDWORD(v64);
    *(_QWORD *)(v24 + 40152) = v39 + (int)v64;
  }
  *v25 = v39 + 128;
LABEL_35:
  *(_DWORD *)v39 = 0;
  MEMORY[0x19AEA4278](v39, v24, a2, v30, v66, &WebCore::JSOESTextureFloat::s_info, 0, 0, v65);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v23 = WebCore::cacheDOMStructure((JSCell *)a2, v39, (uint64_t)&WebCore::JSOESTextureFloat::s_info);
LABEL_38:
  v40 = *(_QWORD *)(a2 + 56);
  v41 = *(_QWORD *)(v40 + 41456);
  v42 = *(_QWORD *)(v41 + 23536);
  v43 = *(_QWORD **)(v42 + 5160);
  if (v43)
    goto LABEL_58;
  v44 = *(_QWORD *)(v41 + 22648);
  if (__ldaxr((unsigned __int8 *)v44))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v44))
  {
    goto LABEL_43;
  }
  MEMORY[0x19AEA534C](v44);
LABEL_43:
  v46 = *(_QWORD *)(v44 + 2824);
  if (!*(_QWORD *)(v46 + 5160))
  {
    v47 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)v66, "IsoSpace T");
    v70 = 0;
    MEMORY[0x19AEA3204](v47, v66, v40 + 192, v40 + 1872, 32, 8, &v70);
    v49 = (uint64_t)v70;
    v70 = 0;
    if (v49)
      (*(void (**)(uint64_t))(*(_QWORD *)v49 + 8))(v49);
    v50 = v66[0];
    v66[0] = 0;
    if (v50)
    {
      if (*(_DWORD *)v50 == 1)
        WTF::fastFree(v50, v48);
      else
        --*(_DWORD *)v50;
    }
    v51 = *(_QWORD *)(v46 + 5160);
    *(_QWORD *)(v46 + 5160) = v47;
    if (v51)
      (*(void (**)(uint64_t))(*(_QWORD *)v51 + 8))(v51);
  }
  v43 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v52 = *(_QWORD *)(v42 + 5160);
  *(_QWORD *)(v42 + 5160) = v43;
  if (v52)
  {
    v53 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v53, v54);
  }
  v55 = __ldxr((unsigned __int8 *)v44);
  if (v55 != 1)
  {
    __clrex();
    goto LABEL_57;
  }
  if (__stlxr(0, (unsigned __int8 *)v44))
LABEL_57:
    WTF::Lock::unlockSlow((WTF::Lock *)v44);
LABEL_58:
  v14 = v43[3];
  if (v14 >= v43[4])
  {
    v14 = v43[5];
    if ((v14 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v14 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_60;
    }
    v61 = *(_QWORD *)(v14 + 8) ^ v43[6];
    v43[4] = v14 + HIDWORD(v61);
    v43[5] = v14 + (int)v61;
  }
  v43[3] = v14 + 32;
LABEL_60:
  *(_DWORD *)v14 = 0;
  WebCore::JSDOMObject::JSDOMObject(v14, v23);
  *(_QWORD *)(v14 + 24) = a3;
  if (*(_BYTE *)(v40 + 755))
    __dmb(0xAu);
  v56 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE336288 & 1) == 0)
  {
    qword_1EE336280 = (uint64_t)&off_1E32BE8C8;
    byte_1EE336288 = 1;
  }
  v66[0] = a3;
  if ((v14 & 8) != 0)
    v57 = (v14 - 112) | 1;
  else
    v57 = v14 & 0xFFFFFFFFFFFFC000;
  if ((v57 & 1) != 0)
    v58 = v57 + 47;
  else
    v58 = *(_QWORD *)v57 + 32;
  Allocator = *(JSC::Structure **)(v58 + 16);
  if (!Allocator)
    Allocator = (JSC::Structure *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v58 + 16) = *(_QWORD *)Allocator;
  *(_QWORD *)Allocator = v14;
  *((_QWORD *)Allocator + 1) = &qword_1EE336280;
  *((_QWORD *)Allocator + 2) = v56;
  v70 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v56 + 32), (uint64_t *)v66, (uint64_t *)&v70);
  if (v70)
    *((_QWORD *)v70 + 1) = 3;
  return v14;
}

_DWORD *WebCore::JSOESTextureFloatLinear::destroy(WebCore::JSOESTextureFloatLinear *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[2];
  }
  return result;
}

uint64_t WebCore::JSOESTextureFloatLinear::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSOESTextureFloatLinearOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  unint64_t v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  if (a5)
  {
    *a5 = "Reachable from jsOESTextureFloatLinear";
    a5[1] = 39;
  }
  v6 = atomic_load((unint64_t *)(v5 + 16));
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) == v8)
  {
    v17 = a4;
    v18 = v6;
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, (void *)v6);
    a4 = v17;
    v6 = v18;
    if ((_DWORD)result)
    {
LABEL_12:
      if (*(_BYTE *)(a4 + 131))
        (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)a4 + 152))(a4, v6);
      return 1;
    }
  }
  else
  {
    v9 = v8[1];
    v10 = (v6 + ~(v6 << 32)) ^ ((v6 + ~(v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(_QWORD *)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v15 == v6)
        goto LABEL_12;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x194D78B2CLL);
      }
    }
  }
  return result;
}

_QWORD *WebCore::JSOESTextureFloatLinearOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _QWORD *result;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  ++v3[2];
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_DWORD **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_DWORD **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (v3[2] == 1)
    return (_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
  --v3[2];
  return result;
}

unint64_t WebCore::wrap<WebCore::OESTextureFloatLinear>(uint64_t a1, uint64_t a2, WTF::StringImpl *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  JSC::JSCell *v26;
  JSC::JSObject *Object;
  uint64_t *v28;
  unint64_t SlowCase;
  uint64_t v30;
  int v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  JSC::Structure *v36;
  int v37;
  JSC::JSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  WTF *v50;
  uint64_t v51;
  uint64_t v52;
  WTF *v53;
  void *v54;
  int v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  JSC::Structure *Allocator;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  WTF::StringImpl *v66[6];
  int v67;
  int v68;
  int v69;
  JSC::Structure *v70;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          v14 = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return v14;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*((_DWORD *)a3 + 2);
  if (*(void (***)(WebCore::OESTextureFloatLinear *__hidden))a3 != off_1E33DD298)
  {
    __break(0xC471u);
    JUMPOUT(0x194D792F8);
  }
  v15 = *(_QWORD *)(a2 + 3296);
  if (v15)
  {
    v16 = *(_DWORD *)(v15 - 8);
    v17 = ((unint64_t)&WebCore::JSOESTextureFloatLinear::s_info
         + ~((_QWORD)&WebCore::JSOESTextureFloatLinear::s_info << 32)) ^ (((unint64_t)&WebCore::JSOESTextureFloatLinear::s_info
                                                                         + ~((_QWORD)&WebCore::JSOESTextureFloatLinear::s_info << 32)) >> 22);
    v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
    v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
    v20 = v16 & ((v19 >> 31) ^ v19);
    v21 = *(char ***)(v15 + 16 * v20);
    if (v21 == &WebCore::JSOESTextureFloatLinear::s_info)
    {
LABEL_15:
      v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
      if (v23)
        goto LABEL_38;
    }
    else
    {
      v22 = 1;
      while (v21)
      {
        v20 = ((_DWORD)v20 + v22) & v16;
        v21 = *(char ***)(v15 + 16 * v20);
        ++v22;
        if (v21 == &WebCore::JSOESTextureFloatLinear::s_info)
          goto LABEL_15;
      }
    }
  }
  v24 = *(_QWORD *)(a2 + 56);
  v25 = (unint64_t *)(v24 + 40136);
  v26 = *(JSC::JSCell **)(a2 + 656);
  LODWORD(v66[0]) = 23;
  if (((unint64_t)v26 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v26);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)v24);
  }
  v28 = (uint64_t *)(v24 + 38904);
  SlowCase = *v25;
  if (*v25 < *(_QWORD *)(v24 + 40144))
    goto LABEL_20;
  SlowCase = *(_QWORD *)(v24 + 40152);
  if ((SlowCase & 1) == 0)
  {
    v62 = *(_QWORD *)(SlowCase + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = SlowCase + HIDWORD(v62);
    *(_QWORD *)(v24 + 40152) = SlowCase + (int)v62;
LABEL_20:
    *v25 = SlowCase + 128;
    goto LABEL_21;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_21:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, v24, a2, v26, v66, &WebCore::JSOESTextureFloatLinearPrototype::s_info, 0, 0);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v30 = *v28;
  if (*(_QWORD *)(v24 + 38904) < *(_QWORD *)(v24 + 38912))
    goto LABEL_24;
  v30 = *(_QWORD *)(v24 + 38920);
  if ((v30 & 1) == 0)
  {
    v63 = *(_QWORD *)(v30 + 8) ^ *(_QWORD *)(v24 + 38928);
    *(_QWORD *)(v24 + 38912) = v30 + HIDWORD(v63);
    *(_QWORD *)(v24 + 38920) = v30 + (int)v63;
LABEL_24:
    *v28 = v30 + 16;
    goto LABEL_25;
  }
  JSC::sanitizeStackForVM();
  v30 = JSC::LocalAllocator::allocateSlowCase();
LABEL_25:
  *(_DWORD *)v30 = 0;
  v31 = *(_DWORD *)(SlowCase + 8);
  *(_DWORD *)v30 = SlowCase >> 4;
  *(_DWORD *)(v30 + 4) = v31;
  v65 = SlowCase;
  *(_QWORD *)(v30 + 8) = 0;
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v32 = *(_QWORD *)(*(_QWORD *)(v24 + 41952) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v34 = JSC::JSString::create(v24, v66);
  v35 = v66[0];
  v66[0] = 0;
  if (v35)
  {
    if (*(_DWORD *)v35 == 2)
      WTF::StringImpl::destroy(v35, v33);
    else
      *(_DWORD *)v35 -= 2;
  }
  v36 = (JSC::Structure *)(16 * (*(_DWORD *)v30 & 0xFFFFFFFE));
  v69 = *(_DWORD *)v30;
  v70 = v36;
  v37 = JSC::Structure::outOfLineCapacity(v36);
  v67 = 0;
  v68 = v37;
  v66[0] = (WTF::StringImpl *)&v68;
  v66[1] = (WTF::StringImpl *)v30;
  v66[2] = (WTF::StringImpl *)v24;
  v66[3] = (WTF::StringImpl *)&v69;
  v66[4] = (WTF::StringImpl *)&v70;
  v66[5] = (WTF::StringImpl *)&v67;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v36, (JSC::VM *)v24, v32, 6, (uint64_t)v66);
  if ((*(_BYTE *)((16 * *(unsigned int *)v30) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(v30, v24, v67, v34);
  *((_DWORD *)v36 + 4) |= 0x10u;
  LODWORD(v66[0]) = 23;
  if ((v30 & 0xFFFE000000000002) == 0)
  {
    v38 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v30);
    if (v38)
      JSC::JSObject::didBecomePrototype(v38, (JSC::VM *)v24);
  }
  v39 = *v25;
  if (*v25 >= *(_QWORD *)(v24 + 40144))
  {
    v39 = *(_QWORD *)(v24 + 40152);
    if ((v39 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v39 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_35;
    }
    v64 = *(_QWORD *)(v39 + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = v39 + HIDWORD(v64);
    *(_QWORD *)(v24 + 40152) = v39 + (int)v64;
  }
  *v25 = v39 + 128;
LABEL_35:
  *(_DWORD *)v39 = 0;
  MEMORY[0x19AEA4278](v39, v24, a2, v30, v66, &WebCore::JSOESTextureFloatLinear::s_info, 0, 0, v65);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v23 = WebCore::cacheDOMStructure((JSCell *)a2, v39, (uint64_t)&WebCore::JSOESTextureFloatLinear::s_info);
LABEL_38:
  v40 = *(_QWORD *)(a2 + 56);
  v41 = *(_QWORD *)(v40 + 41456);
  v42 = *(_QWORD *)(v41 + 23536);
  v43 = *(_QWORD **)(v42 + 5168);
  if (v43)
    goto LABEL_58;
  v44 = *(_QWORD *)(v41 + 22648);
  if (__ldaxr((unsigned __int8 *)v44))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v44))
  {
    goto LABEL_43;
  }
  MEMORY[0x19AEA534C](v44);
LABEL_43:
  v46 = *(_QWORD *)(v44 + 2824);
  if (!*(_QWORD *)(v46 + 5168))
  {
    v47 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)v66, "IsoSpace T");
    v70 = 0;
    MEMORY[0x19AEA3204](v47, v66, v40 + 192, v40 + 1872, 32, 8, &v70);
    v49 = (uint64_t)v70;
    v70 = 0;
    if (v49)
      (*(void (**)(uint64_t))(*(_QWORD *)v49 + 8))(v49);
    v50 = v66[0];
    v66[0] = 0;
    if (v50)
    {
      if (*(_DWORD *)v50 == 1)
        WTF::fastFree(v50, v48);
      else
        --*(_DWORD *)v50;
    }
    v51 = *(_QWORD *)(v46 + 5168);
    *(_QWORD *)(v46 + 5168) = v47;
    if (v51)
      (*(void (**)(uint64_t))(*(_QWORD *)v51 + 8))(v51);
  }
  v43 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v52 = *(_QWORD *)(v42 + 5168);
  *(_QWORD *)(v42 + 5168) = v43;
  if (v52)
  {
    v53 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v53, v54);
  }
  v55 = __ldxr((unsigned __int8 *)v44);
  if (v55 != 1)
  {
    __clrex();
    goto LABEL_57;
  }
  if (__stlxr(0, (unsigned __int8 *)v44))
LABEL_57:
    WTF::Lock::unlockSlow((WTF::Lock *)v44);
LABEL_58:
  v14 = v43[3];
  if (v14 >= v43[4])
  {
    v14 = v43[5];
    if ((v14 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v14 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_60;
    }
    v61 = *(_QWORD *)(v14 + 8) ^ v43[6];
    v43[4] = v14 + HIDWORD(v61);
    v43[5] = v14 + (int)v61;
  }
  v43[3] = v14 + 32;
LABEL_60:
  *(_DWORD *)v14 = 0;
  WebCore::JSDOMObject::JSDOMObject(v14, v23);
  *(_QWORD *)(v14 + 24) = a3;
  if (*(_BYTE *)(v40 + 755))
    __dmb(0xAu);
  v56 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE336298 & 1) == 0)
  {
    qword_1EE336290 = (uint64_t)&off_1E32BE8F8;
    byte_1EE336298 = 1;
  }
  v66[0] = a3;
  if ((v14 & 8) != 0)
    v57 = (v14 - 112) | 1;
  else
    v57 = v14 & 0xFFFFFFFFFFFFC000;
  if ((v57 & 1) != 0)
    v58 = v57 + 47;
  else
    v58 = *(_QWORD *)v57 + 32;
  Allocator = *(JSC::Structure **)(v58 + 16);
  if (!Allocator)
    Allocator = (JSC::Structure *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v58 + 16) = *(_QWORD *)Allocator;
  *(_QWORD *)Allocator = v14;
  *((_QWORD *)Allocator + 1) = &qword_1EE336290;
  *((_QWORD *)Allocator + 2) = v56;
  v70 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v56 + 32), (uint64_t *)v66, (uint64_t *)&v70);
  if (v70)
    *((_QWORD *)v70 + 1) = 3;
  return v14;
}

_DWORD *WebCore::JSOESTextureHalfFloat::destroy(WebCore::JSOESTextureHalfFloat *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[2];
  }
  return result;
}

uint64_t WebCore::JSOESTextureHalfFloat::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSOESTextureHalfFloatOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  unint64_t v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  if (a5)
  {
    *a5 = "Reachable from jsOESTextureHalfFloat";
    a5[1] = 37;
  }
  v6 = atomic_load((unint64_t *)(v5 + 16));
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) == v8)
  {
    v17 = a4;
    v18 = v6;
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, (void *)v6);
    a4 = v17;
    v6 = v18;
    if ((_DWORD)result)
    {
LABEL_12:
      if (*(_BYTE *)(a4 + 131))
        (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)a4 + 152))(a4, v6);
      return 1;
    }
  }
  else
  {
    v9 = v8[1];
    v10 = (v6 + ~(v6 << 32)) ^ ((v6 + ~(v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(_QWORD *)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v15 == v6)
        goto LABEL_12;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x194D796BCLL);
      }
    }
  }
  return result;
}

_QWORD *WebCore::JSOESTextureHalfFloatOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _QWORD *result;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  ++v3[2];
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_DWORD **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_DWORD **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (v3[2] == 1)
    return (_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
  --v3[2];
  return result;
}

unint64_t WebCore::wrap<WebCore::OESTextureHalfFloat>(uint64_t a1, uint64_t a2, WTF::StringImpl *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  JSC::JSCell *v26;
  JSC::JSObject *Object;
  uint64_t *v28;
  unint64_t SlowCase;
  uint64_t v30;
  int v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  WTF::StringImpl *v35;
  uint64_t v36;
  WTF::StringImpl *v37;
  JSC::Structure *v38;
  int v39;
  JSC::JSObject *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  WTF *v52;
  uint64_t v53;
  uint64_t v54;
  WTF *v55;
  void *v56;
  int v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  JSC::Structure *Allocator;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  WTF::StringImpl *v68[6];
  int v69;
  int v70;
  int v71;
  JSC::Structure *v72;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          v14 = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return v14;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*((_DWORD *)a3 + 2);
  if (*(void (***)(WebCore::OESTextureHalfFloat *__hidden))a3 != off_1E33DD2B8)
  {
    __break(0xC471u);
    JUMPOUT(0x194D79F08);
  }
  v15 = *(_QWORD *)(a2 + 3296);
  if (v15)
  {
    v16 = *(_DWORD *)(v15 - 8);
    v17 = ((unint64_t)&WebCore::JSOESTextureHalfFloat::s_info
         + ~((_QWORD)&WebCore::JSOESTextureHalfFloat::s_info << 32)) ^ (((unint64_t)&WebCore::JSOESTextureHalfFloat::s_info
                                                                       + ~((_QWORD)&WebCore::JSOESTextureHalfFloat::s_info << 32)) >> 22);
    v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
    v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
    v20 = v16 & ((v19 >> 31) ^ v19);
    v21 = *(char ***)(v15 + 16 * v20);
    if (v21 == &WebCore::JSOESTextureHalfFloat::s_info)
    {
LABEL_15:
      v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
      if (v23)
        goto LABEL_43;
    }
    else
    {
      v22 = 1;
      while (v21)
      {
        v20 = ((_DWORD)v20 + v22) & v16;
        v21 = *(char ***)(v15 + 16 * v20);
        ++v22;
        if (v21 == &WebCore::JSOESTextureHalfFloat::s_info)
          goto LABEL_15;
      }
    }
  }
  v24 = *(_QWORD *)(a2 + 56);
  v25 = (unint64_t *)(v24 + 40136);
  v26 = *(JSC::JSCell **)(a2 + 656);
  LODWORD(v68[0]) = 23;
  if (((unint64_t)v26 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v26);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)v24);
  }
  v28 = (uint64_t *)(v24 + 38904);
  SlowCase = *v25;
  if (*v25 < *(_QWORD *)(v24 + 40144))
    goto LABEL_20;
  SlowCase = *(_QWORD *)(v24 + 40152);
  if ((SlowCase & 1) == 0)
  {
    v64 = *(_QWORD *)(SlowCase + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = SlowCase + HIDWORD(v64);
    *(_QWORD *)(v24 + 40152) = SlowCase + (int)v64;
LABEL_20:
    *v25 = SlowCase + 128;
    goto LABEL_21;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_21:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, v24, a2, v26, v68, &WebCore::JSOESTextureHalfFloatPrototype::s_info, 0, 0);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v30 = *v28;
  if (*(_QWORD *)(v24 + 38904) < *(_QWORD *)(v24 + 38912))
    goto LABEL_24;
  v30 = *(_QWORD *)(v24 + 38920);
  if ((v30 & 1) == 0)
  {
    v65 = *(_QWORD *)(v30 + 8) ^ *(_QWORD *)(v24 + 38928);
    *(_QWORD *)(v24 + 38912) = v30 + HIDWORD(v65);
    *(_QWORD *)(v24 + 38920) = v30 + (int)v65;
LABEL_24:
    *v28 = v30 + 16;
    goto LABEL_25;
  }
  JSC::sanitizeStackForVM();
  v30 = JSC::LocalAllocator::allocateSlowCase();
LABEL_25:
  *(_DWORD *)v30 = 0;
  v31 = *(_DWORD *)(SlowCase + 8);
  *(_DWORD *)v30 = SlowCase >> 4;
  *(_DWORD *)(v30 + 4) = v31;
  v67 = SlowCase;
  *(_QWORD *)(v30 + 8) = 0;
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  if ((*(_BYTE *)((16 * *(unsigned int *)v30) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)v30, (JSC::VM *)v24);
  WTF::AtomStringImpl::addLiteral();
  v32 = v68[0];
  JSC::reifyStaticProperty((JSC::VM *)v24, (uint64_t)&WebCore::JSOESTextureHalfFloat::s_info, (unint64_t *)v68, (uint64_t)&WebCore::JSOESTextureHalfFloatPrototypeTableValues, (unsigned __int8 *)v30);
  if (v32)
  {
    if (*(_DWORD *)v32 == 2)
      WTF::StringImpl::destroy(v32, v33);
    else
      *(_DWORD *)v32 -= 2;
  }
  v34 = *(_QWORD *)(*(_QWORD *)(v24 + 41952) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v36 = JSC::JSString::create(v24, v68);
  v37 = v68[0];
  v68[0] = 0;
  if (v37)
  {
    if (*(_DWORD *)v37 == 2)
      WTF::StringImpl::destroy(v37, v35);
    else
      *(_DWORD *)v37 -= 2;
  }
  v38 = (JSC::Structure *)(16 * (*(_DWORD *)v30 & 0xFFFFFFFE));
  v71 = *(_DWORD *)v30;
  v72 = v38;
  v39 = JSC::Structure::outOfLineCapacity(v38);
  v69 = 0;
  v70 = v39;
  v68[0] = (WTF::StringImpl *)&v70;
  v68[1] = (WTF::StringImpl *)v30;
  v68[2] = (WTF::StringImpl *)v24;
  v68[3] = (WTF::StringImpl *)&v71;
  v68[4] = (WTF::StringImpl *)&v72;
  v68[5] = (WTF::StringImpl *)&v69;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v38, (JSC::VM *)v24, v34, 6, (uint64_t)v68);
  if ((*(_BYTE *)((16 * *(unsigned int *)v30) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(v30, v24, v69, v36);
  *((_DWORD *)v38 + 4) |= 0x10u;
  LODWORD(v68[0]) = 23;
  if ((v30 & 0xFFFE000000000002) == 0)
  {
    v40 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v30);
    if (v40)
      JSC::JSObject::didBecomePrototype(v40, (JSC::VM *)v24);
  }
  v41 = *v25;
  if (*v25 >= *(_QWORD *)(v24 + 40144))
  {
    v41 = *(_QWORD *)(v24 + 40152);
    if ((v41 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v41 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_40;
    }
    v66 = *(_QWORD *)(v41 + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = v41 + HIDWORD(v66);
    *(_QWORD *)(v24 + 40152) = v41 + (int)v66;
  }
  *v25 = v41 + 128;
LABEL_40:
  *(_DWORD *)v41 = 0;
  MEMORY[0x19AEA4278](v41, v24, a2, v30, v68, &WebCore::JSOESTextureHalfFloat::s_info, 0, 0, v67);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v23 = WebCore::cacheDOMStructure((JSCell *)a2, v41, (uint64_t)&WebCore::JSOESTextureHalfFloat::s_info);
LABEL_43:
  v42 = *(_QWORD *)(a2 + 56);
  v43 = *(_QWORD *)(v42 + 41456);
  v44 = *(_QWORD *)(v43 + 23536);
  v45 = *(_QWORD **)(v44 + 5176);
  if (v45)
    goto LABEL_63;
  v46 = *(_QWORD *)(v43 + 22648);
  if (__ldaxr((unsigned __int8 *)v46))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v46))
  {
    goto LABEL_48;
  }
  MEMORY[0x19AEA534C](v46);
LABEL_48:
  v48 = *(_QWORD *)(v46 + 2824);
  if (!*(_QWORD *)(v48 + 5176))
  {
    v49 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)v68, "IsoSpace T");
    v72 = 0;
    MEMORY[0x19AEA3204](v49, v68, v42 + 192, v42 + 1872, 32, 8, &v72);
    v51 = (uint64_t)v72;
    v72 = 0;
    if (v51)
      (*(void (**)(uint64_t))(*(_QWORD *)v51 + 8))(v51);
    v52 = v68[0];
    v68[0] = 0;
    if (v52)
    {
      if (*(_DWORD *)v52 == 1)
        WTF::fastFree(v52, v50);
      else
        --*(_DWORD *)v52;
    }
    v53 = *(_QWORD *)(v48 + 5176);
    *(_QWORD *)(v48 + 5176) = v49;
    if (v53)
      (*(void (**)(uint64_t))(*(_QWORD *)v53 + 8))(v53);
  }
  v45 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v54 = *(_QWORD *)(v44 + 5176);
  *(_QWORD *)(v44 + 5176) = v45;
  if (v54)
  {
    v55 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v55, v56);
  }
  v57 = __ldxr((unsigned __int8 *)v46);
  if (v57 != 1)
  {
    __clrex();
    goto LABEL_62;
  }
  if (__stlxr(0, (unsigned __int8 *)v46))
LABEL_62:
    WTF::Lock::unlockSlow((WTF::Lock *)v46);
LABEL_63:
  v14 = v45[3];
  if (v14 >= v45[4])
  {
    v14 = v45[5];
    if ((v14 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v14 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_65;
    }
    v63 = *(_QWORD *)(v14 + 8) ^ v45[6];
    v45[4] = v14 + HIDWORD(v63);
    v45[5] = v14 + (int)v63;
  }
  v45[3] = v14 + 32;
LABEL_65:
  *(_DWORD *)v14 = 0;
  WebCore::JSDOMObject::JSDOMObject(v14, v23);
  *(_QWORD *)(v14 + 24) = a3;
  if (*(_BYTE *)(v42 + 755))
    __dmb(0xAu);
  v58 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE3362A8 & 1) == 0)
  {
    qword_1EE3362A0 = (uint64_t)&off_1E32BE928;
    byte_1EE3362A8 = 1;
  }
  v68[0] = a3;
  if ((v14 & 8) != 0)
    v59 = (v14 - 112) | 1;
  else
    v59 = v14 & 0xFFFFFFFFFFFFC000;
  if ((v59 & 1) != 0)
    v60 = v59 + 47;
  else
    v60 = *(_QWORD *)v59 + 32;
  Allocator = *(JSC::Structure **)(v60 + 16);
  if (!Allocator)
    Allocator = (JSC::Structure *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v60 + 16) = *(_QWORD *)Allocator;
  *(_QWORD *)Allocator = v14;
  *((_QWORD *)Allocator + 1) = &qword_1EE3362A0;
  *((_QWORD *)Allocator + 2) = v58;
  v72 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v58 + 32), (uint64_t *)v68, (uint64_t *)&v72);
  if (v72)
    *((_QWORD *)v72 + 1) = 3;
  return v14;
}

_DWORD *WebCore::JSOESTextureHalfFloatLinear::destroy(WebCore::JSOESTextureHalfFloatLinear *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[2];
  }
  return result;
}

uint64_t WebCore::JSOESTextureHalfFloatLinear::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSOESTextureHalfFloatLinearOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  unint64_t v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  if (a5)
  {
    *a5 = "Reachable from jsOESTextureHalfFloatLinear";
    a5[1] = 43;
  }
  v6 = atomic_load((unint64_t *)(v5 + 16));
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) == v8)
  {
    v17 = a4;
    v18 = v6;
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, (void *)v6);
    a4 = v17;
    v6 = v18;
    if ((_DWORD)result)
    {
LABEL_12:
      if (*(_BYTE *)(a4 + 131))
        (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)a4 + 152))(a4, v6);
      return 1;
    }
  }
  else
  {
    v9 = v8[1];
    v10 = (v6 + ~(v6 << 32)) ^ ((v6 + ~(v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(_QWORD *)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v15 == v6)
        goto LABEL_12;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x194D7A2CCLL);
      }
    }
  }
  return result;
}

_QWORD *WebCore::JSOESTextureHalfFloatLinearOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _QWORD *result;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  ++v3[2];
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_DWORD **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_DWORD **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (v3[2] == 1)
    return (_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
  --v3[2];
  return result;
}

unint64_t WebCore::wrap<WebCore::OESTextureHalfFloatLinear>(uint64_t a1, uint64_t a2, WTF::StringImpl *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  JSC::JSCell *v26;
  JSC::JSObject *Object;
  uint64_t *v28;
  unint64_t SlowCase;
  uint64_t v30;
  int v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  JSC::Structure *v36;
  int v37;
  JSC::JSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  WTF *v50;
  uint64_t v51;
  uint64_t v52;
  WTF *v53;
  void *v54;
  int v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  JSC::Structure *Allocator;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  WTF::StringImpl *v66[6];
  int v67;
  int v68;
  int v69;
  JSC::Structure *v70;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          v14 = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return v14;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*((_DWORD *)a3 + 2);
  if (*(void (***)(WebCore::OESTextureHalfFloatLinear *__hidden))a3 != off_1E33DD2D8)
  {
    __break(0xC471u);
    JUMPOUT(0x194D7AA98);
  }
  v15 = *(_QWORD *)(a2 + 3296);
  if (v15)
  {
    v16 = *(_DWORD *)(v15 - 8);
    v17 = ((unint64_t)&WebCore::JSOESTextureHalfFloatLinear::s_info
         + ~((_QWORD)&WebCore::JSOESTextureHalfFloatLinear::s_info << 32)) ^ (((unint64_t)&WebCore::JSOESTextureHalfFloatLinear::s_info
                                                                             + ~((_QWORD)&WebCore::JSOESTextureHalfFloatLinear::s_info << 32)) >> 22);
    v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
    v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
    v20 = v16 & ((v19 >> 31) ^ v19);
    v21 = *(char ***)(v15 + 16 * v20);
    if (v21 == &WebCore::JSOESTextureHalfFloatLinear::s_info)
    {
LABEL_15:
      v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
      if (v23)
        goto LABEL_38;
    }
    else
    {
      v22 = 1;
      while (v21)
      {
        v20 = ((_DWORD)v20 + v22) & v16;
        v21 = *(char ***)(v15 + 16 * v20);
        ++v22;
        if (v21 == &WebCore::JSOESTextureHalfFloatLinear::s_info)
          goto LABEL_15;
      }
    }
  }
  v24 = *(_QWORD *)(a2 + 56);
  v25 = (unint64_t *)(v24 + 40136);
  v26 = *(JSC::JSCell **)(a2 + 656);
  LODWORD(v66[0]) = 23;
  if (((unint64_t)v26 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v26);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)v24);
  }
  v28 = (uint64_t *)(v24 + 38904);
  SlowCase = *v25;
  if (*v25 < *(_QWORD *)(v24 + 40144))
    goto LABEL_20;
  SlowCase = *(_QWORD *)(v24 + 40152);
  if ((SlowCase & 1) == 0)
  {
    v62 = *(_QWORD *)(SlowCase + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = SlowCase + HIDWORD(v62);
    *(_QWORD *)(v24 + 40152) = SlowCase + (int)v62;
LABEL_20:
    *v25 = SlowCase + 128;
    goto LABEL_21;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_21:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, v24, a2, v26, v66, &WebCore::JSOESTextureHalfFloatLinearPrototype::s_info, 0, 0);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v30 = *v28;
  if (*(_QWORD *)(v24 + 38904) < *(_QWORD *)(v24 + 38912))
    goto LABEL_24;
  v30 = *(_QWORD *)(v24 + 38920);
  if ((v30 & 1) == 0)
  {
    v63 = *(_QWORD *)(v30 + 8) ^ *(_QWORD *)(v24 + 38928);
    *(_QWORD *)(v24 + 38912) = v30 + HIDWORD(v63);
    *(_QWORD *)(v24 + 38920) = v30 + (int)v63;
LABEL_24:
    *v28 = v30 + 16;
    goto LABEL_25;
  }
  JSC::sanitizeStackForVM();
  v30 = JSC::LocalAllocator::allocateSlowCase();
LABEL_25:
  *(_DWORD *)v30 = 0;
  v31 = *(_DWORD *)(SlowCase + 8);
  *(_DWORD *)v30 = SlowCase >> 4;
  *(_DWORD *)(v30 + 4) = v31;
  v65 = SlowCase;
  *(_QWORD *)(v30 + 8) = 0;
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v32 = *(_QWORD *)(*(_QWORD *)(v24 + 41952) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v34 = JSC::JSString::create(v24, v66);
  v35 = v66[0];
  v66[0] = 0;
  if (v35)
  {
    if (*(_DWORD *)v35 == 2)
      WTF::StringImpl::destroy(v35, v33);
    else
      *(_DWORD *)v35 -= 2;
  }
  v36 = (JSC::Structure *)(16 * (*(_DWORD *)v30 & 0xFFFFFFFE));
  v69 = *(_DWORD *)v30;
  v70 = v36;
  v37 = JSC::Structure::outOfLineCapacity(v36);
  v67 = 0;
  v68 = v37;
  v66[0] = (WTF::StringImpl *)&v68;
  v66[1] = (WTF::StringImpl *)v30;
  v66[2] = (WTF::StringImpl *)v24;
  v66[3] = (WTF::StringImpl *)&v69;
  v66[4] = (WTF::StringImpl *)&v70;
  v66[5] = (WTF::StringImpl *)&v67;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v36, (JSC::VM *)v24, v32, 6, (uint64_t)v66);
  if ((*(_BYTE *)((16 * *(unsigned int *)v30) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(v30, v24, v67, v34);
  *((_DWORD *)v36 + 4) |= 0x10u;
  LODWORD(v66[0]) = 23;
  if ((v30 & 0xFFFE000000000002) == 0)
  {
    v38 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v30);
    if (v38)
      JSC::JSObject::didBecomePrototype(v38, (JSC::VM *)v24);
  }
  v39 = *v25;
  if (*v25 >= *(_QWORD *)(v24 + 40144))
  {
    v39 = *(_QWORD *)(v24 + 40152);
    if ((v39 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v39 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_35;
    }
    v64 = *(_QWORD *)(v39 + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = v39 + HIDWORD(v64);
    *(_QWORD *)(v24 + 40152) = v39 + (int)v64;
  }
  *v25 = v39 + 128;
LABEL_35:
  *(_DWORD *)v39 = 0;
  MEMORY[0x19AEA4278](v39, v24, a2, v30, v66, &WebCore::JSOESTextureHalfFloatLinear::s_info, 0, 0, v65);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v23 = WebCore::cacheDOMStructure((JSCell *)a2, v39, (uint64_t)&WebCore::JSOESTextureHalfFloatLinear::s_info);
LABEL_38:
  v40 = *(_QWORD *)(a2 + 56);
  v41 = *(_QWORD *)(v40 + 41456);
  v42 = *(_QWORD *)(v41 + 23536);
  v43 = *(_QWORD **)(v42 + 5184);
  if (v43)
    goto LABEL_58;
  v44 = *(_QWORD *)(v41 + 22648);
  if (__ldaxr((unsigned __int8 *)v44))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v44))
  {
    goto LABEL_43;
  }
  MEMORY[0x19AEA534C](v44);
LABEL_43:
  v46 = *(_QWORD *)(v44 + 2824);
  if (!*(_QWORD *)(v46 + 5184))
  {
    v47 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)v66, "IsoSpace T");
    v70 = 0;
    MEMORY[0x19AEA3204](v47, v66, v40 + 192, v40 + 1872, 32, 8, &v70);
    v49 = (uint64_t)v70;
    v70 = 0;
    if (v49)
      (*(void (**)(uint64_t))(*(_QWORD *)v49 + 8))(v49);
    v50 = v66[0];
    v66[0] = 0;
    if (v50)
    {
      if (*(_DWORD *)v50 == 1)
        WTF::fastFree(v50, v48);
      else
        --*(_DWORD *)v50;
    }
    v51 = *(_QWORD *)(v46 + 5184);
    *(_QWORD *)(v46 + 5184) = v47;
    if (v51)
      (*(void (**)(uint64_t))(*(_QWORD *)v51 + 8))(v51);
  }
  v43 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v52 = *(_QWORD *)(v42 + 5184);
  *(_QWORD *)(v42 + 5184) = v43;
  if (v52)
  {
    v53 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v53, v54);
  }
  v55 = __ldxr((unsigned __int8 *)v44);
  if (v55 != 1)
  {
    __clrex();
    goto LABEL_57;
  }
  if (__stlxr(0, (unsigned __int8 *)v44))
LABEL_57:
    WTF::Lock::unlockSlow((WTF::Lock *)v44);
LABEL_58:
  v14 = v43[3];
  if (v14 >= v43[4])
  {
    v14 = v43[5];
    if ((v14 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v14 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_60;
    }
    v61 = *(_QWORD *)(v14 + 8) ^ v43[6];
    v43[4] = v14 + HIDWORD(v61);
    v43[5] = v14 + (int)v61;
  }
  v43[3] = v14 + 32;
LABEL_60:
  *(_DWORD *)v14 = 0;
  WebCore::JSDOMObject::JSDOMObject(v14, v23);
  *(_QWORD *)(v14 + 24) = a3;
  if (*(_BYTE *)(v40 + 755))
    __dmb(0xAu);
  v56 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE3362B8 & 1) == 0)
  {
    qword_1EE3362B0 = (uint64_t)&off_1E32BE958;
    byte_1EE3362B8 = 1;
  }
  v66[0] = a3;
  if ((v14 & 8) != 0)
    v57 = (v14 - 112) | 1;
  else
    v57 = v14 & 0xFFFFFFFFFFFFC000;
  if ((v57 & 1) != 0)
    v58 = v57 + 47;
  else
    v58 = *(_QWORD *)v57 + 32;
  Allocator = *(JSC::Structure **)(v58 + 16);
  if (!Allocator)
    Allocator = (JSC::Structure *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v58 + 16) = *(_QWORD *)Allocator;
  *(_QWORD *)Allocator = v14;
  *((_QWORD *)Allocator + 1) = &qword_1EE3362B0;
  *((_QWORD *)Allocator + 2) = v56;
  v70 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v56 + 32), (uint64_t *)v66, (uint64_t *)&v70);
  if (v70)
    *((_QWORD *)v70 + 1) = 3;
  return v14;
}

_DWORD *WebCore::JSOESVertexArrayObject::destroy(WebCore::JSOESVertexArrayObject *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[2];
  }
  return result;
}

uint64_t WebCore::JSOESVertexArrayObject::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSOESVertexArrayObjectOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  unint64_t v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  if (a5)
  {
    *a5 = "Reachable from jsOESVertexArrayObject";
    a5[1] = 38;
  }
  v6 = atomic_load((unint64_t *)(v5 + 16));
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) == v8)
  {
    v17 = a4;
    v18 = v6;
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, (void *)v6);
    a4 = v17;
    v6 = v18;
    if ((_DWORD)result)
    {
LABEL_12:
      if (*(_BYTE *)(a4 + 131))
        (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)a4 + 152))(a4, v6);
      return 1;
    }
  }
  else
  {
    v9 = v8[1];
    v10 = (v6 + ~(v6 << 32)) ^ ((v6 + ~(v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(_QWORD *)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v15 == v6)
        goto LABEL_12;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x194D7AE5CLL);
      }
    }
  }
  return result;
}

_QWORD *WebCore::JSOESVertexArrayObjectOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _QWORD *result;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  ++v3[2];
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_DWORD **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_DWORD **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (v3[2] == 1)
    return (_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
  --v3[2];
  return result;
}

unint64_t WebCore::wrap<WebCore::OESVertexArrayObject>(uint64_t a1, uint64_t a2, WTF::StringImpl *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  JSC::JSCell *v26;
  JSC::JSObject *Object;
  uint64_t *v28;
  unint64_t SlowCase;
  uint64_t v30;
  int v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  JSC::Structure *v36;
  int v37;
  JSC::JSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  WTF *v50;
  uint64_t v51;
  uint64_t v52;
  WTF *v53;
  void *v54;
  int v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  JSC::Structure *Allocator;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  WTF::StringImpl *v66[6];
  int v67;
  int v68;
  int v69;
  JSC::Structure *v70;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          v14 = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return v14;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF::StringImpl **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*((_DWORD *)a3 + 2);
  if (*(void (***)(WebCore::OESVertexArrayObject *__hidden))a3 != off_1E33DD378)
  {
    __break(0xC471u);
    JUMPOUT(0x194D7B644);
  }
  v15 = *(_QWORD *)(a2 + 3296);
  if (v15)
  {
    v16 = *(_DWORD *)(v15 - 8);
    v17 = ((unint64_t)&WebCore::JSOESVertexArrayObject::s_info
         + ~((_QWORD)&WebCore::JSOESVertexArrayObject::s_info << 32)) ^ (((unint64_t)&WebCore::JSOESVertexArrayObject::s_info
                                                                        + ~((_QWORD)&WebCore::JSOESVertexArrayObject::s_info << 32)) >> 22);
    v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
    v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
    v20 = v16 & ((v19 >> 31) ^ v19);
    v21 = *(char ***)(v15 + 16 * v20);
    if (v21 == &WebCore::JSOESVertexArrayObject::s_info)
    {
LABEL_15:
      v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
      if (v23)
        goto LABEL_38;
    }
    else
    {
      v22 = 1;
      while (v21)
      {
        v20 = ((_DWORD)v20 + v22) & v16;
        v21 = *(char ***)(v15 + 16 * v20);
        ++v22;
        if (v21 == &WebCore::JSOESVertexArrayObject::s_info)
          goto LABEL_15;
      }
    }
  }
  v24 = *(_QWORD *)(a2 + 56);
  v25 = (unint64_t *)(v24 + 40136);
  v26 = *(JSC::JSCell **)(a2 + 656);
  LODWORD(v66[0]) = 23;
  if (((unint64_t)v26 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v26);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)v24);
  }
  v28 = (uint64_t *)(v24 + 38904);
  SlowCase = *v25;
  if (*v25 < *(_QWORD *)(v24 + 40144))
    goto LABEL_20;
  SlowCase = *(_QWORD *)(v24 + 40152);
  if ((SlowCase & 1) == 0)
  {
    v62 = *(_QWORD *)(SlowCase + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = SlowCase + HIDWORD(v62);
    *(_QWORD *)(v24 + 40152) = SlowCase + (int)v62;
LABEL_20:
    *v25 = SlowCase + 128;
    goto LABEL_21;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_21:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, v24, a2, v26, v66, &WebCore::JSOESVertexArrayObjectPrototype::s_info, 0, 0);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v30 = *v28;
  if (*(_QWORD *)(v24 + 38904) < *(_QWORD *)(v24 + 38912))
    goto LABEL_24;
  v30 = *(_QWORD *)(v24 + 38920);
  if ((v30 & 1) == 0)
  {
    v63 = *(_QWORD *)(v30 + 8) ^ *(_QWORD *)(v24 + 38928);
    *(_QWORD *)(v24 + 38912) = v30 + HIDWORD(v63);
    *(_QWORD *)(v24 + 38920) = v30 + (int)v63;
LABEL_24:
    *v28 = v30 + 16;
    goto LABEL_25;
  }
  JSC::sanitizeStackForVM();
  v30 = JSC::LocalAllocator::allocateSlowCase();
LABEL_25:
  *(_DWORD *)v30 = 0;
  v31 = *(_DWORD *)(SlowCase + 8);
  *(_DWORD *)v30 = SlowCase >> 4;
  *(_DWORD *)(v30 + 4) = v31;
  v65 = SlowCase;
  *(_QWORD *)(v30 + 8) = 0;
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>((JSC::VM *)v24, (uint64_t)&WebCore::JSOESVertexArrayObject::s_info, &WebCore::JSOESVertexArrayObjectPrototypeTableValues, (JSC::JSObject *)v30);
  v32 = *(_QWORD *)(*(_QWORD *)(v24 + 41952) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v34 = JSC::JSString::create(v24, v66);
  v35 = v66[0];
  v66[0] = 0;
  if (v35)
  {
    if (*(_DWORD *)v35 == 2)
      WTF::StringImpl::destroy(v35, v33);
    else
      *(_DWORD *)v35 -= 2;
  }
  v36 = (JSC::Structure *)(16 * (*(_DWORD *)v30 & 0xFFFFFFFE));
  v69 = *(_DWORD *)v30;
  v70 = v36;
  v37 = JSC::Structure::outOfLineCapacity(v36);
  v67 = 0;
  v68 = v37;
  v66[0] = (WTF::StringImpl *)&v68;
  v66[1] = (WTF::StringImpl *)v30;
  v66[2] = (WTF::StringImpl *)v24;
  v66[3] = (WTF::StringImpl *)&v69;
  v66[4] = (WTF::StringImpl *)&v70;
  v66[5] = (WTF::StringImpl *)&v67;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v36, (JSC::VM *)v24, v32, 6, (uint64_t)v66);
  if ((*(_BYTE *)((16 * *(unsigned int *)v30) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(v30, v24, v67, v34);
  *((_DWORD *)v36 + 4) |= 0x10u;
  LODWORD(v66[0]) = 23;
  if ((v30 & 0xFFFE000000000002) == 0)
  {
    v38 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v30);
    if (v38)
      JSC::JSObject::didBecomePrototype(v38, (JSC::VM *)v24);
  }
  v39 = *v25;
  if (*v25 >= *(_QWORD *)(v24 + 40144))
  {
    v39 = *(_QWORD *)(v24 + 40152);
    if ((v39 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v39 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_35;
    }
    v64 = *(_QWORD *)(v39 + 8) ^ *(_QWORD *)(v24 + 40160);
    *(_QWORD *)(v24 + 40144) = v39 + HIDWORD(v64);
    *(_QWORD *)(v24 + 40152) = v39 + (int)v64;
  }
  *v25 = v39 + 128;
LABEL_35:
  *(_DWORD *)v39 = 0;
  MEMORY[0x19AEA4278](v39, v24, a2, v30, v66, &WebCore::JSOESVertexArrayObject::s_info, 0, 0, v65);
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v23 = WebCore::cacheDOMStructure((JSCell *)a2, v39, (uint64_t)&WebCore::JSOESVertexArrayObject::s_info);
LABEL_38:
  v40 = *(_QWORD *)(a2 + 56);
  v41 = *(_QWORD *)(v40 + 41456);
  v42 = *(_QWORD *)(v41 + 23536);
  v43 = *(_QWORD **)(v42 + 5192);
  if (v43)
    goto LABEL_58;
  v44 = *(_QWORD *)(v41 + 22648);
  if (__ldaxr((unsigned __int8 *)v44))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v44))
  {
    goto LABEL_43;
  }
  MEMORY[0x19AEA534C](v44);
LABEL_43:
  v46 = *(_QWORD *)(v44 + 2824);
  if (!*(_QWORD *)(v46 + 5192))
  {
    v47 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)v66, "IsoSpace T");
    v70 = 0;
    MEMORY[0x19AEA3204](v47, v66, v40 + 192, v40 + 1872, 32, 8, &v70);
    v49 = (uint64_t)v70;
    v70 = 0;
    if (v49)
      (*(void (**)(uint64_t))(*(_QWORD *)v49 + 8))(v49);
    v50 = v66[0];
    v66[0] = 0;
    if (v50)
    {
      if (*(_DWORD *)v50 == 1)
        WTF::fastFree(v50, v48);
      else
        --*(_DWORD *)v50;
    }
    v51 = *(_QWORD *)(v46 + 5192);
    *(_QWORD *)(v46 + 5192) = v47;
    if (v51)
      (*(void (**)(uint64_t))(*(_QWORD *)v51 + 8))(v51);
  }
  v43 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v52 = *(_QWORD *)(v42 + 5192);
  *(_QWORD *)(v42 + 5192) = v43;
  if (v52)
  {
    v53 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v53, v54);
  }
  v55 = __ldxr((unsigned __int8 *)v44);
  if (v55 != 1)
  {
    __clrex();
    goto LABEL_57;
  }
  if (__stlxr(0, (unsigned __int8 *)v44))
LABEL_57:
    WTF::Lock::unlockSlow((WTF::Lock *)v44);
LABEL_58:
  v14 = v43[3];
  if (v14 >= v43[4])
  {
    v14 = v43[5];
    if ((v14 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v14 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_60;
    }
    v61 = *(_QWORD *)(v14 + 8) ^ v43[6];
    v43[4] = v14 + HIDWORD(v61);
    v43[5] = v14 + (int)v61;
  }
  v43[3] = v14 + 32;
LABEL_60:
  *(_DWORD *)v14 = 0;
  WebCore::JSDOMObject::JSDOMObject(v14, v23);
  *(_QWORD *)(v14 + 24) = a3;
  if (*(_BYTE *)(v40 + 755))
    __dmb(0xAu);
  v56 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE3362C8 & 1) == 0)
  {
    qword_1EE3362C0 = (uint64_t)&off_1E32BE988;
    byte_1EE3362C8 = 1;
  }
  v66[0] = a3;
  if ((v14 & 8) != 0)
    v57 = (v14 - 112) | 1;
  else
    v57 = v14 & 0xFFFFFFFFFFFFC000;
  if ((v57 & 1) != 0)
    v58 = v57 + 47;
  else
    v58 = *(_QWORD *)v57 + 32;
  Allocator = *(JSC::Structure **)(v58 + 16);
  if (!Allocator)
    Allocator = (JSC::Structure *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v58 + 16) = *(_QWORD *)Allocator;
  *(_QWORD *)Allocator = v14;
  *((_QWORD *)Allocator + 1) = &qword_1EE3362C0;
  *((_QWORD *)Allocator + 2) = v56;
  v70 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v56 + 32), (uint64_t *)v66, (uint64_t *)&v70);
  if (v70)
    *((_QWORD *)v70 + 1) = 3;
  return v14;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSOfflineAudioCompletionEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  JSC::VM *v3;
  uint64_t v5;
  int v6;
  JSC::JSCell *v7;
  uint64_t Object;
  uint64_t v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  JSC::VM *v12;
  double v13;
  _BOOL4 v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  _BOOL4 v17;
  JSC::VM *v18;
  double v19;
  WTF::StringImpl *v20;
  unint64_t v21;
  _BOOL4 v22;
  JSC::VM *v23;
  double v24;
  WTF::StringImpl *v25;
  JSCell *v26;
  uint64_t v27;
  uint64_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v33;
  WTF::StringImpl *v34;
  uint64_t v35;
  WTF::StringImpl *v36;
  WebCore::JSDOMGlobalObject *v37;
  uint64_t v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  JSC::VM *v43;
  uint64_t v44;
  unsigned int v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char **v50;
  int v51;
  unint64_t v52;
  WebCore::JSEvent *v53;
  JSC::JSCell *v54;
  unint64_t Structure;
  JSC::Structure *v56;
  JSC::JSCell *v57;
  uint64_t v58;
  JSC::JSCell *v59;
  JSC::JSGlobalObject *v60;
  JSC::JSObject *v61;
  JSC::JSGlobalObject *v62;
  JSC::VM *v63;
  WebCore::JSDOMGlobalObject *v64;
  JSC::Structure *v65;
  JSC::VM *FunctionRealm;
  uint64_t v67;
  unsigned int v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char **v73;
  int v74;
  JSC::JSCell *v75;
  unint64_t v76;
  JSC::Structure *v77;
  JSC::JSCell *v78;
  uint64_t v79;
  unint64_t SubclassStructure;
  JSC::VM *v81;
  JSValue v82;
  BOOL v83;
  int v84;
  uint64_t v85;
  int *v86;
  int v87;
  BOOL v88;
  int v89;
  uint64_t v90;
  int *v91;
  int v92;
  BOOL v93;
  int v94;
  uint64_t v95;
  int *v96;
  int v97;
  JSC::VM *v98;
  _BOOL4 v99;
  WTF::StringImpl *v100[2];
  int v101;
  WTF::StringImpl *v102;
  int v103;
  JSC::VM *v104;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((unint64_t)(*(int *)(a2 + 32) - 1) <= 1)
  {
    v82.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v3, a1, v82);
  }
  v5 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v102);
  v6 = v103;
  if (!v103)
  {
    v7 = *(JSC::JSCell **)(a2 + 56);
    v104 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (((unint64_t)v7 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
LABEL_44:
      WebCore::throwRequiredMemberTypeError((int)a1, (int)&v104, "renderedBuffer", 15, "OfflineAudioCompletionEventInit", 32, "AudioBuffer", 12);
      goto LABEL_45;
    }
    if (((unint64_t)v7 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v7)) == 0)
    {
LABEL_59:
      JSC::throwTypeError();
      goto LABEL_45;
    }
    v9 = Object;
    WTF::AtomStringImpl::addLiteral();
    v11 = JSC::JSObject::get((JSC::Structure *)v9, a1, (unint64_t)v100[0]);
    if (v100[0])
    {
      if (*(_DWORD *)v100[0] == 2)
        WTF::StringImpl::destroy(v100[0], v10);
      else
        *(_DWORD *)v100[0] -= 2;
    }
    if (*((_DWORD *)v104 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v104) & 1) != 0)
    {
LABEL_45:
      v26 = 0;
      v27 = 1;
      v101 = 1;
LABEL_46:
      ((void (*)(JSC::VM **, WTF::StringImpl **))off_1E32C2190[v27])(&v104, v100);
      v6 = v103;
      goto LABEL_47;
    }
    if (v11 != 10)
    {
      v12 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v11 >= 0xFFFE000000000000)
        goto LABEL_132;
      *(_QWORD *)&v13 = v11 - 0x2000000000000;
      if (v11 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
      {
        v14 = v13 > 0.0 || v13 < 0.0;
        goto LABEL_16;
      }
      if ((v11 & 0xFFFE000000000002) != 0)
      {
        v14 = v11 == 7;
        goto LABEL_16;
      }
      v84 = *(unsigned __int8 *)(v11 + 5);
      if (v84 == 3)
      {
        v87 = *(_DWORD *)(v11 + 8);
      }
      else
      {
        if (v84 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0xA) & 1) != 0)
          {
            v83 = *(_QWORD *)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            goto LABEL_176;
          }
          v14 = 1;
          goto LABEL_16;
        }
        v85 = *(_QWORD *)(v11 + 8);
        if ((v85 & 1) != 0)
          v86 = (int *)(v11 + 16);
        else
          v86 = (int *)(v85 + 4);
        v87 = *v86;
      }
      v83 = v87 == 0;
      goto LABEL_176;
    }
    v99 = 0;
    while (1)
    {
      WTF::AtomStringImpl::addLiteral();
      v16 = JSC::JSObject::get((JSC::Structure *)v9, a1, (unint64_t)v100[0]);
      if (v100[0])
      {
        if (*(_DWORD *)v100[0] == 2)
          WTF::StringImpl::destroy(v100[0], v15);
        else
          *(_DWORD *)v100[0] -= 2;
      }
      if (*((_DWORD *)v104 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v104) & 1) != 0)
        goto LABEL_45;
      if (v16 == 10)
      {
        v17 = 0;
        goto LABEL_28;
      }
      v18 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v16 >= 0xFFFE000000000000)
        break;
      *(_QWORD *)&v19 = v16 - 0x2000000000000;
      if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        if ((v16 & 0xFFFE000000000002) != 0)
        {
          v17 = v16 == 7;
          goto LABEL_27;
        }
        v89 = *(unsigned __int8 *)(v16 + 5);
        if (v89 == 3)
        {
          v92 = *(_DWORD *)(v16 + 8);
          goto LABEL_165;
        }
        if (v89 == 2)
        {
          v90 = *(_QWORD *)(v16 + 8);
          if ((v90 & 1) != 0)
            v91 = (int *)(v16 + 16);
          else
            v91 = (int *)(v90 + 4);
          v92 = *v91;
LABEL_165:
          v88 = v92 == 0;
        }
        else
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_167:
            v17 = 1;
            goto LABEL_27;
          }
          v88 = *(_QWORD *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
        }
LABEL_180:
        v17 = !v88;
        goto LABEL_27;
      }
      if (v19 > 0.0)
        goto LABEL_167;
      v17 = v19 < 0.0;
LABEL_27:
      if (*((_DWORD *)v18 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v18) & 1) != 0)
        goto LABEL_45;
LABEL_28:
      WTF::AtomStringImpl::addLiteral();
      v21 = JSC::JSObject::get((JSC::Structure *)v9, a1, (unint64_t)v100[0]);
      if (v100[0])
      {
        if (*(_DWORD *)v100[0] == 2)
          WTF::StringImpl::destroy(v100[0], v20);
        else
          *(_DWORD *)v100[0] -= 2;
      }
      if (*((_DWORD *)v104 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v104) & 1) != 0)
        goto LABEL_45;
      if (v21 == 10)
      {
        v22 = 0;
        goto LABEL_39;
      }
      v23 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v21 >= 0xFFFE000000000000)
      {
        v93 = (_DWORD)v21 == 0;
        goto LABEL_170;
      }
      *(_QWORD *)&v24 = v21 - 0x2000000000000;
      if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        if ((v21 & 0xFFFE000000000002) != 0)
        {
          v22 = v21 == 7;
          goto LABEL_38;
        }
        v94 = *(unsigned __int8 *)(v21 + 5);
        if (v94 == 3)
        {
          v97 = *(_DWORD *)(v21 + 8);
        }
        else
        {
          if (v94 != 2)
          {
            if ((*(_BYTE *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0xA) & 1) == 0)
            {
LABEL_174:
              v22 = 1;
              goto LABEL_38;
            }
            v93 = *(_QWORD *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            goto LABEL_170;
          }
          v95 = *(_QWORD *)(v21 + 8);
          if ((v95 & 1) != 0)
            v96 = (int *)(v21 + 16);
          else
            v96 = (int *)(v95 + 4);
          v97 = *v96;
        }
        v93 = v97 == 0;
LABEL_170:
        v22 = !v93;
        goto LABEL_38;
      }
      if (v24 > 0.0)
        goto LABEL_174;
      v22 = v24 < 0.0;
LABEL_38:
      if (*((_DWORD *)v23 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v23) & 1) != 0)
        goto LABEL_45;
LABEL_39:
      WTF::AtomStringImpl::addLiteral();
      LODWORD(v11) = v100[0];
      v9 = JSC::JSObject::get((JSC::Structure *)v9, a1, (unint64_t)v100[0]);
      if (v100[0])
      {
        if (*(_DWORD *)v100[0] == 2)
          WTF::StringImpl::destroy(v100[0], v25);
        else
          *(_DWORD *)v100[0] -= 2;
      }
      if (*((_DWORD *)v104 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v104) & 1) != 0)
        goto LABEL_45;
      if (v9 == 10)
        goto LABEL_44;
      v98 = v3;
      v100[0] = *((WTF::StringImpl **)a1 + 7);
      if ((v9 & 0xFFFE000000000002) != 0)
        goto LABEL_59;
      v29 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
      v30 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
      if ((_DWORD)v29)
      {
        v31 = 16 * v29;
        if ((char **)v31 != &WebCore::JSAudioBuffer::s_info)
        {
          do
          {
            v31 = *(_QWORD *)(v31 + 16);
            v30 = v31 != 0;
          }
          while ((char **)v31 != &WebCore::JSAudioBuffer::s_info && v31 != 0);
        }
      }
      if (!v30)
        goto LABEL_59;
      v3 = *(JSC::VM **)(v9 + 24);
      if (!v3)
        goto LABEL_59;
      v33 = v5;
      ++*(_DWORD *)v3;
      v5 = v99;
      LOBYTE(v100[0]) = v99;
      BYTE1(v100[0]) = v17;
      BYTE2(v100[0]) = v22;
      v101 = 0;
      if (!v103)
      {
        v34 = v102;
        v102 = 0;
        v100[1] = 0;
        v35 = bmalloc::api::isoAllocate();
        WTF::MonotonicTime::now((WTF::MonotonicTime *)v35);
        *(_QWORD *)(v35 + 8) = 0;
        if (v17)
          v39 = 4;
        else
          v39 = 0;
        if (v22)
          v40 = 8;
        else
          v40 = 0;
        if (v99)
          v41 = 1212418;
        else
          v41 = 1212416;
        v42 = v41 | v39 | v40 | (v34 != 0) | *(_DWORD *)(v35 + 20) & 0xFFC00000;
        *(_DWORD *)(v35 + 16) = 1;
        *(_DWORD *)(v35 + 20) = v42;
        if (v34)
        {
          *(_DWORD *)v34 += 2;
          v42 = *(_DWORD *)(v35 + 20);
        }
        *(_QWORD *)(v35 + 24) = v34;
        *(_QWORD *)(v35 + 32) = 0;
        *(_QWORD *)(v35 + 40) = 0;
        *(_QWORD *)(v35 + 48) = 0;
        *(_QWORD *)(v35 + 56) = v38;
        *(_DWORD *)(v35 + 20) = v42 | 0x4000;
        *(_QWORD *)v35 = off_1E336B3D0;
        *(_QWORD *)(v35 + 64) = 0;
        *(_QWORD *)(v35 + 72) = v3;
        v104 = (JSC::VM *)v35;
        if (v34)
        {
          if (*(_DWORD *)v34 == 2)
          {
            WTF::StringImpl::destroy(v34, v36);
            if (*(void (***)(WebCore::OfflineAudioCompletionEvent *__hidden))v35 != off_1E336B3D0)
            {
              __break(0xC471u);
              JUMPOUT(0x194D7BFB8);
            }
          }
          else
          {
            *(_DWORD *)v34 -= 2;
          }
        }
        v43 = *(JSC::VM **)(v33 + 40);
        v44 = *((_QWORD *)v43 + 412);
        if (!v44)
          goto LABEL_82;
        v45 = *(_DWORD *)(v44 - 8);
        v46 = ((unint64_t)&WebCore::JSOfflineAudioCompletionEvent::s_info
             + ~((_QWORD)&WebCore::JSOfflineAudioCompletionEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSOfflineAudioCompletionEvent::s_info
                                                                                   + ~((_QWORD)&WebCore::JSOfflineAudioCompletionEvent::s_info << 32)) >> 22);
        v47 = 9 * ((v46 + ~(v46 << 13)) ^ ((v46 + ~(v46 << 13)) >> 8));
        v48 = (v47 ^ (v47 >> 15)) + ~((v47 ^ (v47 >> 15)) << 27);
        v49 = v45 & ((v48 >> 31) ^ v48);
        v50 = *(char ***)(v44 + 16 * v49);
        if (v50 == &WebCore::JSOfflineAudioCompletionEvent::s_info)
        {
LABEL_81:
          v52 = *(_QWORD *)(v44 + 16 * v49 + 8);
          if (!v52)
            goto LABEL_82;
        }
        else
        {
          v51 = 1;
          while (v50)
          {
            v49 = ((_DWORD)v49 + v51) & v45;
            v50 = *(char ***)(v44 + 16 * v49);
            ++v51;
            if (v50 == &WebCore::JSOfflineAudioCompletionEvent::s_info)
              goto LABEL_81;
          }
LABEL_82:
          v53 = (WebCore::JSEvent *)*((_QWORD *)v43 + 7);
          v54 = (JSC::JSCell *)WebCore::JSEvent::prototype(v53, *(JSC::VM **)(v33 + 40), v37);
          Structure = WebCore::JSOfflineAudioCompletionEventPrototype::createStructure((uint64_t *)v53, (uint64_t)v43, v54);
          *(_DWORD *)(Structure + 16) |= 0x80000u;
          v57 = (JSC::JSCell *)WebCore::JSOfflineAudioCompletionEventPrototype::create(v53, v43, Structure, v56);
          v58 = WebCore::JSOfflineAudioCompletionEvent::createStructure((uint64_t *)v53, (uint64_t)v43, v57);
          v52 = WebCore::cacheDOMStructure((JSCell *)v43, v58, (uint64_t)&WebCore::JSOfflineAudioCompletionEvent::s_info);
        }
        v26 = (JSCell *)WebCore::JSOfflineAudioCompletionEvent::create(v52, v43, (uint64_t *)&v104);
        WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*((_QWORD *)v43 + 415), v35, (uint64_t)v26);
        v59 = *(JSC::JSCell **)(a2 + 40);
        if (((unint64_t)v59 & 0xFFFE000000000002) != 0
          || (v60 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v59)) == 0
          || (v62 = v60, v60 == *(JSC::JSGlobalObject **)(a2 + 24))
          || (v63 = (JSC::VM *)*((_QWORD *)a1 + 7),
              FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v60, v61),
              *((_DWORD *)v63 + 20))
          && (JSC::VM::hasExceptionsAfterHandlingTraps(v63) & 1) != 0)
        {
LABEL_96:
          if (*((_DWORD *)v98 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v98) & 1) != 0)
            v26 = 0;
          v81 = v104;
          v104 = 0;
          if (v81)
          {
            if (*((_DWORD *)v81 + 4) == 1)
              (*(void (**)(JSC::VM *))(*(_QWORD *)v81 + 8))(v81);
            else
              --*((_DWORD *)v81 + 4);
          }
          v27 = 0;
          goto LABEL_46;
        }
        v67 = *((_QWORD *)FunctionRealm + 412);
        if (v67)
        {
          v68 = *(_DWORD *)(v67 - 8);
          v69 = ((unint64_t)&WebCore::JSOfflineAudioCompletionEvent::s_info
               + ~((_QWORD)&WebCore::JSOfflineAudioCompletionEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSOfflineAudioCompletionEvent::s_info
                                                                                     + ~((_QWORD)&WebCore::JSOfflineAudioCompletionEvent::s_info << 32)) >> 22);
          v70 = 9 * ((v69 + ~(v69 << 13)) ^ ((v69 + ~(v69 << 13)) >> 8));
          v71 = (v70 ^ (v70 >> 15)) + ~((v70 ^ (v70 >> 15)) << 27);
          v72 = v68 & ((v71 >> 31) ^ v71);
          v73 = *(char ***)(v67 + 16 * v72);
          if (v73 != &WebCore::JSOfflineAudioCompletionEvent::s_info)
          {
            v74 = 1;
            while (v73)
            {
              v72 = ((_DWORD)v72 + v74) & v68;
              v73 = *(char ***)(v67 + 16 * v72);
              ++v74;
              if (v73 == &WebCore::JSOfflineAudioCompletionEvent::s_info)
                goto LABEL_92;
            }
            goto LABEL_93;
          }
LABEL_92:
          v64 = *(WebCore::JSDOMGlobalObject **)(v67 + 16 * v72 + 8);
          if (!v64)
            goto LABEL_93;
        }
        else
        {
LABEL_93:
          v75 = (JSC::JSCell *)WebCore::JSEvent::prototype(v63, FunctionRealm, v64);
          v76 = WebCore::JSOfflineAudioCompletionEventPrototype::createStructure((uint64_t *)v63, (uint64_t)FunctionRealm, v75);
          *(_DWORD *)(v76 + 16) |= 0x80000u;
          v78 = (JSC::JSCell *)WebCore::JSOfflineAudioCompletionEventPrototype::create(v63, FunctionRealm, v76, v77);
          v79 = WebCore::JSOfflineAudioCompletionEvent::createStructure((uint64_t *)v63, (uint64_t)FunctionRealm, v78);
          v64 = (WebCore::JSDOMGlobalObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v79, (uint64_t)&WebCore::JSOfflineAudioCompletionEvent::s_info);
        }
        SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v62, v64, v65);
        if (!*((_DWORD *)v63 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v63) & 1) == 0)
          JSC::JSObject::setStructure(v26, v63, SubclassStructure);
        goto LABEL_96;
      }
      v12 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_132:
      v83 = (_DWORD)v11 == 0;
LABEL_176:
      v14 = !v83;
LABEL_16:
      v99 = v14;
      if (*((_DWORD *)v12 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v12) & 1) != 0)
        goto LABEL_45;
    }
    v88 = (_DWORD)v16 == 0;
    goto LABEL_180;
  }
  v26 = 0;
LABEL_47:
  if (v6 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32BEAA0[v6])(v100, &v102);
  return v26;
}

uint64_t WebCore::JSOfflineAudioCompletionEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSOfflineAudioCompletionEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSOfflineAudioCompletionEventPrototype::create(WebCore::JSOfflineAudioCompletionEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSOfflineAudioCompletionEvent::s_info, (uint64_t)&WebCore::JSOfflineAudioCompletionEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSOfflineAudioCompletionEvent>,(WebCore::DOMConstructorID)259>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2072);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSOfflineAudioCompletionEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000002, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSOfflineAudioCompletionEvent::s_info
         + ~((_QWORD)&WebCore::JSOfflineAudioCompletionEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSOfflineAudioCompletionEvent::s_info
                                                                               + ~((_QWORD)&WebCore::JSOfflineAudioCompletionEvent::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSOfflineAudioCompletionEvent::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSOfflineAudioCompletionEvent::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEvent::prototype((WebCore::JSEvent *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSOfflineAudioCompletionEventPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSOfflineAudioCompletionEventPrototype::create((WebCore::JSOfflineAudioCompletionEventPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSOfflineAudioCompletionEvent::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSOfflineAudioCompletionEvent::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2072) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsOfflineAudioCompletionEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSOfflineAudioCompletionEventPrototype::s_info != (char **)(16
                                                                           * *(unsigned int *)(16
                                                                                             * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                             + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSOfflineAudioCompletionEvent>,(WebCore::DOMConstructorID)259>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsOfflineAudioCompletionEvent_renderedBuffer(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::AudioBuffer *a4)
{
  return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WebCore::JSDOMGlobalObject **)(*(_QWORD *)(a2 + 24) + 72), a4);
}

uint64_t WebCore::JSOfflineAudioCompletionEvent::subspaceForImpl(WebCore::JSOfflineAudioCompletionEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2096);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 2096))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 2096);
    *(_QWORD *)(v8 + 2096) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 2096);
  *(_QWORD *)(v3 + 2096) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSOfflineAudioContext>::construct(JSC *this, uint64_t a2)
{
  JSC::VM *v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  JSC::JSCell *v8;
  uint64_t v9;
  uint64_t Object;
  JSC::Structure *v11;
  WTF::StringImpl *v12;
  unint64_t v13;
  char *v14;
  char *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  WTF::StringImpl *v23;
  JSC::VM *v24;
  double v25;
  float v26;
  WTF::StringImpl *v27;
  WebCore::JSDOMGlobalObject *v28;
  JSC::VM *v29;
  WTF::StringImpl *v30;
  unsigned int *v31;
  unsigned int *v32;
  unsigned int v33;
  unsigned int v34;
  JSValue v35;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  WTF::StringImpl *v40;
  unint64_t v41;
  int v42;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  JSC::VM *v46;
  double v47;
  float v48;
  WTF::StringImpl *v49;
  WebCore::JSDOMGlobalObject *v50;
  JSC::VM *v51;
  uint64_t (***v52)(WebCore::ContextDestructionObserver *__hidden);
  unsigned int *v53;
  unsigned int *v54;
  unsigned int v55;
  unsigned int v56;
  JSC::VM **v57;
  char hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v59;
  JSC::VM *v60;
  char v61;
  WTF::StringImpl *v62;
  JSC::VM *v63;
  uint64_t v64;
  double v65;
  double v66;
  JSC::VM *v67;
  uint64_t (***v68)(WebCore::ContextDestructionObserver *__hidden);
  WTF::StringImpl *v69;
  float v70;
  uint64_t v71;
  unsigned int v72;
  int v73;
  JSC::VM *v74;
  WTF::StringImpl *v75;
  WTF::StringImpl *v76;
  float v77;

  v3 = (JSC::VM *)*((_QWORD *)this + 7);
  v4 = *(int *)(a2 + 32) - 1;
  if (v4 >= 3)
    v4 = 3;
  if (!v4)
  {
    v35.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v3, this, v35);
  }
  if (v4 == 3)
  {
    v74 = (JSC::VM *)*((_QWORD *)this + 7);
    v20 = *(_QWORD *)(a2 + 24);
    v21 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(v20 + 40));
    if (v21)
    {
      v22 = v21;
      WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *(_QWORD *)(a2 + 48), &v72);
      if (v73)
        return 0;
      WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *(_QWORD *)(a2 + 56), &v71);
      if (HIDWORD(v71))
        return 0;
      v23 = *(WTF::StringImpl **)(a2 + 64);
      v75 = v23;
      v24 = (JSC::VM *)*((_QWORD *)this + 7);
      v68 = (uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))v24;
      if ((unint64_t)v23 >= 0xFFFE000000000000)
      {
        v25 = (double)(int)v23;
      }
      else if ((unint64_t)v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v60 = v24;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v75, this);
        v24 = v60;
      }
      else
      {
        *(_QWORD *)&v25 = (char *)v23 - 0x2000000000000;
      }
      if (!*((_DWORD *)v24 + 20)
        || (v65 = v25,
            hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v24),
            v25 = v65,
            (hasExceptionsAfterHandlingTraps & 1) == 0))
      {
        if ((*(_QWORD *)&v25 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
          && v25 >= -3.40282347e38
          && v25 <= 3.40282347e38)
        {
          v26 = v25;
          LODWORD(v75) = v72;
          v76 = (WTF::StringImpl *)v71;
          v77 = v26;
          WebCore::OfflineAudioContext::create(v22, (uint64_t)&v75, (uint64_t)&v68);
          if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
            goto LABEL_110;
          if (v70 == 0.0)
          {
            v29 = *(JSC::VM **)(v20 + 40);
            v30 = (WTF::StringImpl *)v68;
            v68 = 0;
            v75 = v30;
            if (*(uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))v30 != &off_1E336B498)
            {
              __break(0xC471u);
              JUMPOUT(0x194D7D368);
            }
            v19 = (JSCell *)WebCore::createWrapper<WebCore::OfflineAudioContext,WebCore::OfflineAudioContext>(v29, (uint64_t *)&v75, v28);
            v31 = (unsigned int *)v75;
            v75 = 0;
            if (v31)
            {
              v32 = v31 + 6;
              do
              {
                v33 = __ldaxr(v32);
                v34 = v33 - 1;
              }
              while (__stlxr(v34, v32));
              if (!v34)
              {
                atomic_store(1u, v31 + 6);
                (*(void (**)(unsigned int *))(*(_QWORD *)v31 + 16))(v31);
              }
            }
            v3 = v74;
          }
          else
          {
            if (LODWORD(v70) != 1)
              goto LABEL_138;
            LOBYTE(v75) = (_BYTE)v68;
            v59 = v69;
            v69 = 0;
            v76 = v59;
            if (!*((_QWORD *)v3 + 2))
            {
              WebCore::propagateExceptionSlowPath(this, &v74, (unsigned __int8 *)&v75);
              v59 = v76;
            }
            v76 = 0;
            if (v59)
            {
              if (*(_DWORD *)v59 == 2)
                WTF::StringImpl::destroy(v59, v27);
              else
                *(_DWORD *)v59 -= 2;
            }
            v19 = 0;
          }
          if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0
            || (WebCore::setSubclassStructureIfNeeded<WebCore::OfflineAudioContext>(this, a2, v19), *((_DWORD *)v3 + 20))
            && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
          {
LABEL_110:
            v19 = 0;
          }
          if (v70 != NAN)
            ((void (*)(WTF::StringImpl **, uint64_t (****)(WebCore::ContextDestructionObserver *__hidden)))off_1E32C21F0[LODWORD(v70)])(&v75, &v68);
          return v19;
        }
        JSC::throwTypeError();
      }
      return 0;
    }
    v57 = &v74;
    return (JSCell *)WebCore::throwConstructorScriptExecutionContextUnavailableError(this, v57, (uint64_t)"OfflineAudioContext", 20);
  }
  if (v4 != 1)
    return (JSCell *)JSC::throwTypeError();
  v67 = (JSC::VM *)*((_QWORD *)this + 7);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(v6 + 40));
  if (!v7)
  {
    v57 = &v67;
    return (JSCell *)WebCore::throwConstructorScriptExecutionContextUnavailableError(this, v57, (uint64_t)"OfflineAudioContext", 20);
  }
  v8 = *(JSC::JSCell **)(a2 + 48);
  v74 = (JSC::VM *)*((_QWORD *)this + 7);
  if (((unint64_t)v8 & 0xFFFFFFFFFFFFFFF7) == 2)
    goto LABEL_15;
  if (((unint64_t)v8 & 0xFFFE000000000002) != 0 || (v9 = v7, (Object = JSC::JSCell::getObject(v8)) == 0))
  {
    JSC::throwTypeError();
    return 0;
  }
  v11 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v13 = JSC::JSObject::get(v11, this, (unint64_t)v75);
  if (v75)
  {
    if (*(_DWORD *)v75 == 2)
      WTF::StringImpl::destroy(v75, v12);
    else
      *(_DWORD *)v75 -= 2;
  }
  if (*((_DWORD *)v74 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v74) & 1) != 0)
    return 0;
  if (v13 == 10)
  {
LABEL_15:
    v14 = "length";
    v15 = "unsigned long";
    v16 = (int)this;
    v17 = 7;
    v18 = 14;
LABEL_16:
    WebCore::throwRequiredMemberTypeError(v16, (int)&v74, v14, v17, "OfflineAudioContextOptions", 27, v15, v18);
    return 0;
  }
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, v13, &v72);
  if (v73)
    return 0;
  v38 = (WTF::StringImpl *)v72;
  WTF::AtomStringImpl::addLiteral();
  v39 = v75;
  v41 = JSC::JSObject::get(v11, this, (unint64_t)v75);
  if (v39)
  {
    if (*(_DWORD *)v39 == 2)
      WTF::StringImpl::destroy(v39, v40);
    else
      *(_DWORD *)v39 -= 2;
  }
  if (*((_DWORD *)v74 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v74) & 1) != 0)
    return 0;
  if (v41 == 10)
  {
    v71 = 1;
    v42 = 1;
  }
  else
  {
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, v41, &v71);
    if (HIDWORD(v71))
      return 0;
    v42 = v71;
  }
  WTF::AtomStringImpl::addLiteral();
  v43 = v75;
  v45 = (WTF::StringImpl *)JSC::JSObject::get(v11, this, (unint64_t)v75);
  if (v43)
  {
    if (*(_DWORD *)v43 == 2)
      WTF::StringImpl::destroy(v43, v44);
    else
      *(_DWORD *)v43 -= 2;
  }
  if (*((_DWORD *)v74 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v74) & 1) != 0)
    return 0;
  if (v45 == (WTF::StringImpl *)10)
  {
    v14 = "sampleRate";
    v15 = "float";
    v16 = (int)this;
    v17 = 11;
    v18 = 6;
    goto LABEL_16;
  }
  v75 = v45;
  v46 = (JSC::VM *)*((_QWORD *)this + 7);
  v68 = (uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))v46;
  if ((unint64_t)v45 >= 0xFFFE000000000000)
  {
    v47 = (double)(int)v45;
  }
  else if ((unint64_t)v45 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v63 = v46;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v75, this);
    v46 = v63;
  }
  else
  {
    *(_QWORD *)&v47 = (char *)v45 - 0x2000000000000;
  }
  if (*((_DWORD *)v46 + 20))
  {
    v66 = v47;
    v61 = JSC::VM::hasExceptionsAfterHandlingTraps(v46);
    v47 = v66;
    if ((v61 & 1) != 0)
      return 0;
  }
  if ((*(_QWORD *)&v47 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL || v47 < -3.40282347e38 || v47 > 3.40282347e38)
  {
    JSC::throwTypeError();
    return 0;
  }
  v48 = v47;
  LODWORD(v68) = v42;
  v69 = v38;
  v70 = v48;
  WebCore::OfflineAudioContext::create(v9, (uint64_t)&v68, (uint64_t)&v75);
  if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
  {
LABEL_134:
    v19 = 0;
LABEL_80:
    if (v77 != NAN)
      ((void (*)(uint64_t (****)(WebCore::ContextDestructionObserver *__hidden), WTF::StringImpl **))off_1E32C21F0[LODWORD(v77)])(&v68, &v75);
    return v19;
  }
  if (v77 == 0.0)
  {
    v51 = *(JSC::VM **)(v6 + 40);
    v52 = (uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))v75;
    v75 = 0;
    v68 = v52;
    if (*v52 != &off_1E336B498)
    {
      __break(0xC471u);
      JUMPOUT(0x194D7D48CLL);
    }
    v19 = (JSCell *)WebCore::createWrapper<WebCore::OfflineAudioContext,WebCore::OfflineAudioContext>(v51, (uint64_t *)&v68, v50);
    v53 = (unsigned int *)v68;
    v68 = 0;
    if (v53)
    {
      v54 = v53 + 6;
      do
      {
        v55 = __ldaxr(v54);
        v56 = v55 - 1;
      }
      while (__stlxr(v56, v54));
      if (!v56)
      {
        atomic_store(1u, v53 + 6);
        (*(void (**)(unsigned int *))(*(_QWORD *)v53 + 16))(v53);
      }
    }
    v3 = v67;
    goto LABEL_78;
  }
  if (LODWORD(v77) == 1)
  {
    LOBYTE(v68) = (_BYTE)v75;
    v62 = v76;
    v76 = 0;
    v69 = v62;
    if (!*((_QWORD *)v3 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v67, (unsigned __int8 *)&v68);
      v62 = v69;
    }
    v69 = 0;
    if (v62)
    {
      if (*(_DWORD *)v62 == 2)
        WTF::StringImpl::destroy(v62, v49);
      else
        *(_DWORD *)v62 -= 2;
    }
    v19 = 0;
LABEL_78:
    if (!*((_DWORD *)v3 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) == 0)
    {
      WebCore::setSubclassStructureIfNeeded<WebCore::OfflineAudioContext>(this, a2, v19);
      if (!*((_DWORD *)v3 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) == 0)
        goto LABEL_80;
    }
    goto LABEL_134;
  }
LABEL_138:
  v64 = std::__throw_bad_variant_access[abi:sn180100]();
  return (JSCell *)WebCore::JSOfflineAudioContext::analyzeHeap(v64);
}

uint64_t WebCore::JSOfflineAudioContext::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24) - 32);
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSBaseAudioContext::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSBaseAudioContext::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSBaseAudioContext::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSOfflineAudioContextPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSOfflineAudioContextPrototype::create(WebCore::JSOfflineAudioContextPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<6u>(this, (uint64_t)&WebCore::JSOfflineAudioContext::s_info, &WebCore::JSOfflineAudioContextPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSOfflineAudioContext>,(WebCore::DOMConstructorID)260>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2080);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSBaseAudioContext>,(WebCore::DOMConstructorID)246>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSOfflineAudioContext>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSOfflineAudioContext::s_info
         + ~((_QWORD)&WebCore::JSOfflineAudioContext::s_info << 32)) ^ (((unint64_t)&WebCore::JSOfflineAudioContext::s_info
                                                                       + ~((_QWORD)&WebCore::JSOfflineAudioContext::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSOfflineAudioContext::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSOfflineAudioContext::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSBaseAudioContext::prototype((WebCore::JSBaseAudioContext *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSOfflineAudioContextPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSOfflineAudioContextPrototype::create((WebCore::JSOfflineAudioContextPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSOfflineAudioContext::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSOfflineAudioContext::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2080) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsOfflineAudioContextConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSOfflineAudioContextPrototype::s_info != (char **)(16
                                                                   * *(unsigned int *)(16
                                                                                     * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                     + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSOfflineAudioContext>,(WebCore::DOMConstructorID)260>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsOfflineAudioContext_length(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(unsigned int *)(*(_QWORD *)(a2 + 24) + 384);
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

uint64_t WebCore::jsOfflineAudioContext_oncomplete(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  char *v6;
  unsigned int *v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;

  v5 = *(WebCore **)(a2 + 24);
  v6 = (char *)v5 - 32;
  v7 = (unsigned int *)((char *)v5 - 8);
  do
    v8 = __ldaxr(v7);
  while (__stlxr(v8 + 1, v7));
  v9 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v9 || (v10 = *(_QWORD *)(v9 + 96)) == 0)
    v10 = WebCore::threadGlobalDataSlow(a1);
  v11 = *(_QWORD *)(v10 + 40);
  if (!v11)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v10);
    v11 = *(_QWORD *)(v10 + 40);
  }
  v12 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v11 + 424), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  do
  {
    v13 = __ldaxr(v7);
    v14 = v13 - 1;
  }
  while (__stlxr(v14, v7));
  if (!v14)
  {
    atomic_store(1u, v7);
    (*(void (**)(char *))(*(_QWORD *)v6 + 16))(v6);
  }
  return v12;
}

BOOL WebCore::setJSOfflineAudioContext_oncomplete(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  unsigned int *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v8 = (char **)(16 * v6);
    if ((_DWORD)v6)
      v9 = v8 == &WebCore::JSOfflineAudioContext::s_info;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSOfflineAudioContext::s_info && v8 != 0);
    }
    if (v7)
    {
      v11 = *(WebCore::EventTarget **)(a2 + 24);
      v12 = (unsigned int *)((char *)v11 - 8);
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 + 1, v12));
      v14 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
      if (!v14 || (v15 = *(_QWORD *)(v14 + 96)) == 0)
        v15 = WebCore::threadGlobalDataSlow(a1);
      v16 = *(_QWORD *)(v15 + 40);
      if (!v16)
      {
        WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v15);
        v16 = *(_QWORD *)(v15 + 40);
      }
      WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v16 + 424), a3, (_DWORD *)a2);
      do
      {
        v17 = __ldaxr(v12);
        v18 = v17 - 1;
      }
      while (__stlxr(v18, v12));
      if (v18)
      {
        if (a3)
          goto LABEL_23;
      }
      else
      {
        atomic_store(1u, v12);
        (*(void (**)(uint64_t))(*((_QWORD *)v11 - 4) + 16))((uint64_t)v11 - 32);
        if (a3)
        {
LABEL_23:
          if ((a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
            JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
        }
      }
      return 1;
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::JSOfflineAudioContext::subspaceForImpl(WebCore::JSOfflineAudioContext *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2104);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 2104);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 2104);
    *(_QWORD *)(v8 + 2104) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 2104);
  *(_QWORD *)(v3 + 2104) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSOfflineAudioContextOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v6 = *(_QWORD *)(v5 - 24);
  if (!v6)
    return 0;
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7 || *(_BYTE *)(v7 + 180))
    return 0;
  if (*(_QWORD *)(v5 - 16)
    || (result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 - 32) + 64))(v5 - 32), (_DWORD)result))
  {
    if (a5)
    {
      *a5 = "ActiveDOMObject with pending activity";
      a5[1] = 38;
    }
    return 1;
  }
  return result;
}

uint64_t WebCore::JSOfflineAudioContextOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int *v30;
  uint64_t v31;

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  result = v3 - 32;
  v5 = (unsigned int *)(v3 - 8);
  do
    v6 = __ldaxr(v5);
  while (__stlxr(v6 + 1, v5));
  if (*(_DWORD *)(a3 + 48))
  {
    v12 = *(_QWORD *)(a3 + 32);
    v10 = (uint64_t *)(a3 + 32);
    v11 = v12;
    if (v12)
    {
      v13 = *(_DWORD *)(v11 - 8);
      v14 = (~(result << 32) + result) ^ ((unint64_t)(~(result << 32) + result) >> 22);
      v15 = 9 * ((v14 + ~(v14 << 13)) ^ ((v14 + ~(v14 << 13)) >> 8));
      v16 = (v15 ^ (v15 >> 15)) + ~((v15 ^ (v15 >> 15)) << 27);
      v17 = v13 & ((v16 >> 31) ^ v16);
      v18 = *(_QWORD *)(v11 + 16 * v17);
      if (v18 != result)
      {
        v19 = 1;
        while (v18)
        {
          v17 = ((_DWORD)v17 + v19) & v13;
          v18 = *(_QWORD *)(v11 + 16 * v17);
          ++v19;
          if (v18 == result)
            goto LABEL_14;
        }
        v17 = *(unsigned int *)(v11 - 4);
      }
LABEL_14:
      if (v17 != *(_DWORD *)(v11 - 4))
      {
        v20 = (_QWORD *)(v11 + 16 * v17);
        *v20 = -1;
        v23 = v20[1];
        v22 = v20 + 1;
        v21 = v23;
        if (v23)
        {
          *(_QWORD *)(v21 + 8) = 3;
          *v22 = 0;
        }
        ++*(_DWORD *)(*v10 - 16);
        v24 = *v10;
        if (*v10)
          v25 = *(_DWORD *)(v24 - 12) - 1;
        else
          v25 = -1;
        *(_DWORD *)(v24 - 12) = v25;
        v26 = *v10;
        if (*v10)
        {
          v27 = 6 * *(_DWORD *)(v26 - 12);
          v28 = *(_DWORD *)(v26 - 4);
          if (v27 < v28 && v28 >= 9)
          {
            v30 = v5;
            v31 = result;
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v10, v28 >> 1, 0);
            v5 = v30;
            result = v31;
          }
        }
      }
    }
  }
  else
  {
    v7 = *(_QWORD *)(v3 + 8);
    if (v7)
    {
      *(_QWORD *)(v7 + 8) = 3;
      *(_QWORD *)(v3 + 8) = 0;
    }
  }
  do
  {
    v8 = __ldaxr(v5);
    v9 = v8 - 1;
  }
  while (__stlxr(v9, v5));
  if (!v9)
  {
    atomic_store(1u, v5);
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
  }
  return result;
}

uint64_t WebCore::createWrapper<WebCore::OfflineAudioContext,WebCore::OfflineAudioContext>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSBaseAudioContext *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (!v6)
    goto LABEL_7;
  v7 = *(_DWORD *)(v6 - 8);
  v8 = ((unint64_t)&WebCore::JSOfflineAudioContext::s_info
      + ~((_QWORD)&WebCore::JSOfflineAudioContext::s_info << 32)) ^ (((unint64_t)&WebCore::JSOfflineAudioContext::s_info
                                                                    + ~((_QWORD)&WebCore::JSOfflineAudioContext::s_info << 32)) >> 22);
  v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
  v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
  v11 = v7 & ((v10 >> 31) ^ v10);
  v12 = *(char ***)(v6 + 16 * v11);
  if (v12 != &WebCore::JSOfflineAudioContext::s_info)
  {
    v13 = 1;
    while (v12)
    {
      v11 = ((_DWORD)v11 + v13) & v7;
      v12 = *(char ***)(v6 + 16 * v11);
      ++v13;
      if (v12 == &WebCore::JSOfflineAudioContext::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
  if (!v14)
  {
LABEL_7:
    v15 = (WebCore::JSBaseAudioContext *)*((_QWORD *)a1 + 7);
    v16 = (JSC::JSCell *)WebCore::JSBaseAudioContext::prototype(v15, a1, a3);
    Structure = WebCore::JSOfflineAudioContextPrototype::createStructure((uint64_t *)v15, (uint64_t)a1, v16);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v19 = (JSC::JSCell *)WebCore::JSOfflineAudioContextPrototype::create(v15, a1, Structure, v18);
    v20 = WebCore::JSOfflineAudioContext::createStructure((uint64_t *)v15, (uint64_t)a1, v19);
    v14 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSOfflineAudioContext::s_info);
  }
  v21 = WebCore::JSOfflineAudioContext::create(v14, a1, a2);
  WebCore::cacheWrapper<WebCore::OfflineAudioContext,WebCore::JSOfflineAudioContext>(*((_QWORD *)a1 + 415), v5, v21);
  return v21;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSOffscreenCanvas>::construct(JSC *this, uint64_t a2)
{
  JSC::VM *v3;
  uint64_t v5;
  uint64_t v6;
  WebCore::OffscreenCanvas *v7;
  WebCore::ScriptExecutionContext *v8;
  WebCore::OffscreenCanvas *v9;
  uint64_t v10;
  unint64_t v11;
  JSCell *v12;
  JSC::JSCell *v13;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v15;
  JSC::JSGlobalObject *v16;
  WebCore::JSOffscreenCanvas *v17;
  JSC::VM *FunctionRealm;
  JSC::JSObject *v19;
  JSC::Structure *v20;
  unint64_t SubclassStructure;
  bmalloc::api *v23;
  void *v24;
  JSValue v25;
  JSC::VM *v27;
  WebCore::OffscreenCanvas *v28;

  v3 = (JSC::VM *)*((_QWORD *)this + 7);
  v27 = v3;
  if ((unint64_t)(*(int *)(a2 + 32) - 1) <= 1)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v3, this, v25);
  }
  v5 = *(_QWORD *)(a2 + 24);
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(v5 + 40));
  if (!v6)
    return (JSCell *)WebCore::throwConstructorScriptExecutionContextUnavailableError(this, &v27, (uint64_t)"OffscreenCanvas", 16);
  v7 = (WebCore::OffscreenCanvas *)v6;
  WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, *(_QWORD *)(a2 + 48), &v28);
  v8 = v28;
  if ((unint64_t)v28 >> 32)
    return 0;
  WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(this, *(_QWORD *)(a2 + 56), &v28);
  if ((unint64_t)v28 >> 32)
    return 0;
  WebCore::OffscreenCanvas::create(v7, v8, (uint64_t)v28, (uint64_t *)&v28);
  v9 = v28;
  if (*(uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))v28 != &off_1E33D6B90)
  {
    __break(0xC471u);
    JUMPOUT(0x194D7E7B0);
  }
  v10 = *(_QWORD *)(v5 + 40);
  v11 = WebCore::getDOMStructure<WebCore::JSOffscreenCanvas>(*(WebCore::JSOffscreenCanvas **)(v10 + 56), (JSC::VM *)v10);
  v12 = (JSCell *)WebCore::JSOffscreenCanvas::create(v11, v10, (uint64_t *)&v28);
  WebCore::cacheWrapper<WebCore::OffscreenCanvas,WebCore::JSOffscreenCanvas>(*(_QWORD *)(v10 + 3320), (uint64_t)v9, (uint64_t)v12);
  v13 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v13 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v13);
    if (Object)
    {
      v16 = Object;
      if (Object != *(JSC::JSGlobalObject **)(a2 + 24))
      {
        v17 = (WebCore::JSOffscreenCanvas *)*((_QWORD *)this + 7);
        FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(this, Object, v15);
        if (!*((_DWORD *)v17 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) == 0)
        {
          v19 = (JSC::JSObject *)WebCore::getDOMStructure<WebCore::JSOffscreenCanvas>(v17, FunctionRealm);
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(this, v16, v19, v20);
          if (!*((_DWORD *)v17 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) == 0)
            JSC::JSObject::setStructure(v12, v17, SubclassStructure);
        }
      }
    }
  }
  if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
    v12 = 0;
  if (v28)
  {
    if (*((_DWORD *)v28 + 6) == 1)
    {
      WebCore::OffscreenCanvas::~OffscreenCanvas(v28);
      bmalloc::api::isoDeallocate(v23, v24);
    }
    else
    {
      --*((_DWORD *)v28 + 6);
    }
  }
  return v12;
}

BOOL WebCore::JSDOMConstructor<WebCore::JSOffscreenCanvas>::initializeProperties(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v13;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000002, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v13);
  v9 = v13;
  v13 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v11 = WebCore::getDOMStructure<WebCore::JSOffscreenCanvas>((WebCore::JSOffscreenCanvas *)a2, a3);
  return JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v11 + 48), 14);
}

WTF::StringImpl *WebCore::JSOffscreenCanvasPrototype::finishCreation(WebCore::JSOffscreenCanvasPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<6u>(a2, (uint64_t)&WebCore::JSOffscreenCanvas::s_info, &WebCore::JSOffscreenCanvasPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSOffscreenCanvas::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24) - 144);
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEventTarget::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSOffscreenCanvas::estimatedSize(WebCore::JSOffscreenCanvas *this, JSC::JSCell *a2, JSC::VM *a3)
{
  return *(_QWORD *)(*((_QWORD *)this + 3) - 88) + JSC::JSObject::estimatedSize(this, a2, a3);
}

uint64_t WebCore::JSOffscreenCanvas::visitChildren(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  JSC::JSObject::visitChildren();
  result = WebCore::JSEventTarget::visitAdditionalChildren<JSC::SlotVisitor>(a1, a2);
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 88);
  if (*(_BYTE *)(a2 + 184))
  {
    *(_QWORD *)(a2 + 144) += v5;
    v6 = *(_QWORD *)(a2 + 160);
    v7 = __CFADD__(v6, v5);
    v8 = v6 + v5;
    if (v7)
      *(_BYTE *)(a2 + 152) = 1;
    else
      *(_QWORD *)(a2 + 160) = v8;
    return JSC::Heap::reportExternalMemoryVisited(*(JSC::Heap **)(a2 + 80));
  }
  return result;
}

uint64_t WebCore::JSOffscreenCanvas::visitChildren(WebCore::JSOffscreenCanvas *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    WebCore::JSEventTarget::visitChildren(this, a2, a3);
    (*(void (**)(JSC::JSCell *, _QWORD))(*(_QWORD *)a2 + 96))(a2, *(_QWORD *)(*((_QWORD *)this + 3) - 88));
    result = (*(uint64_t (**)(JSC::JSCell *, _QWORD))(*(_QWORD *)a2 + 104))(a2, *(_QWORD *)(*((_QWORD *)this + 3) - 88));
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

unint64_t WebCore::JSOffscreenCanvas::createPrototype(WebCore::JSOffscreenCanvas *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  int v3;
  JSC::JSCell *v5;
  unint64_t v6;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v3 = (int)a2;
  v5 = (JSC::JSCell *)WebCore::JSEventTarget::prototype(this, a2, a3);
  v6 = JSC::Structure::create((uint64_t *)this, v3, v5);
  *(_DWORD *)(v6 + 16) |= 0x80000u;
  return WebCore::JSOffscreenCanvasPrototype::create(this, v6, v7, v8);
}

unint64_t WebCore::JSOffscreenCanvasPrototype::create(WebCore::JSOffscreenCanvasPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSOffscreenCanvasPrototype::finishCreation((WebCore::JSOffscreenCanvasPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::jsOffscreenCanvasConstructor(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  JSC::JSCell *v5;
  uint64_t Structure;
  JSC::Heap *v7;
  unint64_t v8;

  v2 = *(_QWORD *)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSOffscreenCanvasPrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  result = *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 4744);
  if (!result)
  {
    v5 = (JSC::JSCell *)WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventTarget>,(WebCore::DOMConstructorID)450>(v2, v3);
    Structure = WebCore::JSDOMConstructor<WebCore::JSOffscreenCanvas>::createStructure((uint64_t *)v2, v3, v5);
    result = WebCore::JSDOMConstructor<WebCore::JSOffscreenCanvas>::create(v2, Structure, (JSC::VM *)v3);
    *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 4744) = result;
    if (result)
    {
      if (*(_DWORD *)(v2 + 760) >= *(unsigned __int8 *)(v3 + 7))
      {
        v7 = (JSC::Heap *)(v2 + 192);
        v8 = result;
        JSC::Heap::writeBarrierSlowPath(v7, (const JSCell *)v3);
        return v8;
      }
    }
  }
  return result;
}

unint64_t WebCore::jsOffscreenCanvas_width(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  WebCore::CanvasRenderingContext *v6;
  WebCore::InspectorInstrumentation *v7;
  WebCore::ScriptExecutionContext *v8;
  uint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  _QWORD v12[2];
  WTF::StringImpl *v13;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 - 112) + 88))(v2 - 112);
  if (v3 && *(_BYTE *)(v3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v12[0] = 0;
    v12[1] = 0;
    v6 = (WebCore::CanvasRenderingContext *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 - 112) + 88))(v2 - 112);
    v7 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD *))(**((_QWORD **)v6 + 4) + 144))(*((_QWORD **)v6 + 4));
    if (v7)
    {
      v9 = WebCore::InspectorInstrumentation::instrumentingAgents(v7, v8);
      if (v9)
      {
        v10 = *(_QWORD *)(v9 + 96);
        if (v10)
          WebCore::InspectorCanvasAgent::recordAction(v10, v6, (const WTF::StringImpl *)&v13, v12);
      }
    }
    v11 = v13;
    v13 = 0;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v8);
      else
        *(_DWORD *)v11 -= 2;
    }
  }
  v4 = *(unsigned int *)(v2 - 104);
  if ((v4 & 0x80000000) != 0)
    return COERCE__INT64((double)v4) + 0x2000000000000;
  else
    return v4 | 0xFFFE000000000000;
}

uint64_t WebCore::setJSOffscreenCanvas_width(WTF::StringImpl *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  unsigned int v9;
  WebCore::OffscreenCanvas *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  WebCore::CanvasRenderingContext *v15;
  WebCore::InspectorInstrumentation *v16;
  WebCore::ScriptExecutionContext *v17;
  uint64_t v18;
  WebCore::InspectorCanvasAgent *v19;
  WebCore::CanvasRenderingContext *v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD *v25;
  WTF::StringImpl *v26;
  _QWORD v27[2];
  WTF::StringImpl *v28;
  _QWORD v29[2];
  char v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSOffscreenCanvas::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSOffscreenCanvas::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(a1, a3, v29);
  v9 = v29[0];
  if (HIDWORD(v29[0]))
    return 0;
  v10 = (WebCore::OffscreenCanvas *)(v8 - 144);
  v12 = *(_QWORD *)(v8 - 112);
  v11 = v8 - 112;
  v13 = (*(uint64_t (**)(uint64_t))(v12 + 88))(v11);
  if (v13 && *(_BYTE *)(v13 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v15 = (WebCore::CanvasRenderingContext *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 88))(v11);
    v16 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD *))(**((_QWORD **)v15 + 4) + 144))(*((_QWORD **)v15 + 4));
    if (v16
      && (v18 = WebCore::InspectorInstrumentation::instrumentingAgents(v16, v17)) != 0
      && (v19 = *(WebCore::InspectorCanvasAgent **)(v18 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v19, v15, v9, (uint64_t)v29);
    }
    else
    {
      LOBYTE(v29[0]) = 0;
      v30 = 0;
    }
    v27[0] = v29;
    v27[1] = 1;
    v20 = (WebCore::CanvasRenderingContext *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 88))(v11);
    v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD *))(**((_QWORD **)v20 + 4) + 144))(*((_QWORD **)v20 + 4));
    if (v21)
    {
      v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22);
      if (v23)
      {
        v24 = *(_QWORD *)(v23 + 96);
        if (v24)
          WebCore::InspectorCanvasAgent::recordAction(v24, v20, (const WTF::StringImpl *)&v28, v27);
      }
    }
    if (v30)
    {
      v25 = (_DWORD *)v29[0];
      v29[0] = 0;
      if (v25)
      {
        if (*v25 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v25;
      }
    }
    v26 = v28;
    v28 = 0;
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
        WTF::StringImpl::destroy(v26, v22);
      else
        *(_DWORD *)v26 -= 2;
    }
  }
  WebCore::OffscreenCanvas::setWidth(v10, v9);
  return 1;
}

unint64_t WebCore::jsOffscreenCanvas_height(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  WebCore::CanvasRenderingContext *v6;
  WebCore::InspectorInstrumentation *v7;
  WebCore::ScriptExecutionContext *v8;
  uint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  _QWORD v12[2];
  WTF::StringImpl *v13;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 - 112) + 88))(v2 - 112);
  if (v3 && *(_BYTE *)(v3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v12[0] = 0;
    v12[1] = 0;
    v6 = (WebCore::CanvasRenderingContext *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 - 112) + 88))(v2 - 112);
    v7 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD *))(**((_QWORD **)v6 + 4) + 144))(*((_QWORD **)v6 + 4));
    if (v7)
    {
      v9 = WebCore::InspectorInstrumentation::instrumentingAgents(v7, v8);
      if (v9)
      {
        v10 = *(_QWORD *)(v9 + 96);
        if (v10)
          WebCore::InspectorCanvasAgent::recordAction(v10, v6, (const WTF::StringImpl *)&v13, v12);
      }
    }
    v11 = v13;
    v13 = 0;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v8);
      else
        *(_DWORD *)v11 -= 2;
    }
  }
  v4 = *(unsigned int *)(v2 - 100);
  if ((v4 & 0x80000000) != 0)
    return COERCE__INT64((double)v4) + 0x2000000000000;
  else
    return v4 | 0xFFFE000000000000;
}

uint64_t WebCore::setJSOffscreenCanvas_height(WTF::StringImpl *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  uint64_t v9;
  WebCore::OffscreenCanvas *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  WebCore::CanvasRenderingContext *v15;
  WebCore::InspectorInstrumentation *v16;
  WebCore::ScriptExecutionContext *v17;
  uint64_t v18;
  WebCore::InspectorCanvasAgent *v19;
  WebCore::CanvasRenderingContext *v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD *v25;
  WTF::StringImpl *v26;
  _QWORD v27[2];
  WTF::StringImpl *v28;
  _QWORD v29[2];
  char v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSOffscreenCanvas::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSOffscreenCanvas::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(a1, a3, v29);
  v9 = v29[0];
  if (HIDWORD(v29[0]))
    return 0;
  v10 = (WebCore::OffscreenCanvas *)(v8 - 144);
  v12 = *(_QWORD *)(v8 - 112);
  v11 = v8 - 112;
  v13 = (*(uint64_t (**)(uint64_t))(v12 + 88))(v11);
  if (v13 && *(_BYTE *)(v13 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v15 = (WebCore::CanvasRenderingContext *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 88))(v11);
    v16 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD *))(**((_QWORD **)v15 + 4) + 144))(*((_QWORD **)v15 + 4));
    if (v16
      && (v18 = WebCore::InspectorInstrumentation::instrumentingAgents(v16, v17)) != 0
      && (v19 = *(WebCore::InspectorCanvasAgent **)(v18 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v19, v15, v9, (uint64_t)v29);
    }
    else
    {
      LOBYTE(v29[0]) = 0;
      v30 = 0;
    }
    v27[0] = v29;
    v27[1] = 1;
    v20 = (WebCore::CanvasRenderingContext *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 88))(v11);
    v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD *))(**((_QWORD **)v20 + 4) + 144))(*((_QWORD **)v20 + 4));
    if (v21)
    {
      v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22);
      if (v23)
      {
        v24 = *(_QWORD *)(v23 + 96);
        if (v24)
          WebCore::InspectorCanvasAgent::recordAction(v24, v20, (const WTF::StringImpl *)&v28, v27);
      }
    }
    if (v30)
    {
      v25 = (_DWORD *)v29[0];
      v29[0] = 0;
      if (v25)
      {
        if (*v25 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v25;
      }
    }
    v26 = v28;
    v28 = 0;
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
        WTF::StringImpl::destroy(v26, v22);
      else
        *(_DWORD *)v26 -= 2;
    }
  }
  WebCore::OffscreenCanvas::setHeight(v10, v9);
  return 1;
}

uint64_t WebCore::JSOffscreenCanvasOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  WTF::ConcurrentPtrHashSet *v12;
  _DWORD *v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unsigned int v18;
  unsigned int v19;
  void *v20;
  uint64_t result;

  v7 = *a2;
  v8 = *(_QWORD *)(*a2 + 24);
  v9 = *(_QWORD *)(v8 - 136);
  if (!v9 || (v10 = *(_QWORD *)(v9 + 8)) == 0 || *(_BYTE *)(v10 + 180))
  {
    if (!a5)
      goto LABEL_5;
    goto LABEL_17;
  }
  if (*(_QWORD *)(v8 - 128) || ((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v8 - 144) + 64))(v8 - 144) & 1) != 0)
  {
    if (a5)
    {
      *a5 = "ActiveDOMObject with pending activity";
      a5[1] = 38;
    }
    return 1;
  }
  v8 = *(_QWORD *)(v7 + 24);
  if (a5)
  {
LABEL_17:
    *a5 = "Reachable from OffscreenCanvas";
    a5[1] = 31;
  }
LABEL_5:
  v11 = (void *)(v8 - 112);
  v12 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v13 = (_DWORD *)*((_QWORD *)v12 + 6);
  if ((_DWORD *)((char *)v12 + 56) == v13)
  {
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v12, v11);
    if (!(_DWORD)result)
      return result;
LABEL_19:
    if (*(_BYTE *)(a4 + 131))
      (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v11);
    return 1;
  }
  v14 = v13[1];
  v15 = ((unint64_t)v11 + ~((_QWORD)v11 << 32)) ^ (((unint64_t)v11 + ~((_QWORD)v11 << 32)) >> 22);
  v16 = 9 * ((v15 + ~(v15 << 13)) ^ ((v15 + ~(v15 << 13)) >> 8));
  v17 = (v16 ^ (v16 >> 15)) + ~((v16 ^ (v16 >> 15)) << 27);
  v18 = v14 & ((v17 >> 31) ^ v17);
  v19 = v18;
  while (1)
  {
    v20 = *(void **)&v13[2 * v19 + 4];
    if (!v20)
      return 0;
    if (v11 == v20)
      goto LABEL_19;
    v19 = (v19 + 1) & v14;
    if (v19 == v18)
    {
      __break(0xC471u);
      JUMPOUT(0x194D7F550);
    }
  }
}

void WebCore::JSOffscreenCanvasOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  WebCore::OffscreenCanvas *v4;
  int v5;
  uint64_t v6;
  bmalloc::api *v7;
  void *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  WebCore::OffscreenCanvas *v17;
  int v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v29;

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v4 = (WebCore::OffscreenCanvas *)(v3 - 144);
  v5 = *(_DWORD *)(v3 - 120);
  *(_DWORD *)(v3 - 120) = v5 + 1;
  if (*(_DWORD *)(a3 + 48))
  {
    v11 = *(_QWORD *)(a3 + 32);
    v9 = (uint64_t *)(a3 + 32);
    v10 = v11;
    if (v11)
    {
      v12 = *(_DWORD *)(v10 - 8);
      v13 = ((unint64_t)v4 + ~((_QWORD)v4 << 32)) ^ (((unint64_t)v4 + ~((_QWORD)v4 << 32)) >> 22);
      v14 = 9 * ((v13 + ~(v13 << 13)) ^ ((v13 + ~(v13 << 13)) >> 8));
      v15 = (v14 ^ (v14 >> 15)) + ~((v14 ^ (v14 >> 15)) << 27);
      v16 = v12 & ((v15 >> 31) ^ v15);
      v17 = *(WebCore::OffscreenCanvas **)(v10 + 16 * v16);
      if (v17 != v4)
      {
        v18 = 1;
        while (v17)
        {
          v16 = ((_DWORD)v16 + v18) & v12;
          v17 = *(WebCore::OffscreenCanvas **)(v10 + 16 * v16);
          ++v18;
          if (v17 == v4)
            goto LABEL_12;
        }
        v16 = *(unsigned int *)(v10 - 4);
      }
LABEL_12:
      if (v16 != *(_DWORD *)(v10 - 4))
      {
        v19 = (_QWORD *)(v10 + 16 * v16);
        *v19 = -1;
        v22 = v19[1];
        v21 = v19 + 1;
        v20 = v22;
        if (v22)
        {
          *(_QWORD *)(v20 + 8) = 3;
          *v21 = 0;
        }
        ++*(_DWORD *)(*v9 - 16);
        v23 = *v9;
        if (*v9)
          v24 = *(_DWORD *)(v23 - 12) - 1;
        else
          v24 = -1;
        *(_DWORD *)(v23 - 12) = v24;
        v25 = *v9;
        if (*v9)
        {
          v26 = 6 * *(_DWORD *)(v25 - 12);
          v27 = *(_DWORD *)(v25 - 4);
          if (v26 < v27 && v27 >= 9)
          {
            v29 = v3;
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v9, v27 >> 1, 0);
            v3 = v29;
          }
        }
      }
    }
    v5 = *(_DWORD *)(v3 - 120) - 1;
  }
  else
  {
    v6 = *(_QWORD *)(v3 + 8);
    if (v6)
    {
      *(_QWORD *)(v6 + 8) = 3;
      *(_QWORD *)(v3 + 8) = 0;
    }
  }
  if (v5)
  {
    *(_DWORD *)(v3 - 120) = v5;
  }
  else
  {
    WebCore::OffscreenCanvas::~OffscreenCanvas(v4);
    bmalloc::api::isoDeallocate(v7, v8);
  }
}

uint64_t WebCore::wrap<WebCore::OffscreenCanvas>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;
  bmalloc::api *v10;
  void *v11;
  uint64_t v12;
  unsigned int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  WebCore::OffscreenCanvas *v20;

  v5 = *(_QWORD *)(a2 + 3320);
  if (*(_DWORD *)(v5 + 48))
  {
    v12 = *(_QWORD *)(v5 + 32);
    if (!v12)
      goto LABEL_5;
    v13 = *(_DWORD *)(v12 - 8);
    v14 = (~(a3 << 32) + a3) ^ ((unint64_t)(~(a3 << 32) + a3) >> 22);
    v15 = 9 * ((v14 + ~(v14 << 13)) ^ ((v14 + ~(v14 << 13)) >> 8));
    v16 = (v15 ^ (v15 >> 15)) + ~((v15 ^ (v15 >> 15)) << 27);
    v17 = v13 & ((v16 >> 31) ^ v16);
    v18 = *(_QWORD *)(v12 + 16 * v17);
    if (v18 != a3)
    {
      v19 = 1;
      while (v18)
      {
        v17 = ((_DWORD)v17 + v19) & v13;
        v18 = *(_QWORD *)(v12 + 16 * v17);
        ++v19;
        if (v18 == a3)
          goto LABEL_16;
      }
      goto LABEL_5;
    }
LABEL_16:
    v6 = *(_QWORD *)(v12 + 16 * v17 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *(_QWORD *)(a3 + 152);
    if (!v6)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    v7 = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return v7;
  }
LABEL_5:
  ++*(_DWORD *)(a3 + 24);
  v20 = (WebCore::OffscreenCanvas *)a3;
  if (*(uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))a3 == &off_1E33D6B90)
  {
    v8 = WebCore::getDOMStructure<WebCore::JSOffscreenCanvas>(*(WebCore::JSOffscreenCanvas **)(a2 + 56), (JSC::VM *)a2);
    v7 = WebCore::JSOffscreenCanvas::create(v8, a2, (uint64_t *)&v20);
    WebCore::cacheWrapper<WebCore::OffscreenCanvas,WebCore::JSOffscreenCanvas>(*(_QWORD *)(a2 + 3320), a3, v7);
    if (v20)
    {
      if (*((_DWORD *)v20 + 6) == 1)
      {
        WebCore::OffscreenCanvas::~OffscreenCanvas(v20);
        bmalloc::api::isoDeallocate(v10, v11);
      }
      else
      {
        --*((_DWORD *)v20 + 6);
      }
    }
    return v7;
  }
  result = 539;
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSOffscreenCanvas::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSOffscreenCanvas::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSOffscreenCanvas::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24) - 144;
  else
    return 0;
}

uint64_t WebCore::JSOffscreenCanvasRenderingContext2D::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 88);
  if (!v2 || !*(_BYTE *)(v2 + 24))
    return WebCore::JSOffscreenCanvasRenderingContext2D::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
  result = 75;
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSOffscreenCanvasRenderingContext2D::destroy(uint64_t this, JSCell *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(this + 24);
  *(_QWORD *)(this + 24) = 0;
  if (v2)
    return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 24))(*(_QWORD *)(v2 + 32));
  return this;
}

uint64_t WebCore::JSOffscreenCanvasRenderingContext2D::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSOffscreenCanvasRenderingContext2D::visitChildren(uint64_t a1, uint64_t a2)
{
  JSC::JSObject::visitChildren();
  return WebCore::JSOffscreenCanvasRenderingContext2D::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
}

uint64_t WebCore::JSOffscreenCanvasRenderingContext2D::visitChildren(WebCore::JSOffscreenCanvasRenderingContext2D *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    JSC::JSObject::visitChildren();
    result = WebCore::JSOffscreenCanvasRenderingContext2D::visitAdditionalChildren<JSC::AbstractSlotVisitor>((uint64_t)this, (uint64_t)a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSOffscreenCanvasRenderingContext2DPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSOffscreenCanvasRenderingContext2DPrototype::create(WebCore::JSOffscreenCanvasRenderingContext2DPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  int *v9;
  uint64_t i;
  char *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  WTF::StringImpl *v17;
  int v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  int v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  int v26;
  WTF::StringImpl *v27;
  uint64_t v28;
  WTF::StringImpl *v29;
  int v30;
  WTF::StringImpl *v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  JSC::Structure *v36;
  int v37;
  unint64_t v39;
  WTF::StringImpl *v40[6];
  int v41;
  int v42;
  JSC::Structure *v43;
  int v44;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v39 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v39);
    *((_QWORD *)this + 4865) = SlowCase + (int)v39;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  v9 = (int *)((char *)this + 93124);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)SlowCase, this);
  for (i = 0; i != 335; i += 5)
  {
    v11 = (&WebCore::JSOffscreenCanvasRenderingContext2DPrototypeTableValues)[i + 1];
    if (v11)
    {
      if (v11 == (char *)2)
        JSC::SmallStrings::singleCharacterStringRep((WebCore::JSOffscreenCanvasRenderingContext2DPrototype *)((char *)this + 41968));
      else
        WTF::AtomStringImpl::addLiteral();
      v12 = v40[0];
      JSC::reifyStaticProperty(this, (uint64_t)&WebCore::JSOffscreenCanvasRenderingContext2D::s_info, (unint64_t *)v40, (uint64_t)&(&WebCore::JSOffscreenCanvasRenderingContext2DPrototypeTableValues)[i], (unsigned __int8 *)SlowCase);
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, v13);
        else
          *(_DWORD *)v12 -= 2;
      }
    }
  }
  v14 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                          + 0x28));
  v15 = *(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 136))(v14) + 480);
  v16 = (v15 & 0x800000000) == 0;
  if ((v15 & 0x800000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v17 = v40[0];
    v18 = *v9;
    *v9 = 1;
    LODWORD(v40[0]) = -1;
    WORD2(v40[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v9 = v18;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v19);
      else
        *(_DWORD *)v17 -= 2;
    }
  }
  v20 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                          + 0x28));
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v20 + 136))(v20) + 432) & 0x1000000000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v21 = v40[0];
    v22 = *v9;
    v16 = 1;
    *v9 = 1;
    LODWORD(v40[0]) = -1;
    WORD2(v40[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v9 = v22;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v23);
      else
        *(_DWORD *)v21 -= 2;
    }
  }
  v24 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                          + 0x28));
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v24 + 136))(v24) + 432) & 0x1000000000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v25 = v40[0];
    v26 = *v9;
    v16 = 1;
    *v9 = 1;
    LODWORD(v40[0]) = -1;
    WORD2(v40[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v9 = v26;
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, v27);
      else
        *(_DWORD *)v25 -= 2;
    }
  }
  v28 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                          + 0x28));
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v28 + 136))(v28) + 432) & 0x400000000000) != 0)
  {
    if (!v16)
      goto LABEL_37;
  }
  else
  {
    WTF::AtomStringImpl::addLiteral();
    v29 = v40[0];
    v30 = *v9;
    *v9 = 1;
    LODWORD(v40[0]) = -1;
    WORD2(v40[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v9 = v30;
    if (v29)
    {
      if (*(_DWORD *)v29 == 2)
        WTF::StringImpl::destroy(v29, v31);
      else
        *(_DWORD *)v29 -= 2;
    }
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x10) & 3) != 0)
    JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE)), this, (JSC::JSObject *)SlowCase);
LABEL_37:
  v32 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v34 = JSC::JSString::create((uint64_t)this, v40);
  v35 = v40[0];
  v40[0] = 0;
  if (v35)
  {
    if (*(_DWORD *)v35 == 2)
      WTF::StringImpl::destroy(v35, v33);
    else
      *(_DWORD *)v35 -= 2;
  }
  v36 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v44 = *(_DWORD *)SlowCase;
  v43 = v36;
  v37 = JSC::Structure::outOfLineCapacity(v36);
  v41 = 0;
  v42 = v37;
  v40[0] = (WTF::StringImpl *)&v42;
  v40[1] = (WTF::StringImpl *)SlowCase;
  v40[2] = this;
  v40[3] = (WTF::StringImpl *)&v44;
  v40[4] = (WTF::StringImpl *)&v43;
  v40[5] = (WTF::StringImpl *)&v41;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v36, this, v32, 6, (uint64_t)v40);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v41, v34);
  *((_DWORD *)v36 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSOffscreenCanvasRenderingContext2D>,(WebCore::DOMConstructorID)640>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5120);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSOffscreenCanvasRenderingContext2D>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSOffscreenCanvasRenderingContext2D::s_info
         + ~((_QWORD)&WebCore::JSOffscreenCanvasRenderingContext2D::s_info << 32)) ^ (((unint64_t)&WebCore::JSOffscreenCanvasRenderingContext2D::s_info
                                                                                     + ~((_QWORD)&WebCore::JSOffscreenCanvasRenderingContext2D::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSOffscreenCanvasRenderingContext2DPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSOffscreenCanvasRenderingContext2DPrototype::create((WebCore::JSOffscreenCanvasRenderingContext2DPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSOffscreenCanvasRenderingContext2D::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSOffscreenCanvasRenderingContext2D::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5120) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsOffscreenCanvasRenderingContext2DConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSOffscreenCanvasRenderingContext2DPrototype::s_info != (char **)(16
                                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSOffscreenCanvasRenderingContext2D>,(WebCore::DOMConstructorID)640>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2D_canvas(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 32);
  v4 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 40))(v3) & 1) != 0)
    return WebCore::wrap<WebCore::OffscreenCanvas>(a1, v4, v3 - 32);
  result = 96;
  __break(0xC471u);
  return result;
}

void WebCore::jsOffscreenCanvasRenderingContext2D_globalAlpha(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WebCore::InspectorInstrumentation *v4;
  WebCore::ScriptExecutionContext *v5;
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  _QWORD v9[2];
  WTF::StringImpl *v10;

  v2 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v2 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v9[0] = 0;
    v9[1] = 0;
    v4 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 144))(*(_QWORD *)(v2 + 32));
    if (v4)
    {
      v6 = WebCore::InspectorInstrumentation::instrumentingAgents(v4, v5);
      if (v6)
      {
        v7 = *(_QWORD *)(v6 + 96);
        if (v7)
          WebCore::InspectorCanvasAgent::recordAction(v7, (WebCore::CanvasRenderingContext *)v2, (const WTF::StringImpl *)&v10, v9);
      }
    }
    v8 = v10;
    v10 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 2)
        WTF::StringImpl::destroy(v8, v5);
      else
        *(_DWORD *)v8 -= 2;
    }
  }
  if (!*(_DWORD *)(v2 + 132))
    __break(0xC471u);
}

BOOL WebCore::setJSOffscreenCanvasRenderingContext2D_globalAlpha(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  WebCore::InspectorInstrumentation *v13;
  WebCore::ScriptExecutionContext *v14;
  uint64_t v15;
  WebCore::InspectorCanvasAgent *v16;
  WebCore::InspectorInstrumentation *v17;
  WebCore::ScriptExecutionContext *v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  WTF::StringImpl *v22;
  double v23;
  JSC::VM *v24;
  _QWORD v25[2];
  WTF::StringImpl *v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v27[0] = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v24 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v27, a1);
    v4 = v24;
    v11 = v23;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  if (*(_BYTE *)(v10 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v13 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v10 + 32) + 144))(*(_QWORD *)(v10 + 32));
    if (v13
      && (v15 = WebCore::InspectorInstrumentation::instrumentingAgents(v13, v14)) != 0
      && (v16 = *(WebCore::InspectorCanvasAgent **)(v15 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v16, (WebCore::CanvasRenderingContext *)v10, v11, (uint64_t)v27);
    }
    else
    {
      LOBYTE(v27[0]) = 0;
      v28 = 0;
    }
    v25[0] = v27;
    v25[1] = 1;
    v17 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v10 + 32) + 144))(*(_QWORD *)(v10 + 32));
    if (v17)
    {
      v19 = WebCore::InspectorInstrumentation::instrumentingAgents(v17, v18);
      if (v19)
      {
        v20 = *(_QWORD *)(v19 + 96);
        if (v20)
          WebCore::InspectorCanvasAgent::recordAction(v20, (WebCore::CanvasRenderingContext *)v10, (const WTF::StringImpl *)&v26, v25);
      }
    }
    if (v28)
    {
      v21 = (_DWORD *)v27[0];
      v27[0] = 0;
      if (v21)
      {
        if (*v21 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v21;
      }
    }
    v22 = v26;
    v26 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, v18);
      else
        *(_DWORD *)v22 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::setGlobalAlpha(v10, v11);
  return 1;
}

WTF::StringImpl *WebCore::jsOffscreenCanvasRenderingContext2D_globalCompositeOperation(WTF::StringImpl *result, uint64_t a2)
{
  WTF::StringImpl *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  unint64_t v6;
  char **v7;
  char *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned int v15;
  unsigned int v16;
  WebCore::InspectorInstrumentation *v17;
  WebCore::ScriptExecutionContext *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21[2];
  WTF::StringImpl *v22;

  v2 = result;
  v3 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v21[0] = 0;
    v21[1] = 0;
    v17 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v3 + 32) + 144))(*(_QWORD *)(v3 + 32));
    if (v17)
    {
      v19 = WebCore::InspectorInstrumentation::instrumentingAgents(v17, v18);
      if (v19)
      {
        v20 = *(_QWORD *)(v19 + 96);
        if (v20)
          WebCore::InspectorCanvasAgent::recordAction(v20, (WebCore::CanvasRenderingContext *)v3, (const WTF::StringImpl *)&v22, v21);
      }
    }
    result = v22;
    v22 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v18);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v4 = *(_DWORD *)(v3 + 132);
  if (v4)
  {
    v5 = *(_QWORD *)(v3 + 120) + 560 * v4 - 560;
    v6 = *(unsigned __int8 *)(v5 + 105);
    if (v6 < 2)
      v7 = &(&WebCore::compositeOperatorNames)[2 * *(unsigned __int8 *)(v5 + 104)];
    else
      v7 = &(&WebCore::blendOperatorNames)[2 * (v6 - 1)];
    v8 = v7[1];
    if (v8)
    {
      v9 = (WTF::StringImpl *)(v8 - 1);
      if (v8 == (char *)1)
      {
        v10 = (WTF::StringImpl *)MEMORY[0x1E0CBEF70];
        *MEMORY[0x1E0CBEF70] += 2;
      }
      else
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v10 = v21[0];
      }
      v11 = *((_QWORD *)v2 + 7);
      if (v10)
      {
        v12 = *((_DWORD *)v10 + 1);
        if (v12)
        {
          if (v12 != 1)
          {
LABEL_12:
            v13 = *(_QWORD *)(v11 + 64760);
            if (!v13 || v10 != *(WTF::StringImpl **)(v13 + 8))
              v13 = JSC::jsStringWithCacheSlowCase();
            goto LABEL_15;
          }
          v14 = (unsigned __int8 *)*((_QWORD *)v10 + 1);
          if ((*((_BYTE *)v10 + 16) & 4) != 0)
          {
            v15 = *v14;
          }
          else
          {
            v16 = *(unsigned __int16 *)v14;
            if (v16 > 0xFF)
              goto LABEL_12;
            v15 = v16;
          }
          v13 = *(_QWORD *)(v11 + 8 * v15 + 42216);
        }
        else
        {
          v13 = *(_QWORD *)(v11 + 41968);
        }
LABEL_15:
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, v9);
        else
          *(_DWORD *)v10 -= 2;
        return (WTF::StringImpl *)v13;
      }
    }
    else
    {
      v11 = *((_QWORD *)v2 + 7);
    }
    return *(WTF::StringImpl **)(v11 + 41968);
  }
  __break(0xC471u);
  return result;
}

uint64_t WebCore::setJSOffscreenCanvasRenderingContext2D_globalCompositeOperation(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  int v14;
  uint64_t v15;
  WTF::StringImpl *v17;
  int hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v19;
  WebCore::ScriptExecutionContext *v20;
  uint64_t v21;
  WebCore::InspectorCanvasAgent *v22;
  WebCore::InspectorInstrumentation *v23;
  WebCore::ScriptExecutionContext *v24;
  uint64_t v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  uint64_t v29;
  WTF::StringImpl *v30[2];
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  int v33;
  WTF::StringImpl *v34[2];
  char v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v34[0] = this;
  if (((unint64_t)this & 0xFFFE000000000002) == 0 && *((_BYTE *)this + 5) == 2)
  {
    v10 = (WTF::StringImpl *)*((_QWORD *)this + 1);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope(this, a1);
      if (!v10)
        goto LABEL_17;
    }
    else if (!v10)
    {
LABEL_17:
      v30[0] = v10;
      goto LABEL_18;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v34, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v11 = v30[0];
    if (hasExceptionsAfterHandlingTraps)
    {
      v33 = 1;
      v30[0] = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v17);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
LABEL_25:
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32BEA70[v14])(v34, &v32);
      return v15;
    }
  }
  else
  {
    v11 = v30[0];
  }
  v32 = v11;
  v33 = 0;
  if (!*(_BYTE *)(v9 + 25))
  {
LABEL_21:
    v32 = 0;
    v34[0] = v11;
    WebCore::CanvasRenderingContext2DBase::setGlobalCompositeOperation((WebCore::CanvasRenderingContext2DBase *)v9, (const WTF::String *)v34);
    v13 = v34[0];
    v34[0] = 0;
    if (v13)
    {
      if (*(_DWORD *)v13 == 2)
        WTF::StringImpl::destroy(v13, v12);
      else
        *(_DWORD *)v13 -= 2;
    }
    v14 = v33;
    v15 = 1;
    if (v33 == -1)
      return v15;
    goto LABEL_25;
  }
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v19 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
  if (v19
    && (v21 = WebCore::InspectorInstrumentation::instrumentingAgents(v19, v20)) != 0
    && (v22 = *(WebCore::InspectorCanvasAgent **)(v21 + 96)) != 0)
  {
    WebCore::InspectorCanvasAgent::processArgument(v22, (WebCore::CanvasRenderingContext *)v9, (int **)&v32, (uint64_t)v34);
  }
  else
  {
    LOBYTE(v34[0]) = 0;
    v35 = 0;
  }
  v30[0] = (WTF::StringImpl *)v34;
  v30[1] = (WTF::StringImpl *)1;
  v23 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
  if (v23)
  {
    v25 = WebCore::InspectorInstrumentation::instrumentingAgents(v23, v24);
    if (v25)
    {
      v26 = *(_QWORD *)(v25 + 96);
      if (v26)
        WebCore::InspectorCanvasAgent::recordAction(v26, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v31, v30);
    }
  }
  if (v35)
  {
    v27 = v34[0];
    v34[0] = 0;
    if (v27)
    {
      if (*(_DWORD *)v27 == 1)
        WTF::JSONImpl::Value::operator delete();
      else
        --*(_DWORD *)v27;
    }
  }
  v28 = v31;
  v31 = 0;
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v24);
    else
      *(_DWORD *)v28 -= 2;
  }
  if (!v33)
  {
    v11 = v32;
    goto LABEL_21;
  }
  v29 = std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsOffscreenCanvasRenderingContext2D_strokeStyle(v29);
}

WTF::StringImpl *WebCore::jsOffscreenCanvasRenderingContext2D_strokeStyle(WTF::StringImpl *result, uint64_t a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore::CanvasGradient *v9;
  uint64_t v10;
  uint64_t v11;
  WebCore::InspectorInstrumentation *v12;
  WebCore::ScriptExecutionContext *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  WTF::StringImpl *v18[5];
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  WTF::StringImpl *v24;
  uint64_t v25;
  uint64_t *v26;

  v3 = result;
  v4 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v4 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v22 = 0;
    v23 = 0;
    v12 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 144))(*(_QWORD *)(v4 + 32));
    if (v12)
    {
      v14 = WebCore::InspectorInstrumentation::instrumentingAgents(v12, v13);
      if (v14)
      {
        v15 = *(_QWORD *)(v14 + 96);
        if (v15)
          WebCore::InspectorCanvasAgent::recordAction(v15, (WebCore::CanvasRenderingContext *)v4, (const WTF::StringImpl *)v18, &v22);
      }
    }
    result = v18[0];
    v18[0] = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v13);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v5 = *(_DWORD *)(v4 + 132);
  if (!v5)
    goto LABEL_20;
  v6 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v7 = *(_QWORD *)(v4 + 120) + 560 * v5;
  v22 = &v19;
  v23 = &v19;
  v24 = (WTF::StringImpl *)&v19;
  v8 = *(unsigned int *)(v7 - 536);
  if ((_DWORD)v8 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_19:
    result = (WTF::StringImpl *)std::__throw_bad_optional_access[abi:sn180100]();
LABEL_20:
    __break(0xC471u);
    return result;
  }
  v18[0] = (WTF::StringImpl *)&v22;
  ((void (*)(uint64_t *__return_ptr, WTF::StringImpl **, uint64_t))*(&__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZNK7WebCore11CanvasStyle5visitIJZNS8_L14toStyleVariantERKS9_E3__0ZNS8_L14toStyleVariantESC_E3__1ZNS8_L14toStyleVariantESC_E3__2EEEDcDpOT_EUlRKNS8_5ColorEE_JZNKSA_IJSD_SE_SF_EEESG_SJ_EUlRKNS6_3RefINS8_14CanvasGradientENS6_12RawPtrTraitsISP_EENS6_21DefaultRefDerefTraitsISP_EEEEE_ZNKSA_IJSD_SE_SF_EEESG_SJ_EUlRKNSO_INS8_13CanvasPatternENSQ_ISY_EENSS_ISY_EEEEE_EEEEEJRKNS0_6__implIJSK_SU_S11_EEEEEESG_OT_DpOT0____fmatrix
                                                                            + v8))(&v16, v18, v7 - 544);
  v10 = v17;
  if (v17 == -1)
    v10 = -1;
  v21 = v10;
  LOBYTE(v19) = 0;
  v20 = 0;
  v22 = &v21;
  v23 = &v19;
  v24 = v3;
  v25 = v6;
  v26 = &v16;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLDOMStringENS_12IDLInterfaceINS_14CanvasGradientEEENS5_INS_13CanvasPatternEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6StringENSJ_6RefPtrIS6_NSJ_12RawPtrTraitsIS6_EENSJ_21DefaultRefDerefTraitsIS6_EEEENSL_IS8_NSM_IS8_EENSO_IS8_EEEEEEEEUlTyvE_JNSH_17integral_constantIlLl0EEENSY_IlLl1EEENSY_IlLl2EEEEEET_S12_((uint64_t)&v22, v9, (uint64_t)v18);
  if (!v20)
    goto LABEL_19;
  v11 = v19;
  if (v17 != -1)
    ((void (*)(uint64_t **, uint64_t *))off_1E32C3188[v17])(&v22, &v16);
  return (WTF::StringImpl *)v11;
}

BOOL WebCore::setJSOffscreenCanvasRenderingContext2D_strokeStyle(JSC::VM **a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  int v9;
  _BOOL8 v10;
  uint64_t v11;
  WebCore::InspectorInstrumentation *v13;
  WebCore::ScriptExecutionContext *v14;
  uint64_t v15;
  uint64_t v16;
  WebCore::InspectorInstrumentation *v17;
  WebCore::ScriptExecutionContext *v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  WTF::StringImpl *v22;
  _QWORD *v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  _BYTE v26[8];
  uint64_t v27;
  unsigned int v28;
  int v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLUnion<WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CanvasGradient>,WebCore::IDLInterface<WebCore::CanvasPattern>>>(a1, (unint64_t)this, (uint64_t)v26);
  v9 = v29;
  v10 = v29 == 0;
  if (!v29)
  {
    if (*(_BYTE *)(v8 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      if (!v29)
      {
        v13 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v8 + 32) + 144))(*(_QWORD *)(v8 + 32));
        if (v13
          && (v15 = WebCore::InspectorInstrumentation::instrumentingAgents(v13, v14)) != 0
          && (v16 = *(_QWORD *)(v15 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v16, v8, (uint64_t)&v27);
        }
        else
        {
          LOBYTE(v30[0]) = 0;
          LOBYTE(v31) = 0;
        }
        v23 = v30;
        v24 = 1;
        v17 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v8 + 32) + 144))(*(_QWORD *)(v8 + 32));
        if (v17)
        {
          v19 = WebCore::InspectorInstrumentation::instrumentingAgents(v17, v18);
          if (v19)
          {
            v20 = *(_QWORD *)(v19 + 96);
            if (v20)
              WebCore::InspectorCanvasAgent::recordAction(v20, (WebCore::CanvasRenderingContext *)v8, (const WTF::StringImpl *)&v25, &v23);
          }
        }
        if ((_BYTE)v31)
        {
          v21 = (_DWORD *)v30[0];
          v30[0] = 0;
          if (v21)
          {
            if (*v21 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v21;
          }
        }
        v22 = v25;
        v25 = 0;
        if (v22)
        {
          if (*(_DWORD *)v22 == 2)
            goto LABEL_41;
          *(_DWORD *)v22 -= 2;
        }
        goto LABEL_39;
      }
      goto LABEL_40;
    }
    while (1)
    {
      LOBYTE(v23) = 0;
      LODWORD(v24) = -1;
      v11 = v28;
      if (v28 != -1)
        break;
      do
      {
LABEL_40:
        v22 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_41:
        WTF::StringImpl::destroy(v22, v18);
LABEL_39:
        ;
      }
      while (v29);
    }
    ((void (*)(_QWORD *, _QWORD **, uint64_t *))off_1E32C31A0[v28])(v30, &v23, &v27);
    LODWORD(v24) = v11;
    v30[0] = v8;
    v30[1] = v8;
    v31 = v8;
    v25 = (WTF::StringImpl *)v30;
    ((void (*)(WTF::StringImpl **, _QWORD **))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore28CanvasRenderingContext2DBase14setStrokeStyleEONS_7variantIJNS6_6StringENS6_6RefPtrINS8_14CanvasGradientENS6_12RawPtrTraitsISD_EENS6_21DefaultRefDerefTraitsISD_EEEENSC_INS8_13CanvasPatternENSE_ISJ_EENSG_ISJ_EEEEEEEE3__0JZNS9_14setStrokeStyleESO_E3__1ZNS9_14setStrokeStyleESO_E3__2EEEEEJNS0_6__implIJSB_SI_SM_EEEEEEDcOT_DpOT0____fmatrix[v11])(&v25, &v23);
    if ((_DWORD)v24 != -1)
      ((void (*)(_QWORD *, _QWORD **))off_1E32C3188[v24])(v30, &v23);
    v9 = v29;
  }
  if (v9 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E32C31B8[v9])(v30, &v27);
  return v10;
}

WTF::StringImpl *WebCore::jsOffscreenCanvasRenderingContext2D_fillStyle(WTF::StringImpl *result, uint64_t a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore::CanvasGradient *v9;
  uint64_t v10;
  uint64_t v11;
  WebCore::InspectorInstrumentation *v12;
  WebCore::ScriptExecutionContext *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  WTF::StringImpl *v18[5];
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  WTF::StringImpl *v24;
  uint64_t v25;
  uint64_t *v26;

  v3 = result;
  v4 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v4 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v22 = 0;
    v23 = 0;
    v12 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 144))(*(_QWORD *)(v4 + 32));
    if (v12)
    {
      v14 = WebCore::InspectorInstrumentation::instrumentingAgents(v12, v13);
      if (v14)
      {
        v15 = *(_QWORD *)(v14 + 96);
        if (v15)
          WebCore::InspectorCanvasAgent::recordAction(v15, (WebCore::CanvasRenderingContext *)v4, (const WTF::StringImpl *)v18, &v22);
      }
    }
    result = v18[0];
    v18[0] = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v13);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v5 = *(_DWORD *)(v4 + 132);
  if (!v5)
    goto LABEL_20;
  v6 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v7 = *(_QWORD *)(v4 + 120) + 560 * v5;
  v22 = &v19;
  v23 = &v19;
  v24 = (WTF::StringImpl *)&v19;
  v8 = *(unsigned int *)(v7 - 520);
  if ((_DWORD)v8 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_19:
    result = (WTF::StringImpl *)std::__throw_bad_optional_access[abi:sn180100]();
LABEL_20:
    __break(0xC471u);
    return result;
  }
  v18[0] = (WTF::StringImpl *)&v22;
  ((void (*)(uint64_t *__return_ptr, WTF::StringImpl **, uint64_t))*(&__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZNK7WebCore11CanvasStyle5visitIJZNS8_L14toStyleVariantERKS9_E3__0ZNS8_L14toStyleVariantESC_E3__1ZNS8_L14toStyleVariantESC_E3__2EEEDcDpOT_EUlRKNS8_5ColorEE_JZNKSA_IJSD_SE_SF_EEESG_SJ_EUlRKNS6_3RefINS8_14CanvasGradientENS6_12RawPtrTraitsISP_EENS6_21DefaultRefDerefTraitsISP_EEEEE_ZNKSA_IJSD_SE_SF_EEESG_SJ_EUlRKNSO_INS8_13CanvasPatternENSQ_ISY_EENSS_ISY_EEEEE_EEEEEJRKNS0_6__implIJSK_SU_S11_EEEEEESG_OT_DpOT0____fmatrix
                                                                            + v8))(&v16, v18, v7 - 528);
  v10 = v17;
  if (v17 == -1)
    v10 = -1;
  v21 = v10;
  LOBYTE(v19) = 0;
  v20 = 0;
  v22 = &v21;
  v23 = &v19;
  v24 = v3;
  v25 = v6;
  v26 = &v16;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLDOMStringENS_12IDLInterfaceINS_14CanvasGradientEEENS5_INS_13CanvasPatternEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6StringENSJ_6RefPtrIS6_NSJ_12RawPtrTraitsIS6_EENSJ_21DefaultRefDerefTraitsIS6_EEEENSL_IS8_NSM_IS8_EENSO_IS8_EEEEEEEEUlTyvE_JNSH_17integral_constantIlLl0EEENSY_IlLl1EEENSY_IlLl2EEEEEET_S12_((uint64_t)&v22, v9, (uint64_t)v18);
  if (!v20)
    goto LABEL_19;
  v11 = v19;
  if (v17 != -1)
    ((void (*)(uint64_t **, uint64_t *))off_1E32C3188[v17])(&v22, &v16);
  return (WTF::StringImpl *)v11;
}

BOOL WebCore::setJSOffscreenCanvasRenderingContext2D_fillStyle(JSC::VM **a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  int v9;
  _BOOL8 v10;
  uint64_t v11;
  WebCore::InspectorInstrumentation *v13;
  WebCore::ScriptExecutionContext *v14;
  uint64_t v15;
  uint64_t v16;
  WebCore::InspectorInstrumentation *v17;
  WebCore::ScriptExecutionContext *v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  WTF::StringImpl *v22;
  _QWORD *v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  _BYTE v26[8];
  uint64_t v27;
  unsigned int v28;
  int v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLUnion<WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CanvasGradient>,WebCore::IDLInterface<WebCore::CanvasPattern>>>(a1, (unint64_t)this, (uint64_t)v26);
  v9 = v29;
  v10 = v29 == 0;
  if (!v29)
  {
    if (*(_BYTE *)(v8 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      if (!v29)
      {
        v13 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v8 + 32) + 144))(*(_QWORD *)(v8 + 32));
        if (v13
          && (v15 = WebCore::InspectorInstrumentation::instrumentingAgents(v13, v14)) != 0
          && (v16 = *(_QWORD *)(v15 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v16, v8, (uint64_t)&v27);
        }
        else
        {
          LOBYTE(v30[0]) = 0;
          LOBYTE(v31) = 0;
        }
        v23 = v30;
        v24 = 1;
        v17 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v8 + 32) + 144))(*(_QWORD *)(v8 + 32));
        if (v17)
        {
          v19 = WebCore::InspectorInstrumentation::instrumentingAgents(v17, v18);
          if (v19)
          {
            v20 = *(_QWORD *)(v19 + 96);
            if (v20)
              WebCore::InspectorCanvasAgent::recordAction(v20, (WebCore::CanvasRenderingContext *)v8, (const WTF::StringImpl *)&v25, &v23);
          }
        }
        if ((_BYTE)v31)
        {
          v21 = (_DWORD *)v30[0];
          v30[0] = 0;
          if (v21)
          {
            if (*v21 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v21;
          }
        }
        v22 = v25;
        v25 = 0;
        if (v22)
        {
          if (*(_DWORD *)v22 == 2)
            goto LABEL_41;
          *(_DWORD *)v22 -= 2;
        }
        goto LABEL_39;
      }
      goto LABEL_40;
    }
    while (1)
    {
      LOBYTE(v23) = 0;
      LODWORD(v24) = -1;
      v11 = v28;
      if (v28 != -1)
        break;
      do
      {
LABEL_40:
        v22 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_41:
        WTF::StringImpl::destroy(v22, v18);
LABEL_39:
        ;
      }
      while (v29);
    }
    ((void (*)(_QWORD *, _QWORD **, uint64_t *))off_1E32C31A0[v28])(v30, &v23, &v27);
    LODWORD(v24) = v11;
    v30[0] = v8;
    v30[1] = v8;
    v31 = v8;
    v25 = (WTF::StringImpl *)v30;
    ((void (*)(WTF::StringImpl **, _QWORD **))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore28CanvasRenderingContext2DBase12setFillStyleEONS_7variantIJNS6_6StringENS6_6RefPtrINS8_14CanvasGradientENS6_12RawPtrTraitsISD_EENS6_21DefaultRefDerefTraitsISD_EEEENSC_INS8_13CanvasPatternENSE_ISJ_EENSG_ISJ_EEEEEEEE3__0JZNS9_12setFillStyleESO_E3__1ZNS9_12setFillStyleESO_E3__2EEEEEJNS0_6__implIJSB_SI_SM_EEEEEEDcOT_DpOT0____fmatrix[v11])(&v25, &v23);
    if ((_DWORD)v24 != -1)
      ((void (*)(_QWORD *, _QWORD **))off_1E32C3188[v24])(v30, &v23);
    v9 = v29;
  }
  if (v9 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E32C31B8[v9])(v30, &v27);
  return v10;
}

WTF::StringImpl *WebCore::jsOffscreenCanvasRenderingContext2D_filter(WTF::StringImpl *result, WebCore::ScriptExecutionContext *a2)
{
  WTF::StringImpl *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WebCore::InspectorInstrumentation *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];
  WTF::StringImpl *v17;

  v2 = result;
  v3 = *((_QWORD *)a2 + 3);
  if (*(_BYTE *)(v3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v16[0] = 0;
    v16[1] = 0;
    v13 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v3 + 32) + 144))(*(_QWORD *)(v3 + 32));
    if (v13)
    {
      v14 = WebCore::InspectorInstrumentation::instrumentingAgents(v13, a2);
      if (v14)
      {
        v15 = *(_QWORD *)(v14 + 96);
        if (v15)
          WebCore::InspectorCanvasAgent::recordAction(v15, (WebCore::CanvasRenderingContext *)v3, (const WTF::StringImpl *)&v17, v16);
      }
    }
    result = v17;
    v17 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v4 = *(_DWORD *)(v3 + 132);
  if (v4)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(v3 + 120) + 560 * v4 - 344);
    if (!v5)
      return *(WTF::StringImpl **)(*((_QWORD *)v2 + 7) + 41968);
    v6 = *(_DWORD *)v5;
    v7 = *(_DWORD *)(v5 + 4);
    *(_DWORD *)v5 += 2;
    v8 = *((_QWORD *)v2 + 7);
    if (v7)
    {
      if (v7 != 1)
      {
LABEL_6:
        v9 = *(_QWORD *)(v8 + 64760);
        if (!v9 || v5 != *(_QWORD *)(v9 + 8))
        {
          v9 = JSC::jsStringWithCacheSlowCase();
          v6 = *(_DWORD *)v5 - 2;
        }
        goto LABEL_9;
      }
      v10 = *(unsigned __int8 **)(v5 + 8);
      if ((*(_BYTE *)(v5 + 16) & 4) != 0)
      {
        v11 = *v10;
      }
      else
      {
        v12 = *(unsigned __int16 *)v10;
        if (v12 > 0xFF)
          goto LABEL_6;
        v11 = v12;
      }
      v9 = *(_QWORD *)(v8 + 8 * v11 + 42216);
    }
    else
    {
      v9 = *(_QWORD *)(v8 + 41968);
    }
LABEL_9:
    if (v6)
      *(_DWORD *)v5 = v6;
    else
      WTF::StringImpl::destroy((WTF::StringImpl *)v5, a2);
    return (WTF::StringImpl *)v9;
  }
  __break(0xC471u);
  return result;
}

uint64_t WebCore::setJSOffscreenCanvasRenderingContext2D_filter(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  int v14;
  uint64_t v15;
  WTF::StringImpl *v17;
  int hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v19;
  WebCore::ScriptExecutionContext *v20;
  uint64_t v21;
  WebCore::InspectorCanvasAgent *v22;
  WebCore::InspectorInstrumentation *v23;
  WebCore::ScriptExecutionContext *v24;
  uint64_t v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  uint64_t v29;
  WTF::StringImpl *v30[2];
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  int v33;
  WTF::StringImpl *v34[2];
  char v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v34[0] = this;
  if (((unint64_t)this & 0xFFFE000000000002) == 0 && *((_BYTE *)this + 5) == 2)
  {
    v10 = (WTF::StringImpl *)*((_QWORD *)this + 1);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope(this, a1);
      if (!v10)
        goto LABEL_17;
    }
    else if (!v10)
    {
LABEL_17:
      v30[0] = v10;
      goto LABEL_18;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v34, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v11 = v30[0];
    if (hasExceptionsAfterHandlingTraps)
    {
      v33 = 1;
      v30[0] = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v17);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
LABEL_25:
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32BEA70[v14])(v34, &v32);
      return v15;
    }
  }
  else
  {
    v11 = v30[0];
  }
  v32 = v11;
  v33 = 0;
  if (!*(_BYTE *)(v9 + 25))
  {
LABEL_21:
    v32 = 0;
    v34[0] = v11;
    WebCore::CanvasRenderingContext2DBase::setFilterString((WebCore::CanvasRenderingContext2DBase *)v9, v34, this);
    v13 = v34[0];
    v34[0] = 0;
    if (v13)
    {
      if (*(_DWORD *)v13 == 2)
        WTF::StringImpl::destroy(v13, v12);
      else
        *(_DWORD *)v13 -= 2;
    }
    v14 = v33;
    v15 = 1;
    if (v33 == -1)
      return v15;
    goto LABEL_25;
  }
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v19 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
  if (v19
    && (v21 = WebCore::InspectorInstrumentation::instrumentingAgents(v19, v20)) != 0
    && (v22 = *(WebCore::InspectorCanvasAgent **)(v21 + 96)) != 0)
  {
    WebCore::InspectorCanvasAgent::processArgument(v22, (WebCore::CanvasRenderingContext *)v9, (int **)&v32, (uint64_t)v34);
  }
  else
  {
    LOBYTE(v34[0]) = 0;
    v35 = 0;
  }
  v30[0] = (WTF::StringImpl *)v34;
  v30[1] = (WTF::StringImpl *)1;
  v23 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
  if (v23)
  {
    v25 = WebCore::InspectorInstrumentation::instrumentingAgents(v23, v24);
    if (v25)
    {
      v26 = *(_QWORD *)(v25 + 96);
      if (v26)
        WebCore::InspectorCanvasAgent::recordAction(v26, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v31, v30);
    }
  }
  if (v35)
  {
    v27 = v34[0];
    v34[0] = 0;
    if (v27)
    {
      if (*(_DWORD *)v27 == 1)
        WTF::JSONImpl::Value::operator delete();
      else
        --*(_DWORD *)v27;
    }
  }
  v28 = v31;
  v31 = 0;
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v24);
    else
      *(_DWORD *)v28 -= 2;
  }
  if (!v33)
  {
    v11 = v32;
    goto LABEL_21;
  }
  v29 = std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsOffscreenCanvasRenderingContext2D_imageSmoothingEnabled(v29);
}

void WebCore::jsOffscreenCanvasRenderingContext2D_imageSmoothingEnabled(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WebCore::InspectorInstrumentation *v3;
  WebCore::ScriptExecutionContext *v4;
  uint64_t v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  _QWORD v8[2];
  WTF::StringImpl *v9;

  v2 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v2 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v8[0] = 0;
    v8[1] = 0;
    v3 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 144))(*(_QWORD *)(v2 + 32));
    if (v3)
    {
      v5 = WebCore::InspectorInstrumentation::instrumentingAgents(v3, v4);
      if (v5)
      {
        v6 = *(_QWORD *)(v5 + 96);
        if (v6)
          WebCore::InspectorCanvasAgent::recordAction(v6, (WebCore::CanvasRenderingContext *)v2, (const WTF::StringImpl *)&v9, v8);
      }
    }
    v7 = v9;
    v9 = 0;
    if (v7)
    {
      if (*(_DWORD *)v7 == 2)
        WTF::StringImpl::destroy(v7, v4);
      else
        *(_DWORD *)v7 -= 2;
    }
  }
  if (!*(_DWORD *)(v2 + 132))
    __break(0xC471u);
}

BOOL WebCore::setJSOffscreenCanvasRenderingContext2D_imageSmoothingEnabled(uint64_t a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  double v10;
  _BOOL8 v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  int v17;
  char v18;
  unsigned __int8 v19;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  WebCore::InspectorCanvasAgent *v24;
  WebCore::InspectorInstrumentation *v25;
  WebCore::ScriptExecutionContext *v26;
  uint64_t v27;
  uint64_t v28;
  _DWORD *v29;
  WTF::StringImpl *v30;
  BOOL v31;
  int v32;
  uint64_t v33;
  int *v34;
  int v35;
  _QWORD v36[2];
  WTF::StringImpl *v37;
  _QWORD v38[2];
  char v39;
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v4 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v31 = (_DWORD)a3 == 0;
    goto LABEL_68;
  }
  *(_QWORD *)&v10 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v11 = a3 == 7;
      goto LABEL_16;
    }
    v32 = *(unsigned __int8 *)(a3 + 5);
    if (v32 == 3)
    {
      v35 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v32 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v11 = 1;
          goto LABEL_16;
        }
        v31 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_68;
      }
      v33 = *(_QWORD *)(a3 + 8);
      if ((v33 & 1) != 0)
        v34 = (int *)(a3 + 16);
      else
        v34 = (int *)(v33 + 4);
      v35 = *v34;
    }
    v31 = v35 == 0;
LABEL_68:
    v11 = !v31;
    goto LABEL_16;
  }
  v11 = v10 > 0.0 || v10 < 0.0;
LABEL_16:
  v12 = *(_QWORD *)(a2 + 24);
  if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
  {
    if (*(_BYTE *)(v12 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
      if (v21
        && (v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22)) != 0
        && (v24 = *(WebCore::InspectorCanvasAgent **)(v23 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v24, (WebCore::CanvasRenderingContext *)v12, (WTF::JSONImpl::Value *)v11, (uint64_t)v38);
      }
      else
      {
        LOBYTE(v38[0]) = 0;
        v39 = 0;
      }
      v36[0] = v38;
      v36[1] = 1;
      v25 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
      if (v25)
      {
        v27 = WebCore::InspectorInstrumentation::instrumentingAgents(v25, v26);
        if (v27)
        {
          v28 = *(_QWORD *)(v27 + 96);
          if (v28)
            WebCore::InspectorCanvasAgent::recordAction(v28, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v37, v36);
        }
      }
      if (v39)
      {
        v29 = (_DWORD *)v38[0];
        v38[0] = 0;
        if (v29)
        {
          if (*v29 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v29;
        }
      }
      v30 = v37;
      v37 = 0;
      if (v30)
      {
        if (*(_DWORD *)v30 == 2)
          WTF::StringImpl::destroy(v30, v26);
        else
          *(_DWORD *)v30 -= 2;
      }
    }
    v13 = *(_DWORD *)(v12 + 132);
    if (v13)
    {
      if (*(_BYTE *)(*(_QWORD *)(v12 + 120) + 560 * v13 - 368) == v11)
        return 1;
      WebCore::CanvasRenderingContext2DBase::realizeSaves((WebCore::CanvasRenderingContext2DBase::State *)v12);
      v14 = *(_DWORD *)(v12 + 132);
      if (!v14)
      {
        __break(0xC471u);
        JUMPOUT(0x194D82148);
      }
      *(_BYTE *)(*(_QWORD *)(v12 + 120) + 560 * v14 - 368) = v11;
      v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 240))(v12);
      if (!v15)
        return 1;
      if (!v11)
      {
        v19 = 1;
LABEL_31:
        if (*(unsigned __int8 *)(v15 + 340) != v19)
        {
          *(_BYTE *)(v15 + 340) = v19;
          *(_DWORD *)(v15 + 184) |= 0x400u;
        }
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v15 + 88))(v15, v15 + 8);
        return 1;
      }
      v16 = *(_DWORD *)(v12 + 132);
      if (v16)
      {
        v17 = *(_DWORD *)(*(_QWORD *)(v12 + 120) + 560 * v16 - 364);
        if (v17 == 1)
          v18 = 3;
        else
          v18 = 2;
        if (v17 == 2)
          v19 = 4;
        else
          v19 = v18;
        goto LABEL_31;
      }
    }
    __break(0xC471u);
    JUMPOUT(0x194D82140);
  }
  return 0;
}

WTF::StringImpl *WebCore::jsOffscreenCanvasRenderingContext2D_imageSmoothingQuality(WTF::StringImpl *result, uint64_t a2)
{
  WTF::StringImpl *v2;
  uint64_t v3;
  unsigned int v4;
  WebCore::InspectorInstrumentation *v5;
  WebCore::ScriptExecutionContext *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[2];
  WTF::StringImpl *v10;

  v2 = result;
  v3 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v9[0] = 0;
    v9[1] = 0;
    v5 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v3 + 32) + 144))(*(_QWORD *)(v3 + 32));
    if (v5)
    {
      v7 = WebCore::InspectorInstrumentation::instrumentingAgents(v5, v6);
      if (v7)
      {
        v8 = *(_QWORD *)(v7 + 96);
        if (v8)
          WebCore::InspectorCanvasAgent::recordAction(v8, (WebCore::CanvasRenderingContext *)v3, (const WTF::StringImpl *)&v10, v9);
      }
    }
    result = v10;
    v10 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v4 = *(_DWORD *)(v3 + 132);
  if (v4)
    return (WTF::StringImpl *)WebCore::convertEnumerationToJS<WebCore::ImageSmoothingQuality>(*((_QWORD *)v2 + 7), (WTF::StringImpl *)*(unsigned int *)(*(_QWORD *)(v3 + 120) + 560 * v4 - 364));
  __break(0xC471u);
  return result;
}

BOOL WebCore::setJSOffscreenCanvasRenderingContext2D_imageSmoothingQuality(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  _BOOL8 result;
  char hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v20;
  WebCore::ScriptExecutionContext *v21;
  uint64_t v22;
  uint64_t v23;
  WebCore::InspectorInstrumentation *v24;
  WebCore::ScriptExecutionContext *v25;
  uint64_t v26;
  uint64_t v27;
  _DWORD *v28;
  WTF::StringImpl *v29;
  _QWORD v30[2];
  WTF::StringImpl *v31;
  _QWORD v32[2];
  char v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v10 = WebCore::parseEnumeration<WebCore::ImageSmoothingQuality>(a1, (unint64_t)this);
  v11 = v10;
  v12 = BYTE4(v10);
  if (!*((_DWORD *)v3 + 20))
  {
    if (!BYTE4(v10))
      return 0;
LABEL_14:
    if (*(_BYTE *)(v9 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v20 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
      if (v20
        && (v22 = WebCore::InspectorInstrumentation::instrumentingAgents(v20, v21)) != 0
        && (v23 = *(_QWORD *)(v22 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v23, v9, v11, (uint64_t)v32);
      }
      else
      {
        LOBYTE(v32[0]) = 0;
        v33 = 0;
      }
      v30[0] = v32;
      v30[1] = 1;
      v24 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
      if (v24)
      {
        v26 = WebCore::InspectorInstrumentation::instrumentingAgents(v24, v25);
        if (v26)
        {
          v27 = *(_QWORD *)(v26 + 96);
          if (v27)
            WebCore::InspectorCanvasAgent::recordAction(v27, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v31, v30);
        }
      }
      if (v33)
      {
        v28 = (_DWORD *)v32[0];
        v32[0] = 0;
        if (v28)
        {
          if (*v28 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v28;
        }
      }
      v29 = v31;
      v31 = 0;
      if (v29)
      {
        if (*(_DWORD *)v29 == 2)
          WTF::StringImpl::destroy(v29, v25);
        else
          *(_DWORD *)v29 -= 2;
      }
    }
    v13 = *(_DWORD *)(v9 + 132);
    if (v13)
    {
      if (*(_DWORD *)(*(_QWORD *)(v9 + 120) + 560 * v13 - 364) == v11)
        return 1;
      WebCore::CanvasRenderingContext2DBase::realizeSaves((WebCore::CanvasRenderingContext2DBase::State *)v9);
      v14 = *(_DWORD *)(v9 + 132);
      if (v14)
      {
        v15 = *(_QWORD *)(v9 + 120) + 560 * v14 - 560;
        *(_DWORD *)(v15 + 196) = v11;
        if (*(_BYTE *)(v15 + 192))
        {
          v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 240))(v9);
          if (v16)
          {
            if (v11 == 1)
              v17 = 3;
            else
              v17 = 2;
            if (v11 == 2)
              v17 = 4;
            if (*(unsigned __int8 *)(v16 + 340) != v17)
            {
              *(_BYTE *)(v16 + 340) = v17;
              *(_DWORD *)(v16 + 184) |= 0x400u;
            }
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v16 + 88))(v16, v16 + 8);
          }
        }
        return 1;
      }
    }
    __break(0xC471u);
    JUMPOUT(0x194D824DCLL);
  }
  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
  result = 0;
  if ((hasExceptionsAfterHandlingTraps & 1) == 0 && v12)
    goto LABEL_14;
  return result;
}

void WebCore::jsOffscreenCanvasRenderingContext2D_lineWidth(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WebCore::InspectorInstrumentation *v4;
  WebCore::ScriptExecutionContext *v5;
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  _QWORD v9[2];
  WTF::StringImpl *v10;

  v2 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v2 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v9[0] = 0;
    v9[1] = 0;
    v4 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 144))(*(_QWORD *)(v2 + 32));
    if (v4)
    {
      v6 = WebCore::InspectorInstrumentation::instrumentingAgents(v4, v5);
      if (v6)
      {
        v7 = *(_QWORD *)(v6 + 96);
        if (v7)
          WebCore::InspectorCanvasAgent::recordAction(v7, (WebCore::CanvasRenderingContext *)v2, (const WTF::StringImpl *)&v10, v9);
      }
    }
    v8 = v10;
    v10 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 2)
        WTF::StringImpl::destroy(v8, v5);
      else
        *(_DWORD *)v8 -= 2;
    }
  }
  if (!*(_DWORD *)(v2 + 132))
    __break(0xC471u);
}

BOOL WebCore::setJSOffscreenCanvasRenderingContext2D_lineWidth(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  float v17;
  WebCore::InspectorInstrumentation *v19;
  WebCore::ScriptExecutionContext *v20;
  uint64_t v21;
  WebCore::InspectorCanvasAgent *v22;
  WebCore::InspectorInstrumentation *v23;
  WebCore::ScriptExecutionContext *v24;
  uint64_t v25;
  uint64_t v26;
  _DWORD *v27;
  WTF::StringImpl *v28;
  uint64_t v29;
  double v30;
  JSC::VM *v31;
  _QWORD v32[2];
  WTF::StringImpl *v33;
  _QWORD v34[2];
  char v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v34[0] = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v31 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v34, a1);
    v4 = v31;
    v11 = v30;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  if (*(_BYTE *)(v10 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v19 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v10 + 32) + 144))(*(_QWORD *)(v10 + 32));
    if (v19
      && (v21 = WebCore::InspectorInstrumentation::instrumentingAgents(v19, v20)) != 0
      && (v22 = *(WebCore::InspectorCanvasAgent **)(v21 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v22, (WebCore::CanvasRenderingContext *)v10, v11, (uint64_t)v34);
    }
    else
    {
      LOBYTE(v34[0]) = 0;
      v35 = 0;
    }
    v32[0] = v34;
    v32[1] = 1;
    v23 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v10 + 32) + 144))(*(_QWORD *)(v10 + 32));
    if (v23)
    {
      v25 = WebCore::InspectorInstrumentation::instrumentingAgents(v23, v24);
      if (v25)
      {
        v26 = *(_QWORD *)(v25 + 96);
        if (v26)
          WebCore::InspectorCanvasAgent::recordAction(v26, (WebCore::CanvasRenderingContext *)v10, (const WTF::StringImpl *)&v33, v32);
      }
    }
    if (v35)
    {
      v27 = (_DWORD *)v34[0];
      v34[0] = 0;
      if (v27)
      {
        if (*v27 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v27;
      }
    }
    v28 = v33;
    v33 = 0;
    if (v28)
    {
      if (*(_DWORD *)v28 == 2)
        WTF::StringImpl::destroy(v28, v24);
      else
        *(_DWORD *)v28 -= 2;
    }
  }
  if (v11 >= 0.0 && ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 <= 0x3FE
    || (unint64_t)(*(_QWORD *)&v11 - 1) <= 0xFFFFFFFFFFFFELL)
  {
    v14 = *(_DWORD *)(v10 + 132);
    if (!v14)
    {
      __break(0xC471u);
      JUMPOUT(0x194D82948);
    }
    if (*(double *)(*(_QWORD *)(v10 + 120) + 560 * v14 - 512) != v11)
    {
      if (*(_DWORD *)(v10 + 712))
      {
        WebCore::CanvasRenderingContext2DBase::realizeSavesLoop((WebCore::CanvasRenderingContext2DBase *)v10);
        if (*(_DWORD *)(v10 + 712))
        {
          {
            WebCore::CanvasRenderingContext2DBase::realizeSaves(void)::$_0::operator() const(void)::impl += 2;
            WebCore::CanvasRenderingContext2DBase::realizeSaves(void)::consoleMessage = (uint64_t)&WebCore::CanvasRenderingContext2DBase::realizeSaves(void)::$_0::operator() const(void)::impl;
          }
          v29 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v10 + 32) + 144))(*(_QWORD *)(v10 + 32));
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t *, _QWORD))(*(_QWORD *)v29 + 248))(v29, 6, 2, &WebCore::CanvasRenderingContext2DBase::realizeSaves(void)::consoleMessage, 0);
        }
      }
      v15 = *(_DWORD *)(v10 + 132);
      if (!v15)
      {
        __break(0xC471u);
        JUMPOUT(0x194D82950);
      }
      *(double *)(*(_QWORD *)(v10 + 120) + 560 * v15 - 512) = v11;
      v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 240))(v10);
      if (v16)
      {
        v17 = v11;
        if (*(float *)(v16 + 188) != v17)
        {
          *(float *)(v16 + 188) = v17;
          *(_DWORD *)(v16 + 184) |= 8u;
        }
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v16 + 88))(v16, v16 + 8);
      }
    }
  }
  return 1;
}

WTF::StringImpl *WebCore::jsOffscreenCanvasRenderingContext2D_lineCap(WTF::StringImpl *result, uint64_t a2)
{
  WTF::StringImpl *v2;
  uint64_t v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  WebCore::InspectorInstrumentation *v7;
  WebCore::ScriptExecutionContext *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  WTF::StringImpl *v12;

  v2 = result;
  v3 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v11[0] = 0;
    v11[1] = 0;
    v7 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v3 + 32) + 144))(*(_QWORD *)(v3 + 32));
    if (v7)
    {
      v9 = WebCore::InspectorInstrumentation::instrumentingAgents(v7, v8);
      if (v9)
      {
        v10 = *(_QWORD *)(v9 + 96);
        if (v10)
          WebCore::InspectorCanvasAgent::recordAction(v10, (WebCore::CanvasRenderingContext *)v3, (const WTF::StringImpl *)&v12, v11);
      }
    }
    result = v12;
    v12 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v8);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v4 = *(_DWORD *)(v3 + 132);
  if (v4)
  {
    v5 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 120) + 560 * v4 - 504);
    if (v5 == 2)
      v6 = 2;
    else
      v6 = v5 == 1;
    return (WTF::StringImpl *)WebCore::convertEnumerationToJS<WebCore::CanvasLineCap>(*((_QWORD *)v2 + 7), (WTF::StringImpl *)v6);
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

uint64_t WebCore::setJSOffscreenCanvasRenderingContext2D_lineCap(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t result;
  char hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v15;
  WebCore::ScriptExecutionContext *v16;
  uint64_t v17;
  uint64_t v18;
  WebCore::InspectorInstrumentation *v19;
  WebCore::ScriptExecutionContext *v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  WTF::StringImpl *v24;
  _QWORD v25[2];
  WTF::StringImpl *v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v10 = WebCore::parseEnumeration<WebCore::CanvasLineCap>(a1, a3);
  v11 = v10;
  v12 = BYTE4(v10);
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    result = 0;
    if ((hasExceptionsAfterHandlingTraps & 1) != 0 || !v12)
      return result;
  }
  else if (!BYTE4(v10))
  {
    return 0;
  }
  if (*(_BYTE *)(v9 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v15 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
    if (v15
      && (v17 = WebCore::InspectorInstrumentation::instrumentingAgents(v15, v16)) != 0
      && (v18 = *(_QWORD *)(v17 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v18, v9, v11, (uint64_t)v27);
    }
    else
    {
      LOBYTE(v27[0]) = 0;
      v28 = 0;
    }
    v25[0] = v27;
    v25[1] = 1;
    v19 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
    if (v19)
    {
      v21 = WebCore::InspectorInstrumentation::instrumentingAgents(v19, v20);
      if (v21)
      {
        v22 = *(_QWORD *)(v21 + 96);
        if (v22)
          WebCore::InspectorCanvasAgent::recordAction(v22, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v26, v25);
      }
    }
    if (v28)
    {
      v23 = (_DWORD *)v27[0];
      v27[0] = 0;
      if (v23)
      {
        if (*v23 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v23;
      }
    }
    v24 = v26;
    v26 = 0;
    if (v24)
    {
      if (*(_DWORD *)v24 == 2)
        WTF::StringImpl::destroy(v24, v20);
      else
        *(_DWORD *)v24 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::setLineCap(v9, v11);
  return 1;
}

WTF::StringImpl *WebCore::jsOffscreenCanvasRenderingContext2D_lineJoin(WTF::StringImpl *result, uint64_t a2)
{
  WTF::StringImpl *v2;
  uint64_t v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  WebCore::InspectorInstrumentation *v7;
  WebCore::ScriptExecutionContext *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  WTF::StringImpl *v12;

  v2 = result;
  v3 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v11[0] = 0;
    v11[1] = 0;
    v7 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v3 + 32) + 144))(*(_QWORD *)(v3 + 32));
    if (v7)
    {
      v9 = WebCore::InspectorInstrumentation::instrumentingAgents(v7, v8);
      if (v9)
      {
        v10 = *(_QWORD *)(v9 + 96);
        if (v10)
          WebCore::InspectorCanvasAgent::recordAction(v10, (WebCore::CanvasRenderingContext *)v3, (const WTF::StringImpl *)&v12, v11);
      }
    }
    result = v12;
    v12 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v8);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v4 = *(_DWORD *)(v3 + 132);
  if (v4)
  {
    v5 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 120) + 560 * v4 - 503);
    if (v5)
      v6 = v5 == 2;
    else
      v6 = 2;
    return (WTF::StringImpl *)WebCore::convertEnumerationToJS<WebCore::CanvasLineJoin>(*((_QWORD *)v2 + 7), (WTF::StringImpl *)v6);
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

BOOL WebCore::setJSOffscreenCanvasRenderingContext2D_lineJoin(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  _BOOL8 result;
  char hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v15;
  WebCore::ScriptExecutionContext *v16;
  uint64_t v17;
  uint64_t v18;
  WebCore::InspectorInstrumentation *v19;
  WebCore::ScriptExecutionContext *v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  WTF::StringImpl *v24;
  _QWORD v25[2];
  WTF::StringImpl *v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v10 = WebCore::parseEnumeration<WebCore::CanvasLineJoin>(a1, (unint64_t)this);
  v11 = v10;
  v12 = BYTE4(v10);
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    result = 0;
    if ((hasExceptionsAfterHandlingTraps & 1) != 0 || !v12)
      return result;
  }
  else if (!BYTE4(v10))
  {
    return 0;
  }
  if (*(_BYTE *)(v9 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v15 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
    if (v15
      && (v17 = WebCore::InspectorInstrumentation::instrumentingAgents(v15, v16)) != 0
      && (v18 = *(_QWORD *)(v17 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v18, v9, v11, (uint64_t)v27);
    }
    else
    {
      LOBYTE(v27[0]) = 0;
      v28 = 0;
    }
    v25[0] = v27;
    v25[1] = 1;
    v19 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
    if (v19)
    {
      v21 = WebCore::InspectorInstrumentation::instrumentingAgents(v19, v20);
      if (v21)
      {
        v22 = *(_QWORD *)(v21 + 96);
        if (v22)
          WebCore::InspectorCanvasAgent::recordAction(v22, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v26, v25);
      }
    }
    if (v28)
    {
      v23 = (_DWORD *)v27[0];
      v27[0] = 0;
      if (v23)
      {
        if (*v23 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v23;
      }
    }
    v24 = v26;
    v26 = 0;
    if (v24)
    {
      if (*(_DWORD *)v24 == 2)
        WTF::StringImpl::destroy(v24, v20);
      else
        *(_DWORD *)v24 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::setLineJoin(v9, v11);
  return 1;
}

void WebCore::jsOffscreenCanvasRenderingContext2D_miterLimit(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WebCore::InspectorInstrumentation *v4;
  WebCore::ScriptExecutionContext *v5;
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  _QWORD v9[2];
  WTF::StringImpl *v10;

  v2 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v2 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v9[0] = 0;
    v9[1] = 0;
    v4 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 144))(*(_QWORD *)(v2 + 32));
    if (v4)
    {
      v6 = WebCore::InspectorInstrumentation::instrumentingAgents(v4, v5);
      if (v6)
      {
        v7 = *(_QWORD *)(v6 + 96);
        if (v7)
          WebCore::InspectorCanvasAgent::recordAction(v7, (WebCore::CanvasRenderingContext *)v2, (const WTF::StringImpl *)&v10, v9);
      }
    }
    v8 = v10;
    v10 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 2)
        WTF::StringImpl::destroy(v8, v5);
      else
        *(_DWORD *)v8 -= 2;
    }
  }
  if (!*(_DWORD *)(v2 + 132))
    __break(0xC471u);
}

BOOL WebCore::setJSOffscreenCanvasRenderingContext2D_miterLimit(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  WebCore::InspectorInstrumentation *v13;
  WebCore::ScriptExecutionContext *v14;
  uint64_t v15;
  WebCore::InspectorCanvasAgent *v16;
  WebCore::InspectorInstrumentation *v17;
  WebCore::ScriptExecutionContext *v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  WTF::StringImpl *v22;
  double v23;
  JSC::VM *v24;
  _QWORD v25[2];
  WTF::StringImpl *v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v27[0] = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v24 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v27, a1);
    v4 = v24;
    v11 = v23;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  if (*(_BYTE *)(v10 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v13 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v10 + 32) + 144))(*(_QWORD *)(v10 + 32));
    if (v13
      && (v15 = WebCore::InspectorInstrumentation::instrumentingAgents(v13, v14)) != 0
      && (v16 = *(WebCore::InspectorCanvasAgent **)(v15 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v16, (WebCore::CanvasRenderingContext *)v10, v11, (uint64_t)v27);
    }
    else
    {
      LOBYTE(v27[0]) = 0;
      v28 = 0;
    }
    v25[0] = v27;
    v25[1] = 1;
    v17 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v10 + 32) + 144))(*(_QWORD *)(v10 + 32));
    if (v17)
    {
      v19 = WebCore::InspectorInstrumentation::instrumentingAgents(v17, v18);
      if (v19)
      {
        v20 = *(_QWORD *)(v19 + 96);
        if (v20)
          WebCore::InspectorCanvasAgent::recordAction(v20, (WebCore::CanvasRenderingContext *)v10, (const WTF::StringImpl *)&v26, v25);
      }
    }
    if (v28)
    {
      v21 = (_DWORD *)v27[0];
      v27[0] = 0;
      if (v21)
      {
        if (*v21 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v21;
      }
    }
    v22 = v26;
    v26 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, v18);
      else
        *(_DWORD *)v22 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::setMiterLimit(v10, v11);
  return 1;
}

void WebCore::jsOffscreenCanvasRenderingContext2D_lineDashOffset(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WebCore::InspectorInstrumentation *v4;
  WebCore::ScriptExecutionContext *v5;
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  _QWORD v9[2];
  WTF::StringImpl *v10;

  v2 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v2 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v9[0] = 0;
    v9[1] = 0;
    v4 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 144))(*(_QWORD *)(v2 + 32));
    if (v4)
    {
      v6 = WebCore::InspectorInstrumentation::instrumentingAgents(v4, v5);
      if (v6)
      {
        v7 = *(_QWORD *)(v6 + 96);
        if (v7)
          WebCore::InspectorCanvasAgent::recordAction(v7, (WebCore::CanvasRenderingContext *)v2, (const WTF::StringImpl *)&v10, v9);
      }
    }
    v8 = v10;
    v10 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 2)
        WTF::StringImpl::destroy(v8, v5);
      else
        *(_DWORD *)v8 -= 2;
    }
  }
  if (!*(_DWORD *)(v2 + 132))
    __break(0xC471u);
}

BOOL WebCore::setJSOffscreenCanvasRenderingContext2D_lineDashOffset(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  unsigned int v12;
  WebCore::InspectorInstrumentation *v14;
  WebCore::ScriptExecutionContext *v15;
  uint64_t v16;
  WebCore::InspectorCanvasAgent *v17;
  WebCore::InspectorInstrumentation *v18;
  WebCore::ScriptExecutionContext *v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  WTF::StringImpl *v23;
  unsigned int v24;
  double v25;
  JSC::VM *v26;
  _QWORD v27[2];
  WTF::StringImpl *v28;
  _QWORD v29[2];
  char v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v29[0] = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v26 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v29, a1);
    v4 = v26;
    v11 = v25;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (!*((_DWORD *)v4 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v4))
  {
    if (*(_BYTE *)(v10 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v14 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v10 + 32) + 144))(*(_QWORD *)(v10 + 32));
      if (v14
        && (v16 = WebCore::InspectorInstrumentation::instrumentingAgents(v14, v15)) != 0
        && (v17 = *(WebCore::InspectorCanvasAgent **)(v16 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v17, (WebCore::CanvasRenderingContext *)v10, v11, (uint64_t)v29);
      }
      else
      {
        LOBYTE(v29[0]) = 0;
        v30 = 0;
      }
      v27[0] = v29;
      v27[1] = 1;
      v18 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v10 + 32) + 144))(*(_QWORD *)(v10 + 32));
      if (v18)
      {
        v20 = WebCore::InspectorInstrumentation::instrumentingAgents(v18, v19);
        if (v20)
        {
          v21 = *(_QWORD *)(v20 + 96);
          if (v21)
            WebCore::InspectorCanvasAgent::recordAction(v21, (WebCore::CanvasRenderingContext *)v10, (const WTF::StringImpl *)&v28, v27);
        }
      }
      if (v30)
      {
        v22 = (_DWORD *)v29[0];
        v29[0] = 0;
        if (v22)
        {
          if (*v22 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v22;
        }
      }
      v23 = v28;
      v28 = 0;
      if (v23)
      {
        if (*(_DWORD *)v23 == 2)
          WTF::StringImpl::destroy(v23, v19);
        else
          *(_DWORD *)v23 -= 2;
      }
    }
    if ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL)
      return 1;
    v12 = *(_DWORD *)(v10 + 132);
    if (v12)
    {
      if (*(double *)(*(_QWORD *)(v10 + 120) + 560 * v12 - 376) == v11)
        return 1;
      WebCore::CanvasRenderingContext2DBase::realizeSaves((WebCore::CanvasRenderingContext2DBase::State *)v10);
      v24 = *(_DWORD *)(v10 + 132);
      if (v24)
      {
        *(double *)(*(_QWORD *)(v10 + 120) + 560 * v24 - 376) = v11;
        WebCore::CanvasRenderingContext2DBase::applyLineDash((WebCore::CanvasRenderingContext2DBase *)v10);
        return 1;
      }
    }
    __break(0xC471u);
    JUMPOUT(0x194D8368CLL);
  }
  return 0;
}

void WebCore::jsOffscreenCanvasRenderingContext2D_shadowOffsetX(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WebCore::InspectorInstrumentation *v4;
  WebCore::ScriptExecutionContext *v5;
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  _QWORD v9[2];
  WTF::StringImpl *v10;

  v2 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v2 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v9[0] = 0;
    v9[1] = 0;
    v4 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 144))(*(_QWORD *)(v2 + 32));
    if (v4)
    {
      v6 = WebCore::InspectorInstrumentation::instrumentingAgents(v4, v5);
      if (v6)
      {
        v7 = *(_QWORD *)(v6 + 96);
        if (v7)
          WebCore::InspectorCanvasAgent::recordAction(v7, (WebCore::CanvasRenderingContext *)v2, (const WTF::StringImpl *)&v10, v9);
      }
    }
    v8 = v10;
    v10 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 2)
        WTF::StringImpl::destroy(v8, v5);
      else
        *(_DWORD *)v8 -= 2;
    }
  }
  if (!*(_DWORD *)(v2 + 132))
    __break(0xC471u);
}

BOOL WebCore::setJSOffscreenCanvasRenderingContext2D_shadowOffsetX(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  double v12;
  WebCore::InspectorInstrumentation *v14;
  WebCore::ScriptExecutionContext *v15;
  uint64_t v16;
  WebCore::InspectorCanvasAgent *v17;
  WebCore::InspectorInstrumentation *v18;
  WebCore::ScriptExecutionContext *v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  WTF::StringImpl *v23;
  JSC::VM *v24;
  _QWORD v25[2];
  WTF::StringImpl *v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  v27[0] = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v12 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v24 = v5;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v27, a1);
    v5 = v24;
    v12 = a4.n128_f64[0];
  }
  else
  {
    *(_QWORD *)&v12 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
    return 0;
  if (*(_BYTE *)(v11 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v14 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
    if (v14
      && (v16 = WebCore::InspectorInstrumentation::instrumentingAgents(v14, v15)) != 0
      && (v17 = *(WebCore::InspectorCanvasAgent **)(v16 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v17, (WebCore::CanvasRenderingContext *)v11, v12, (uint64_t)v27);
    }
    else
    {
      LOBYTE(v27[0]) = 0;
      v28 = 0;
    }
    v25[0] = v27;
    v25[1] = 1;
    v18 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
    if (v18)
    {
      v20 = WebCore::InspectorInstrumentation::instrumentingAgents(v18, v19);
      if (v20)
      {
        v21 = *(_QWORD *)(v20 + 96);
        if (v21)
          WebCore::InspectorCanvasAgent::recordAction(v21, (WebCore::CanvasRenderingContext *)v11, (const WTF::StringImpl *)&v26, v25);
      }
    }
    if (v28)
    {
      v22 = (_DWORD *)v27[0];
      v27[0] = 0;
      if (v22)
      {
        if (*v22 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v22;
      }
    }
    v23 = v26;
    v26 = 0;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v19);
      else
        *(_DWORD *)v23 -= 2;
    }
  }
  a4.n128_f32[0] = v12;
  WebCore::CanvasRenderingContext2DBase::setShadowOffsetX(v11, a4);
  return 1;
}

void WebCore::jsOffscreenCanvasRenderingContext2D_shadowOffsetY(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WebCore::InspectorInstrumentation *v4;
  WebCore::ScriptExecutionContext *v5;
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  _QWORD v9[2];
  WTF::StringImpl *v10;

  v2 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v2 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v9[0] = 0;
    v9[1] = 0;
    v4 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 144))(*(_QWORD *)(v2 + 32));
    if (v4)
    {
      v6 = WebCore::InspectorInstrumentation::instrumentingAgents(v4, v5);
      if (v6)
      {
        v7 = *(_QWORD *)(v6 + 96);
        if (v7)
          WebCore::InspectorCanvasAgent::recordAction(v7, (WebCore::CanvasRenderingContext *)v2, (const WTF::StringImpl *)&v10, v9);
      }
    }
    v8 = v10;
    v10 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 2)
        WTF::StringImpl::destroy(v8, v5);
      else
        *(_DWORD *)v8 -= 2;
    }
  }
  if (!*(_DWORD *)(v2 + 132))
    __break(0xC471u);
}

BOOL WebCore::setJSOffscreenCanvasRenderingContext2D_shadowOffsetY(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  double v12;
  WebCore::InspectorInstrumentation *v14;
  WebCore::ScriptExecutionContext *v15;
  uint64_t v16;
  WebCore::InspectorCanvasAgent *v17;
  WebCore::InspectorInstrumentation *v18;
  WebCore::ScriptExecutionContext *v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  WTF::StringImpl *v23;
  JSC::VM *v24;
  _QWORD v25[2];
  WTF::StringImpl *v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  v27[0] = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v12 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v24 = v5;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v27, a1);
    v5 = v24;
    v12 = a4.n128_f64[0];
  }
  else
  {
    *(_QWORD *)&v12 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
    return 0;
  if (*(_BYTE *)(v11 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v14 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
    if (v14
      && (v16 = WebCore::InspectorInstrumentation::instrumentingAgents(v14, v15)) != 0
      && (v17 = *(WebCore::InspectorCanvasAgent **)(v16 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v17, (WebCore::CanvasRenderingContext *)v11, v12, (uint64_t)v27);
    }
    else
    {
      LOBYTE(v27[0]) = 0;
      v28 = 0;
    }
    v25[0] = v27;
    v25[1] = 1;
    v18 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
    if (v18)
    {
      v20 = WebCore::InspectorInstrumentation::instrumentingAgents(v18, v19);
      if (v20)
      {
        v21 = *(_QWORD *)(v20 + 96);
        if (v21)
          WebCore::InspectorCanvasAgent::recordAction(v21, (WebCore::CanvasRenderingContext *)v11, (const WTF::StringImpl *)&v26, v25);
      }
    }
    if (v28)
    {
      v22 = (_DWORD *)v27[0];
      v27[0] = 0;
      if (v22)
      {
        if (*v22 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v22;
      }
    }
    v23 = v26;
    v26 = 0;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v19);
      else
        *(_DWORD *)v23 -= 2;
    }
  }
  a4.n128_f32[0] = v12;
  WebCore::CanvasRenderingContext2DBase::setShadowOffsetY(v11, a4);
  return 1;
}

void WebCore::jsOffscreenCanvasRenderingContext2D_shadowBlur(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WebCore::InspectorInstrumentation *v4;
  WebCore::ScriptExecutionContext *v5;
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  _QWORD v9[2];
  WTF::StringImpl *v10;

  v2 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v2 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v9[0] = 0;
    v9[1] = 0;
    v4 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 144))(*(_QWORD *)(v2 + 32));
    if (v4)
    {
      v6 = WebCore::InspectorInstrumentation::instrumentingAgents(v4, v5);
      if (v6)
      {
        v7 = *(_QWORD *)(v6 + 96);
        if (v7)
          WebCore::InspectorCanvasAgent::recordAction(v7, (WebCore::CanvasRenderingContext *)v2, (const WTF::StringImpl *)&v10, v9);
      }
    }
    v8 = v10;
    v10 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 2)
        WTF::StringImpl::destroy(v8, v5);
      else
        *(_DWORD *)v8 -= 2;
    }
  }
  if (!*(_DWORD *)(v2 + 132))
    __break(0xC471u);
}

BOOL WebCore::setJSOffscreenCanvasRenderingContext2D_shadowBlur(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  double v12;
  WebCore::InspectorInstrumentation *v14;
  WebCore::ScriptExecutionContext *v15;
  uint64_t v16;
  WebCore::InspectorCanvasAgent *v17;
  WebCore::InspectorInstrumentation *v18;
  WebCore::ScriptExecutionContext *v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  WTF::StringImpl *v23;
  JSC::VM *v24;
  _QWORD v25[2];
  WTF::StringImpl *v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  v27[0] = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v12 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v24 = v5;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v27, a1);
    v5 = v24;
    v12 = a4.n128_f64[0];
  }
  else
  {
    *(_QWORD *)&v12 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
    return 0;
  if (*(_BYTE *)(v11 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v14 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
    if (v14
      && (v16 = WebCore::InspectorInstrumentation::instrumentingAgents(v14, v15)) != 0
      && (v17 = *(WebCore::InspectorCanvasAgent **)(v16 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v17, (WebCore::CanvasRenderingContext *)v11, v12, (uint64_t)v27);
    }
    else
    {
      LOBYTE(v27[0]) = 0;
      v28 = 0;
    }
    v25[0] = v27;
    v25[1] = 1;
    v18 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
    if (v18)
    {
      v20 = WebCore::InspectorInstrumentation::instrumentingAgents(v18, v19);
      if (v20)
      {
        v21 = *(_QWORD *)(v20 + 96);
        if (v21)
          WebCore::InspectorCanvasAgent::recordAction(v21, (WebCore::CanvasRenderingContext *)v11, (const WTF::StringImpl *)&v26, v25);
      }
    }
    if (v28)
    {
      v22 = (_DWORD *)v27[0];
      v27[0] = 0;
      if (v22)
      {
        if (*v22 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v22;
      }
    }
    v23 = v26;
    v26 = 0;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v19);
      else
        *(_DWORD *)v23 -= 2;
    }
  }
  a4.n128_f32[0] = v12;
  WebCore::CanvasRenderingContext2DBase::setShadowBlur(v11, a4);
  return 1;
}

WTF::StringImpl *WebCore::jsOffscreenCanvasRenderingContext2D_shadowColor(WTF::StringImpl *result, uint64_t a2)
{
  WTF::StringImpl *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;
  WebCore::InspectorInstrumentation *v12;
  WebCore::ScriptExecutionContext *v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16[2];
  WTF::StringImpl *v17;

  v2 = result;
  v3 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v16[0] = 0;
    v16[1] = 0;
    v12 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v3 + 32) + 144))(*(_QWORD *)(v3 + 32));
    if (v12)
    {
      v14 = WebCore::InspectorInstrumentation::instrumentingAgents(v12, v13);
      if (v14)
      {
        v15 = *(_QWORD *)(v14 + 96);
        if (v15)
          WebCore::InspectorCanvasAgent::recordAction(v15, (WebCore::CanvasRenderingContext *)v3, (const WTF::StringImpl *)&v17, v16);
      }
    }
    result = v17;
    v17 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v13);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v4 = *(_DWORD *)(v3 + 132);
  if (v4)
  {
    WebCore::serializationForHTML((WebCore *)(*(_QWORD *)(v3 + 120) + 560 * v4 - 472), v16);
    v5 = *((_QWORD *)v2 + 7);
    v6 = v16[0];
    if (!v16[0] || (v7 = *((_DWORD *)v16[0] + 1)) == 0)
    {
      v8 = *(_QWORD *)(v5 + 41968);
LABEL_9:
      v16[0] = 0;
      if (!v6)
        return (WTF::StringImpl *)v8;
LABEL_16:
      if (*(_DWORD *)v6 == 2)
        WTF::StringImpl::destroy(v6, v6);
      else
        *(_DWORD *)v6 -= 2;
      return (WTF::StringImpl *)v8;
    }
    if (v7 != 1)
      goto LABEL_6;
    v9 = (unsigned __int8 *)*((_QWORD *)v16[0] + 1);
    if ((*((_BYTE *)v16[0] + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
      {
LABEL_6:
        v8 = *(_QWORD *)(v5 + 64760);
        if (!v8 || v16[0] != *(WTF::StringImpl **)(v8 + 8))
        {
          v8 = JSC::jsStringWithCacheSlowCase();
          v6 = v16[0];
          goto LABEL_9;
        }
LABEL_15:
        v16[0] = 0;
        goto LABEL_16;
      }
      v10 = v11;
    }
    v8 = *(_QWORD *)(v5 + 8 * v10 + 42216);
    goto LABEL_15;
  }
  __break(0xC471u);
  return result;
}

uint64_t WebCore::setJSOffscreenCanvasRenderingContext2D_shadowColor(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  int v14;
  uint64_t v15;
  WTF::StringImpl *v17;
  int hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v19;
  WebCore::ScriptExecutionContext *v20;
  uint64_t v21;
  WebCore::InspectorCanvasAgent *v22;
  WebCore::InspectorInstrumentation *v23;
  WebCore::ScriptExecutionContext *v24;
  uint64_t v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  uint64_t v29;
  WTF::StringImpl *v30[2];
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  int v33;
  WTF::StringImpl *v34[2];
  char v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v34[0] = this;
  if (((unint64_t)this & 0xFFFE000000000002) == 0 && *((_BYTE *)this + 5) == 2)
  {
    v10 = (WTF::StringImpl *)*((_QWORD *)this + 1);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope(this, a1);
      if (!v10)
        goto LABEL_17;
    }
    else if (!v10)
    {
LABEL_17:
      v30[0] = v10;
      goto LABEL_18;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v34, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v11 = v30[0];
    if (hasExceptionsAfterHandlingTraps)
    {
      v33 = 1;
      v30[0] = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v17);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
LABEL_25:
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32BEA70[v14])(v34, &v32);
      return v15;
    }
  }
  else
  {
    v11 = v30[0];
  }
  v32 = v11;
  v33 = 0;
  if (!*(_BYTE *)(v9 + 25))
  {
LABEL_21:
    v32 = 0;
    v34[0] = v11;
    WebCore::CanvasRenderingContext2DBase::setShadowColor((const WTF::String **)v9, (unsigned int **)v34);
    v13 = v34[0];
    v34[0] = 0;
    if (v13)
    {
      if (*(_DWORD *)v13 == 2)
        WTF::StringImpl::destroy(v13, v12);
      else
        *(_DWORD *)v13 -= 2;
    }
    v14 = v33;
    v15 = 1;
    if (v33 == -1)
      return v15;
    goto LABEL_25;
  }
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v19 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
  if (v19
    && (v21 = WebCore::InspectorInstrumentation::instrumentingAgents(v19, v20)) != 0
    && (v22 = *(WebCore::InspectorCanvasAgent **)(v21 + 96)) != 0)
  {
    WebCore::InspectorCanvasAgent::processArgument(v22, (WebCore::CanvasRenderingContext *)v9, (int **)&v32, (uint64_t)v34);
  }
  else
  {
    LOBYTE(v34[0]) = 0;
    v35 = 0;
  }
  v30[0] = (WTF::StringImpl *)v34;
  v30[1] = (WTF::StringImpl *)1;
  v23 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
  if (v23)
  {
    v25 = WebCore::InspectorInstrumentation::instrumentingAgents(v23, v24);
    if (v25)
    {
      v26 = *(_QWORD *)(v25 + 96);
      if (v26)
        WebCore::InspectorCanvasAgent::recordAction(v26, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v31, v30);
    }
  }
  if (v35)
  {
    v27 = v34[0];
    v34[0] = 0;
    if (v27)
    {
      if (*(_DWORD *)v27 == 1)
        WTF::JSONImpl::Value::operator delete();
      else
        --*(_DWORD *)v27;
    }
  }
  v28 = v31;
  v31 = 0;
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v24);
    else
      *(_DWORD *)v28 -= 2;
  }
  if (!v33)
  {
    v11 = v32;
    goto LABEL_21;
  }
  v29 = std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsOffscreenCanvasRenderingContext2D_font(v29);
}

WTF::StringImpl *WebCore::jsOffscreenCanvasRenderingContext2D_font(WTF::StringImpl *result, WebCore::ScriptExecutionContext *a2)
{
  WTF::StringImpl *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;
  WebCore::InspectorInstrumentation *v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15[2];
  WTF::StringImpl *v16;

  v2 = result;
  v3 = *((_QWORD *)a2 + 3);
  if (*(_BYTE *)(v3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v15[0] = 0;
    v15[1] = 0;
    v12 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v3 + 32) + 144))(*(_QWORD *)(v3 + 32));
    if (v12)
    {
      v13 = WebCore::InspectorInstrumentation::instrumentingAgents(v12, a2);
      if (v13)
      {
        v14 = *(_QWORD *)(v13 + 96);
        if (v14)
          WebCore::InspectorCanvasAgent::recordAction(v14, (WebCore::CanvasRenderingContext *)v3, (const WTF::StringImpl *)&v16, v15);
      }
    }
    result = v16;
    v16 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v4 = *(_DWORD *)(v3 + 132);
  if (v4)
  {
    WebCore::CanvasRenderingContext2DBase::State::fontString((WebCore::CanvasRenderingContext2DBase::FontProxy **)(*(_QWORD *)(v3 + 120) + 560 * v4 - 560), a2, v15);
    v5 = *((_QWORD *)v2 + 7);
    v6 = v15[0];
    if (!v15[0] || (v7 = *((_DWORD *)v15[0] + 1)) == 0)
    {
      v8 = *(_QWORD *)(v5 + 41968);
LABEL_9:
      v15[0] = 0;
      if (!v6)
        return (WTF::StringImpl *)v8;
LABEL_16:
      if (*(_DWORD *)v6 == 2)
        WTF::StringImpl::destroy(v6, v6);
      else
        *(_DWORD *)v6 -= 2;
      return (WTF::StringImpl *)v8;
    }
    if (v7 != 1)
      goto LABEL_6;
    v9 = (unsigned __int8 *)*((_QWORD *)v15[0] + 1);
    if ((*((_BYTE *)v15[0] + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
      {
LABEL_6:
        v8 = *(_QWORD *)(v5 + 64760);
        if (!v8 || v15[0] != *(WTF::StringImpl **)(v8 + 8))
        {
          v8 = JSC::jsStringWithCacheSlowCase();
          v6 = v15[0];
          goto LABEL_9;
        }
LABEL_15:
        v15[0] = 0;
        goto LABEL_16;
      }
      v10 = v11;
    }
    v8 = *(_QWORD *)(v5 + 8 * v10 + 42216);
    goto LABEL_15;
  }
  __break(0xC471u);
  return result;
}

uint64_t WebCore::setJSOffscreenCanvasRenderingContext2D_font(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  int v14;
  uint64_t v15;
  WTF::StringImpl *v17;
  int hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v19;
  WebCore::ScriptExecutionContext *v20;
  uint64_t v21;
  WebCore::InspectorCanvasAgent *v22;
  WebCore::InspectorInstrumentation *v23;
  WebCore::ScriptExecutionContext *v24;
  uint64_t v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  uint64_t v29;
  WTF::StringImpl *v30[2];
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  int v33;
  WTF::StringImpl *v34[2];
  char v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v34[0] = this;
  if (((unint64_t)this & 0xFFFE000000000002) == 0 && *((_BYTE *)this + 5) == 2)
  {
    v10 = (WTF::StringImpl *)*((_QWORD *)this + 1);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope(this, a1);
      if (!v10)
        goto LABEL_17;
    }
    else if (!v10)
    {
LABEL_17:
      v30[0] = v10;
      goto LABEL_18;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v34, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v11 = v30[0];
    if (hasExceptionsAfterHandlingTraps)
    {
      v33 = 1;
      v30[0] = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v17);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
LABEL_25:
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32BEA70[v14])(v34, &v32);
      return v15;
    }
  }
  else
  {
    v11 = v30[0];
  }
  v32 = v11;
  v33 = 0;
  if (!*(_BYTE *)(v9 + 25))
  {
LABEL_21:
    v32 = 0;
    v34[0] = v11;
    WebCore::OffscreenCanvasRenderingContext2D::setFont((WebCore::OffscreenCanvasRenderingContext2D *)v9, (unsigned int **)v34);
    v13 = v34[0];
    v34[0] = 0;
    if (v13)
    {
      if (*(_DWORD *)v13 == 2)
        WTF::StringImpl::destroy(v13, v12);
      else
        *(_DWORD *)v13 -= 2;
    }
    v14 = v33;
    v15 = 1;
    if (v33 == -1)
      return v15;
    goto LABEL_25;
  }
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v19 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
  if (v19
    && (v21 = WebCore::InspectorInstrumentation::instrumentingAgents(v19, v20)) != 0
    && (v22 = *(WebCore::InspectorCanvasAgent **)(v21 + 96)) != 0)
  {
    WebCore::InspectorCanvasAgent::processArgument(v22, (WebCore::CanvasRenderingContext *)v9, (int **)&v32, (uint64_t)v34);
  }
  else
  {
    LOBYTE(v34[0]) = 0;
    v35 = 0;
  }
  v30[0] = (WTF::StringImpl *)v34;
  v30[1] = (WTF::StringImpl *)1;
  v23 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
  if (v23)
  {
    v25 = WebCore::InspectorInstrumentation::instrumentingAgents(v23, v24);
    if (v25)
    {
      v26 = *(_QWORD *)(v25 + 96);
      if (v26)
        WebCore::InspectorCanvasAgent::recordAction(v26, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v31, v30);
    }
  }
  if (v35)
  {
    v27 = v34[0];
    v34[0] = 0;
    if (v27)
    {
      if (*(_DWORD *)v27 == 1)
        WTF::JSONImpl::Value::operator delete();
      else
        --*(_DWORD *)v27;
    }
  }
  v28 = v31;
  v31 = 0;
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v24);
    else
      *(_DWORD *)v28 -= 2;
  }
  if (!v33)
  {
    v11 = v32;
    goto LABEL_21;
  }
  v29 = std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsOffscreenCanvasRenderingContext2D_textAlign(v29);
}

WTF::StringImpl *WebCore::jsOffscreenCanvasRenderingContext2D_textAlign(WTF::StringImpl *result, uint64_t a2)
{
  WTF::StringImpl *v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  WTF::StringImpl *v6;
  WebCore::InspectorInstrumentation *v7;
  WebCore::ScriptExecutionContext *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  WTF::StringImpl *v12;

  v2 = result;
  v3 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v11[0] = 0;
    v11[1] = 0;
    v7 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v3 + 32) + 144))(*(_QWORD *)(v3 + 32));
    if (v7)
    {
      v9 = WebCore::InspectorInstrumentation::instrumentingAgents(v7, v8);
      if (v9)
      {
        v10 = *(_QWORD *)(v9 + 96);
        if (v10)
          WebCore::InspectorCanvasAgent::recordAction(v10, (WebCore::CanvasRenderingContext *)v3, (const WTF::StringImpl *)&v12, v11);
      }
    }
    result = v12;
    v12 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v8);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v4 = *(_DWORD *)(v3 + 132);
  if (v4)
  {
    v5 = *(_DWORD *)(*(_QWORD *)(v3 + 120) + 560 * v4 - 360) - 1;
    if (v5 > 3)
      v6 = 0;
    else
      v6 = (WTF::StringImpl *)dword_1968BCF70[v5];
    return (WTF::StringImpl *)WebCore::convertEnumerationToJS<WebCore::CanvasTextAlign>(*((_QWORD *)v2 + 7), v6);
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

BOOL WebCore::setJSOffscreenCanvasRenderingContext2D_textAlign(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  _BOOL8 result;
  char hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v18;
  WebCore::ScriptExecutionContext *v19;
  uint64_t v20;
  uint64_t v21;
  WebCore::InspectorInstrumentation *v22;
  WebCore::ScriptExecutionContext *v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  WTF::StringImpl *v27;
  _QWORD v28[2];
  WTF::StringImpl *v29;
  _QWORD v30[2];
  char v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v10 = WebCore::parseEnumeration<WebCore::CanvasTextAlign>(a1, (unint64_t)this);
  v11 = v10;
  v12 = BYTE4(v10);
  if (!*((_DWORD *)v3 + 20))
  {
    if (!BYTE4(v10))
      return 0;
LABEL_14:
    if (*(_BYTE *)(v9 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v18 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
      if (v18
        && (v20 = WebCore::InspectorInstrumentation::instrumentingAgents(v18, v19)) != 0
        && (v21 = *(_QWORD *)(v20 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v21, v9, v11, (uint64_t)v30);
      }
      else
      {
        LOBYTE(v30[0]) = 0;
        v31 = 0;
      }
      v28[0] = v30;
      v28[1] = 1;
      v22 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
      if (v22)
      {
        v24 = WebCore::InspectorInstrumentation::instrumentingAgents(v22, v23);
        if (v24)
        {
          v25 = *(_QWORD *)(v24 + 96);
          if (v25)
            WebCore::InspectorCanvasAgent::recordAction(v25, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v29, v28);
        }
      }
      if (v31)
      {
        v26 = (_DWORD *)v30[0];
        v30[0] = 0;
        if (v26)
        {
          if (*v26 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v26;
        }
      }
      v27 = v29;
      v29 = 0;
      if (v27)
      {
        if (*(_DWORD *)v27 == 2)
          WTF::StringImpl::destroy(v27, v23);
        else
          *(_DWORD *)v27 -= 2;
      }
    }
    if ((v11 - 1) > 3)
      v13 = 0;
    else
      v13 = dword_1968BCF70[v11 - 1];
    v14 = *(_DWORD *)(v9 + 132);
    if (v14)
    {
      if (*(_DWORD *)(*(_QWORD *)(v9 + 120) + 560 * v14 - 360) == v13)
        return 1;
      WebCore::CanvasRenderingContext2DBase::realizeSaves((WebCore::CanvasRenderingContext2DBase::State *)v9);
      v15 = *(_DWORD *)(v9 + 132);
      if (v15)
      {
        *(_DWORD *)(*(_QWORD *)(v9 + 120) + 560 * v15 - 360) = v13;
        return 1;
      }
    }
    __break(0xC471u);
    JUMPOUT(0x194D84D2CLL);
  }
  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
  result = 0;
  if ((hasExceptionsAfterHandlingTraps & 1) == 0 && v12)
    goto LABEL_14;
  return result;
}

WTF::StringImpl *WebCore::jsOffscreenCanvasRenderingContext2D_textBaseline(WTF::StringImpl *result, uint64_t a2)
{
  WTF::StringImpl *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WebCore::InspectorInstrumentation *v7;
  WebCore::ScriptExecutionContext *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  WTF::StringImpl *v12;

  v2 = result;
  v3 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v11[0] = 0;
    v11[1] = 0;
    v7 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v3 + 32) + 144))(*(_QWORD *)(v3 + 32));
    if (v7)
    {
      v9 = WebCore::InspectorInstrumentation::instrumentingAgents(v7, v8);
      if (v9)
      {
        v10 = *(_QWORD *)(v9 + 96);
        if (v10)
          WebCore::InspectorCanvasAgent::recordAction(v10, (WebCore::CanvasRenderingContext *)v3, (const WTF::StringImpl *)&v12, v11);
      }
    }
    result = v12;
    v12 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v8);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v4 = *(_DWORD *)(v3 + 132);
  if (v4)
  {
    v5 = *(int *)(*(_QWORD *)(v3 + 120) + 560 * v4 - 356);
    if (v5 > 5)
      v6 = 0;
    else
      v6 = (WTF::StringImpl *)dword_1968C04AC[v5];
    return (WTF::StringImpl *)WebCore::convertEnumerationToJS<WebCore::CanvasTextBaseline>(*((_QWORD *)v2 + 7), v6);
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

BOOL WebCore::setJSOffscreenCanvasRenderingContext2D_textBaseline(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  _BOOL8 result;
  char hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v18;
  WebCore::ScriptExecutionContext *v19;
  uint64_t v20;
  uint64_t v21;
  WebCore::InspectorInstrumentation *v22;
  WebCore::ScriptExecutionContext *v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  WTF::StringImpl *v27;
  _QWORD v28[2];
  WTF::StringImpl *v29;
  _QWORD v30[2];
  char v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v10 = WebCore::parseEnumeration<WebCore::CanvasTextBaseline>(a1, (unint64_t)this);
  v11 = v10;
  v12 = BYTE4(v10);
  if (!*((_DWORD *)v3 + 20))
  {
    if (!BYTE4(v10))
      return 0;
LABEL_14:
    if (*(_BYTE *)(v9 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v18 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
      if (v18
        && (v20 = WebCore::InspectorInstrumentation::instrumentingAgents(v18, v19)) != 0
        && (v21 = *(_QWORD *)(v20 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v21, v9, v11, (uint64_t)v30);
      }
      else
      {
        LOBYTE(v30[0]) = 0;
        v31 = 0;
      }
      v28[0] = v30;
      v28[1] = 1;
      v22 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
      if (v22)
      {
        v24 = WebCore::InspectorInstrumentation::instrumentingAgents(v22, v23);
        if (v24)
        {
          v25 = *(_QWORD *)(v24 + 96);
          if (v25)
            WebCore::InspectorCanvasAgent::recordAction(v25, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v29, v28);
        }
      }
      if (v31)
      {
        v26 = (_DWORD *)v30[0];
        v30[0] = 0;
        if (v26)
        {
          if (*v26 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v26;
        }
      }
      v27 = v29;
      v29 = 0;
      if (v27)
      {
        if (*(_DWORD *)v27 == 2)
          WTF::StringImpl::destroy(v27, v23);
        else
          *(_DWORD *)v27 -= 2;
      }
    }
    if ((v11 - 1) > 4)
      v13 = 1;
    else
      v13 = dword_1968C04C4[v11 - 1];
    v14 = *(_DWORD *)(v9 + 132);
    if (v14)
    {
      if (*(_DWORD *)(*(_QWORD *)(v9 + 120) + 560 * v14 - 356) == v13)
        return 1;
      WebCore::CanvasRenderingContext2DBase::realizeSaves((WebCore::CanvasRenderingContext2DBase::State *)v9);
      v15 = *(_DWORD *)(v9 + 132);
      if (v15)
      {
        *(_DWORD *)(*(_QWORD *)(v9 + 120) + 560 * v15 - 356) = v13;
        return 1;
      }
    }
    __break(0xC471u);
    JUMPOUT(0x194D8509CLL);
  }
  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
  result = 0;
  if ((hasExceptionsAfterHandlingTraps & 1) == 0 && v12)
    goto LABEL_14;
  return result;
}

WTF::StringImpl *WebCore::jsOffscreenCanvasRenderingContext2D_direction(WTF::StringImpl *result, uint64_t a2)
{
  WTF::StringImpl *v2;
  uint64_t v3;
  unsigned int v4;
  WebCore::InspectorInstrumentation *v5;
  WebCore::ScriptExecutionContext *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[2];
  WTF::StringImpl *v10;

  v2 = result;
  v3 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v9[0] = 0;
    v9[1] = 0;
    v5 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v3 + 32) + 144))(*(_QWORD *)(v3 + 32));
    if (v5)
    {
      v7 = WebCore::InspectorInstrumentation::instrumentingAgents(v5, v6);
      if (v7)
      {
        v8 = *(_QWORD *)(v7 + 96);
        if (v8)
          WebCore::InspectorCanvasAgent::recordAction(v8, (WebCore::CanvasRenderingContext *)v3, (const WTF::StringImpl *)&v10, v9);
      }
    }
    result = v10;
    v10 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v4 = *(_DWORD *)(v3 + 132);
  if (v4)
    return (WTF::StringImpl *)WebCore::convertEnumerationToJS<WebCore::CanvasDirection>(*((_QWORD *)v2 + 7), (WTF::StringImpl *)(*(_DWORD *)(*(_QWORD *)(v3 + 120) + 560 * v4 - 352) == 1));
  __break(0xC471u);
  return result;
}

BOOL WebCore::setJSOffscreenCanvasRenderingContext2D_direction(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  _BOOL8 result;
  char hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v17;
  WebCore::ScriptExecutionContext *v18;
  uint64_t v19;
  uint64_t v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD *v25;
  WTF::StringImpl *v26;
  _QWORD v27[2];
  WTF::StringImpl *v28;
  _QWORD v29[2];
  char v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v10 = WebCore::parseEnumeration<WebCore::CanvasDirection>(a1, (unint64_t)this);
  v11 = v10;
  v12 = BYTE4(v10);
  if (!*((_DWORD *)v3 + 20))
  {
    if (!BYTE4(v10))
      return 0;
LABEL_14:
    if (*(_BYTE *)(v9 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v17 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
      if (v17
        && (v19 = WebCore::InspectorInstrumentation::instrumentingAgents(v17, v18)) != 0
        && (v20 = *(_QWORD *)(v19 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v20, v9, v11, (uint64_t)v29);
      }
      else
      {
        LOBYTE(v29[0]) = 0;
        v30 = 0;
      }
      v27[0] = v29;
      v27[1] = 1;
      v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
      if (v21)
      {
        v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22);
        if (v23)
        {
          v24 = *(_QWORD *)(v23 + 96);
          if (v24)
            WebCore::InspectorCanvasAgent::recordAction(v24, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v28, v27);
        }
      }
      if (v30)
      {
        v25 = (_DWORD *)v29[0];
        v29[0] = 0;
        if (v25)
        {
          if (*v25 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v25;
        }
      }
      v26 = v28;
      v28 = 0;
      if (v26)
      {
        if (*(_DWORD *)v26 == 2)
          WTF::StringImpl::destroy(v26, v22);
        else
          *(_DWORD *)v26 -= 2;
      }
    }
    v13 = *(_DWORD *)(v9 + 132);
    if (v13)
    {
      if (*(_DWORD *)(*(_QWORD *)(v9 + 120) + 560 * v13 - 352) == v11)
        return 1;
      WebCore::CanvasRenderingContext2DBase::realizeSaves((WebCore::CanvasRenderingContext2DBase::State *)v9);
      v14 = *(_DWORD *)(v9 + 132);
      if (v14)
      {
        *(_DWORD *)(*(_QWORD *)(v9 + 120) + 560 * v14 - 352) = v11;
        return 1;
      }
    }
    __break(0xC471u);
    JUMPOUT(0x194D853D8);
  }
  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
  result = 0;
  if ((hasExceptionsAfterHandlingTraps & 1) == 0 && v12)
    goto LABEL_14;
  return result;
}

_QWORD *WebCore::JSOffscreenCanvasRenderingContext2DOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  BOOL v26;

  v4 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  result = (_QWORD *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 16))(*(_QWORD *)(v4 + 32));
  v6 = v4 + 8;
  if (!v4)
    v6 = 0;
  if (!*(_DWORD *)(a3 + 48))
  {
    if (*(_QWORD *)v6)
    {
      *(_QWORD *)(*(_QWORD *)v6 + 8) = 3;
      *(_QWORD *)v6 = 0;
    }
    return (_QWORD *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 24))(*(_QWORD *)(v4 + 32));
  }
  v9 = *(_QWORD *)(a3 + 32);
  v8 = (uint64_t *)(a3 + 32);
  v7 = v9;
  if (!v9)
    return (_QWORD *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 24))(*(_QWORD *)(v4 + 32));
  v10 = *(_DWORD *)(v7 - 8);
  v11 = (~(v4 << 32) + v4) ^ ((unint64_t)(~(v4 << 32) + v4) >> 22);
  v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
  v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
  v14 = v10 & ((v13 >> 31) ^ v13);
  v15 = *(_QWORD *)(v7 + 16 * v14);
  if (v15 != v4)
  {
    v16 = 1;
    while (v15)
    {
      v14 = ((_DWORD)v14 + v16) & v10;
      v15 = *(_QWORD *)(v7 + 16 * v14);
      ++v16;
      if (v15 == v4)
        goto LABEL_12;
    }
    v14 = *(unsigned int *)(v7 - 4);
  }
LABEL_12:
  if (v14 == *(_DWORD *)(v7 - 4))
    goto LABEL_22;
  v17 = (_QWORD *)(v7 + 16 * v14);
  *v17 = -1;
  v20 = v17[1];
  v19 = v17 + 1;
  v18 = v20;
  if (v20)
  {
    *(_QWORD *)(v18 + 8) = 3;
    *v19 = 0;
  }
  ++*(_DWORD *)(*v8 - 16);
  v21 = *v8;
  v22 = *v8 ? *(_DWORD *)(v21 - 12) - 1 : -1;
  *(_DWORD *)(v21 - 12) = v22;
  v23 = *v8;
  if (!*v8
    || ((v24 = 6 * *(_DWORD *)(v23 - 12), v25 = *(_DWORD *)(v23 - 4), v24 < v25) ? (v26 = v25 >= 9) : (v26 = 0), !v26))
  {
LABEL_22:
    if (!v4)
      return result;
    return (_QWORD *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 24))(*(_QWORD *)(v4 + 32));
  }
  result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v8, v25 >> 1, 0);
  if (v4)
    return (_QWORD *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 24))(*(_QWORD *)(v4 + 32));
  return result;
}

unint64_t WebCore::wrap<WebCore::OffscreenCanvasRenderingContext2D>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t SlowCase;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char **v14;
  int v15;
  unint64_t v16;
  uint64_t *v17;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v19;
  JSC::Structure *v20;
  JSC::JSCell *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  WTF *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  WTF *v38;
  void *v39;
  int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *Allocator;
  uint64_t v45;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  unsigned int v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  WTF *v61;

  v5 = *(_QWORD *)(a2 + 3320);
  if (*(_DWORD *)(v5 + 48))
  {
    v50 = *(_QWORD *)(v5 + 32);
    if (!v50)
      goto LABEL_5;
    v51 = *(_DWORD *)(v50 - 8);
    v52 = (~(a3 << 32) + a3) ^ ((unint64_t)(~(a3 << 32) + a3) >> 22);
    v53 = 9 * ((v52 + ~(v52 << 13)) ^ ((v52 + ~(v52 << 13)) >> 8));
    v54 = (v53 ^ (v53 >> 15)) + ~((v53 ^ (v53 >> 15)) << 27);
    v55 = v51 & ((v54 >> 31) ^ v54);
    v56 = *(_QWORD *)(v50 + 16 * v55);
    if (v56 != a3)
    {
      v57 = 1;
      while (v56)
      {
        v55 = ((_DWORD)v55 + v57) & v51;
        v56 = *(_QWORD *)(v50 + 16 * v55);
        ++v57;
        if (v56 == a3)
          goto LABEL_66;
      }
      goto LABEL_5;
    }
LABEL_66:
    v6 = *(_QWORD *)(v50 + 16 * v55 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *(_QWORD *)(a3 + 8);
    if (!v6)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    SlowCase = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return SlowCase;
  }
LABEL_5:
  (*(void (**)(_QWORD))(**(_QWORD **)(a3 + 32) + 16))(*(_QWORD *)(a3 + 32));
  if (*(void (***)(WebCore::OffscreenCanvasRenderingContext2D *__hidden))a3 != off_1E33DD398)
  {
    __break(0xC471u);
    JUMPOUT(0x194D85A34);
  }
  v8 = *(_QWORD *)(a2 + 3296);
  if (v8)
  {
    v9 = *(_DWORD *)(v8 - 8);
    v10 = ((unint64_t)&WebCore::JSOffscreenCanvasRenderingContext2D::s_info
         + ~((_QWORD)&WebCore::JSOffscreenCanvasRenderingContext2D::s_info << 32)) ^ (((unint64_t)&WebCore::JSOffscreenCanvasRenderingContext2D::s_info
                                                                                     + ~((_QWORD)&WebCore::JSOffscreenCanvasRenderingContext2D::s_info << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = *(char ***)(v8 + 16 * v13);
    if (v14 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info)
    {
LABEL_11:
      v16 = *(_QWORD *)(v8 + 16 * v13 + 8);
      if (v16)
        goto LABEL_13;
    }
    else
    {
      v15 = 1;
      while (v14)
      {
        v13 = ((_DWORD)v13 + v15) & v9;
        v14 = *(char ***)(v8 + 16 * v13);
        ++v15;
        if (v14 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info)
          goto LABEL_11;
      }
    }
  }
  v17 = *(uint64_t **)(a2 + 56);
  Structure = WebCore::JSOffscreenCanvasRenderingContext2DPrototype::createStructure(v17, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v21 = (JSC::JSCell *)WebCore::JSOffscreenCanvasRenderingContext2DPrototype::create((WebCore::JSOffscreenCanvasRenderingContext2DPrototype *)v17, Structure, v19, v20);
  v22 = WebCore::JSOffscreenCanvasRenderingContext2D::createStructure(v17, a2, v21);
  v16 = WebCore::cacheDOMStructure((JSCell *)a2, v22, (uint64_t)&WebCore::JSOffscreenCanvasRenderingContext2D::s_info);
LABEL_13:
  v23 = *(_QWORD *)(a2 + 56);
  v24 = *(_QWORD *)(v23 + 41456);
  v25 = *(_QWORD *)(v24 + 23536);
  v26 = *(_QWORD **)(v25 + 5200);
  if (v26)
    goto LABEL_36;
  v27 = *(_QWORD *)(v24 + 22648);
  if (__ldaxr((unsigned __int8 *)v27))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v27))
  {
    goto LABEL_18;
  }
  MEMORY[0x19AEA534C](v27);
LABEL_18:
  v29 = *(_QWORD *)(v27 + 2824);
  v59 = *(_QWORD *)(v29 + 5200);
  if (!v59)
  {
    v30 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v61, "IsoSpace T");
    v60 = 0;
    MEMORY[0x19AEA3204](v30, &v61, v23 + 192, v23 + 1872, 32, 8, &v60);
    v32 = (uint64_t)v60;
    v60 = 0;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    v33 = v61;
    v61 = 0;
    if (v33)
    {
      if (*(_DWORD *)v33 == 1)
        WTF::fastFree(v33, v31);
      else
        --*(_DWORD *)v33;
    }
    v59 = v30;
    v34 = *(_QWORD *)(v29 + 5200);
    *(_QWORD *)(v29 + 5200) = v30;
    if (v34)
      (*(void (**)(uint64_t))(*(_QWORD *)v34 + 8))(v34);
    v35 = *(unsigned int *)(v27 + 2844);
    if ((_DWORD)v35 == *(_DWORD *)(v27 + 2840))
    {
      v36 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v27 + 2832, v35 + 1, (unint64_t)&v59);
      v35 = *(unsigned int *)(v27 + 2844);
      *(_QWORD *)(*(_QWORD *)(v27 + 2832) + 8 * v35) = *v36;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v27 + 2832) + 8 * v35) = v30;
    }
    *(_DWORD *)(v27 + 2844) = v35 + 1;
  }
  v26 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v37 = *(_QWORD *)(v25 + 5200);
  *(_QWORD *)(v25 + 5200) = v26;
  if (v37)
  {
    v38 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v38, v39);
  }
  v40 = __ldxr((unsigned __int8 *)v27);
  if (v40 != 1)
  {
    __clrex();
    goto LABEL_35;
  }
  if (__stlxr(0, (unsigned __int8 *)v27))
LABEL_35:
    WTF::Lock::unlockSlow((WTF::Lock *)v27);
LABEL_36:
  SlowCase = v26[3];
  if (SlowCase < v26[4])
  {
LABEL_37:
    v26[3] = SlowCase + 32;
    goto LABEL_38;
  }
  SlowCase = v26[5];
  if ((SlowCase & 1) == 0)
  {
    v58 = *(_QWORD *)(SlowCase + 8) ^ v26[6];
    v26[4] = SlowCase + HIDWORD(v58);
    v26[5] = SlowCase + (int)v58;
    goto LABEL_37;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_38:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v16);
  *(_QWORD *)(SlowCase + 24) = a3;
  if (*(_BYTE *)(v23 + 755))
    __dmb(0xAu);
  v41 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE3362E8 & 1) == 0)
  {
    qword_1EE3362E0 = (uint64_t)&off_1E3393660;
    byte_1EE3362E8 = 1;
  }
  if (!*(_DWORD *)(v41 + 48))
  {
    if ((SlowCase & 8) != 0)
      v42 = (SlowCase - 112) | 1;
    else
      v42 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v42 & 1) != 0)
      v43 = v42 + 47;
    else
      v43 = *(_QWORD *)v42 + 32;
    Allocator = *(_QWORD **)(v43 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v43 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1EE3362E0;
    Allocator[2] = v41;
    v45 = *(_QWORD *)(a3 + 8);
    *(_QWORD *)(a3 + 8) = Allocator;
    if (!v45)
      return SlowCase;
LABEL_60:
    *(_QWORD *)(v45 + 8) = 3;
    return SlowCase;
  }
  v61 = (WTF *)a3;
  if ((SlowCase & 8) != 0)
    v47 = (SlowCase - 112) | 1;
  else
    v47 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v47 & 1) != 0)
    v48 = v47 + 47;
  else
    v48 = *(_QWORD *)v47 + 32;
  v49 = *(_QWORD **)(v48 + 16);
  if (!v49)
    v49 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v48 + 16) = *v49;
  *v49 = SlowCase;
  v49[1] = &qword_1EE3362E0;
  v49[2] = v41;
  v60 = v49;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v41 + 32), (uint64_t *)&v61, (uint64_t *)&v60);
  v45 = (uint64_t)v60;
  if (v60)
    goto LABEL_60;
  return SlowCase;
}

WTF::StringImpl *WebCore::convertDictionary<WebCore::OptionalEffectTiming>@<X0>(JSC::JSCell *this@<X1>, JSC::JSGlobalObject *a2@<X0>, uint64_t a3@<X8>)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::Structure *Object;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  JSC::VM *v10;
  double v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  WTF::StringImpl *v15;
  unsigned __int16 v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  unint64_t v19;
  WTF::StringImpl *v20;
  int v21;
  uint64_t v22;
  uint64_t (*v23)();
  JSC::VM *v24;
  int v25;
  WTF::StringImpl *v26;
  uint64_t v27;
  JSC::VM *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  JSC::VM *v35;
  double v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  unint64_t v39;
  WTF::StringImpl *v40;
  unsigned __int16 v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44;
  JSC::VM *v45;
  double v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  JSC::VM *v50;
  double v51;
  int v52;
  int v53;
  int64x2_t v54;
  WTF::StringImpl *v55;
  WTF::StringImpl *result;
  char v57;
  int v58;
  char hasExceptionsAfterHandlingTraps;
  char v60;
  char v61;
  char v62;
  int v63;
  double v64;
  double v65;
  double v66;
  double v67;
  char v68[8];
  int v69;
  char v70;
  __int128 v71;
  int64x2_t v72;
  uint64_t v73;
  WTF::StringImpl *v74;
  __int16 v75;
  JSC::VM *v76;
  JSC::VM *v77;
  int v78;
  WTF::StringImpl *v79;
  WTF::StringImpl *v80;
  JSC::VM *v81;
  unsigned int v82;
  int v83;
  uint64_t v84;

  v84 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v76 = v5;
  v6 = (unint64_t)this & 0xFFFFFFFFFFFFFFF7;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    Object = 0;
  }
  else if (((unint64_t)this & 0xFFFE000000000002) != 0
         || (Object = (JSC::Structure *)JSC::JSCell::getObject(this)) == 0)
  {
    result = (WTF::StringImpl *)JSC::throwTypeError();
    *(_DWORD *)(a3 + 88) = 1;
    return result;
  }
  v68[0] = 0;
  v70 = 0;
  LOBYTE(v71) = 0;
  BYTE8(v71) = 0;
  v72 = vdupq_n_s64(0x7FF8000000000000uLL);
  v73 = 0x7FF8000000000000;
  v74 = 0;
  v75 = -1;
  if (v6 == 2)
    goto LABEL_118;
  WTF::AtomStringImpl::addLiteral();
  v9 = (WTF::StringImpl *)JSC::JSObject::get(Object, a2, (unint64_t)v80);
  if (v80)
  {
    if (*(_DWORD *)v80 == 2)
      WTF::StringImpl::destroy(v80, v8);
    else
      *(_DWORD *)v80 -= 2;
  }
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    goto LABEL_185;
  if (v9 != (WTF::StringImpl *)10)
  {
    v80 = v9;
    v10 = (JSC::VM *)*((_QWORD *)a2 + 7);
    v77 = v10;
    if ((unint64_t)v9 >= 0xFFFE000000000000)
    {
      v11 = (double)(int)v9;
    }
    else if ((unint64_t)v9 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v80, a2);
    }
    else
    {
      *(_QWORD *)&v11 = (char *)v9 - 0x2000000000000;
    }
    if (*((_DWORD *)v10 + 20))
    {
      v64 = v11;
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v10);
      v11 = v64;
      if ((hasExceptionsAfterHandlingTraps & 1) != 0)
        goto LABEL_185;
    }
    if ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
      goto LABEL_150;
    *(double *)v72.i64 = v11;
  }
  WTF::AtomStringImpl::addLiteral();
  v12 = v80;
  v14 = JSC::JSObject::get(Object, a2, (unint64_t)v80);
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v13);
    else
      *(_DWORD *)v12 -= 2;
  }
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    goto LABEL_185;
  if (v14 != 10)
  {
    v80 = (WTF::StringImpl *)*((_QWORD *)a2 + 7);
    v15 = v80;
    v16 = WebCore::parseEnumeration<WebCore::PlaybackDirection>(a2, v14);
    if (*((_DWORD *)v15 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) != 0)
      goto LABEL_185;
    if (v16 <= 0xFFu)
      goto LABEL_157;
    HIBYTE(v75) = v16;
  }
  WTF::AtomStringImpl::addLiteral();
  v17 = v80;
  v19 = JSC::JSObject::get(Object, a2, (unint64_t)v80);
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v18);
    else
      *(_DWORD *)v17 -= 2;
  }
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    goto LABEL_185;
  if (v19 != 10)
  {
    if (v19 >> 49)
    {
      WebCore::Converter<WebCore::IDLUnrestrictedDouble>::convert(a2, v19, (uint64_t)&v77);
      if (v78)
      {
        v21 = 1;
      }
      else
      {
        v21 = 0;
        v81 = v77;
        v82 = 0;
      }
      v83 = v21;
LABEL_38:
      if (!v21)
        goto LABEL_39;
      goto LABEL_48;
    }
    WebCore::Converter<WebCore::IDLDOMString>::convert(a2, v19, (uint64_t)&v77);
    if (v78)
    {
      v21 = 1;
      v83 = 1;
      if (v78 == -1)
        goto LABEL_38;
    }
    else
    {
      v24 = v77;
      v77 = 0;
      v81 = v24;
      v82 = 1;
      v83 = 0;
    }
    ((void (*)(WTF::StringImpl **, JSC::VM **))off_1E32BEA70[v78])(&v79, &v77);
    v21 = v83;
    if (!v83)
    {
LABEL_39:
      LOBYTE(v77) = 0;
      v78 = -1;
      v22 = v82;
      if (v82 == -1)
      {
        if (v70)
        {
          if (v69 == -1)
          {
LABEL_56:
            v25 = v83;
LABEL_57:
            if (v25 != -1)
              ((void (*)(JSC::VM **, JSC::VM **))off_1E32C3010[v25])(&v77, &v81);
            if (v21)
              goto LABEL_124;
            goto LABEL_60;
          }
          ((void (*)(WTF::StringImpl **, char *))off_1E32C2FE0[v69])(&v79, v68);
          v69 = -1;
LABEL_54:
          if (v78 != -1)
            ((void (*)(WTF::StringImpl **, JSC::VM **))off_1E32C2FE0[v78])(&v79, &v77);
          goto LABEL_56;
        }
        v68[0] = 0;
        v69 = -1;
      }
      else
      {
        v23 = off_1E32C2FF0[v82];
        ((void (*)(WTF::StringImpl **, JSC::VM **, JSC::VM **))v23)(&v79, &v77, &v81);
        v78 = v22;
        if (v70)
        {
          v79 = (WTF::StringImpl *)v68;
          ((void (*)(WTF::StringImpl **, char *, JSC::VM **))off_1E32C3000[v22])(&v79, v68, &v77);
          goto LABEL_54;
        }
        v68[0] = 0;
        v69 = -1;
        ((void (*)(WTF::StringImpl **, char *, JSC::VM **))v23)(&v79, v68, &v77);
        v69 = v22;
      }
      v70 = 1;
      goto LABEL_54;
    }
LABEL_48:
    *(_DWORD *)(a3 + 88) = 1;
    v25 = v21;
    goto LABEL_57;
  }
LABEL_60:
  WTF::AtomStringImpl::addLiteral();
  v26 = v80;
  v27 = JSC::JSObject::get(Object, a2, (unint64_t)v80);
  if (v26)
  {
    if (*(_DWORD *)v26 == 2)
      WTF::StringImpl::destroy(v26, v20);
    else
      *(_DWORD *)v26 -= 2;
  }
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    goto LABEL_185;
  if (v27 == 10)
    goto LABEL_78;
  v77 = (JSC::VM *)v27;
  v28 = (JSC::VM *)*((_QWORD *)a2 + 7);
  if ((v27 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v27 + 5) == 2)
  {
    v29 = *(WTF::StringImpl **)(v27 + 8);
    if ((v29 & 1) != 0)
    {
      v29 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v27, a2);
      if (!v29)
        goto LABEL_70;
    }
    else if (!v29)
    {
LABEL_70:
      v79 = v29;
      goto LABEL_71;
    }
    *(_DWORD *)v29 += 2;
    goto LABEL_70;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v77, a2);
LABEL_71:
  if (!*((_DWORD *)v28 + 20))
  {
    v30 = v79;
LABEL_73:
    LODWORD(v81) = 0;
    goto LABEL_74;
  }
  v60 = JSC::VM::hasExceptionsAfterHandlingTraps(v28);
  v30 = v79;
  if ((v60 & 1) == 0)
    goto LABEL_73;
  LODWORD(v81) = 1;
  v79 = 0;
  if (!v30)
    goto LABEL_176;
  if (*(_DWORD *)v30 != 2)
  {
    *(_DWORD *)v30 -= 2;
LABEL_176:
    v58 = 1;
LABEL_177:
    v57 = 0;
    *(_DWORD *)(a3 + 88) = 1;
    goto LABEL_140;
  }
  WTF::StringImpl::destroy(v30, v20);
  v58 = (int)v81;
  if ((_DWORD)v81)
    goto LABEL_177;
  v30 = v80;
LABEL_74:
  v80 = 0;
  v31 = v74;
  v74 = v30;
  if (v31)
  {
    if (*(_DWORD *)v31 != 2)
    {
      *(_DWORD *)v31 -= 2;
      goto LABEL_77;
    }
    WTF::StringImpl::destroy(v31, v20);
    v57 = 1;
    v58 = (int)v81;
LABEL_140:
    if (v58 != -1)
      ((void (*)(JSC::VM **, WTF::StringImpl **))off_1E32BEA70[v58])(&v77, &v80);
    if ((v57 & 1) == 0)
      goto LABEL_124;
    goto LABEL_78;
  }
LABEL_77:
  _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJS9_SB_EEEEEEDcSF_DpT0_((uint64_t)&v77, (WTF::StringImpl *)&v80);
LABEL_78:
  WTF::AtomStringImpl::addLiteral();
  v32 = v80;
  v34 = (WTF::StringImpl *)JSC::JSObject::get(Object, a2, (unint64_t)v80);
  if (v32)
  {
    if (*(_DWORD *)v32 == 2)
      WTF::StringImpl::destroy(v32, v33);
    else
      *(_DWORD *)v32 -= 2;
  }
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    goto LABEL_185;
  if (v34 == (WTF::StringImpl *)10)
    goto LABEL_89;
  v80 = v34;
  v35 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v77 = v35;
  if ((unint64_t)v34 >= 0xFFFE000000000000)
  {
    v36 = (double)(int)v34;
  }
  else if ((unint64_t)v34 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v80, a2);
  }
  else
  {
    *(_QWORD *)&v36 = (char *)v34 - 0x2000000000000;
  }
  if (*((_DWORD *)v35 + 20))
  {
    v65 = v36;
    v61 = JSC::VM::hasExceptionsAfterHandlingTraps(v35);
    v36 = v65;
    if ((v61 & 1) != 0)
      goto LABEL_185;
  }
  if ((*(_QWORD *)&v36 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
  {
    *(double *)&v72.i64[1] = v36;
LABEL_89:
    WTF::AtomStringImpl::addLiteral();
    v37 = v80;
    v39 = JSC::JSObject::get(Object, a2, (unint64_t)v80);
    if (v37)
    {
      if (*(_DWORD *)v37 == 2)
        WTF::StringImpl::destroy(v37, v38);
      else
        *(_DWORD *)v37 -= 2;
    }
    if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
      goto LABEL_185;
    if (v39 == 10)
      goto LABEL_97;
    v80 = (WTF::StringImpl *)*((_QWORD *)a2 + 7);
    v40 = v80;
    v41 = WebCore::parseEnumeration<WebCore::FillMode>(a2, v39);
    if (*((_DWORD *)v40 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v40) & 1) != 0)
      goto LABEL_185;
    if (v41 > 0xFFu)
    {
      LOBYTE(v75) = v41;
LABEL_97:
      WTF::AtomStringImpl::addLiteral();
      v42 = v80;
      v44 = (WTF::StringImpl *)JSC::JSObject::get(Object, a2, (unint64_t)v80);
      if (v42)
      {
        if (*(_DWORD *)v42 == 2)
          WTF::StringImpl::destroy(v42, v43);
        else
          *(_DWORD *)v42 -= 2;
      }
      if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
        goto LABEL_185;
      if (v44 == (WTF::StringImpl *)10)
      {
LABEL_108:
        WTF::AtomStringImpl::addLiteral();
        v47 = v80;
        v49 = (WTF::StringImpl *)JSC::JSObject::get(Object, a2, (unint64_t)v80);
        if (v47)
        {
          if (*(_DWORD *)v47 == 2)
            WTF::StringImpl::destroy(v47, v48);
          else
            *(_DWORD *)v47 -= 2;
        }
        if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
          goto LABEL_185;
        if (v49 != (WTF::StringImpl *)10)
        {
          v80 = v49;
          v50 = (JSC::VM *)*((_QWORD *)a2 + 7);
          if ((unint64_t)v49 >= 0xFFFE000000000000)
          {
            v51 = (double)(int)v49;
          }
          else if ((unint64_t)v49 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v80, a2);
          }
          else
          {
            *(_QWORD *)&v51 = (char *)v49 - 0x2000000000000;
          }
          if (*((_DWORD *)v50 + 20))
          {
            v67 = v51;
            v63 = JSC::VM::hasExceptionsAfterHandlingTraps(v50);
            v51 = v67;
            if (v63)
              goto LABEL_185;
          }
          *(double *)&v71 = v51;
          BYTE8(v71) = 1;
        }
LABEL_118:
        *(_BYTE *)(a3 + 8) = 0;
        v20 = (WTF::StringImpl *)(a3 + 8);
        *(_BYTE *)(a3 + 24) = 0;
        if (v70)
        {
          *(_DWORD *)(a3 + 16) = -1;
          v52 = v69;
          if (v69 != -1)
          {
            ((void (*)(WTF::StringImpl **))off_1E32C2FF0[v69])(&v80);
            *(_DWORD *)(a3 + 16) = v52;
          }
          *(_BYTE *)(a3 + 24) = 1;
        }
        v53 = 0;
        v54 = v72;
        *(_OWORD *)(a3 + 32) = v71;
        *(int64x2_t *)(a3 + 48) = v54;
        v55 = v74;
        v74 = 0;
        *(_QWORD *)(a3 + 64) = v73;
        *(_QWORD *)(a3 + 72) = v55;
        *(_WORD *)(a3 + 80) = v75;
        goto LABEL_123;
      }
      v80 = v44;
      v45 = (JSC::VM *)*((_QWORD *)a2 + 7);
      v77 = v45;
      if ((unint64_t)v44 >= 0xFFFE000000000000)
      {
        v46 = (double)(int)v44;
      }
      else if ((unint64_t)v44 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v80, a2);
      }
      else
      {
        *(_QWORD *)&v46 = (char *)v44 - 0x2000000000000;
      }
      if (*((_DWORD *)v45 + 20))
      {
        v66 = v46;
        v62 = JSC::VM::hasExceptionsAfterHandlingTraps(v45);
        v46 = v66;
        if ((v62 & 1) != 0)
          goto LABEL_185;
      }
      if ((*(_QWORD *)&v46 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
      {
        v73 = *(_QWORD *)&v46;
        goto LABEL_108;
      }
      goto LABEL_150;
    }
LABEL_157:
    JSC::throwTypeError();
    goto LABEL_185;
  }
LABEL_150:
  JSC::throwTypeError();
LABEL_185:
  v53 = 1;
LABEL_123:
  *(_DWORD *)(a3 + 88) = v53;
LABEL_124:
  result = v74;
  v74 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v20);
    else
      *(_DWORD *)result -= 2;
  }
  if (v70)
  {
    if (v69 != -1)
      return (WTF::StringImpl *)((uint64_t (*)(WTF::StringImpl **, char *))off_1E32C2FE0[v69])(&v80, v68);
  }
  return result;
}

unint64_t WebCore::convertDictionary<WebCore::OpusEncoderConfig>@<X0>(JSC::JSCell *this@<X1>, unint64_t result@<X0>, uint64_t a3@<X8>)
{
  unint64_t v3;
  JSC::VM *v5;
  char v6;
  unsigned __int8 v7;
  char v8;
  unint64_t v9;
  BOOL v10;
  BOOL v11;
  unint64_t v12;
  JSC::JSGlobalObject *v13;
  uint64_t Object;
  JSC::Structure *v15;
  WTF::StringImpl *v16;
  unint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  JSC::VM *v21;
  unint64_t v22;
  int v23;
  const char *v24;
  int v25;
  int v26;
  int v27;
  char **v28;
  unsigned int v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  JSC::VM *v39;
  double v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  unint64_t v43;
  double v44;
  int v45;
  BOOL v47;
  int v48;
  uint64_t v49;
  int *v50;
  int v51;
  int v52;
  uint64_t v53;
  int *v54;
  int v55;
  BOOL v56;
  unint64_t v58;
  char v59;
  unint64_t v60;
  int v61;
  int v62;
  __int16 v63;
  _BYTE v64[7];
  _BYTE v65[7];
  JSC::VM *v66;
  JSC::VM *v67;
  unint64_t v68;

  v5 = *(JSC::VM **)(result + 56);
  v66 = v5;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    v13 = (JSC::JSGlobalObject *)result;
    if (((unint64_t)this & 0xFFFE000000000002) != 0)
      goto LABEL_97;
    Object = JSC::JSCell::getObject(this);
    if (!Object)
      goto LABEL_97;
    v15 = (JSC::Structure *)Object;
    WTF::AtomStringImpl::addLiteral();
    v17 = JSC::JSObject::get(v15, v13, v60);
    if (v60)
    {
      if (*(_DWORD *)v60 == 2)
        WTF::StringImpl::destroy((WTF::StringImpl *)v60, v16);
      else
        *(_DWORD *)v60 -= 2;
    }
    if (*((_DWORD *)v5 + 20))
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
      if ((_DWORD)result)
        goto LABEL_98;
    }
    if (v17 == 10)
    {
      v59 = 0;
      v7 = 0;
    }
    else
    {
      result = (unint64_t)WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(v13, v17, &v60);
      v7 = v60;
      if (HIDWORD(v60))
        goto LABEL_98;
      v58 = v60 >> 8;
      v59 = 1;
    }
    WTF::AtomStringImpl::addLiteral();
    v18 = (WTF::StringImpl *)v60;
    v20 = JSC::JSObject::get(v15, v13, v60);
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v19);
      else
        *(_DWORD *)v18 -= 2;
    }
    if (*((_DWORD *)v5 + 20))
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
      if ((_DWORD)result)
        goto LABEL_98;
    }
    if (v20 == 10)
    {
      v6 = 0;
      goto LABEL_40;
    }
    v21 = (JSC::VM *)*((_QWORD *)v13 + 7);
    v67 = v21;
    v60 = v20;
    if ((v20 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v20 + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v60, v13);
      v22 = v68;
      if (v68)
        goto LABEL_25;
      goto LABEL_96;
    }
    v22 = *(_QWORD *)(v20 + 8);
    if ((v22 & 1) != 0)
    {
      v22 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v20, v13);
      if (!v22)
      {
LABEL_24:
        v68 = v22;
        if (v22)
        {
LABEL_25:
          v23 = *(_DWORD *)(v22 + 16);
          v24 = *(const char **)(v22 + 8);
          v25 = *(_DWORD *)(v22 + 4);
          if (v24 == "ogg" || v25 != 3)
          {
            if (v24 != "ogg" || v25 != 3)
            {
              if (v24 == "opus" || v25 != 4)
              {
                if (v25 != 4 || v24 != "opus")
                  goto LABEL_30;
              }
              else if ((v23 & 4) != 0)
              {
                if (*v24 != 111 || *(_WORD *)(v24 + 1) != 30064 || *((_WORD *)v24 + 1) != 29557)
                  goto LABEL_30;
              }
              else
              {
                if (*(_WORD *)v24 != 111)
                  goto LABEL_30;
                if (*((_DWORD *)v24 + 1) != 7536757 || *(_DWORD *)(v24 + 2) != 7667824)
                  goto LABEL_30;
              }
              v28 = &off_1E32BE298;
LABEL_34:
              v27 = *((unsigned __int8 *)v28 + 16);
              v26 = 1;
LABEL_35:
              v29 = v27 | (v26 << 8);
              v68 = 0;
              if (*(_DWORD *)v22 == 2)
                WTF::StringImpl::destroy((WTF::StringImpl *)v22, v19);
              else
                *(_DWORD *)v22 -= 2;
LABEL_37:
              if (*((_DWORD *)v21 + 20))
              {
                result = JSC::VM::hasExceptionsAfterHandlingTraps(v21);
                if ((result & 1) != 0)
                  goto LABEL_98;
              }
              if (v29 > 0xFF)
              {
                v6 = v29;
LABEL_40:
                WTF::AtomStringImpl::addLiteral();
                v30 = (WTF::StringImpl *)v60;
                v32 = JSC::JSObject::get(v15, v13, v60);
                if (v30)
                {
                  if (*(_DWORD *)v30 == 2)
                    WTF::StringImpl::destroy(v30, v31);
                  else
                    *(_DWORD *)v30 -= 2;
                }
                if (*((_DWORD *)v5 + 20))
                {
                  result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
                  if ((_DWORD)result)
                    goto LABEL_98;
                }
                if (v32 == 10)
                {
                  v12 = 20000;
                  v60 = 20000;
                  v61 = 0;
                }
                else
                {
                  result = (unint64_t)WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLongLong>(v13, v32, (uint64_t)&v60);
                  if (v61)
                    goto LABEL_98;
                  v12 = v60;
                }
                WTF::AtomStringImpl::addLiteral();
                v33 = (WTF::StringImpl *)v68;
                v35 = JSC::JSObject::get(v15, v13, v68);
                if (v33)
                {
                  if (*(_DWORD *)v33 == 2)
                    WTF::StringImpl::destroy(v33, v34);
                  else
                    *(_DWORD *)v33 -= 2;
                }
                if (*((_DWORD *)v5 + 20))
                {
                  result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
                  if ((result & 1) != 0)
                    goto LABEL_98;
                }
                if (v35 == 10)
                {
                  v9 = 0;
                }
                else
                {
                  result = (unint64_t)WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLong>(v13, v35, &v68);
                  v9 = v68;
                  if (HIDWORD(v68))
                    goto LABEL_98;
                }
                WTF::AtomStringImpl::addLiteral();
                v36 = (WTF::StringImpl *)v68;
                v38 = JSC::JSObject::get(v15, v13, v68);
                if (v36)
                {
                  if (*(_DWORD *)v36 == 2)
                    WTF::StringImpl::destroy(v36, v37);
                  else
                    *(_DWORD *)v36 -= 2;
                }
                if (*((_DWORD *)v5 + 20))
                {
                  result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
                  if ((result & 1) != 0)
                    goto LABEL_98;
                }
                if (v38 == 10)
                {
                  v10 = 0;
                  goto LABEL_66;
                }
                v39 = (JSC::VM *)*((_QWORD *)v13 + 7);
                if (v38 >= 0xFFFE000000000000)
                {
                  v47 = (_DWORD)v38 == 0;
                  goto LABEL_155;
                }
                *(_QWORD *)&v40 = v38 - 0x2000000000000;
                if (v38 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
                {
                  if (v40 <= 0.0)
                  {
                    v10 = v40 < 0.0;
                    goto LABEL_65;
                  }
                }
                else
                {
                  if ((v38 & 0xFFFE000000000002) != 0)
                  {
                    v10 = v38 == 7;
                    goto LABEL_65;
                  }
                  v48 = *(unsigned __int8 *)(v38 + 5);
                  if (v48 == 3)
                  {
                    v51 = *(_DWORD *)(v38 + 8);
LABEL_147:
                    v47 = v51 == 0;
                    goto LABEL_155;
                  }
                  if (v48 == 2)
                  {
                    v49 = *(_QWORD *)(v38 + 8);
                    if ((v49 & 1) != 0)
                      v50 = (int *)(v38 + 16);
                    else
                      v50 = (int *)(v49 + 4);
                    v51 = *v50;
                    goto LABEL_147;
                  }
                  if ((*(_BYTE *)(16 * (*(_DWORD *)v38 & 0xFFFFFFFE) + 0xA) & 1) != 0)
                  {
                    v47 = *(_QWORD *)(16 * (*(_DWORD *)v38 & 0xFFFFFFFE) + 0x28) == (_QWORD)v13;
LABEL_155:
                    v10 = !v47;
LABEL_65:
                    if (*((_DWORD *)v39 + 20))
                    {
                      result = JSC::VM::hasExceptionsAfterHandlingTraps(v39);
                      if ((result & 1) != 0)
                        goto LABEL_98;
                    }
LABEL_66:
                    WTF::AtomStringImpl::addLiteral();
                    v41 = (WTF::StringImpl *)v68;
                    result = JSC::JSObject::get(v15, v13, v68);
                    v43 = result;
                    if (v41)
                    {
                      if (*(_DWORD *)v41 == 2)
                        result = WTF::StringImpl::destroy(v41, v42);
                      else
                        *(_DWORD *)v41 -= 2;
                    }
                    if (*((_DWORD *)v5 + 20))
                    {
                      result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
                      if ((result & 1) != 0)
                        goto LABEL_98;
                    }
                    if (v43 == 10)
                    {
                      v11 = 0;
                      v8 = v59;
                      v3 = v58;
                      goto LABEL_77;
                    }
                    result = *((_QWORD *)v13 + 7);
                    v3 = v58;
                    if (v43 >= 0xFFFE000000000000)
                    {
                      v11 = (_DWORD)v43 != 0;
                      goto LABEL_76;
                    }
                    *(_QWORD *)&v44 = v43 - 0x2000000000000;
                    if (v43 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
                    {
                      if (v44 <= 0.0)
                      {
                        v11 = v44 < 0.0;
LABEL_162:
                        v3 = v58;
                        goto LABEL_76;
                      }
                    }
                    else
                    {
                      if ((v43 & 0xFFFE000000000002) != 0)
                      {
                        v11 = v43 == 7;
LABEL_76:
                        v8 = v59;
                        if (!*(_DWORD *)(result + 80))
                          goto LABEL_77;
                        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)result);
                        if ((result & 1) == 0)
                          goto LABEL_77;
LABEL_98:
                        v45 = 1;
                        goto LABEL_78;
                      }
                      v52 = *(unsigned __int8 *)(v43 + 5);
                      if (v52 == 3)
                      {
                        v55 = *(_DWORD *)(v43 + 8);
LABEL_151:
                        v56 = v55 == 0;
                        goto LABEL_159;
                      }
                      if (v52 == 2)
                      {
                        v53 = *(_QWORD *)(v43 + 8);
                        if ((v53 & 1) != 0)
                          v54 = (int *)(v43 + 16);
                        else
                          v54 = (int *)(v53 + 4);
                        v55 = *v54;
                        goto LABEL_151;
                      }
                      if ((*(_BYTE *)(16 * (*(_DWORD *)v43 & 0xFFFFFFFE) + 0xA) & 1) != 0)
                      {
                        v56 = *(_QWORD *)(16 * (*(_DWORD *)v43 & 0xFFFFFFFE) + 0x28) == (_QWORD)v13;
LABEL_159:
                        v11 = !v56;
                        goto LABEL_162;
                      }
                    }
                    v11 = 1;
                    goto LABEL_162;
                  }
                }
                v10 = 1;
                goto LABEL_65;
              }
LABEL_97:
              result = JSC::throwTypeError();
              goto LABEL_98;
            }
          }
          else if ((v23 & 4) != 0)
          {
            if (*v24 != 111 || *(_WORD *)(v24 + 1) != 26471)
            {
LABEL_30:
              v26 = 0;
              v27 = 0;
              goto LABEL_35;
            }
          }
          else if (*(_WORD *)v24 != 111 || *(_DWORD *)(v24 + 2) != 6750311)
          {
            goto LABEL_30;
          }
          v28 = &WebCore::parseEnumerationFromString<WebCore::OpusBitstreamFormat>(WTF::String const&)::mappings;
          goto LABEL_34;
        }
LABEL_96:
        v29 = 0;
        goto LABEL_37;
      }
    }
    else if (!v22)
    {
      goto LABEL_24;
    }
    *(_DWORD *)v22 += 2;
    goto LABEL_24;
  }
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 20000;
LABEL_77:
  v45 = 0;
  *(_BYTE *)a3 = v6;
  *(_DWORD *)(a3 + 1) = *(_DWORD *)v65;
  *(_DWORD *)(a3 + 4) = *(_DWORD *)&v65[3];
  *(_QWORD *)(a3 + 8) = v12;
  *(_QWORD *)(a3 + 16) = v7 | (v3 << 8);
  *(_BYTE *)(a3 + 24) = v8;
  *(_DWORD *)(a3 + 25) = *(_DWORD *)v64;
  *(_DWORD *)(a3 + 28) = *(_DWORD *)&v64[3];
  *(_QWORD *)(a3 + 32) = v9;
  *(_BYTE *)(a3 + 40) = v11;
  *(_BYTE *)(a3 + 41) = v10;
  *(_DWORD *)(a3 + 42) = v62;
  *(_WORD *)(a3 + 46) = v63;
LABEL_78:
  *(_DWORD *)(a3 + 48) = v45;
  return result;
}

uint64_t WebCore::JSDOMConstructor<WebCore::JSOscillatorNode>::construct(WebCore::JSDOMGlobalObject *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  JSCell *v13;
  uint64_t v14;
  uint64_t v15;
  JSC::VM *v16;
  uint64_t v17;
  BOOL v18;
  char **v19;
  BOOL v20;
  uint64_t v22;
  JSC::JSCell *v23;
  uint64_t Object;
  JSC::Structure *v25;
  WTF::StringImpl *v26;
  unint64_t v27;
  unsigned __int16 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  unsigned __int8 v34;
  char v35;
  float v36;
  float v37;
  void *v38;
  WebCore::JSDOMGlobalObject *v39;
  WTF *v40;
  JSC::VM *v41;
  WTF::StringImpl *v42;
  WebCore::AudioNode *v43;
  JSC::JSCell *v44;
  JSC::JSGlobalObject *v45;
  JSC::JSObject *v46;
  JSC::JSGlobalObject *v47;
  JSC::VM *v48;
  JSC::JSObject *v49;
  JSC::Structure *v50;
  JSC::VM *FunctionRealm;
  uint64_t v52;
  unsigned int v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char **v58;
  int v59;
  JSC::JSCell *v60;
  unint64_t Structure;
  JSC::Structure *v62;
  JSC::JSCell *v63;
  uint64_t v64;
  unint64_t SubclassStructure;
  uint64_t v66;
  WTF::StringImpl *v68;
  WTF::StringImpl *v69;
  unint64_t v70;
  WTF::StringImpl *v71;
  WTF::StringImpl *v72;
  WTF::StringImpl *v73;
  unint64_t v74;
  WTF::StringImpl *v75;
  WTF::StringImpl *v76;
  WTF::StringImpl *v77;
  WTF::StringImpl *v78;
  JSC::VM *v79;
  double v80;
  WTF::StringImpl *v81;
  WTF::StringImpl *v82;
  WTF::StringImpl *v83;
  JSC::VM *v84;
  double v85;
  WTF::StringImpl *v86;
  WTF::StringImpl *v87;
  uint64_t v88;
  uint64_t v89;
  _BOOL4 v90;
  uint64_t v91;
  uint64_t v93;
  WTF ***v94;
  uint64_t v95;
  WTF **v96;
  void *v97;
  WTF *v98;
  WTF::StringImpl *v99;
  WTF::StringImpl *v100;
  unint64_t v101;
  WTF::StringImpl *v102;
  void *v103;
  JSValue v104;
  WTF::StringImpl *v105;
  char v106;
  double v107;
  char hasExceptionsAfterHandlingTraps;
  double v109;
  char v110;
  JSC::VM *v111;
  JSC::VM *v112;
  uint64_t v113;
  WTF ***v114;
  uint64_t v115;
  WTF **v116;
  void *v117;
  WTF *v118;
  uint64_t v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned __int8 v123;
  uint64_t v124;
  char v125;
  char v126;
  char v127;
  uint64_t v128;
  WTF::StringImpl *v129[2];
  uint64_t v130;
  uint64_t v131;
  float v132;
  WTF *v133;
  WTF::StringImpl *v134;
  WTF::StringImpl *v135;
  int v136;
  JSC::VM *v137;
  __int16 v138;
  char v139;
  __int16 v140;
  char v141;
  __int16 v142;
  char v143;
  __int16 v144;
  char v145;
  JSC::VM *v146;
  JSC::VM *v147;
  __int128 v148;
  uint64_t v149;
  uint64_t v150;
  float v151;
  uint64_t v152;
  int v153;
  uint64_t v154;

  v154 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)a1 + 7);
  v137 = (JSC::VM *)v4;
  v5 = *(_QWORD *)(a2 + 24);
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(a1);
  if (v6 && *(_BYTE *)(v6 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194D87DECLL);
  }
  v12 = v6 - 192;
  if (!v6)
    v12 = 0;
  if ((*(_DWORD *)(*(_QWORD *)(v12 + 680) + 720) & 0x20) == 0)
  {
    JSC::throwTypeError();
    return 2;
  }
  v14 = *(int *)(a2 + 32);
  if ((_DWORD)v14 == 1)
  {
    v104.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, v7);
    return JSC::VM::throwException((JSC::VM *)v4, a1, v104);
  }
  v15 = *(_QWORD *)(a2 + 48);
  v16 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v147 = v16;
  if ((v15 & 0xFFFE000000000002) != 0)
    goto LABEL_19;
  v17 = *(unsigned int *)(16 * (*(_DWORD *)v15 & 0xFFFFFFFE) + 0x4C);
  v18 = *(_DWORD *)(16 * (*(_DWORD *)v15 & 0xFFFFFFFE) + 0x4C) != 0;
  v19 = (char **)(16 * v17);
  if ((_DWORD)v17)
    v20 = v19 == &WebCore::JSBaseAudioContext::s_info;
  else
    v20 = 1;
  if (!v20)
  {
    do
    {
      v19 = (char **)v19[2];
      v18 = v19 != 0;
    }
    while (v19 != &WebCore::JSBaseAudioContext::s_info && v19 != 0);
  }
  if (!v18)
  {
LABEL_19:
    WebCore::throwArgumentTypeError((uint64_t)a1, (uint64_t)&v147, 0, "context", 8, "OscillatorNode", 15, v8, 0, 0, "BaseAudioContext", 17);
    return 0;
  }
  v22 = *(_QWORD *)(v15 + 24);
  v128 = v5;
  if ((unint64_t)(v14 - 3) >= 0xFFFFFFFFFFFFFFFELL)
  {
    v146 = v16;
    goto LABEL_31;
  }
  v23 = *(JSC::JSCell **)(a2 + 56);
  v146 = v16;
  if (((unint64_t)v23 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
LABEL_31:
    LOBYTE(v28) = 0;
    v29 = 0;
    LOBYTE(v30) = 0;
    v31 = 0;
    LOBYTE(v32) = 0;
    v33 = 0;
    v34 = 0;
    v35 = 0;
    v36 = 0.0;
    v37 = 440.0;
    goto LABEL_32;
  }
  v124 = v22;
  if (((unint64_t)v23 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v23)) == 0)
  {
    JSC::throwTypeError();
    v13 = 0;
    v66 = 1;
    v153 = 1;
    goto LABEL_58;
  }
  v25 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v27 = JSC::JSObject::get(v25, a1, (unint64_t)v129[0]);
  if (v129[0])
  {
    if (*(_DWORD *)v129[0] == 2)
      WTF::StringImpl::destroy(v129[0], v26);
    else
      *(_DWORD *)v129[0] -= 2;
  }
  if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
    goto LABEL_123;
  if (v27 == 10)
  {
    v127 = 0;
    v123 = 0;
  }
  else
  {
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, v27, v129);
    if (HIDWORD(v129[0]))
    {
LABEL_123:
      v153 = 1;
LABEL_124:
      v13 = 0;
      v66 = 1;
LABEL_58:
      ((void (*)(WTF::StringImpl **, __int128 *))off_1E32C3030[v66])(v129, &v148);
      return (uint64_t)v13;
    }
    v123 = v129[0];
    v120 = LODWORD(v129[0]) >> 8;
    v127 = 1;
  }
  WTF::AtomStringImpl::addLiteral();
  v68 = v129[0];
  v70 = JSC::JSObject::get(v25, a1, (unint64_t)v129[0]);
  if (v68)
  {
    if (*(_DWORD *)v68 == 2)
      WTF::StringImpl::destroy(v68, v69);
    else
      *(_DWORD *)v68 -= 2;
  }
  if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
    goto LABEL_123;
  if (v70 == 10)
  {
    v126 = 0;
    LOBYTE(v32) = 0;
  }
  else
  {
    v129[0] = *((WTF::StringImpl **)a1 + 7);
    v71 = v129[0];
    v32 = WebCore::parseEnumeration<WebCore::ChannelCountMode>(a1, v70);
    if (*((_DWORD *)v71 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v71) & 1) != 0)
      goto LABEL_123;
    if ((v32 & 0xFF00000000) == 0)
      goto LABEL_122;
    v122 = v32 >> 8;
    v126 = 1;
  }
  WTF::AtomStringImpl::addLiteral();
  v72 = v129[0];
  v74 = JSC::JSObject::get(v25, a1, (unint64_t)v129[0]);
  if (v72)
  {
    if (*(_DWORD *)v72 == 2)
      WTF::StringImpl::destroy(v72, v73);
    else
      *(_DWORD *)v72 -= 2;
  }
  if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
    goto LABEL_123;
  if (v74 == 10)
  {
    v125 = 0;
    LOBYTE(v30) = 0;
  }
  else
  {
    v129[0] = *((WTF::StringImpl **)a1 + 7);
    v75 = v129[0];
    v30 = WebCore::parseEnumeration<WebCore::ChannelInterpretation>(a1, v74);
    if (*((_DWORD *)v75 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v75) & 1) != 0)
      goto LABEL_123;
    if ((v30 & 0xFF00000000) == 0)
      goto LABEL_122;
    v121 = v30 >> 8;
    v125 = 1;
  }
  WTF::AtomStringImpl::addLiteral();
  v76 = v129[0];
  v78 = (WTF::StringImpl *)JSC::JSObject::get(v25, a1, (unint64_t)v129[0]);
  if (v76)
  {
    if (*(_DWORD *)v76 == 2)
      WTF::StringImpl::destroy(v76, v77);
    else
      *(_DWORD *)v76 -= 2;
  }
  if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
    goto LABEL_183;
  v36 = 0.0;
  if (v78 != (WTF::StringImpl *)10)
  {
    v129[0] = v78;
    v79 = (JSC::VM *)*((_QWORD *)a1 + 7);
    v134 = v79;
    if ((unint64_t)v78 >= 0xFFFE000000000000)
    {
      v80 = (double)(int)v78;
    }
    else if ((unint64_t)v78 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v111 = v79;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v129, a1);
      v79 = v111;
    }
    else
    {
      *(_QWORD *)&v80 = (char *)v78 - 0x2000000000000;
    }
    if (*((_DWORD *)v79 + 20))
    {
      v107 = v80;
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v79);
      v80 = v107;
      if ((hasExceptionsAfterHandlingTraps & 1) != 0)
        goto LABEL_183;
    }
    if ((*(_QWORD *)&v80 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL || v80 < -3.40282347e38 || v80 > 3.40282347e38)
      goto LABEL_182;
    v36 = v80;
  }
  WTF::AtomStringImpl::addLiteral();
  v81 = v129[0];
  v83 = (WTF::StringImpl *)JSC::JSObject::get(v25, a1, (unint64_t)v129[0]);
  if (v81)
  {
    if (*(_DWORD *)v81 == 2)
      WTF::StringImpl::destroy(v81, v82);
    else
      *(_DWORD *)v81 -= 2;
  }
  if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
    goto LABEL_183;
  if (v83 == (WTF::StringImpl *)10)
  {
    v37 = 440.0;
    goto LABEL_107;
  }
  v129[0] = v83;
  v84 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v134 = v84;
  if ((unint64_t)v83 >= 0xFFFE000000000000)
  {
    v85 = (double)(int)v83;
  }
  else if ((unint64_t)v83 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v112 = v84;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v129, a1);
    v84 = v112;
  }
  else
  {
    *(_QWORD *)&v85 = (char *)v83 - 0x2000000000000;
  }
  if (*((_DWORD *)v84 + 20))
  {
    v109 = v85;
    v110 = JSC::VM::hasExceptionsAfterHandlingTraps(v84);
    v85 = v109;
    if ((v110 & 1) != 0)
    {
LABEL_183:
      v153 = 1;
      goto LABEL_124;
    }
  }
  if ((*(_QWORD *)&v85 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL || v85 < -3.40282347e38 || v85 > 3.40282347e38)
  {
LABEL_182:
    JSC::throwTypeError();
    goto LABEL_183;
  }
  v37 = v85;
LABEL_107:
  WTF::AtomStringImpl::addLiteral();
  v86 = v129[0];
  v88 = JSC::JSObject::get(v25, a1, (unint64_t)v129[0]);
  if (v86)
  {
    if (*(_DWORD *)v86 == 2)
      WTF::StringImpl::destroy(v86, v87);
    else
      *(_DWORD *)v86 -= 2;
  }
  if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
    goto LABEL_183;
  if (v88 == 10)
  {
    v29 = 0;
    goto LABEL_135;
  }
  v129[0] = *((WTF::StringImpl **)a1 + 7);
  if ((v88 & 0xFFFE000000000002) != 0)
    goto LABEL_122;
  v89 = *(unsigned int *)(16 * (*(_DWORD *)v88 & 0xFFFFFFFE) + 0x4C);
  v90 = *(_DWORD *)(16 * (*(_DWORD *)v88 & 0xFFFFFFFE) + 0x4C) != 0;
  if ((_DWORD)v89)
  {
    v91 = 16 * v89;
    if ((char **)v91 != &WebCore::JSPeriodicWave::s_info)
    {
      do
      {
        v91 = *(_QWORD *)(v91 + 16);
        v90 = v91 != 0;
      }
      while ((char **)v91 != &WebCore::JSPeriodicWave::s_info && v91 != 0);
    }
  }
  if (!v90 || (v29 = *(_QWORD *)(v88 + 24)) == 0)
  {
LABEL_122:
    JSC::throwTypeError();
    goto LABEL_123;
  }
  ++*(_DWORD *)v29;
LABEL_135:
  WTF::AtomStringImpl::addLiteral();
  v99 = v129[0];
  v101 = JSC::JSObject::get(v25, a1, (unint64_t)v129[0]);
  v33 = v126;
  v35 = v127;
  v11 = v121;
  v10 = v122;
  v31 = v125;
  if (v99)
  {
    if (*(_DWORD *)v99 == 2)
    {
      WTF::StringImpl::destroy(v99, v100);
      v11 = v121;
      v10 = v122;
      v31 = v125;
      v33 = v126;
      v35 = v127;
    }
    else
    {
      *(_DWORD *)v99 -= 2;
    }
  }
  if (*((_DWORD *)v16 + 20))
  {
    v106 = JSC::VM::hasExceptionsAfterHandlingTraps(v16);
    v11 = v121;
    v10 = v122;
    v31 = v125;
    v33 = v126;
    v35 = v127;
    if ((v106 & 1) != 0)
      goto LABEL_199;
  }
  if (v101 == 10)
  {
    LOBYTE(v28) = 0;
    v22 = v124;
    v34 = v123;
    v9 = v120;
    goto LABEL_32;
  }
  v129[0] = *((WTF::StringImpl **)a1 + 7);
  v102 = v129[0];
  v28 = WebCore::parseEnumeration<WebCore::OscillatorType>(a1, v101);
  if (*((_DWORD *)v102 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v102) & 1) != 0)
  {
LABEL_199:
    v153 = 1;
    if (v29)
    {
      if (*(_DWORD *)v29 == 1)
      {
        v113 = *(unsigned int *)(v29 + 36);
        if ((_DWORD)v113)
        {
          v114 = *(WTF ****)(v29 + 24);
          v115 = 8 * v113;
          do
          {
            v116 = *v114;
            *v114 = 0;
            if (v116)
            {
              WTF::fastAlignedFree(*v116, v103);
              WTF::fastFree((WTF *)v116, v117);
            }
            ++v114;
            v115 -= 8;
          }
          while (v115);
        }
        v118 = *(WTF **)(v29 + 24);
        if (v118)
        {
          *(_QWORD *)(v29 + 24) = 0;
          *(_DWORD *)(v29 + 32) = 0;
          WTF::fastFree(v118, v103);
        }
        WTF::fastFree((WTF *)v29, v103);
      }
      else
      {
        --*(_DWORD *)v29;
      }
    }
    goto LABEL_124;
  }
  v22 = v124;
  v10 = v122;
  v34 = v123;
  v33 = v126;
  v35 = v127;
  v9 = v120;
  v11 = v121;
  v31 = v125;
  if (v28 <= 0xFFu)
  {
    JSC::throwTypeError();
    goto LABEL_199;
  }
LABEL_32:
  LODWORD(v148) = v34 | (v9 << 8);
  BYTE4(v148) = v35;
  *(_WORD *)((char *)&v148 + 5) = v144;
  BYTE7(v148) = v145;
  DWORD2(v148) = v32 | (v10 << 8);
  BYTE12(v148) = v33;
  *(_WORD *)((char *)&v148 + 13) = v142;
  HIBYTE(v148) = v143;
  LODWORD(v149) = v30 | (v11 << 8);
  BYTE4(v149) = v31;
  HIBYTE(v149) = v141;
  *(_WORD *)((char *)&v149 + 5) = v140;
  LOBYTE(v150) = v28;
  BYTE3(v150) = v139;
  *(_WORD *)((char *)&v150 + 1) = v138;
  *((float *)&v150 + 1) = v37;
  v151 = v36;
  v153 = 0;
  *(_OWORD *)v129 = v148;
  v130 = v149;
  v131 = v150;
  v132 = v36;
  v152 = 0;
  v133 = (WTF *)v29;
  WebCore::OscillatorNode::create((_QWORD *)(v22 - 32), (uint64_t)v129, (uint64_t)&v134);
  v40 = v133;
  v133 = 0;
  if (v40)
  {
    if (*(_DWORD *)v40 == 1)
    {
      v93 = *((unsigned int *)v40 + 9);
      if ((_DWORD)v93)
      {
        v94 = (WTF ***)*((_QWORD *)v40 + 3);
        v95 = 8 * v93;
        do
        {
          v96 = *v94;
          *v94 = 0;
          if (v96)
          {
            WTF::fastAlignedFree(*v96, v38);
            WTF::fastFree((WTF *)v96, v97);
          }
          ++v94;
          v95 -= 8;
        }
        while (v95);
      }
      v98 = (WTF *)*((_QWORD *)v40 + 3);
      if (v98)
      {
        *((_QWORD *)v40 + 3) = 0;
        *((_DWORD *)v40 + 8) = 0;
        WTF::fastFree(v98, v38);
      }
      WTF::fastFree(v40, v38);
    }
    else
    {
      --*(_DWORD *)v40;
    }
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    goto LABEL_169;
  if (!v136)
  {
    v41 = *(JSC::VM **)(v128 + 40);
    v42 = v134;
    v134 = 0;
    v129[0] = v42;
    if (*(uint64_t (***)(WebCore::AudioNode *__hidden))v42 != off_1E336BFA0)
    {
      __break(0xC471u);
      JUMPOUT(0x194D87EC8);
    }
    v13 = (JSCell *)WebCore::createWrapper<WebCore::OscillatorNode,WebCore::OscillatorNode>(v41, (uint64_t *)v129, v39);
    v43 = v129[0];
    v129[0] = 0;
    if (v43)
      WebCore::AudioNode::deref(v43);
    goto LABEL_40;
  }
  if (v136 == 1)
  {
    LOBYTE(v129[0]) = (_BYTE)v134;
    v105 = v135;
    v135 = 0;
    v129[1] = v105;
    if (!*(_QWORD *)(v4 + 16))
    {
      WebCore::propagateExceptionSlowPath(a1, &v137, (unsigned __int8 *)v129);
      v105 = v129[1];
    }
    v129[1] = 0;
    if (v105)
    {
      if (*(_DWORD *)v105 == 2)
        WTF::StringImpl::destroy(v105, (WTF::StringImpl *)v38);
      else
        *(_DWORD *)v105 -= 2;
    }
    v13 = 0;
LABEL_40:
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      goto LABEL_169;
    v44 = *(JSC::JSCell **)(a2 + 40);
    if (((unint64_t)v44 & 0xFFFE000000000002) != 0
      || (v45 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v44)) == 0
      || (v47 = v45, v45 == *(JSC::JSGlobalObject **)(a2 + 24))
      || (v48 = (JSC::VM *)*((_QWORD *)a1 + 7),
          FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v45, v46),
          *((_DWORD *)v48 + 20))
      && (JSC::VM::hasExceptionsAfterHandlingTraps(v48) & 1) != 0)
    {
LABEL_54:
      if (!*(_DWORD *)(v4 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) == 0)
      {
LABEL_55:
        if (v136 != -1)
          ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32C3020[v136])(v129, &v134);
        v66 = 0;
        goto LABEL_58;
      }
LABEL_169:
      v13 = 0;
      goto LABEL_55;
    }
    v52 = *((_QWORD *)FunctionRealm + 412);
    if (v52)
    {
      v53 = *(_DWORD *)(v52 - 8);
      v54 = ((unint64_t)&WebCore::JSOscillatorNode::s_info + ~((_QWORD)&WebCore::JSOscillatorNode::s_info << 32)) ^ (((unint64_t)&WebCore::JSOscillatorNode::s_info + ~((_QWORD)&WebCore::JSOscillatorNode::s_info << 32)) >> 22);
      v55 = 9 * ((v54 + ~(v54 << 13)) ^ ((v54 + ~(v54 << 13)) >> 8));
      v56 = (v55 ^ (v55 >> 15)) + ~((v55 ^ (v55 >> 15)) << 27);
      v57 = v53 & ((v56 >> 31) ^ v56);
      v58 = *(char ***)(v52 + 16 * v57);
      if (v58 == &WebCore::JSOscillatorNode::s_info)
      {
LABEL_50:
        v49 = *(JSC::JSObject **)(v52 + 16 * v57 + 8);
        if (v49)
        {
LABEL_52:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v47, v49, v50);
          if (!*((_DWORD *)v48 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v48) & 1) == 0)
            JSC::JSObject::setStructure(v13, v48, SubclassStructure);
          goto LABEL_54;
        }
      }
      else
      {
        v59 = 1;
        while (v58)
        {
          v57 = ((_DWORD)v57 + v59) & v53;
          v58 = *(char ***)(v52 + 16 * v57);
          ++v59;
          if (v58 == &WebCore::JSOscillatorNode::s_info)
            goto LABEL_50;
        }
      }
    }
    v60 = (JSC::JSCell *)WebCore::JSAudioScheduledSourceNode::prototype(v48, FunctionRealm, v49);
    Structure = WebCore::JSOscillatorNodePrototype::createStructure((uint64_t *)v48, (uint64_t)FunctionRealm, v60);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v63 = (JSC::JSCell *)WebCore::JSOscillatorNodePrototype::create(v48, FunctionRealm, Structure, v62);
    v64 = WebCore::JSOscillatorNode::createStructure((uint64_t *)v48, (uint64_t)FunctionRealm, v63);
    v49 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v64, (uint64_t)&WebCore::JSOscillatorNode::s_info);
    goto LABEL_52;
  }
  v119 = std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::JSOscillatorNode::analyzeHeap(v119);
}

uint64_t WebCore::JSOscillatorNode::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSAudioScheduledSourceNode::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSAudioScheduledSourceNode::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSAudioScheduledSourceNode::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSOscillatorNodePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSOscillatorNodePrototype::create(WebCore::JSOscillatorNodePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSOscillatorNode::s_info, &WebCore::JSOscillatorNodePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSOscillatorNode>,(WebCore::DOMConstructorID)261>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2088);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSAudioScheduledSourceNode>,(WebCore::DOMConstructorID)241>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSOscillatorNode>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSOscillatorNode::s_info + ~((_QWORD)&WebCore::JSOscillatorNode::s_info << 32)) ^ (((unint64_t)&WebCore::JSOscillatorNode::s_info + ~((_QWORD)&WebCore::JSOscillatorNode::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSOscillatorNode::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSOscillatorNode::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSAudioScheduledSourceNode::prototype((WebCore::JSAudioScheduledSourceNode *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSOscillatorNodePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSOscillatorNodePrototype::create((WebCore::JSOscillatorNodePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSOscillatorNode::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSOscillatorNode::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2088) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsOscillatorNodeConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSOscillatorNodePrototype::s_info != (char **)(16
                                                              * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSOscillatorNode>,(WebCore::DOMConstructorID)261>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsOscillatorNode_type(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  v4 = *(unsigned __int8 *)(*((_QWORD *)a2 + 3) + 209);
  {
    WebCore::convertEnumerationToString(WebCore::OscillatorType)::$_0::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::OscillatorType)::$_1::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::OscillatorType)::$_2::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::OscillatorType)::$_3::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::OscillatorType)::values[0] = (uint64_t)&WebCore::convertEnumerationToString(WebCore::OscillatorType)::$_0::operator() const(void)::impl;
    unk_1EE2F48E0 = &WebCore::convertEnumerationToString(WebCore::OscillatorType)::$_1::operator() const(void)::impl;
    qword_1EE2F48E8 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::OscillatorType)::$_2::operator() const(void)::impl;
    unk_1EE2F48F0 = &WebCore::convertEnumerationToString(WebCore::OscillatorType)::$_3::operator() const(void)::impl;
    WebCore::convertEnumerationToString(WebCore::OscillatorType)::$_4::operator() const(void)::impl += 2;
    qword_1EE2F48F8 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::OscillatorType)::$_4::operator() const(void)::impl;
  }
  v5 = WebCore::convertEnumerationToString(WebCore::OscillatorType)::values[v4];
  if (!v5)
    return *v3;
  v6 = *(_DWORD *)v5;
  v7 = *(_DWORD *)(v5 + 4);
  *(_DWORD *)v5 += 2;
  if (v7)
  {
    if (v7 != 1)
    {
LABEL_6:
      v8 = *(_QWORD *)(v2 + 64760);
      if (!v8 || v5 != *(_QWORD *)(v8 + 8))
      {
        v8 = JSC::jsStringWithCacheSlowCase();
        v6 = *(_DWORD *)v5 - 2;
      }
      goto LABEL_9;
    }
    v10 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_6;
      v11 = v12;
    }
    v8 = *(_QWORD *)(v2 + 8 * v11 + 42216);
  }
  else
  {
    v8 = *v3;
  }
LABEL_9:
  if (v6)
    *(_DWORD *)v5 = v6;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v5, a2);
  return v8;
}

BOOL WebCore::setJSOscillatorNode_type(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  __int16 v11;
  unsigned __int8 v12;
  int v13;
  WTF::StringImpl *v14;
  _BOOL8 result;
  char hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  JSC::VM *v19;
  unsigned __int8 v20[8];
  WTF::StringImpl *v21;
  uint64_t v22;
  WTF::StringImpl *v23;
  char v24;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSOscillatorNode::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSOscillatorNode::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v19 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v11 = WebCore::parseEnumeration<WebCore::OscillatorType>(a1, (unint64_t)this);
  v12 = v11;
  v13 = HIBYTE(v11);
  if (*(_DWORD *)(v4 + 80))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
    result = 0;
    if ((hasExceptionsAfterHandlingTraps & 1) != 0 || !v13)
      return result;
  }
  else if (!HIBYTE(v11))
  {
    return 0;
  }
  WebCore::OscillatorNode::setTypeForBindings(v10, v12, &v22);
  if (v24)
  {
    v20[0] = v22;
    v17 = v23;
    v23 = 0;
    v21 = v17;
    if (!*(_QWORD *)(v4 + 16))
    {
      WebCore::propagateExceptionSlowPath(a1, &v19, v20);
      v17 = v21;
    }
    v21 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v14);
      else
        *(_DWORD *)v17 -= 2;
    }
    if (v24)
    {
      v18 = v23;
      v23 = 0;
      if (v18)
      {
        if (*(_DWORD *)v18 == 2)
          WTF::StringImpl::destroy(v18, v14);
        else
          *(_DWORD *)v18 -= 2;
      }
    }
  }
  return 1;
}

unint64_t WebCore::jsOscillatorNode_frequency(uint64_t a1, uint64_t a2)
{
  WTF *v2;

  v2 = *(WTF **)(*(_QWORD *)(a2 + 24) + 216);
  if (v2)
    return WebCore::wrap<WebCore::AudioParam>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v2);
  else
    return 2;
}

unint64_t WebCore::jsOscillatorNode_detune(uint64_t a1, uint64_t a2)
{
  WTF *v2;

  v2 = *(WTF **)(*(_QWORD *)(a2 + 24) + 224);
  if (v2)
    return WebCore::wrap<WebCore::AudioParam>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v2);
  else
    return 2;
}

uint64_t WebCore::JSOscillatorNode::subspaceForImpl(WebCore::JSOscillatorNode *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2112);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 2112);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 2112);
    *(_QWORD *)(v8 + 2112) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 2112);
  *(_QWORD *)(v3 + 2112) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSOscillatorNodeOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(_QWORD **)(*(_QWORD *)a2 + 24);
  v6 = v5[20];
  if (!v6)
    return 0;
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7 || *(_BYTE *)(v7 + 180))
    return 0;
  if (v5[21] || (result = (*(uint64_t (**)(_QWORD *))(v5[19] + 64))(v5 + 19), (_DWORD)result))
  {
    if (a5)
    {
      *a5 = "ActiveDOMObject with pending activity";
      a5[1] = 38;
    }
    return 1;
  }
  return result;
}

WTF::Thread *WebCore::JSOscillatorNodeOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  WebCore::AudioNode *v4;
  WTF::Thread *result;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  WebCore::AudioNode *v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;

  v4 = *(WebCore::AudioNode **)(*(_QWORD *)a2 + 24);
  result = WebCore::AudioNode::ref(v4);
  v6 = (char *)v4 + 8;
  if (!v4)
    v6 = 0;
  if (*(_DWORD *)(a3 + 48))
  {
    v9 = *(_QWORD *)(a3 + 32);
    v8 = (uint64_t *)(a3 + 32);
    v7 = v9;
    if (v9)
    {
      v10 = *(_DWORD *)(v7 - 8);
      v11 = ((unint64_t)v4 + ~((_QWORD)v4 << 32)) ^ (((unint64_t)v4 + ~((_QWORD)v4 << 32)) >> 22);
      v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
      v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
      v14 = v10 & ((v13 >> 31) ^ v13);
      v15 = *(WebCore::AudioNode **)(v7 + 16 * v14);
      if (v15 != v4)
      {
        v16 = 1;
        while (v15)
        {
          v14 = ((_DWORD)v14 + v16) & v10;
          v15 = *(WebCore::AudioNode **)(v7 + 16 * v14);
          ++v16;
          if (v15 == v4)
            goto LABEL_14;
        }
        v14 = *(unsigned int *)(v7 - 4);
      }
LABEL_14:
      if (v14 != *(_DWORD *)(v7 - 4))
      {
        v17 = (_QWORD *)(v7 + 16 * v14);
        *v17 = -1;
        v20 = v17[1];
        v19 = v17 + 1;
        v18 = v20;
        if (v20)
        {
          *(_QWORD *)(v18 + 8) = 3;
          *v19 = 0;
        }
        ++*(_DWORD *)(*v8 - 16);
        v21 = *v8;
        if (*v8)
          v22 = *(_DWORD *)(v21 - 12) - 1;
        else
          v22 = -1;
        *(_DWORD *)(v21 - 12) = v22;
        v23 = *v8;
        if (*v8)
        {
          v24 = 6 * *(_DWORD *)(v23 - 12);
          v25 = *(_DWORD *)(v23 - 4);
          if (v24 < v25 && v25 >= 9)
            result = (WTF::Thread *)WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v8, v25 >> 1, 0);
        }
      }
    }
  }
  else if (*(_QWORD *)v6)
  {
    *(_QWORD *)(*(_QWORD *)v6 + 8) = 3;
    *(_QWORD *)v6 = 0;
  }
  if (v4)
    return WebCore::AudioNode::deref(v4);
  return result;
}

uint64_t WebCore::createWrapper<WebCore::OscillatorNode,WebCore::OscillatorNode>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSAudioScheduledSourceNode *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (!v6)
    goto LABEL_7;
  v7 = *(_DWORD *)(v6 - 8);
  v8 = ((unint64_t)&WebCore::JSOscillatorNode::s_info + ~((_QWORD)&WebCore::JSOscillatorNode::s_info << 32)) ^ (((unint64_t)&WebCore::JSOscillatorNode::s_info + ~((_QWORD)&WebCore::JSOscillatorNode::s_info << 32)) >> 22);
  v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
  v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
  v11 = v7 & ((v10 >> 31) ^ v10);
  v12 = *(char ***)(v6 + 16 * v11);
  if (v12 != &WebCore::JSOscillatorNode::s_info)
  {
    v13 = 1;
    while (v12)
    {
      v11 = ((_DWORD)v11 + v13) & v7;
      v12 = *(char ***)(v6 + 16 * v11);
      ++v13;
      if (v12 == &WebCore::JSOscillatorNode::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
  if (!v14)
  {
LABEL_7:
    v15 = (WebCore::JSAudioScheduledSourceNode *)*((_QWORD *)a1 + 7);
    v16 = (JSC::JSCell *)WebCore::JSAudioScheduledSourceNode::prototype(v15, a1, a3);
    Structure = WebCore::JSOscillatorNodePrototype::createStructure((uint64_t *)v15, (uint64_t)a1, v16);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v19 = (JSC::JSCell *)WebCore::JSOscillatorNodePrototype::create(v15, a1, Structure, v18);
    v20 = WebCore::JSOscillatorNode::createStructure((uint64_t *)v15, (uint64_t)a1, v19);
    v14 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSOscillatorNode::s_info);
  }
  v21 = WebCore::JSOscillatorNode::create(v14, a1, a2);
  WebCore::cacheWrapper<WebCore::OscillatorNode,WebCore::JSOscillatorNode>(*((_QWORD *)a1 + 415), v5, v21);
  return v21;
}

uint64_t WebCore::wrap<WebCore::OscillatorNode>(int a1, JSC::VM *a2, WebCore::AudioNode *this)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  WebCore::JSDOMGlobalObject *v8;
  WebCore::AudioNode *v9;
  uint64_t result;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  WebCore::AudioNode *v17;
  int v18;
  WebCore::AudioNode *v19;

  v5 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v5 + 48))
  {
    v11 = *(_QWORD *)(v5 + 32);
    if (!v11)
      goto LABEL_5;
    v12 = *(_DWORD *)(v11 - 8);
    v13 = ((unint64_t)this + ~((_QWORD)this << 32)) ^ (((unint64_t)this + ~((_QWORD)this << 32)) >> 22);
    v14 = 9 * ((v13 + ~(v13 << 13)) ^ ((v13 + ~(v13 << 13)) >> 8));
    v15 = (v14 ^ (v14 >> 15)) + ~((v14 ^ (v14 >> 15)) << 27);
    v16 = v12 & ((v15 >> 31) ^ v15);
    v17 = *(WebCore::AudioNode **)(v11 + 16 * v16);
    if (v17 != this)
    {
      v18 = 1;
      while (v17)
      {
        v16 = ((_DWORD)v16 + v18) & v12;
        v17 = *(WebCore::AudioNode **)(v11 + 16 * v16);
        ++v18;
        if (v17 == this)
          goto LABEL_14;
      }
      goto LABEL_5;
    }
LABEL_14:
    v6 = *(_QWORD *)(v11 + 16 * v16 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *((_QWORD *)this + 1);
    if (!v6)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    v7 = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return v7;
  }
LABEL_5:
  WebCore::AudioNode::ref(this);
  v19 = this;
  if (*(uint64_t (***)(WebCore::AudioNode *__hidden))this == off_1E336BFA0)
  {
    v7 = WebCore::createWrapper<WebCore::OscillatorNode,WebCore::OscillatorNode>(a2, (uint64_t *)&v19, v8);
    v9 = v19;
    v19 = 0;
    if (v9)
      WebCore::AudioNode::deref(v9);
    return v7;
  }
  result = 362;
  __break(0xC471u);
  return result;
}

uint64_t WebCore::parseEnumeration<WebCore::OscillatorType>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  _BOOL4 v10;
  BOOL v11;
  int v12;
  char **v13;
  char v15;
  int v16;
  int v17;
  uint64_t v22;
  unint64_t v23;

  v3 = a1;
  v23 = this;
  if ((this & 0xFFFE000000000002) != 0 || *(_BYTE *)(this + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v23, a1);
    v4 = v22;
    if (v22)
      goto LABEL_7;
LABEL_50:
    v16 = 0;
    v17 = 0;
    return v16 | (v17 << 8);
  }
  v4 = *(_QWORD *)(this + 8);
  if ((v4 & 1) == 0)
  {
    if (!v4)
      goto LABEL_6;
    goto LABEL_5;
  }
  v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
  if (v4)
LABEL_5:
    *(_DWORD *)v4 += 2;
LABEL_6:
  if (!v4)
    goto LABEL_50;
LABEL_7:
  v5 = *(_QWORD *)(v4 + 8);
  v6 = *(_DWORD *)(v4 + 4);
  v7 = ((unint64_t)*(unsigned int *)(v4 + 16) >> 2) & 1;
  v8 = v7 << 32;
  v9 = v6 != 6;
  if ((char *)v5 != "custom" && v6 == 6)
  {
    if ((_DWORD)v7)
    {
      if (*(_BYTE *)v5 != 99 || *(_DWORD *)(v5 + 1) != 1869902709 || *(_DWORD *)(v5 + 2) != 1836020851)
      {
LABEL_13:
        v9 = 0;
        v10 = 0;
        v11 = 1;
        v12 = 6;
        goto LABEL_14;
      }
    }
    else
    {
      if (*(_WORD *)v5 != 99)
        goto LABEL_13;
      if (*(_QWORD *)(v5 + 2) != 0x6F007400730075 || *(_QWORD *)(v5 + 4) != 0x6D006F00740073)
        goto LABEL_13;
    }
LABEL_57:
    v13 = &WebCore::parseEnumerationFromString<WebCore::OscillatorType>(WTF::String const&)::mappings;
    goto LABEL_58;
  }
  if ((char *)v5 == "custom" && v6 == 6)
    goto LABEL_57;
  v10 = v6 == 8;
  v11 = v6 != 8;
  if ((char *)v5 == "sawtooth" || v6 != 8)
  {
    if ((char *)v5 == "sawtooth" && v6 == 8)
      goto LABEL_32;
    if ((char *)v5 == "sine" || v6 != 4)
    {
      v12 = *(_DWORD *)(v4 + 4);
      if ((char *)v5 != "sine" || v6 != 4)
        goto LABEL_14;
    }
    else if ((_DWORD)v7)
    {
      if (*(_BYTE *)v5 != 115 || *(_WORD *)(v5 + 1) != 28265 || *(_WORD *)(v5 + 2) != 25966)
      {
        v12 = 4;
        v8 = 0x100000000;
        goto LABEL_14;
      }
    }
    else
    {
      if (*(_WORD *)v5 != 115)
      {
        v12 = 4;
        goto LABEL_14;
      }
      v12 = 4;
      if (*(_DWORD *)(v5 + 2) != 7209065 || *(_DWORD *)(v5 + 4) != 6619246)
        goto LABEL_14;
    }
    v13 = &off_1E32BE4E0;
    goto LABEL_58;
  }
  if ((_DWORD)v7)
  {
    if (*(_BYTE *)v5 == 115 && *(_DWORD *)(v5 + 1) == 1869903713 && *(_DWORD *)(v5 + 4) == 1752461167)
    {
LABEL_32:
      v13 = &off_1E32BE4C8;
      goto LABEL_58;
    }
LABEL_77:
    v11 = 0;
    v12 = 8;
    goto LABEL_14;
  }
  if (*(_WORD *)v5 != 115)
    goto LABEL_77;
  v11 = 0;
  v12 = 8;
  if (*(_QWORD *)(v5 + 2) == 0x6F007400770061 && *(_QWORD *)(v5 + 8) == 0x680074006F006FLL)
    goto LABEL_32;
LABEL_14:
  if ((char *)v5 == "square" || v9)
  {
    if ((char *)v5 == "square" && v6 == 6)
      goto LABEL_21;
  }
  else
  {
    if (!v12)
    {
LABEL_21:
      v13 = &off_1E32BE4F8;
LABEL_58:
      v16 = *((unsigned __int8 *)v13 + 16);
      v17 = 1;
      goto LABEL_59;
    }
    if ((v8 & 0x100000000) != 0)
    {
      if (*(_BYTE *)v5 == 115 && *(_DWORD *)(v5 + 1) == 1918989681 && *(_DWORD *)(v5 + 2) == 1701994869)
        goto LABEL_21;
      v8 = 0x100000000;
    }
    else if (*(_WORD *)v5 == 115
           && *(_QWORD *)(v5 + 2) == 0x72006100750071
           && *(_QWORD *)(v5 + 4) == 0x65007200610075)
    {
      goto LABEL_21;
    }
  }
  v15 = (char *)v5 == "triangle" || v11;
  if ((v15 & 1) != 0)
  {
    if ((char *)v5 == "triangle" && v10)
      goto LABEL_43;
  }
  else
  {
    if (!v12)
    {
LABEL_43:
      v13 = &off_1E32BE510;
      goto LABEL_58;
    }
    if ((v8 & 0x100000000) != 0)
    {
      if (*(_BYTE *)v5 == 116 && *(_DWORD *)(v5 + 1) == 1851877746 && *(_DWORD *)(v5 + 4) == 1701603182)
        goto LABEL_43;
    }
    else if (*(_WORD *)v5 == 116
           && *(_QWORD *)(v5 + 8) == 0x65006C0067006ELL
           && *(_QWORD *)(v5 + 2) == 0x6E006100690072)
    {
      goto LABEL_43;
    }
  }
  v16 = 0;
  v17 = 0;
LABEL_59:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v16 | (v17 << 8);
}

void WebCore::JSMessageChannelOwner::~JSMessageChannelOwner(WebCore::JSMessageChannelOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSMessagePortOwner::~JSMessagePortOwner(WebCore::JSMessagePortOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSMutationRecordOwner::~JSMutationRecordOwner(WebCore::JSMutationRecordOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSNVShaderNoperspectiveInterpolationOwner::~JSNVShaderNoperspectiveInterpolationOwner(WebCore::JSNVShaderNoperspectiveInterpolationOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSNamedNodeMapOwner::~JSNamedNodeMapOwner(WebCore::JSNamedNodeMapOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSNavigationOwner::~JSNavigationOwner(WebCore::JSNavigationOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSNavigationActivationOwner::~JSNavigationActivationOwner(WebCore::JSNavigationActivationOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSNavigationDestinationOwner::~JSNavigationDestinationOwner(WebCore::JSNavigationDestinationOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

BOOL WebCore::JSNavigationInterceptHandler::hasCallback(WebCore::JSNavigationInterceptHandler *this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *((_QWORD *)this + 3);
  return v1 && (v2 = *(_QWORD *)(v1 + 16)) != 0 && (*(_BYTE *)(v2 + 8) & 3) == 0 && *(_QWORD *)v2 != 0;
}

void WebCore::JSNavigationPreloadManagerOwner::~JSNavigationPreloadManagerOwner(WebCore::JSNavigationPreloadManagerOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSNavigationTransitionOwner::~JSNavigationTransitionOwner(WebCore::JSNavigationTransitionOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSNavigatorOwner::~JSNavigatorOwner(WebCore::JSNavigatorOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

BOOL WebCore::JSNodeFilter::hasCallback(WebCore::JSNodeFilter *this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *((_QWORD *)this + 3);
  return v1 && (v2 = *(_QWORD *)(v1 + 16)) != 0 && (*(_BYTE *)(v2 + 8) & 3) == 0 && *(_QWORD *)v2 != 0;
}

void WebCore::JSNodeIteratorOwner::~JSNodeIteratorOwner(WebCore::JSNodeIteratorOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSNotificationOwner::~JSNotificationOwner(WebCore::JSNotificationOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

BOOL WebCore::JSNotificationPermissionCallback::hasCallback(WebCore::JSNotificationPermissionCallback *this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *((_QWORD *)this + 3);
  return v1 && (v2 = *(_QWORD *)(v1 + 16)) != 0 && (*(_BYTE *)(v2 + 8) & 3) == 0 && *(_QWORD *)v2 != 0;
}

void WebCore::JSOESDrawBuffersIndexedOwner::~JSOESDrawBuffersIndexedOwner(WebCore::JSOESDrawBuffersIndexedOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSOESElementIndexUintOwner::~JSOESElementIndexUintOwner(WebCore::JSOESElementIndexUintOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSOESFBORenderMipmapOwner::~JSOESFBORenderMipmapOwner(WebCore::JSOESFBORenderMipmapOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSOESSampleVariablesOwner::~JSOESSampleVariablesOwner(WebCore::JSOESSampleVariablesOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSOESShaderMultisampleInterpolationOwner::~JSOESShaderMultisampleInterpolationOwner(WebCore::JSOESShaderMultisampleInterpolationOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSOESStandardDerivativesOwner::~JSOESStandardDerivativesOwner(WebCore::JSOESStandardDerivativesOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSOESTextureFloatOwner::~JSOESTextureFloatOwner(WebCore::JSOESTextureFloatOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSOESTextureFloatLinearOwner::~JSOESTextureFloatLinearOwner(WebCore::JSOESTextureFloatLinearOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSOESTextureHalfFloatOwner::~JSOESTextureHalfFloatOwner(WebCore::JSOESTextureHalfFloatOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSOESTextureHalfFloatLinearOwner::~JSOESTextureHalfFloatLinearOwner(WebCore::JSOESTextureHalfFloatLinearOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSOESVertexArrayObjectOwner::~JSOESVertexArrayObjectOwner(WebCore::JSOESVertexArrayObjectOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSOfflineAudioContextOwner::~JSOfflineAudioContextOwner(WebCore::JSOfflineAudioContextOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSOffscreenCanvasOwner::~JSOffscreenCanvasOwner(WebCore::JSOffscreenCanvasOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSOscillatorNodeOwner::~JSOscillatorNodeOwner(WebCore::JSOscillatorNodeOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6StringENS9_6VectorISA_Lm0ENS9_15CrashOnOverflowELm16ENS9_10FastMallocEEEN7WebCore28ConstrainDOMStringParametersEEEENSF_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSK_1EJSH_SI_EEEEEEDcSM_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 72);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E32BE9D8[v3])(&v5, a2 + 8);
  *(_DWORD *)(a2 + 72) = -1;
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore23MerchantValidationEventENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[4];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore23MerchantValidationEventENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore23MerchantValidationEvent4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *result;

  v3 = (WTF::StringImpl *)*((_QWORD *)a2 + 2);
  *((_QWORD *)a2 + 2) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_BYTE *WebCore::jsMerchantValidationEventPrototypeFunction_complete(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  int v12;
  uint64_t v13;
  _DWORD *v14;
  uint64_t v15;
  JSValue v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  JSValue v21;
  WTF::StringImpl *v22;
  JSC::VM *v23;
  uint64_t v24;
  int v25;
  _DWORD *v26;
  WTF::StringImpl *v27;
  uint64_t v28;
  WTF::StringImpl *v29;
  char v30;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v23 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v23, "MerchantValidationEvent", "complete");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSMerchantValidationEvent::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSMerchantValidationEvent::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v23, "MerchantValidationEvent", "complete");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v18);
  }
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::Converter<WebCore::IDLPromise<WebCore::IDLAny>>::convert<WebCore::DefaultExceptionThrower>(this, *((JSC::JSGlobalObject **)a2 + 6), (JSValue)&v28, (uint64_t)&v24);
  v12 = v25;
  if (!v25)
  {
    v13 = v24;
    v24 = 0;
    v26 = (_DWORD *)v13;
    WebCore::MerchantValidationEvent::complete(v11, (uint64_t *)&v26, &v28);
    v14 = v26;
    v26 = 0;
    if (v14)
    {
      if (v14[4] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v14 + 16))(v14);
      else
        --v14[4];
    }
    if (!v30)
    {
      v15 = 10;
LABEL_19:
      v12 = v25;
      goto LABEL_20;
    }
    v19 = (WTF::StringImpl *)v28;
    LOBYTE(v26) = v28;
    v20 = v29;
    v29 = 0;
    v27 = v20;
    if (!*((_QWORD *)v4 + 2))
    {
      v21.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v28, (JSC::JSGlobalObject *)&v27);
      JSC::VM::throwException(v4, this, v21);
      v20 = v27;
    }
    v27 = 0;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
        WTF::StringImpl::destroy(v20, v19);
      else
        *(_DWORD *)v20 -= 2;
    }
    if (v30)
    {
      v22 = v29;
      v29 = 0;
      if (v22)
      {
        if (*(_DWORD *)v22 != 2)
        {
          v15 = 0;
          *(_DWORD *)v22 -= 2;
          goto LABEL_19;
        }
        WTF::StringImpl::destroy(v22, v19);
      }
    }
    v15 = 0;
    goto LABEL_19;
  }
  v15 = 0;
LABEL_20:
  if (v12 != -1)
    ((void (*)(uint64_t *, uint64_t *))off_1E32BEB50[v12])(&v28, &v24);
  return (_BYTE *)v15;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11MessagePortENSC_ISH_EENSE_ISH_EEEENS9_INSA_13ServiceWorkerENSC_ISL_EENSE_ISL_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSQ_1EJSG_SK_SO_EEEEEEDcSS_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF *v2;
  uint64_t *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;

  v2 = *(WTF **)a2;
  *(_QWORD *)a2 = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = (uint64_t *)*((_QWORD *)v2 + 2);
      *((_QWORD *)v2 + 2) = 0;
      if (v3)
      {
        if (*v3)
          WTF::HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>>::deallocateTable(*v3, a2);
        WTF::fastFree((WTF *)v3, a2);
      }
      v4 = (unsigned int *)*((_QWORD *)v2 + 1);
      *((_QWORD *)v2 + 1) = 0;
      if (v4)
      {
        do
        {
          v5 = __ldaxr(v4);
          v6 = v5 - 1;
        }
        while (__stlxr(v6, v4));
        if (!v6)
        {
          atomic_store(1u, v4);
          WTF::fastFree((WTF *)v4, a2);
        }
      }
      WTF::fastFree(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11MessagePortENSC_ISH_EENSE_ISH_EEEENS9_INSA_13ServiceWorkerENSC_ISL_EENSE_ISL_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSQ_1EJSG_SK_SO_EEEEEEDcSS_DpT0_(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  WebCore::MessagePort *v7;
  BOOL v8;
  int v9;
  bmalloc::api *v10;
  void *v11;
  uint64_t v12;

  v2 = *a2;
  *a2 = 0;
  if (!v2)
    return;
  v3 = *(_QWORD *)(v2 + 48);
  if (__ldaxr((unsigned __int8 *)v3))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v3))
  {
    goto LABEL_6;
  }
  MEMORY[0x19AEA534C](v3);
LABEL_6:
  v5 = *(_QWORD *)(v3 + 8);
  v6 = v5 - 1;
  *(_QWORD *)(v3 + 8) = v5 - 1;
  if (v5 == 1)
  {
    v12 = *(_QWORD *)(v3 + 16);
    v7 = *(WebCore::MessagePort **)(v3 + 24);
    *(_QWORD *)(v3 + 24) = 0;
    v8 = v12 != 0;
  }
  else
  {
    v7 = 0;
    v8 = 1;
  }
  v9 = __ldxr((unsigned __int8 *)v3);
  if (v9 != 1)
  {
    __clrex();
LABEL_13:
    WTF::Lock::unlockSlow((WTF::Lock *)v3);
    if (v6)
      return;
    goto LABEL_14;
  }
  if (__stlxr(0, (unsigned __int8 *)v3))
    goto LABEL_13;
  if (v6)
    return;
LABEL_14:
  if (v7)
  {
    WebCore::MessagePort::~MessagePort(v7, a2);
    bmalloc::api::isoDeallocate(v10, v11);
  }
  if (!v8)
    WTF::fastFree((WTF *)v3, a2);
}

WebCore::ServiceWorker *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11MessagePortENSC_ISH_EENSE_ISH_EEEENS9_INSA_13ServiceWorkerENSC_ISL_EENSE_ISL_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSQ_1EJSG_SK_SO_EEEEEEDcSS_DpT0_(uint64_t a1, WebCore::ServiceWorker **a2)
{
  WebCore::ServiceWorker *result;
  bmalloc::api *v3;
  void *v4;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*((_DWORD *)result + 6) == 1)
    {
      WebCore::ServiceWorker::~ServiceWorker(result, a2);
      return (WebCore::ServiceWorker *)bmalloc::api::isoDeallocate(v3, v4);
    }
    else
    {
      --*((_DWORD *)result + 6);
    }
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11MessagePortENSC_ISH_EENSE_ISH_EEEENS9_INSA_13ServiceWorkerENSC_ISL_EENSE_ISL_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISP_LNS0_6_TraitE1EEEEEvRSQ_OT_EUlRSW_OT0_E_JRNS0_6__baseILST_1EJSG_SK_SO_EEEOS14_EEEDcSW_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11MessagePortENSC_ISH_EENSE_ISH_EEEENS9_INSA_13ServiceWorkerENSC_ISL_EENSE_ISL_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISP_LNS0_6_TraitE1EEEEEvRSQ_OT_EUlRSW_OT0_E_JRNS0_6__baseILST_1EJSG_SK_SO_EEEOS14_EEEDcSW_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11MessagePortENSC_ISH_EENSE_ISH_EEEENS9_INSA_13ServiceWorkerENSC_ISL_EENSE_ISL_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISP_LNS0_6_TraitE1EEEEEvRSQ_OT_EUlRSW_OT0_E_JRNS0_6__baseILST_1EJSG_SK_SO_EEEOS14_EEEDcSW_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11MessagePortENSC_ISH_EENSE_ISH_EEEENS9_INSA_13ServiceWorkerENSC_ISL_EENSE_ISL_EEEEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISP_LNS0_6_TraitE1EEEEEvOT_EUlRSV_OT0_E_JRNS0_6__baseILST_1EJSG_SK_SO_EEEOS13_EEEDcSV_DpT0_(uint64_t result, WTF::StringImpl *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  WTF *v7;
  uint64_t v8;
  uint64_t *v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int v12;
  char v13;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5)
  {
    result = ((uint64_t (*)(char *, uint64_t))off_1E32BEBD8[v5])(&v13, v4);
LABEL_7:
    v8 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v8;
    *(_DWORD *)(v4 + 8) = 0;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  v7 = *(WTF **)a2;
  *(_QWORD *)a2 = v6;
  if (v7)
  {
    if (*(_DWORD *)v7 == 1)
    {
      v9 = (uint64_t *)*((_QWORD *)v7 + 2);
      *((_QWORD *)v7 + 2) = 0;
      if (v9)
      {
        if (*v9)
          WTF::HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>>::deallocateTable(*v9, a2);
        WTF::fastFree((WTF *)v9, a2);
      }
      v10 = (unsigned int *)*((_QWORD *)v7 + 1);
      *((_QWORD *)v7 + 1) = 0;
      if (v10)
      {
        do
        {
          v11 = __ldaxr(v10);
          v12 = v11 - 1;
        }
        while (__stlxr(v12, v10));
        if (!v12)
        {
          atomic_store(1u, v10);
          WTF::fastFree((WTF *)v10, a2);
        }
      }
      return WTF::fastFree(v7, a2);
    }
    else
    {
      --*(_DWORD *)v7;
    }
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11MessagePortENSC_ISH_EENSE_ISH_EEEENS9_INSA_13ServiceWorkerENSC_ISL_EENSE_ISL_EEEEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISP_LNS0_6_TraitE1EEEEEvOT_EUlRSV_OT0_E_JRNS0_6__baseILST_1EJSG_SK_SO_EEEOS13_EEEDcSV_DpT0_(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  return std::__variant_detail::__assignment<std::__variant_detail::__traits<WTF::RefPtr<WebCore::WindowProxy,WTF::RawPtrTraits<WebCore::WindowProxy>,WTF::DefaultRefDerefTraits<WebCore::WindowProxy>>,WTF::RefPtr<WebCore::MessagePort,WTF::RawPtrTraits<WebCore::MessagePort>,WTF::DefaultRefDerefTraits<WebCore::MessagePort>>,WTF::RefPtr<WebCore::ServiceWorker,WTF::RawPtrTraits<WebCore::ServiceWorker>,WTF::DefaultRefDerefTraits<WebCore::ServiceWorker>>>>::__assign_alt[abi:sn180100]<1ul,WTF::RefPtr<WebCore::MessagePort,WTF::RawPtrTraits<WebCore::MessagePort>,WTF::DefaultRefDerefTraits<WebCore::MessagePort>>,WTF::RefPtr<WebCore::MessagePort,WTF::RawPtrTraits<WebCore::MessagePort>,WTF::DefaultRefDerefTraits<WebCore::MessagePort>>>(*a1, a2, a3);
}

WebCore::ServiceWorker *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11MessagePortENSC_ISH_EENSE_ISH_EEEENS9_INSA_13ServiceWorkerENSC_ISL_EENSE_ISL_EEEEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISP_LNS0_6_TraitE1EEEEEvOT_EUlRSV_OT0_E_JRNS0_6__baseILST_1EJSG_SK_SO_EEEOS13_EEEDcSV_DpT0_(WebCore::ServiceWorker *result, WebCore::ServiceWorker **a2, WebCore::ServiceWorker **a3)
{
  uint64_t v4;
  uint64_t v5;
  WebCore::ServiceWorker *v6;
  WebCore::ServiceWorker *v7;
  bmalloc::api *v8;
  void *v9;
  char v10;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5 != 2)
  {
    result = (WebCore::ServiceWorker *)((uint64_t (*)(char *, uint64_t))off_1E32BEBD8[v5])(&v10, v4);
LABEL_7:
    v7 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v7;
    *(_DWORD *)(v4 + 8) = 2;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  result = *a2;
  *a2 = v6;
  if (result)
  {
    if (*((_DWORD *)result + 6) == 1)
    {
      WebCore::ServiceWorker::~ServiceWorker(result, a2);
      return (WebCore::ServiceWorker *)bmalloc::api::isoDeallocate(v8, v9);
    }
    else
    {
      --*((_DWORD *)result + 6);
    }
  }
  return result;
}

uint64_t std::__variant_detail::__assignment<std::__variant_detail::__traits<WTF::RefPtr<WebCore::WindowProxy,WTF::RawPtrTraits<WebCore::WindowProxy>,WTF::DefaultRefDerefTraits<WebCore::WindowProxy>>,WTF::RefPtr<WebCore::MessagePort,WTF::RawPtrTraits<WebCore::MessagePort>,WTF::DefaultRefDerefTraits<WebCore::MessagePort>>,WTF::RefPtr<WebCore::ServiceWorker,WTF::RawPtrTraits<WebCore::ServiceWorker>,WTF::DefaultRefDerefTraits<WebCore::ServiceWorker>>>>::__assign_alt[abi:sn180100]<1ul,WTF::RefPtr<WebCore::MessagePort,WTF::RawPtrTraits<WebCore::MessagePort>,WTF::DefaultRefDerefTraits<WebCore::MessagePort>>,WTF::RefPtr<WebCore::MessagePort,WTF::RawPtrTraits<WebCore::MessagePort>,WTF::DefaultRefDerefTraits<WebCore::MessagePort>>>(uint64_t result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  WebCore::MessagePort *v13;
  BOOL v14;
  int v15;
  bmalloc::api *v16;
  void *v17;
  uint64_t v18;
  char v19;

  v4 = result;
  v5 = *(unsigned int *)(result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5 != 1)
  {
    result = ((uint64_t (*)(char *, uint64_t))off_1E32BEBD8[v5])(&v19, result);
LABEL_7:
    v10 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v10;
    *(_DWORD *)(v4 + 8) = 1;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  v7 = *a2;
  *a2 = v6;
  if (!v7)
    return result;
  v8 = *(_QWORD *)(v7 + 48);
  if (__ldaxr((unsigned __int8 *)v8))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v8))
  {
    goto LABEL_10;
  }
  result = MEMORY[0x19AEA534C](v8);
LABEL_10:
  v11 = *(_QWORD *)(v8 + 8);
  v12 = v11 - 1;
  *(_QWORD *)(v8 + 8) = v11 - 1;
  if (v11 == 1)
  {
    v18 = *(_QWORD *)(v8 + 16);
    v13 = *(WebCore::MessagePort **)(v8 + 24);
    *(_QWORD *)(v8 + 24) = 0;
    v14 = v18 != 0;
  }
  else
  {
    v13 = 0;
    v14 = 1;
  }
  v15 = __ldxr((unsigned __int8 *)v8);
  if (v15 != 1)
  {
    __clrex();
LABEL_17:
    result = WTF::Lock::unlockSlow((WTF::Lock *)v8);
    if (v12)
      return result;
    goto LABEL_18;
  }
  if (__stlxr(0, (unsigned __int8 *)v8))
    goto LABEL_17;
  if (v12)
    return result;
LABEL_18:
  if (v13)
  {
    WebCore::MessagePort::~MessagePort(v13, a2);
    result = bmalloc::api::isoDeallocate(v16, v17);
  }
  if (!v14)
    return WTF::fastFree((WTF *)v8, a2);
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_8optionalINS_7variantIJN3WTF6RefPtrIN7WebCore11WindowProxyENSA_12RawPtrTraitsISD_EENSA_21DefaultRefDerefTraitsISD_EEEENSB_INSC_11MessagePortENSE_ISJ_EENSG_ISJ_EEEENSB_INSC_13ServiceWorkerENSE_ISN_EENSG_ISN_EEEEEEEEENSC_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSV_1EJSS_ST_EEEEEEDcSX_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  if (*(_BYTE *)(a2 + 16))
  {
    v3 = *(unsigned int *)(a2 + 8);
    if ((_DWORD)v3 != -1)
      result = ((uint64_t (*)(char *, uint64_t))off_1E32BEBD8[v3])(&v5, a2);
    *(_DWORD *)(a2 + 8) = -1;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore12MessageEvent4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF *v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  uint64_t *v8;
  uint64_t v9;
  char v10;

  v3 = *(unsigned int *)(a2 + 68);
  if ((_DWORD)v3)
  {
    v8 = *(uint64_t **)(a2 + 56);
    v9 = 8 * v3;
    do
    {
      v8 = WTF::Ref<WebCore::MessagePort,WTF::RawPtrTraits<WebCore::MessagePort>,WTF::DefaultRefDerefTraits<WebCore::MessagePort>>::~Ref(v8, (void *)a2)+ 1;
      v9 -= 8;
    }
    while (v9);
  }
  v4 = *(WTF **)(a2 + 56);
  if (v4)
  {
    *(_QWORD *)(a2 + 56) = 0;
    *(_DWORD *)(a2 + 64) = 0;
    WTF::fastFree(v4, (void *)a2);
  }
  if (*(_BYTE *)(a2 + 48))
  {
    v5 = *(unsigned int *)(a2 + 40);
    if ((_DWORD)v5 != -1)
      ((void (*)(char *, uint64_t))off_1E32BEBD8[v5])(&v10, a2 + 32);
    *(_DWORD *)(a2 + 40) = -1;
  }
  v6 = *(WTF::StringImpl **)(a2 + 24);
  *(_QWORD *)(a2 + 24) = 0;
  if (v6)
  {
    if (*(_DWORD *)v6 == 2)
      WTF::StringImpl::destroy(v6, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)v6 -= 2;
  }
  result = *(WTF::StringImpl **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_BYTE *WebCore::jsMessageEventPrototypeFunction_initMessageEvent(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WTF *v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  int v18;
  uint64_t v19;
  int *v20;
  int v21;
  _BOOL4 v22;
  unint64_t v23;
  JSC::VM *v24;
  int v25;
  uint64_t v26;
  int *v27;
  int v28;
  _BOOL4 v29;
  unint64_t v30;
  uint64_t v31;
  _DWORD **v32;
  WTF::StringImpl *v33;
  int v34;
  uint64_t v35;
  _DWORD *v36;
  JSC::VM *v37;
  _DWORD *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  int v46;
  uint64_t v47;
  void *v48;
  WTF *v49;
  WTF::StringImpl *v50;
  WTF::StringImpl *v51;
  WTF::StringImpl *v52;
  uint64_t v53;
  uint64_t v54;
  JSValue v57;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v59;
  uint64_t *v60;
  uint64_t v61;
  BOOL v62;
  BOOL v63;
  int v64;
  JSC::VM *v65;
  WTF *v66;
  uint64_t v67;
  int v68;
  _DWORD *v69;
  int v70;
  WTF::StringImpl *v71;
  int v72;
  WTF::StringImpl *v73;
  int v74;
  WTF *v75;
  uint64_t v76;
  WTF::StringImpl *v77;
  WTF::StringImpl *v78;
  WTF::StringImpl *v79;
  uint64_t v80;
  char v81[8];
  int v82;
  char v83;
  int v84;
  _DWORD *v85;
  int v86;
  char v87;
  int v88;
  uint64_t v89;

  v89 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v65 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v65, "MessageEvent", "initMessageEvent");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSMessageEvent::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSMessageEvent::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v65, "MessageEvent", "initMessageEvent");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v57.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v57);
  }
  v12 = *(WTF **)(v5 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v73);
  v13 = v74;
  if (!v74)
  {
    v14 = *((int *)a2 + 8);
    if ((unint64_t)(v14 - 3) >= 0xFFFFFFFFFFFFFFFELL)
    {
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      v15 = 10;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v62 = (_DWORD)v15 == 0;
        goto LABEL_150;
      }
      *(_QWORD *)&v17 = v15 - 0x2000000000000;
      if (v15 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
      {
        v22 = v17 > 0.0 || v17 < 0.0;
        goto LABEL_26;
      }
      if ((v15 & 0xFFFE000000000002) == 0)
      {
        v18 = *(unsigned __int8 *)(v15 + 5);
        if (v18 == 3)
        {
          v21 = *(_DWORD *)(v15 + 8);
LABEL_149:
          v62 = v21 == 0;
LABEL_150:
          v22 = !v62;
          goto LABEL_26;
        }
        if (v18 == 2)
        {
          v19 = *(_QWORD *)(v15 + 8);
          if ((v19 & 1) != 0)
            v20 = (int *)(v15 + 16);
          else
            v20 = (int *)(v19 + 4);
          v21 = *v20;
          goto LABEL_149;
        }
        v22 = (*(_BYTE *)(16 * (*(_DWORD *)v15 & 0xFFFFFFFE) + 0xA) & 1) == 0
           || *(_QWORD *)(16 * (*(_DWORD *)v15 & 0xFFFFFFFE) + 0x28) != (_QWORD)this;
LABEL_26:
        if (*((_DWORD *)v16 + 20))
        {
          if ((JSC::VM::hasExceptionsAfterHandlingTraps(v16) & 1) != 0)
          {
            v53 = 0;
            goto LABEL_108;
          }
          v14 = *((int *)a2 + 8);
        }
        if ((unint64_t)(v14 - 4) >= 0xFFFFFFFFFFFFFFFDLL)
        {
          v24 = (JSC::VM *)*((_QWORD *)this + 7);
          v23 = 10;
        }
        else
        {
          v23 = *((_QWORD *)a2 + 8);
          v24 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v23 >= 0xFFFE000000000000)
          {
            v63 = (_DWORD)v23 == 0;
            goto LABEL_161;
          }
          if (v23 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
          {
            v29 = COERCE_DOUBLE(v23 - 0x2000000000000) > 0.0 || COERCE_DOUBLE(v23 - 0x2000000000000) < 0.0;
            goto LABEL_39;
          }
          if ((v23 & 0xFFFE000000000002) == 0)
          {
            v25 = *(unsigned __int8 *)(v23 + 5);
            if (v25 == 3)
            {
              v28 = *(_DWORD *)(v23 + 8);
LABEL_156:
              v63 = v28 == 0;
              goto LABEL_161;
            }
            if (v25 == 2)
            {
              v26 = *(_QWORD *)(v23 + 8);
              if ((v26 & 1) != 0)
                v27 = (int *)(v23 + 16);
              else
                v27 = (int *)(v26 + 4);
              v28 = *v27;
              goto LABEL_156;
            }
            if ((*(_BYTE *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0xA) & 1) != 0)
            {
              v63 = *(_QWORD *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_161:
              v29 = !v63;
              goto LABEL_39;
            }
            v29 = 1;
LABEL_39:
            if (!*((_DWORD *)v24 + 20))
            {
LABEL_40:
              v64 = v22;
              v30 = v14 - 1;
              if (v30 < 4 || (v31 = *((_QWORD *)a2 + 9), v31 == 10))
                v31 = 2;
              v32 = (_DWORD **)MEMORY[0x1E0CBF738];
              if (v30 <= 4 || *((_QWORD *)a2 + 10) == 10)
              {
                v33 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
                if (*MEMORY[0x1E0CBF738])
                  *(_DWORD *)v33 += 2;
                v71 = v33;
                v72 = 0;
              }
              else
              {
                WebCore::valueToUSVString(this, *((_QWORD *)a2 + 10), (uint64_t)&v71);
                v34 = v72;
                if (v72)
                {
                  v53 = 0;
LABEL_106:
                  if (v34 != -1)
                    ((void (*)(uint64_t *, WTF::StringImpl **))off_1E32BEA70[v34])(&v80, &v71);
                  goto LABEL_108;
                }
              }
              if ((unint64_t)(*((int *)a2 + 8) - 7) >= 0xFFFFFFFFFFFFFFFALL
                || (v35 = *((_QWORD *)a2 + 11), v35 == 10))
              {
                v36 = *v32;
                if (v36)
                  *v36 += 2;
                v69 = v36;
                v70 = 0;
LABEL_63:
                v39 = *((int *)a2 + 8);
                if ((unint64_t)(v39 - 8) >= 0xFFFFFFFFFFFFFFF9
                  || (v40 = *((_QWORD *)a2 + 12), v40 == 10)
                  || (v40 & 0xFFFFFFFFFFFFFFF7) == 2)
                {
                  v81[0] = 0;
                  v83 = 0;
                  v84 = 0;
                }
                else
                {
                  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::WindowProxy>,WebCore::IDLInterface<WebCore::MessagePort>,WebCore::IDLInterface<WebCore::ServiceWorker>>>::convert((uint64_t)&v85, (uint64_t)this, *((_QWORD *)a2 + 12));
                  WebCore::Detail::ConversionResultStorage<std::optional<std::variant<WTF::RefPtr<WebCore::WindowProxy,WTF::RawPtrTraits<WebCore::WindowProxy>,WTF::DefaultRefDerefTraits<WebCore::WindowProxy>>,WTF::RefPtr<WebCore::MessagePort,WTF::RawPtrTraits<WebCore::MessagePort>,WTF::DefaultRefDerefTraits<WebCore::MessagePort>>,WTF::RefPtr<WebCore::ServiceWorker,WTF::RawPtrTraits<WebCore::ServiceWorker>,WTF::DefaultRefDerefTraits<WebCore::ServiceWorker>>>>>::ConversionResultStorage<std::variant<WTF::RefPtr<WebCore::WindowProxy,WTF::RawPtrTraits<WebCore::WindowProxy>,WTF::DefaultRefDerefTraits<WebCore::WindowProxy>>,WTF::RefPtr<WebCore::MessagePort,WTF::RawPtrTraits<WebCore::MessagePort>,WTF::DefaultRefDerefTraits<WebCore::MessagePort>>,WTF::RefPtr<WebCore::ServiceWorker,WTF::RawPtrTraits<WebCore::ServiceWorker>,WTF::DefaultRefDerefTraits<WebCore::ServiceWorker>>>>((uint64_t)&v80, (uint64_t)&v85);
                  if (v88 != -1)
                    ((void (*)(WTF **, int *))off_1E32BED68[v88])(&v66, &v86);
                  v41 = v84;
                  if (v84)
                  {
                    v53 = 0;
LABEL_102:
                    if (v41 != -1)
                      ((void (*)(_DWORD **, char *))off_1E32BEC20[v41])(&v85, v81);
                    v54 = 0;
LABEL_105:
                    ((void (*)(uint64_t *, _DWORD **))off_1E32BEA70[v54])(&v80, &v69);
                    v34 = v72;
                    goto LABEL_106;
                  }
                  v39 = *((int *)a2 + 8);
                }
                if ((unint64_t)(v39 - 9) >= 0xFFFFFFFFFFFFFFF8 || (v42 = *((_QWORD *)a2 + 13), v42 == 10))
                {
                  v66 = 0;
                  v67 = 0;
                  v68 = 0;
                }
                else
                {
                  WebCore::Detail::SequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLInterface<WebCore::MessagePort>>>::convert(this, v42, (uint64_t)&v66);
                  v43 = v68;
                  if (v68)
                  {
                    v53 = 0;
LABEL_99:
                    if (v43 != -1)
                      ((void (*)(_DWORD **, WTF **))off_1E32BEC30[v43])(&v85, &v66);
                    v41 = v84;
                    goto LABEL_102;
                  }
                }
                if (v74)
                  goto LABEL_81;
                v44 = v73;
                v73 = 0;
                v79 = v44;
                if (v72)
                  goto LABEL_81;
                v45 = v71;
                v71 = 0;
                v77 = (WTF::StringImpl *)v36;
                v78 = v45;
                v69 = 0;
                if (v84)
                  goto LABEL_81;
                LOBYTE(v85) = 0;
                v87 = 0;
                if (v83)
                {
                  v86 = -1;
                  v46 = v82;
                  if (v82 == -1)
                  {
LABEL_82:
                    v87 = 1;
                    goto LABEL_83;
                  }
                  ((void (*)(WTF **, _DWORD **, char *))off_1E32BEBF0[v82])(&v75, &v85, v81);
                  v86 = v46;
                  v87 = 1;
                  if (v68)
                  {
LABEL_81:
                    std::__throw_bad_variant_access[abi:sn180100]();
                    goto LABEL_82;
                  }
                }
LABEL_83:
                v75 = v66;
                v47 = v67;
                v66 = 0;
                v67 = 0;
                v76 = v47;
                WebCore::MessageEvent::initMessageEvent(v12, (const WTF::AtomString *)&v79, v64, v29, v31, (_DWORD **)&v78, (_DWORD **)&v77, (uint64_t)&v85, (uint64_t *)&v75);
                if (HIDWORD(v76))
                {
                  v60 = (uint64_t *)v75;
                  v61 = 8 * HIDWORD(v76);
                  do
                  {
                    v60 = WTF::Ref<WebCore::MessagePort,WTF::RawPtrTraits<WebCore::MessagePort>,WTF::DefaultRefDerefTraits<WebCore::MessagePort>>::~Ref(v60, v48)+ 1;
                    v61 -= 8;
                  }
                  while (v61);
                }
                v49 = v75;
                if (v75)
                {
                  v75 = 0;
                  LODWORD(v76) = 0;
                  WTF::fastFree(v49, v48);
                }
                if (v87 && v86 != -1)
                  ((void (*)(WTF **, _DWORD **))off_1E32BEBD8[v86])(&v75, &v85);
                v50 = v77;
                v77 = 0;
                if (v50)
                {
                  if (*(_DWORD *)v50 == 2)
                    WTF::StringImpl::destroy(v50, (WTF::StringImpl *)v48);
                  else
                    *(_DWORD *)v50 -= 2;
                }
                v51 = v78;
                v78 = 0;
                if (v51)
                {
                  if (*(_DWORD *)v51 == 2)
                    WTF::StringImpl::destroy(v51, (WTF::StringImpl *)v48);
                  else
                    *(_DWORD *)v51 -= 2;
                }
                v52 = v79;
                v79 = 0;
                if (v52)
                {
                  if (*(_DWORD *)v52 == 2)
                    WTF::StringImpl::destroy(v52, (WTF::StringImpl *)v48);
                  else
                    *(_DWORD *)v52 -= 2;
                }
                v43 = v68;
                v53 = 10;
                goto LABEL_99;
              }
              v80 = *((_QWORD *)a2 + 11);
              v37 = (JSC::VM *)*((_QWORD *)this + 7);
              if ((v35 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v35 + 5) != 2)
              {
                JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v80, this);
                goto LABEL_60;
              }
              v38 = *(_DWORD **)(v35 + 8);
              if ((v38 & 1) != 0)
              {
                v38 = *(_DWORD **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v35, this);
                if (!v38)
                  goto LABEL_59;
              }
              else if (!v38)
              {
LABEL_59:
                v85 = v38;
LABEL_60:
                if (*((_DWORD *)v37 + 20))
                {
                  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v37);
                  v36 = v85;
                  if (hasExceptionsAfterHandlingTraps)
                  {
                    v70 = 1;
                    v85 = 0;
                    if (v36)
                    {
                      if (*v36 == 2)
                        WTF::StringImpl::destroy((WTF::StringImpl *)v36, v59);
                      else
                        *v36 -= 2;
                    }
                    v53 = 0;
                    v54 = 1;
                    goto LABEL_105;
                  }
                }
                else
                {
                  v36 = v85;
                }
                v69 = v36;
                v70 = 0;
                goto LABEL_63;
              }
              *v38 += 2;
              goto LABEL_59;
            }
            if ((JSC::VM::hasExceptionsAfterHandlingTraps(v24) & 1) == 0)
            {
              v14 = *((int *)a2 + 8);
              goto LABEL_40;
            }
            v53 = 0;
LABEL_108:
            v13 = v74;
            goto LABEL_109;
          }
        }
        v29 = v23 == 7;
        goto LABEL_39;
      }
    }
    v22 = v15 == 7;
    goto LABEL_26;
  }
  v53 = 0;
LABEL_109:
  if (v13 != -1)
    ((void (*)(uint64_t *, WTF::StringImpl **))off_1E32BEAA0[v13])(&v80, &v73);
  return (_BYTE *)v53;
}

uint64_t WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::WindowProxy>,WebCore::IDLInterface<WebCore::MessagePort>,WebCore::IDLInterface<WebCore::ServiceWorker>>>::convert(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  _BOOL4 v16;
  char **v17;
  BOOL v18;
  uint64_t v20;
  int v21;
  int v22;
  _DWORD *v23;
  int v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char v29;

  v26 = *(_QWORD *)(a2 + 56);
  LOBYTE(v23) = 0;
  v25 = 0;
  v5 = a3 & 0xFFFE000000000002;
  if ((a3 & 0xFFFE000000000002) == 0
    && *(unsigned __int8 *)(a3 + 5) >= 0x17u
    && &WebCore::JSWindowProxy::s_info == (char **)(16 * *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C)))
  {
    v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) + 3408);
    if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 104))(v10))
    {
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 104))(v10);
      v11 = *(_DWORD **)(result + 112);
      if (v11)
      {
        ++*v11;
        v23 = v11;
        v24 = 0;
        goto LABEL_36;
      }
    }
  }
  result = JSC::jsDynamicCast<WebCore::JSMessagePort *>(a3);
  if (!result)
    goto LABEL_22;
  v7 = *(_QWORD *)(result + 24);
  v8 = *(_QWORD *)(v7 + 24);
  if (__ldaxr((unsigned __int8 *)v8))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v8))
  {
    goto LABEL_12;
  }
  MEMORY[0x19AEA534C](v8);
LABEL_12:
  v12 = v7 - 24;
  ++*(_QWORD *)(v8 + 8);
  v13 = __ldxr((unsigned __int8 *)v8);
  if (v13 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v8))
      goto LABEL_17;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v8);
LABEL_17:
  v27 = v12;
  v14 = 1;
  v28 = 1;
  if (v25)
  {
    result = std::__variant_detail::__assignment<std::__variant_detail::__traits<WTF::RefPtr<WebCore::WindowProxy,WTF::RawPtrTraits<WebCore::WindowProxy>,WTF::DefaultRefDerefTraits<WebCore::WindowProxy>>,WTF::RefPtr<WebCore::MessagePort,WTF::RawPtrTraits<WebCore::MessagePort>,WTF::DefaultRefDerefTraits<WebCore::MessagePort>>,WTF::RefPtr<WebCore::ServiceWorker,WTF::RawPtrTraits<WebCore::ServiceWorker>,WTF::DefaultRefDerefTraits<WebCore::ServiceWorker>>>>::__assign_alt[abi:sn180100]<1ul,WTF::RefPtr<WebCore::MessagePort,WTF::RawPtrTraits<WebCore::MessagePort>,WTF::DefaultRefDerefTraits<WebCore::MessagePort>>,WTF::RefPtr<WebCore::MessagePort,WTF::RawPtrTraits<WebCore::MessagePort>,WTF::DefaultRefDerefTraits<WebCore::MessagePort>>>((uint64_t)&v23, (uint64_t *)&v23, &v27);
    v14 = v28;
    if (v28 == -1)
      goto LABEL_22;
  }
  else
  {
    v27 = 0;
    v23 = (_DWORD *)v12;
    v24 = 1;
    v25 = 1;
  }
  result = ((uint64_t (*)(char *, uint64_t *))off_1E32BEBD8[v14])(&v29, &v27);
LABEL_22:
  if (v25)
    goto LABEL_37;
  if (v5)
    goto LABEL_42;
  v15 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v16 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v17 = (char **)(16 * v15);
  if ((_DWORD)v15)
    v18 = v17 == &WebCore::JSServiceWorker::s_info;
  else
    v18 = 1;
  if (!v18)
  {
    do
    {
      v17 = (char **)v17[2];
      v16 = v17 != 0;
    }
    while (v17 != &WebCore::JSServiceWorker::s_info && v17 != 0);
  }
  if (!v16 || (v20 = *(_QWORD *)(a3 + 24)) == 0)
  {
LABEL_42:
    result = JSC::throwTypeError();
    *(_DWORD *)(a1 + 24) = 1;
    return result;
  }
  ++*(_DWORD *)(v20 + 24);
  v23 = (_DWORD *)v20;
  v24 = 2;
LABEL_36:
  v25 = 1;
LABEL_37:
  *(_BYTE *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = -1;
  v21 = v24;
  if (v24 == -1)
  {
    *(_DWORD *)(a1 + 24) = 0;
  }
  else
  {
    result = ((uint64_t (*)(uint64_t *))off_1E32BEBF0[v24])(&v27);
    *(_DWORD *)(a1 + 16) = v21;
    v22 = v25;
    *(_DWORD *)(a1 + 24) = 0;
    if (v22)
    {
      if (v24 != -1)
        return ((uint64_t (*)(uint64_t *, _DWORD **))off_1E32BEBD8[v24])(&v27, &v23);
    }
  }
  return result;
}

uint64_t WebCore::Detail::ConversionResultStorage<std::optional<std::variant<WTF::RefPtr<WebCore::WindowProxy,WTF::RawPtrTraits<WebCore::WindowProxy>,WTF::DefaultRefDerefTraits<WebCore::WindowProxy>>,WTF::RefPtr<WebCore::MessagePort,WTF::RawPtrTraits<WebCore::MessagePort>,WTF::DefaultRefDerefTraits<WebCore::MessagePort>>,WTF::RefPtr<WebCore::ServiceWorker,WTF::RawPtrTraits<WebCore::ServiceWorker>,WTF::DefaultRefDerefTraits<WebCore::ServiceWorker>>>>>::ConversionResultStorage<std::variant<WTF::RefPtr<WebCore::WindowProxy,WTF::RawPtrTraits<WebCore::WindowProxy>,WTF::DefaultRefDerefTraits<WebCore::WindowProxy>>,WTF::RefPtr<WebCore::MessagePort,WTF::RawPtrTraits<WebCore::MessagePort>,WTF::DefaultRefDerefTraits<WebCore::MessagePort>>,WTF::RefPtr<WebCore::ServiceWorker,WTF::RawPtrTraits<WebCore::ServiceWorker>,WTF::DefaultRefDerefTraits<WebCore::ServiceWorker>>>>(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)();
  int v5;
  _BYTE v7[8];
  int v8;
  _BYTE v9[8];
  int v10;
  unsigned __int8 v11;
  char v12;

  if (*(_DWORD *)(a2 + 24))
  {
    *(_DWORD *)(a1 + 32) = 1;
    return a1;
  }
  v7[0] = 0;
  v8 = -1;
  v3 = *(unsigned int *)(a2 + 16);
  if ((_DWORD)v3 == -1)
  {
    v9[0] = 0;
    v11 = 1;
    *(_BYTE *)(a1 + 8) = 0;
    *(_DWORD *)(a1 + 16) = -1;
    *(_BYTE *)(a1 + 24) = 1;
    *(_DWORD *)(a1 + 32) = 0;
  }
  else
  {
    v4 = off_1E32BEBF0[v3];
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v4)(v9, v7, a2 + 8);
    v8 = v3;
    v9[0] = 0;
    v10 = -1;
    ((void (*)(char *, _BYTE *, _BYTE *))v4)(&v12, v9, v7);
    v10 = v3;
    v11 = 1;
    *(_BYTE *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 16) = -1;
    ((void (*)(char *, uint64_t, _BYTE *))v4)(&v12, a1 + 8, v9);
    *(_DWORD *)(a1 + 16) = v3;
    v5 = v11;
    *(_BYTE *)(a1 + 24) = 1;
    *(_DWORD *)(a1 + 32) = 0;
    if (!v5)
      goto LABEL_9;
    if (v10 != -1)
      ((void (*)(char *, _BYTE *))off_1E32BEBD8[v10])(&v12, v9);
  }
  v10 = -1;
LABEL_9:
  if (v8 != -1)
    ((void (*)(char *, _BYTE *))off_1E32BEBD8[v8])(&v12, v7);
  return a1;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6RefPtrIN7WebCore11WindowProxyENS9_12RawPtrTraitsISC_EENS9_21DefaultRefDerefTraitsISC_EEEENSA_INSB_11MessagePortENSD_ISI_EENSF_ISI_EEEENSA_INSB_13ServiceWorkerENSD_ISM_EENSF_ISM_EEEEEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILST_1EJSQ_SR_EEEEEEDcSV_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E32BEBD8[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

_BYTE *WebCore::jsMessagePortPrototypeFunction_postMessage(WebCore *this, JSC::JSGlobalObject *a2, JSValue a3, WebCore::JSMessagePort *a4)
{
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  unint64_t v12;
  uint64_t v15;
  int hasIteratorMethod;
  JSValue v17;
  char hasExceptionsAfterHandlingTraps;
  int v19;
  _QWORD v20[2];

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v20[0] = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)v20, "MessagePort", "postMessage");
  v8 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v9 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v10 = (char **)(16 * v8);
  if ((_DWORD)v8)
    v11 = v10 == &WebCore::JSMessagePort::s_info;
  else
    v11 = 1;
  if (!v11)
  {
    do
    {
      v10 = (char **)v10[2];
      v9 = v10 != 0;
    }
    while (v10 != &WebCore::JSMessagePort::s_info && v10 != 0);
  }
  if (!v9)
    return WebCore::throwThisTypeError((int)this, (int)v20, "MessagePort", "postMessage");
  v20[1] = v5;
  v12 = *((int *)a2 + 8) - 1;
  if (v12 >= 2)
    v12 = 2;
  if (v12 == 1)
    return (_BYTE *)WebCore::jsMessagePortPrototypeFunction_postMessage2Body(this, a2, *(JSC::CallFrame **)(v6 + 24), a4);
  if (v12 != 2)
  {
    v17.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v5, this, v17);
  }
  v15 = *((_QWORD *)a2 + 7);
  if (v15 == 10 || (v15 & 0xFFFFFFFFFFFFFFF7) == 2)
    return (_BYTE *)WebCore::jsMessagePortPrototypeFunction_postMessage2Body(this, a2, *(JSC::CallFrame **)(v6 + 24), a4);
  hasIteratorMethod = JSC::hasIteratorMethod(this, *((JSC::JSGlobalObject **)a2 + 7), a3);
  if (*((_DWORD *)v5 + 20))
  {
    v19 = hasIteratorMethod;
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    if ((hasExceptionsAfterHandlingTraps & 1) == 0 && ((v19 ^ 1) & 1) == 0)
      return (_BYTE *)WebCore::jsMessagePortPrototypeFunction_postMessage1Body(this, *((JSC::JSGlobalObject **)a2 + 6), *((_QWORD *)a2 + 7), *(WebCore::JSMessagePort **)(v6 + 24));
    if ((hasExceptionsAfterHandlingTraps & 1) != 0)
      return 0;
  }
  else if (hasIteratorMethod)
  {
    return (_BYTE *)WebCore::jsMessagePortPrototypeFunction_postMessage1Body(this, *((JSC::JSGlobalObject **)a2 + 6), *((_QWORD *)a2 + 7), *(WebCore::JSMessagePort **)(v6 + 24));
  }
  if ((v15 & 0xFFFE000000000002) == 0 && *(unsigned __int8 *)(v15 + 5) >= 0x17u)
    return (_BYTE *)WebCore::jsMessagePortPrototypeFunction_postMessage2Body(this, a2, *(JSC::CallFrame **)(v6 + 24), a4);
  return (_BYTE *)JSC::throwTypeError();
}

uint64_t WebCore::jsMessagePortPrototypeFunction_start(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "MessagePort", "start");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSMessagePort::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSMessagePort::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "MessagePort", "start");
  WebCore::MessagePort::start((unsigned int *)(*(_QWORD *)(v3 + 24) - 24));
  return 10;
}

uint64_t WebCore::jsMessagePortPrototypeFunction_close(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "MessagePort", "close");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSMessagePort::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSMessagePort::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "MessagePort", "close");
  WebCore::MessagePort::close(*(_QWORD *)(v3 + 24) - 24);
  return 10;
}

uint64_t WebCore::jsMessagePortPrototypeFunction_postMessage1Body(WebCore *this, JSC::JSGlobalObject *a2, uint64_t a3, WebCore::JSMessagePort *a4)
{
  WTF *v8;
  unsigned int v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  int v12;
  WTF::StringImpl *v13;
  void *v14;
  WTF *v15;
  uint64_t v16;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  JSValue v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  WTF *v28;
  WTF::StringImpl *v29;
  int v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  char v33;
  WTF *v34;
  WTF::StringImpl *v35;

  v8 = (WTF *)*((_QWORD *)this + 7);
  v34 = v8;
  if ((a3 & 0xFFFE000000000002) != 0 || (v9 = *(unsigned __int8 *)(a3 + 5), v9 <= 0x16))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    JSC::throwTypeError();
    v11 = v31;
    v31 = 0;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v10);
      else
        *(_DWORD *)v11 -= 2;
    }
    v30 = 1;
  }
  else if (v9 == 36 && (JSC::JSArray::isIteratorProtocolFastAndNonObservable((JSC::JSArray *)a3) & 1) != 0)
  {
    WebCore::Detail::SequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLObject>>::convertArray((JSC::VM **)this, a3, (uint64_t)&v28);
  }
  else
  {
    WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLObject>>::convert(this, a3, (uint64_t)&v28);
  }
  v12 = v30;
  if (!v30)
  {
    v34 = v28;
    v13 = v29;
    v28 = 0;
    v29 = 0;
    v35 = v13;
    WebCore::MessagePort::postMessage((uint64_t)a4 - 24, this, (uint64_t)a2, (uint64_t)&v34, (WTF *)&v31);
    v15 = v34;
    if (HIDWORD(v35))
    {
      v22 = 8 * HIDWORD(v35);
      do
      {
        v23 = *(_QWORD *)v15;
        if (*(_QWORD *)v15)
        {
          v24 = (uint64_t *)(v23 - 16);
          v25 = *(_QWORD *)(((v23 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
          v26 = *(uint64_t **)(v23 - 8);
          if (v26)
          {
            v27 = *v24;
            *v26 = *v24;
            *(_QWORD *)(v27 + 8) = v26;
            *v24 = 0;
            v24[1] = 0;
          }
          *v24 = *(_QWORD *)(v25 + 40);
          *(_QWORD *)(v25 + 40) = v24;
          *(_QWORD *)v15 = 0;
        }
        v15 = (WTF *)((char *)v15 + 8);
        v22 -= 8;
      }
      while (v22);
      v15 = v34;
      if (!v34)
      {
LABEL_14:
        if (!v33)
        {
          v16 = 10;
LABEL_16:
          v12 = v30;
          goto LABEL_17;
        }
        v18 = (WTF::StringImpl *)v31;
        LOBYTE(v34) = (_BYTE)v31;
        v19 = v32;
        v32 = 0;
        v35 = v19;
        if (!*((_QWORD *)v8 + 2))
        {
          v20.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v31, (JSC::JSGlobalObject *)&v35);
          JSC::VM::throwException(v8, this, v20);
          v19 = v35;
        }
        v35 = 0;
        if (v19)
        {
          if (*(_DWORD *)v19 == 2)
            WTF::StringImpl::destroy(v19, v18);
          else
            *(_DWORD *)v19 -= 2;
        }
        if (v33)
        {
          v21 = v32;
          v32 = 0;
          if (v21)
          {
            if (*(_DWORD *)v21 != 2)
            {
              v16 = 0;
              *(_DWORD *)v21 -= 2;
              goto LABEL_16;
            }
            WTF::StringImpl::destroy(v21, v18);
          }
        }
        v16 = 0;
        goto LABEL_16;
      }
    }
    else if (!v34)
    {
      goto LABEL_14;
    }
    v34 = 0;
    LODWORD(v35) = 0;
    WTF::fastFree(v15, v14);
    goto LABEL_14;
  }
  v16 = 0;
LABEL_17:
  if (v12 != -1)
    ((void (*)(WTF::StringImpl **, WTF **))off_1E32BEE78[v12])(&v31, &v28);
  return v16;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore14MouseEventInitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, _QWORD *a2)
{
  unsigned int *result;
  WTF *v4;
  uint64_t *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  result = (unsigned int *)a2[9];
  a2[9] = 0;
  if (result)
  {
    if ((*((_BYTE *)result + 22) & 2) != 0)
    {
      if (result[6] == 2)
      {
        if ((*((_WORD *)result + 15) & 0x400) == 0)
          result = WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
      }
      else
      {
        result[6] -= 2;
      }
    }
    else
    {
      result = (unsigned int *)(*(uint64_t (**)(unsigned int *))(*(_QWORD *)result + 96))(result);
    }
  }
  v4 = (WTF *)a2[1];
  a2[1] = 0;
  if (v4)
  {
    if (*(_DWORD *)v4 == 1)
    {
      v5 = (uint64_t *)*((_QWORD *)v4 + 2);
      *((_QWORD *)v4 + 2) = 0;
      if (v5)
      {
        if (*v5)
          WTF::HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>>::deallocateTable(*v5, (WTF::StringImpl *)a2);
        WTF::fastFree((WTF *)v5, a2);
      }
      v6 = (unsigned int *)*((_QWORD *)v4 + 1);
      *((_QWORD *)v4 + 1) = 0;
      if (v6)
      {
        do
        {
          v7 = __ldaxr(v6);
          v8 = v7 - 1;
        }
        while (__stlxr(v8, v6));
        if (!v8)
        {
          atomic_store(1u, v6);
          WTF::fastFree((WTF *)v6, a2);
        }
      }
      return (unsigned int *)WTF::fastFree(v4, a2);
    }
    else
    {
      --*(_DWORD *)v4;
    }
  }
  return result;
}

_BYTE *WebCore::jsMouseEventPrototypeFunction_getModifierState(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  JSValue v21;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v23;
  JSC::VM *v24;
  uint64_t v25;
  int v26;
  WTF::StringImpl *v27;
  uint64_t v28;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v24 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "MouseEvent", "getModifierState");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSMouseEvent::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSMouseEvent::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "MouseEvent", "getModifierState");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v21);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v28 = v12;
  if ((v12 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v12 + 5) == 2)
  {
    v13 = *(WTF::StringImpl **)(v12 + 8);
    if ((v13 & 1) != 0)
    {
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
      if (!v13)
        goto LABEL_18;
    }
    else if (!v13)
    {
LABEL_18:
      v27 = v13;
      goto LABEL_19;
    }
    *(_DWORD *)v13 += 2;
    goto LABEL_18;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v28, this);
LABEL_19:
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v14 = v27;
    if (hasExceptionsAfterHandlingTraps)
    {
      v26 = 1;
      v27 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v23);
        else
          *(_DWORD *)v14 -= 2;
      }
      v17 = 0;
      v18 = 1;
      goto LABEL_36;
    }
  }
  else
  {
    v14 = v27;
  }
  v26 = 0;
  v25 = 0;
  if ((MEMORY[0x19AEA53F4](v14, "Control", 7) & 1) != 0)
  {
    v16 = 2;
    goto LABEL_30;
  }
  if ((MEMORY[0x19AEA53F4](v14, "Shift", 5) & 1) != 0)
  {
    v16 = 8;
    goto LABEL_30;
  }
  if ((MEMORY[0x19AEA53F4](v14, "Alt", 3) & 1) != 0)
  {
    v16 = 1;
    goto LABEL_30;
  }
  v16 = 4;
  if ((MEMORY[0x19AEA53F4](v14, "Meta", 4) & 1) != 0)
  {
LABEL_30:
    if ((*(_BYTE *)(v11 + 84) & v16) != 0)
      v17 = 7;
    else
      v17 = 6;
    if (!v14)
      goto LABEL_41;
    goto LABEL_34;
  }
  if (MEMORY[0x19AEA53F4](v14, "CapsLock", 8))
  {
    v16 = 16;
    goto LABEL_30;
  }
  v17 = 6;
  if (!v14)
    goto LABEL_41;
LABEL_34:
  if (*(_DWORD *)v14 == 2)
  {
    WTF::StringImpl::destroy(v14, v15);
LABEL_41:
    v18 = 0;
    goto LABEL_36;
  }
  v18 = 0;
  *(_DWORD *)v14 -= 2;
LABEL_36:
  ((void (*)(uint64_t *, uint64_t *))off_1E32BEA70[v18])(&v28, &v25);
  return (_BYTE *)v17;
}

_BYTE *WebCore::jsMouseEventPrototypeFunction_initMouseEvent(JSC::VM **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WebCore *v3;
  unint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  unint64_t v13;
  uint64_t v14;
  double v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  int v21;
  uint64_t v22;
  int *v23;
  int v24;
  _BOOL4 i;
  unint64_t v26;
  JSC::VM *v27;
  int v28;
  uint64_t v29;
  int *v30;
  int v31;
  _BOOL4 v32;
  uint64_t v33;
  unint64_t v34;
  JSC::VM *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  unint64_t v42;
  JSC::VM *v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  unint64_t v49;
  JSC::VM *v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  int v54;
  int v55;
  unint64_t v56;
  JSC::VM *v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  int v62;
  unint64_t v63;
  JSC::VM *v64;
  int v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  int v69;
  uint64_t v70;
  unint64_t v71;
  JSC::VM *v72;
  double v73;
  int v74;
  uint64_t v75;
  int *v76;
  int v77;
  BOOL v78;
  unint64_t v79;
  JSC::VM *v80;
  double v81;
  int v82;
  uint64_t v83;
  int *v84;
  int v85;
  BOOL v86;
  JSC::VM *v87;
  double v88;
  int v89;
  uint64_t v90;
  int *v91;
  int v92;
  BOOL v93;
  JSC::VM *v94;
  double v95;
  int v96;
  uint64_t v97;
  int *v98;
  int v99;
  BOOL v100;
  uint64_t v101;
  int v102;
  unint64_t v103;
  unint64_t v104;
  BOOL v105;
  BOOL v106;
  __int16 v107;
  int v108;
  JSC::VM *v109;
  double v110;
  double v111;
  double v112;
  double v113;
  __int16 v114;
  BOOL v115;
  BOOL v116;
  WebCore *v117;
  BOOL v118;
  BOOL v119;
  uint64_t v120;
  WTF::StringImpl *v121;
  WTF *v122;
  WTF::StringImpl *v123;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  unsigned int *v128;
  unsigned int v129;
  unsigned int v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v135;
  JSValue v139;
  JSC::VM *v140;
  __int16 v141;
  int hasExceptionsAfterHandlingTraps;
  BOOL v143;
  BOOL v144;
  __int16 v145;
  WebCore *v146;
  BOOL v147;
  BOOL v148;
  __int16 v149;
  JSC::VM *v150;
  __int16 v151;
  BOOL v152;
  BOOL v153;
  WebCore *v154;
  BOOL v155;
  BOOL v156;
  char v157;
  uint64_t v158;
  BOOL v159;
  BOOL v160;
  int v161;
  WebCore *v162;
  BOOL v163;
  int v164;
  _BYTE *v165;
  BOOL v166;
  BOOL v167;
  int v168;
  unsigned int v169;
  unsigned int v170;
  int v171;
  int v172;
  int v173;
  WTF *v174;
  BOOL v175;
  BOOL v176;
  BOOL v177;
  __int16 v178;
  __int16 v179;
  uint64_t v180;
  JSC::VM *v181;
  uint64_t v182;
  int v183;
  WTF *v184;
  _QWORD v185[2];

  v3 = (WebCore *)this;
  v4 = 0xFFFE000000000002;
  v5 = this[7];
  v181 = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v181, "MouseEvent", "initMouseEvent");
  v7 = (uint64_t)a2;
  v8 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v9 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v10 = (char **)(16 * v8);
  if ((_DWORD)v8)
    v11 = v10 == &WebCore::JSMouseEvent::s_info;
  else
    v11 = 1;
  if (!v11)
  {
    do
    {
      v10 = (char **)v10[2];
      v9 = v10 != 0;
    }
    while (v10 != &WebCore::JSMouseEvent::s_info && v10 != 0);
  }
  if (!v9)
    return WebCore::throwThisTypeError((int)this, (int)&v181, "MouseEvent", "initMouseEvent");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v139.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, a2);
    return (_BYTE *)JSC::VM::throwException(v5, v3, v139);
  }
  v13 = *(_QWORD *)(v6 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>((JSC::JSGlobalObject *)this, *((_QWORD *)a2 + 6), (uint64_t)&v182);
  v16 = v183;
  if (v183)
  {
    v36 = 0;
    goto LABEL_216;
  }
  v17 = *(int *)(v7 + 32);
  if ((unint64_t)(v17 - 3) >= 0xFFFFFFFFFFFFFFFELL)
  {
    v19 = (JSC::VM *)*((_QWORD *)v3 + 7);
    v18 = 10;
    goto LABEL_25;
  }
  v18 = *(_QWORD *)(v7 + 56);
  v19 = (JSC::VM *)*((_QWORD *)v3 + 7);
  if (v18 >= 0xFFFE000000000000)
    goto LABEL_300;
  *(_QWORD *)&v20 = v18 - 0x2000000000000;
  if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v18 & 0xFFFE000000000002) == 0)
    {
      v21 = *(unsigned __int8 *)(v18 + 5);
      if (v21 == 3)
      {
        v24 = *(_DWORD *)(v18 + 8);
      }
      else
      {
        if (v21 != 2)
        {
          i = (*(_BYTE *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0xA) & 1) == 0
           || *(_QWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x28) != (_QWORD)v3;
          goto LABEL_351;
        }
        v22 = *(_QWORD *)(v18 + 8);
        if ((v22 & 1) != 0)
          v23 = (int *)(v18 + 16);
        else
          v23 = (int *)(v22 + 4);
        v24 = *v23;
      }
      i = v24 != 0;
LABEL_351:
      v4 = 0xFFFE000000000002;
      goto LABEL_26;
    }
LABEL_25:
    i = v18 == 7;
    goto LABEL_26;
  }
  *(_QWORD *)&v15 = v18 - 0x2000000000000;
  for (i = v20 > 0.0 || v20 < 0.0; ; i = v18 != 0)
  {
LABEL_26:
    if (*((_DWORD *)v19 + 20))
    {
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v19) & 1) != 0)
      {
        v36 = 0;
        goto LABEL_215;
      }
      v17 = *(int *)(v7 + 32);
    }
    if ((unint64_t)(v17 - 4) >= 0xFFFFFFFFFFFFFFFDLL)
    {
      v27 = (JSC::VM *)*((_QWORD *)v3 + 7);
      v26 = 10;
LABEL_38:
      v32 = v26 == 7;
      goto LABEL_39;
    }
    v26 = *(_QWORD *)(v7 + 64);
    v27 = (JSC::VM *)*((_QWORD *)v3 + 7);
    if (v26 >= 0xFFFE000000000000)
    {
      v32 = v26 != 0;
      goto LABEL_39;
    }
    if (v26 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      if ((v26 & v4) != 0)
        goto LABEL_38;
      v28 = *(unsigned __int8 *)(v26 + 5);
      if (v28 == 3)
      {
        v31 = *(_DWORD *)(v26 + 8);
      }
      else
      {
        if (v28 != 2)
        {
          v32 = (*(_BYTE *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0xA) & 1) == 0
             || *(_QWORD *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0x28) != (_QWORD)v3;
          goto LABEL_353;
        }
        v29 = *(_QWORD *)(v26 + 8);
        if ((v29 & 1) != 0)
          v30 = (int *)(v26 + 16);
        else
          v30 = (int *)(v29 + 4);
        v31 = *v30;
      }
      v32 = v31 != 0;
LABEL_353:
      v4 = 0xFFFE000000000002;
      goto LABEL_39;
    }
    *(_QWORD *)&v15 = v26 - 0x2000000000000;
    v32 = COERCE_DOUBLE(v26 - 0x2000000000000) > 0.0 || COERCE_DOUBLE(v26 - 0x2000000000000) < 0.0;
LABEL_39:
    if (*((_DWORD *)v27 + 20))
    {
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v27) & 1) != 0)
      {
        v36 = 0;
        goto LABEL_215;
      }
      v17 = *(int *)(v7 + 32);
    }
    if ((unint64_t)(v17 - 5) > 0xFFFFFFFFFFFFFFFBLL)
    {
      v174 = 0;
    }
    else
    {
      v33 = *(_QWORD *)(v7 + 72);
      if ((v33 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v174 = 0;
      }
      else
      {
        v185[0] = *((_QWORD *)v3 + 7);
        if ((v33 & v4) != 0
          || *(unsigned __int8 *)(v33 + 5) < 0x17u
          || &WebCore::JSWindowProxy::s_info != (char **)(16
                                                        * *(unsigned int *)(16 * (*(_DWORD *)v33 & 0xFFFFFFFE) + 0x4C))
          || (v131 = *(_QWORD *)(*(_QWORD *)(v33 + 16) + 3408),
              !(*(uint64_t (**)(uint64_t))(*(_QWORD *)v131 + 104))(v131))
          || (v174 = *(WTF **)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v131 + 104))(v131) + 112)) == 0)
        {
          WebCore::throwArgumentTypeError((uint64_t)v3, (uint64_t)v185, 3, "view", 5, "MouseEvent", 11, v14, "initMouseEvent", 15, "WindowProxy", 12);
          v36 = 0;
          goto LABEL_215;
        }
        v17 = *(int *)(v7 + 32);
        v4 = 0xFFFE000000000002;
      }
    }
    v173 = v32;
    if ((unint64_t)(v17 - 6) >= 0xFFFFFFFFFFFFFFFBLL)
    {
      v185[0] = 10;
      v35 = (JSC::VM *)*((_QWORD *)v3 + 7);
LABEL_52:
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v185, v3);
      v37 = *(_QWORD *)&v15;
      goto LABEL_53;
    }
    v34 = *(_QWORD *)(v7 + 80);
    v185[0] = v34;
    v35 = (JSC::VM *)*((_QWORD *)v3 + 7);
    if (v34 >= 0xFFFE000000000000)
    {
      v172 = v34;
      goto LABEL_64;
    }
    v37 = v34 - 0x2000000000000;
    if (v34 - 0x2000000000000 >= 0xFFFC000000000000)
      goto LABEL_52;
LABEL_53:
    v38 = (v37 >> 52) & 0x7FF;
    if ((v38 - 1023) <= 0x53)
    {
      v39 = v37 >> (51 - (v37 >> 52));
      if (v38 > 0x433)
        LODWORD(v39) = v37 << ((v37 >> 52) - 51);
      v40 = v38 >= 0x41F
          ? v39
          : (((1 << ((v37 >> 52) + 1)) - 1) & v39) + (1 << ((v37 >> 52) + 1));
      v41 = (v37 & 0x8000000000000000) == 0 ? v40 : -v40;
      v172 = v41;
    }
    else
    {
      v172 = 0;
    }
LABEL_64:
    if (*((_DWORD *)v35 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v35))
    {
      v36 = 0;
      goto LABEL_215;
    }
    v171 = i;
    if ((unint64_t)(*(int *)(v7 + 32) - 7) >= 0xFFFFFFFFFFFFFFFALL)
    {
      v185[0] = 10;
      v43 = (JSC::VM *)*((_QWORD *)v3 + 7);
LABEL_69:
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v185, v3);
      v44 = *(_QWORD *)&v15;
      goto LABEL_70;
    }
    v42 = *(_QWORD *)(v7 + 88);
    v185[0] = v42;
    v43 = (JSC::VM *)*((_QWORD *)v3 + 7);
    if (v42 >= 0xFFFE000000000000)
    {
      v170 = v42;
      goto LABEL_81;
    }
    v44 = v42 - 0x2000000000000;
    if (v42 - 0x2000000000000 >= 0xFFFC000000000000)
      goto LABEL_69;
LABEL_70:
    v45 = (v44 >> 52) & 0x7FF;
    if ((v45 - 1023) <= 0x53)
    {
      v46 = v44 >> (51 - (v44 >> 52));
      if (v45 > 0x433)
        LODWORD(v46) = v44 << ((v44 >> 52) - 51);
      v47 = v45 >= 0x41F
          ? v46
          : (((1 << ((v44 >> 52) + 1)) - 1) & v46) + (1 << ((v44 >> 52) + 1));
      v48 = (v44 & 0x8000000000000000) == 0 ? v47 : -v47;
      v170 = v48;
    }
    else
    {
      v170 = 0;
    }
LABEL_81:
    if (*((_DWORD *)v43 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v43))
    {
      v36 = 0;
      goto LABEL_215;
    }
    if ((unint64_t)(*(int *)(v7 + 32) - 8) >= 0xFFFFFFFFFFFFFFF9)
    {
      v185[0] = 10;
      v50 = (JSC::VM *)*((_QWORD *)v3 + 7);
LABEL_86:
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v185, v3);
      v51 = *(_QWORD *)&v15;
      goto LABEL_87;
    }
    v49 = *(_QWORD *)(v7 + 96);
    v185[0] = v49;
    v50 = (JSC::VM *)*((_QWORD *)v3 + 7);
    if (v49 >= 0xFFFE000000000000)
    {
      v169 = v49;
      goto LABEL_98;
    }
    v51 = v49 - 0x2000000000000;
    if (v49 - 0x2000000000000 >= 0xFFFC000000000000)
      goto LABEL_86;
LABEL_87:
    v52 = (v51 >> 52) & 0x7FF;
    if ((v52 - 1023) <= 0x53)
    {
      v53 = v51 >> (51 - (v51 >> 52));
      if (v52 > 0x433)
        LODWORD(v53) = v51 << ((v51 >> 52) - 51);
      v54 = v52 >= 0x41F
          ? v53
          : (((1 << ((v51 >> 52) + 1)) - 1) & v53) + (1 << ((v51 >> 52) + 1));
      v55 = (v51 & 0x8000000000000000) == 0 ? v54 : -v54;
      v169 = v55;
    }
    else
    {
      v169 = 0;
    }
LABEL_98:
    if (*((_DWORD *)v50 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v50))
    {
      v36 = 0;
      goto LABEL_215;
    }
    if ((unint64_t)(*(int *)(v7 + 32) - 9) >= 0xFFFFFFFFFFFFFFF8)
    {
      v185[0] = 10;
      v57 = (JSC::VM *)*((_QWORD *)v3 + 7);
LABEL_103:
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v185, v3);
      v58 = *(_QWORD *)&v15;
      goto LABEL_104;
    }
    v56 = *(_QWORD *)(v7 + 104);
    v185[0] = v56;
    v57 = (JSC::VM *)*((_QWORD *)v3 + 7);
    if (v56 >= 0xFFFE000000000000)
    {
      v168 = v56;
      goto LABEL_115;
    }
    v58 = v56 - 0x2000000000000;
    if (v56 - 0x2000000000000 >= 0xFFFC000000000000)
      goto LABEL_103;
LABEL_104:
    v59 = (v58 >> 52) & 0x7FF;
    if ((v59 - 1023) <= 0x53)
    {
      v60 = v58 >> (51 - (v58 >> 52));
      if (v59 > 0x433)
        LODWORD(v60) = v58 << ((v58 >> 52) - 51);
      v61 = v59 >= 0x41F
          ? v60
          : (((1 << ((v58 >> 52) + 1)) - 1) & v60) + (1 << ((v58 >> 52) + 1));
      v62 = (v58 & 0x8000000000000000) == 0 ? v61 : -v61;
      v168 = v62;
    }
    else
    {
      v168 = 0;
    }
LABEL_115:
    if (*((_DWORD *)v57 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v57))
    {
      v36 = 0;
      goto LABEL_215;
    }
    if ((unint64_t)(*(int *)(v7 + 32) - 10) >= 0xFFFFFFFFFFFFFFF7)
    {
      v185[0] = 10;
      v64 = (JSC::VM *)*((_QWORD *)v3 + 7);
LABEL_120:
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v185, v3);
      v66 = *(_QWORD *)&v15;
      goto LABEL_121;
    }
    v63 = *(_QWORD *)(v7 + 112);
    v185[0] = v63;
    v64 = (JSC::VM *)*((_QWORD *)v3 + 7);
    if (v63 >= 0xFFFE000000000000)
    {
      LOWORD(v65) = v63;
      goto LABEL_131;
    }
    v66 = v63 - 0x2000000000000;
    if (v63 - 0x2000000000000 >= 0xFFFC000000000000)
      goto LABEL_120;
LABEL_121:
    v67 = (v66 >> 52) & 0x7FF;
    if ((v67 - 1023) <= 0x53)
    {
      v68 = v66 >> (51 - (v66 >> 52));
      if (v67 > 0x433)
        LODWORD(v68) = v66 << ((v66 >> 52) - 51);
      v69 = v67 >= 0x41F
          ? v68
          : (((1 << ((v66 >> 52) + 1)) - 1) & v68) + (1 << ((v66 >> 52) + 1));
      if ((v66 & 0x8000000000000000) == 0)
        LOWORD(v65) = v69;
      else
        v65 = -v69;
    }
    else
    {
      LOWORD(v65) = 0;
    }
LABEL_131:
    if (*((_DWORD *)v64 + 20))
    {
      v140 = v64;
      v141 = v65;
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v140);
      LOWORD(v65) = v141;
      if (hasExceptionsAfterHandlingTraps)
      {
        v36 = 0;
        goto LABEL_215;
      }
    }
    v70 = *(int *)(v7 + 32);
    if ((unint64_t)(v70 - 11) >= 0xFFFFFFFFFFFFFFF6)
    {
      v72 = (JSC::VM *)*((_QWORD *)v3 + 7);
      v71 = 10;
LABEL_143:
      v78 = v71 == 7;
      goto LABEL_144;
    }
    v71 = *(_QWORD *)(v7 + 120);
    v72 = (JSC::VM *)*((_QWORD *)v3 + 7);
    if (v71 >= 0xFFFE000000000000)
    {
      v78 = (_DWORD)v71 != 0;
      goto LABEL_144;
    }
    *(_QWORD *)&v73 = v71 - 0x2000000000000;
    if (v71 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      *(_QWORD *)&v15 = v71 - 0x2000000000000;
      v78 = v73 > 0.0 || v73 < 0.0;
      goto LABEL_343;
    }
    if ((v71 & v4) != 0)
      goto LABEL_143;
    v74 = *(unsigned __int8 *)(v71 + 5);
    if (v74 == 3)
    {
      v77 = *(_DWORD *)(v71 + 8);
LABEL_342:
      v78 = v77 != 0;
LABEL_343:
      v4 = 0xFFFE000000000002;
      goto LABEL_144;
    }
    if (v74 == 2)
    {
      v75 = *(_QWORD *)(v71 + 8);
      if ((v75 & 1) != 0)
        v76 = (int *)(v71 + 16);
      else
        v76 = (int *)(v75 + 4);
      v77 = *v76;
      goto LABEL_342;
    }
    v78 = (*(_BYTE *)(16 * (*(_DWORD *)v71 & 0xFFFFFFFE) + 0xA) & 1) == 0
       || *(_QWORD *)(16 * (*(_DWORD *)v71 & 0xFFFFFFFE) + 0x28) != (_QWORD)v3;
    v4 = 0xFFFE000000000002;
LABEL_144:
    if (*((_DWORD *)v72 + 20))
    {
      v166 = v78;
      v178 = v65;
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v72) & 1) != 0)
      {
        v36 = 0;
        goto LABEL_215;
      }
      v70 = *(int *)(v7 + 32);
      LOWORD(v65) = v178;
      v78 = v166;
    }
    if ((unint64_t)(v70 - 12) >= 0xFFFFFFFFFFFFFFF5)
    {
      v80 = (JSC::VM *)*((_QWORD *)v3 + 7);
      v79 = 10;
LABEL_156:
      v86 = v79 == 7;
      goto LABEL_157;
    }
    v79 = *(_QWORD *)(v7 + 128);
    v80 = (JSC::VM *)*((_QWORD *)v3 + 7);
    if (v79 >= 0xFFFE000000000000)
    {
      v86 = (_DWORD)v79 != 0;
      goto LABEL_157;
    }
    *(_QWORD *)&v81 = v79 - 0x2000000000000;
    if (v79 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      *(_QWORD *)&v15 = v79 - 0x2000000000000;
      v86 = v81 > 0.0 || v81 < 0.0;
      goto LABEL_334;
    }
    if ((v79 & v4) != 0)
      goto LABEL_156;
    v82 = *(unsigned __int8 *)(v79 + 5);
    if (v82 == 3)
    {
      v85 = *(_DWORD *)(v79 + 8);
LABEL_333:
      v86 = v85 != 0;
LABEL_334:
      v4 = 0xFFFE000000000002;
      goto LABEL_157;
    }
    if (v82 == 2)
    {
      v83 = *(_QWORD *)(v79 + 8);
      if ((v83 & 1) != 0)
        v84 = (int *)(v79 + 16);
      else
        v84 = (int *)(v83 + 4);
      v85 = *v84;
      goto LABEL_333;
    }
    v86 = (*(_BYTE *)(16 * (*(_DWORD *)v79 & 0xFFFFFFFE) + 0xA) & 1) == 0
       || *(_QWORD *)(16 * (*(_DWORD *)v79 & 0xFFFFFFFE) + 0x28) != (_QWORD)v3;
    v4 = 0xFFFE000000000002;
LABEL_157:
    if (*((_DWORD *)v80 + 20))
    {
      v175 = v86;
      v167 = v78;
      v179 = v65;
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v80) & 1) != 0)
      {
        v36 = 0;
        goto LABEL_215;
      }
      v70 = *(int *)(v7 + 32);
      LOWORD(v65) = v179;
      v78 = v167;
      v86 = v175;
    }
    v165 = (_BYTE *)v13;
    if ((unint64_t)(v70 - 13) >= 0xFFFFFFFFFFFFFFF4)
    {
      v87 = (JSC::VM *)*((_QWORD *)v3 + 7);
      v13 = 10;
LABEL_169:
      v93 = v13 == 7;
      goto LABEL_170;
    }
    v13 = *(_QWORD *)(v7 + 136);
    v87 = (JSC::VM *)*((_QWORD *)v3 + 7);
    if (v13 >= 0xFFFE000000000000)
    {
      v93 = (_DWORD)v13 != 0;
      goto LABEL_170;
    }
    *(_QWORD *)&v88 = v13 - 0x2000000000000;
    if (v13 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      *(_QWORD *)&v15 = v13 - 0x2000000000000;
      v93 = v88 > 0.0 || v88 < 0.0;
    }
    else
    {
      if ((v13 & v4) != 0)
        goto LABEL_169;
      v89 = *(unsigned __int8 *)(v13 + 5);
      if (v89 == 3)
      {
        v92 = *(_DWORD *)(v13 + 8);
LABEL_338:
        v93 = v92 != 0;
        goto LABEL_170;
      }
      if (v89 == 2)
      {
        v90 = *(_QWORD *)(v13 + 8);
        if ((v90 & 1) != 0)
          v91 = (int *)(v13 + 16);
        else
          v91 = (int *)(v90 + 4);
        v92 = *v91;
        goto LABEL_338;
      }
      v93 = (*(_BYTE *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0xA) & 1) == 0
         || *(_QWORD *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x28) != (_QWORD)v3;
    }
LABEL_170:
    if (*((_DWORD *)v87 + 20))
    {
      v162 = v3;
      v143 = v93;
      v176 = v86;
      v144 = v78;
      v145 = v65;
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v87) & 1) != 0)
      {
        v36 = 0;
        goto LABEL_215;
      }
      v70 = *(int *)(v7 + 32);
      LOWORD(v65) = v145;
      v78 = v144;
      v86 = v176;
      v93 = v143;
      v3 = v162;
    }
    if ((unint64_t)(v70 - 14) >= 0xFFFFFFFFFFFFFFF3)
    {
      v94 = (JSC::VM *)*((_QWORD *)v3 + 7);
      v4 = 10;
LABEL_182:
      v100 = v4 == 7;
      goto LABEL_183;
    }
    v4 = *(_QWORD *)(v7 + 144);
    v94 = (JSC::VM *)*((_QWORD *)v3 + 7);
    if (v4 >= 0xFFFE000000000000)
    {
      v100 = (_DWORD)v4 != 0;
      goto LABEL_183;
    }
    *(_QWORD *)&v95 = v4 - 0x2000000000000;
    if (v4 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      *(_QWORD *)&v15 = v4 - 0x2000000000000;
      v100 = v95 > 0.0 || v95 < 0.0;
    }
    else
    {
      if ((v4 & 0xFFFE000000000002) != 0)
        goto LABEL_182;
      v96 = *(unsigned __int8 *)(v4 + 5);
      if (v96 == 3)
      {
        v99 = *(_DWORD *)(v4 + 8);
LABEL_347:
        v100 = v99 != 0;
        goto LABEL_183;
      }
      if (v96 == 2)
      {
        v97 = *(_QWORD *)(v4 + 8);
        if ((v97 & 1) != 0)
          v98 = (int *)(v4 + 16);
        else
          v98 = (int *)(v97 + 4);
        v99 = *v98;
        goto LABEL_347;
      }
      v100 = (*(_BYTE *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0xA) & 1) == 0
          || *(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28) != (_QWORD)v3;
    }
LABEL_183:
    v180 = v7;
    if (*((_DWORD *)v94 + 20))
    {
      v163 = v100;
      v146 = v3;
      v147 = v93;
      v177 = v86;
      v148 = v78;
      v149 = v65;
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v94) & 1) != 0)
      {
        v36 = 0;
        goto LABEL_215;
      }
      v70 = *(int *)(v180 + 32);
      LOWORD(v65) = v149;
      v78 = v148;
      v86 = v177;
      v93 = v147;
      v3 = v146;
      v100 = v163;
    }
    if ((unint64_t)(v70 - 15) >= 0xFFFFFFFFFFFFFFF2)
    {
      v159 = v93;
      v160 = v100;
      v103 = v4;
      v104 = v13;
      v105 = v86;
      v106 = v78;
      v107 = v65;
      v108 = 10;
      v185[0] = 10;
      v109 = (JSC::VM *)*((_QWORD *)v3 + 7);
LABEL_188:
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v185, v3);
      v111 = v110;
      LOWORD(v65) = v107;
      v78 = v106;
      v86 = v105;
      v13 = v104;
      v4 = v103;
      v93 = v159;
      v100 = v160;
      v101 = v180;
      LODWORD(v18) = v108;
      goto LABEL_191;
    }
    v101 = v180;
    v18 = *(_QWORD *)(v180 + 152);
    v185[0] = v18;
    if (v18 >= 0xFFFE000000000000)
    {
      LOWORD(v102) = v18;
      goto LABEL_199;
    }
    v109 = (JSC::VM *)*((_QWORD *)v3 + 7);
    if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v159 = v93;
      v160 = v100;
      v108 = v18;
      v103 = v4;
      v104 = v13;
      v105 = v86;
      v106 = v78;
      v107 = v65;
      goto LABEL_188;
    }
    *(_QWORD *)&v111 = v18 - 0x2000000000000;
LABEL_191:
    if (*((_DWORD *)v109 + 20))
    {
      v150 = v109;
      v164 = v18;
      v151 = v65;
      v152 = v78;
      v153 = v86;
      v154 = v3;
      v155 = v93;
      v156 = v100;
      v157 = JSC::VM::hasExceptionsAfterHandlingTraps(v150);
      v100 = v156;
      v93 = v155;
      v3 = v154;
      v101 = v180;
      v86 = v153;
      v78 = v152;
      LOWORD(v65) = v151;
      LODWORD(v18) = v164;
      if ((v157 & 1) != 0)
      {
        v36 = 0;
        goto LABEL_215;
      }
    }
    LOWORD(v102) = 0;
    v15 = fabs(v111);
    if (v15 != INFINITY && v111 != 0.0)
    {
      v112 = -floor(-v111);
      v113 = floor(v111);
      if (v111 >= 0.0)
        v112 = v113;
      v161 = v18;
      v114 = v65;
      v115 = v78;
      v116 = v86;
      v117 = v3;
      v118 = v93;
      v119 = v100;
      v15 = fmod(v112, 65536.0);
      v100 = v119;
      v93 = v118;
      v3 = v117;
      v101 = v180;
      v86 = v116;
      v78 = v115;
      LOWORD(v65) = v114;
      LODWORD(v18) = v161;
      if (v15 > 32767.0)
        v15 = v15 + -65536.0;
      v102 = (int)v15;
    }
LABEL_199:
    if ((unint64_t)(*(int *)(v101 + 32) - 16) > 0xFFFFFFFFFFFFFFF0)
    {
      v7 = 10;
      goto LABEL_203;
    }
    v7 = *(_QWORD *)(v101 + 160);
    if ((v7 & 0xFFFFFFFFFFFFFFF7) != 2)
    {
      v185[0] = *((_QWORD *)v3 + 7);
      if ((v7 & 0xFFFE000000000002) != 0)
        goto LABEL_214;
      v125 = *(unsigned int *)(16 * (*(_DWORD *)v7 & 0xFFFFFFFE) + 0x4C);
      v126 = 16 * v125;
      if ((char **)(16 * v125) == &WebCore::JSWindowProxy::s_info)
      {
        v132 = (_QWORD *)(*(_QWORD *)(v7 + 16) + 3408);
      }
      else if ((_DWORD)v125 && (char **)v126 != &WebCore::JSDOMWindow::s_info)
      {
        v133 = 16 * v125;
        do
          v133 = *(_QWORD *)(v133 + 16);
        while ((char **)v133 != &WebCore::JSDOMWindow::s_info && v133 != 0);
        if (v133)
          goto LABEL_245;
        if ((char **)v126 == &WebCore::JSWorkerGlobalScope::s_info)
          goto LABEL_203;
        v135 = v126;
        do
          v135 = *(_QWORD *)(v135 + 16);
        while ((char **)v135 != &WebCore::JSWorkerGlobalScope::s_info && v135 != 0);
        if (v135)
          goto LABEL_203;
        if ((char **)v126 != &WebCore::JSEventTarget::s_info)
        {
          do
            v126 = *(_QWORD *)(v126 + 16);
          while ((char **)v126 != &WebCore::JSEventTarget::s_info && v126 != 0);
          if (!v126)
          {
LABEL_214:
            WebCore::throwArgumentTypeError((uint64_t)v3, (uint64_t)v185, 14, "relatedTarget", 14, "MouseEvent", 11, v14, "initMouseEvent", 15, "EventTarget", 12);
            v36 = 0;
            goto LABEL_215;
          }
        }
        v132 = (_QWORD *)(v7 + 24);
      }
      else
      {
        if (!(_DWORD)v125)
          goto LABEL_214;
LABEL_245:
        v132 = (_QWORD *)(v7 + 3408);
      }
      if (!*v132)
        goto LABEL_214;
    }
LABEL_203:
    if (!v183)
      break;
    v19 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_300:
    ;
  }
  v120 = v182;
  v182 = 0;
  v185[0] = v120;
  if (v174)
    ++*(_DWORD *)v174;
  v184 = v174;
  WORD2(v158) = v102;
  BYTE3(v158) = v100;
  BYTE2(v158) = v93;
  BYTE1(v158) = v86;
  LOBYTE(v158) = v78;
  WebCore::MouseEvent::initMouseEvent(v165, (const WTF::AtomString *)v185, v171, v173, (_DWORD **)&v184, v172, v170, v169, *(int32x2_t *)&v15, v168, SBYTE1(v168), SBYTE2(v168), SHIBYTE(v168), v65, v158);
  v122 = v184;
  v184 = 0;
  if (v122)
  {
    if (*(_DWORD *)v122 == 1)
    {
      v127 = (uint64_t *)*((_QWORD *)v122 + 2);
      *((_QWORD *)v122 + 2) = 0;
      if (v127)
      {
        if (*v127)
          WTF::HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>>::deallocateTable(*v127, v121);
        WTF::fastFree((WTF *)v127, v121);
      }
      v128 = (unsigned int *)*((_QWORD *)v122 + 1);
      *((_QWORD *)v122 + 1) = 0;
      if (v128)
      {
        do
        {
          v129 = __ldaxr(v128);
          v130 = v129 - 1;
        }
        while (__stlxr(v130, v128));
        if (!v130)
        {
          atomic_store(1u, v128);
          WTF::fastFree((WTF *)v128, v121);
        }
      }
      WTF::fastFree(v122, v121);
    }
    else
    {
      --*(_DWORD *)v122;
    }
  }
  v123 = (WTF::StringImpl *)v185[0];
  v185[0] = 0;
  if (v123)
  {
    if (*(_DWORD *)v123 == 2)
      WTF::StringImpl::destroy(v123, v121);
    else
      *(_DWORD *)v123 -= 2;
  }
  v36 = 10;
LABEL_215:
  v16 = v183;
LABEL_216:
  if (v16 != -1)
    ((void (*)(_QWORD *, uint64_t *))off_1E32BEAA0[v16])(v185, &v182);
  return (_BYTE *)v36;
}

_BYTE *WebCore::jsMutationEventPrototypeFunction_initMutationEvent(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  _BYTE *v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  int v21;
  uint64_t v22;
  int *v23;
  int v24;
  _BOOL4 v25;
  unint64_t v26;
  JSC::VM *v27;
  int v28;
  uint64_t v29;
  int *v30;
  int v31;
  _BOOL4 v32;
  uint64_t v33;
  JSC::VM *v34;
  uint64_t v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  uint64_t v38;
  JSC::VM *v39;
  _DWORD *v40;
  WTF::StringImpl *v41;
  JSC::VM *v42;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44;
  int v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  uint64_t v51;
  WTF::StringImpl *v52;
  WTF::StringImpl *v53;
  WTF::StringImpl *v54;
  WTF::StringImpl *v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  int v59;
  JSValue v62;
  WTF::StringImpl *v63;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v65;
  int v66;
  int v67;
  WTF::StringImpl *v68;
  BOOL i;
  BOOL v70;
  WebCore::Node *v71;
  int v72;
  int v73;
  JSC::VM *v74;
  WTF::StringImpl *v75;
  int v76;
  uint64_t v77;
  int v78;
  WTF::StringImpl *v79;
  int v80;
  uint64_t v81;
  int v82;
  WTF::StringImpl *v83;
  WTF::StringImpl *v84;
  WTF::StringImpl *v85;
  _QWORD v86[2];

  v4 = 0xFFFE000000000002;
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v74 = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v74, "MutationEvent", "initMutationEvent");
  v7 = a2;
  v8 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v9 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v10 = (char **)(16 * v8);
  if ((_DWORD)v8)
    v11 = v10 == &WebCore::JSMutationEvent::s_info;
  else
    v11 = 1;
  if (!v11)
  {
    do
    {
      v10 = (char **)v10[2];
      v9 = v10 != 0;
    }
    while (v10 != &WebCore::JSMutationEvent::s_info && v10 != 0);
  }
  if (!v9)
    return WebCore::throwThisTypeError((int)this, (int)&v74, "MutationEvent", "initMutationEvent");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v62.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v5, this, v62);
  }
  v13 = *(_BYTE **)(v6 + 24);
  v14 = *((_QWORD *)a2 + 6);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, v14, (uint64_t)&v81);
  v16 = v82;
  if (v82)
  {
    v56 = 0;
    goto LABEL_119;
  }
  v17 = *((int *)v7 + 8);
  if ((unint64_t)(v17 - 3) >= 0xFFFFFFFFFFFFFFFELL)
  {
    v19 = (JSC::VM *)*((_QWORD *)this + 7);
    v18 = 10;
    goto LABEL_25;
  }
  v18 = *((_QWORD *)v7 + 7);
  v19 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v18 >= 0xFFFE000000000000)
    goto LABEL_165;
  *(_QWORD *)&v20 = v18 - 0x2000000000000;
  if (v18 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
  {
    v25 = v20 > 0.0 || v20 < 0.0;
    goto LABEL_26;
  }
  if ((v18 & 0xFFFE000000000002) != 0)
  {
LABEL_25:
    v25 = v18 == 7;
    goto LABEL_26;
  }
  v21 = *(unsigned __int8 *)(v18 + 5);
  if (v21 == 3)
  {
    v24 = *(_DWORD *)(v18 + 8);
  }
  else
  {
    if (v21 != 2)
    {
      v25 = (*(_BYTE *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0xA) & 1) == 0
         || *(_QWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x28) != (_QWORD)this;
      goto LABEL_26;
    }
    v22 = *(_QWORD *)(v18 + 8);
    if ((v22 & 1) != 0)
      v23 = (int *)(v18 + 16);
    else
      v23 = (int *)(v22 + 4);
    v24 = *v23;
  }
  for (i = v24 == 0; ; i = (_DWORD)v18 == 0)
  {
    v25 = !i;
LABEL_26:
    if (*((_DWORD *)v19 + 20))
    {
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v19) & 1) != 0)
      {
        v56 = 0;
        goto LABEL_118;
      }
      v17 = *((int *)v7 + 8);
    }
    if ((unint64_t)(v17 - 4) >= 0xFFFFFFFFFFFFFFFDLL)
    {
      v27 = (JSC::VM *)*((_QWORD *)this + 7);
      v26 = 10;
LABEL_38:
      v32 = v26 == 7;
      goto LABEL_39;
    }
    v26 = *((_QWORD *)v7 + 8);
    v27 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v26 >= 0xFFFE000000000000)
    {
      v70 = (_DWORD)v26 == 0;
      goto LABEL_186;
    }
    if (v26 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      if ((v26 & v4) != 0)
        goto LABEL_38;
      v28 = *(unsigned __int8 *)(v26 + 5);
      if (v28 == 3)
      {
        v31 = *(_DWORD *)(v26 + 8);
      }
      else
      {
        if (v28 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
            v32 = 1;
            goto LABEL_39;
          }
          v70 = *(_QWORD *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
          goto LABEL_186;
        }
        v29 = *(_QWORD *)(v26 + 8);
        if ((v29 & 1) != 0)
          v30 = (int *)(v26 + 16);
        else
          v30 = (int *)(v29 + 4);
        v31 = *v30;
      }
      v70 = v31 == 0;
LABEL_186:
      v32 = !v70;
      goto LABEL_39;
    }
    v32 = COERCE_DOUBLE(v26 - 0x2000000000000) > 0.0 || COERCE_DOUBLE(v26 - 0x2000000000000) < 0.0;
LABEL_39:
    if (*((_DWORD *)v27 + 20))
    {
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v27) & 1) != 0)
      {
        v56 = 0;
        goto LABEL_118;
      }
      v17 = *((int *)v7 + 8);
    }
    v72 = v32;
    v73 = v25;
    if ((unint64_t)(v17 - 5) >= 0xFFFFFFFFFFFFFFFCLL)
    {
      v71 = 0;
      v34 = (JSC::VM *)*((_QWORD *)this + 7);
LABEL_44:
      v77 = 10;
LABEL_45:
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v77, this);
      goto LABEL_56;
    }
    v33 = *((_QWORD *)v7 + 9);
    v34 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((v33 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v71 = 0;
      goto LABEL_49;
    }
    v79 = (WTF::StringImpl *)*((_QWORD *)this + 7);
    if ((v33 & v4) != 0)
      break;
    if (*(unsigned __int8 *)(v33 + 5) < 0xF0u)
      break;
    v71 = *(WebCore::Node **)(v33 + 24);
    if (!v71)
      break;
LABEL_49:
    if ((unint64_t)(v17 - 6) >= 0xFFFFFFFFFFFFFFFBLL)
      goto LABEL_44;
    v35 = *((_QWORD *)v7 + 10);
    v77 = v35;
    if ((v35 & v4) != 0 || *(_BYTE *)(v35 + 5) != 2)
      goto LABEL_45;
    v36 = *(WTF::StringImpl **)(v35 + 8);
    if ((v36 & 1) != 0)
    {
      v36 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v35, this);
      if (!v36)
        goto LABEL_55;
LABEL_54:
      *(_DWORD *)v36 += 2;
      goto LABEL_55;
    }
    if (v36)
      goto LABEL_54;
LABEL_55:
    v75 = v36;
LABEL_56:
    if (*((_DWORD *)v34 + 20))
    {
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v34);
      v37 = v75;
      if (hasExceptionsAfterHandlingTraps)
      {
        v80 = 1;
        v75 = 0;
        if (v37)
        {
          if (*(_DWORD *)v37 == 2)
            WTF::StringImpl::destroy(v37, v63);
          else
            *(_DWORD *)v37 -= 2;
        }
        v56 = 0;
        v59 = 1;
LABEL_117:
        ((void (*)(uint64_t *, WTF::StringImpl **))off_1E32BEA70[v59])(&v77, &v79);
        goto LABEL_118;
      }
    }
    else
    {
      v37 = v75;
    }
    v79 = v37;
    v80 = 0;
    if ((unint64_t)(*((int *)v7 + 8) - 7) >= 0xFFFFFFFFFFFFFFFALL)
    {
      v75 = (WTF::StringImpl *)10;
      v39 = (JSC::VM *)*((_QWORD *)this + 7);
    }
    else
    {
      v38 = *((_QWORD *)v7 + 11);
      v75 = (WTF::StringImpl *)v38;
      v39 = (JSC::VM *)*((_QWORD *)this + 7);
      if ((v38 & v4) == 0 && *(_BYTE *)(v38 + 5) == 2)
      {
        v40 = *(_DWORD **)(v38 + 8);
        if ((v40 & 1) != 0)
        {
          v40 = *(_DWORD **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v38, this);
          if (!v40)
            goto LABEL_64;
        }
        else if (!v40)
        {
LABEL_64:
          v86[0] = v40;
          goto LABEL_67;
        }
        *v40 += 2;
        goto LABEL_64;
      }
    }
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v75, this);
LABEL_67:
    if (*((_DWORD *)v39 + 20))
    {
      v66 = JSC::VM::hasExceptionsAfterHandlingTraps(v39);
      v41 = (WTF::StringImpl *)v86[0];
      if (v66)
      {
        v78 = 1;
        v86[0] = 0;
        if (v41)
        {
          if (*(_DWORD *)v41 == 2)
            WTF::StringImpl::destroy(v41, v65);
          else
            *(_DWORD *)v41 -= 2;
        }
        v56 = 0;
        v58 = 1;
LABEL_115:
        ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32BEA70[v58])(&v75, &v77);
LABEL_116:
        v59 = v80;
        if (v80 == -1)
          goto LABEL_118;
        goto LABEL_117;
      }
    }
    else
    {
      v41 = (WTF::StringImpl *)v86[0];
    }
    LODWORD(v18) = v14;
    v77 = (uint64_t)v41;
    v78 = 0;
    if ((unint64_t)(*((int *)v7 + 8) - 8) >= 0xFFFFFFFFFFFFFFF9)
    {
      LODWORD(v14) = 10;
      v86[0] = 10;
      v42 = (JSC::VM *)*((_QWORD *)this + 7);
    }
    else
    {
      v14 = *((_QWORD *)v7 + 12);
      v86[0] = v14;
      v42 = (JSC::VM *)*((_QWORD *)this + 7);
      if ((v14 & v4) == 0 && *(_BYTE *)(v14 + 5) == 2)
      {
        v43 = *(WTF::StringImpl **)(v14 + 8);
        if ((v43 & 1) != 0)
        {
          v43 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v14, this);
          if (!v43)
            goto LABEL_75;
        }
        else if (!v43)
        {
LABEL_75:
          v85 = v43;
          goto LABEL_78;
        }
        *(_DWORD *)v43 += 2;
        goto LABEL_75;
      }
    }
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v86, this);
LABEL_78:
    if (*((_DWORD *)v42 + 20))
    {
      v67 = JSC::VM::hasExceptionsAfterHandlingTraps(v42);
      v44 = v85;
      if (v67)
      {
        v76 = 1;
        v85 = 0;
        if (v44)
        {
          if (*(_DWORD *)v44 == 2)
            WTF::StringImpl::destroy(v44, v68);
          else
            *(_DWORD *)v44 -= 2;
        }
        v56 = 0;
        v57 = 1;
LABEL_114:
        ((void (*)(_QWORD *, WTF::StringImpl **))off_1E32BEA70[v57])(v86, &v75);
        v58 = v78;
        if (v78 == -1)
          goto LABEL_116;
        goto LABEL_115;
      }
    }
    else
    {
      v44 = v85;
    }
    v75 = v44;
    v76 = 0;
    if ((unint64_t)(*((int *)v7 + 8) - 9) >= 0xFFFFFFFFFFFFFFF8)
    {
      v4 = 10;
      v86[0] = 10;
      v7 = (JSC::JSGlobalObject *)*((_QWORD *)this + 7);
LABEL_85:
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v86, this);
      v47 = v46;
      goto LABEL_89;
    }
    v4 = *((_QWORD *)v7 + 13);
    v86[0] = v4;
    v7 = (JSC::JSGlobalObject *)*((_QWORD *)this + 7);
    if (v4 >= 0xFFFE000000000000 && (v4 & 0x80000000) == 0)
    {
      LOWORD(v45) = v4;
      goto LABEL_97;
    }
    if (v4 >= 0xFFFE000000000000)
    {
      v47 = (double)(int)v4;
    }
    else
    {
      if (v4 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        goto LABEL_85;
      *(_QWORD *)&v47 = v4 - 0x2000000000000;
    }
LABEL_89:
    if (*((_DWORD *)v7 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v7) & 1) != 0)
    {
      v56 = 0;
LABEL_113:
      v57 = 0;
      goto LABEL_114;
    }
    LOWORD(v45) = 0;
    if (fabs(v47) != INFINITY && v47 != 0.0)
    {
      v48 = -floor(-v47);
      v49 = floor(v47);
      if (v47 >= 0.0)
        v48 = v49;
      v50 = fmod(v48, 65536.0);
      if (v50 < 0.0)
        v50 = v50 + 65536.0;
      v45 = (int)v50;
    }
LABEL_97:
    if (!v82)
    {
      v51 = v81;
      v81 = 0;
      v86[0] = v51;
      if (!v80)
      {
        v52 = v79;
        v79 = 0;
        v85 = v52;
        if (!v78)
        {
          v53 = (WTF::StringImpl *)v77;
          v77 = 0;
          v83 = v44;
          v84 = v53;
          v75 = 0;
          WebCore::MutationEvent::initMutationEvent(v13, (const WTF::AtomString *)v86, v73, v72, v71, (const WTF::String *)&v85, (const WTF::String *)&v84, (const WTF::String *)&v83, v45);
          if (v83)
          {
            if (*(_DWORD *)v83 == 2)
              WTF::StringImpl::destroy(v83, v54);
            else
              *(_DWORD *)v83 -= 2;
          }
          if (v84)
          {
            if (*(_DWORD *)v84 == 2)
              WTF::StringImpl::destroy(v84, v54);
            else
              *(_DWORD *)v84 -= 2;
          }
          if (v85)
          {
            if (*(_DWORD *)v85 == 2)
              WTF::StringImpl::destroy(v85, v54);
            else
              *(_DWORD *)v85 -= 2;
          }
          v55 = (WTF::StringImpl *)v86[0];
          v86[0] = 0;
          if (v55)
          {
            if (*(_DWORD *)v55 == 2)
              WTF::StringImpl::destroy(v55, v54);
            else
              *(_DWORD *)v55 -= 2;
          }
          v56 = 10;
          goto LABEL_113;
        }
      }
    }
    v19 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_165:
    ;
  }
  WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v79, 3, "relatedNode", 12, "MutationEvent", 14, v15, "initMutationEvent", 18, "Node", 5);
  v56 = 0;
LABEL_118:
  v16 = v82;
LABEL_119:
  if (v16 != -1)
    ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32BEAA0[v16])(&v79, &v81);
  return (_BYTE *)v56;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore18JSMutationCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

_BYTE *WebCore::jsMutationObserverPrototypeFunction_observe(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  JSC::JSCell *v20;
  uint64_t Object;
  JSC::Structure *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  unint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  unint64_t v30;
  JSC::VM *v31;
  double v32;
  __int16 v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  unint64_t v36;
  JSC::VM *v37;
  double v38;
  __int16 v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  unint64_t v42;
  JSC::VM *v43;
  double v44;
  __int16 v45;
  WTF::StringImpl *v46;
  WTF::StringImpl *v47;
  unint64_t v48;
  int v49;
  int v50;
  WTF *v51;
  WTF *v52;
  WTF::StringImpl *v53;
  WTF *v54;
  uint64_t v55;
  JSC::VM *v58;
  double v59;
  WTF::StringImpl *v60;
  unint64_t v61;
  JSC::VM *v62;
  double v63;
  JSC::VM *v64;
  double v65;
  __int16 v66;
  uint64_t v67;
  WTF::StringImpl *v68;
  WTF::StringImpl **v69;
  uint64_t v70;
  WTF::StringImpl *v71;
  WTF::StringImpl *v72;
  WTF::StringImpl *v73;
  JSValue v75;
  WTF::StringImpl *v76;
  WTF::StringImpl *v77;
  BOOL v78;
  int v79;
  uint64_t v80;
  int *v81;
  int v82;
  BOOL v83;
  int v84;
  uint64_t v85;
  int *v86;
  int v87;
  _DWORD *v88;
  WebCore::Node *v89;
  uint64_t v90;
  uint64_t v91;
  __int16 v92;
  WTF *v93;
  unint64_t v94;
  char v95;
  int v96;
  JSC::VM *v97;
  _QWORD v98[2];
  WTF::StringImpl *v99;
  WTF::StringImpl *v100;
  int v101;
  __int128 v102;
  WTF *v103;
  unint64_t v104;
  char v105;
  uint64_t v106;

  v9 = 2;
  v10 = *((_QWORD *)this + 7);
  v90 = v10;
  v11 = *((_QWORD *)a2 + 5);
  if ((v11 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v90, "MutationObserver", "observe");
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSMutationObserver::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSMutationObserver::s_info && v14 != 0);
  }
  if (!v13)
    return WebCore::throwThisTypeError((int)this, (int)&v90, "MutationObserver", "observe");
  v16 = *(_DWORD **)(v11 + 24);
  v97 = (JSC::VM *)v10;
  v17 = *((int *)a2 + 8);
  if ((_DWORD)v17 == 1)
  {
    v75.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException((JSC::VM *)v10, this, v75);
  }
  v18 = *((_QWORD *)a2 + 6);
  v91 = v10;
  if ((v18 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v18 + 5) < 0xF0u || (v19 = *(_QWORD *)(v18 + 24)) == 0)
  {
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v91, 0, "target", 7, "MutationObserver", 17, a8, "observe", 8, "Node", 5);
    return 0;
  }
  v89 = *(WebCore::Node **)(v18 + 24);
  if ((unint64_t)(v17 - 3) >= 0xFFFFFFFFFFFFFFFELL)
  {
    v106 = v10;
    goto LABEL_66;
  }
  v20 = (JSC::JSCell *)*((_QWORD *)a2 + 7);
  v106 = v10;
  if (((unint64_t)v20 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
LABEL_66:
    LODWORD(v19) = 0;
    LOBYTE(v103) = 0;
    v105 = 0;
    *(_DWORD *)((char *)&v102 + 1) = 0;
    *(_DWORD *)((char *)&v102 + 6) = 0;
    LOBYTE(v102) = 0;
    goto LABEL_67;
  }
  if (((unint64_t)v20 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v20)) == 0)
  {
    JSC::throwTypeError();
    v55 = 0;
    v49 = 1;
    v96 = 1;
    goto LABEL_83;
  }
  v22 = (JSC::Structure *)Object;
  LOBYTE(v103) = 0;
  v105 = 0;
  *(_DWORD *)((char *)&v102 + 1) = 0;
  *(_DWORD *)((char *)&v102 + 6) = 0;
  WTF::AtomStringImpl::addLiteral();
  v24 = JSC::JSObject::get(v22, this, (unint64_t)v99);
  if (v99)
  {
    if (*(_DWORD *)v99 == 2)
      WTF::StringImpl::destroy(v99, v23);
    else
      *(_DWORD *)v99 -= 2;
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    goto LABEL_169;
  if (v24 == 10)
    goto LABEL_21;
  WebCore::convert<WebCore::IDLSequence<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>>((uint64_t)&v99, this, v24);
  LODWORD(v19) = v101;
  if (v101)
  {
    v96 = 1;
  }
  else
  {
    v98[0] = v99;
    v72 = v100;
    v99 = 0;
    v100 = 0;
    v98[1] = v72;
    std::optional<WTF::Vector<WTF::AtomString,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>>::operator=[abi:sn180100]<WTF::Vector<WTF::AtomString,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>,void>((uint64_t)&v103, (WTF::StringImpl *)v98);
    WTF::Vector<WTF::AtomString,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((uint64_t)v98, v73);
  }
  if (v101 != -1)
    ((void (*)(_QWORD *, WTF::StringImpl **))off_1E32BF4D8[v101])(v98, &v99);
  if (!(_DWORD)v19)
  {
LABEL_21:
    WTF::AtomStringImpl::addLiteral();
    v25 = v99;
    v27 = JSC::JSObject::get(v22, this, (unint64_t)v99);
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, v26);
      else
        *(_DWORD *)v25 -= 2;
    }
    if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
      goto LABEL_169;
    if (v27 != 10)
    {
      v64 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v27 >= 0xFFFE000000000000)
      {
        v66 = (_DWORD)v27 != 0;
      }
      else
      {
        *(_QWORD *)&v65 = v27 - 0x2000000000000;
        if (v27 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
        {
          v66 = v65 > 0.0 || v65 < 0.0;
        }
        else if ((v27 & 0xFFFE000000000002) != 0)
        {
          v66 = v27 == 7;
        }
        else
        {
          v66 = JSC::JSCell::toBoolean(v27, (uint64_t)this);
        }
      }
      if (*((_DWORD *)v64 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v64) & 1) != 0)
        goto LABEL_169;
      WORD3(v102) = v66 | 0x100;
    }
    WTF::AtomStringImpl::addLiteral();
    v28 = v99;
    v30 = JSC::JSObject::get(v22, this, (unint64_t)v99);
    if (v28)
    {
      if (*(_DWORD *)v28 == 2)
        WTF::StringImpl::destroy(v28, v29);
      else
        *(_DWORD *)v28 -= 2;
    }
    if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
      goto LABEL_169;
    if (v30 != 10)
    {
      v31 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v30 >= 0xFFFE000000000000)
      {
        v33 = (_DWORD)v30 != 0;
      }
      else
      {
        *(_QWORD *)&v32 = v30 - 0x2000000000000;
        if (v30 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
        {
          v33 = v32 > 0.0 || v32 < 0.0;
        }
        else if ((v30 & 0xFFFE000000000002) != 0)
        {
          v33 = v30 == 7;
        }
        else
        {
          v33 = JSC::JSCell::toBoolean(v30, (uint64_t)this);
        }
      }
      if (*((_DWORD *)v31 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v31) & 1) != 0)
        goto LABEL_169;
      *(_WORD *)((char *)&v102 + 1) = v33 | 0x100;
    }
    WTF::AtomStringImpl::addLiteral();
    v34 = v99;
    v36 = JSC::JSObject::get(v22, this, (unint64_t)v99);
    if (v34)
    {
      if (*(_DWORD *)v34 == 2)
        WTF::StringImpl::destroy(v34, v35);
      else
        *(_DWORD *)v34 -= 2;
    }
    if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
      goto LABEL_169;
    if (v36 != 10)
    {
      v37 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v36 >= 0xFFFE000000000000)
      {
        v39 = (_DWORD)v36 != 0;
      }
      else
      {
        *(_QWORD *)&v38 = v36 - 0x2000000000000;
        if (v36 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
        {
          v39 = v38 > 0.0 || v38 < 0.0;
        }
        else if ((v36 & 0xFFFE000000000002) != 0)
        {
          v39 = v36 == 7;
        }
        else
        {
          v39 = JSC::JSCell::toBoolean(v36, (uint64_t)this);
        }
      }
      if (*((_DWORD *)v37 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v37) & 1) != 0)
        goto LABEL_169;
      *(_WORD *)((char *)&v102 + 3) = v39 | 0x100;
    }
    WTF::AtomStringImpl::addLiteral();
    v40 = v99;
    v42 = JSC::JSObject::get(v22, this, (unint64_t)v99);
    if (v40)
    {
      if (*(_DWORD *)v40 == 2)
        WTF::StringImpl::destroy(v40, v41);
      else
        *(_DWORD *)v40 -= 2;
    }
    if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
      goto LABEL_169;
    if (v42 != 10)
    {
      v43 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v42 >= 0xFFFE000000000000)
      {
        v45 = (_DWORD)v42 != 0;
      }
      else
      {
        *(_QWORD *)&v44 = v42 - 0x2000000000000;
        if (v42 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
        {
          v45 = v44 > 0.0 || v44 < 0.0;
        }
        else if ((v42 & 0xFFFE000000000002) != 0)
        {
          v45 = v42 == 7;
        }
        else
        {
          v45 = JSC::JSCell::toBoolean(v42, (uint64_t)this);
        }
      }
      if (*((_DWORD *)v43 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v43) & 1) != 0)
        goto LABEL_169;
      WORD4(v102) = v45 | 0x100;
    }
    WTF::AtomStringImpl::addLiteral();
    v46 = v99;
    v48 = JSC::JSObject::get(v22, this, (unint64_t)v99);
    if (v46)
    {
      if (*(_DWORD *)v46 == 2)
        WTF::StringImpl::destroy(v46, v47);
      else
        *(_DWORD *)v46 -= 2;
    }
    if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
      goto LABEL_169;
    if (v48 == 10)
    {
      LODWORD(v19) = 0;
      goto LABEL_96;
    }
    v58 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v48 >= 0xFFFE000000000000)
    {
      v78 = (_DWORD)v48 == 0;
      goto LABEL_197;
    }
    *(_QWORD *)&v59 = v48 - 0x2000000000000;
    if (v48 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      if (v59 <= 0.0)
      {
        LODWORD(v19) = v59 < 0.0;
        goto LABEL_95;
      }
    }
    else
    {
      if ((v48 & 0xFFFE000000000002) != 0)
      {
        LODWORD(v19) = v48 == 7;
        goto LABEL_95;
      }
      v79 = *(unsigned __int8 *)(v48 + 5);
      if (v79 == 3)
      {
        v82 = *(_DWORD *)(v48 + 8);
LABEL_230:
        v78 = v82 == 0;
        goto LABEL_197;
      }
      if (v79 == 2)
      {
        v80 = *(_QWORD *)(v48 + 8);
        if ((v80 & 1) != 0)
          v81 = (int *)(v48 + 16);
        else
          v81 = (int *)(v80 + 4);
        v82 = *v81;
        goto LABEL_230;
      }
      if ((*(_BYTE *)(16 * (*(_DWORD *)v48 & 0xFFFFFFFE) + 0xA) & 1) != 0)
      {
        v78 = *(_QWORD *)(16 * (*(_DWORD *)v48 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_197:
        LODWORD(v19) = !v78;
LABEL_95:
        if (*((_DWORD *)v58 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v58) & 1) != 0)
          goto LABEL_169;
LABEL_96:
        LOBYTE(v102) = v19;
        WTF::AtomStringImpl::addLiteral();
        v60 = v99;
        v61 = JSC::JSObject::get(v22, this, (unint64_t)v99);
        if (v60)
        {
          if (*(_DWORD *)v60 == 2)
            WTF::StringImpl::destroy(v60, a2);
          else
            *(_DWORD *)v60 -= 2;
        }
        if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
          goto LABEL_169;
        if (v61 == 10)
        {
          LODWORD(v19) = 0;
LABEL_67:
          BYTE5(v102) = v19;
          v92 = WORD4(v102);
          v91 = v102;
          LOBYTE(v93) = 0;
          v95 = 0;
          if (v105)
          {
            v49 = 0;
            v93 = v103;
            LODWORD(v19) = v104;
            v9 = HIDWORD(v104);
            v103 = 0;
            v104 = 0;
            v94 = __PAIR64__(v9, v19);
            v50 = 1;
            v95 = 1;
          }
          else
          {
            v50 = 0;
            v49 = 0;
          }
          goto LABEL_69;
        }
        v62 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v61 >= 0xFFFE000000000000)
        {
          v83 = (_DWORD)v61 == 0;
          goto LABEL_209;
        }
        *(_QWORD *)&v63 = v61 - 0x2000000000000;
        if (v61 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
        {
          if (v63 <= 0.0)
          {
            LODWORD(v19) = v63 < 0.0;
            goto LABEL_106;
          }
        }
        else
        {
          if ((v61 & 0xFFFE000000000002) != 0)
          {
            LODWORD(v19) = v61 == 7;
            goto LABEL_106;
          }
          v84 = *(unsigned __int8 *)(v61 + 5);
          if (v84 == 3)
          {
            v87 = *(_DWORD *)(v61 + 8);
LABEL_234:
            v83 = v87 == 0;
            goto LABEL_209;
          }
          if (v84 == 2)
          {
            v85 = *(_QWORD *)(v61 + 8);
            if ((v85 & 1) != 0)
              v86 = (int *)(v61 + 16);
            else
              v86 = (int *)(v85 + 4);
            v87 = *v86;
            goto LABEL_234;
          }
          if ((*(_BYTE *)(16 * (*(_DWORD *)v61 & 0xFFFFFFFE) + 0xA) & 1) != 0)
          {
            v83 = *(_QWORD *)(16 * (*(_DWORD *)v61 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_209:
            LODWORD(v19) = !v83;
LABEL_106:
            if (!*((_DWORD *)v62 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v62) & 1) == 0)
              goto LABEL_67;
LABEL_169:
            v50 = 0;
            v49 = 1;
LABEL_69:
            v96 = v49;
            goto LABEL_70;
          }
        }
        LODWORD(v19) = 1;
        goto LABEL_106;
      }
    }
    LODWORD(v19) = 1;
    goto LABEL_95;
  }
  v50 = 0;
  v49 = 1;
LABEL_70:
  if (v105)
  {
    v51 = v103;
    if (HIDWORD(v104))
    {
      v88 = v16;
      v67 = 8 * HIDWORD(v104);
      do
      {
        v68 = *(WTF::StringImpl **)v51;
        *(_QWORD *)v51 = 0;
        if (v68)
        {
          if (*(_DWORD *)v68 == 2)
            WTF::StringImpl::destroy(v68, a2);
          else
            *(_DWORD *)v68 -= 2;
        }
        v51 = (WTF *)((char *)v51 + 8);
        v67 -= 8;
      }
      while (v67);
      v51 = v103;
      v16 = v88;
    }
    if (v51)
    {
      v103 = 0;
      LODWORD(v104) = 0;
      WTF::fastFree(v51, a2);
    }
  }
  if (v49)
    goto LABEL_182;
  *(_QWORD *)&v102 = v91;
  WORD4(v102) = v92;
  LOBYTE(v103) = 0;
  v105 = 0;
  if (v50)
  {
    v52 = v93;
    v93 = 0;
    v94 = 0;
    v103 = v52;
    v104 = __PAIR64__(v9, v19);
    v105 = 1;
  }
  WebCore::MutationObserver::observe(v16, v89, (uint64_t)&v102, &v99);
  if (v105)
  {
    if (HIDWORD(v104))
    {
      v69 = (WTF::StringImpl **)v103;
      v70 = 8 * HIDWORD(v104);
      do
      {
        v71 = *v69;
        *v69 = 0;
        if (v71)
        {
          if (*(_DWORD *)v71 == 2)
            WTF::StringImpl::destroy(v71, v53);
          else
            *(_DWORD *)v71 -= 2;
        }
        ++v69;
        v70 -= 8;
      }
      while (v70);
    }
    v54 = v103;
    if (v103)
    {
      v103 = 0;
      LODWORD(v104) = 0;
      WTF::fastFree(v54, v53);
    }
  }
  if ((_BYTE)v101)
  {
    LOBYTE(v102) = (_BYTE)v99;
    v76 = v100;
    v100 = 0;
    *((_QWORD *)&v102 + 1) = v76;
    if (!*(_QWORD *)(v10 + 16))
    {
      WebCore::propagateExceptionSlowPath(this, &v97, (unsigned __int8 *)&v102);
      v76 = (WTF::StringImpl *)*((_QWORD *)&v102 + 1);
    }
    *((_QWORD *)&v102 + 1) = 0;
    if (v76)
    {
      if (*(_DWORD *)v76 == 2)
        WTF::StringImpl::destroy(v76, v53);
      else
        *(_DWORD *)v76 -= 2;
    }
    if ((_BYTE)v101)
    {
      v77 = v100;
      v100 = 0;
      if (v77)
      {
        if (*(_DWORD *)v77 != 2)
        {
          v55 = 0;
          *(_DWORD *)v77 -= 2;
          goto LABEL_83;
        }
        WTF::StringImpl::destroy(v77, v53);
      }
    }
LABEL_182:
    v55 = 0;
    goto LABEL_83;
  }
  v55 = 10;
LABEL_83:
  ((void (*)(__int128 *, uint64_t *))off_1E32BF598[v49])(&v102, &v91);
  return (_BYTE *)v55;
}

uint64_t WebCore::jsMutationObserverPrototypeFunction_disconnect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "MutationObserver", "disconnect");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSMutationObserver::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSMutationObserver::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "MutationObserver", "disconnect");
  WebCore::MutationObserver::disconnect(*(WebCore::MutationObserver **)(v3 + 24), a2);
  return 10;
}

_BYTE *WebCore::jsMutationObserverPrototypeFunction_takeRecords(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v8;
  WTF *v9;
  int v10;
  uint64_t v11;
  uint64_t *v12;
  void *v13;
  uint64_t v14;
  uint64_t v17;
  WTF *v18;
  int v19;
  int v20;
  uint64_t *v21;

  v3 = *((_QWORD *)a2 + 5);
  v17 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v17, "MutationObserver", "takeRecords");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSMutationObserver::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSMutationObserver::s_info && v6 != 0);
  }
  if (!v5)
    return WebCore::throwThisTypeError((int)this, (int)&v17, "MutationObserver", "takeRecords");
  v8 = *(_QWORD *)(v3 + 24);
  v9 = *(WTF **)(v8 + 16);
  v18 = v9;
  v10 = *(_DWORD *)(v8 + 24);
  v11 = *(unsigned int *)(v8 + 28);
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = 0;
  v19 = v10;
  v20 = v11;
  v12 = *(uint64_t **)(v8 + 32);
  *(_QWORD *)(v8 + 32) = 0;
  v21 = v12;
  v14 = WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLInterface<WebCore::MutationRecord>>>::convert<WTF::Ref<WebCore::MutationRecord,WTF::RawPtrTraits<WebCore::MutationRecord>,WTF::DefaultRefDerefTraits<WebCore::MutationRecord>>,0ul>((uint64_t)this, *(_QWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28), (uint64_t)&v18);
  if (v12)
    WTF::HashTable<WebCore::GCReachableRef<WebCore::Node,void>,WebCore::GCReachableRef<WebCore::Node,void>,WTF::IdentityExtractor,WTF::DefaultHash<WebCore::GCReachableRef<WebCore::Node,void>>,WTF::HashTraits<WebCore::GCReachableRef<WebCore::Node,void>>,WTF::HashTraits<WebCore::GCReachableRef<WebCore::Node,void>>>::deallocateTable(v12, v13);
  if ((_DWORD)v11)
    WTF::VectorDestructor<true,WTF::Ref<WebCore::MutationRecord,WTF::RawPtrTraits<WebCore::MutationRecord>,WTF::DefaultRefDerefTraits<WebCore::MutationRecord>>>::destruct(v9, (_DWORD **)v9 + v11);
  if (v9)
    WTF::fastFree(v9, v13);
  return (_BYTE *)v14;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore16MutationObserver4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF *v4;
  WTF::StringImpl **v5;
  uint64_t v6;
  WTF::StringImpl *v7;

  if (*(_BYTE *)(a2 + 32))
  {
    v3 = *(unsigned int *)(a2 + 28);
    if ((_DWORD)v3)
    {
      v5 = *(WTF::StringImpl ***)(a2 + 16);
      v6 = 8 * v3;
      do
      {
        v7 = *v5;
        *v5 = 0;
        if (v7)
        {
          if (*(_DWORD *)v7 == 2)
            WTF::StringImpl::destroy(v7, (WTF::StringImpl *)a2);
          else
            *(_DWORD *)v7 -= 2;
        }
        ++v5;
        v6 -= 8;
      }
      while (v6);
    }
    v4 = *(WTF **)(a2 + 16);
    if (v4)
    {
      *(_QWORD *)(a2 + 16) = 0;
      *(_DWORD *)(a2 + 24) = 0;
      WTF::fastFree(v4, (void *)a2);
    }
  }
}

uint64_t WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLInterface<WebCore::MutationRecord>>>::convert<WTF::Ref<WebCore::MutationRecord,WTF::RawPtrTraits<WebCore::MutationRecord>,WTF::DefaultRefDerefTraits<WebCore::MutationRecord>>,0ul>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  JSC::VM *v5;
  unsigned int v6;
  JSC::VM *v7;
  void *v8;
  uint64_t v9;
  uint64_t *v10;
  _DWORD **v12;
  uint64_t v13;
  objc_class *v14;
  JSValue v15;
  _QWORD *v16;
  WTF *v17;
  int v18;
  BOOL v19[8];
  uint64_t v20;
  WTF *v21;
  _OWORD v22[4];
  uint64_t v23;
  JSC::VM *v24;

  v5 = *(JSC::VM **)(a1 + 56);
  v24 = v5;
  v19[0] = 0;
  v20 = 0x800000000;
  v21 = (WTF *)((char *)v22 + 8);
  memset(v22, 0, sizeof(v22));
  v23 = 0;
  v6 = *(_DWORD *)(a3 + 12);
  if (v6 >= 9)
  {
    v19[0] = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v20) == 1;
    v6 = *(_DWORD *)(a3 + 12);
  }
  if (v6)
  {
    v12 = *(_DWORD ***)a3;
    v13 = 8 * v6;
    while (1)
    {
      v14 = (objc_class *)WebCore::wrap<WebCore::MutationRecord>(a2, *v12);
      if (*((_DWORD *)v5 + 20))
      {
        if ((JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
          break;
      }
      v15.super.isa = v14;
      JSC::MarkedVector<JSC::JSValue,8ul,WTF::RecordOverflow>::append((uint64_t)v19, v15);
      ++v12;
      v13 -= 8;
      if (!v13)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    if (v19[0])
    {
      JSC::throwOutOfMemoryError();
    }
    else
    {
      v17 = v21;
      v18 = v20;
      v7 = *(JSC::VM **)(a2 + 56);
      if (!*((_DWORD *)v7 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v7) & 1) == 0)
      {
        v9 = JSC::constructArray();
        goto LABEL_7;
      }
    }
  }
  v9 = 0;
LABEL_7:
  v10 = *(uint64_t **)&v22[0];
  if (*(_QWORD *)&v22[0])
  {
    v17 = (WTF *)&v20;
    v16 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v22[0], (uint64_t *)&v17);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v10, v16);
  }
  if (v21 != (WTF *)((char *)v22 + 8) && v21)
    WTF::fastFree(v21, v8);
  return v9;
}

uint64_t WTF::HashTable<WebCore::GCReachableRef<WebCore::Node,void>,WebCore::GCReachableRef<WebCore::Node,void>,WTF::IdentityExtractor,WTF::DefaultHash<WebCore::GCReachableRef<WebCore::Node,void>>,WTF::HashTraits<WebCore::GCReachableRef<WebCore::Node,void>>,WTF::HashTraits<WebCore::GCReachableRef<WebCore::Node,void>>>::deallocateTable(uint64_t *a1, void *a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v3 = *((unsigned int *)a1 - 1);
  if ((_DWORD)v3)
  {
    v4 = a1;
    do
    {
      v5 = *v4;
      if (*v4 != -1)
      {
        if (v5)
        {
          {
            WebCore::GCReachableRefMap::map(void)::map = 0;
          }
          v8 = v5;
          if (WTF::HashCountedSet<WebCore::EventTarget *,WTF::DefaultHash<WebCore::EventTarget *>,WTF::HashTraits<WebCore::EventTarget *>>::remove(&WebCore::GCReachableRefMap::map(void)::map, &v8))*(_QWORD *)(v5 + 16) &= ~0x4000000000000uLL;
          v6 = *v4;
          *v4 = 0;
          if (v6)
          {
            if (*(_DWORD *)(v6 + 24) == 2)
            {
              if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
                WebCore::Node::removedLastRef((WebCore::Node *)v6);
            }
            else
            {
              *(_DWORD *)(v6 + 24) -= 2;
            }
          }
        }
        else
        {
          *v4 = 0;
        }
      }
      ++v4;
      --v3;
    }
    while (v3);
  }
  return WTF::fastFree((WTF *)(a1 - 2), a2);
}

_DWORD *WTF::VectorDestructor<true,WTF::Ref<WebCore::MutationRecord,WTF::RawPtrTraits<WebCore::MutationRecord>,WTF::DefaultRefDerefTraits<WebCore::MutationRecord>>>::destruct(_DWORD *result, _DWORD **a2)
{
  _DWORD **v3;

  if (result != (_DWORD *)a2)
  {
    v3 = (_DWORD **)result;
    do
    {
      result = *v3;
      *v3 = 0;
      if (result)
      {
        if (result[2] == 1)
          result = (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
        else
          --result[2];
      }
      ++v3;
    }
    while (v3 != a2);
  }
  return result;
}

uint64_t WebCore::jsNamedNodeMapPrototypeFunction_item(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  unsigned int *v11;
  uint64_t v12;
  WTF::String *v13;
  __n128 v14;
  JSC::VM *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  JSValue v21;
  JSC::VM *v22;
  uint64_t v23;
  unsigned int v24[2];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v22 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v22, "NamedNodeMap", "item");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSNamedNodeMap::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSNamedNodeMap::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v22, "NamedNodeMap", "item");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v21);
  }
  v11 = *(unsigned int **)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v24);
  if (v24[1])
    return 0;
  v15 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  WebCore::NamedNodeMap::item(v11, (unsigned __int8 *)v24[0], v12, v13, &v23, v14);
  v16 = v23;
  if (!v23)
    return 2;
  v18 = WebCore::wrap<WebCore::Attr>((int)this, v15, v23);
  if (*(_DWORD *)(v16 + 24) == 2)
  {
    if ((*(_WORD *)(v16 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v16, v17);
  }
  else
  {
    *(_DWORD *)(v16 + 24) -= 2;
  }
  return v18;
}

_BYTE *WebCore::jsNamedNodeMapPrototypeFunction_getNamedItem(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  WTF::String *v13;
  __n128 v14;
  int v15;
  JSC::VM *v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  WebCore::Node *v21;
  WTF::StringImpl *v22;
  JSValue v25;
  JSC::VM *v26;
  WTF::StringImpl *v27;
  WebCore::Node *v28;
  WTF::StringImpl *v29;
  int v30;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "NamedNodeMap", "getNamedItem");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSNamedNodeMap::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSNamedNodeMap::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "NamedNodeMap", "getNamedItem");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v25);
  }
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v29);
  v15 = v30;
  if (v30)
  {
    v20 = 0;
  }
  else
  {
    v16 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
    v17 = v29;
    v29 = 0;
    v27 = v17;
    v18 = *(_QWORD *)(*(_QWORD *)(v11 + 8) + 8);
    *(_DWORD *)(v18 + 24) += 2;
    WebCore::Element::getAttributeNode(v18, (const WTF::AtomString *)&v27, v12, v13, &v28, v14);
    if (*(_DWORD *)(v18 + 24) == 2)
    {
      if ((*(_WORD *)(v18 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v18, v19);
    }
    else
    {
      *(_DWORD *)(v18 + 24) -= 2;
    }
    if (v28)
    {
      v20 = WebCore::wrap<WebCore::Attr>((int)this, v16, (uint64_t)v28);
      v21 = v28;
      v28 = 0;
      if (v21)
      {
        if (*((_DWORD *)v21 + 6) == 2)
        {
          if ((*((_WORD *)v21 + 15) & 0x400) == 0)
            WebCore::Node::removedLastRef(v21, v19);
        }
        else
        {
          *((_DWORD *)v21 + 6) -= 2;
        }
      }
    }
    else
    {
      v28 = 0;
      v20 = 2;
    }
    v22 = v27;
    v27 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, (WTF::StringImpl *)v19);
      else
        *(_DWORD *)v22 -= 2;
    }
    v15 = v30;
  }
  if (v15 != -1)
    ((void (*)(WebCore::Node **, WTF::StringImpl **))off_1E32BEAA0[v15])(&v28, &v29);
  return (_BYTE *)v20;
}

_BYTE *WebCore::jsNamedNodeMapPrototypeFunction_getNamedItemNS(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  int v3;
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  uint64_t v13;
  int v14;
  JSC::VM *v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  WebCore::Node *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  JSValue v26;
  JSC::VM *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  WebCore::Node *v30;
  WTF::StringImpl *v31;
  int v32;
  WTF::StringImpl *v33;
  int v34;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v27 = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "NamedNodeMap", "getNamedItemNS");
  v8 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v9 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v10 = (char **)(16 * v8);
  if ((_DWORD)v8)
    v11 = v10 == &WebCore::JSNamedNodeMap::s_info;
  else
    v11 = 1;
  if (!v11)
  {
    do
    {
      v10 = (char **)v10[2];
      v9 = v10 != 0;
    }
    while (v10 != &WebCore::JSNamedNodeMap::s_info && v10 != 0);
  }
  if (!v9)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "NamedNodeMap", "getNamedItemNS");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v26.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v5, this, v26);
  }
  v13 = *(_QWORD *)(v6 + 24);
  if ((*((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v31 = 0;
    v32 = 0;
  }
  else
  {
    WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v33);
    LOBYTE(v31) = 0;
    v32 = -1;
    v3 = v34;
    if (v34 == -1)
      return 0;
    ((void (*)(WebCore::Node **, WTF::StringImpl **, WTF::StringImpl **))off_1E32BF8A0[v34])(&v30, &v31, &v33);
    v32 = v3;
    if (v34 != -1)
    {
      ((void (*)(WebCore::Node **, WTF::StringImpl **))off_1E32BEAA0[v34])(&v30, &v33);
      v3 = v32;
    }
    if (v3)
      goto LABEL_53;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 7), (uint64_t)&v33);
  v14 = v34;
  if (v34)
  {
    v20 = 0;
LABEL_33:
    if (v14 != -1)
      ((void (*)(WebCore::Node **, WTF::StringImpl **))off_1E32BEAA0[v14])(&v30, &v33);
    v3 = v32;
    goto LABEL_36;
  }
  if (!v32)
  {
    v15 = *(JSC::VM **)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x28);
    v16 = v31;
    v31 = 0;
    v17 = v33;
    v33 = 0;
    v28 = v17;
    v29 = v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v13 + 8) + 8);
    *(_DWORD *)(v18 + 24) += 2;
    WebCore::Element::getAttributeNodeNS((WebCore::QualifiedName::QualifiedNameImpl *)v18, &v29, &v28, (uint64_t *)&v30);
    if (*(_DWORD *)(v18 + 24) == 2)
    {
      if ((*(_WORD *)(v18 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v18, v19);
    }
    else
    {
      *(_DWORD *)(v18 + 24) -= 2;
    }
    if (v30)
    {
      v20 = WebCore::wrap<WebCore::Attr>((int)this, v15, (uint64_t)v30);
      v21 = v30;
      v30 = 0;
      if (v21)
      {
        if (*((_DWORD *)v21 + 6) == 2)
        {
          if ((*((_WORD *)v21 + 15) & 0x400) == 0)
            WebCore::Node::removedLastRef(v21, v19);
        }
        else
        {
          *((_DWORD *)v21 + 6) -= 2;
        }
      }
    }
    else
    {
      v30 = 0;
      v20 = 2;
    }
    v22 = v28;
    v28 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, (WTF::StringImpl *)v19);
      else
        *(_DWORD *)v22 -= 2;
    }
    v23 = v29;
    v29 = 0;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, (WTF::StringImpl *)v19);
      else
        *(_DWORD *)v23 -= 2;
    }
    v14 = v34;
    goto LABEL_33;
  }
  std::__throw_bad_variant_access[abi:sn180100]();
LABEL_53:
  v20 = 0;
LABEL_36:
  if (v3 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32BEAA0[v3])(&v33, &v31);
  return (_BYTE *)v20;
}

_BYTE *WebCore::jsNamedNodeMapPrototypeFunction_setNamedItem(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  WebCore::Attr *v24;
  JSC::VM *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  WTF *v30;
  JSValue v33;
  WTF *v34;
  uint64_t v35;
  uint64_t v36;
  WTF::StringImpl *v37;
  JSValue v38;
  WebCore *v39;
  JSC::JSGlobalObject *v40;
  JSC::CallFrame *v41;
  JSC::VM *v42;
  int v43[2];
  WTF::StringImpl *v44;
  int v45;
  WTF *v46;
  uint64_t v47;
  _BYTE v48[40];
  uint64_t v49;
  JSC::JSGlobalObject *v50;
  _BYTE v51[8];
  WTF::StringImpl *v52;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v42 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v42, "NamedNodeMap", "setNamedItem");
  v11 = 16 * (*(_DWORD *)v10 & 0xFFFFFFFE);
  v12 = *(unsigned int *)(v11 + 0x4C);
  v13 = *(_DWORD *)(v11 + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSNamedNodeMap::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSNamedNodeMap::s_info && v14 != 0);
  }
  if (!v13)
    return WebCore::throwThisTypeError((int)this, (int)&v42, "NamedNodeMap", "setNamedItem");
  v46 = (WTF *)v48;
  v47 = 4;
  v48[32] = 0;
  v49 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v50 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v46;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v33.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    v29 = JSC::VM::throwException(v9, this, v33);
    goto LABEL_33;
  }
  v17 = *(_QWORD *)(v10 + 24);
  v18 = *((_QWORD *)a2 + 6);
  *(_QWORD *)v43 = v9;
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_47;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSAttr::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSAttr::s_info && v21 != 0);
  }
  if (!v20 || (v24 = *(WebCore::Attr **)(v18 + 24)) == 0)
  {
LABEL_47:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v43, 0, "attr", 5, "NamedNodeMap", 13, a8, "setNamedItem", 13, "Attr", 5);
    v29 = 0;
LABEL_33:
    if (HIDWORD(v47))
    {
      WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v46, v50);
      WebCore::CustomElementReactionStack::s_currentProcessingStack = v49;
      if (HIDWORD(v47))
      {
        v34 = v46;
        v35 = 8 * HIDWORD(v47);
        do
        {
          v36 = *(_QWORD *)v34;
          *(_QWORD *)v34 = 0;
          if (v36)
          {
            if (*(_DWORD *)(v36 + 24) == 2)
            {
              if ((*(_WORD *)(v36 + 30) & 0x400) == 0)
                WebCore::Node::removedLastRef((WebCore::Node *)v36, v27);
            }
            else
            {
              *(_DWORD *)(v36 + 24) -= 2;
            }
          }
          v34 = (WTF *)((char *)v34 + 8);
          v35 -= 8;
        }
        while (v35);
      }
    }
    else
    {
      WebCore::CustomElementReactionStack::s_currentProcessingStack = v49;
    }
    v30 = v46;
    if (v48 != (_BYTE *)v46 && v46 != 0)
    {
      v46 = 0;
      LODWORD(v47) = 0;
      WTF::fastFree(v30, v27);
    }
    return (_BYTE *)v29;
  }
  v25 = *(JSC::VM **)(v11 + 40);
  v26 = *(_QWORD *)(*(_QWORD *)(v17 + 8) + 8);
  *(_DWORD *)(v26 + 24) += 2;
  WebCore::Element::setAttributeNode((WebCore::Element *)v26, v24, (uint64_t)v43);
  if (*(_DWORD *)(v26 + 24) == 2)
  {
    if ((*(_WORD *)(v26 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v26, v27);
  }
  else
  {
    *(_DWORD *)(v26 + 24) -= 2;
  }
  if (!v45)
  {
    v28 = *(_QWORD *)v43;
    *(_QWORD *)v43 = 0;
    if (v28)
    {
      v29 = WebCore::wrap<WebCore::Attr>((int)this, v25, v28);
      if (*(_DWORD *)(v28 + 24) == 2)
      {
        if ((*(_WORD *)(v28 + 30) & 0x400) == 0)
          WebCore::Node::removedLastRef((WebCore::Node *)v28, v27);
      }
      else
      {
        *(_DWORD *)(v28 + 24) -= 2;
      }
    }
    else
    {
      v29 = 2;
    }
LABEL_31:
    if (v45 != -1)
      ((void (*)(_BYTE *, int *))off_1E32BF8B0[v45])(v51, v43);
    goto LABEL_33;
  }
  if (v45 == 1)
  {
    v27 = (void *)LOBYTE(v43[0]);
    v51[0] = v43[0];
    v37 = v44;
    v44 = 0;
    v52 = v37;
    if (!*((_QWORD *)v9 + 2))
    {
      v38.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v43[0]), (JSC::JSGlobalObject *)&v52);
      JSC::VM::throwException(v9, this, v38);
      v37 = v52;
    }
    v52 = 0;
    if (v37)
    {
      if (*(_DWORD *)v37 == 2)
        WTF::StringImpl::destroy(v37, (WTF::StringImpl *)v27);
      else
        *(_DWORD *)v37 -= 2;
    }
    v29 = 0;
    goto LABEL_31;
  }
  v39 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsNamedNodeMapPrototypeFunction_setNamedItemNS(v39, v40, v41);
}

_BYTE *WebCore::jsNamedNodeMapPrototypeFunction_setNamedItemNS(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  WebCore::Attr *v24;
  JSC::VM *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  WTF *v30;
  JSValue v33;
  WTF *v34;
  uint64_t v35;
  uint64_t v36;
  WTF::StringImpl *v37;
  JSValue v38;
  WebCore *v39;
  JSC::JSGlobalObject *v40;
  JSC::CallFrame *v41;
  JSC::VM *v42;
  int v43[2];
  WTF::StringImpl *v44;
  int v45;
  WTF *v46;
  uint64_t v47;
  _BYTE v48[40];
  uint64_t v49;
  JSC::JSGlobalObject *v50;
  _BYTE v51[8];
  WTF::StringImpl *v52;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v42 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v42, "NamedNodeMap", "setNamedItemNS");
  v11 = 16 * (*(_DWORD *)v10 & 0xFFFFFFFE);
  v12 = *(unsigned int *)(v11 + 0x4C);
  v13 = *(_DWORD *)(v11 + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSNamedNodeMap::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSNamedNodeMap::s_info && v14 != 0);
  }
  if (!v13)
    return WebCore::throwThisTypeError((int)this, (int)&v42, "NamedNodeMap", "setNamedItemNS");
  v46 = (WTF *)v48;
  v47 = 4;
  v48[32] = 0;
  v49 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v50 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v46;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v33.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    v29 = JSC::VM::throwException(v9, this, v33);
    goto LABEL_33;
  }
  v17 = *(_QWORD *)(v10 + 24);
  v18 = *((_QWORD *)a2 + 6);
  *(_QWORD *)v43 = v9;
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_47;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSAttr::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSAttr::s_info && v21 != 0);
  }
  if (!v20 || (v24 = *(WebCore::Attr **)(v18 + 24)) == 0)
  {
LABEL_47:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v43, 0, "attr", 5, "NamedNodeMap", 13, a8, "setNamedItemNS", 15, "Attr", 5);
    v29 = 0;
LABEL_33:
    if (HIDWORD(v47))
    {
      WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v46, v50);
      WebCore::CustomElementReactionStack::s_currentProcessingStack = v49;
      if (HIDWORD(v47))
      {
        v34 = v46;
        v35 = 8 * HIDWORD(v47);
        do
        {
          v36 = *(_QWORD *)v34;
          *(_QWORD *)v34 = 0;
          if (v36)
          {
            if (*(_DWORD *)(v36 + 24) == 2)
            {
              if ((*(_WORD *)(v36 + 30) & 0x400) == 0)
                WebCore::Node::removedLastRef((WebCore::Node *)v36, v27);
            }
            else
            {
              *(_DWORD *)(v36 + 24) -= 2;
            }
          }
          v34 = (WTF *)((char *)v34 + 8);
          v35 -= 8;
        }
        while (v35);
      }
    }
    else
    {
      WebCore::CustomElementReactionStack::s_currentProcessingStack = v49;
    }
    v30 = v46;
    if (v48 != (_BYTE *)v46 && v46 != 0)
    {
      v46 = 0;
      LODWORD(v47) = 0;
      WTF::fastFree(v30, v27);
    }
    return (_BYTE *)v29;
  }
  v25 = *(JSC::VM **)(v11 + 40);
  v26 = *(_QWORD *)(*(_QWORD *)(v17 + 8) + 8);
  *(_DWORD *)(v26 + 24) += 2;
  WebCore::Element::setAttributeNode((WebCore::Element *)v26, v24, (uint64_t)v43);
  if (*(_DWORD *)(v26 + 24) == 2)
  {
    if ((*(_WORD *)(v26 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v26, v27);
  }
  else
  {
    *(_DWORD *)(v26 + 24) -= 2;
  }
  if (!v45)
  {
    v28 = *(_QWORD *)v43;
    *(_QWORD *)v43 = 0;
    if (v28)
    {
      v29 = WebCore::wrap<WebCore::Attr>((int)this, v25, v28);
      if (*(_DWORD *)(v28 + 24) == 2)
      {
        if ((*(_WORD *)(v28 + 30) & 0x400) == 0)
          WebCore::Node::removedLastRef((WebCore::Node *)v28, v27);
      }
      else
      {
        *(_DWORD *)(v28 + 24) -= 2;
      }
    }
    else
    {
      v29 = 2;
    }
LABEL_31:
    if (v45 != -1)
      ((void (*)(_BYTE *, int *))off_1E32BF8B0[v45])(v51, v43);
    goto LABEL_33;
  }
  if (v45 == 1)
  {
    v27 = (void *)LOBYTE(v43[0]);
    v51[0] = v43[0];
    v37 = v44;
    v44 = 0;
    v52 = v37;
    if (!*((_QWORD *)v9 + 2))
    {
      v38.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v43[0]), (JSC::JSGlobalObject *)&v52);
      JSC::VM::throwException(v9, this, v38);
      v37 = v52;
    }
    v52 = 0;
    if (v37)
    {
      if (*(_DWORD *)v37 == 2)
        WTF::StringImpl::destroy(v37, (WTF::StringImpl *)v27);
      else
        *(_DWORD *)v37 -= 2;
    }
    v29 = 0;
    goto LABEL_31;
  }
  v39 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsNamedNodeMapPrototypeFunction_removeNamedItem(v39, v40, v41);
}

_BYTE *WebCore::jsNamedNodeMapPrototypeFunction_removeNamedItem(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  unsigned int *v11;
  void *v12;
  uint64_t v13;
  WTF::String *v14;
  __n128 v15;
  int v16;
  JSC::VM *v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  WTF::StringImpl *v23;
  WTF *v24;
  JSValue v27;
  WTF *v28;
  uint64_t v29;
  uint64_t v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  JSValue v33;
  WebCore *v34;
  JSC::JSGlobalObject *v35;
  JSC::CallFrame *v36;
  JSC::VM *v37;
  WTF::StringImpl *v38;
  int v39[2];
  WTF::StringImpl *v40;
  unsigned int v41;
  WTF::StringImpl *v42;
  int v43;
  WTF *v44;
  uint64_t v45;
  _BYTE v46[40];
  uint64_t v47;
  JSC::JSGlobalObject *v48;
  _BYTE v49[8];
  WTF::StringImpl *v50;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v37 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v37, "NamedNodeMap", "removeNamedItem");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSNamedNodeMap::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSNamedNodeMap::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v37, "NamedNodeMap", "removeNamedItem");
  v44 = (WTF *)v46;
  v45 = 4;
  v46[32] = 0;
  v47 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v48 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v44;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v27.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    v22 = JSC::VM::throwException(v4, this, v27);
LABEL_23:
    if (HIDWORD(v45))
    {
      WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v44, v48);
      WebCore::CustomElementReactionStack::s_currentProcessingStack = v47;
      if (HIDWORD(v45))
      {
        v28 = v44;
        v29 = 8 * HIDWORD(v45);
        do
        {
          v30 = *(_QWORD *)v28;
          *(_QWORD *)v28 = 0;
          if (v30)
          {
            if (*(_DWORD *)(v30 + 24) == 2)
            {
              if ((*(_WORD *)(v30 + 30) & 0x400) == 0)
                WebCore::Node::removedLastRef((WebCore::Node *)v30, v12);
            }
            else
            {
              *(_DWORD *)(v30 + 24) -= 2;
            }
          }
          v28 = (WTF *)((char *)v28 + 8);
          v29 -= 8;
        }
        while (v29);
      }
    }
    else
    {
      WebCore::CustomElementReactionStack::s_currentProcessingStack = v47;
    }
    v24 = v44;
    if (v46 != (_BYTE *)v44 && v44 != 0)
    {
      v44 = 0;
      LODWORD(v45) = 0;
      WTF::fastFree(v24, v12);
    }
    return (_BYTE *)v22;
  }
  v11 = *(unsigned int **)(v5 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v42);
  v16 = v43;
  if (v43)
  {
    v22 = 0;
LABEL_21:
    if (v16 != -1)
      ((void (*)(int *, WTF::StringImpl **))off_1E32BEAA0[v16])(v39, &v42);
    goto LABEL_23;
  }
  v17 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v18 = v42;
  v42 = 0;
  v38 = v18;
  WebCore::NamedNodeMap::removeNamedItem(v11, (const WTF::AtomString *)&v38, v13, v14, (uint64_t)v39, v15);
  v19 = v41;
  if (!v41)
  {
    v20 = *(_QWORD *)v39;
    *(_QWORD *)v39 = 0;
    v22 = WebCore::wrap<WebCore::Attr>((int)this, v17, v20);
    if (*(_DWORD *)(v20 + 24) == 2)
    {
      if ((*(_WORD *)(v20 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v20, v21);
    }
    else
    {
      *(_DWORD *)(v20 + 24) -= 2;
    }
LABEL_17:
    ((void (*)(_BYTE *, int *))off_1E32BF8C0[v19])(v49, v39);
    v41 = -1;
    v23 = v38;
    v38 = 0;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, (WTF::StringImpl *)v12);
      else
        *(_DWORD *)v23 -= 2;
    }
    v16 = v43;
    goto LABEL_21;
  }
  if (v41 == 1)
  {
    v31 = (WTF::StringImpl *)LOBYTE(v39[0]);
    v49[0] = v39[0];
    v32 = v40;
    v40 = 0;
    v50 = v32;
    if (!*((_QWORD *)v4 + 2))
    {
      v33.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v39[0]), (JSC::JSGlobalObject *)&v50);
      JSC::VM::throwException(v4, this, v33);
      v32 = v50;
    }
    v50 = 0;
    if (v32)
    {
      if (*(_DWORD *)v32 == 2)
        WTF::StringImpl::destroy(v32, v31);
      else
        *(_DWORD *)v32 -= 2;
    }
    v22 = 0;
    goto LABEL_17;
  }
  v34 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsNamedNodeMapPrototypeFunction_removeNamedItemNS(v34, v35, v36);
}

JSC::JSGlobalObject *WebCore::jsNamedNodeMapPrototypeFunction_removeNamedItemNS(JSC::VM **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::JSGlobalObject *v3;
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  unsigned int *v12;
  void *v13;
  int v14;
  WTF::String *v15;
  __n128 v16;
  int v17;
  JSC::VM *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  WTF *v24;
  JSValue v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  WTF::StringImpl *v31;
  JSValue v32;
  JSC::VM *v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  int v36[2];
  WTF::StringImpl *v37;
  int v38;
  WTF::StringImpl *v39;
  int v40;
  WTF::StringImpl *v41;
  int v42;
  uint64_t *v43;
  uint64_t v44;
  _BYTE v45[40];
  uint64_t v46;
  JSC::JSGlobalObject *v47;
  char v48[8];
  WTF::StringImpl *v49;

  v3 = (JSC::JSGlobalObject *)this;
  v4 = this[7];
  v33 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (JSC::JSGlobalObject *)WebCore::throwThisTypeError((int)this, (int)&v33, "NamedNodeMap", "removeNamedItemNS");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSNamedNodeMap::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSNamedNodeMap::s_info && v9 != 0);
  }
  if (!v8)
    return (JSC::JSGlobalObject *)WebCore::throwThisTypeError((int)this, (int)&v33, "NamedNodeMap", "removeNamedItemNS");
  v43 = (uint64_t *)v45;
  v44 = 4;
  v45[32] = 0;
  v46 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v47 = (JSC::JSGlobalObject *)this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v43;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v27.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, a2);
    v3 = (JSC::JSGlobalObject *)JSC::VM::throwException(v4, v3, v27);
    goto LABEL_38;
  }
  v12 = *(unsigned int **)(v5 + 24);
  if ((*((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v41 = 0;
    v42 = 0;
    goto LABEL_18;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>((JSC::JSGlobalObject *)this, *((_QWORD *)a2 + 6), (uint64_t)v36);
  LOBYTE(v41) = 0;
  v42 = -1;
  v14 = (int)v37;
  if ((_DWORD)v37 == -1)
  {
    v3 = 0;
    goto LABEL_38;
  }
  ((void (*)(char *, WTF::StringImpl **, int *))off_1E32BF8A0[v37])(v48, &v41, v36);
  v42 = v14;
  if ((_DWORD)v37 != -1)
  {
    ((void (*)(char *, int *))off_1E32BEAA0[v37])(v48, v36);
    v14 = v42;
  }
  if (!v14)
  {
LABEL_18:
    WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(v3, *((_QWORD *)a2 + 7), (uint64_t)&v39);
    v17 = v40;
    if (v40)
    {
      v3 = 0;
LABEL_32:
      if (v17 != -1)
        ((void (*)(int *, WTF::StringImpl **))off_1E32BEAA0[v17])(v36, &v39);
      v14 = v42;
      goto LABEL_35;
    }
    if (!v42)
    {
      v18 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
      v19 = v41;
      v41 = 0;
      v20 = v39;
      v39 = 0;
      v34 = v20;
      v35 = v19;
      WebCore::NamedNodeMap::removeNamedItemNS(v12, (const WTF::AtomString *)&v35, &v34, v15, (uint64_t)v36, v16);
      if (!v38)
      {
        v21 = *(_QWORD *)v36;
        *(_QWORD *)v36 = 0;
        v3 = (JSC::JSGlobalObject *)WebCore::wrap<WebCore::Attr>((int)v3, v18, v21);
        if (*(_DWORD *)(v21 + 24) == 2)
        {
          if ((*(_WORD *)(v21 + 30) & 0x400) == 0)
            WebCore::Node::removedLastRef((WebCore::Node *)v21, v13);
        }
        else
        {
          *(_DWORD *)(v21 + 24) -= 2;
        }
LABEL_23:
        if (v38 != -1)
          ((void (*)(char *, int *))off_1E32BF8C0[v38])(v48, v36);
        v38 = -1;
        v22 = v34;
        v34 = 0;
        if (v22)
        {
          if (*(_DWORD *)v22 == 2)
            WTF::StringImpl::destroy(v22, (WTF::StringImpl *)v13);
          else
            *(_DWORD *)v22 -= 2;
        }
        v23 = v35;
        v35 = 0;
        if (v23)
        {
          if (*(_DWORD *)v23 == 2)
            WTF::StringImpl::destroy(v23, (WTF::StringImpl *)v13);
          else
            *(_DWORD *)v23 -= 2;
        }
        v17 = v40;
        goto LABEL_32;
      }
      if (v38 == 1)
      {
        v13 = (void *)LOBYTE(v36[0]);
        v48[0] = v36[0];
        v31 = v37;
        v37 = 0;
        v49 = v31;
        if (!*((_QWORD *)v4 + 2))
        {
          v32.super.isa = (Class)WebCore::createDOMException(v3, (JSC::JSGlobalObject *)LOBYTE(v36[0]), (JSC::JSGlobalObject *)&v49);
          JSC::VM::throwException(v4, v3, v32);
          v31 = v49;
        }
        v49 = 0;
        if (v31)
        {
          if (*(_DWORD *)v31 == 2)
            WTF::StringImpl::destroy(v31, (WTF::StringImpl *)v13);
          else
            *(_DWORD *)v31 -= 2;
        }
        v3 = 0;
        goto LABEL_23;
      }
    }
    v24 = (WTF *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_72:
    v43 = 0;
    LODWORD(v44) = 0;
    WTF::fastFree(v24, v13);
    return v3;
  }
  v3 = 0;
LABEL_35:
  if (v14 != -1)
    ((void (*)(int *, WTF::StringImpl **))off_1E32BEAA0[v14])(v36, &v41);
LABEL_38:
  if (HIDWORD(v44))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v43, v47);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v46;
    if (HIDWORD(v44))
    {
      v28 = v43;
      v29 = 8 * HIDWORD(v44);
      do
      {
        v30 = *v28;
        *v28 = 0;
        if (v30)
        {
          if (*(_DWORD *)(v30 + 24) == 2)
          {
            if ((*(_WORD *)(v30 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v30, v13);
          }
          else
          {
            *(_DWORD *)(v30 + 24) -= 2;
          }
        }
        ++v28;
        v29 -= 8;
      }
      while (v29);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v46;
  }
  v24 = (WTF *)v43;
  if (v45 != (_BYTE *)v43 && v43 != 0)
    goto LABEL_72;
  return v3;
}

void WebCore::NavigationDestination::~NavigationDestination(WebCore::NavigationDestination *this, void *a2)
{
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  WTF::StringImpl *v6;
  uint64_t v7;
  uint64_t v8;
  WebCore::HistoryItem *v9;
  void *v10;
  bmalloc::api *v11;
  void *v12;
  WTF *v13;
  void *v14;
  void *v15;

  v3 = (unsigned int *)*((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
  {
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      atomic_store(1u, v3);
      WebCore::SerializedScriptValue::Internals::~Internals((WebCore::SerializedScriptValue::Internals *)(v3 + 2), a2);
      WTF::fastFree((WTF *)v3, v15);
    }
  }
  v6 = (WTF::StringImpl *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (v6)
  {
    if (*(_DWORD *)v6 == 2)
      WTF::StringImpl::destroy(v6, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)v6 -= 2;
  }
  v7 = *((_QWORD *)this + 2);
  *((_QWORD *)this + 2) = 0;
  if (v7)
  {
    if (*(_DWORD *)(v7 + 24) == 1)
    {
      v9 = *(WebCore::HistoryItem **)(v7 + 64);
      *(_QWORD *)(v7 + 64) = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 1)
        {
          WebCore::HistoryItem::~HistoryItem(v9);
          WTF::fastFree(v13, v14);
        }
        else
        {
          --*(_DWORD *)v9;
        }
      }
      WebCore::ContextDestructionObserver::~ContextDestructionObserver((WebCore::ContextDestructionObserver *)(v7 + 32), a2);
      WebCore::EventTarget::~EventTarget((WebCore::EventTarget *)v7, v10);
      bmalloc::api::isoDeallocate(v11, v12);
    }
    else
    {
      --*(_DWORD *)(v7 + 24);
    }
  }
  v8 = *((_QWORD *)this + 1);
  if (v8)
  {
    *(_QWORD *)(v8 + 8) = 3;
    *((_QWORD *)this + 1) = 0;
  }
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore28JSNavigationInterceptHandlerENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    v3 = result + 4;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      atomic_store(1u, result + 4);
      return (unsigned int *)(*(uint64_t (**)(unsigned int *))(*(_QWORD *)result + 16))(result);
    }
  }
  return result;
}

WebCore::NavigationDestination *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore13NavigateEvent4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  _DWORD *v4;
  WebCore::AbortSignal *v5;
  WebCore::NavigationDestination *result;
  bmalloc::api *v7;
  void *v8;
  bmalloc::api *v9;
  void *v10;

  v3 = (WTF::StringImpl *)*((_QWORD *)a2 + 4);
  *((_QWORD *)a2 + 4) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  v4 = (_DWORD *)*((_QWORD *)a2 + 3);
  *((_QWORD *)a2 + 3) = 0;
  if (v4)
  {
    if (v4[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v4 + 16))(v4);
    else
      --v4[4];
  }
  v5 = (WebCore::AbortSignal *)*((_QWORD *)a2 + 2);
  *((_QWORD *)a2 + 2) = 0;
  if (v5)
  {
    if (*((_DWORD *)v5 + 6) == 1)
    {
      WebCore::AbortSignal::~AbortSignal(v5, a2);
      bmalloc::api::isoDeallocate(v7, v8);
    }
    else
    {
      --*((_DWORD *)v5 + 6);
    }
  }
  result = (WebCore::NavigationDestination *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
    {
      WebCore::NavigationDestination::~NavigationDestination(result, a2);
      return (WebCore::NavigationDestination *)bmalloc::api::isoDeallocate(v9, v10);
    }
    else
    {
      --*(_DWORD *)result;
    }
  }
  return result;
}

uint64_t WebCore::jsNavigateEventPrototypeFunction_intercept(unint64_t this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  JSC::JSCell *v15;
  JSC::VM *v16;
  uint64_t v17;
  int v18;
  uint64_t Object;
  JSC::Structure *v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  JSC::VM *v23;
  unsigned int *v24;
  unsigned int v25;
  const char *v26;
  unsigned int v27;
  int v28;
  int v29;
  char **v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  unsigned int v34;
  WebCore::ScriptExecutionContext *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *Allocator;
  uint64_t v40;
  _QWORD *v41;
  char v42;
  uint64_t v43;
  unsigned int *v44;
  unsigned int v45;
  unsigned int v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;
  uint64_t v49;
  JSC::VM *v50;
  unsigned int *v51;
  unsigned int v52;
  const char *v53;
  unsigned int v54;
  int v55;
  int v56;
  char **v57;
  int v58;
  int v59;
  unsigned int *v60;
  unsigned int *v61;
  unsigned int *v62;
  unsigned int v63;
  unsigned int v64;
  uint64_t v65;
  uint16x8_t v67;
  uint16x8_t v68;
  uint16x8_t v69;
  uint16x8_t v70;
  WTF::StringImpl *v71;
  WTF::StringImpl *v72;
  JSValue v73;
  WTF::StringImpl *v74;
  uint64_t v77;
  uint64_t v78;
  JSC::Structure *v81;
  JSC::VM *v82;
  int v83[2];
  JSC::VM *v84;
  uint64_t v85;
  int v86;
  int v87;
  unsigned int *v88;
  WTF::StringImpl *v89;
  JSC::VM *v90;
  int v91[2];
  WTF::StringImpl *v92;
  char v93;
  JSC::VM *v94;

  v4 = *(JSC::VM **)(this + 56);
  v84 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError(this, (int)&v84, "NavigateEvent", "intercept");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSNavigateEvent::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSNavigateEvent::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError(this, (int)&v84, "NavigateEvent", "intercept");
  v12 = *(_QWORD *)(v5 + 24);
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)v5 & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (!v13)
    return 10;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194D90A54);
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v17 = 0;
    v18 = 0;
    v90 = *(JSC::VM **)(this + 56);
    goto LABEL_103;
  }
  v15 = (JSC::JSCell *)*((_QWORD *)a2 + 6);
  v16 = *(JSC::VM **)(this + 56);
  v90 = v16;
  if (((unint64_t)v15 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v17 = 0;
    v18 = 0;
LABEL_103:
    v85 = v17;
    v86 = v18;
    v87 = 0;
    goto LABEL_104;
  }
  if (((unint64_t)v15 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v15)) == 0)
  {
    JSC::throwTypeError();
    v87 = 1;
    goto LABEL_104;
  }
  v20 = (JSC::Structure *)Object;
  *(_QWORD *)v83 = v12;
  WTF::AtomStringImpl::addLiteral();
  v22 = JSC::JSObject::get(v20, (JSC::JSGlobalObject *)this, *(unint64_t *)v91);
  if (*(_QWORD *)v91)
  {
    if (**(_DWORD **)v91 == 2)
      WTF::StringImpl::destroy(*(WTF::StringImpl **)v91, v21);
    else
      **(_DWORD **)v91 -= 2;
  }
  if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
    goto LABEL_190;
  v82 = v4;
  if (v22 == 10)
  {
    v18 = 0;
    goto LABEL_48;
  }
  v23 = *(JSC::VM **)(this + 56);
  v94 = v23;
  *(_QWORD *)v91 = v22;
  if ((v22 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v22 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v91, (JSC::JSGlobalObject *)this);
    v24 = v88;
    if (v88)
      goto LABEL_32;
LABEL_140:
    v29 = 0;
    v28 = 0;
    goto LABEL_45;
  }
  v24 = *(unsigned int **)(v22 + 8);
  if ((v24 & 1) == 0)
  {
    if (!v24)
      goto LABEL_31;
    goto LABEL_30;
  }
  v24 = *(unsigned int **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v22, (JSC::JSGlobalObject *)this);
  if (v24)
LABEL_30:
    *v24 += 2;
LABEL_31:
  v88 = v24;
  if (!v24)
    goto LABEL_140;
LABEL_32:
  v25 = v24[4];
  v26 = (const char *)*((_QWORD *)v24 + 1);
  v27 = v24[1];
  if (v26 != "after-transition" && v27 == 16)
  {
    if ((v25 & 4) != 0)
    {
      if (*v26 != 97 || *(_QWORD *)(v26 + 1) != 0x6172742D72657466 || *((_QWORD *)v26 + 1) != 0x6E6F697469736E61)
      {
LABEL_38:
        v28 = 0;
        v29 = 0;
        goto LABEL_43;
      }
    }
    else
    {
      if (*(_WORD *)v26 != 97)
        goto LABEL_38;
      v67 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v26 + 2), (int16x8_t)xmmword_1968C0470);
      v67.i16[0] = vminvq_u16(v67);
      if (!v67.i32[0])
        goto LABEL_38;
      v68 = (uint16x8_t)vceqq_s16(*((int16x8_t *)v26 + 1), (int16x8_t)xmmword_1968A3690);
      v68.i16[0] = vminvq_u16(v68);
      if (!v68.i32[0])
        goto LABEL_38;
    }
    goto LABEL_41;
  }
  if (v26 == "after-transition" && v27 == 16)
  {
LABEL_41:
    v30 = &WebCore::parseEnumerationFromString<WebCore::NavigateEvent::NavigationScrollBehavior>(WTF::String const&)::mappings;
    goto LABEL_42;
  }
  if (v26 == "manual" || v27 != 6)
  {
    if (v27 != 6 || v26 != "manual")
      goto LABEL_38;
  }
  else if ((v25 & 4) != 0)
  {
    if (*v26 != 109 || *(_DWORD *)(v26 + 1) != 1635085921 || *(_DWORD *)(v26 + 2) != 1818326382)
      goto LABEL_38;
  }
  else
  {
    if (*(_WORD *)v26 != 109)
      goto LABEL_38;
    if (*(_QWORD *)(v26 + 4) != 0x6C00610075006ELL || *(_QWORD *)(v26 + 2) != 0x610075006E0061)
      goto LABEL_38;
  }
  v30 = &off_1E32B9BF8;
LABEL_42:
  v29 = *((unsigned __int8 *)v30 + 16);
  v28 = 1;
LABEL_43:
  v88 = 0;
  if (*v24 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v24, v21);
  else
    *v24 -= 2;
LABEL_45:
  if (*((_DWORD *)v23 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v23) & 1) != 0)
    goto LABEL_190;
  if (!v28)
  {
    JSC::throwTypeError();
LABEL_190:
    v87 = 1;
    v12 = *(_QWORD *)v83;
    goto LABEL_104;
  }
  v18 = (v29 != 0) | 0x100;
LABEL_48:
  WTF::AtomStringImpl::addLiteral();
  v31 = *(WTF::StringImpl **)v91;
  v33 = JSC::JSObject::get(v20, (JSC::JSGlobalObject *)this, *(unint64_t *)v91);
  if (v31)
  {
    if (*(_DWORD *)v31 == 2)
      WTF::StringImpl::destroy(v31, v32);
    else
      *(_DWORD *)v31 -= 2;
  }
  if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
  {
    v87 = 1;
    v4 = v82;
    v12 = *(_QWORD *)v83;
    goto LABEL_104;
  }
  v81 = v20;
  if (v33 == 10)
  {
    v17 = 0;
    v4 = v82;
  }
  else
  {
    v88 = *(unsigned int **)(this + 56);
    if ((v33 & 0xFFFE000000000002) == 0
      && (v34 = *(unsigned __int8 *)(v33 + 5), v34 >= 0x17)
      && ((v34 & 0xFE) == 0x1A
       || (*(_BYTE *)(v33 + 6) & 4) != 0
       && ((*(void (**)(int *__return_ptr, uint64_t))(16
                                                              * *(unsigned int *)(16 * (*(_DWORD *)v33 & 0xFFFFFFFE)
                                                                                + 0x4C)
                                                              + 0x38))(v91, v33), LOBYTE(v91[0]))))
    {
      v17 = WTF::fastMalloc((WTF *)0x20);
      v35 = (WebCore::ScriptExecutionContext *)WebCore::JSDOMGlobalObject::scriptExecutionContext((WebCore::JSDOMGlobalObject *)this);
      *(_DWORD *)(v17 + 16) = 1;
      *(_QWORD *)v17 = &off_1E33A18C0;
      *(_QWORD *)(v17 + 8) = 0;
      WebCore::ContextDestructionObserver::observeContext((WebCore::ContextDestructionObserver *)v17, v35);
      *(_QWORD *)v17 = &off_1E32BAC70;
      v36 = (_QWORD *)WTF::fastMalloc((WTF *)0x18);
      v37 = WebCore::JSDOMGlobalObject::scriptExecutionContext((WebCore::JSDOMGlobalObject *)this);
      if ((this & 8) != 0)
        v38 = ((this - 112) | 1) + 47;
      else
        v38 = *(_QWORD *)(this & 0xFFFFFFFFFFFFC000) + 32;
      Allocator = *(_QWORD **)(v38 + 16);
      if (!Allocator)
      {
        v77 = v37;
        Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
        v37 = v77;
      }
      *(_QWORD *)(v38 + 16) = *Allocator;
      Allocator[1] = 0;
      Allocator[2] = 0;
      *Allocator = this;
      *v36 = Allocator;
      v36[1] = &off_1E32268A0;
      if ((v33 & 8) != 0)
        v40 = ((v33 - 112) | 1) + 47;
      else
        v40 = *(_QWORD *)(v33 & 0xFFFFFFFFFFFFC000) + 32;
      v41 = *(_QWORD **)(v40 + 16);
      if (!v41)
      {
        v78 = v37;
        v41 = (_QWORD *)JSC::WeakSet::findAllocator();
        v37 = v78;
      }
      v42 = 0;
      v43 = 0;
      *(_QWORD *)(v40 + 16) = *v41;
      *v41 = v33;
      v41[1] = v36 + 1;
      v41[2] = v37;
      v36[2] = v41;
      *(_QWORD *)(v17 + 24) = v36;
      LODWORD(v92) = 0;
      *(_QWORD *)v91 = 0;
    }
    else
    {
      JSC::throwTypeError();
      v17 = 0;
      v42 = 1;
      LODWORD(v92) = 1;
      v87 = 1;
      v43 = 1;
    }
    ((void (*)(unsigned int **, int *))off_1E32BF8D0[v43])(&v88, v91);
    v4 = v82;
    if ((v42 & 1) != 0)
      goto LABEL_67;
  }
  WTF::AtomStringImpl::addLiteral();
  v47 = *(WTF::StringImpl **)v91;
  v49 = JSC::JSObject::get(v81, (JSC::JSGlobalObject *)this, *(unint64_t *)v91);
  if (v47)
  {
    if (*(_DWORD *)v47 == 2)
      WTF::StringImpl::destroy(v47, v48);
    else
      *(_DWORD *)v47 -= 2;
  }
  if (!*((_DWORD *)v16 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v16) & 1) == 0)
  {
    if (v49 == 10)
      goto LABEL_102;
    v50 = *(JSC::VM **)(this + 56);
    v94 = v50;
    *(_QWORD *)v91 = v49;
    if ((v49 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v49 + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v91, (JSC::JSGlobalObject *)this);
      v51 = v88;
      if (v88)
        goto LABEL_83;
      goto LABEL_142;
    }
    v51 = *(unsigned int **)(v49 + 8);
    if ((v51 & 1) != 0)
    {
      v51 = *(unsigned int **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v49, (JSC::JSGlobalObject *)this);
      if (!v51)
      {
LABEL_82:
        v88 = v51;
        if (v51)
        {
LABEL_83:
          v52 = v51[4];
          v53 = (const char *)*((_QWORD *)v51 + 1);
          v54 = v51[1];
          if (v53 == "after-transition" || v54 != 16)
          {
            if (v53 != "after-transition" || v54 != 16)
            {
              if (v53 == "manual" || v54 != 6)
              {
                if (v54 != 6 || v53 != "manual")
                  goto LABEL_89;
              }
              else if ((v52 & 4) != 0)
              {
                if (*v53 != 109 || *(_DWORD *)(v53 + 1) != 1635085921 || *(_DWORD *)(v53 + 2) != 1818326382)
                  goto LABEL_89;
              }
              else
              {
                if (*(_WORD *)v53 != 109)
                  goto LABEL_89;
                if (*(_QWORD *)(v53 + 4) != 0x6C00610075006ELL || *(_QWORD *)(v53 + 2) != 0x610075006E0061)
                  goto LABEL_89;
              }
              v57 = &off_1E32B9BF8;
LABEL_93:
              v56 = *((unsigned __int8 *)v57 + 16);
              v55 = 1;
LABEL_94:
              v88 = 0;
              if (*v51 == 2)
                WTF::StringImpl::destroy((WTF::StringImpl *)v51, v48);
              else
                *v51 -= 2;
              goto LABEL_96;
            }
          }
          else if ((v52 & 4) != 0)
          {
            if (*v53 != 97
              || *(_QWORD *)(v53 + 1) != 0x6172742D72657466
              || *((_QWORD *)v53 + 1) != 0x6E6F697469736E61)
            {
LABEL_89:
              v55 = 0;
              v56 = 0;
              goto LABEL_94;
            }
          }
          else
          {
            if (*(_WORD *)v53 != 97)
              goto LABEL_89;
            v69 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v53 + 2), (int16x8_t)xmmword_1968C0470);
            v69.i16[0] = vminvq_u16(v69);
            if (!v69.i32[0])
              goto LABEL_89;
            v70 = (uint16x8_t)vceqq_s16(*((int16x8_t *)v53 + 1), (int16x8_t)xmmword_1968A3690);
            v70.i16[0] = vminvq_u16(v70);
            if (!v70.i32[0])
              goto LABEL_89;
          }
          v57 = &WebCore::parseEnumerationFromString<WebCore::NavigateEvent::NavigationScrollBehavior>(WTF::String const&)::mappings;
          goto LABEL_93;
        }
LABEL_142:
        v56 = 0;
        v55 = 0;
LABEL_96:
        if (*((_DWORD *)v50 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v50) & 1) != 0)
          goto LABEL_194;
        if (!v55)
        {
          JSC::throwTypeError();
          goto LABEL_194;
        }
        if (v56)
          v58 = 16842752;
        else
          v58 = 0x1000000;
        v18 |= v58;
LABEL_102:
        v12 = *(_QWORD *)v83;
        goto LABEL_103;
      }
    }
    else if (!v51)
    {
      goto LABEL_82;
    }
    *v51 += 2;
    goto LABEL_82;
  }
LABEL_194:
  v87 = 1;
LABEL_67:
  v12 = *(_QWORD *)v83;
  if (v17)
  {
    v44 = (unsigned int *)(v17 + 16);
    do
    {
      v45 = __ldaxr(v44);
      v46 = v45 - 1;
    }
    while (__stlxr(v46, v44));
    if (!v46)
    {
      atomic_store(1u, (unsigned int *)(v17 + 16));
      (*(void (**)(uint64_t))(*(_QWORD *)v17 + 16))(v17);
    }
  }
LABEL_104:
  v59 = v87;
  if (!v87)
  {
    v60 = (unsigned int *)v85;
    v85 = 0;
    v88 = v60;
    LODWORD(v89) = v86;
    WebCore::NavigateEvent::intercept((WebCore::Document *)(v14 - 192), v12, (uint64_t)&v88, (uint64_t)v91);
    v61 = v88;
    v88 = 0;
    if (v61)
    {
      v62 = v61 + 4;
      do
      {
        v63 = __ldaxr(v62);
        v64 = v63 - 1;
      }
      while (__stlxr(v64, v62));
      if (!v64)
      {
        atomic_store(1u, v61 + 4);
        (*(void (**)(unsigned int *))(*(_QWORD *)v61 + 16))(v61);
      }
    }
    if (!v93)
    {
      v65 = 10;
LABEL_112:
      v59 = v87;
      goto LABEL_113;
    }
    v71 = (WTF::StringImpl *)LOBYTE(v91[0]);
    LOBYTE(v88) = v91[0];
    v72 = v92;
    v92 = 0;
    v89 = v72;
    if (!*((_QWORD *)v4 + 2))
    {
      v73.super.isa = (Class)WebCore::createDOMException((JSC *)this, (JSC::JSGlobalObject *)LOBYTE(v91[0]), (JSC::JSGlobalObject *)&v89);
      JSC::VM::throwException(v4, (JSC::JSGlobalObject *)this, v73);
      v72 = v89;
    }
    v89 = 0;
    if (v72)
    {
      if (*(_DWORD *)v72 == 2)
        WTF::StringImpl::destroy(v72, v71);
      else
        *(_DWORD *)v72 -= 2;
    }
    if (v93)
    {
      v74 = v92;
      v92 = 0;
      if (v74)
      {
        if (*(_DWORD *)v74 != 2)
        {
          v65 = 0;
          *(_DWORD *)v74 -= 2;
          goto LABEL_112;
        }
        WTF::StringImpl::destroy(v74, v71);
      }
    }
    v65 = 0;
    goto LABEL_112;
  }
  v65 = 0;
LABEL_113:
  if (v59 != -1)
    ((void (*)(int *, uint64_t *))off_1E32BFAF8[v59])(v91, &v85);
  return v65;
}

uint64_t WebCore::jsNavigateEventPrototypeFunction_scroll(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t result;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  JSValue v18;
  WTF::StringImpl *v19;
  JSC::VM *v20;
  char v21;
  WTF::StringImpl *v22;
  char v23;
  char v24;
  WTF::StringImpl *v25;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v20 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "NavigateEvent", "scroll");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSNavigateEvent::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSNavigateEvent::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "NavigateEvent", "scroll");
  v11 = *(_QWORD *)(v4 + 24);
  v12 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)v4 & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (!v12)
    return 10;
  if (*(_BYTE *)(v12 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194D90ED8);
  }
  if (!WebCore::Document::isFullyActive((WebCore::Document *)(v12 - 192)))
  {
    v14 = 8;
    goto LABEL_23;
  }
  v13 = *(_DWORD *)(v11 + 20);
  if ((v13 & 0x200) != 0)
  {
    if ((v13 & 0x40) != 0)
    {
      v14 = 8;
      goto LABEL_23;
    }
    if (!*(_BYTE *)(v11 + 141) || *(_BYTE *)(v11 + 140) != 1)
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v14 = 8;
      v21 = 8;
      goto LABEL_24;
    }
    return 10;
  }
  v14 = 14;
LABEL_23:
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v21 = v14;
  v22 = v25;
LABEL_24:
  v23 = 1;
  v24 = v14;
  v17 = v22;
  v22 = 0;
  v25 = v17;
  if (!*((_QWORD *)v5 + 2))
  {
    v18.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v14, (JSC::JSGlobalObject *)&v25);
    JSC::VM::throwException(v5, this, v18);
    v17 = v25;
  }
  v25 = 0;
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v16);
    else
      *(_DWORD *)v17 -= 2;
  }
  if (v23)
  {
    v19 = v22;
    v22 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 != 2)
      {
        result = 0;
        *(_DWORD *)v19 -= 2;
        return result;
      }
      WTF::StringImpl::destroy(v19, v16);
    }
  }
  return 0;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore13NavigateEvent26NavigationInterceptOptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    v3 = result + 4;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      atomic_store(1u, result + 4);
      return (unsigned int *)(*(uint64_t (**)(unsigned int *))(*(_QWORD *)result + 16))(result);
    }
  }
  return result;
}

_BYTE *WebCore::jsNavigationPrototypeFunction_entries(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::Navigation *v11;
  JSC::VM *v12;
  uint64_t *v13;
  JSC::VM *v14;
  unsigned int v15;
  uint64_t *v16;
  uint64_t v17;
  objc_class *v18;
  int v19;
  BOOL v20;
  JSValue v21;
  void *v22;
  JSC::VM *v23;
  uint64_t v24;
  uint64_t *v25;
  _QWORD *v27;
  uint64_t v28;
  WTF *v29;
  int v30;
  BOOL v31;
  uint64_t v32;
  WTF *v33;
  _OWORD v34[4];
  uint64_t v35;
  JSC::VM *v36;

  v4 = *((_QWORD *)a2 + 5);
  v28 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "Navigation", "entries");
  v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v6 = *(unsigned int *)(v5 + 0x4C);
  v7 = *(_DWORD *)(v5 + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSNavigation::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSNavigation::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "Navigation", "entries");
  v11 = *(WebCore::Navigation **)(v4 + 24);
  {
    WebCore::Navigation::entries(void)const::emptyEntries = 0;
    unk_1EE2F7EE0 = 0;
  }
  v12 = *(JSC::VM **)(v5 + 40);
  if (WebCore::Navigation::hasEntriesAndEventsDisabled(v11))
    v13 = &WebCore::Navigation::entries(void)const::emptyEntries;
  else
    v13 = (uint64_t *)((char *)v11 + 72);
  v14 = (JSC::VM *)*((_QWORD *)this + 7);
  v36 = v14;
  v31 = 0;
  v32 = 0x800000000;
  v33 = (WTF *)((char *)v34 + 8);
  memset(v34, 0, sizeof(v34));
  v35 = 0;
  v15 = *((_DWORD *)v13 + 3);
  if (v15 >= 9)
  {
    v31 = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v32) == 1;
    v15 = *((_DWORD *)v13 + 3);
    if (v15)
    {
LABEL_19:
      v16 = (uint64_t *)*v13;
      v17 = 8 * v15;
      do
      {
        v18 = (objc_class *)WebCore::wrap<WebCore::NavigationHistoryEntry>((int)this, v12, *v16);
        if (*((_DWORD *)v14 + 20))
        {
          if ((JSC::VM::hasExceptionsAfterHandlingTraps(v14) & 1) != 0)
            goto LABEL_47;
        }
        v19 = v32;
        if ((_DWORD)v32 != HIDWORD(v32) && (v33 != (WTF *)((char *)v34 + 8) ? (v20 = v33 == 0) : (v20 = 1), v20))
        {
          *((_QWORD *)v33 + v32) = v18;
          LODWORD(v32) = v19 + 1;
        }
        else
        {
          v21.super.isa = v18;
          if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v32, v21) == 1)
            v31 = 1;
        }
        ++v16;
        v17 -= 8;
      }
      while (v17);
    }
  }
  else if (v15)
  {
    goto LABEL_19;
  }
  if (v31)
  {
    JSC::throwOutOfMemoryError();
LABEL_47:
    v24 = 0;
    goto LABEL_38;
  }
  v29 = v33;
  v30 = v32;
  v23 = (JSC::VM *)*((_QWORD *)v12 + 7);
  if (*((_DWORD *)v23 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v23) & 1) != 0)
    goto LABEL_47;
  v24 = JSC::constructArray();
LABEL_38:
  v25 = *(uint64_t **)&v34[0];
  if (*(_QWORD *)&v34[0])
  {
    v29 = (WTF *)&v32;
    v27 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v34[0], (uint64_t *)&v29);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v25, v27);
  }
  if (v33 != (WTF *)((char *)v34 + 8) && v33)
    WTF::fastFree(v33, v22);
  return (_BYTE *)v24;
}

uint64_t WebCore::jsNavigationPrototypeFunction_updateCurrentEntry(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  JSC::JSCell *v12;
  uint64_t Object;
  JSC::Structure *v14;
  WTF::StringImpl *v15;
  JSC::VM *v16;
  uint64_t result;
  JSValue v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  JSValue v21;
  WTF::StringImpl *v22;
  JSC::VM *v23;
  JSC::VM *v24;
  WTF::StringImpl *v25;
  int v26[2];
  WTF::StringImpl *v27;
  char v28;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v23 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v23, "Navigation", "updateCurrentEntry");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSNavigation::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSNavigation::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v23, "Navigation", "updateCurrentEntry");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v18);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    v12 = (JSC::JSCell *)*((_QWORD *)a2 + 6);
    v24 = v4;
    if (((unint64_t)v12 & 0xFFFFFFFFFFFFFFF7) == 2)
      goto LABEL_21;
    if (((unint64_t)v12 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v12)) == 0)
    {
      JSC::throwTypeError();
      return 0;
    }
    v14 = (JSC::Structure *)Object;
    WTF::AtomStringImpl::addLiteral();
    v16 = (JSC::VM *)JSC::JSObject::get(v14, this, *(unint64_t *)v26);
    if (*(_QWORD *)v26)
    {
      if (**(_DWORD **)v26 == 2)
        WTF::StringImpl::destroy(*(WTF::StringImpl **)v26, v15);
      else
        **(_DWORD **)v26 -= 2;
    }
    if (*((_DWORD *)v24 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v24) & 1) != 0)
      return 0;
    if (v16 == (JSC::VM *)10)
    {
LABEL_21:
      WebCore::throwRequiredMemberTypeError((int)this, (int)&v24, "state", 6, "NavigationUpdateCurrentEntryOptions", 36, "any", 4);
      return 0;
    }
    v24 = v16;
    WebCore::Navigation::updateCurrentEntry(v11, (uint64_t *)&v24, (uint64_t)v26);
    if (v28)
    {
      v19 = (WTF::StringImpl *)LOBYTE(v26[0]);
      LOBYTE(v24) = v26[0];
      v20 = v27;
      v27 = 0;
      v25 = v20;
      if (!*((_QWORD *)v4 + 2))
      {
        v21.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v26[0]), (JSC::JSGlobalObject *)&v25);
        JSC::VM::throwException(v4, this, v21);
        v20 = v25;
      }
      v25 = 0;
      if (v20)
      {
        if (*(_DWORD *)v20 == 2)
          WTF::StringImpl::destroy(v20, v19);
        else
          *(_DWORD *)v20 -= 2;
      }
      if (!v28)
        return 0;
      v22 = v27;
      v27 = 0;
      if (!v22)
        return 0;
      if (*(_DWORD *)v22 == 2)
      {
        WTF::StringImpl::destroy(v22, v19);
        return 0;
      }
      result = 0;
      *(_DWORD *)v22 -= 2;
    }
    else
    {
      return 10;
    }
  }
  return result;
}

unint64_t WebCore::jsNavigationPrototypeFunction_navigate(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  int v11;
  JSC::VM *v12;
  JSC::Structure *v13;
  unint64_t v14;
  int v15;
  JSC::VM *v16;
  unint64_t v17;
  WebCore::DOMGuardedObject *v18;
  WebCore::DOMGuardedObject *v19;
  WebCore::DOMGuardedObject *v20;
  WebCore::DOMGuardedObject *v21;
  JSC::JSGlobalObject *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  char **v27;
  BOOL v28;
  WebCore::Navigation *v30;
  int v31;
  JSC::JSCell *v32;
  JSC::VM *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t Object;
  JSC::Structure *v38;
  WTF::StringImpl *v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  uint64_t v43;
  JSC::VM *v44;
  _DWORD *v45;
  int v46;
  const char *v47;
  int v48;
  BOOL v49;
  int v50;
  char **v51;
  int v52;
  WTF::StringImpl *v53;
  WTF::StringImpl *v54;
  uint64_t v55;
  WTF::StringImpl *v56;
  WTF::StringImpl *v57;
  WTF::StringImpl *v58;
  unint64_t v59;
  _DWORD *v60;
  _DWORD *v61;
  WebCore::DOMGuardedObject *v62;
  uint64_t v63;
  uint64_t v66;
  objc_class *v67;
  WebCore::DOMGuardedObject *v68;
  objc_class *v69;
  WebCore::DOMGuardedObject *v70;
  JSC::VM *v71;
  JSValue v72;
  WebCore *v74;
  JSC::JSGlobalObject *v75;
  JSC::CallFrame *v76;
  JSC::Structure *v77;
  unint64_t v78;
  unint64_t v79;
  WebCore::Navigation *v80;
  WebCore::DOMGuardedObject *v81;
  WebCore::DOMGuardedObject *v82;
  _DWORD v83[2];
  WTF::StringImpl *v84;
  int v85;
  _DWORD *v86;
  _DWORD *v87;
  WebCore::DOMGuardedObject *v88[2];
  char v89;
  _DWORD v90[2];
  _BYTE v91[7];
  JSC::VM *v92;
  WTF::StringImpl *v93;

  v5 = *((_QWORD *)this + 7);
  v6 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  if (!v7)
  {
    __break(0xC471u);
    JUMPOUT(0x194D91C28);
  }
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v14 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v15 = *((_DWORD *)this + 291);
  if (v15)
    v16 = (JSC::VM *)(16 * (v15 & 0xFFFFFFFE));
  else
    v16 = 0;
  v17 = JSC::JSPromise::create((JSC::JSPromise *)v5, v16, v13);
  v18 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v78 = v14;
  v19 = WebCore::DOMGuardedObject::DOMGuardedObject(v18, (unint64_t)this, v14);
  *(_QWORD *)v19 = &off_1E3226868;
  *((_DWORD *)v19 + 10) = 1;
  *((_BYTE *)v19 + 44) = 0;
  v82 = v19;
  v20 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v79 = v17;
  v21 = WebCore::DOMGuardedObject::DOMGuardedObject(v20, (unint64_t)this, v17);
  *(_QWORD *)v21 = &off_1E3226868;
  *((_DWORD *)v21 + 10) = 1;
  *((_BYTE *)v21 + 44) = 0;
  v81 = v21;
  v24 = *((_QWORD *)a2 + 5);
  if ((v24 & 0xFFFE000000000002) != 0)
    goto LABEL_133;
  v25 = *(unsigned int *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0x4C);
  v26 = *(_DWORD *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0x4C) != 0;
  v27 = (char **)(16 * v25);
  if ((_DWORD)v25)
    v28 = v27 == &WebCore::JSNavigation::s_info;
  else
    v28 = 1;
  if (!v28)
  {
    do
    {
      v27 = (char **)v27[2];
      v26 = v27 != 0;
    }
    while (v27 != &WebCore::JSNavigation::s_info && v27 != 0);
  }
  if (!v26)
  {
LABEL_133:
    v66 = WebCore::rejectPromiseWithThisTypeError(v18, (WebCore::DeferredPromise *)"Navigation", "navigate", v23);
  }
  else
  {
    if (*((_DWORD *)a2 + 8) != 1)
    {
      v30 = *(WebCore::Navigation **)(v24 + 24);
      WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v84);
      v31 = v85;
      if (v85)
      {
        v59 = 0;
LABEL_103:
        if (v31 != -1)
          ((void (*)(WebCore::DOMGuardedObject **, WTF::StringImpl **))off_1E32BEA70[v31])(v88, &v84);
        v20 = v81;
        v81 = 0;
        if (!v20)
          goto LABEL_108;
        goto LABEL_106;
      }
      if ((unint64_t)(*((int *)a2 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL)
        goto LABEL_33;
      v80 = v30;
      v32 = (JSC::JSCell *)*((_QWORD *)a2 + 7);
      v33 = (JSC::VM *)*((_QWORD *)this + 7);
      v92 = v33;
      if (((unint64_t)v32 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v30 = v80;
LABEL_33:
        v34 = 0;
        v35 = 10;
        v36 = 10;
LABEL_92:
        v83[0] = *(_DWORD *)v91;
        *(_DWORD *)((char *)v83 + 3) = *(_DWORD *)&v91[3];
        if (v85)
        {
          v74 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
          return WebCore::jsNavigationPrototypeFunction_reload(v74, v75, v76);
        }
        v55 = *(_QWORD *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0x28);
        v56 = v84;
        v84 = 0;
        v93 = v56;
        v88[0] = (WebCore::DOMGuardedObject *)v35;
        v88[1] = (WebCore::DOMGuardedObject *)v36;
        v89 = v34;
        v90[0] = v83[0];
        *(_DWORD *)((char *)v90 + 3) = *(_DWORD *)((char *)v83 + 3);
        WebCore::Navigation::navigate(v30, &v93, (uint64_t)v88, (uint64_t *)&v82, (uint64_t *)&v81, (uint64_t)&v86);
        v58 = v93;
        v93 = 0;
        if (v58)
        {
          if (*(_DWORD *)v58 == 2)
            WTF::StringImpl::destroy(v58, v57);
          else
            *(_DWORD *)v58 -= 2;
        }
        v59 = WebCore::convertDictionaryToJS((uint64_t)this, *(_QWORD *)(v55 + 656), &v86);
        v60 = v87;
        v87 = 0;
        if (v60)
        {
          if (v60[4] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v60 + 16))(v60);
          else
            --v60[4];
        }
        v61 = v86;
        v86 = 0;
        if (v61)
        {
          if (v61[4] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v61 + 16))(v61);
          else
            --v61[4];
        }
        goto LABEL_102;
      }
      if (((unint64_t)v32 & 0xFFFE000000000002) != 0)
        goto LABEL_126;
      Object = JSC::JSCell::getObject(v32);
      if (!Object)
        goto LABEL_126;
      v38 = (JSC::Structure *)Object;
      WTF::AtomStringImpl::addLiteral();
      v39 = v88[0];
      v35 = JSC::JSObject::get(v38, this, (unint64_t)v88[0]);
      if (v39)
      {
        if (*(_DWORD *)v39 == 2)
          WTF::StringImpl::destroy(v39, v40);
        else
          *(_DWORD *)v39 -= 2;
      }
      v77 = v38;
      if (*((_DWORD *)v33 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v33) & 1) != 0)
        goto LABEL_127;
      WTF::AtomStringImpl::addLiteral();
      v41 = v88[0];
      v43 = JSC::JSObject::get(v77, this, (unint64_t)v88[0]);
      if (v41)
      {
        if (*(_DWORD *)v41 == 2)
          WTF::StringImpl::destroy(v41, v42);
        else
          *(_DWORD *)v41 -= 2;
      }
      if (*((_DWORD *)v33 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v33) & 1) != 0)
        goto LABEL_127;
      if (v43 == 10)
      {
        v34 = 0;
LABEL_87:
        WTF::AtomStringImpl::addLiteral();
        v53 = v88[0];
        v36 = JSC::JSObject::get(v77, this, (unint64_t)v88[0]);
        if (v53)
        {
          if (*(_DWORD *)v53 == 2)
            WTF::StringImpl::destroy(v53, v54);
          else
            *(_DWORD *)v53 -= 2;
        }
        if (!*((_DWORD *)v33 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v33))
        {
          v30 = v80;
          goto LABEL_92;
        }
LABEL_127:
        v59 = 0;
LABEL_102:
        v31 = v85;
        goto LABEL_103;
      }
      v44 = (JSC::VM *)*((_QWORD *)this + 7);
      v93 = v44;
      v88[0] = (WebCore::DOMGuardedObject *)v43;
      if ((v43 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v43 + 5) != 2)
      {
        JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v88, this);
        v45 = v86;
        if (v86)
          goto LABEL_52;
        goto LABEL_125;
      }
      v45 = *(_DWORD **)(v43 + 8);
      if ((v45 & 1) != 0)
      {
        v45 = *(_DWORD **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v43, this);
        if (!v45)
        {
LABEL_51:
          v86 = v45;
          if (v45)
          {
LABEL_52:
            v46 = v45[4];
            v47 = (const char *)*((_QWORD *)v45 + 1);
            v48 = v45[1];
            v49 = v48 != 4;
            if (v47 == "auto" || v48 != 4)
            {
              if (v47 == "auto")
              {
                v50 = v45[1];
                if (v48 == 4)
                  goto LABEL_76;
              }
              else
              {
                v50 = v45[1];
              }
            }
            else
            {
              if ((v46 & 4) != 0)
              {
                if (*v47 != 97 || *(_WORD *)(v47 + 1) != 29813 || *((_WORD *)v47 + 1) != 28532)
                  goto LABEL_58;
                goto LABEL_76;
              }
              if (*(_WORD *)v47 != 97)
              {
LABEL_58:
                v50 = 4;
                goto LABEL_59;
              }
              v50 = 4;
              if (*(_DWORD *)(v47 + 2) == 7602293 && *((_DWORD *)v47 + 1) == 7274612)
              {
LABEL_76:
                v51 = &WebCore::parseEnumerationFromString<WebCore::NavigationHistoryBehavior>(WTF::String const&)::mappings;
                goto LABEL_82;
              }
            }
LABEL_59:
            if (v47 == "push")
              v49 = 1;
            if (v49)
            {
              if (v47 == "push" && v48 == 4)
                goto LABEL_81;
            }
            else
            {
              if (!v50)
                goto LABEL_81;
              if ((v46 & 4) != 0)
              {
                if (*v47 != 112 || *(_WORD *)(v47 + 1) != 29557 || *((_WORD *)v47 + 1) != 26739)
                  goto LABEL_67;
LABEL_81:
                v51 = &off_1E32B9E28;
                goto LABEL_82;
              }
              if (*(_WORD *)v47 == 112 && *(_DWORD *)(v47 + 2) == 7536757 && *((_DWORD *)v47 + 1) == 6815859)
                goto LABEL_81;
            }
LABEL_67:
            if (v47 == "replace" || v50 != 7)
            {
              if (v50 == 7 && v47 == "replace")
                goto LABEL_73;
            }
            else if ((v46 & 4) != 0)
            {
              if (*v47 == 114 && *(_DWORD *)(v47 + 1) == 1634496613 && *(_DWORD *)(v47 + 3) == 1701011820)
              {
LABEL_73:
                v51 = &off_1E32B9E40;
LABEL_82:
                v34 = *((_BYTE *)v51 + 16);
                v52 = 1;
                goto LABEL_83;
              }
            }
            else if (*(_WORD *)v47 == 114
                   && *(_QWORD *)(v47 + 6) == 0x6500630061006CLL
                   && *(_QWORD *)(v47 + 2) == 0x61006C00700065)
            {
              goto LABEL_73;
            }
            v52 = 0;
            v34 = 0;
LABEL_83:
            v86 = 0;
            if (*v45 == 2)
              WTF::StringImpl::destroy((WTF::StringImpl *)v45, v42);
            else
              *v45 -= 2;
LABEL_85:
            if (*((_DWORD *)v44 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v44) & 1) != 0)
              goto LABEL_127;
            if (v52)
              goto LABEL_87;
LABEL_126:
            JSC::throwTypeError();
            goto LABEL_127;
          }
LABEL_125:
          v34 = 0;
          v52 = 0;
          goto LABEL_85;
        }
      }
      else if (!v45)
      {
        goto LABEL_51;
      }
      *v45 += 2;
      goto LABEL_51;
    }
    v71 = (JSC::VM *)*((_QWORD *)this + 7);
    v72.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v22);
    v66 = JSC::VM::throwException(v71, this, v72);
  }
  v59 = v66;
  v81 = 0;
LABEL_106:
  if (*((_DWORD *)v20 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v20 + 16))(v20);
  else
    --*((_DWORD *)v20 + 4);
LABEL_108:
  v62 = v82;
  v82 = 0;
  if (v62)
  {
    if (*((_DWORD *)v62 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v62 + 16))(v62);
    else
      --*((_DWORD *)v62 + 4);
  }
  v63 = *(_QWORD *)(v5 + 16);
  if (v63)
  {
    if (*(_QWORD *)(v5 + 24) == v63)
      goto LABEL_178;
    v67 = *(objc_class **)(v63 + 8);
    JSC::VM::clearException((JSC::VM *)v5);
    WebCore::DeferredPromise::create((unint64_t)this, v78, 0, v88);
    WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v88[0], v67, 0);
    v68 = v88[0];
    v88[0] = 0;
    if (v68)
    {
      if (*((_DWORD *)v68 + 4) == 1)
        (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v68 + 16))(v68);
      else
        --*((_DWORD *)v68 + 4);
    }
    v63 = *(_QWORD *)(v5 + 16);
    if (v63)
    {
LABEL_178:
      if (*(_QWORD *)(v5 + 24) != v63)
      {
        v69 = *(objc_class **)(v63 + 8);
        JSC::VM::clearException((JSC::VM *)v5);
        WebCore::DeferredPromise::create((unint64_t)this, v79, 0, v88);
        WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v88[0], v69, 0);
        v70 = v88[0];
        v88[0] = 0;
        if (v70)
        {
          if (*((_DWORD *)v70 + 4) == 1)
            (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v70 + 16))(v70);
          else
            --*((_DWORD *)v70 + 4);
        }
      }
    }
  }
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  return v59;
}

unint64_t WebCore::jsNavigationPrototypeFunction_reload(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  JSC::Structure *v13;
  unint64_t v14;
  int v15;
  JSC::VM *v16;
  unint64_t v17;
  WebCore::DOMGuardedObject *v18;
  WebCore::DOMGuardedObject *v19;
  WebCore::DOMGuardedObject *v20;
  WebCore::DOMGuardedObject *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  char **v26;
  BOOL v27;
  WebCore::Navigation *v29;
  JSC::JSCell *v30;
  JSC::VM *v31;
  uint64_t Object;
  JSC::Structure *v33;
  WTF::StringImpl *v34;
  uint64_t v35;
  WTF::StringImpl *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _DWORD *v40;
  JSC::VM *v41;
  WebCore::DOMGuardedObject *v42;
  uint64_t v43;
  objc_class *v45;
  WebCore::DOMGuardedObject *v46;
  objc_class *v47;
  WebCore::DOMGuardedObject *v48;
  WebCore::DOMGuardedObject *v49;
  WebCore::DOMGuardedObject *v50;
  JSC::VM *v51;
  _DWORD *v52;
  WebCore::DOMGuardedObject *v53[2];

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D921E0);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v14 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v15 = *((_DWORD *)this + 291);
  if (v15)
    v16 = (JSC::VM *)(16 * (v15 & 0xFFFFFFFE));
  else
    v16 = 0;
  v17 = JSC::JSPromise::create((JSC::JSPromise *)v10, v16, v13);
  v18 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v19 = WebCore::DOMGuardedObject::DOMGuardedObject(v18, (unint64_t)this, v14);
  *(_QWORD *)v19 = &off_1E3226868;
  *((_DWORD *)v19 + 10) = 1;
  *((_BYTE *)v19 + 44) = 0;
  v50 = v19;
  v20 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v21 = WebCore::DOMGuardedObject::DOMGuardedObject(v20, (unint64_t)this, v17);
  *(_QWORD *)v21 = &off_1E3226868;
  *((_DWORD *)v21 + 10) = 1;
  *((_BYTE *)v21 + 44) = 0;
  v49 = v21;
  v23 = *((_QWORD *)a2 + 5);
  if ((v23 & 0xFFFE000000000002) == 0)
  {
    v24 = *(unsigned int *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0x4C);
    v25 = *(_DWORD *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0x4C) != 0;
    v26 = (char **)(16 * v24);
    if ((_DWORD)v24)
      v27 = v26 == &WebCore::JSNavigation::s_info;
    else
      v27 = 1;
    if (!v27)
    {
      do
      {
        v26 = (char **)v26[2];
        v25 = v26 != 0;
      }
      while (v26 != &WebCore::JSNavigation::s_info && v26 != 0);
    }
    if (v25)
    {
      v29 = *(WebCore::Navigation **)(v23 + 24);
      if (*((_DWORD *)a2 + 8) == 1
        || (v30 = (JSC::JSCell *)*((_QWORD *)a2 + 6),
            v31 = (JSC::VM *)*((_QWORD *)this + 7),
            v51 = v31,
            ((unint64_t)v30 & 0xFFFFFFFFFFFFFFF7) == 2))
      {
        v35 = 10;
        v37 = 10;
      }
      else
      {
        if (((unint64_t)v30 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v30)) == 0)
        {
          JSC::throwTypeError();
LABEL_64:
          v39 = 0;
          goto LABEL_48;
        }
        v33 = (JSC::Structure *)Object;
        WTF::AtomStringImpl::addLiteral();
        v35 = JSC::JSObject::get(v33, this, (unint64_t)v53[0]);
        if (v53[0])
        {
          if (*(_DWORD *)v53[0] == 2)
            WTF::StringImpl::destroy(v53[0], v34);
          else
            *(_DWORD *)v53[0] -= 2;
        }
        if (*((_DWORD *)v31 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v31) & 1) != 0)
          goto LABEL_64;
        WTF::AtomStringImpl::addLiteral();
        v37 = JSC::JSObject::get(v33, this, (unint64_t)v53[0]);
        if (v53[0])
        {
          if (*(_DWORD *)v53[0] == 2)
            WTF::StringImpl::destroy(v53[0], v36);
          else
            *(_DWORD *)v53[0] -= 2;
        }
        if (*((_DWORD *)v31 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v31))
          goto LABEL_64;
      }
      v38 = *(_QWORD *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0x28);
      v53[0] = (WebCore::DOMGuardedObject *)v35;
      v53[1] = (WebCore::DOMGuardedObject *)v37;
      WebCore::Navigation::reload(v29, (uint64_t *)v53, (uint64_t *)&v50, (uint64_t *)&v49, (uint64_t)&v51);
      v39 = WebCore::convertDictionaryToJS((uint64_t)this, *(_QWORD *)(v38 + 656), &v51);
      v40 = v52;
      v52 = 0;
      if (v40)
      {
        if (v40[4] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v40 + 16))(v40);
        else
          --v40[4];
      }
      v41 = v51;
      v51 = 0;
      if (v41)
      {
        if (*((_DWORD *)v41 + 4) == 1)
          (*(void (**)(JSC::VM *))(*(_QWORD *)v41 + 16))(v41);
        else
          --*((_DWORD *)v41 + 4);
      }
LABEL_48:
      v20 = v49;
      v49 = 0;
      if (!v20)
        goto LABEL_51;
      goto LABEL_49;
    }
  }
  v39 = WebCore::rejectPromiseWithThisTypeError(v18, (WebCore::DeferredPromise *)"Navigation", "reload", v22);
  v49 = 0;
LABEL_49:
  if (*((_DWORD *)v20 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v20 + 16))(v20);
  else
    --*((_DWORD *)v20 + 4);
LABEL_51:
  v42 = v50;
  v50 = 0;
  if (v42)
  {
    if (*((_DWORD *)v42 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v42 + 16))(v42);
    else
      --*((_DWORD *)v42 + 4);
  }
  v43 = *(_QWORD *)(v10 + 16);
  if (v43)
  {
    if (*(_QWORD *)(v10 + 24) == v43)
      goto LABEL_87;
    v45 = *(objc_class **)(v43 + 8);
    JSC::VM::clearException((JSC::VM *)v10);
    WebCore::DeferredPromise::create((unint64_t)this, v14, 0, v53);
    WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v53[0], v45, 0);
    v46 = v53[0];
    v53[0] = 0;
    if (v46)
    {
      if (*((_DWORD *)v46 + 4) == 1)
        (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v46 + 16))(v46);
      else
        --*((_DWORD *)v46 + 4);
    }
    v43 = *(_QWORD *)(v10 + 16);
    if (v43)
    {
LABEL_87:
      if (*(_QWORD *)(v10 + 24) != v43)
      {
        v47 = *(objc_class **)(v43 + 8);
        JSC::VM::clearException((JSC::VM *)v10);
        WebCore::DeferredPromise::create((unint64_t)this, v17, 0, v53);
        WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v53[0], v47, 0);
        v48 = v53[0];
        v53[0] = 0;
        if (v48)
        {
          if (*((_DWORD *)v48 + 4) == 1)
            (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v48 + 16))(v48);
          else
            --*((_DWORD *)v48 + 4);
        }
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 0;
  return v39;
}

unint64_t WebCore::jsNavigationPrototypeFunction_traverseTo(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  JSC::Structure *v13;
  unint64_t v14;
  int v15;
  JSC::VM *v16;
  unint64_t v17;
  WebCore::DOMGuardedObject *v18;
  WebCore::DOMGuardedObject *v19;
  WebCore::DOMGuardedObject *v20;
  WebCore::DOMGuardedObject *v21;
  JSC::JSGlobalObject *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  char **v27;
  BOOL v28;
  JSC::VM *v30;
  _DWORD *v31;
  uint64_t v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  uint64_t v35;
  uint64_t v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  JSValue v48;
  WTF::StringImpl *v49;
  objc_class *v50;
  WebCore::DOMGuardedObject *v51;
  objc_class *v52;
  WebCore::DOMGuardedObject *v53;
  unint64_t v54;
  WebCore::DOMGuardedObject *v55;
  WebCore::DOMGuardedObject *v56;
  WTF::StringImpl *v57;
  int v58;
  WTF::StringImpl *v59;
  int v60;
  WebCore::DOMGuardedObject *v61;
  _DWORD *v62;
  WTF::StringImpl *v63;
  const WTF::StringImpl *v64;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D926E8);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v14 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v15 = *((_DWORD *)this + 291);
  if (v15)
    v16 = (JSC::VM *)(16 * (v15 & 0xFFFFFFFE));
  else
    v16 = 0;
  v17 = JSC::JSPromise::create((JSC::JSPromise *)v10, v16, v13);
  v18 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v19 = WebCore::DOMGuardedObject::DOMGuardedObject(v18, (unint64_t)this, v14);
  *(_QWORD *)v19 = &off_1E3226868;
  *((_DWORD *)v19 + 10) = 1;
  *((_BYTE *)v19 + 44) = 0;
  v56 = v19;
  v20 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v54 = v17;
  v21 = WebCore::DOMGuardedObject::DOMGuardedObject(v20, (unint64_t)this, v17);
  *(_QWORD *)v21 = &off_1E3226868;
  *((_DWORD *)v21 + 10) = 1;
  *((_BYTE *)v21 + 44) = 0;
  v55 = v21;
  v24 = *((_QWORD *)a2 + 5);
  if ((v24 & 0xFFFE000000000002) != 0)
    goto LABEL_69;
  v25 = *(unsigned int *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0x4C);
  v26 = *(_DWORD *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0x4C) != 0;
  v27 = (char **)(16 * v25);
  if ((_DWORD)v25)
    v28 = v27 == &WebCore::JSNavigation::s_info;
  else
    v28 = 1;
  if (!v28)
  {
    do
    {
      v27 = (char **)v27[2];
      v26 = v27 != 0;
    }
    while (v27 != &WebCore::JSNavigation::s_info && v27 != 0);
  }
  if (!v26)
  {
LABEL_69:
    v47 = WebCore::rejectPromiseWithThisTypeError(v18, (WebCore::DeferredPromise *)"Navigation", "traverseTo", v23);
  }
  else
  {
    v30 = (JSC::VM *)*((_QWORD *)this + 7);
    if (*((_DWORD *)a2 + 8) != 1)
    {
      v31 = *(_DWORD **)(v24 + 24);
      v32 = *((_QWORD *)a2 + 6);
      v61 = (WebCore::DOMGuardedObject *)v32;
      if ((v32 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v32 + 5) != 2)
      {
        JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v61, this);
LABEL_35:
        if (*((_DWORD *)v30 + 20))
        {
          v34 = v57;
          if (JSC::VM::hasExceptionsAfterHandlingTraps(v30))
          {
            v60 = 1;
            v57 = 0;
            if (v34)
            {
              if (*(_DWORD *)v34 == 2)
                WTF::StringImpl::destroy(v34, v49);
              else
                *(_DWORD *)v34 -= 2;
            }
            v39 = 0;
            v40 = 1;
LABEL_52:
            ((void (*)(WebCore::DOMGuardedObject **, WTF::StringImpl **))off_1E32BEA70[v40])(&v61, &v59);
            v55 = 0;
            if (!v20)
              goto LABEL_55;
            goto LABEL_53;
          }
        }
        else
        {
          v34 = v57;
        }
        v59 = v34;
        v60 = 0;
        if ((unint64_t)(*((int *)a2 + 8) - 3) > 0xFFFFFFFFFFFFFFFDLL)
          v35 = 10;
        else
          v35 = *((_QWORD *)a2 + 7);
        WebCore::convertDictionary<WebCore::Navigation::Options>((uint64_t)&v57, this, (JSC::JSCell *)v35);
        if (v58)
        {
          v39 = 0;
        }
        else
        {
          v36 = *(_QWORD *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0x28);
          v59 = 0;
          v64 = v34;
          v63 = v57;
          WebCore::Navigation::traverseTo(v31, &v64, (const WTF::StringImpl *)&v63, (uint64_t *)&v56, (uint64_t *)&v55, &v61);
          v38 = v64;
          v64 = 0;
          if (v38)
          {
            if (*(_DWORD *)v38 == 2)
              WTF::StringImpl::destroy(v38, v37);
            else
              *(_DWORD *)v38 -= 2;
          }
          v39 = WebCore::convertDictionaryToJS((uint64_t)this, *(_QWORD *)(v36 + 656), &v61);
          if (v62)
          {
            if (v62[4] == 1)
              (*(void (**)(_DWORD *))(*(_QWORD *)v62 + 16))(v62);
            else
              --v62[4];
          }
          if (v61)
          {
            if (*((_DWORD *)v61 + 4) == 1)
              (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v61 + 16))(v61);
            else
              --*((_DWORD *)v61 + 4);
          }
          v20 = v55;
        }
        v40 = 0;
        goto LABEL_52;
      }
      v33 = *(WTF::StringImpl **)(v32 + 8);
      if ((v33 & 1) != 0)
      {
        v33 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v32, this);
        if (!v33)
          goto LABEL_34;
      }
      else if (!v33)
      {
LABEL_34:
        v57 = v33;
        goto LABEL_35;
      }
      *(_DWORD *)v33 += 2;
      goto LABEL_34;
    }
    v48.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v22);
    v47 = JSC::VM::throwException(v30, this, v48);
  }
  v39 = v47;
  v55 = 0;
LABEL_53:
  if (*((_DWORD *)v20 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v20 + 16))(v20);
  else
    --*((_DWORD *)v20 + 4);
LABEL_55:
  if (v56)
  {
    if (*((_DWORD *)v56 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v56 + 16))(v56, v41, v42, v43, v44);
    else
      --*((_DWORD *)v56 + 4);
  }
  v45 = *(_QWORD *)(v10 + 16);
  if (v45)
  {
    if (*(_QWORD *)(v10 + 24) == v45)
      goto LABEL_96;
    v50 = *(objc_class **)(v45 + 8);
    JSC::VM::clearException((JSC::VM *)v10);
    WebCore::DeferredPromise::create((unint64_t)this, v14, 0, &v61);
    WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v61, v50, 0);
    v51 = v61;
    v61 = 0;
    if (v51)
    {
      if (*((_DWORD *)v51 + 4) == 1)
        (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v51 + 16))(v51);
      else
        --*((_DWORD *)v51 + 4);
    }
    v45 = *(_QWORD *)(v10 + 16);
    if (v45)
    {
LABEL_96:
      if (*(_QWORD *)(v10 + 24) != v45)
      {
        v52 = *(objc_class **)(v45 + 8);
        JSC::VM::clearException((JSC::VM *)v10);
        WebCore::DeferredPromise::create((unint64_t)this, v54, 0, &v61);
        WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v61, v52, 0);
        v53 = v61;
        v61 = 0;
        if (v53)
        {
          if (*((_DWORD *)v53 + 4) == 1)
            (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v53 + 16))(v53);
          else
            --*((_DWORD *)v53 + 4);
        }
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 0;
  return v39;
}

unint64_t WebCore::jsNavigationPrototypeFunction_back(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  JSC::Structure *v13;
  unint64_t v14;
  int v15;
  JSC::VM *v16;
  unint64_t v17;
  WebCore::DOMGuardedObject *v18;
  WebCore::DOMGuardedObject *v19;
  WebCore::DOMGuardedObject *v20;
  WebCore::DOMGuardedObject *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  char **v26;
  BOOL v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _DWORD *v33;
  WebCore::DOMGuardedObject *v34;
  WebCore::DOMGuardedObject *v35;
  uint64_t v36;
  objc_class *v38;
  WebCore::DOMGuardedObject *v39;
  objc_class *v40;
  WebCore::DOMGuardedObject *v41;
  WebCore::DOMGuardedObject *v42;
  WebCore::DOMGuardedObject *v43;
  uint64_t v44;
  int v45;
  WebCore::DOMGuardedObject *v46;
  _DWORD *v47;
  uint64_t v48;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D92B6CLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v14 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v15 = *((_DWORD *)this + 291);
  if (v15)
    v16 = (JSC::VM *)(16 * (v15 & 0xFFFFFFFE));
  else
    v16 = 0;
  v17 = JSC::JSPromise::create((JSC::JSPromise *)v10, v16, v13);
  v18 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v19 = WebCore::DOMGuardedObject::DOMGuardedObject(v18, (unint64_t)this, v14);
  *(_QWORD *)v19 = &off_1E3226868;
  *((_DWORD *)v19 + 10) = 1;
  *((_BYTE *)v19 + 44) = 0;
  v43 = v19;
  v20 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v21 = WebCore::DOMGuardedObject::DOMGuardedObject(v20, (unint64_t)this, v17);
  *(_QWORD *)v21 = &off_1E3226868;
  *((_DWORD *)v21 + 10) = 1;
  *((_BYTE *)v21 + 44) = 0;
  v42 = v21;
  v23 = *((_QWORD *)a2 + 5);
  if ((v23 & 0xFFFE000000000002) != 0)
    goto LABEL_51;
  v24 = *(unsigned int *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0x4C);
  v25 = *(_DWORD *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0x4C) != 0;
  v26 = (char **)(16 * v24);
  if ((_DWORD)v24)
    v27 = v26 == &WebCore::JSNavigation::s_info;
  else
    v27 = 1;
  if (!v27)
  {
    do
    {
      v26 = (char **)v26[2];
      v25 = v26 != 0;
    }
    while (v26 != &WebCore::JSNavigation::s_info && v26 != 0);
  }
  if (!v25)
  {
LABEL_51:
    v32 = WebCore::rejectPromiseWithThisTypeError(v18, (WebCore::DeferredPromise *)"Navigation", "back", v22);
    v42 = 0;
LABEL_39:
    if (*((_DWORD *)v20 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v20 + 16))(v20);
    else
      --*((_DWORD *)v20 + 4);
    goto LABEL_41;
  }
  if (*((_DWORD *)a2 + 8) == 1)
    v29 = 10;
  else
    v29 = *((_QWORD *)a2 + 6);
  v30 = *(_QWORD *)(v23 + 24);
  WebCore::convertDictionary<WebCore::Navigation::Options>((uint64_t)&v44, this, (JSC::JSCell *)v29);
  if (v45)
  {
    v32 = 0;
  }
  else
  {
    v31 = *(_QWORD *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0x28);
    v48 = v44;
    WebCore::Navigation::back(v30, &v48, (uint64_t *)&v43, (uint64_t *)&v42, &v46);
    v32 = WebCore::convertDictionaryToJS((uint64_t)this, *(_QWORD *)(v31 + 656), &v46);
    v33 = v47;
    v47 = 0;
    if (v33)
    {
      if (v33[4] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v33 + 16))(v33);
      else
        --v33[4];
    }
    v34 = v46;
    v46 = 0;
    if (v34)
    {
      if (*((_DWORD *)v34 + 4) == 1)
        (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v34 + 16))(v34);
      else
        --*((_DWORD *)v34 + 4);
    }
  }
  v20 = v42;
  v42 = 0;
  if (v20)
    goto LABEL_39;
LABEL_41:
  v35 = v43;
  v43 = 0;
  if (v35)
  {
    if (*((_DWORD *)v35 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v35 + 16))(v35);
    else
      --*((_DWORD *)v35 + 4);
  }
  v36 = *(_QWORD *)(v10 + 16);
  if (v36)
  {
    if (*(_QWORD *)(v10 + 24) == v36)
      goto LABEL_70;
    v38 = *(objc_class **)(v36 + 8);
    JSC::VM::clearException((JSC::VM *)v10);
    WebCore::DeferredPromise::create((unint64_t)this, v14, 0, &v46);
    WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v46, v38, 0);
    v39 = v46;
    v46 = 0;
    if (v39)
    {
      if (*((_DWORD *)v39 + 4) == 1)
        (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v39 + 16))(v39);
      else
        --*((_DWORD *)v39 + 4);
    }
    v36 = *(_QWORD *)(v10 + 16);
    if (v36)
    {
LABEL_70:
      if (*(_QWORD *)(v10 + 24) != v36)
      {
        v40 = *(objc_class **)(v36 + 8);
        JSC::VM::clearException((JSC::VM *)v10);
        WebCore::DeferredPromise::create((unint64_t)this, v17, 0, &v46);
        WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v46, v40, 0);
        v41 = v46;
        v46 = 0;
        if (v41)
        {
          if (*((_DWORD *)v41 + 4) == 1)
            (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v41 + 16))(v41);
          else
            --*((_DWORD *)v41 + 4);
        }
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 0;
  return v32;
}

unint64_t WebCore::jsNavigationPrototypeFunction_forward(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  JSC::Structure *v13;
  unint64_t v14;
  int v15;
  JSC::VM *v16;
  unint64_t v17;
  WebCore::DOMGuardedObject *v18;
  WebCore::DOMGuardedObject *v19;
  WebCore::DOMGuardedObject *v20;
  WebCore::DOMGuardedObject *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  char **v26;
  BOOL v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _DWORD *v33;
  WebCore::DOMGuardedObject *v34;
  WebCore::DOMGuardedObject *v35;
  uint64_t v36;
  objc_class *v38;
  WebCore::DOMGuardedObject *v39;
  objc_class *v40;
  WebCore::DOMGuardedObject *v41;
  WebCore::DOMGuardedObject *v42;
  WebCore::DOMGuardedObject *v43;
  uint64_t v44;
  int v45;
  WebCore::DOMGuardedObject *v46;
  _DWORD *v47;
  uint64_t v48;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D92F84);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v14 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v15 = *((_DWORD *)this + 291);
  if (v15)
    v16 = (JSC::VM *)(16 * (v15 & 0xFFFFFFFE));
  else
    v16 = 0;
  v17 = JSC::JSPromise::create((JSC::JSPromise *)v10, v16, v13);
  v18 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v19 = WebCore::DOMGuardedObject::DOMGuardedObject(v18, (unint64_t)this, v14);
  *(_QWORD *)v19 = &off_1E3226868;
  *((_DWORD *)v19 + 10) = 1;
  *((_BYTE *)v19 + 44) = 0;
  v43 = v19;
  v20 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v21 = WebCore::DOMGuardedObject::DOMGuardedObject(v20, (unint64_t)this, v17);
  *(_QWORD *)v21 = &off_1E3226868;
  *((_DWORD *)v21 + 10) = 1;
  *((_BYTE *)v21 + 44) = 0;
  v42 = v21;
  v23 = *((_QWORD *)a2 + 5);
  if ((v23 & 0xFFFE000000000002) != 0)
    goto LABEL_51;
  v24 = *(unsigned int *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0x4C);
  v25 = *(_DWORD *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0x4C) != 0;
  v26 = (char **)(16 * v24);
  if ((_DWORD)v24)
    v27 = v26 == &WebCore::JSNavigation::s_info;
  else
    v27 = 1;
  if (!v27)
  {
    do
    {
      v26 = (char **)v26[2];
      v25 = v26 != 0;
    }
    while (v26 != &WebCore::JSNavigation::s_info && v26 != 0);
  }
  if (!v25)
  {
LABEL_51:
    v32 = WebCore::rejectPromiseWithThisTypeError(v18, (WebCore::DeferredPromise *)"Navigation", "forward", v22);
    v42 = 0;
LABEL_39:
    if (*((_DWORD *)v20 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v20 + 16))(v20);
    else
      --*((_DWORD *)v20 + 4);
    goto LABEL_41;
  }
  if (*((_DWORD *)a2 + 8) == 1)
    v29 = 10;
  else
    v29 = *((_QWORD *)a2 + 6);
  v30 = *(_QWORD *)(v23 + 24);
  WebCore::convertDictionary<WebCore::Navigation::Options>((uint64_t)&v44, this, (JSC::JSCell *)v29);
  if (v45)
  {
    v32 = 0;
  }
  else
  {
    v31 = *(_QWORD *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0x28);
    v48 = v44;
    WebCore::Navigation::forward(v30, &v48, (uint64_t *)&v43, (uint64_t *)&v42, &v46);
    v32 = WebCore::convertDictionaryToJS((uint64_t)this, *(_QWORD *)(v31 + 656), &v46);
    v33 = v47;
    v47 = 0;
    if (v33)
    {
      if (v33[4] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v33 + 16))(v33);
      else
        --v33[4];
    }
    v34 = v46;
    v46 = 0;
    if (v34)
    {
      if (*((_DWORD *)v34 + 4) == 1)
        (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v34 + 16))(v34);
      else
        --*((_DWORD *)v34 + 4);
    }
  }
  v20 = v42;
  v42 = 0;
  if (v20)
    goto LABEL_39;
LABEL_41:
  v35 = v43;
  v43 = 0;
  if (v35)
  {
    if (*((_DWORD *)v35 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v35 + 16))(v35);
    else
      --*((_DWORD *)v35 + 4);
  }
  v36 = *(_QWORD *)(v10 + 16);
  if (v36)
  {
    if (*(_QWORD *)(v10 + 24) == v36)
      goto LABEL_70;
    v38 = *(objc_class **)(v36 + 8);
    JSC::VM::clearException((JSC::VM *)v10);
    WebCore::DeferredPromise::create((unint64_t)this, v14, 0, &v46);
    WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v46, v38, 0);
    v39 = v46;
    v46 = 0;
    if (v39)
    {
      if (*((_DWORD *)v39 + 4) == 1)
        (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v39 + 16))(v39);
      else
        --*((_DWORD *)v39 + 4);
    }
    v36 = *(_QWORD *)(v10 + 16);
    if (v36)
    {
LABEL_70:
      if (*(_QWORD *)(v10 + 24) != v36)
      {
        v40 = *(objc_class **)(v36 + 8);
        JSC::VM::clearException((JSC::VM *)v10);
        WebCore::DeferredPromise::create((unint64_t)this, v17, 0, &v46);
        WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v46, v40, 0);
        v41 = v46;
        v46 = 0;
        if (v41)
        {
          if (*((_DWORD *)v41 + 4) == 1)
            (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v41 + 16))(v41);
          else
            --*((_DWORD *)v41 + 4);
        }
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 0;
  return v32;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore33NavigationCurrentEntryChangeEvent4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  WebCore::HistoryItem *v3;
  void *v4;
  bmalloc::api *v5;
  void *v6;
  WTF *v7;
  void *v8;

  v2 = *((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (v2)
  {
    if (*(_DWORD *)(v2 + 24) == 1)
    {
      v3 = *(WebCore::HistoryItem **)(v2 + 64);
      *(_QWORD *)(v2 + 64) = 0;
      if (v3)
      {
        if (*(_DWORD *)v3 == 1)
        {
          WebCore::HistoryItem::~HistoryItem(v3, a2);
          WTF::fastFree(v7, v8);
        }
        else
        {
          --*(_DWORD *)v3;
        }
      }
      WebCore::ContextDestructionObserver::~ContextDestructionObserver((WebCore::ContextDestructionObserver *)(v2 + 32), a2);
      WebCore::EventTarget::~EventTarget((WebCore::EventTarget *)v2, v4);
      bmalloc::api::isoDeallocate(v5, v6);
    }
    else
    {
      --*(_DWORD *)(v2 + 24);
    }
  }
}

uint64_t WebCore::jsNavigationDestinationPrototypeFunction_getState(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v12;

  v4 = *((_QWORD *)a2 + 5);
  v12 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v12, "NavigationDestination", "getState");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSNavigationDestination::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSNavigationDestination::s_info && v7 != 0);
  }
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v12, "NavigationDestination", "getState");
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 24) + 72);
  if (v10)
    return (uint64_t)WebCore::SerializedScriptValue::deserialize(v10, this, this, 1, 0);
  else
    return 10;
}

uint64_t WebCore::jsNavigationHistoryEntryPrototypeFunction_getState(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _DWORD *v14;
  void *v15;
  uint64_t v16;
  uint64_t v18;

  v4 = *((_QWORD *)a2 + 5);
  v18 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v18, "NavigationHistoryEntry", "getState");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSNavigationHistoryEntry::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSNavigationHistoryEntry::s_info && v7 != 0);
  }
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v18, "NavigationHistoryEntry", "getState");
  v10 = *(_QWORD *)(v4 + 24);
  v11 = *(_QWORD *)(v10 + 40);
  if (!v11)
    return 10;
  v12 = *(_QWORD *)(v11 + 8);
  if (!v12 || *(_BYTE *)(v12 + 178))
    return 10;
  v14 = (_DWORD *)(v12 - 264);
  *(_DWORD *)(v12 - 264) += 2;
  if (WebCore::Document::isFullyActive((WebCore::Document *)(v12 - 288))
    && (v16 = *(_QWORD *)(*(_QWORD *)(v10 + 64) + 176)) != 0)
  {
    v13 = (uint64_t)WebCore::SerializedScriptValue::deserialize(v16, this, this, 1, 0);
  }
  else
  {
    v13 = 10;
  }
  if (*v14 == 2)
  {
    if ((*(_WORD *)(v12 - 258) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)(v12 - 288), v15);
  }
  else
  {
    *v14 -= 2;
  }
  return v13;
}

unint64_t WebCore::jsNavigationPreloadManagerPrototypeFunction_enable(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  WebCore::DOMGuardedObject *v26;
  WebCore::DOMGuardedObject *v27;
  void (*v28)(void);
  uint64_t v29;
  objc_class *v31;
  WebCore::DOMGuardedObject *v32;
  WebCore::DOMGuardedObject *v33;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D93518);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_31;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSNavigationPreloadManager::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSNavigationPreloadManager::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_31:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"NavigationPreloadManager", "enable", v16);
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_28;
    }
    v28 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_27;
  }
  v23 = **(_QWORD **)(v17 + 24);
  v24 = *(_QWORD *)(v23 + 144);
  v25 = WebCore::ServiceWorkerContainer::ensureSWClientConnection(*(WebCore::ServiceWorkerContainer **)(v23 + 424));
  v26 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x10);
  *(_QWORD *)v26 = &off_1E347ED50;
  *((_QWORD *)v26 + 1) = v14;
  v33 = v26;
  (*(void (**)(uint64_t, uint64_t, WebCore::DOMGuardedObject **))(*(_QWORD *)v25 + 184))(v25, v24, &v33);
  v27 = v33;
  v33 = 0;
  if (v27)
  {
    v28 = *(void (**)(void))(*(_QWORD *)v27 + 8);
LABEL_27:
    v28();
  }
LABEL_28:
  v29 = *(_QWORD *)(v10 + 16);
  if (v29)
  {
    if (*(_QWORD *)(v10 + 24) != v29)
    {
      v31 = *(objc_class **)(v29 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v33);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v33, v31, 0);
      v32 = v33;
      v33 = 0;
      if (v32)
      {
        if (*((_DWORD *)v32 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v32 + 16))(v32);
        else
          --*((_DWORD *)v32 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsNavigationPreloadManagerPrototypeFunction_disable(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  WebCore::DOMGuardedObject *v26;
  WebCore::DOMGuardedObject *v27;
  void (*v28)(void);
  uint64_t v29;
  objc_class *v31;
  WebCore::DOMGuardedObject *v32;
  WebCore::DOMGuardedObject *v33;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D9379CLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_31;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSNavigationPreloadManager::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSNavigationPreloadManager::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_31:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"NavigationPreloadManager", "disable", v16);
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_28;
    }
    v28 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_27;
  }
  v23 = **(_QWORD **)(v17 + 24);
  v24 = *(_QWORD *)(v23 + 144);
  v25 = WebCore::ServiceWorkerContainer::ensureSWClientConnection(*(WebCore::ServiceWorkerContainer **)(v23 + 424));
  v26 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x10);
  *(_QWORD *)v26 = &off_1E347ED78;
  *((_QWORD *)v26 + 1) = v14;
  v33 = v26;
  (*(void (**)(uint64_t, uint64_t, WebCore::DOMGuardedObject **))(*(_QWORD *)v25 + 192))(v25, v24, &v33);
  v27 = v33;
  v33 = 0;
  if (v27)
  {
    v28 = *(void (**)(void))(*(_QWORD *)v27 + 8);
LABEL_27:
    v28();
  }
LABEL_28:
  v29 = *(_QWORD *)(v10 + 16);
  if (v29)
  {
    if (*(_QWORD *)(v10 + 24) != v29)
    {
      v31 = *(objc_class **)(v29 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v33);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v33, v31, 0);
      v32 = v33;
      v33 = 0;
      if (v32)
      {
        if (*((_DWORD *)v32 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v32 + 16))(v32);
        else
          --*((_DWORD *)v32 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsNavigationPreloadManagerPrototypeFunction_setHeaderValue(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  WebCore::ServiceWorkerContainer *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  WTF::StringImpl *v31;
  _QWORD *v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  JSC::VM *v36;
  JSValue v37;
  objc_class *v38;
  WebCore::DOMGuardedObject *v39;
  WebCore::DOMGuardedObject *v40;
  unsigned int v41;
  WTF::StringImpl *v42;
  _QWORD *v43;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D93AC0);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_41;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSNavigationPreloadManager::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSNavigationPreloadManager::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_41:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"NavigationPreloadManager", "setHeaderValue", v17);
  }
  else if (*((_DWORD *)a2 + 8) == 1)
  {
    v36 = (JSC::VM *)*((_QWORD *)this + 7);
    v37.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v36, this, v37);
  }
  else
  {
    v24 = *(_QWORD *)(v18 + 24);
    WebCore::valueToByteString(this, *((_QWORD *)a2 + 6), (uint64_t)&v40);
    v25 = v41;
    if (!v41)
    {
      v26 = v40;
      v40 = 0;
      v42 = v26;
      v27 = *(WebCore::ServiceWorkerContainer **)(*(_QWORD *)v24 + 424);
      v28 = *(_QWORD *)(*(_QWORD *)v24 + 144);
      v29 = WebCore::ServiceWorkerContainer::ensureSWClientConnection(v27);
      v30 = (_QWORD *)WTF::fastMalloc((WTF *)0x10);
      *v30 = &off_1E347EDA0;
      v30[1] = v14;
      v43 = v30;
      (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **, _QWORD **))(*(_QWORD *)v29 + 200))(v29, v28, &v42, &v43);
      v32 = v43;
      v43 = 0;
      if (v32)
        (*(void (**)(_QWORD *))(*v32 + 8))(v32);
      v33 = v42;
      v42 = 0;
      if (v33)
      {
        if (*(_DWORD *)v33 == 2)
          WTF::StringImpl::destroy(v33, v31);
        else
          *(_DWORD *)v33 -= 2;
      }
      v14 = 0;
LABEL_33:
      ((void (*)(_QWORD **, WebCore::DOMGuardedObject **))off_1E32BEA70[v25])(&v43, &v40);
      if (!v14)
        goto LABEL_36;
      goto LABEL_34;
    }
    if (v41 != -1)
      goto LABEL_33;
  }
LABEL_34:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_36:
  v34 = *(_QWORD *)(v10 + 16);
  if (v34)
  {
    if (*(_QWORD *)(v10 + 24) != v34)
    {
      v38 = *(objc_class **)(v34 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v40);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v40, v38, 0);
      v39 = v40;
      v40 = 0;
      if (v39)
      {
        if (*((_DWORD *)v39 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v39 + 16))(v39);
        else
          --*((_DWORD *)v39 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsNavigationPreloadManagerPrototypeFunction_getState(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  WebCore::DOMGuardedObject *v26;
  WebCore::DOMGuardedObject *v27;
  void (*v28)(void);
  uint64_t v29;
  objc_class *v31;
  WebCore::DOMGuardedObject *v32;
  WebCore::DOMGuardedObject *v33;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D93D68);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_31;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSNavigationPreloadManager::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSNavigationPreloadManager::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_31:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"NavigationPreloadManager", "getState", v16);
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_28;
    }
    v28 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_27;
  }
  v23 = **(_QWORD **)(v17 + 24);
  v24 = *(_QWORD *)(v23 + 144);
  v25 = WebCore::ServiceWorkerContainer::ensureSWClientConnection(*(WebCore::ServiceWorkerContainer **)(v23 + 424));
  v26 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x10);
  *(_QWORD *)v26 = &off_1E347EDC8;
  *((_QWORD *)v26 + 1) = v14;
  v33 = v26;
  (*(void (**)(uint64_t, uint64_t, WebCore::DOMGuardedObject **))(*(_QWORD *)v25 + 208))(v25, v24, &v33);
  v27 = v33;
  v33 = 0;
  if (v27)
  {
    v28 = *(void (**)(void))(*(_QWORD *)v27 + 8);
LABEL_27:
    v28();
  }
LABEL_28:
  v29 = *(_QWORD *)(v10 + 16);
  if (v29)
  {
    if (*(_QWORD *)(v10 + 24) != v29)
    {
      v31 = *(objc_class **)(v29 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v33);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v33, v31, 0);
      v32 = v33;
      v33 = 0;
      if (v32)
      {
        if (*((_DWORD *)v32 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v32 + 16))(v32);
        else
          --*((_DWORD *)v32 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsNavigatorPrototypeFunction_setClientBadge(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  _QWORD *v23;
  unint64_t v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  uint64_t v27;
  objc_class *v29;
  WebCore::DOMGuardedObject *v30;
  WebCore::DOMGuardedObject *v31;
  WebCore::DOMGuardedObject *v32;
  int v33;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D94020);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v31 = v15;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) == 0)
  {
    v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v20 = (char **)(16 * v18);
    if ((_DWORD)v18)
      v21 = v20 == &WebCore::JSNavigator::s_info;
    else
      v21 = 1;
    if (!v21)
    {
      do
      {
        v20 = (char **)v20[2];
        v19 = v20 != 0;
      }
      while (v20 != &WebCore::JSNavigator::s_info && v20 != 0);
    }
    if (v19)
    {
      v23 = *(_QWORD **)(v17 + 24);
      if (*((_DWORD *)a2 + 8) == 1)
      {
        v25 = 0;
        v26 = 0;
      }
      else
      {
        v24 = *((_QWORD *)a2 + 6);
        if (v24 == 10)
        {
          v25 = 0;
          v26 = 0;
        }
        else
        {
          WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLongLong>(this, v24, (uint64_t)&v32);
          if (v33)
            goto LABEL_32;
          v25 = v32;
          v26 = 1;
        }
      }
      WebCore::Navigator::setClientBadge(v23, v25, v26, (uint64_t *)&v31);
LABEL_32:
      v14 = v31;
      v31 = 0;
      if (!v14)
        goto LABEL_35;
      goto LABEL_33;
    }
  }
  WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Navigator", "setClientBadge", v16);
  v31 = 0;
LABEL_33:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_35:
  v27 = *(_QWORD *)(v10 + 16);
  if (v27)
  {
    if (*(_QWORD *)(v10 + 24) != v27)
    {
      v29 = *(objc_class **)(v27 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v32);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v32, v29, 0);
      v30 = v32;
      v32 = 0;
      if (v30)
      {
        if (*((_DWORD *)v30 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v30 + 16))(v30);
        else
          --*((_DWORD *)v30 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsNavigatorPrototypeFunction_clearClientBadge(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  objc_class *v25;
  WebCore::DOMGuardedObject *v26;
  WebCore::DOMGuardedObject *v27;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D94270);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v27 = v15;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_32;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSNavigator::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSNavigator::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_32:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Navigator", "clearClientBadge", v16);
    v27 = 0;
  }
  else
  {
    WebCore::Navigator::setClientBadge(*(_QWORD **)(v17 + 24), 0, 1, (uint64_t *)&v27);
    v14 = v27;
    v27 = 0;
    if (!v14)
      goto LABEL_28;
  }
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_28:
  v23 = *(_QWORD *)(v10 + 16);
  if (v23)
  {
    if (*(_QWORD *)(v10 + 24) != v23)
    {
      v25 = *(objc_class **)(v23 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v27);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v27, v25, 0);
      v26 = v27;
      v27 = 0;
      if (v26)
      {
        if (*((_DWORD *)v26 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v26 + 16))(v26);
        else
          --*((_DWORD *)v26 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsNavigatorPrototypeFunction_setAppBadge(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  unint64_t v24;
  WebCore::DOMGuardedObject *v25;
  uint64_t v26;
  uint64_t v27;
  objc_class *v29;
  WebCore::DOMGuardedObject *v30;
  WebCore::DOMGuardedObject *v31;
  WebCore::DOMGuardedObject *v32;
  int v33;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D94518);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v31 = v15;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) == 0)
  {
    v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v20 = (char **)(16 * v18);
    if ((_DWORD)v18)
      v21 = v20 == &WebCore::JSNavigator::s_info;
    else
      v21 = 1;
    if (!v21)
    {
      do
      {
        v20 = (char **)v20[2];
        v19 = v20 != 0;
      }
      while (v20 != &WebCore::JSNavigator::s_info && v20 != 0);
    }
    if (v19)
    {
      v23 = *(_QWORD *)(v17 + 24);
      if (*((_DWORD *)a2 + 8) == 1)
      {
        v25 = 0;
        v26 = 0;
      }
      else
      {
        v24 = *((_QWORD *)a2 + 6);
        if (v24 == 10)
        {
          v25 = 0;
          v26 = 0;
        }
        else
        {
          WebCore::convertToIntegerEnforceRange<WebCore::IDLUnsignedLongLong>(this, v24, (uint64_t)&v32);
          if (v33)
            goto LABEL_32;
          v25 = v32;
          v26 = 1;
        }
      }
      WebCore::Navigator::setAppBadge(v23, (uint64_t)v25, v26, (uint64_t *)&v31);
LABEL_32:
      v14 = v31;
      v31 = 0;
      if (!v14)
        goto LABEL_35;
      goto LABEL_33;
    }
  }
  WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Navigator", "setAppBadge", v16);
  v31 = 0;
LABEL_33:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_35:
  v27 = *(_QWORD *)(v10 + 16);
  if (v27)
  {
    if (*(_QWORD *)(v10 + 24) != v27)
    {
      v29 = *(objc_class **)(v27 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v32);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v32, v29, 0);
      v30 = v32;
      v32 = 0;
      if (v30)
      {
        if (*((_DWORD *)v30 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v30 + 16))(v30);
        else
          --*((_DWORD *)v30 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsNavigatorPrototypeFunction_clearAppBadge(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  objc_class *v25;
  WebCore::DOMGuardedObject *v26;
  WebCore::DOMGuardedObject *v27;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D94768);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v27 = v15;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_32;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSNavigator::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSNavigator::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_32:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Navigator", "clearAppBadge", v16);
    v27 = 0;
  }
  else
  {
    WebCore::Navigator::setAppBadge(*(_QWORD *)(v17 + 24), 0, 1, (uint64_t *)&v27);
    v14 = v27;
    v27 = 0;
    if (!v14)
      goto LABEL_28;
  }
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_28:
  v23 = *(_QWORD *)(v10 + 16);
  if (v23)
  {
    if (*(_QWORD *)(v10 + 24) != v23)
    {
      v25 = *(objc_class **)(v23 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v27);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v27, v25, 0);
      v26 = v27;
      v27 = 0;
      if (v26)
      {
        if (*((_DWORD *)v26 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v26 + 16))(v26);
        else
          --*((_DWORD *)v26 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

uint64_t WebCore::jsNavigatorPrototypeFunction_sendBeacon(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  JSC::JSArrayBufferView *v16;
  int v17;
  WebCore::CachedResourceLoader **v18;
  WTF::StringImpl *v19;
  const char **v20;
  uint64_t v21;
  const char *v22;
  unsigned int v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  JSValue v30;
  WTF::StringImpl *v31;
  JSValue v32;
  WebCore *v33;
  JSC::JSGlobalObject *v34;
  JSC::CallFrame *v35;
  JSC::VM *v36;
  _BYTE v37[8];
  int v38;
  char v39;
  WTF::StringImpl *v40;
  int v41;
  WTF::StringImpl *v42;
  int v43;
  WTF::StringImpl *v44;
  int v45;
  const char *v46;
  WTF::StringImpl *v47;
  _BYTE v48[8];
  _BYTE v49[24];
  int v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v36 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v36, "Navigator", "sendBeacon");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSNavigator::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSNavigator::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v36, "Navigator", "sendBeacon");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v30.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v30);
  }
  v12 = *(_QWORD *)(v5 + 24);
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v13)
    return 10;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194D94B58);
  }
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v44);
  v15 = v45;
  if (v45)
  {
    v26 = 0;
LABEL_40:
    if (v15 != -1)
      ((void (*)(_BYTE *, WTF::StringImpl **))off_1E32BEA70[v15])(v48, &v44);
    return v26;
  }
  if ((unint64_t)(*((int *)a2 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL
    || (v16 = (JSC::JSArrayBufferView *)*((_QWORD *)a2 + 7), v16 == (JSC::JSArrayBufferView *)10))
  {
    v49[0] = 0;
    v49[16] = 0;
    v50 = 0;
  }
  else
  {
    WebCore::Converter<WebCore::IDLNullable<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::Blob>,WebCore::IDLArrayBufferView,WebCore::IDLArrayBuffer,WebCore::IDLInterface<WebCore::DOMFormData>,WebCore::IDLInterface<WebCore::URLSearchParams>,WebCore::IDLInterface<WebCore::ReadableStream>,WebCore::IDLUSVString>>>::convert(this, v16, (uint64_t)v48);
    v17 = v50;
    if (v50)
    {
      v26 = 0;
LABEL_37:
      if (v17 != -1)
        ((void (*)(int *, _BYTE *))off_1E32C0B50[v17])(&v41, v49);
      v15 = v45;
      goto LABEL_40;
    }
    if (v45)
      goto LABEL_60;
  }
  v18 = (WebCore::CachedResourceLoader **)(v14 - 192);
  v19 = v44;
  v44 = 0;
  v40 = v19;
  WebCore::Detail::ConversionResultStorage<std::optional<std::variant<WTF::RefPtr<WebCore::Blob,WTF::RawPtrTraits<WebCore::Blob>,WTF::DefaultRefDerefTraits<WebCore::Blob>>,WTF::RefPtr<JSC::ArrayBufferView,WTF::RawPtrTraits<JSC::ArrayBufferView>,WTF::DefaultRefDerefTraits<JSC::ArrayBufferView>>,WTF::RefPtr<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>,WTF::RefPtr<WebCore::DOMFormData,WTF::RawPtrTraits<WebCore::DOMFormData>,WTF::DefaultRefDerefTraits<WebCore::DOMFormData>>,WTF::RefPtr<WebCore::URLSearchParams,WTF::RawPtrTraits<WebCore::URLSearchParams>,WTF::DefaultRefDerefTraits<WebCore::URLSearchParams>>,WTF::RefPtr<WebCore::ReadableStream,WTF::RawPtrTraits<WebCore::ReadableStream>,WTF::DefaultRefDerefTraits<WebCore::ReadableStream>>,WTF::String>>>::releaseReturnValue((uint64_t)v48, (uint64_t)v37);
  v46 = "NavigatorBeacon";
  v47 = (WTF::StringImpl *)16;
  v20 = WTF::HashTable<WTF::ASCIILiteral,WTF::KeyValuePair<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashMap<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashTraits<WTF::ASCIILiteral>,WTF::HashTraits<std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::ASCIILiteral>>::lookup<WTF::HashMapTranslatorAdapter<WTF::HashMap<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashTraits<WTF::ASCIILiteral>,WTF::HashTraits<std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::IdentityHashTranslator<WTF::HashMap<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashTraits<WTF::ASCIILiteral>,WTF::HashTraits<std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::DefaultHash<WTF::ASCIILiteral>>>,WTF::ASCIILiteral>((uint64_t *)(v12 + 72), (unsigned __int8 **)&v46);
  if (!v20 || (v21 = (uint64_t)v20[2]) == 0)
  {
    v21 = WTF::fastMalloc((WTF *)0x30);
    *(_QWORD *)v21 = off_1E3352FC8;
    *(_QWORD *)(v21 + 8) = &unk_1E3352FF0;
    *(_QWORD *)(v21 + 16) = 0;
    *(_QWORD *)(v21 + 24) = v12;
    *(_QWORD *)(v21 + 32) = 0;
    *(_QWORD *)(v21 + 40) = 0;
    v46 = (const char *)v21;
    WebCore::Supplement<WebCore::Navigator>::provideTo((uint64_t *)(v12 + 72), "NavigatorBeacon", (unsigned __int8 *)0x10, &v46);
    v22 = v46;
    v46 = 0;
    if (v22)
      (*(void (**)(const char *))(*(_QWORD *)v22 + 8))(v22);
  }
  WebCore::NavigatorBeacon::sendBeacon(v18, v21, &v40, (uint64_t)v37, (uint64_t)&v41);
  v23 = v43;
  if (!v43)
  {
    if ((_BYTE)v41)
      v24 = 7;
    else
      v24 = 6;
LABEL_29:
    off_1E32C0B40[v23](&v46, &v41);
    v26 = v24;
LABEL_30:
    v43 = -1;
    if (v39 && v38 != -1)
      ((void (*)(const char **, _BYTE *))off_1E32C0B08[v38])(&v46, v37);
    v27 = v40;
    v40 = 0;
    if (v27)
    {
      if (*(_DWORD *)v27 == 2)
        WTF::StringImpl::destroy(v27, v25);
      else
        *(_DWORD *)v27 -= 2;
    }
    v17 = v50;
    goto LABEL_37;
  }
  if (v43 == 1)
  {
    v25 = (WTF::StringImpl *)v41;
    LOBYTE(v46) = v41;
    v31 = v42;
    v42 = 0;
    v47 = v31;
    if (!*((_QWORD *)v4 + 2))
    {
      v32.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v41, (JSC::JSGlobalObject *)&v47);
      JSC::VM::throwException(v4, this, v32);
      v31 = v47;
    }
    v47 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 2)
        WTF::StringImpl::destroy(v31, v25);
      else
        *(_DWORD *)v31 -= 2;
    }
    v24 = 0;
    v26 = 0;
    v23 = v43;
    if (v43 == -1)
      goto LABEL_30;
    goto LABEL_29;
  }
LABEL_60:
  v33 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsNavigatorPrototypeFunction_requestCookieConsent(v33, v34, v35);
}

unint64_t WebCore::jsNavigatorPrototypeFunction_requestCookieConsent(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  const char **v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  uint64_t v31;
  objc_class *v33;
  unsigned __int8 *v34;
  WebCore::DOMGuardedObject *v35;
  _DWORD *v36;
  unsigned int v37;
  unsigned __int8 *v38[2];

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D94EBCLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v35 = v15;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) == 0)
  {
    v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v20 = (char **)(16 * v18);
    if ((_DWORD)v18)
      v21 = v20 == &WebCore::JSNavigator::s_info;
    else
      v21 = 1;
    if (!v21)
    {
      do
      {
        v20 = (char **)v20[2];
        v19 = v20 != 0;
      }
      while (v20 != &WebCore::JSNavigator::s_info && v20 != 0);
    }
    if (v19)
    {
      if (*((_DWORD *)a2 + 8) == 1)
        v23 = 10;
      else
        v23 = *((_QWORD *)a2 + 6);
      v24 = *(_QWORD *)(v17 + 24);
      WebCore::convertDictionary<WebCore::RequestCookieConsentOptions>((JSC::JSCell *)v23, this, (uint64_t)&v36);
      v25 = v37;
      if (v37)
      {
        if (v37 == -1)
        {
LABEL_37:
          v14 = v35;
          if (!v35)
            goto LABEL_40;
          goto LABEL_38;
        }
      }
      else
      {
        v26 = v36;
        v36 = 0;
        v38[0] = "NavigatorCookieConsent";
        v38[1] = (unsigned __int8 *)23;
        v27 = WTF::HashTable<WTF::ASCIILiteral,WTF::KeyValuePair<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashMap<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashTraits<WTF::ASCIILiteral>,WTF::HashTraits<std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::ASCIILiteral>>::lookup<WTF::HashMapTranslatorAdapter<WTF::HashMap<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashTraits<WTF::ASCIILiteral>,WTF::HashTraits<std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::IdentityHashTranslator<WTF::HashMap<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashTraits<WTF::ASCIILiteral>,WTF::HashTraits<std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::DefaultHash<WTF::ASCIILiteral>>>,WTF::ASCIILiteral>((uint64_t *)(v24 + 72), v38);
        if (!v27 || (v29 = (uint64_t)v27[2]) == 0)
        {
          v29 = WTF::fastMalloc((WTF *)0x10);
          *(_QWORD *)v29 = off_1E3354798;
          *(_QWORD *)(v29 + 8) = v24;
          v38[0] = (unsigned __int8 *)v29;
          WebCore::Supplement<WebCore::Navigator>::provideTo((uint64_t *)(v24 + 72), "NavigatorCookieConsent", (unsigned __int8 *)0x17, (const char **)v38);
          v30 = v38[0];
          v38[0] = 0;
          if (v30)
            (*(void (**)(unsigned __int8 *))(*(_QWORD *)v30 + 8))(v30);
        }
        WebCore::NavigatorCookieConsent::requestCookieConsent(v29, v28, (uint64_t *)&v35);
        if (v26)
        {
          if (v26[4] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v26 + 16))(v26);
          else
            --v26[4];
        }
      }
      ((void (*)(unsigned __int8 **, _DWORD **))off_1E32C0B60[v25])(v38, &v36);
      goto LABEL_37;
    }
  }
  WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Navigator", "requestCookieConsent", v16);
LABEL_38:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_40:
  v31 = *(_QWORD *)(v10 + 16);
  if (v31)
  {
    if (*(_QWORD *)(v10 + 24) != v31)
    {
      v33 = *(objc_class **)(v31 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, (WebCore::DOMGuardedObject **)v38);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v38[0], v33, 0);
      v34 = v38[0];
      v38[0] = 0;
      if (v34)
      {
        if (*((_DWORD *)v34 + 4) == 1)
          (*(void (**)(unsigned __int8 *))(*(_QWORD *)v34 + 16))(v34);
        else
          --*((_DWORD *)v34 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsNavigatorPrototypeFunction_requestMediaKeySystemAccess(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  JSC::VM *v28;
  WTF::StringImpl *v29;
  unint64_t v30;
  WTF::StringImpl *v31;
  uint64_t v32;
  uint64_t v33;
  JSValue v34;
  int i;
  unsigned int v36;
  JSC::JSCell *IndexQuickly;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  uint64_t v40;
  uint64_t v41;
  JSC::JSCell *v43;
  uint64_t v44;
  unint64_t v45;
  WTF::StringImpl *v46;
  void *v47;
  WTF::StringImpl *v48;
  uint64_t v49;
  uint64_t v50;
  WTF::StringImpl *v51;
  WTF::StringImpl *v52;
  uint64_t v53;
  uint64_t v54;
  objc_class *v56;
  WTF::StringImpl *v57;
  JSC::VM *v58;
  JSValue v59;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v61;
  int v62;
  void *v63;
  uint64_t v64;
  WTF::StringImpl *v65;
  uint64_t v66;
  uint64_t v67;
  WebCore::DOMGuardedObject *v68;
  WTF::StringImpl *v69[2];
  int v70;
  WTF::StringImpl *v71;
  int v72;
  WTF::StringImpl *v73;
  WTF::StringImpl *v74;
  uint64_t v75;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D954B8);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v68 = v15;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_93;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSNavigator::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSNavigator::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_93:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Navigator", "requestMediaKeySystemAccess", v17);
  }
  else if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v58 = (JSC::VM *)*((_QWORD *)this + 7);
    v59.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v58, this, v59);
  }
  else
  {
    v24 = *(_QWORD *)(v18 + 24);
    v25 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if (v25)
    {
      v26 = v25;
      if (*(_BYTE *)(v25 + 274))
      {
        __break(0xC471u);
        JUMPOUT(0x194D9556CLL);
      }
      v27 = *((_QWORD *)a2 + 6);
      v69[0] = (WTF::StringImpl *)v27;
      v28 = (JSC::VM *)*((_QWORD *)this + 7);
      if ((v27 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v27 + 5) != 2)
      {
        JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v69, this);
LABEL_34:
        v67 = v10;
        if (*((_DWORD *)v28 + 20))
        {
          hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v28);
          v31 = v74;
          if (hasExceptionsAfterHandlingTraps)
          {
            v72 = 1;
            v74 = 0;
            if (v31)
            {
              if (*(_DWORD *)v31 == 2)
                WTF::StringImpl::destroy(v31, v61);
              else
                *(_DWORD *)v31 -= 2;
            }
            v53 = 1;
LABEL_85:
            ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32BEA70[v53])(v69, &v71);
            v14 = v68;
            v68 = 0;
            if (!v14)
              goto LABEL_88;
            goto LABEL_86;
          }
          v30 = v13;
        }
        else
        {
          v30 = v13;
          v31 = v74;
        }
        v71 = v31;
        v72 = 0;
        v32 = *((_QWORD *)a2 + 7);
        v33 = *((_QWORD *)this + 7);
        v73 = (WTF::StringImpl *)v33;
        if ((v32 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v32 + 5) <= 0x16u)
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          JSC::throwTypeError();
          v39 = v69[0];
          v69[0] = 0;
          v13 = v30;
          v10 = v67;
          if (v39)
          {
            if (*(_DWORD *)v39 == 2)
              WTF::StringImpl::destroy(v39, v38);
            else
              *(_DWORD *)v39 -= 2;
          }
          v40 = 1;
          v70 = 1;
          goto LABEL_84;
        }
        v74 = 0;
        v75 = 0;
        if (JSC::getIterationMode() == 2)
        {
          for (i = 1; ; ++i)
          {
            v36 = (*(_BYTE *)(v32 + 4) & 0xE) != 0 ? *(_DWORD *)(*(_QWORD *)(v32 + 8) - 8) : 0;
            if (i - 1 >= v36)
              break;
            IndexQuickly = (JSC::JSCell *)JSC::JSObject::tryGetIndexQuickly((JSC::JSObject *)v32, i - 1, 0);
            if (!IndexQuickly)
              IndexQuickly = (JSC::JSCell *)JSC::JSObject::get((JSC::JSObject *)v32, this, (i - 1));
            if (*(_DWORD *)(v33 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v33) & 1) != 0)
              break;
            WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::CDMKeySystemConfiguration>>::convert((WTF::StringImpl **)this, IndexQuickly, (uint64_t)&v74);
            if (*(_QWORD *)(v33 + 16))
            {
              v44 = JSC::JSArrayIterator::create();
              v45 = i | 0xFFFE000000000000;
              if (i < 0)
                v45 = COERCE__INT64((double)i) + 0x2000000000000;
              *(_QWORD *)(v44 + 16) = v45;
              goto LABEL_72;
            }
          }
        }
        else
        {
          JSC::iteratorForIterable(this, (JSC::JSGlobalObject *)v32, v34);
          if (!*(_DWORD *)(v33 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v33) & 1) == 0)
          {
            while (1)
            {
              v41 = JSC::iteratorStep();
              if (*(_QWORD *)(v33 + 16) || v41 == 6)
                break;
              v43 = (JSC::JSCell *)JSC::iteratorValue();
              if (*(_DWORD *)(v33 + 80))
              {
                if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v33) & 1) != 0)
                  break;
              }
              WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::CDMKeySystemConfiguration>>::convert((WTF::StringImpl **)this, v43, (uint64_t)&v74);
              if (*(_QWORD *)(v33 + 16))
              {
LABEL_72:
                JSC::iteratorClose();
                break;
              }
            }
          }
        }
        if (*(_DWORD *)(v33 + 80))
        {
          v62 = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v33);
          v46 = v74;
          if (v62)
          {
            v70 = 1;
            if (HIDWORD(v75))
            {
              v64 = 80 * HIDWORD(v75);
              v65 = v74;
              do
              {
                WebCore::CDMKeySystemConfiguration::~CDMKeySystemConfiguration(v65, v63);
                v65 = (WTF::StringImpl *)(v66 + 80);
                v64 -= 80;
              }
              while (v64);
            }
            if (v46)
              WTF::fastFree(v46, v63);
            v40 = 1;
            v13 = v30;
            v10 = v67;
            goto LABEL_84;
          }
        }
        else
        {
          v46 = v74;
        }
        v70 = 0;
        v71 = 0;
        v73 = v31;
        v74 = v46;
        v69[0] = 0;
        v69[1] = 0;
        WebCore::NavigatorEME::requestMediaKeySystemAccess(v24, (WebCore::Document *)(v26 - 192), &v73, (uint64_t)&v74, (uint64_t *)&v68);
        v13 = v30;
        if (HIDWORD(v75))
        {
          v48 = v74;
          v49 = 80 * HIDWORD(v75);
          do
          {
            WebCore::CDMKeySystemConfiguration::~CDMKeySystemConfiguration(v48, v47);
            v48 = (WTF::StringImpl *)(v50 + 80);
            v49 -= 80;
          }
          while (v49);
        }
        v51 = v74;
        v10 = v67;
        if (v74)
        {
          v74 = 0;
          LODWORD(v75) = 0;
          WTF::fastFree(v51, v47);
        }
        v52 = v73;
        v73 = 0;
        if (v52)
        {
          if (*(_DWORD *)v52 == 2)
            WTF::StringImpl::destroy(v52, (WTF::StringImpl *)v47);
          else
            *(_DWORD *)v52 -= 2;
        }
        v40 = 0;
LABEL_84:
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32C0B80[v40])(&v74, v69);
        v53 = 0;
        goto LABEL_85;
      }
      v29 = *(WTF::StringImpl **)(v27 + 8);
      if ((v29 & 1) != 0)
      {
        v29 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v27, this);
        if (!v29)
          goto LABEL_33;
      }
      else if (!v29)
      {
LABEL_33:
        v74 = v29;
        goto LABEL_34;
      }
      *(_DWORD *)v29 += 2;
      goto LABEL_33;
    }
  }
  v68 = 0;
LABEL_86:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_88:
  v54 = *(_QWORD *)(v10 + 16);
  if (v54)
  {
    if (*(_QWORD *)(v10 + 24) != v54)
    {
      v56 = *(objc_class **)(v54 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, v69);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v69[0], v56, 0);
      v57 = v69[0];
      v69[0] = 0;
      if (v57)
      {
        if (*((_DWORD *)v57 + 4) == 1)
          (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v57 + 16))(v57);
        else
          --*((_DWORD *)v57 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

_BYTE *WebCore::jsNavigatorPrototypeFunction_getGamepads(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  JSC::VM *v13;
  unsigned int v14;
  WTF **v15;
  uint64_t v16;
  objc_class *v17;
  int v18;
  BOOL v19;
  JSValue v20;
  void *v21;
  JSC::VM *v22;
  uint64_t v23;
  uint64_t *v24;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  JSValue v28;
  _QWORD *v29;
  WebCore *v30;
  JSC::JSGlobalObject *v31;
  JSC::CallFrame *v32;
  JSC::VM *v33;
  int v34[2];
  WTF::StringImpl *v35;
  int v36;
  void *v37;
  int v38;
  char v39[8];
  WTF::StringImpl *v40;
  WTF *v41;
  _OWORD v42[4];
  uint64_t v43;
  JSC::VM *v44;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v33 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v33, "Navigator", "getGamepads");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSNavigator::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSNavigator::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v33, "Navigator", "getGamepads");
  v11 = *(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  WebCore::NavigatorGamepad::getGamepads(*(_QWORD *)(v4 + 24), a2, (uint64_t)v34);
  if (!v36)
  {
    v12 = *(_QWORD *)v34;
    v13 = (JSC::VM *)*((_QWORD *)this + 7);
    v44 = v13;
    v39[0] = 0;
    v40 = (WTF::StringImpl *)0x800000000;
    v41 = (WTF *)((char *)v42 + 8);
    memset(v42, 0, sizeof(v42));
    v43 = 0;
    v14 = *(_DWORD *)(*(_QWORD *)v34 + 12);
    if (v14 >= 9)
    {
      v39[0] = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v40) == 1;
      v14 = *(_DWORD *)(v12 + 12);
      if (v14)
      {
LABEL_15:
        v15 = *(WTF ***)v12;
        v16 = 8 * v14;
        do
        {
          v17 = (objc_class *)(*v15 ? WebCore::wrap<WebCore::Gamepad>((uint64_t)this, v11, *v15) : 2);
          if (*((_DWORD *)v13 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v13) & 1) != 0)
            goto LABEL_55;
          v18 = (int)v40;
          if ((_DWORD)v40 != HIDWORD(v40) && (v41 != (WTF *)((char *)v42 + 8) ? (v19 = v41 == 0) : (v19 = 1), v19))
          {
            *((_QWORD *)v41 + v40) = v17;
            LODWORD(v40) = v18 + 1;
          }
          else
          {
            v20.super.isa = v17;
            if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v40, v20) == 1)
              v39[0] = 1;
          }
          ++v15;
          v16 -= 8;
        }
        while (v16);
      }
    }
    else if (v14)
    {
      goto LABEL_15;
    }
    if (v39[0])
    {
      JSC::throwOutOfMemoryError();
    }
    else
    {
      v37 = v41;
      v38 = (int)v40;
      v22 = *(JSC::VM **)(v11 + 56);
      if (!*((_DWORD *)v22 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v22) & 1) == 0)
      {
        v23 = JSC::constructArray();
LABEL_37:
        v24 = *(uint64_t **)&v42[0];
        if (*(_QWORD *)&v42[0])
        {
          v37 = &v40;
          v29 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v42[0], (uint64_t *)&v37);
          WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v24, v29);
        }
        if (v41 != (WTF *)((char *)v42 + 8) && v41)
          WTF::fastFree(v41, v21);
LABEL_40:
        if (v36 != -1)
          ((void (*)(char *, int *))off_1E32C0B90[v36])(v39, v34);
        return (_BYTE *)v23;
      }
    }
LABEL_55:
    v23 = 0;
    goto LABEL_37;
  }
  if (v36 == 1)
  {
    v26 = (WTF::StringImpl *)LOBYTE(v34[0]);
    v39[0] = v34[0];
    v27 = v35;
    v35 = 0;
    v40 = v27;
    if (!*((_QWORD *)v5 + 2))
    {
      v28.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v34[0]), (JSC::JSGlobalObject *)&v40);
      JSC::VM::throwException(v5, this, v28);
      v27 = v40;
    }
    v40 = 0;
    if (v27)
    {
      if (*(_DWORD *)v27 == 2)
        WTF::StringImpl::destroy(v27, v26);
      else
        *(_DWORD *)v27 -= 2;
    }
    v23 = 0;
    goto LABEL_40;
  }
  v30 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsNavigatorPrototypeFunction_getUserMedia(v30, v31, v32);
}

_BYTE *WebCore::jsNavigatorPrototypeFunction_getUserMedia(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WebCore::JSNavigator *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;

  v11 = *((_QWORD *)this + 7);
  v4 = (WebCore::JSNavigator *)*((_QWORD *)a2 + 5);
  if (((unint64_t)v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v11, "Navigator", "getUserMedia");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSNavigator::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSNavigator::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v11, "Navigator", "getUserMedia");
  else
    return (_BYTE *)WebCore::JSNavigator::getUserMedia(v4, (JSCell *)this, a2);
}

unint64_t WebCore::jsNavigatorPrototypeFunction_setLoggedIn(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  const char **v24;
  uint64_t v25;
  unsigned __int8 *v26;
  uint64_t v27;
  objc_class *v29;
  unsigned __int8 *v30;
  WebCore::DOMGuardedObject *v31;
  unsigned __int8 *v32[2];

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D95C68);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v31 = v15;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_36;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSNavigator::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSNavigator::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_36:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Navigator", "setLoggedIn", v16);
  }
  else
  {
    v23 = *(_QWORD *)(v17 + 24);
    v32[0] = "NavigatorLoginStatus";
    v32[1] = (unsigned __int8 *)21;
    v24 = WTF::HashTable<WTF::ASCIILiteral,WTF::KeyValuePair<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashMap<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashTraits<WTF::ASCIILiteral>,WTF::HashTraits<std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::ASCIILiteral>>::lookup<WTF::HashMapTranslatorAdapter<WTF::HashMap<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashTraits<WTF::ASCIILiteral>,WTF::HashTraits<std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::IdentityHashTranslator<WTF::HashMap<WTF::ASCIILiteral,std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>,WTF::DefaultHash<WTF::ASCIILiteral>,WTF::HashTraits<WTF::ASCIILiteral>,WTF::HashTraits<std::unique_ptr<WebCore::Supplement<WebCore::Navigator>>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::DefaultHash<WTF::ASCIILiteral>>>,WTF::ASCIILiteral>((uint64_t *)(v23 + 72), v32);
    if (!v24 || (v25 = (uint64_t)v24[2]) == 0)
    {
      v25 = WTF::fastMalloc((WTF *)0x10);
      *(_QWORD *)v25 = off_1E3400250;
      *(_QWORD *)(v25 + 8) = v23;
      v32[0] = (unsigned __int8 *)v25;
      WebCore::Supplement<WebCore::Navigator>::provideTo((uint64_t *)(v23 + 72), "NavigatorLoginStatus", (unsigned __int8 *)0x15, (const char **)v32);
      v26 = v32[0];
      v32[0] = 0;
      if (v26)
        (*(void (**)(unsigned __int8 *))(*(_QWORD *)v26 + 8))(v26);
    }
    WebCore::NavigatorLoginStatus::setLoggedIn(v25, (uint64_t *)&v31);
  }
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
  v27 = *(_QWORD *)(v10 + 16);
  if (v27)
  {
    if (*(_QWORD *)(v10 + 24) != v27)
    {
      v29 = *(objc_class **)(v27 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, (WebCore::DOMGuardedObject **)v32);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v32[0], v29, 0);
      v30 = v32[0];
      v32[0] = 0;
      if (v30)
      {
        if (*((_DWORD *)v30 + 4) == 1)
          (*(void (**)(unsigned __int8 *))(*(_QWORD *)v30 + 16))(v30);
        else
          --*((_DWORD *)v30 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsNavigatorPrototypeFunction_setLoggedOut(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  objc_class *v25;
  WebCore::DOMGuardedObject *v26;
  WebCore::DOMGuardedObject *v27;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D95EA0);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v27 = v15;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_32;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSNavigator::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSNavigator::s_info && v20 != 0);
  }
  if (!v19)
LABEL_32:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Navigator", "setLoggedOut", v16);
  else
    WebCore::NavigatorLoginStatus::setLoggedOut(*(_QWORD *)(v17 + 24), (uint64_t *)&v27);
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
  v23 = *(_QWORD *)(v10 + 16);
  if (v23)
  {
    if (*(_QWORD *)(v10 + 24) != v23)
    {
      v25 = *(objc_class **)(v23 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v27);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v27, v25, 0);
      v26 = v27;
      v27 = 0;
      if (v26)
      {
        if (*((_DWORD *)v26 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v26 + 16))(v26);
        else
          --*((_DWORD *)v26 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsNavigatorPrototypeFunction_isLoggedIn(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  objc_class *v25;
  WebCore::DOMGuardedObject *v26;
  WebCore::DOMGuardedObject *v27;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D960D8);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v27 = v15;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_32;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSNavigator::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSNavigator::s_info && v20 != 0);
  }
  if (!v19)
LABEL_32:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Navigator", "isLoggedIn", v16);
  else
    WebCore::NavigatorLoginStatus::isLoggedIn(*(_QWORD *)(v17 + 24), (uint64_t *)&v27);
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
  v23 = *(_QWORD *)(v10 + 16);
  if (v23)
  {
    if (*(_QWORD *)(v10 + 24) != v23)
    {
      v25 = *(objc_class **)(v23 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v27);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v27, v25, 0);
      v26 = v27;
      v27 = 0;
      if (v26)
      {
        if (*((_DWORD *)v26 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v26 + 16))(v26);
        else
          --*((_DWORD *)v26 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

uint64_t WebCore::jsNavigatorPrototypeFunction_javaEnabled(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;

  v3 = *((_QWORD *)a2 + 5);
  v11 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v11, "Navigator", "javaEnabled");
  v4 = 16 * (*(_DWORD *)v3 & 0xFFFFFFFE);
  v5 = *(unsigned int *)(v4 + 76);
  v6 = *(_DWORD *)(v4 + 76) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSNavigator::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSNavigator::s_info && v7 != 0);
  }
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v11, "Navigator", "javaEnabled");
  else
    return 6;
}

uint64_t WebCore::jsNavigatorPrototypeFunction_canShare(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::Navigator *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  _DWORD *v23;
  WTF *v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  uint64_t v29;
  WTF::StringImpl *v30[2];
  WTF::StringImpl *v31[2];
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  unsigned int v36;

  v29 = *((_QWORD *)this + 7);
  v4 = *((_QWORD *)a2 + 5);
  if ((v4 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v29, "Navigator", "canShare");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSNavigator::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSNavigator::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v29, "Navigator", "canShare");
  v11 = *(WebCore::Navigator **)(v4 + 24);
  v12 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v12)
    return 10;
  v13 = v12;
  if (*(_BYTE *)(v12 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194D9645CLL);
  }
  if (*((_DWORD *)a2 + 8) == 1)
    v14 = 10;
  else
    v14 = *((_QWORD *)a2 + 6);
  WebCore::convertDictionary<WebCore::ShareData>((JSC::JSCell *)v14, (uint64_t)this, (uint64_t)&v33);
  v15 = v36;
  if (v36)
  {
    v20 = 0;
  }
  else
  {
    v16 = v33;
    v17 = v34;
    v33 = 0u;
    v34 = 0u;
    *(_OWORD *)v30 = v16;
    *(_OWORD *)v31 = v17;
    v18 = v35;
    v35 = 0;
    v32 = v18;
    if (WebCore::Navigator::canShare(v11, (WebCore::Document *)(v13 - 192), (const WebCore::ShareData *)v30))v20 = 7;
    else
      v20 = 6;
    if (HIDWORD(v32))
    {
      v21 = v31[1];
      v22 = 8 * HIDWORD(v32);
      do
      {
        v23 = *(_DWORD **)v21;
        *(_QWORD *)v21 = 0;
        if (v23)
        {
          if (v23[4] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v23 + 8))(v23);
          else
            --v23[4];
        }
        v21 = (WTF::StringImpl *)((char *)v21 + 8);
        v22 -= 8;
      }
      while (v22);
    }
    v24 = v31[1];
    if (v31[1])
    {
      v31[1] = 0;
      LODWORD(v32) = 0;
      WTF::fastFree(v24, v19);
    }
    v25 = v31[0];
    v31[0] = 0;
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, (WTF::StringImpl *)v19);
      else
        *(_DWORD *)v25 -= 2;
    }
    v26 = v30[1];
    v30[1] = 0;
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
        WTF::StringImpl::destroy(v26, (WTF::StringImpl *)v19);
      else
        *(_DWORD *)v26 -= 2;
    }
    v27 = v30[0];
    v30[0] = 0;
    if (v27)
    {
      if (*(_DWORD *)v27 == 2)
        WTF::StringImpl::destroy(v27, (WTF::StringImpl *)v19);
      else
        *(_DWORD *)v27 -= 2;
    }
    v15 = v36;
  }
  if (v15 != -1)
    (*(&off_1E32C0BA0 + v15))((int)v30, (WebCore::ShareData *)&v33);
  return v20;
}

unint64_t WebCore::jsNavigatorPrototypeFunction_share(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  void *v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  _DWORD *v34;
  WTF *v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  uint64_t v39;
  objc_class *v41;
  _DWORD *v42;
  WebCore::DOMGuardedObject *v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  unsigned int v47;
  WTF::StringImpl *v48[2];
  WTF::StringImpl *v49[2];
  uint64_t v50;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D9679CLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v43 = v15;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_63;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSNavigator::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSNavigator::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_63:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Navigator", "share", v16);
    goto LABEL_64;
  }
  v23 = *(_QWORD *)(v17 + 24);
  v24 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v24)
  {
LABEL_64:
    v43 = 0;
LABEL_54:
    if (*((_DWORD *)v14 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
    else
      --*((_DWORD *)v14 + 4);
    goto LABEL_56;
  }
  v25 = v24;
  if (*(_BYTE *)(v24 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194D967BCLL);
  }
  if (*((_DWORD *)a2 + 8) == 1)
    v26 = 10;
  else
    v26 = *((_QWORD *)a2 + 6);
  WebCore::convertDictionary<WebCore::ShareData>((JSC::JSCell *)v26, (uint64_t)this, (uint64_t)&v44);
  v27 = v47;
  if (!v47)
  {
    v28 = v44;
    v29 = v45;
    v44 = 0u;
    v45 = 0u;
    *(_OWORD *)v48 = v28;
    *(_OWORD *)v49 = v29;
    v30 = v46;
    v46 = 0;
    v50 = v30;
    WebCore::Navigator::share(v23, (WebCore::Document *)(v25 - 192), (uint64_t)v48, (uint64_t *)&v43);
    if (HIDWORD(v50))
    {
      v32 = v49[1];
      v33 = 8 * HIDWORD(v50);
      do
      {
        v34 = *(_DWORD **)v32;
        *(_QWORD *)v32 = 0;
        if (v34)
        {
          if (v34[4] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v34 + 8))(v34);
          else
            --v34[4];
        }
        v32 = (WTF::StringImpl *)((char *)v32 + 8);
        v33 -= 8;
      }
      while (v33);
    }
    v35 = v49[1];
    if (v49[1])
    {
      v49[1] = 0;
      LODWORD(v50) = 0;
      WTF::fastFree(v35, v31);
    }
    v36 = v49[0];
    v49[0] = 0;
    if (v36)
    {
      if (*(_DWORD *)v36 == 2)
        WTF::StringImpl::destroy(v36, (WTF::StringImpl *)v31);
      else
        *(_DWORD *)v36 -= 2;
    }
    v37 = v48[1];
    v48[1] = 0;
    if (v37)
    {
      if (*(_DWORD *)v37 == 2)
        WTF::StringImpl::destroy(v37, (WTF::StringImpl *)v31);
      else
        *(_DWORD *)v37 -= 2;
    }
    v38 = v48[0];
    v48[0] = 0;
    if (v38)
    {
      if (*(_DWORD *)v38 == 2)
        WTF::StringImpl::destroy(v38, (WTF::StringImpl *)v31);
      else
        *(_DWORD *)v38 -= 2;
    }
    v27 = v47;
  }
  if (v27 != -1)
    (*(&off_1E32C0BA0 + v27))((int)v48, (WebCore::ShareData *)&v44);
  v14 = v43;
  v43 = 0;
  if (v14)
    goto LABEL_54;
LABEL_56:
  v39 = *(_QWORD *)(v10 + 16);
  if (v39)
  {
    if (*(_QWORD *)(v10 + 24) != v39)
    {
      v41 = *(objc_class **)(v39 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, (WebCore::DOMGuardedObject **)&v44);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>(v44, v41, 0);
      v42 = (_DWORD *)v44;
      *(_QWORD *)&v44 = 0;
      if (v42)
      {
        if (v42[4] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v42 + 16))(v42);
        else
          --v42[4];
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore27RequestCookieConsentOptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

void WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::CDMKeySystemConfiguration>>::convert(WTF::StringImpl **a1, JSC::JSCell *a2, uint64_t a3)
{
  void *v4;
  unsigned int v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int16 v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int16 v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;

  WebCore::convertDictionary<WebCore::CDMKeySystemConfiguration>(a2, a1, (uint64_t)&v36);
  v5 = v45;
  if (!v45)
  {
    v6 = v36;
    v36 = 0uLL;
    v27 = v6;
    v7 = v37;
    v37 = 0;
    v28 = v7;
    v8 = v38;
    v38 = 0;
    v29 = v8;
    v9 = v39;
    v39 = 0;
    v30 = v9;
    v10 = v40;
    v40 = 0;
    v31 = v10;
    v11 = v41;
    v41 = 0;
    v32 = v11;
    v33 = v42;
    v12 = v43;
    v43 = 0;
    v34 = v12;
    v13 = v44;
    v44 = 0;
    v35 = v13;
    v14 = *(unsigned int *)(a3 + 12);
    if ((_DWORD)v14 == *(_DWORD *)(a3 + 8))
    {
      v15 = WTF::Vector<WebCore::CDMKeySystemConfiguration,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(a3, v14 + 1, (unint64_t)&v27);
      v16 = *(_QWORD *)a3 + 80 * *(unsigned int *)(a3 + 12);
      v17 = *(_QWORD *)v15;
      *(_QWORD *)v15 = 0;
      *(_QWORD *)(v16 + 8) = 0;
      *(_QWORD *)(v16 + 16) = 0;
      *(_QWORD *)v16 = v17;
      v18 = *(_QWORD *)(v15 + 8);
      *(_QWORD *)(v15 + 8) = 0;
      *(_QWORD *)(v16 + 8) = v18;
      LODWORD(v18) = *(_DWORD *)(v15 + 16);
      *(_DWORD *)(v15 + 16) = 0;
      *(_DWORD *)(v16 + 16) = v18;
      LODWORD(v18) = *(_DWORD *)(v15 + 20);
      *(_DWORD *)(v15 + 20) = 0;
      *(_DWORD *)(v16 + 20) = v18;
      *(_QWORD *)(v16 + 24) = 0;
      *(_QWORD *)(v16 + 32) = 0;
      v19 = *(_QWORD *)(v15 + 24);
      *(_QWORD *)(v15 + 24) = 0;
      *(_QWORD *)(v16 + 24) = v19;
      LODWORD(v19) = *(_DWORD *)(v15 + 32);
      *(_DWORD *)(v15 + 32) = 0;
      *(_DWORD *)(v16 + 32) = v19;
      LODWORD(v19) = *(_DWORD *)(v15 + 36);
      *(_DWORD *)(v15 + 36) = 0;
      *(_DWORD *)(v16 + 36) = v19;
      *(_QWORD *)(v16 + 40) = 0;
      *(_QWORD *)(v16 + 48) = 0;
      v20 = *(_QWORD *)(v15 + 40);
      *(_QWORD *)(v15 + 40) = 0;
      *(_QWORD *)(v16 + 40) = v20;
      LODWORD(v20) = *(_DWORD *)(v15 + 48);
      *(_DWORD *)(v15 + 48) = 0;
      *(_DWORD *)(v16 + 48) = v20;
      LODWORD(v20) = *(_DWORD *)(v15 + 52);
      *(_DWORD *)(v15 + 52) = 0;
      *(_DWORD *)(v16 + 52) = v20;
      *(_WORD *)(v16 + 56) = *(_WORD *)(v15 + 56);
      *(_QWORD *)(v16 + 64) = 0;
      *(_QWORD *)(v16 + 72) = 0;
      v21 = *(_QWORD *)(v15 + 64);
      *(_QWORD *)(v15 + 64) = 0;
      *(_QWORD *)(v16 + 64) = v21;
      LODWORD(v21) = *(_DWORD *)(v15 + 72);
      *(_DWORD *)(v15 + 72) = 0;
      *(_DWORD *)(v16 + 72) = v21;
      v22 = *(_DWORD *)(v15 + 76);
      *(_DWORD *)(v15 + 76) = 0;
    }
    else
    {
      v16 = *(_QWORD *)a3 + 80 * v14;
      *(_QWORD *)&v27 = 0;
      *(_QWORD *)v16 = v6;
      *(_QWORD *)(v16 + 8) = 0;
      *(_QWORD *)(v16 + 16) = 0;
      v23 = *((_QWORD *)&v27 + 1);
      *((_QWORD *)&v27 + 1) = 0;
      *(_QWORD *)(v16 + 8) = v23;
      LODWORD(v23) = v28;
      LODWORD(v28) = 0;
      *(_DWORD *)(v16 + 16) = v23;
      LODWORD(v23) = HIDWORD(v28);
      HIDWORD(v28) = 0;
      *(_DWORD *)(v16 + 20) = v23;
      *(_QWORD *)(v16 + 24) = 0;
      *(_QWORD *)(v16 + 32) = 0;
      v24 = v29;
      v29 = 0;
      *(_QWORD *)(v16 + 24) = v24;
      LODWORD(v24) = v30;
      LODWORD(v30) = 0;
      *(_DWORD *)(v16 + 32) = v24;
      LODWORD(v24) = HIDWORD(v30);
      HIDWORD(v30) = 0;
      *(_DWORD *)(v16 + 36) = v24;
      *(_QWORD *)(v16 + 40) = 0;
      *(_QWORD *)(v16 + 48) = 0;
      v25 = v31;
      v31 = 0;
      *(_QWORD *)(v16 + 40) = v25;
      LODWORD(v25) = v32;
      LODWORD(v32) = 0;
      *(_DWORD *)(v16 + 48) = v25;
      LODWORD(v25) = HIDWORD(v32);
      HIDWORD(v32) = 0;
      *(_DWORD *)(v16 + 52) = v25;
      *(_WORD *)(v16 + 56) = v33;
      *(_QWORD *)(v16 + 64) = 0;
      *(_QWORD *)(v16 + 72) = 0;
      v26 = v34;
      v34 = 0;
      *(_QWORD *)(v16 + 64) = v26;
      LODWORD(v26) = v35;
      LODWORD(v35) = 0;
      *(_DWORD *)(v16 + 72) = v26;
      v22 = HIDWORD(v35);
      HIDWORD(v35) = 0;
    }
    *(_DWORD *)(v16 + 76) = v22;
    ++*(_DWORD *)(a3 + 12);
    WebCore::CDMKeySystemConfiguration::~CDMKeySystemConfiguration((WebCore::CDMKeySystemConfiguration *)&v27, v4);
    v5 = v45;
  }
  if (v5 != -1)
    (*(&off_1E32C0B70 + v5))((int)&v27, (WebCore::CDMKeySystemConfiguration *)&v36);
}

unint64_t WTF::Vector<WebCore::CDMKeySystemConfiguration,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v3 = a3;
  v5 = *(_QWORD *)a1;
  if (*(_QWORD *)a1 > a3 || v5 + 80 * (unint64_t)*(unsigned int *)(a1 + 12) <= a3)
  {
    v9 = *(unsigned int *)(a1 + 8) + ((unint64_t)*(unsigned int *)(a1 + 8) >> 2);
    if (v9 >= 0x10)
      v10 = v9 + 1;
    else
      v10 = 16;
    if (v10 > a2)
      a2 = v10;
    WTF::Vector<WebCore::CDMKeySystemConfiguration,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
  }
  else
  {
    v6 = a3 - v5;
    v7 = *(unsigned int *)(a1 + 8) + ((unint64_t)*(unsigned int *)(a1 + 8) >> 2);
    if (v7 >= 0x10)
      v8 = v7 + 1;
    else
      v8 = 16;
    if (v8 > a2)
      a2 = v8;
    WTF::Vector<WebCore::CDMKeySystemConfiguration,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
    return *(_QWORD *)a1 + v6;
  }
  return v3;
}

uint64_t WTF::Vector<WebCore::CDMKeySystemConfiguration,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  WTF *v3;
  unsigned int v4;
  int v5;
  void *v6;
  uint64_t v7;
  WTF *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (*(unsigned int *)(result + 8) < a2)
  {
    if (a2 >= 0x3333334)
    {
      __break(0xC471u);
    }
    else
    {
      v2 = result;
      v3 = *(WTF **)result;
      v4 = *(_DWORD *)(result + 12);
      v5 = 80 * a2;
      result = WTF::fastMalloc((WTF *)(80 * a2));
      *(_DWORD *)(v2 + 8) = (v5 & 0xFFFFFFF0) / 0x50;
      *(_QWORD *)v2 = result;
      if (v4)
      {
        v7 = result;
        result = (uint64_t)v3;
        do
        {
          v8 = *(WTF **)result;
          *(_QWORD *)result = 0;
          *(_QWORD *)(v7 + 8) = 0;
          *(_QWORD *)(v7 + 16) = 0;
          *(_QWORD *)v7 = v8;
          v9 = *(_QWORD *)(result + 8);
          *(_QWORD *)(result + 8) = 0;
          *(_QWORD *)(v7 + 8) = v9;
          LODWORD(v9) = *(_DWORD *)(result + 16);
          *(_DWORD *)(result + 16) = 0;
          *(_DWORD *)(v7 + 16) = v9;
          LODWORD(v9) = *(_DWORD *)(result + 20);
          *(_DWORD *)(result + 20) = 0;
          *(_DWORD *)(v7 + 20) = v9;
          *(_QWORD *)(v7 + 24) = 0;
          *(_QWORD *)(v7 + 32) = 0;
          v10 = *(_QWORD *)(result + 24);
          *(_QWORD *)(result + 24) = 0;
          *(_QWORD *)(v7 + 24) = v10;
          LODWORD(v10) = *(_DWORD *)(result + 32);
          *(_DWORD *)(result + 32) = 0;
          *(_DWORD *)(v7 + 32) = v10;
          LODWORD(v10) = *(_DWORD *)(result + 36);
          *(_DWORD *)(result + 36) = 0;
          *(_DWORD *)(v7 + 36) = v10;
          *(_QWORD *)(v7 + 40) = 0;
          *(_QWORD *)(v7 + 48) = 0;
          v11 = *(_QWORD *)(result + 40);
          *(_QWORD *)(result + 40) = 0;
          *(_QWORD *)(v7 + 40) = v11;
          LODWORD(v11) = *(_DWORD *)(result + 48);
          *(_DWORD *)(result + 48) = 0;
          *(_DWORD *)(v7 + 48) = v11;
          LODWORD(v11) = *(_DWORD *)(result + 52);
          *(_DWORD *)(result + 52) = 0;
          *(_DWORD *)(v7 + 52) = v11;
          *(_WORD *)(v7 + 56) = *(_WORD *)(result + 56);
          *(_QWORD *)(v7 + 64) = 0;
          *(_QWORD *)(v7 + 72) = 0;
          v12 = *(_QWORD *)(result + 64);
          *(_QWORD *)(result + 64) = 0;
          *(_QWORD *)(v7 + 64) = v12;
          LODWORD(v12) = *(_DWORD *)(result + 72);
          *(_DWORD *)(result + 72) = 0;
          *(_DWORD *)(v7 + 72) = v12;
          LODWORD(v12) = *(_DWORD *)(result + 76);
          *(_DWORD *)(result + 76) = 0;
          *(_DWORD *)(v7 + 76) = v12;
          WebCore::CDMKeySystemConfiguration::~CDMKeySystemConfiguration((WebCore::CDMKeySystemConfiguration *)result, v6);
          result = v13 + 80;
          v7 += 80;
        }
        while ((WTF *)result != (WTF *)((char *)v3 + 80 * v4));
      }
      if (v3)
      {
        if (*(WTF **)v2 == v3)
        {
          *(_QWORD *)v2 = 0;
          *(_DWORD *)(v2 + 8) = 0;
        }
        return WTF::fastFree(v3, v6);
      }
    }
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore25CDMKeySystemConfigurationENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(int a1, WebCore::CDMKeySystemConfiguration *this)
{
  WebCore::CDMKeySystemConfiguration::~CDMKeySystemConfiguration(this, this);
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorIN7WebCore25CDMKeySystemConfigurationELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSH_1EJSE_SF_EEEEEEDcSJ_DpT0_(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  WebCore::CDMKeySystemConfiguration *v4;
  uint64_t v5;
  uint64_t v6;
  WTF *result;

  v3 = a2[3];
  if ((_DWORD)v3)
  {
    v4 = *(WebCore::CDMKeySystemConfiguration **)a2;
    v5 = 80 * v3;
    do
    {
      WebCore::CDMKeySystemConfiguration::~CDMKeySystemConfiguration(v4, a2);
      v4 = (WebCore::CDMKeySystemConfiguration *)(v6 + 80);
      v5 -= 80;
    }
    while (v5);
  }
  result = *(WTF **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a2 = 0;
    a2[2] = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJPKN3WTF6VectorINS8_6RefPtrIN7WebCore7GamepadENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSB_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSP_1EJSM_SN_EEEEEEDcSR_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void WebCore::ShareData::~ShareData(WebCore::ShareData *this, void *a2)
{
  uint64_t v3;
  _DWORD **v4;
  uint64_t v5;
  _DWORD *v6;
  WTF *v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;

  v3 = *((unsigned int *)this + 9);
  if ((_DWORD)v3)
  {
    v4 = (_DWORD **)*((_QWORD *)this + 3);
    v5 = 8 * v3;
    do
    {
      v6 = *v4;
      *v4 = 0;
      if (v6)
      {
        if (v6[4] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v6 + 8))(v6);
        else
          --v6[4];
      }
      ++v4;
      v5 -= 8;
    }
    while (v5);
  }
  v7 = (WTF *)*((_QWORD *)this + 3);
  if (v7)
  {
    *((_QWORD *)this + 3) = 0;
    *((_DWORD *)this + 8) = 0;
    WTF::fastFree(v7, a2);
  }
  v8 = (WTF::StringImpl *)*((_QWORD *)this + 2);
  *((_QWORD *)this + 2) = 0;
  if (v8)
  {
    if (*(_DWORD *)v8 == 2)
      WTF::StringImpl::destroy(v8, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)v8 -= 2;
  }
  v9 = (WTF::StringImpl *)*((_QWORD *)this + 1);
  *((_QWORD *)this + 1) = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)v9 -= 2;
  }
  v10 = *(WTF::StringImpl **)this;
  *(_QWORD *)this = 0;
  if (v10)
  {
    if (*(_DWORD *)v10 == 2)
      WTF::StringImpl::destroy(v10, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)v10 -= 2;
  }
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore9ShareDataENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(int a1, WebCore::ShareData *this)
{
  WebCore::ShareData::~ShareData(this, this);
}

_BYTE *WebCore::jsNodePrototypeFunction_getRootNode(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::Document *a4)
{
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v7;
  JSC::JSCell *v8;
  uint64_t Object;
  JSC::Structure *v10;
  WTF::StringImpl *v11;
  unint64_t v12;
  JSC::VM *v13;
  double v14;
  _BOOL4 v15;
  JSC::VM *v16;
  WebCore::Node *v17;
  uint64_t v18;
  unint64_t Wrapper;
  uint64_t OutOfLineCachedWrapper;
  void *v22;
  WebCore::Node *v23;
  BOOL v24;
  int v25;
  uint64_t v26;
  int *v27;
  int v28;
  _QWORD v29[2];
  WebCore::Node *v30;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v29[0] = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v6 + 5) <= 0xEFu)
    return WebCore::throwThisTypeError((int)this, (int)v29, "Node", "getRootNode");
  v7 = *(_QWORD *)(v6 + 24);
  if (*((_DWORD *)a2 + 8) == 1)
    goto LABEL_19;
  v8 = (JSC::JSCell *)*((_QWORD *)a2 + 6);
  v29[1] = v5;
  if (((unint64_t)v8 & 0xFFFFFFFFFFFFFFF7) == 2)
    goto LABEL_19;
  if (((unint64_t)v8 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v8)) == 0)
  {
    JSC::throwTypeError();
    return 0;
  }
  v10 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v12 = JSC::JSObject::get(v10, this, (unint64_t)v30);
  if (v30)
  {
    if (*(_DWORD *)v30 == 2)
      WTF::StringImpl::destroy(v30, v11);
    else
      *(_DWORD *)v30 -= 2;
  }
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  if (v12 == 10)
  {
LABEL_19:
    v16 = *(JSC::VM **)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x28);
    goto LABEL_20;
  }
  v13 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v12 >= 0xFFFE000000000000)
  {
    v24 = (_DWORD)v12 == 0;
    goto LABEL_45;
  }
  *(_QWORD *)&v14 = v12 - 0x2000000000000;
  if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v12 & 0xFFFE000000000002) != 0)
    {
      v15 = v12 == 7;
      goto LABEL_16;
    }
    v25 = *(unsigned __int8 *)(v12 + 5);
    if (v25 == 3)
    {
      v28 = *(_DWORD *)(v12 + 8);
    }
    else
    {
      if (v25 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v15 = 1;
          goto LABEL_16;
        }
        v24 = *(_QWORD *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
        goto LABEL_45;
      }
      v26 = *(_QWORD *)(v12 + 8);
      if ((v26 & 1) != 0)
        v27 = (int *)(v12 + 16);
      else
        v27 = (int *)(v26 + 4);
      v28 = *v27;
    }
    v24 = v28 == 0;
LABEL_45:
    v15 = !v24;
    goto LABEL_16;
  }
  v15 = v14 > 0.0 || v14 < 0.0;
LABEL_16:
  if (*((_DWORD *)v13 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v13))
    return 0;
  v16 = *(JSC::VM **)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x28);
  if (v15)
  {
    v17 = WebCore::Node::shadowIncludingRoot((WebCore::Node *)v7);
    goto LABEL_24;
  }
LABEL_20:
  if ((*(_BYTE *)(v7 + 22) & 0x18) != 0)
  {
    v17 = **(WebCore::Node ***)(v7 + 40);
  }
  else
  {
    do
    {
      v17 = (WebCore::Node *)v7;
      v7 = *(_QWORD *)(v7 + 32);
    }
    while (v7);
  }
LABEL_24:
  if (*((_BYTE *)v16 + 3328))
  {
    v18 = *((_QWORD *)v17 + 1);
    if (v18)
    {
      if ((*(_BYTE *)(v18 + 8) & 3) == 0)
      {
        Wrapper = *(_QWORD *)v18;
        if (*(_QWORD *)v18)
          return (_BYTE *)Wrapper;
      }
    }
  }
  else
  {
    OutOfLineCachedWrapper = WebCore::getOutOfLineCachedWrapper((uint64_t)v16, (uint64_t)v17);
    if (OutOfLineCachedWrapper)
      return (_BYTE *)OutOfLineCachedWrapper;
  }
  *((_DWORD *)v17 + 6) += 2;
  v30 = v17;
  Wrapper = WebCore::createWrapper((WebCore::DOMWrapperWorld **)this, v16, (WebCore::JSDOMGlobalObject *)&v30, a4);
  v23 = v30;
  v30 = 0;
  if (v23)
  {
    if (*((_DWORD *)v23 + 6) == 2)
    {
      if ((*((_WORD *)v23 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v23, v22);
    }
    else
    {
      *((_DWORD *)v23 + 6) -= 2;
    }
  }
  return (_BYTE *)Wrapper;
}

uint64_t WebCore::jsNodePrototypeFunction_hasChildNodes(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v7;

  v3 = *((_QWORD *)a2 + 5);
  v7 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v3 + 5) <= 0xEFu)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v7, "Node", "hasChildNodes");
  v4 = *(_QWORD *)(v3 + 24);
  if (v4)
    v5 = (*(_WORD *)(v4 + 28) & 4) == 0;
  else
    v5 = 1;
  if (v5)
    return 6;
  if (*(_QWORD *)(v4 + 80))
    return 7;
  return 6;
}

uint64_t WebCore::jsNodePrototypeFunction_normalize(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WTF::String *a4, __n128 a5)
{
  uint64_t v5;
  unsigned int *v6;
  void *v7;
  WTF *v8;
  WTF *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WTF *v15;
  uint64_t v16;
  _BYTE v17[40];
  uint64_t v18;
  JSC::JSGlobalObject *v19;

  v5 = *((_QWORD *)a2 + 5);
  v14 = *((_QWORD *)this + 7);
  if ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) <= 0xEFu)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v14, "Node", "normalize");
  v6 = *(unsigned int **)(v5 + 24);
  v15 = (WTF *)v17;
  a5.n128_u64[0] = 4;
  v16 = 4;
  v17[32] = 0;
  v18 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v19 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v15;
  WebCore::Node::normalize(v6, a2, (uint64_t)a3, a4, a5);
  if (HIDWORD(v16))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v15, v19);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v18;
    if (HIDWORD(v16))
    {
      v11 = v15;
      v12 = 8 * HIDWORD(v16);
      do
      {
        v13 = *(_QWORD *)v11;
        *(_QWORD *)v11 = 0;
        if (v13)
        {
          if (*(_DWORD *)(v13 + 24) == 2)
          {
            if ((*(_WORD *)(v13 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v13, v7);
          }
          else
          {
            *(_DWORD *)(v13 + 24) -= 2;
          }
        }
        v11 = (WTF *)((char *)v11 + 8);
        v12 -= 8;
      }
      while (v12);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v18;
  }
  v8 = v15;
  if (v17 != (_BYTE *)v15 && v15 != 0)
  {
    v15 = 0;
    LODWORD(v16) = 0;
    WTF::fastFree(v8, v7);
  }
  return 10;
}

uint64_t WebCore::jsNodePrototypeFunction_isEqualNode(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WTF::String *a4, __n128 a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  JSC::VM *v10;
  uint64_t v11;
  WebCore::Node *v12;
  uint64_t v13;
  WebCore::Node *v14;
  JSValue v16;
  JSC::VM *v17;
  JSC::VM *v18;

  v10 = (JSC::VM *)*((_QWORD *)this + 7);
  v17 = v10;
  v11 = *((_QWORD *)a2 + 5);
  if ((v11 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v11 + 5) <= 0xEFu)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "Node", "isEqualNode");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v16.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v10, this, v16);
  }
  else
  {
    v12 = *(WebCore::Node **)(v11 + 24);
    v13 = *((_QWORD *)a2 + 6);
    if ((v13 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v14 = 0;
    }
    else
    {
      v18 = v10;
      if ((v13 & 0xFFFE000000000002) != 0
        || *(unsigned __int8 *)(v13 + 5) < 0xF0u
        || (v14 = *(WebCore::Node **)(v13 + 24)) == 0)
      {
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v18, 0, "other", 6, "Node", 5, a9, "isEqualNode", 12, "Node", 5);
        return 0;
      }
    }
    if (WebCore::Node::isEqualNode(v12, v14, a3, a4, a5))
      return 7;
    else
      return 6;
  }
}

uint64_t WebCore::jsNodePrototypeFunction_isSameNode(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  JSValue v15;
  JSC::VM *v16;
  JSC::VM *v17;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v16 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v10 + 5) <= 0xEFu)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "Node", "isSameNode");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v15.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v15);
  }
  v11 = *(_QWORD *)(v10 + 24);
  v12 = *((_QWORD *)a2 + 6);
  if ((v12 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v13 = 0;
  }
  else
  {
    v17 = v9;
    if ((v12 & 0xFFFE000000000002) != 0
      || *(unsigned __int8 *)(v12 + 5) < 0xF0u
      || (v13 = *(_QWORD *)(v12 + 24)) == 0)
    {
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v17, 0, "other", 6, "Node", 5, a8, "isSameNode", 11, "Node", 5);
      return 0;
    }
  }
  if (v13 == v11)
    return 7;
  else
    return 6;
}

_BYTE *WebCore::jsNodePrototypeFunction_compareDocumentPosition(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  WebCore::Node *v11;
  uint64_t v12;
  WebCore::Node *v13;
  JSValue v15;
  JSC::VM *v16;
  JSC::VM *v17;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v16 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v10 + 5) <= 0xEFu)
    return WebCore::throwThisTypeError((int)this, (int)&v16, "Node", "compareDocumentPosition");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v15.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v15);
  }
  else
  {
    v11 = *(WebCore::Node **)(v10 + 24);
    v12 = *((_QWORD *)a2 + 6);
    v17 = v9;
    if ((v12 & 0xFFFE000000000002) != 0
      || *(unsigned __int8 *)(v12 + 5) < 0xF0u
      || (v13 = *(WebCore::Node **)(v12 + 24)) == 0)
    {
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v17, 0, "other", 6, "Node", 5, a8, "compareDocumentPosition", 24, "Node", 5);
      return 0;
    }
    else
    {
      return (_BYTE *)(WebCore::Node::compareDocumentPosition(v11, v13) | 0xFFFE000000000000);
    }
  }
}

uint64_t WebCore::jsNodePrototypeFunction_contains(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  JSValue v17;
  JSC::VM *v18;
  JSC::VM *v19;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v18 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v10 + 5) <= 0xEFu)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v18, "Node", "contains");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v17.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v17);
  }
  v11 = *((_QWORD *)a2 + 6);
  if ((v11 & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    v12 = *(_QWORD *)(v10 + 24);
    v19 = v9;
    if ((v11 & 0xFFFE000000000002) != 0
      || *(unsigned __int8 *)(v11 + 5) < 0xF0u
      || (v13 = *(_QWORD *)(v11 + 24)) == 0)
    {
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v19, 0, "other", 6, "Node", 5, a8, "contains", 9, "Node", 5);
      return 0;
    }
    if (v12 == v13)
      return 7;
    v14 = *(_WORD *)(v12 + 28);
    if ((v14 & 0xF000) != 0x9000)
    {
      if ((v14 & 4) != 0
        && *(_QWORD *)(v12 + 80)
        && ((*(unsigned __int8 *)(v13 + 22) ^ *(unsigned __int8 *)(v12 + 22)) & 8) == 0)
      {
        do
          v13 = *(_QWORD *)(v13 + 32);
        while (v13 != v12 && v13 != 0);
        if (v13)
          return 7;
      }
      return 6;
    }
    if (**(_QWORD **)(v13 + 40) == v12
      && (*(_WORD *)(v13 + 28) & 0xF000) != 0x9000
      && (*(_QWORD *)(v13 + 16) & 0x8000000000000) != 0)
    {
      return 7;
    }
  }
  return 6;
}

_BYTE *WebCore::jsNodePrototypeFunction_lookupPrefix(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WTF::String *a4, __n128 a5)
{
  JSC::VM *v6;
  uint64_t v7;
  WebCore::Node *v8;
  int v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  unsigned __int8 *v17;
  unsigned int v18;
  unsigned int v19;
  JSValue v21;
  JSC::VM *v22;
  WTF::StringImpl *v23;
  int v24;
  WTF::StringImpl *v25;
  int v26;
  char v27;

  v6 = (JSC::VM *)*((_QWORD *)this + 7);
  v22 = v6;
  v7 = *((_QWORD *)a2 + 5);
  if ((v7 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v7 + 5) <= 0xEFu)
    return WebCore::throwThisTypeError((int)this, (int)&v22, "Node", "lookupPrefix");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v6, this, v21);
  }
  v8 = *(WebCore::Node **)(v7 + 24);
  if ((*((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v10 = 0;
    v24 = 0;
LABEL_10:
    v23 = 0;
    v25 = v10;
    v11 = *(_QWORD *)WebCore::Node::lookupPrefix(v8, (const WTF::AtomString *)&v25, (uint64_t)a3, a4, a5);
    if (v11)
    {
      v12 = *((_QWORD *)this + 7);
      v13 = *(_DWORD *)(v11 + 4);
      if (v13)
      {
        if (v13 != 1)
        {
LABEL_13:
          v14 = *(_QWORD *)(v12 + 64760);
          if (!v14 || v11 != *(_QWORD *)(v14 + 8))
            v14 = JSC::jsStringWithCacheSlowCase();
          goto LABEL_18;
        }
        v17 = *(unsigned __int8 **)(v11 + 8);
        if ((*(_BYTE *)(v11 + 16) & 4) != 0)
        {
          v18 = *v17;
        }
        else
        {
          v19 = *(unsigned __int16 *)v17;
          if (v19 > 0xFF)
            goto LABEL_13;
          v18 = v19;
        }
        v14 = *(_QWORD *)(v12 + 8 * v18 + 42216);
      }
      else
      {
        v14 = *(_QWORD *)(v12 + 41968);
      }
    }
    else
    {
      v14 = 2;
    }
LABEL_18:
    v15 = v25;
    v25 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, (WTF::StringImpl *)v11);
      else
        *(_DWORD *)v15 -= 2;
    }
    v9 = v24;
    goto LABEL_22;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v25);
  LOBYTE(v23) = 0;
  v24 = -1;
  v9 = v26;
  if (v26 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E32BF8A0[v26])(&v27, &v23, &v25);
  v24 = v9;
  if (v26 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E32BEAA0[v26])(&v27, &v25);
    v9 = v24;
  }
  if (!v9)
  {
    v10 = v23;
    goto LABEL_10;
  }
  v14 = 0;
LABEL_22:
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32BEAA0[v9])(&v25, &v23);
  return (_BYTE *)v14;
}

_BYTE *WebCore::jsNodePrototypeFunction_lookupNamespaceURI(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WTF::String *a4, __n128 a5)
{
  JSC::VM *v6;
  uint64_t v7;
  WebCore *v8;
  int v9;
  WTF::StringImpl *v10;
  char v11;
  const WebCore::Node *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  unsigned __int8 *v18;
  unsigned int v19;
  unsigned int v20;
  JSValue v22;
  JSC::VM *v23;
  WTF::StringImpl *v24;
  int v25;
  WTF::StringImpl *v26;
  int v27;
  char v28;

  v6 = (JSC::VM *)*((_QWORD *)this + 7);
  v23 = v6;
  v7 = *((_QWORD *)a2 + 5);
  if ((v7 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v7 + 5) <= 0xEFu)
    return WebCore::throwThisTypeError((int)this, (int)&v23, "Node", "lookupNamespaceURI");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v22.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v6, this, v22);
  }
  v8 = *(WebCore **)(v7 + 24);
  if ((*((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v10 = 0;
    v25 = 0;
    v24 = 0;
    v11 = 1;
    v26 = 0;
    goto LABEL_11;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v26);
  LOBYTE(v24) = 0;
  v25 = -1;
  v9 = v27;
  if (v27 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E32BF8A0[v27])(&v28, &v24, &v26);
  v25 = v9;
  if (v27 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E32BEAA0[v27])(&v28, &v26);
    v9 = v25;
  }
  if (!v9)
  {
    v10 = v24;
    v24 = 0;
    v26 = v10;
    if (v10)
    {
      v11 = 0;
      if (*((_DWORD *)v10 + 1))
      {
        v12 = (const WebCore::Node *)&v26;
LABEL_12:
        v13 = *WebCore::locateDefaultNamespace(v8, v12, a3, a4, a5);
        if (v13)
        {
          v14 = *((_QWORD *)this + 7);
          v15 = *(_DWORD *)(v13 + 4);
          if (v15)
          {
            if (v15 != 1)
            {
LABEL_15:
              v16 = *(_QWORD *)(v14 + 64760);
              if (!v16 || v13 != *(_QWORD *)(v16 + 8))
                v16 = JSC::jsStringWithCacheSlowCase();
              goto LABEL_20;
            }
            v18 = *(unsigned __int8 **)(v13 + 8);
            if ((*(_BYTE *)(v13 + 16) & 4) != 0)
            {
              v19 = *v18;
            }
            else
            {
              v20 = *(unsigned __int16 *)v18;
              if (v20 > 0xFF)
                goto LABEL_15;
              v19 = v20;
            }
            v16 = *(_QWORD *)(v14 + 8 * v19 + 42216);
          }
          else
          {
            v16 = *(_QWORD *)(v14 + 41968);
          }
        }
        else
        {
          v16 = 2;
        }
LABEL_20:
        v26 = 0;
        if ((v11 & 1) == 0)
        {
          if (*(_DWORD *)v10 == 2)
            WTF::StringImpl::destroy(v10, (WTF::StringImpl *)v13);
          else
            *(_DWORD *)v10 -= 2;
        }
        v9 = v25;
        goto LABEL_24;
      }
    }
    else
    {
      v11 = 1;
    }
LABEL_11:
    v12 = (const WebCore::Node *)MEMORY[0x1E0CBF2F8];
    goto LABEL_12;
  }
  v16 = 0;
LABEL_24:
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32BEAA0[v9])(&v26, &v24);
  return (_BYTE *)v16;
}

_BYTE *WebCore::jsNodePrototypeFunction_isDefaultNamespace(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WTF::String *a4, __n128 a5)
{
  JSC::VM *v6;
  uint64_t v7;
  WebCore *v8;
  int v9;
  WTF::StringImpl *v10;
  char v11;
  WTF::StringImpl **v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  JSValue v17;
  JSC::VM *v18;
  WTF::StringImpl *v19;
  int v20;
  WTF::StringImpl *v21;
  int v22;
  char v23;

  v6 = (JSC::VM *)*((_QWORD *)this + 7);
  v18 = v6;
  v7 = *((_QWORD *)a2 + 5);
  if ((v7 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v7 + 5) <= 0xEFu)
    return WebCore::throwThisTypeError((int)this, (int)&v18, "Node", "isDefaultNamespace");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v17.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v6, this, v17);
  }
  v8 = *(WebCore **)(v7 + 24);
  if ((*((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v10 = 0;
    v20 = 0;
    v19 = 0;
    v11 = 1;
    v21 = 0;
    goto LABEL_11;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v21);
  LOBYTE(v19) = 0;
  v20 = -1;
  v9 = v22;
  if (v22 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E32BF8A0[v22])(&v23, &v19, &v21);
  v20 = v9;
  if (v22 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E32BEAA0[v22])(&v23, &v21);
    v9 = v20;
  }
  if (!v9)
  {
    v10 = v19;
    v19 = 0;
    v21 = v10;
    if (v10)
    {
      v11 = 0;
      if (*((_DWORD *)v10 + 1))
      {
        v12 = &v21;
        goto LABEL_12;
      }
    }
    else
    {
      v11 = 1;
    }
LABEL_11:
    v12 = (WTF::StringImpl **)MEMORY[0x1E0CBF2F8];
LABEL_12:
    if ((WTF::StringImpl *)*WebCore::locateDefaultNamespace(v8, MEMORY[0x1E0CBF2F8], a3, a4, a5) == *v12)
      v14 = 7;
    else
      v14 = 6;
    v21 = 0;
    if ((v11 & 1) == 0)
    {
      if (*(_DWORD *)v10 == 2)
        WTF::StringImpl::destroy(v10, v13);
      else
        *(_DWORD *)v10 -= 2;
    }
    v9 = v20;
    goto LABEL_19;
  }
  v14 = 0;
LABEL_19:
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32BEAA0[v9])(&v21, &v19);
  return (_BYTE *)v14;
}

_BYTE *WebCore::jsNodePrototypeFunction_insertBefore(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  WebCore::Node *v15;
  uint64_t v16;
  WTF *v17;
  JSValue v20;
  WTF *v21;
  uint64_t v22;
  uint64_t v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  JSC::VM *v26;
  WTF *v27;
  uint64_t v28;
  _BYTE v29[40];
  uint64_t v30;
  JSC::JSGlobalObject *v31;
  JSC::VM *v32;
  WebCore::Node *v33;
  WTF::StringImpl *v34;
  JSC::VM *v35;
  WTF::StringImpl *v36;
  char v37;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v10 + 5) <= 0xEFu)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "Node", "insertBefore");
  v11 = *(_QWORD *)(v10 + 24);
  v32 = v9;
  v27 = (WTF *)v29;
  v28 = 4;
  v29[32] = 0;
  v30 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v31 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v27;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    v16 = JSC::VM::throwException(v9, this, v20);
  }
  else
  {
    v12 = *((_QWORD *)a2 + 6);
    v35 = v9;
    if ((v12 & 0xFFFE000000000002) != 0
      || *(unsigned __int8 *)(v12 + 5) < 0xF0u
      || (v13 = *(uint64_t **)(v12 + 24)) == 0)
    {
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v35, 0, "node", 5, "Node", 5, a8, "insertBefore", 13, "Node", 5);
      v16 = 0;
    }
    else
    {
      v14 = *((_QWORD *)a2 + 7);
      if ((v14 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v15 = 0;
        goto LABEL_9;
      }
      v35 = v9;
      if ((v14 & 0xFFFE000000000002) == 0 && *(unsigned __int8 *)(v14 + 5) >= 0xF0u)
      {
        v15 = *(WebCore::Node **)(v14 + 24);
        if (v15)
        {
          *((_DWORD *)v15 + 6) += 2;
LABEL_9:
          v33 = v15;
          if (v11 && (*(_WORD *)(v11 + 28) & 4) != 0)
          {
            WebCore::ContainerNode::insertBefore(v11, v13, &v33, (uint64_t)&v35);
            v15 = v33;
          }
          else
          {
            LOBYTE(v35) = 1;
            v36 = 0;
            v37 = 1;
          }
          v33 = 0;
          if (v15)
          {
            if (*((_DWORD *)v15 + 6) == 2)
            {
              if ((*((_WORD *)v15 + 15) & 0x400) == 0)
                WebCore::Node::removedLastRef(v15, a2);
            }
            else
            {
              *((_DWORD *)v15 + 6) -= 2;
            }
          }
          if (v37)
          {
            LOBYTE(v33) = (_BYTE)v35;
            v24 = v36;
            v36 = 0;
            v34 = v24;
            if (!*((_QWORD *)v9 + 2))
            {
              WebCore::propagateExceptionSlowPath(this, &v32, (unsigned __int8 *)&v33);
              v24 = v34;
            }
            v34 = 0;
            if (v24)
            {
              if (*(_DWORD *)v24 == 2)
                WTF::StringImpl::destroy(v24, a2);
              else
                *(_DWORD *)v24 -= 2;
            }
            if (v37)
            {
              v25 = v36;
              v36 = 0;
              if (v25)
              {
                if (*(_DWORD *)v25 == 2)
                  WTF::StringImpl::destroy(v25, a2);
                else
                  *(_DWORD *)v25 -= 2;
              }
            }
          }
          v16 = v12;
          goto LABEL_17;
        }
      }
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v35, 1, "child", 6, "Node", 5, a8, "insertBefore", 13, "Node", 5);
      v16 = 0;
    }
  }
LABEL_17:
  if (HIDWORD(v28))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v27, v31);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
    if (HIDWORD(v28))
    {
      v21 = v27;
      v22 = 8 * HIDWORD(v28);
      do
      {
        v23 = *(_QWORD *)v21;
        *(_QWORD *)v21 = 0;
        if (v23)
        {
          if (*(_DWORD *)(v23 + 24) == 2)
          {
            if ((*(_WORD *)(v23 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v23, a2);
          }
          else
          {
            *(_DWORD *)(v23 + 24) -= 2;
          }
        }
        v21 = (WTF *)((char *)v21 + 8);
        v22 -= 8;
      }
      while (v22);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
  }
  v17 = v27;
  if (v29 != (_BYTE *)v27 && v27 != 0)
  {
    v27 = 0;
    LODWORD(v28) = 0;
    WTF::fastFree(v17, a2);
  }
  return (_BYTE *)v16;
}

_BYTE *WebCore::jsNodePrototypeFunction_appendChild(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  WebCore::Node *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF *v16;
  JSValue v19;
  WTF *v20;
  uint64_t v21;
  uint64_t v22;
  WTF::StringImpl *v23;
  JSValue v24;
  WTF::StringImpl *v25;
  JSC::VM *v26;
  WTF *v27;
  uint64_t v28;
  _BYTE v29[40];
  uint64_t v30;
  JSC::JSGlobalObject *v31;
  char v32;
  WTF::StringImpl *v33;
  JSC::VM *v34;
  WTF::StringImpl *v35;
  char v36;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v10 + 5) <= 0xEFu)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "Node", "appendChild");
  v11 = *(_QWORD *)(v10 + 24);
  v27 = (WTF *)v29;
  v28 = 4;
  v29[32] = 0;
  v30 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v31 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v27;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    v15 = JSC::VM::throwException(v9, this, v19);
    goto LABEL_11;
  }
  v12 = *((_QWORD *)a2 + 6);
  v34 = v9;
  if ((v12 & 0xFFFE000000000002) != 0
    || *(unsigned __int8 *)(v12 + 5) < 0xF0u
    || (v13 = *(WebCore::Node **)(v12 + 24)) == 0)
  {
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v34, 0, "node", 5, "Node", 5, a8, "appendChild", 12, "Node", 5);
    v15 = 0;
    goto LABEL_11;
  }
  if (!v11 || (*(_WORD *)(v11 + 28) & 4) == 0)
  {
    LOBYTE(v34) = 1;
    v35 = 0;
    v36 = 1;
    goto LABEL_30;
  }
  WebCore::ContainerNode::appendChild(v11, v13, (uint64_t)&v34);
  if (v36)
  {
LABEL_30:
    v14 = (WTF::StringImpl *)v34;
    v32 = (char)v34;
    v23 = v35;
    v35 = 0;
    v33 = v23;
    if (!*((_QWORD *)v9 + 2))
    {
      v24.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v34, (JSC::JSGlobalObject *)&v33);
      JSC::VM::throwException(v9, this, v24);
      v23 = v33;
    }
    v33 = 0;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v14);
      else
        *(_DWORD *)v23 -= 2;
    }
    if (v36)
    {
      v25 = v35;
      v35 = 0;
      if (v25)
      {
        if (*(_DWORD *)v25 == 2)
          WTF::StringImpl::destroy(v25, v14);
        else
          *(_DWORD *)v25 -= 2;
      }
    }
  }
  v15 = v12;
LABEL_11:
  if (HIDWORD(v28))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v27, v31);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
    if (HIDWORD(v28))
    {
      v20 = v27;
      v21 = 8 * HIDWORD(v28);
      do
      {
        v22 = *(_QWORD *)v20;
        *(_QWORD *)v20 = 0;
        if (v22)
        {
          if (*(_DWORD *)(v22 + 24) == 2)
          {
            if ((*(_WORD *)(v22 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v22, v14);
          }
          else
          {
            *(_DWORD *)(v22 + 24) -= 2;
          }
        }
        v20 = (WTF *)((char *)v20 + 8);
        v21 -= 8;
      }
      while (v21);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
  }
  v16 = v27;
  if (v29 != (_BYTE *)v27 && v27 != 0)
  {
    v27 = 0;
    LODWORD(v28) = 0;
    WTF::fastFree(v16, v14);
  }
  return (_BYTE *)v15;
}

_BYTE *WebCore::jsNodePrototypeFunction_replaceChild(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  WebCore::ContainerNode *v11;
  uint64_t v12;
  WebCore::Node *v13;
  uint64_t v14;
  WebCore::Node *v15;
  uint64_t v16;
  WTF *v17;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  JSValue v22;
  WTF *v23;
  uint64_t v24;
  uint64_t v25;
  JSC::VM *v26;
  WTF *v27;
  uint64_t v28;
  _BYTE v29[40];
  uint64_t v30;
  JSC::JSGlobalObject *v31;
  JSC::VM *v32;
  unsigned __int8 v33[8];
  WTF::StringImpl *v34;
  JSC::VM *v35;
  WTF::StringImpl *v36;
  char v37;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v10 + 5) <= 0xEFu)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "Node", "replaceChild");
  v11 = *(WebCore::ContainerNode **)(v10 + 24);
  v32 = v9;
  v27 = (WTF *)v29;
  v28 = 4;
  v29[32] = 0;
  v30 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v31 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v27;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v22.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    v16 = JSC::VM::throwException(v9, this, v22);
    goto LABEL_14;
  }
  v12 = *((_QWORD *)a2 + 6);
  v35 = v9;
  if ((v12 & 0xFFFE000000000002) != 0
    || *(unsigned __int8 *)(v12 + 5) < 0xF0u
    || (v13 = *(WebCore::Node **)(v12 + 24)) == 0)
  {
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v35, 0, "node", 5, "Node", 5, a8, "replaceChild", 13, "Node", 5);
    v16 = 0;
    goto LABEL_14;
  }
  v14 = *((_QWORD *)a2 + 7);
  v35 = v9;
  if ((v14 & 0xFFFE000000000002) != 0
    || *(unsigned __int8 *)(v14 + 5) < 0xF0u
    || (v15 = *(WebCore::Node **)(v14 + 24)) == 0)
  {
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v35, 1, "child", 6, "Node", 5, a8, "replaceChild", 13, "Node", 5);
    v16 = 0;
    goto LABEL_14;
  }
  if (!v11 || (*((_WORD *)v11 + 14) & 4) == 0)
  {
    LOBYTE(v35) = 1;
    v36 = 0;
    v37 = 1;
    goto LABEL_23;
  }
  WebCore::ContainerNode::replaceChild(v11, v13, v15, (uint64_t)&v35);
  if (v37)
  {
LABEL_23:
    v33[0] = v35;
    v20 = v36;
    v36 = 0;
    v34 = v20;
    if (!*((_QWORD *)v9 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v32, v33);
      v20 = v34;
    }
    v34 = 0;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
        WTF::StringImpl::destroy(v20, a2);
      else
        *(_DWORD *)v20 -= 2;
    }
    if (v37)
    {
      v21 = v36;
      v36 = 0;
      if (v21)
      {
        if (*(_DWORD *)v21 == 2)
          WTF::StringImpl::destroy(v21, a2);
        else
          *(_DWORD *)v21 -= 2;
      }
    }
  }
  v16 = v14;
LABEL_14:
  if (HIDWORD(v28))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v27, v31);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
    if (HIDWORD(v28))
    {
      v23 = v27;
      v24 = 8 * HIDWORD(v28);
      do
      {
        v25 = *(_QWORD *)v23;
        *(_QWORD *)v23 = 0;
        if (v25)
        {
          if (*(_DWORD *)(v25 + 24) == 2)
          {
            if ((*(_WORD *)(v25 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v25, a2);
          }
          else
          {
            *(_DWORD *)(v25 + 24) -= 2;
          }
        }
        v23 = (WTF *)((char *)v23 + 8);
        v24 -= 8;
      }
      while (v24);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
  }
  v17 = v27;
  if (v29 != (_BYTE *)v27 && v27 != 0)
  {
    v27 = 0;
    LODWORD(v28) = 0;
    WTF::fastFree(v17, a2);
  }
  return (_BYTE *)v16;
}

_BYTE *WebCore::jsNodePrototypeFunction_removeChild(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  WebCore::ContainerNode *v11;
  uint64_t v12;
  WebCore::Node *v13;
  uint64_t v14;
  WTF *v15;
  JSValue v18;
  WTF *v19;
  uint64_t v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  JSC::VM *v24;
  WTF *v25;
  uint64_t v26;
  _BYTE v27[40];
  uint64_t v28;
  JSC::JSGlobalObject *v29;
  JSC::VM *v30;
  unsigned __int8 v31[8];
  WTF::StringImpl *v32;
  JSC::VM *v33;
  WTF::StringImpl *v34;
  char v35;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v24 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v10 + 5) <= 0xEFu)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "Node", "removeChild");
  v11 = *(WebCore::ContainerNode **)(v10 + 24);
  v30 = v9;
  v25 = (WTF *)v27;
  v26 = 4;
  v27[32] = 0;
  v28 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v29 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v25;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    v14 = JSC::VM::throwException(v9, this, v18);
    goto LABEL_11;
  }
  v12 = *((_QWORD *)a2 + 6);
  v33 = v9;
  if ((v12 & 0xFFFE000000000002) != 0
    || *(unsigned __int8 *)(v12 + 5) < 0xF0u
    || (v13 = *(WebCore::Node **)(v12 + 24)) == 0)
  {
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v33, 0, "child", 6, "Node", 5, a8, "removeChild", 12, "Node", 5);
    v14 = 0;
    goto LABEL_11;
  }
  if (!v11 || (*((_WORD *)v11 + 14) & 4) == 0)
  {
    LOBYTE(v33) = 5;
    v34 = 0;
    v35 = 1;
    goto LABEL_30;
  }
  WebCore::ContainerNode::removeChild(v11, v13, &v33);
  if (v35)
  {
LABEL_30:
    v31[0] = v33;
    v22 = v34;
    v34 = 0;
    v32 = v22;
    if (!*((_QWORD *)v9 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v30, v31);
      v22 = v32;
    }
    v32 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, v13);
      else
        *(_DWORD *)v22 -= 2;
    }
    if (v35)
    {
      v23 = v34;
      v34 = 0;
      if (v23)
      {
        if (*(_DWORD *)v23 == 2)
          WTF::StringImpl::destroy(v23, v13);
        else
          *(_DWORD *)v23 -= 2;
      }
    }
  }
  v14 = v12;
LABEL_11:
  if (HIDWORD(v26))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v25, v29);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v28;
    if (HIDWORD(v26))
    {
      v19 = v25;
      v20 = 8 * HIDWORD(v26);
      do
      {
        v21 = *(_QWORD *)v19;
        *(_QWORD *)v19 = 0;
        if (v21)
        {
          if (*(_DWORD *)(v21 + 24) == 2)
          {
            if ((*(_WORD *)(v21 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v21, v13);
          }
          else
          {
            *(_DWORD *)(v21 + 24) -= 2;
          }
        }
        v19 = (WTF *)((char *)v19 + 8);
        v20 -= 8;
      }
      while (v20);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v28;
  }
  v15 = v25;
  if (v27 != (_BYTE *)v25 && v25 != 0)
  {
    v25 = 0;
    LODWORD(v26) = 0;
    WTF::fastFree(v15, v13);
  }
  return (_BYTE *)v14;
}

_BYTE *WebCore::jsNodeIteratorPrototypeFunction_nextNode(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::NodeIterator *v12;
  uint64_t v13;
  unint64_t v14;
  JSC::VM *v16;
  unsigned __int8 v17[16];
  int v18;
  JSC::VM *v19;
  char v20;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v16 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v16, "NodeIterator", "nextNode");
  v6 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v7 = *(unsigned int *)(v6 + 0x4C);
  v8 = *(_DWORD *)(v6 + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSNodeIterator::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSNodeIterator::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v16, "NodeIterator", "nextNode");
  v12 = *(WebCore::NodeIterator **)(v4 + 24);
  v19 = v5;
  v13 = *(_QWORD *)(v6 + 40);
  WebCore::NodeIterator::nextNode(v12, a2, (uint64_t)v17);
  v14 = WebCore::toJS<WebCore::IDLNullable<WebCore::IDLInterface<WebCore::Node>>,WebCore::ExceptionOr<WTF::RefPtr<WebCore::Node,WTF::RawPtrTraits<WebCore::Node>,WTF::DefaultRefDerefTraits<WebCore::Node>>>>((WebCore::DOMWrapperWorld **)this, v13, &v19, v17);
  if (v18 != -1)
    ((void (*)(char *, unsigned __int8 *))off_1E32C1AA0[v18])(&v20, v17);
  return (_BYTE *)v14;
}

_BYTE *WebCore::jsNodeIteratorPrototypeFunction_previousNode(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::NodeIterator *v12;
  uint64_t v13;
  unint64_t v14;
  JSC::VM *v16;
  unsigned __int8 v17[16];
  int v18;
  JSC::VM *v19;
  char v20;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v16 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v16, "NodeIterator", "previousNode");
  v6 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v7 = *(unsigned int *)(v6 + 0x4C);
  v8 = *(_DWORD *)(v6 + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSNodeIterator::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSNodeIterator::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v16, "NodeIterator", "previousNode");
  v12 = *(WebCore::NodeIterator **)(v4 + 24);
  v19 = v5;
  v13 = *(_QWORD *)(v6 + 40);
  WebCore::NodeIterator::previousNode(v12, a2, (uint64_t)v17);
  v14 = WebCore::toJS<WebCore::IDLNullable<WebCore::IDLInterface<WebCore::Node>>,WebCore::ExceptionOr<WTF::RefPtr<WebCore::Node,WTF::RawPtrTraits<WebCore::Node>,WTF::DefaultRefDerefTraits<WebCore::Node>>>>((WebCore::DOMWrapperWorld **)this, v13, &v19, v17);
  if (v18 != -1)
    ((void (*)(char *, unsigned __int8 *))off_1E32C1AA0[v18])(&v20, v17);
  return (_BYTE *)v14;
}

uint64_t WebCore::jsNodeIteratorPrototypeFunction_detach(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;

  v3 = *((_QWORD *)a2 + 5);
  v11 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v11, "NodeIterator", "detach");
  v4 = 16 * (*(_DWORD *)v3 & 0xFFFFFFFE);
  v5 = *(unsigned int *)(v4 + 76);
  v6 = *(_DWORD *)(v4 + 76) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSNodeIterator::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSNodeIterator::s_info && v7 != 0);
  }
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v11, "NodeIterator", "detach");
  else
    return 10;
}

uint64_t WebCore::jsNodeListPrototypeFunction_item(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  WebCore::Document *v14;
  uint64_t v15;
  unint64_t Wrapper;
  JSValue v18;
  uint64_t v19;
  unsigned int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  void *v27;
  WebCore::Node *v28;
  JSC::VM *v30;
  _DWORD v31[2];
  WebCore::Node *v32;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v30 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v30, "NodeList", "item");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSNodeList::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSNodeList::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v30, "NodeList", "item");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v18);
  }
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v31);
  if (v31[1])
    return 0;
  v12 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v13 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v11 + 24))(v11, v31[0]);
  if (!v13)
    return 2;
  if (*(_BYTE *)(v12 + 3328))
  {
    v15 = *(_QWORD *)(v13 + 8);
    if (v15)
    {
LABEL_17:
      if ((*(_BYTE *)(v15 + 8) & 3) == 0)
      {
        Wrapper = *(_QWORD *)v15;
        if (*(_QWORD *)v15)
          return Wrapper;
      }
    }
  }
  else
  {
    v19 = *(_QWORD *)(*(_QWORD *)(v12 + 3320) + 32);
    if (v19)
    {
      v20 = *(_DWORD *)(v19 - 8);
      v21 = (~(v13 << 32) + v13) ^ ((unint64_t)(~(v13 << 32) + v13) >> 22);
      v22 = 9 * ((v21 + ~(v21 << 13)) ^ ((v21 + ~(v21 << 13)) >> 8));
      v23 = (v22 ^ (v22 >> 15)) + ~((v22 ^ (v22 >> 15)) << 27);
      v24 = v20 & ((v23 >> 31) ^ v23);
      v25 = *(_QWORD *)(v19 + 16 * v24);
      if (v25 == v13)
      {
LABEL_30:
        v15 = *(_QWORD *)(v19 + 16 * v24 + 8);
        if (v15)
          goto LABEL_17;
      }
      else
      {
        v26 = 1;
        while (v25)
        {
          v24 = ((_DWORD)v24 + v26) & v20;
          v25 = *(_QWORD *)(v19 + 16 * v24);
          ++v26;
          if (v25 == v13)
            goto LABEL_30;
        }
      }
    }
  }
  *(_DWORD *)(v13 + 24) += 2;
  v32 = (WebCore::Node *)v13;
  Wrapper = WebCore::createWrapper((WebCore::DOMWrapperWorld **)this, (JSC::VM *)v12, (WebCore::JSDOMGlobalObject *)&v32, v14);
  v28 = v32;
  v32 = 0;
  if (v28)
  {
    if (*((_DWORD *)v28 + 6) == 2)
    {
      if ((*((_WORD *)v28 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v28, v27);
    }
    else
    {
      *((_DWORD *)v28 + 6) -= 2;
    }
  }
  return Wrapper;
}

void WebCore::Notification::Options::~Options(WebCore::Notification::Options *this, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;
  _DWORD *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  void *v13;

  v3 = (WTF::StringImpl *)*((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  v4 = (WTF::StringImpl *)*((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
  {
    if (*(_DWORD *)v4 == 2)
      WTF::StringImpl::destroy(v4, a2);
    else
      *(_DWORD *)v4 -= 2;
  }
  v5 = (_DWORD *)*((_QWORD *)this + 7);
  *((_QWORD *)this + 7) = 0;
  if (v5)
  {
    if (*v5 == 1)
      WTF::JSONImpl::Value::operator delete();
    else
      --*v5;
  }
  v6 = (unsigned int *)*((_QWORD *)this + 6);
  *((_QWORD *)this + 6) = 0;
  if (v6)
  {
    do
    {
      v7 = __ldaxr(v6);
      v8 = v7 - 1;
    }
    while (__stlxr(v8, v6));
    if (!v8)
    {
      atomic_store(1u, v6);
      WebCore::SerializedScriptValue::Internals::~Internals((WebCore::SerializedScriptValue::Internals *)(v6 + 2), a2);
      WTF::fastFree((WTF *)v6, v13);
    }
  }
  v9 = (WTF::StringImpl *)*((_QWORD *)this + 4);
  *((_QWORD *)this + 4) = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, a2);
    else
      *(_DWORD *)v9 -= 2;
  }
  v10 = (WTF::StringImpl *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (v10)
  {
    if (*(_DWORD *)v10 == 2)
      WTF::StringImpl::destroy(v10, a2);
    else
      *(_DWORD *)v10 -= 2;
  }
  v11 = (WTF::StringImpl *)*((_QWORD *)this + 2);
  *((_QWORD *)this + 2) = 0;
  if (v11)
  {
    if (*(_DWORD *)v11 == 2)
      WTF::StringImpl::destroy(v11, a2);
    else
      *(_DWORD *)v11 -= 2;
  }
  v12 = (WTF::StringImpl *)*((_QWORD *)this + 1);
  *((_QWORD *)this + 1) = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, a2);
    else
      *(_DWORD *)v12 -= 2;
  }
}

WebCore::Notification *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore12NotificationENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WebCore::Notification **a2)
{
  WebCore::Notification *result;
  bmalloc::api *v3;
  void *v4;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*((_DWORD *)result + 6) == 1)
    {
      WebCore::Notification::~Notification(result, a2);
      return (WebCore::Notification *)bmalloc::api::isoDeallocate(v3, v4);
    }
    else
    {
      --*((_DWORD *)result + 6);
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore12NotificationENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore12Notification7OptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(int a1, WebCore::Notification::Options *this)
{
  WebCore::Notification::Options::~Options(this, this);
}

unint64_t WebCore::jsNotificationConstructorFunction_requestPermission(uint64_t this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  uint64_t v14;
  WebCore::DOMGuardedObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  WebCore::ScriptExecutionContext *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *Allocator;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  int v29;
  int v30;
  uint64_t v31;
  WebCore::DOMGuardedObject *v32;
  uint64_t v33;
  objc_class *v35;
  WebCore::DOMGuardedObject *v36;
  uint64_t v37;
  uint64_t v38;
  WebCore::DOMGuardedObject *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  WebCore::DOMGuardedObject *v43;
  int v44;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D99514);
  }
  v10 = *(_QWORD *)(this + 56);
  v11 = *(_DWORD *)(this + 1164);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*(JSC::JSPromise **)(this + 56), v12, a3);
  v14 = WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject((WebCore::DOMGuardedObject *)v14, this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v39 = v15;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext((WebCore::JSDOMGlobalObject *)this);
  if (v16)
  {
    v18 = v16;
    if (*(_BYTE *)(v16 + 274))
    {
      __break(0xC471u);
      JUMPOUT(0x194D9953CLL);
    }
    if (*((_DWORD *)a2 + 8) == 1 || (v19 = *((_QWORD *)a2 + 6), (v19 & 0xFFFFFFFFFFFFFFF7) == 2))
    {
      v14 = 0;
      v41 = 0;
    }
    else
    {
      v42 = *(_QWORD *)(this + 56);
      if ((v19 & 0xFFFE000000000002) == 0
        && (v20 = *(unsigned __int8 *)(v19 + 5), v20 >= 0x17)
        && ((v20 & 0xFE) == 0x1A
         || (*(_BYTE *)(v19 + 6) & 4) != 0
         && ((*(void (**)(WebCore::DOMGuardedObject **__return_ptr, uint64_t))(16
                                                                                       * *(unsigned int *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C)
                                                                                       + 0x38))(&v43, v19), (_BYTE)v43)))
      {
        v14 = WTF::fastMalloc((WTF *)0x20);
        v21 = (WebCore::ScriptExecutionContext *)WebCore::JSDOMGlobalObject::scriptExecutionContext((WebCore::JSDOMGlobalObject *)this);
        *(_DWORD *)(v14 + 16) = 1;
        *(_QWORD *)v14 = &off_1E33A18C0;
        *(_QWORD *)(v14 + 8) = 0;
        WebCore::ContextDestructionObserver::observeContext((WebCore::ContextDestructionObserver *)v14, v21);
        *(_QWORD *)v14 = &off_1E32BC3C0;
        v22 = (_QWORD *)WTF::fastMalloc((WTF *)0x18);
        v23 = WebCore::JSDOMGlobalObject::scriptExecutionContext((WebCore::JSDOMGlobalObject *)this);
        if ((this & 8) != 0)
          v24 = ((this - 112) | 1) + 47;
        else
          v24 = *(_QWORD *)(this & 0xFFFFFFFFFFFFC000) + 32;
        Allocator = *(_QWORD **)(v24 + 16);
        if (!Allocator)
        {
          v37 = v24;
          Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
          v24 = v37;
        }
        *(_QWORD *)(v24 + 16) = *Allocator;
        Allocator[1] = 0;
        Allocator[2] = 0;
        *Allocator = this;
        *v22 = Allocator;
        v22[1] = &off_1E32268A0;
        v26 = v22 + 1;
        if ((v19 & 8) != 0)
          v27 = ((v19 - 112) | 1) + 47;
        else
          v27 = *(_QWORD *)(v19 & 0xFFFFFFFFFFFFC000) + 32;
        v28 = *(_QWORD **)(v27 + 16);
        if (!v28)
        {
          v38 = v27;
          v28 = (_QWORD *)JSC::WeakSet::findAllocator();
          v26 = v22 + 1;
          v27 = v38;
        }
        v29 = 0;
        *(_QWORD *)(v27 + 16) = *v28;
        *v28 = v19;
        v28[1] = v26;
        v28[2] = v23;
        v22[2] = v28;
        *(_QWORD *)(v14 + 24) = v22;
        v44 = 0;
        v43 = 0;
        v40 = v14;
        v30 = 1;
      }
      else
      {
        WebCore::throwArgumentMustBeFunctionError(this, (uint64_t)&v42, 0, "deprecatedCallback", 19, "Notification", 13, v17, "requestPermission", 18);
        v30 = 0;
        v29 = 1;
        v44 = 1;
      }
      v41 = v29;
      ((void (*)(uint64_t *, WebCore::DOMGuardedObject **))off_1E32C1B98[v29])(&v42, &v43);
      if (!v30)
      {
        v31 = 1;
        goto LABEL_37;
      }
    }
    v40 = 0;
    v43 = (WebCore::DOMGuardedObject *)v14;
    WebCore::Notification::requestPermission((WebCore::Document *)(v18 - 192), (WTF::StringImpl *)&v43, (uint64_t *)&v39);
    v32 = v43;
    v43 = 0;
    if (v32)
    {
      if (*((_DWORD *)v32 + 4) == 1)
        (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v32 + 16))(v32);
      else
        --*((_DWORD *)v32 + 4);
    }
    v31 = 0;
LABEL_37:
    ((void (*)(WebCore::DOMGuardedObject **, uint64_t *))off_1E32C1BA8[v31])(&v43, &v40);
    v14 = (uint64_t)v39;
    v39 = 0;
    if (!v14)
      goto LABEL_40;
    goto LABEL_38;
  }
  v39 = 0;
LABEL_38:
  if (*(_DWORD *)(v14 + 16) == 1)
    (*(void (**)(uint64_t))(*(_QWORD *)v14 + 16))(v14);
  else
    --*(_DWORD *)(v14 + 16);
LABEL_40:
  v33 = *(_QWORD *)(v10 + 16);
  if (v33)
  {
    if (*(_QWORD *)(v10 + 24) != v33)
    {
      v35 = *(objc_class **)(v33 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create(this, v13, 0, &v43);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v43, v35, 0);
      v36 = v43;
      v43 = 0;
      if (v36)
      {
        if (*((_DWORD *)v36 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v36 + 16))(v36);
        else
          --*((_DWORD *)v36 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore32JSNotificationPermissionCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore32JSNotificationPermissionCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

uint64_t WebCore::jsNotificationPrototypeFunction_close(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "Notification", "close");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSNotification::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSNotification::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "Notification", "close");
  WebCore::Notification::close((WebCore::Notification *)(*(_QWORD *)(v3 + 24) - 32));
  return 10;
}

uint64_t WebCore::jsNotificationPrototypeFunction_show(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  unsigned int *v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;

  v3 = *((_QWORD *)a2 + 5);
  v12 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v12, "Notification", "show");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSNotification::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSNotification::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v12, "Notification", "show");
  v9 = (unsigned int *)(*(_QWORD *)(v3 + 24) - 32);
  v10 = (_QWORD *)WTF::fastMalloc((WTF *)0x10);
  *v10 = off_1E32C3F40;
  v13 = v10;
  WebCore::Notification::show(v9, (uint64_t *)&v13);
  if (v13)
    (*(void (**)(_QWORD *))(*v13 + 8))(v13);
  return 10;
}

WebCore::Notification *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore21NotificationEventInitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  WebCore::Notification *result;
  bmalloc::api *v5;
  void *v6;

  v3 = (WTF::StringImpl *)*((_QWORD *)a2 + 2);
  *((_QWORD *)a2 + 2) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  result = (WebCore::Notification *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*((_DWORD *)result + 6) == 1)
    {
      WebCore::Notification::~Notification(result, a2);
      return (WebCore::Notification *)bmalloc::api::isoDeallocate(v5, v6);
    }
    else
    {
      --*((_DWORD *)result + 6);
    }
  }
  return result;
}

uint64_t WebCore::jsOESDrawBuffersIndexedPrototypeFunction_enableiOES(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD *v15;
  JSValue v17;
  JSC::VM *v18;
  _DWORD v19[2];
  _DWORD v20[2];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v18 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v18, "OESDrawBuffersIndexed", "enableiOES");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOESDrawBuffersIndexed::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOESDrawBuffersIndexed::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v18, "OESDrawBuffersIndexed", "enableiOES");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v17.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v17);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v20);
    if (v20[1])
    {
      return 0;
    }
    else
    {
      WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v19);
      if (v19[1])
      {
        return 0;
      }
      else
      {
        v13 = v20[0];
        v14 = v19[0];
        if (*(_QWORD *)(v12 + 16))
        {
          v15 = *(_DWORD **)(*(_QWORD *)(v12 + 16) + 88);
          if (v15)
            ++v15[2];
          (*(void (**)(_DWORD *, uint64_t, uint64_t))(*(_QWORD *)v15 + 2080))(v15, v13, v14);
          if (v15[2] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v15 + 16))(v15);
          else
            --v15[2];
        }
        return 10;
      }
    }
  }
}

uint64_t WebCore::jsOESDrawBuffersIndexedPrototypeFunction_disableiOES(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD *v15;
  JSValue v17;
  JSC::VM *v18;
  _DWORD v19[2];
  _DWORD v20[2];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v18 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v18, "OESDrawBuffersIndexed", "disableiOES");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOESDrawBuffersIndexed::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOESDrawBuffersIndexed::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v18, "OESDrawBuffersIndexed", "disableiOES");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v17.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v17);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v20);
    if (v20[1])
    {
      return 0;
    }
    else
    {
      WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v19);
      if (v19[1])
      {
        return 0;
      }
      else
      {
        v13 = v20[0];
        v14 = v19[0];
        if (*(_QWORD *)(v12 + 16))
        {
          v15 = *(_DWORD **)(*(_QWORD *)(v12 + 16) + 88);
          if (v15)
            ++v15[2];
          (*(void (**)(_DWORD *, uint64_t, uint64_t))(*(_QWORD *)v15 + 2088))(v15, v13, v14);
          if (v15[2] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v15 + 16))(v15);
          else
            --v15[2];
        }
        return 10;
      }
    }
  }
}

uint64_t WebCore::jsOESDrawBuffersIndexedPrototypeFunction_blendEquationiOES(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD *v15;
  JSValue v17;
  JSC::VM *v18;
  _DWORD v19[2];
  _DWORD v20[2];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v18 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v18, "OESDrawBuffersIndexed", "blendEquationiOES");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOESDrawBuffersIndexed::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOESDrawBuffersIndexed::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v18, "OESDrawBuffersIndexed", "blendEquationiOES");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v17.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v17);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v20);
    if (v20[1])
    {
      return 0;
    }
    else
    {
      WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v19);
      if (v19[1])
      {
        return 0;
      }
      else
      {
        v13 = v20[0];
        v14 = v19[0];
        if (*(_QWORD *)(v12 + 16))
        {
          v15 = *(_DWORD **)(*(_QWORD *)(v12 + 16) + 88);
          if (v15)
            ++v15[2];
          (*(void (**)(_DWORD *, uint64_t, uint64_t))(*(_QWORD *)v15 + 2096))(v15, v13, v14);
          if (v15[2] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v15 + 16))(v15);
          else
            --v15[2];
        }
        return 10;
      }
    }
  }
}

uint64_t WebCore::jsOESDrawBuffersIndexedPrototypeFunction_blendEquationSeparateiOES(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  JSValue v18;
  JSC::VM *v19;
  _DWORD v20[2];
  _DWORD v21[2];
  _DWORD v22[2];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v19 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v19, "OESDrawBuffersIndexed", "blendEquationSeparateiOES");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOESDrawBuffersIndexed::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOESDrawBuffersIndexed::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v19, "OESDrawBuffersIndexed", "blendEquationSeparateiOES");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v18);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v22);
    if (v22[1])
    {
      return 0;
    }
    else
    {
      WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v21);
      if (v21[1])
      {
        return 0;
      }
      else
      {
        WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 8), v20);
        if (v20[1])
        {
          return 0;
        }
        else
        {
          v13 = v22[0];
          v14 = v21[0];
          v15 = v20[0];
          if (*(_QWORD *)(v12 + 16))
          {
            v16 = *(_DWORD **)(*(_QWORD *)(v12 + 16) + 88);
            if (v16)
              ++v16[2];
            (*(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v16 + 2104))(v16, v13, v14, v15);
            if (v16[2] == 1)
              (*(void (**)(_DWORD *))(*(_QWORD *)v16 + 16))(v16);
            else
              --v16[2];
          }
          return 10;
        }
      }
    }
  }
}

uint64_t WebCore::jsOESDrawBuffersIndexedPrototypeFunction_blendFunciOES(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  JSValue v18;
  JSC::VM *v19;
  _DWORD v20[2];
  _DWORD v21[2];
  _DWORD v22[2];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v19 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v19, "OESDrawBuffersIndexed", "blendFunciOES");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOESDrawBuffersIndexed::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOESDrawBuffersIndexed::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v19, "OESDrawBuffersIndexed", "blendFunciOES");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v18);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v22);
    if (v22[1])
    {
      return 0;
    }
    else
    {
      WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v21);
      if (v21[1])
      {
        return 0;
      }
      else
      {
        WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 8), v20);
        if (v20[1])
        {
          return 0;
        }
        else
        {
          v13 = v22[0];
          v14 = v21[0];
          v15 = v20[0];
          if (*(_QWORD *)(v12 + 16))
          {
            v16 = *(_DWORD **)(*(_QWORD *)(v12 + 16) + 88);
            if (v16)
              ++v16[2];
            (*(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v16 + 2112))(v16, v13, v14, v15);
            if (v16[2] == 1)
              (*(void (**)(_DWORD *))(*(_QWORD *)v16 + 16))(v16);
            else
              --v16[2];
          }
          return 10;
        }
      }
    }
  }
}

uint64_t WebCore::jsOESDrawBuffersIndexedPrototypeFunction_blendFuncSeparateiOES(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v18;
  JSValue v20;
  JSC::VM *v21;
  _DWORD v22[2];
  _DWORD v23[2];
  _DWORD v24[2];
  _DWORD v25[2];
  _DWORD v26[2];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v21 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v21, "OESDrawBuffersIndexed", "blendFuncSeparateiOES");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOESDrawBuffersIndexed::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOESDrawBuffersIndexed::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v21, "OESDrawBuffersIndexed", "blendFuncSeparateiOES");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 4)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v20);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v26);
    if (v26[1])
    {
      return 0;
    }
    else
    {
      WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v25);
      if (v25[1])
      {
        return 0;
      }
      else
      {
        WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 8), v24);
        if (v24[1])
        {
          return 0;
        }
        else
        {
          WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 9), v23);
          if (v23[1])
          {
            return 0;
          }
          else
          {
            WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 10), v22);
            if (v22[1])
            {
              return 0;
            }
            else
            {
              v13 = v26[0];
              v14 = v25[0];
              v15 = v24[0];
              v16 = v23[0];
              v17 = v22[0];
              if (*(_QWORD *)(v12 + 16))
              {
                v18 = *(_DWORD **)(*(_QWORD *)(v12 + 16) + 88);
                if (v18)
                  ++v18[2];
                (*(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v18 + 2120))(v18, v13, v14, v15, v16, v17);
                if (v18[2] == 1)
                  (*(void (**)(_DWORD *))(*(_QWORD *)v18 + 16))(v18);
                else
                  --v18[2];
              }
              return 10;
            }
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsOESDrawBuffersIndexedPrototypeFunction_colorMaskiOES(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  unint64_t v12;
  JSC::VM *v13;
  double v14;
  BOOL v15;
  unint64_t v16;
  BOOL v17;
  unint64_t v18;
  BOOL v19;
  unint64_t v20;
  double v21;
  BOOL v22;
  uint64_t v23;
  _DWORD *v24;
  JSValue v26;
  BOOL v27;
  BOOL v28;
  BOOL v29;
  char hasExceptionsAfterHandlingTraps;
  BOOL v31;
  int v32;
  uint64_t v33;
  int *v34;
  int v35;
  BOOL v36;
  int v37;
  uint64_t v38;
  int *v39;
  int v40;
  BOOL v41;
  int v42;
  uint64_t v43;
  int *v44;
  int v45;
  BOOL v46;
  int v47;
  uint64_t v48;
  int *v49;
  int v50;
  BOOL v51;
  uint64_t v52;
  JSC::VM *v53;
  _DWORD v54[2];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v53 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v53, "OESDrawBuffersIndexed", "colorMaskiOES");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOESDrawBuffersIndexed::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOESDrawBuffersIndexed::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v53, "OESDrawBuffersIndexed", "colorMaskiOES");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 4)
  {
    v26.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v26);
  }
  v52 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v54);
  if (v54[1])
    return 0;
  v12 = *((_QWORD *)a2 + 7);
  v13 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v12 >= 0xFFFE000000000000)
  {
    v31 = (_DWORD)v12 == 0;
    goto LABEL_113;
  }
  *(_QWORD *)&v14 = v12 - 0x2000000000000;
  if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v12 & 0xFFFE000000000002) != 0)
    {
      v15 = v12 == 7;
      goto LABEL_18;
    }
    v32 = *(unsigned __int8 *)(v12 + 5);
    if (v32 == 3)
    {
      v35 = *(_DWORD *)(v12 + 8);
    }
    else
    {
      if (v32 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v15 = 1;
          goto LABEL_18;
        }
        v31 = *(_QWORD *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
        goto LABEL_113;
      }
      v33 = *(_QWORD *)(v12 + 8);
      if ((v33 & 1) != 0)
        v34 = (int *)(v12 + 16);
      else
        v34 = (int *)(v33 + 4);
      v35 = *v34;
    }
    v31 = v35 == 0;
LABEL_113:
    v15 = !v31;
    goto LABEL_18;
  }
  v15 = v14 > 0.0 || v14 < 0.0;
LABEL_18:
  if (*((_DWORD *)v13 + 20))
  {
    v27 = v15;
    if ((JSC::VM::hasExceptionsAfterHandlingTraps(v13) & 1) != 0)
      return 0;
    v13 = (JSC::VM *)*((_QWORD *)this + 7);
    v15 = v27;
  }
  v16 = *((_QWORD *)a2 + 8);
  if (v16 >= 0xFFFE000000000000)
  {
    v36 = (_DWORD)v16 == 0;
    goto LABEL_117;
  }
  if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v16 & 0xFFFE000000000002) != 0)
    {
      v17 = v16 == 7;
      goto LABEL_23;
    }
    v37 = *(unsigned __int8 *)(v16 + 5);
    if (v37 == 3)
    {
      v40 = *(_DWORD *)(v16 + 8);
    }
    else
    {
      if (v37 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v17 = 1;
          goto LABEL_23;
        }
        v36 = *(_QWORD *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
        goto LABEL_117;
      }
      v38 = *(_QWORD *)(v16 + 8);
      if ((v38 & 1) != 0)
        v39 = (int *)(v16 + 16);
      else
        v39 = (int *)(v38 + 4);
      v40 = *v39;
    }
    v36 = v40 == 0;
LABEL_117:
    v17 = !v36;
    goto LABEL_23;
  }
  v17 = COERCE_DOUBLE(v16 - 0x2000000000000) > 0.0 || COERCE_DOUBLE(v16 - 0x2000000000000) < 0.0;
LABEL_23:
  if (*((_DWORD *)v13 + 20))
  {
    v28 = v15;
    if ((JSC::VM::hasExceptionsAfterHandlingTraps(v13) & 1) != 0)
      return 0;
    v13 = (JSC::VM *)*((_QWORD *)this + 7);
    v15 = v28;
  }
  v18 = *((_QWORD *)a2 + 9);
  if (v18 >= 0xFFFE000000000000)
  {
    v41 = (_DWORD)v18 == 0;
    goto LABEL_121;
  }
  if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v18 & 0xFFFE000000000002) != 0)
    {
      v19 = v18 == 7;
      goto LABEL_28;
    }
    v42 = *(unsigned __int8 *)(v18 + 5);
    if (v42 == 3)
    {
      v45 = *(_DWORD *)(v18 + 8);
    }
    else
    {
      if (v42 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v19 = 1;
          goto LABEL_28;
        }
        v41 = *(_QWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
        goto LABEL_121;
      }
      v43 = *(_QWORD *)(v18 + 8);
      if ((v43 & 1) != 0)
        v44 = (int *)(v18 + 16);
      else
        v44 = (int *)(v43 + 4);
      v45 = *v44;
    }
    v41 = v45 == 0;
LABEL_121:
    v19 = !v41;
    goto LABEL_28;
  }
  v19 = COERCE_DOUBLE(v18 - 0x2000000000000) > 0.0 || COERCE_DOUBLE(v18 - 0x2000000000000) < 0.0;
LABEL_28:
  if (*((_DWORD *)v13 + 20))
  {
    v51 = v15;
    if ((JSC::VM::hasExceptionsAfterHandlingTraps(v13) & 1) != 0)
      return 0;
    v13 = (JSC::VM *)*((_QWORD *)this + 7);
    v15 = v51;
  }
  v20 = *((_QWORD *)a2 + 10);
  if (v20 >= 0xFFFE000000000000)
  {
    v46 = (_DWORD)v20 == 0;
    goto LABEL_125;
  }
  *(_QWORD *)&v21 = v20 - 0x2000000000000;
  if (v20 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
  {
    if (v21 <= 0.0)
    {
      v22 = v21 < 0.0;
      goto LABEL_33;
    }
    goto LABEL_111;
  }
  if ((v20 & 0xFFFE000000000002) != 0)
  {
    v22 = v20 == 7;
    goto LABEL_33;
  }
  v47 = *(unsigned __int8 *)(v20 + 5);
  if (v47 == 3)
  {
    v50 = *(_DWORD *)(v20 + 8);
LABEL_109:
    v46 = v50 == 0;
    goto LABEL_125;
  }
  if (v47 == 2)
  {
    v48 = *(_QWORD *)(v20 + 8);
    if ((v48 & 1) != 0)
      v49 = (int *)(v20 + 16);
    else
      v49 = (int *)(v48 + 4);
    v50 = *v49;
    goto LABEL_109;
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE) + 0xA) & 1) == 0)
  {
LABEL_111:
    v22 = 1;
    goto LABEL_33;
  }
  v46 = *(_QWORD *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_125:
  v22 = !v46;
LABEL_33:
  if (*((_DWORD *)v13 + 20))
  {
    v29 = v15;
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v13);
    v15 = v29;
    if ((hasExceptionsAfterHandlingTraps & 1) != 0)
      return 0;
  }
  if (*(_QWORD *)(v52 + 16))
  {
    v23 = *(_QWORD *)(v52 + 16);
    if (!v54[0])
    {
      *(_BYTE *)(v23 + 416) = v15;
      *(_BYTE *)(v23 + 417) = v17;
      *(_BYTE *)(v23 + 418) = v19;
      *(_BYTE *)(v23 + 419) = v22;
    }
    v24 = *(_DWORD **)(v23 + 88);
    if (v24)
      ++v24[2];
    (*(void (**)(_DWORD *))(*(_QWORD *)v24 + 2128))(v24);
    if (v24[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v24 + 16))(v24);
    else
      --v24[2];
  }
  return 10;
}

unint64_t WebCore::jsOESVertexArrayObjectPrototypeFunction_createVertexArrayOES(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  WTF::StringImpl *v14;
  uint64_t v16;
  WTF::StringImpl *v17;

  v4 = *((_QWORD *)a2 + 5);
  v16 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "OESVertexArrayObject", "createVertexArrayOES");
  v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v6 = *(unsigned int *)(v5 + 0x4C);
  v7 = *(_DWORD *)(v5 + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSOESVertexArrayObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSOESVertexArrayObject::s_info && v8 != 0);
  }
  if (!v7)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "OESVertexArrayObject", "createVertexArrayOES");
  v11 = *(_QWORD *)(v4 + 24);
  v12 = *(_QWORD *)(v5 + 40);
  if (!*(_QWORD *)(v11 + 16))
    return 2;
  WebCore::WebGLVertexArrayObjectOES::createUser(*(WebCore::WebGLVertexArrayObjectOES **)(v11 + 16), a2, (unsigned int **)&v17);
  if (!v17)
    return 2;
  v13 = WebCore::wrap<WebCore::WebGLVertexArrayObjectOES>((uint64_t)this, v12, v17);
  v14 = v17;
  v17 = 0;
  if (v14)
  {
    if (*((_DWORD *)v14 + 2) == 1)
      (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v14 + 8))(v14);
    else
      --*((_DWORD *)v14 + 2);
  }
  return v13;
}

uint64_t WebCore::jsOESVertexArrayObjectPrototypeFunction_deleteVertexArrayOES(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  char **v12;
  BOOL v13;
  WTF::StringImpl *v15;
  uint64_t v16;
  WebCore::WebGLVertexArrayObjectOES *v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v24;
  uint64_t v25;

  v8 = *((_QWORD *)this + 7);
  v24 = v8;
  v9 = *((_QWORD *)a2 + 5);
  if ((v9 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v24, "OESVertexArrayObject", "deleteVertexArrayOES");
  v10 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSOESVertexArrayObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSOESVertexArrayObject::s_info && v12 != 0);
  }
  if (!v11)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v24, "OESVertexArrayObject", "deleteVertexArrayOES");
  v15 = *(WTF::StringImpl **)(v9 + 24);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v17 = 0;
  }
  else
  {
    v16 = *((_QWORD *)a2 + 6);
    if ((v16 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v17 = 0;
    }
    else
    {
      v25 = v8;
      if ((v16 & 0xFFFE000000000002) != 0)
        goto LABEL_27;
      v18 = *(unsigned int *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x4C);
      v19 = *(_DWORD *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x4C) != 0;
      v20 = (char **)(16 * v18);
      if ((_DWORD)v18)
        v21 = v20 == &WebCore::JSWebGLVertexArrayObjectOES::s_info;
      else
        v21 = 1;
      if (!v21)
      {
        do
        {
          v20 = (char **)v20[2];
          v19 = v20 != 0;
        }
        while (v20 != &WebCore::JSWebGLVertexArrayObjectOES::s_info && v20 != 0);
      }
      if (!v19 || (v17 = *(WebCore::WebGLVertexArrayObjectOES **)(v16 + 24)) == 0)
      {
LABEL_27:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v25, 0, "arrayObject", 12, "OESVertexArrayObject", 21, a8, "deleteVertexArrayOES", 21, "WebGLVertexArrayObjectOES", 26);
        return 0;
      }
    }
  }
  WebCore::OESVertexArrayObject::deleteVertexArrayOES(v15, v17);
  return 10;
}

uint64_t WebCore::jsOESVertexArrayObjectPrototypeFunction_isVertexArrayOES(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  char **v12;
  BOOL v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _DWORD *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;

  v8 = *((_QWORD *)this + 7);
  v30 = v8;
  v9 = *((_QWORD *)a2 + 5);
  if ((v9 & 0xFFFE000000000002) == 0)
  {
    v10 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
    v11 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
    v12 = (char **)(16 * v10);
    if ((_DWORD)v10)
      v13 = v12 == &WebCore::JSOESVertexArrayObject::s_info;
    else
      v13 = 1;
    if (!v13)
    {
      do
      {
        v12 = (char **)v12[2];
        v11 = v12 != 0;
      }
      while (v12 != &WebCore::JSOESVertexArrayObject::s_info && v12 != 0);
    }
    if (v11)
    {
      v15 = *(_QWORD *)(v9 + 24);
      if (*((_DWORD *)a2 + 8) == 1)
      {
        v17 = 0;
      }
      else
      {
        v16 = *((_QWORD *)a2 + 6);
        if ((v16 & 0xFFFFFFFFFFFFFFF7) == 2)
        {
          v17 = 0;
        }
        else
        {
          v31 = v8;
          if ((v16 & 0xFFFE000000000002) != 0)
            goto LABEL_27;
          v18 = *(unsigned int *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x4C);
          v19 = *(_DWORD *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x4C) != 0;
          v20 = (char **)(16 * v18);
          if ((_DWORD)v18)
            v21 = v20 == &WebCore::JSWebGLVertexArrayObjectOES::s_info;
          else
            v21 = 1;
          if (!v21)
          {
            do
            {
              v20 = (char **)v20[2];
              v19 = v20 != 0;
            }
            while (v20 != &WebCore::JSWebGLVertexArrayObjectOES::s_info && v20 != 0);
          }
          if (!v19 || (v17 = *(_QWORD *)(v16 + 24)) == 0)
          {
LABEL_27:
            WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v31, 0, "arrayObject", 12, "OESVertexArrayObject", 21, a8, "isVertexArrayOES", 17, "WebGLVertexArrayObjectOES", 26);
            return 0;
          }
        }
      }
      if (*(_QWORD *)(v15 + 16))
      {
        v24 = *(_QWORD *)(v15 + 16);
        if (v17)
        {
          v25 = *(_QWORD *)(v17 + 16);
          if (v25)
          {
            v26 = *(_QWORD *)(v25 + 8);
            if (v26)
              v25 = v26 - 8;
            else
              v25 = 0;
          }
          if (v25 == v24 && *(_DWORD *)(v17 + 24) && !*(_BYTE *)(v17 + 32) && *(_BYTE *)(v17 + 40))
          {
            v27 = *(_DWORD **)(v24 + 88);
            if (v27)
              ++v27[2];
            v28 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)v27 + 1224))(v27);
            v29 = v28;
            if (v27[2] == 1)
            {
              (*(void (**)(_DWORD *))(*(_QWORD *)v27 + 16))(v27);
              if (v29)
                return 7;
            }
            else
            {
              --v27[2];
              if (v28)
                return 7;
            }
          }
        }
      }
      return 6;
    }
  }
  return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v30, "OESVertexArrayObject", "isVertexArrayOES");
}

uint64_t WebCore::jsOESVertexArrayObjectPrototypeFunction_bindVertexArrayOES(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  char **v12;
  BOOL v13;
  WTF::StringImpl *v15;
  uint64_t v16;
  WebCore::WebGLVertexArrayObjectOES *v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v24;
  uint64_t v25;

  v8 = *((_QWORD *)this + 7);
  v24 = v8;
  v9 = *((_QWORD *)a2 + 5);
  if ((v9 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v24, "OESVertexArrayObject", "bindVertexArrayOES");
  v10 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSOESVertexArrayObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSOESVertexArrayObject::s_info && v12 != 0);
  }
  if (!v11)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v24, "OESVertexArrayObject", "bindVertexArrayOES");
  v15 = *(WTF::StringImpl **)(v9 + 24);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v17 = 0;
  }
  else
  {
    v16 = *((_QWORD *)a2 + 6);
    if ((v16 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v17 = 0;
    }
    else
    {
      v25 = v8;
      if ((v16 & 0xFFFE000000000002) != 0)
        goto LABEL_27;
      v18 = *(unsigned int *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x4C);
      v19 = *(_DWORD *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x4C) != 0;
      v20 = (char **)(16 * v18);
      if ((_DWORD)v18)
        v21 = v20 == &WebCore::JSWebGLVertexArrayObjectOES::s_info;
      else
        v21 = 1;
      if (!v21)
      {
        do
        {
          v20 = (char **)v20[2];
          v19 = v20 != 0;
        }
        while (v20 != &WebCore::JSWebGLVertexArrayObjectOES::s_info && v20 != 0);
      }
      if (!v19 || (v17 = *(WebCore::WebGLVertexArrayObjectOES **)(v16 + 24)) == 0)
      {
LABEL_27:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v25, 0, "arrayObject", 12, "OESVertexArrayObject", 21, a8, "bindVertexArrayOES", 19, "WebGLVertexArrayObjectOES", 26);
        return 0;
      }
    }
  }
  WebCore::OESVertexArrayObject::bindVertexArrayOES(v15, v17);
  return 10;
}

WTF **_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore31OfflineAudioCompletionEventInitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, _QWORD *a2)
{
  WTF **result;

  result = (WTF **)a2[1];
  a2[1] = 0;
  if (result)
    return WTF::RefCounted<WebCore::AudioBuffer>::deref(result, a2);
  return result;
}

JSCell *WebCore::setSubclassStructureIfNeeded<WebCore::OfflineAudioContext>(JSC *a1, uint64_t a2, JSCell *a3)
{
  JSCell *result;
  JSC::JSObject *v7;
  JSC::JSGlobalObject *v9;
  JSC::VM *v10;
  uint64_t FunctionRealm;
  JSC::JSObject *v12;
  JSC::Structure *v13;
  JSC::VM *v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  JSC::JSCell *v23;
  unint64_t Structure;
  JSC::Structure *v25;
  JSC::JSCell *v26;
  uint64_t v27;
  unint64_t SubclassStructure;

  result = *(JSCell **)(a2 + 40);
  if (((unint64_t)result & 0xFFFE000000000002) == 0)
  {
    result = (JSCell *)JSC::JSCell::getObject((JSC::JSCell *)result);
    if (result && result != *(JSCell **)(a2 + 24))
    {
      v9 = (JSC::JSGlobalObject *)result;
      v10 = (JSC::VM *)*((_QWORD *)a1 + 7);
      FunctionRealm = JSC::getFunctionRealm(a1, (JSC::JSGlobalObject *)result, v7);
      v14 = (JSC::VM *)FunctionRealm;
      if (!*((_DWORD *)v10 + 20)
        || (result = (JSCell *)JSC::VM::hasExceptionsAfterHandlingTraps(v10), (result & 1) == 0))
      {
        v15 = *((_QWORD *)v14 + 412);
        if (v15)
        {
          v16 = *(_DWORD *)(v15 - 8);
          v17 = ((unint64_t)&WebCore::JSOfflineAudioContext::s_info
               + ~((_QWORD)&WebCore::JSOfflineAudioContext::s_info << 32)) ^ (((unint64_t)&WebCore::JSOfflineAudioContext::s_info
                                                                             + ~((_QWORD)&WebCore::JSOfflineAudioContext::s_info << 32)) >> 22);
          v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
          v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
          v20 = v16 & ((v19 >> 31) ^ v19);
          v21 = *(char ***)(v15 + 16 * v20);
          if (v21 == &WebCore::JSOfflineAudioContext::s_info)
          {
LABEL_14:
            v12 = *(JSC::JSObject **)(v15 + 16 * v20 + 8);
            if (v12)
            {
LABEL_16:
              SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v9, v12, v13);
              if (!*((_DWORD *)v10 + 20))
                return JSC::JSObject::setStructure(a3, v10, SubclassStructure);
              result = (JSCell *)JSC::VM::hasExceptionsAfterHandlingTraps(v10);
              if ((result & 1) == 0)
                return JSC::JSObject::setStructure(a3, v10, SubclassStructure);
              return result;
            }
          }
          else
          {
            v22 = 1;
            while (v21)
            {
              v20 = ((_DWORD)v20 + v22) & v16;
              v21 = *(char ***)(v15 + 16 * v20);
              ++v22;
              if (v21 == &WebCore::JSOfflineAudioContext::s_info)
                goto LABEL_14;
            }
          }
        }
        v23 = (JSC::JSCell *)WebCore::JSBaseAudioContext::prototype(v10, v14, v12);
        Structure = WebCore::JSOfflineAudioContextPrototype::createStructure((uint64_t *)v10, (uint64_t)v14, v23);
        *(_DWORD *)(Structure + 16) |= 0x80000u;
        v26 = (JSC::JSCell *)WebCore::JSOfflineAudioContextPrototype::create(v10, v14, Structure, v25);
        v27 = WebCore::JSOfflineAudioContext::createStructure((uint64_t *)v10, (uint64_t)v14, v26);
        v12 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)v14, v27, (uint64_t)&WebCore::JSOfflineAudioContext::s_info);
        goto LABEL_16;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSOfflineAudioContext::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore19OfflineAudioContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    v3 = result + 6;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      atomic_store(1u, result + 6);
      return (unsigned int *)(*(uint64_t (**)(unsigned int *))(*(_QWORD *)result + 16))(result);
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore19OfflineAudioContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

unint64_t WebCore::jsOfflineAudioContextPrototypeFunction_startRendering(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  objc_class *v25;
  WebCore::DOMGuardedObject *v26;
  WebCore::DOMGuardedObject *v27;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D9B488);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v27 = v15;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_32;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSOfflineAudioContext::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSOfflineAudioContext::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_32:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"OfflineAudioContext", "startRendering", v16);
    v27 = 0;
  }
  else
  {
    WebCore::OfflineAudioContext::startRendering((WebCore::OfflineAudioContext *)(*(_QWORD *)(v17 + 24) - 32), (uint64_t *)&v27);
    v14 = v27;
    v27 = 0;
    if (!v14)
      goto LABEL_28;
  }
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_28:
  v23 = *(_QWORD *)(v10 + 16);
  if (v23)
  {
    if (*(_QWORD *)(v10 + 24) != v23)
    {
      v25 = *(objc_class **)(v23 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v27);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v27, v25, 0);
      v26 = v27;
      v27 = 0;
      if (v26)
      {
        if (*((_DWORD *)v26 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v26 + 16))(v26);
        else
          --*((_DWORD *)v26 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsOfflineAudioContextPrototypeFunction_resume(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  objc_class *v25;
  WebCore::DOMGuardedObject *v26;
  WebCore::DOMGuardedObject *v27;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D9B6D4);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v27 = v15;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_32;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSOfflineAudioContext::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSOfflineAudioContext::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_32:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"OfflineAudioContext", "resume", v16);
    v27 = 0;
  }
  else
  {
    WebCore::OfflineAudioContext::resumeRendering(*(_QWORD *)(v17 + 24) - 32, (uint64_t *)&v27);
    v14 = v27;
    v27 = 0;
    if (!v14)
      goto LABEL_28;
  }
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_28:
  v23 = *(_QWORD *)(v10 + 16);
  if (v23)
  {
    if (*(_QWORD *)(v10 + 24) != v23)
    {
      v25 = *(objc_class **)(v23 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v27);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v27, v25, 0);
      v26 = v27;
      v27 = 0;
      if (v26)
      {
        if (*((_DWORD *)v26 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v26 + 16))(v26);
        else
          --*((_DWORD *)v26 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsOfflineAudioContextPrototypeFunction_suspend(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  JSC::VM *v24;
  uint64_t v25;
  WebCore::DOMGuardedObject *v26;
  double v27;
  uint64_t v28;
  JSValue v30;
  objc_class *v31;
  WebCore::DOMGuardedObject *v32;
  double v33;
  uint64_t v34[2];
  WebCore::DOMGuardedObject *v35;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D9B98CLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v34[0] = (uint64_t)v15;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_40;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSOfflineAudioContext::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSOfflineAudioContext::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_40:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"OfflineAudioContext", "suspend", v17);
LABEL_43:
    v34[0] = 0;
LABEL_33:
    if (*((_DWORD *)v14 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
    else
      --*((_DWORD *)v14 + 4);
    goto LABEL_35;
  }
  v24 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v30.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v24, this, v30);
    goto LABEL_43;
  }
  v25 = *(_QWORD *)(v18 + 24);
  v26 = (WebCore::DOMGuardedObject *)*((_QWORD *)a2 + 6);
  v34[1] = *((_QWORD *)this + 7);
  v35 = v26;
  if ((unint64_t)v26 >= 0xFFFE000000000000)
  {
    v27 = (double)(int)v26;
  }
  else if ((unint64_t)v26 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v35, this);
    v27 = v33;
  }
  else
  {
    *(_QWORD *)&v27 = (char *)v26 - 0x2000000000000;
  }
  if (!*((_DWORD *)v24 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v24) & 1) == 0)
  {
    if ((*(_QWORD *)&v27 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
      JSC::throwTypeError();
    else
      WebCore::OfflineAudioContext::suspendRendering(v25 - 32, v34, v27);
  }
  v14 = (WebCore::DOMGuardedObject *)v34[0];
  v34[0] = 0;
  if (v14)
    goto LABEL_33;
LABEL_35:
  v28 = *(_QWORD *)(v10 + 16);
  if (v28)
  {
    if (*(_QWORD *)(v10 + 24) != v28)
    {
      v31 = *(objc_class **)(v28 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v35);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v35, v31, 0);
      v32 = v35;
      v35 = 0;
      if (v32)
      {
        if (*((_DWORD *)v32 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v32 + 16))(v32);
        else
          --*((_DWORD *)v32 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

_BYTE *WebCore::jsOffscreenCanvasPrototypeFunction_getContext(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  WebCore **v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  WebCore *v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  int v21;
  unint64_t v22;
  int v24;
  unint64_t i;
  char **v26;
  uint64_t v27;
  void *v28;
  int v29;
  unint64_t v30;
  uint64_t v31;
  const char *v32;
  int v33;
  WTF *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint16x8_t v44;
  uint16x8_t v45;
  JSValue v47;
  WTF::StringImpl *v48;
  int v49;
  void *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  JSC::VM *v59;
  void *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  int v71;
  WebCore **v74;
  WebCore *v75;
  JSC::VM *v76;
  WTF *v77;
  JSC::VM *v78;
  uint64_t v79;
  WTF::StringImpl *v80;
  char v81;
  JSC::VM *v82;
  int v83;
  char v84;
  WebCore *v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t *v88;
  int v89;
  uint64_t v90;

  v90 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v76 = v9;
  v10 = (WebCore **)*((_QWORD *)a2 + 5);
  if (((unint64_t)v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v76, "OffscreenCanvas", "getContext");
  v11 = (uint64_t)a2;
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSOffscreenCanvas::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSOffscreenCanvas::s_info && v14 != 0);
  }
  if (!v13)
    return WebCore::throwThisTypeError((int)this, (int)&v76, "OffscreenCanvas", "getContext");
  v78 = v9;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v47.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v47);
  }
  v17 = v10[3];
  v18 = *((_QWORD *)a2 + 6);
  v82 = v9;
  v85 = (WebCore *)v18;
  if ((v18 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v18 + 5) == 2)
  {
    v19 = *(_QWORD *)(v18 + 8);
    if ((v19 & 1) != 0)
    {
      v19 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v18, this);
      if (!v19)
      {
LABEL_18:
        v79 = v19;
        if (v19)
          goto LABEL_19;
LABEL_90:
        i = 0;
        goto LABEL_35;
      }
    }
    else if (!v19)
    {
      goto LABEL_18;
    }
    *(_DWORD *)v19 += 2;
    goto LABEL_18;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v85, this);
  v19 = v79;
  if (!v79)
    goto LABEL_90;
LABEL_19:
  v20 = *(const char **)(v19 + 8);
  v21 = *(_DWORD *)(v19 + 4);
  v22 = ((unint64_t)*(unsigned int *)(v19 + 16) >> 2) & 1;
  if (v20 != "2d" && v21 == 2)
  {
    if ((_DWORD)v22)
    {
      if (*v20 != 50)
        goto LABEL_28;
      v24 = *((unsigned __int8 *)v20 + 1);
    }
    else
    {
      if (*(_WORD *)v20 != 50)
        goto LABEL_28;
      v24 = *((unsigned __int16 *)v20 + 1);
    }
    if (v24 != 100)
      goto LABEL_28;
LABEL_31:
    v26 = &WebCore::parseEnumerationFromString<WebCore::OffscreenCanvas::RenderingContextType>(WTF::String const&)::mappings;
    goto LABEL_32;
  }
  if (v20 == "2d" && v21 == 2)
    goto LABEL_31;
  v32 = "bitmaprenderer";
  if (v20 == "bitmaprenderer" || v21 != 14)
    goto LABEL_139;
  if ((_DWORD)v22)
  {
    if (*v20 == 98 && *(_QWORD *)(v20 + 1) == 0x6E657270616D7469 && *(_QWORD *)(v20 + 6) == 0x72657265646E6572)
      goto LABEL_53;
  }
  else if (*(_WORD *)v20 == 98)
  {
    v44 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v20 + 2), (int16x8_t)xmmword_1968C0480);
    v44.i16[0] = vminvq_u16(v44);
    if (v44.i32[0])
    {
      v45 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v20 + 12), (int16x8_t)xmmword_1968C0490);
      v45.i16[0] = vminvq_u16(v45);
      if (v45.i32[0])
        goto LABEL_53;
    }
  }
LABEL_28:
  for (i = 0; ; i = *((unsigned int *)v26 + 4) | 0x100000000)
  {
    v79 = 0;
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy((WTF::StringImpl *)v19, a2);
    else
      *(_DWORD *)v19 -= 2;
LABEL_35:
    if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
      return 0;
    if (!HIDWORD(i))
      break;
    v79 = 1;
    v82 = (JSC::VM *)*((_QWORD *)this + 7);
    v27 = *(int *)(v11 + 32);
    if ((unint64_t)(v27 - 3) >= 0xFFFFFFFFFFFFFFFELL)
    {
      v77 = 0;
      goto LABEL_39;
    }
    v74 = v10;
    v75 = v17;
    v49 = v27 - 2;
    v85 = this;
    v86 = v11;
    v87 = &v79;
    v88 = (uint64_t *)&v82;
    v11 = WTF::fastMalloc((WTF *)(8 * (v27 - 2) + 8));
    v51 = *WTF::TrailingArray<WTF::EmbeddedFixedVector<JSC::Strong<JSC::Unknown,(JSC::ShouldStrongDestructorGrabLock)0>>,JSC::Strong<JSC::Unknown,(JSC::ShouldStrongDestructorGrabLock)0>>::TrailingArray<WTF::FixedVector<WebCore::VariadicConverter<WebCore::IDLAny>::Item> WebCore::convertVariadicArguments<WebCore::IDLAny>(JSC::JSGlobalObject &,JSC::CallFrame &,unsigned long)::{lambda(unsigned long)#1}>((_DWORD *)v11, v49, (uint64_t)&v85);
    if ((_DWORD)v51 != v49)
    {
      if ((_DWORD)v51)
      {
        v52 = (uint64_t *)(v11 + 8);
        v53 = 8 * v51;
        do
        {
          v54 = *v52;
          if (*v52)
          {
            v55 = (uint64_t *)(v54 - 16);
            v56 = *(_QWORD *)(((v54 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
            v57 = *(uint64_t **)(v54 - 8);
            if (v57)
            {
              v58 = *v55;
              *v57 = *v55;
              *(_QWORD *)(v58 + 8) = v57;
              *v55 = 0;
              v55[1] = 0;
            }
            *v55 = *(_QWORD *)(v56 + 40);
            *(_QWORD *)(v56 + 40) = v55;
            *v52 = 0;
          }
          ++v52;
          v53 -= 8;
        }
        while (v53);
      }
      WTF::fastFree((WTF *)v11, v50);
      v11 = 0;
    }
    v59 = v82;
    if (!*((_DWORD *)v82 + 20))
    {
LABEL_124:
      v77 = (WTF *)v11;
LABEL_125:
      v10 = v74;
      v17 = v75;
      goto LABEL_39;
    }
    while (1)
    {
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v59) & 1) == 0)
        goto LABEL_124;
      v77 = 0;
      v10 = v74;
      v17 = v75;
      if (v11)
      {
        v61 = (uint64_t *)(v11 + 8);
        v62 = *(unsigned int *)v11;
        if ((_DWORD)v62)
        {
          v63 = 8 * v62;
          do
          {
            v64 = *v61;
            if (*v61)
            {
              v65 = (uint64_t *)(v64 - 16);
              v66 = *(_QWORD *)(((v64 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
              v67 = *(uint64_t **)(v64 - 8);
              if (v67)
              {
                v68 = *v65;
                *v67 = *v65;
                *(_QWORD *)(v68 + 8) = v67;
                *v65 = 0;
                v65[1] = 0;
              }
              *v65 = *(_QWORD *)(v66 + 40);
              *(_QWORD *)(v66 + 40) = v65;
              *v61 = 0;
            }
            ++v61;
            v63 -= 8;
          }
          while (v63);
        }
        WTF::fastFree((WTF *)v11, v60);
        goto LABEL_125;
      }
LABEL_39:
      if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
      {
        v31 = 0;
        goto LABEL_79;
      }
      v9 = *(JSC::VM **)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
      v10 = &v85;
      WebCore::OffscreenCanvas::getContext(this, (uint64_t)v17 - 144, i, (uint64_t *)&v77, (uint64_t)&v85);
      if (v89)
        break;
      LOBYTE(v79) = 0;
      v81 = 0;
      if (!(_BYTE)v88)
      {
        v31 = 2;
        goto LABEL_77;
      }
      LODWORD(i) = -1;
      LODWORD(v80) = -1;
      v11 = v87;
      if ((_DWORD)v87 != -1)
      {
        ((void (*)(JSC::VM **, uint64_t *, uint64_t *))off_1E32C2430[v87])(&v82, &v79, &v86);
        LODWORD(v80) = v11;
        v81 = 1;
        LOBYTE(v82) = 0;
        v83 = -1;
        ((void (*)(char *, JSC::VM **, uint64_t *))off_1E32C2408[v11])(&v84, &v82, &v79);
        v83 = v11;
        v29 = v11;
        v11 = (uint64_t)off_1E32C23E0;
        switch(v29)
        {
          case 0:
            if (v82)
            {
              v30 = WebCore::wrap<WebCore::WebGLRenderingContext>((uint64_t)this, (uint64_t)v9, (uint64_t)v82);
              goto LABEL_62;
            }
            v33 = 0;
            goto LABEL_72;
          case 1:
            if (v82)
            {
              v30 = WebCore::wrap<WebCore::WebGL2RenderingContext>((uint64_t)this, (uint64_t)v9, (uint64_t)v82);
              goto LABEL_62;
            }
            v33 = 1;
            goto LABEL_72;
          case 2:
            if (v82)
            {
              v30 = WebCore::wrap<WebCore::GPUCanvasContext>((uint64_t)this, (uint64_t)v9, (uint64_t)v82);
              goto LABEL_62;
            }
            v31 = 2;
            v33 = 2;
            goto LABEL_73;
          case 3:
            if (v82)
            {
              v30 = WebCore::wrap<WebCore::ImageBitmapRenderingContext>((uint64_t)this, (uint64_t)v9, (uint64_t)v82);
              goto LABEL_62;
            }
            v33 = 3;
            goto LABEL_72;
          case 4:
            if (v82)
            {
              v30 = WebCore::wrap<WebCore::OffscreenCanvasRenderingContext2D>((uint64_t)this, (uint64_t)v9, (uint64_t)v82);
LABEL_62:
              v31 = v30;
              v33 = v83;
              if (v83 == -1)
              {
LABEL_74:
                if (v81 && (_DWORD)v80 != -1)
                  ((void (*)(JSC::VM **, uint64_t *))off_1E32C23E0[v80])(&v82, &v79);
LABEL_77:
                if (v89 != -1)
                  ((void (*)(uint64_t *, uint64_t *))off_1E32C2458[v89])(&v79, &v86);
LABEL_79:
                v34 = v77;
                v77 = 0;
                if (v34)
                {
                  v35 = (uint64_t *)((char *)v34 + 8);
                  v36 = *(unsigned int *)v34;
                  if ((_DWORD)v36)
                  {
                    v37 = 8 * v36;
                    do
                    {
                      v38 = *v35;
                      if (*v35)
                      {
                        v39 = (uint64_t *)(v38 - 16);
                        v40 = *(_QWORD *)(((v38 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
                        v41 = *(uint64_t **)(v38 - 8);
                        if (v41)
                        {
                          v42 = *v39;
                          *v41 = *v39;
                          *(_QWORD *)(v42 + 8) = v41;
                          *v39 = 0;
                          v39[1] = 0;
                        }
                        *v39 = *(_QWORD *)(v40 + 40);
                        *(_QWORD *)(v40 + 40) = v39;
                        *v35 = 0;
                      }
                      ++v35;
                      v37 -= 8;
                    }
                    while (v37);
                  }
                  WTF::fastFree(v34, v28);
                }
                return (_BYTE *)v31;
              }
            }
            else
            {
              v33 = 4;
LABEL_72:
              v31 = 2;
            }
LABEL_73:
            ((void (*)(char *, JSC::VM **))off_1E32C23E0[v33])(&v84, &v82);
            goto LABEL_74;
          default:
            goto LABEL_127;
        }
      }
      v81 = 1;
      LOBYTE(v82) = 0;
      v83 = -1;
LABEL_127:
      v59 = (JSC::VM *)std::__throw_bad_optional_access[abi:sn180100]();
    }
    if (v89 == 1)
    {
      LOBYTE(v79) = v86;
      v48 = (WTF::StringImpl *)v87;
      v87 = 0;
      v80 = v48;
      if (!*((_QWORD *)v78 + 2))
      {
        WebCore::propagateExceptionSlowPath(this, &v78, (unsigned __int8 *)&v79);
        v48 = v80;
      }
      v80 = 0;
      if (v48)
      {
        if (*(_DWORD *)v48 == 2)
          WTF::StringImpl::destroy(v48, (WTF::StringImpl *)v28);
        else
          *(_DWORD *)v48 -= 2;
      }
      v31 = 0;
      goto LABEL_77;
    }
    v19 = std::__throw_bad_variant_access[abi:sn180100]();
LABEL_139:
    if (v20 == v32 && v21 == 14)
    {
LABEL_53:
      v26 = &off_1E32BDE18;
      continue;
    }
    if (v20 != "webgl" && v21 == 5)
    {
      if ((_DWORD)v22)
      {
        if (*v20 == 119 && *(_WORD *)(v20 + 1) == 25189 && *(_WORD *)(v20 + 3) == 27751)
          goto LABEL_147;
        goto LABEL_28;
      }
      if (*(_WORD *)v20 != 119 || *(_QWORD *)(v20 + 2) != 0x6C006700620065)
        goto LABEL_28;
LABEL_147:
      v26 = &off_1E32BDE30;
      continue;
    }
    if (v20 == "webgl" && v21 == 5)
      goto LABEL_147;
    v69 = v22 << 32;
    v70 = v21 != 6;
    if (v20 == "webgl2" || v21 != 6)
    {
      v71 = v21;
      if (v20 == "webgl2" && v21 == 6)
      {
LABEL_166:
        v26 = &off_1E32BDE48;
        continue;
      }
    }
    else if ((_DWORD)v22)
    {
      if (*v20 == 119 && *(_DWORD *)(v20 + 1) == 1818714725 && *(_DWORD *)(v20 + 2) == 845965154)
        goto LABEL_166;
      v70 = 0;
      v71 = 6;
      v69 = 0x100000000;
    }
    else if (*(_WORD *)v20 == 119)
    {
      v70 = 0;
      v71 = 6;
      if (*(_QWORD *)(v20 + 2) == 0x6C006700620065 && *(_QWORD *)(v20 + 4) == 0x32006C00670062)
        goto LABEL_166;
    }
    else
    {
      v70 = 0;
      v71 = 6;
    }
    if (v20 == "webgpu" || v70)
    {
      if (v21 != 6 || v20 != "webgpu")
        goto LABEL_28;
    }
    else if (v71)
    {
      if ((v69 & 0x100000000) != 0)
      {
        if (*v20 != 119 || *(_DWORD *)(v20 + 1) != 1885823589 || *(_DWORD *)(v20 + 2) != 1970300770)
          goto LABEL_28;
      }
      else
      {
        if (*(_WORD *)v20 != 119)
          goto LABEL_28;
        if (*(_QWORD *)(v20 + 4) != 0x75007000670062 || *(_QWORD *)(v20 + 2) != 0x70006700620065)
          goto LABEL_28;
      }
    }
    v26 = &off_1E32BDE60;
LABEL_32:
    ;
  }
  WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)&v82, 0, "contextType", 12, "OffscreenCanvas", 16, a8, "getContext", 11, "\"2d\", \"webgl\", \"webgl2\", \"bitmaprenderer\", \"webgpu\"", 52);
  return 0;
}

_BYTE *WebCore::jsOffscreenCanvasPrototypeFunction_transferToImageBitmap(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  int v26;
  WTF::StringImpl *v27;
  uint64_t v28;
  WebCore *v29;
  JSC::JSGlobalObject *v30;
  JSC::CallFrame *v31;
  JSC::VM *v32;
  uint64_t v33;
  WTF::StringImpl *v34;
  int v35;
  JSC::VM *v36;
  unsigned __int8 v37[8];
  WTF::StringImpl *v38;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v32 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v32, "OffscreenCanvas", "transferToImageBitmap");
  v6 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v7 = *(unsigned int *)(v6 + 0x4C);
  v8 = *(_DWORD *)(v6 + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOffscreenCanvas::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOffscreenCanvas::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v32, "OffscreenCanvas", "transferToImageBitmap");
  v12 = *(_QWORD *)(v4 + 24);
  v36 = v5;
  v13 = *(_QWORD *)(v6 + 40);
  WebCore::OffscreenCanvas::transferToImageBitmap((_QWORD *)(v12 - 144), (uint64_t)&v33);
  if (!v35)
  {
    v15 = v33;
    v33 = 0;
    if (!v15)
    {
      v17 = 2;
LABEL_17:
      if (v35 != -1)
        ((void (*)(unsigned __int8 *, uint64_t *))off_1E32C2468[v35])(v37, &v33);
      return (_BYTE *)v17;
    }
    v17 = WebCore::wrap<WebCore::ImageBitmap>((uint64_t)this, v13, (WTF *)v15);
    if (*(_DWORD *)(v15 + 8) != 1)
    {
      --*(_DWORD *)(v15 + 8);
      goto LABEL_17;
    }
    v19 = *(_QWORD *)(v15 + 16);
    *(_QWORD *)(v15 + 16) = 0;
    if (!v19)
    {
LABEL_37:
      if (*(_QWORD *)v15)
      {
        *(_QWORD *)(*(_QWORD *)v15 + 8) = 3;
        *(_QWORD *)v15 = 0;
      }
      bmalloc::api::isoDeallocate((bmalloc::api *)v15, v16);
      goto LABEL_17;
    }
    v20 = *(_QWORD *)(v19 + 8);
    if (__ldaxr((unsigned __int8 *)v20))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v20))
    {
      goto LABEL_25;
    }
    MEMORY[0x19AEA534C](v20);
LABEL_25:
    v22 = *(_QWORD *)(v20 + 8);
    v23 = v22 - 1;
    *(_QWORD *)(v20 + 8) = v22 - 1;
    if (v22 == 1)
    {
      v28 = *(_QWORD *)(v20 + 16);
      v24 = *(_QWORD *)(v20 + 24);
      *(_QWORD *)(v20 + 24) = 0;
      v25 = v28 != 0;
    }
    else
    {
      v24 = 0;
      v25 = 1;
    }
    v26 = __ldxr((unsigned __int8 *)v20);
    if (v26 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v20))
      {
LABEL_32:
        if (!v23)
        {
          if (v24)
            (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
          if (!v25)
            WTF::fastFree((WTF *)v20, v16);
        }
        goto LABEL_37;
      }
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v20);
    goto LABEL_32;
  }
  if (v35 == 1)
  {
    v37[0] = v33;
    v27 = v34;
    v34 = 0;
    v38 = v27;
    if (!*((_QWORD *)v5 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v36, v37);
      v27 = v38;
    }
    v38 = 0;
    if (v27)
    {
      if (*(_DWORD *)v27 == 2)
        WTF::StringImpl::destroy(v27, v14);
      else
        *(_DWORD *)v27 -= 2;
    }
    v17 = 0;
    goto LABEL_17;
  }
  v29 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsOffscreenCanvasPrototypeFunction_convertToBlob(v29, v30, v31);
}

unint64_t WebCore::jsOffscreenCanvasPrototypeFunction_convertToBlob(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  JSC::JSCell *v24;
  JSC::VM *v25;
  uint64_t Object;
  JSC::Structure *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  double v31;
  JSC::VM *v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  uint64_t v35;
  JSC::VM *v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  int v39;
  int v40;
  int v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  uint64_t v46;
  objc_class *v48;
  WebCore::DOMGuardedObject *v49;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v51;
  double v52;
  uint64_t v53;
  WebCore::DOMGuardedObject *v54;
  WebCore::DOMGuardedObject *v55;
  double v56;
  int v57;
  WTF::StringImpl *v58;
  double v59;
  JSC::VM *v60;
  WTF::StringImpl *v61;
  WTF::StringImpl *v62;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194D9CBECLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v54 = v15;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) == 0)
  {
    v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v20 = (char **)(16 * v18);
    if ((_DWORD)v18)
      v21 = v20 == &WebCore::JSOffscreenCanvas::s_info;
    else
      v21 = 1;
    if (!v21)
    {
      do
      {
        v20 = (char **)v20[2];
        v19 = v20 != 0;
      }
      while (v20 != &WebCore::JSOffscreenCanvas::s_info && v20 != 0);
    }
    if (v19)
    {
      v23 = *(_QWORD *)(v17 + 24);
      if (*((_DWORD *)a2 + 8) == 1)
      {
        v60 = (JSC::VM *)*((_QWORD *)this + 7);
      }
      else
      {
        v24 = (JSC::JSCell *)*((_QWORD *)a2 + 6);
        v25 = (JSC::VM *)*((_QWORD *)this + 7);
        v60 = v25;
        if (((unint64_t)v24 & 0xFFFFFFFFFFFFFFF7) != 2)
        {
          if (((unint64_t)v24 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v24)) == 0)
          {
            JSC::throwTypeError();
            v41 = 1;
            v57 = 1;
            goto LABEL_68;
          }
          v27 = (JSC::Structure *)Object;
          v53 = v23;
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v28 = v58;
          WTF::AtomStringImpl::addLiteral();
          v30 = (WTF::StringImpl *)JSC::JSObject::get(v27, this, (unint64_t)v58);
          if (v58)
          {
            if (*(_DWORD *)v58 == 2)
              WTF::StringImpl::destroy(v58, v29);
            else
              *(_DWORD *)v58 -= 2;
          }
          if (*((_DWORD *)v25 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v25))
            goto LABEL_100;
          v31 = 1.0;
          if (v30 != (WTF::StringImpl *)10)
          {
            v58 = v30;
            v32 = (JSC::VM *)*((_QWORD *)this + 7);
            if ((unint64_t)v30 >= 0xFFFE000000000000)
            {
              v31 = (double)(int)v30;
            }
            else if ((unint64_t)v30 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              v51 = (JSC::VM *)*((_QWORD *)this + 7);
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v58, this);
              v32 = v51;
              v31 = v52;
            }
            else
            {
              *(_QWORD *)&v31 = (char *)v30 - 0x2000000000000;
            }
            if (*((_DWORD *)v32 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v32) & 1) != 0)
              goto LABEL_100;
          }
          WTF::AtomStringImpl::addLiteral();
          v33 = v58;
          v35 = JSC::JSObject::get(v27, this, (unint64_t)v58);
          if (v33)
          {
            if (*(_DWORD *)v33 == 2)
              WTF::StringImpl::destroy(v33, v34);
            else
              *(_DWORD *)v33 -= 2;
          }
          if (*((_DWORD *)v25 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v25))
          {
LABEL_100:
            v41 = 1;
            v57 = 1;
            v23 = v53;
            if (!v28)
              goto LABEL_63;
            goto LABEL_61;
          }
          v23 = v53;
          if (v35 != 10)
          {
            v62 = (WTF::StringImpl *)v35;
            v36 = (JSC::VM *)*((_QWORD *)this + 7);
            if ((v35 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v35 + 5) != 2)
            {
              JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v62, this);
LABEL_49:
              if (*((_DWORD *)v36 + 20))
              {
                hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v36);
                v38 = v61;
                if (hasExceptionsAfterHandlingTraps)
                {
                  LODWORD(v59) = 1;
                  v61 = 0;
                  if (v38)
                  {
                    if (*(_DWORD *)v38 == 2)
                      WTF::StringImpl::destroy(v38, v34);
                    else
                      *(_DWORD *)v38 -= 2;
                  }
                  v39 = 1;
                  v23 = v53;
                  goto LABEL_58;
                }
                v23 = v53;
              }
              else
              {
                v38 = v61;
              }
LABEL_54:
              LODWORD(v59) = 0;
              v58 = 0;
              if (v28)
              {
                if (*(_DWORD *)v28 == 2)
                {
                  WTF::StringImpl::destroy(v28, v34);
                  v39 = 0;
                  v28 = 0;
                  v41 = 0;
                  v42 = 0;
                  v40 = LODWORD(v59);
                  v55 = v38;
                  v56 = v31;
                  v57 = 0;
                  if (LODWORD(v59) == -1)
                  {
LABEL_60:
                    v28 = v42;
                    if (!v42)
                      goto LABEL_63;
LABEL_61:
                    if (*(_DWORD *)v28 == 2)
                    {
                      WTF::StringImpl::destroy(v28, v34);
                      v41 = v57;
                    }
                    else
                    {
                      *(_DWORD *)v28 -= 2;
                    }
LABEL_63:
                    if (!v41)
                    {
                      v43 = v55;
                      v55 = 0;
                      v58 = v43;
                      v59 = v56;
                      WebCore::OffscreenCanvas::convertToBlob(v23 - 144, (double *)&v58, (uint64_t *)&v54);
                      v45 = v58;
                      v58 = 0;
                      if (v45)
                      {
                        if (*(_DWORD *)v45 == 2)
                          WTF::StringImpl::destroy(v45, v44);
                        else
                          *(_DWORD *)v45 -= 2;
                      }
                      v41 = 0;
                    }
LABEL_68:
                    ((void (*)(WTF::StringImpl **, WebCore::DOMGuardedObject **))off_1E32C2478[v41])(&v58, &v55);
                    v14 = v54;
                    v54 = 0;
                    if (!v14)
                      goto LABEL_71;
                    goto LABEL_69;
                  }
LABEL_59:
                  ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32BEA70[v40])(&v62, &v58);
                  v41 = v39;
                  v42 = v28;
                  goto LABEL_60;
                }
                *(_DWORD *)v28 -= 2;
              }
              v39 = 0;
              v28 = 0;
              v55 = v38;
              v56 = v31;
LABEL_58:
              v57 = v39;
              v40 = v39;
              goto LABEL_59;
            }
            v37 = *(WTF::StringImpl **)(v35 + 8);
            if ((v37 & 1) != 0)
            {
              v37 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v35, this);
              if (!v37)
                goto LABEL_48;
            }
            else if (!v37)
            {
LABEL_48:
              v61 = v37;
              goto LABEL_49;
            }
            *(_DWORD *)v37 += 2;
            goto LABEL_48;
          }
LABEL_53:
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v38 = v62;
          goto LABEL_54;
        }
      }
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v28 = v58;
      v31 = 1.0;
      goto LABEL_53;
    }
  }
  WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"OffscreenCanvas", "convertToBlob", v16);
  v54 = 0;
LABEL_69:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_71:
  v46 = *(_QWORD *)(v10 + 16);
  if (v46)
  {
    if (*(_QWORD *)(v10 + 24) != v46)
    {
      v48 = *(objc_class **)(v46 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v55);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v55, v48, 0);
      v49 = v55;
      v55 = 0;
      if (v49)
      {
        if (*((_DWORD *)v49 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v49 + 16))(v49);
        else
          --*((_DWORD *)v49 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_33OffscreenCanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSY_1EJSG_SK_SO_SS_SW_EEEEEEDcS10_DpT0_(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *a2;
  *a2 = 0;
  if (v2)
    return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 40) + 24))(*(_QWORD *)(v2 + 40));
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_33OffscreenCanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSY_1EJSG_SK_SO_SS_SW_EEEEEEDcS10_DpT0_(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *a2;
  *a2 = 0;
  if (v2)
    return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 40) + 24))(*(_QWORD *)(v2 + 40));
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_33OffscreenCanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSY_1EJSG_SK_SO_SS_SW_EEEEEEDcS10_DpT0_(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *a2;
  *a2 = 0;
  if (v2)
    return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 24))(*(_QWORD *)(v2 + 32));
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm3EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_33OffscreenCanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSY_1EJSG_SK_SO_SS_SW_EEEEEEDcS10_DpT0_(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *a2;
  *a2 = 0;
  if (v2)
    return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 24))(*(_QWORD *)(v2 + 32));
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm4EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_33OffscreenCanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSY_1EJSG_SK_SO_SS_SW_EEEEEEDcS10_DpT0_(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *a2;
  *a2 = 0;
  if (v2)
    return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 24))(*(_QWORD *)(v2 + 32));
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_33OffscreenCanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISX_LNS0_6_TraitE1EEEEEvRSY_OT_EUlRS16_OT0_E_JRNS0_6__baseILS11_1EJSG_SK_SO_SS_SW_EEERKS1E_EEEDcS16_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a3;
  if (*a3)
    result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 40) + 16))(*(_QWORD *)(v4 + 40));
  *a2 = v4;
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_33OffscreenCanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISX_LNS0_6_TraitE1EEEEEvRSY_OT_EUlRS16_OT0_E_JRNS0_6__baseILS11_1EJSG_SK_SO_SS_SW_EEERKS1E_EEEDcS16_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a3;
  if (*a3)
    result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 40) + 16))(*(_QWORD *)(v4 + 40));
  *a2 = v4;
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_33OffscreenCanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISX_LNS0_6_TraitE1EEEEEvRSY_OT_EUlRS16_OT0_E_JRNS0_6__baseILS11_1EJSG_SK_SO_SS_SW_EEERKS1E_EEEDcS16_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a3;
  if (*a3)
    result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 16))(*(_QWORD *)(v4 + 32));
  *a2 = v4;
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm3ELm3EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_33OffscreenCanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISX_LNS0_6_TraitE1EEEEEvRSY_OT_EUlRS16_OT0_E_JRNS0_6__baseILS11_1EJSG_SK_SO_SS_SW_EEERKS1E_EEEDcS16_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a3;
  if (*a3)
    result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 16))(*(_QWORD *)(v4 + 32));
  *a2 = v4;
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm4ELm4EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_33OffscreenCanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISX_LNS0_6_TraitE1EEEEEvRSY_OT_EUlRS16_OT0_E_JRNS0_6__baseILS11_1EJSG_SK_SO_SS_SW_EEERKS1E_EEEDcS16_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a3;
  if (*a3)
    result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 16))(*(_QWORD *)(v4 + 32));
  *a2 = v4;
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_33OffscreenCanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISX_LNS0_6_TraitE1EEEEEvRSY_OT_EUlRS14_OT0_E_JRNS0_6__baseILS11_1EJSG_SK_SO_SS_SW_EEEOS1C_EEEDcS14_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_33OffscreenCanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISX_LNS0_6_TraitE1EEEEEvRSY_OT_EUlRS14_OT0_E_JRNS0_6__baseILS11_1EJSG_SK_SO_SS_SW_EEEOS1C_EEEDcS14_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_33OffscreenCanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISX_LNS0_6_TraitE1EEEEEvRSY_OT_EUlRS14_OT0_E_JRNS0_6__baseILS11_1EJSG_SK_SO_SS_SW_EEEOS1C_EEEDcS14_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm3ELm3EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_33OffscreenCanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISX_LNS0_6_TraitE1EEEEEvRSY_OT_EUlRS14_OT0_E_JRNS0_6__baseILS11_1EJSG_SK_SO_SS_SW_EEEOS1C_EEEDcS14_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm4ELm4EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_33OffscreenCanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISX_LNS0_6_TraitE1EEEEEvRSY_OT_EUlRS14_OT0_E_JRNS0_6__baseILS11_1EJSG_SK_SO_SS_SW_EEEOS1C_EEEDcS14_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_8optionalINS_7variantIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENSA_12RawPtrTraitsISD_EENSA_21DefaultRefDerefTraitsISD_EEEENSB_INSC_22WebGL2RenderingContextENSE_ISJ_EENSG_ISJ_EEEENSB_INSC_16GPUCanvasContextENSE_ISN_EENSG_ISN_EEEENSB_INSC_27ImageBitmapRenderingContextENSE_ISR_EENSG_ISR_EEEENSB_INSC_33OffscreenCanvasRenderingContext2DENSE_ISV_EENSG_ISV_EEEEEEEEENSC_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS13_1EJS10_S11_EEEEEEDcS15_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  if (*(_BYTE *)(a2 + 16))
  {
    v3 = *(unsigned int *)(a2 + 8);
    if ((_DWORD)v3 != -1)
      result = ((uint64_t (*)(char *, uint64_t))off_1E32C23E0[v3])(&v5, a2);
    *(_DWORD *)(a2 + 8) = -1;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_8optionalINS_7variantIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENSA_12RawPtrTraitsISD_EENSA_21DefaultRefDerefTraitsISD_EEEENSB_INSC_22WebGL2RenderingContextENSE_ISJ_EENSG_ISJ_EEEENSB_INSC_16GPUCanvasContextENSE_ISN_EENSG_ISN_EEEENSB_INSC_27ImageBitmapRenderingContextENSE_ISR_EENSG_ISR_EEEENSB_INSC_33OffscreenCanvasRenderingContext2DENSE_ISV_EENSG_ISV_EEEEEEEEENSC_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS13_1EJS10_S11_EEEEEEDcS15_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11ImageBitmapENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, bmalloc::api **a2)
{
  bmalloc::api *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  int v10;
  uint64_t result;
  uint64_t v12;

  v2 = *a2;
  *a2 = 0;
  if (!v2)
    return result;
  if (*((_DWORD *)v2 + 2) != 1)
  {
    --*((_DWORD *)v2 + 2);
    return result;
  }
  v3 = *((_QWORD *)v2 + 2);
  *((_QWORD *)v2 + 2) = 0;
  if (v3)
  {
    v4 = *(_QWORD *)(v3 + 8);
    if (__ldaxr((unsigned __int8 *)v4))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v4))
    {
      goto LABEL_10;
    }
    MEMORY[0x19AEA534C](v4);
LABEL_10:
    v6 = *(_QWORD *)(v4 + 8);
    v7 = v6 - 1;
    *(_QWORD *)(v4 + 8) = v6 - 1;
    if (v6 == 1)
    {
      v12 = *(_QWORD *)(v4 + 16);
      v8 = *(_QWORD *)(v4 + 24);
      *(_QWORD *)(v4 + 24) = 0;
      v9 = v12 != 0;
    }
    else
    {
      v8 = 0;
      v9 = 1;
    }
    v10 = __ldxr((unsigned __int8 *)v4);
    if (v10 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v4))
      {
LABEL_17:
        if (!v7)
        {
          if (v8)
            (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
          if (!v9)
            WTF::fastFree((WTF *)v4, a2);
        }
        goto LABEL_22;
      }
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v4);
    goto LABEL_17;
  }
LABEL_22:
  if (*(_QWORD *)v2)
  {
    *(_QWORD *)(*(_QWORD *)v2 + 8) = 3;
    *(_QWORD *)v2 = 0;
  }
  return bmalloc::api::isoDeallocate(v2, a2);
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11ImageBitmapENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore15OffscreenCanvas18ImageEncodeOptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_commit(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  WebCore::InspectorInstrumentation *v12;
  WebCore::ScriptExecutionContext *v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  _QWORD v18[2];
  WTF::StringImpl *v19;

  v3 = *((_QWORD *)a2 + 5);
  v17 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "OffscreenCanvasRenderingContext2D", "commit");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "OffscreenCanvasRenderingContext2D", "commit");
  v9 = *(_QWORD *)(v3 + 24);
  if (*(_BYTE *)(v9 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v18[0] = 0;
    v18[1] = 0;
    v12 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
    if (v12)
    {
      v14 = WebCore::InspectorInstrumentation::instrumentingAgents(v12, v13);
      if (v14)
      {
        v15 = *(_QWORD *)(v14 + 96);
        if (v15)
          WebCore::InspectorCanvasAgent::recordAction(v15, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v19, v18);
      }
    }
    v16 = v19;
    v19 = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v13);
      else
        *(_DWORD *)v16 -= 2;
    }
  }
  v10 = *(_QWORD *)(v9 + 32);
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 40))(v10) & 1) == 0)
  {
    __break(0xC471u);
    JUMPOUT(0x194D9D270);
  }
  WebCore::OffscreenCanvas::commitToPlaceholderCanvas((_QWORD *)(v10 - 32));
  return 10;
}

_BYTE *WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_drawImage(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  unint64_t v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  uint64_t v21;
  float v22;
  float v23;
  WTF::StringImpl *v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  JSC::VM *v28;
  double v29;
  unint64_t v30;
  JSC::VM *v31;
  double v32;
  unint64_t v33;
  JSC::VM *v34;
  double v35;
  unint64_t v36;
  JSC::VM *v37;
  double v38;
  unint64_t v39;
  JSC::VM *v40;
  double v41;
  unint64_t v42;
  JSC::VM *v43;
  double v44;
  unint64_t v45;
  JSC::VM *v46;
  double v47;
  unint64_t v48;
  JSC::VM *v49;
  double v50;
  uint64_t v51;
  float v52;
  float v53;
  float v54;
  float v55;
  float v56;
  float v57;
  float v58;
  float v59;
  WTF::StringImpl *v60;
  uint64_t v61;
  int v62;
  unint64_t v63;
  JSC::VM *v64;
  double v65;
  unint64_t v66;
  JSC::VM *v67;
  double v68;
  unint64_t v69;
  JSC::VM *v70;
  double v71;
  unint64_t v72;
  JSC::VM *v73;
  double v74;
  uint64_t v75;
  float v76;
  float v77;
  float v78;
  float v79;
  WTF::StringImpl *v80;
  JSValue v81;
  WebCore::InspectorInstrumentation *v84;
  WebCore::ScriptExecutionContext *v85;
  uint64_t v86;
  uint64_t v87;
  WTF::StringImpl *v88;
  WTF::StringImpl *v89;
  WebCore::InspectorInstrumentation *v90;
  WebCore::ScriptExecutionContext *v91;
  uint64_t v92;
  uint64_t v93;
  WTF::StringImpl *v94;
  WTF::StringImpl *v95;
  WebCore::InspectorInstrumentation *v96;
  WebCore::ScriptExecutionContext *v97;
  uint64_t v98;
  uint64_t v99;
  WTF::StringImpl *v100;
  WTF::StringImpl *v101;
  WebCore::InspectorInstrumentation *v102;
  WebCore::ScriptExecutionContext *v103;
  uint64_t v104;
  WebCore::InspectorCanvasAgent *v105;
  WebCore::InspectorInstrumentation *v106;
  WebCore::ScriptExecutionContext *v107;
  uint64_t v108;
  WebCore::InspectorCanvasAgent *v109;
  WebCore::InspectorInstrumentation *v110;
  WebCore::ScriptExecutionContext *v111;
  uint64_t v112;
  WebCore::InspectorCanvasAgent *v113;
  WebCore::InspectorInstrumentation *v114;
  WebCore::ScriptExecutionContext *v115;
  uint64_t v116;
  WebCore::InspectorCanvasAgent *v117;
  WebCore::InspectorInstrumentation *v118;
  WebCore::ScriptExecutionContext *v119;
  uint64_t v120;
  uint64_t v121;
  float *v122;
  float *v123;
  WTF::StringImpl *v124;
  WTF::StringImpl *v125;
  WebCore::InspectorInstrumentation *v126;
  WebCore::ScriptExecutionContext *v127;
  uint64_t v128;
  WebCore::InspectorCanvasAgent *v129;
  WebCore::InspectorInstrumentation *v130;
  WebCore::ScriptExecutionContext *v131;
  uint64_t v132;
  WebCore::InspectorCanvasAgent *v133;
  WebCore::InspectorInstrumentation *v134;
  WebCore::ScriptExecutionContext *v135;
  uint64_t v136;
  uint64_t v137;
  _DWORD *v138;
  _DWORD *v139;
  float *v140;
  float *v141;
  WTF::StringImpl *v142;
  WTF::StringImpl *v143;
  WebCore::InspectorInstrumentation *v144;
  WebCore::ScriptExecutionContext *v145;
  uint64_t v146;
  WebCore::InspectorCanvasAgent *v147;
  WebCore::InspectorInstrumentation *v148;
  WebCore::ScriptExecutionContext *v149;
  uint64_t v150;
  WebCore::InspectorCanvasAgent *v151;
  WebCore::InspectorInstrumentation *v152;
  WebCore::ScriptExecutionContext *v153;
  uint64_t v154;
  WebCore::InspectorCanvasAgent *v155;
  WebCore::InspectorInstrumentation *v156;
  WebCore::ScriptExecutionContext *v157;
  uint64_t v158;
  WebCore::InspectorCanvasAgent *v159;
  WebCore::InspectorInstrumentation *v160;
  WebCore::ScriptExecutionContext *v161;
  uint64_t v162;
  WebCore::InspectorCanvasAgent *v163;
  WebCore::InspectorInstrumentation *v164;
  WebCore::ScriptExecutionContext *v165;
  uint64_t v166;
  WebCore::InspectorCanvasAgent *v167;
  WebCore::InspectorInstrumentation *v168;
  WebCore::ScriptExecutionContext *v169;
  uint64_t v170;
  WebCore::InspectorCanvasAgent *v171;
  WebCore::InspectorInstrumentation *v172;
  WebCore::ScriptExecutionContext *v173;
  uint64_t v174;
  WebCore::InspectorCanvasAgent *v175;
  WebCore::InspectorInstrumentation *v176;
  WebCore::ScriptExecutionContext *v177;
  uint64_t v178;
  uint64_t v179;
  _DWORD *v180;
  _DWORD *v181;
  _DWORD *v182;
  _DWORD *v183;
  _DWORD *v184;
  _DWORD *v185;
  float *v186;
  float *v187;
  WTF::StringImpl *v188;
  WTF::StringImpl *v189;
  JSC::VM *v190;
  double v191;
  double v192;
  JSC::VM *v193;
  double v194;
  JSC::VM *v195;
  double v196;
  JSC::VM *v197;
  double v198;
  JSC::VM *v199;
  double v200;
  JSC::VM *v201;
  double v202;
  JSC::VM *v203;
  double v204;
  JSC::VM *v205;
  double v206;
  double v207;
  JSC::VM *v208;
  double v209;
  JSC::VM *v210;
  double v211;
  JSC::VM *v212;
  double v213;
  double v214;
  WebCore::CanvasRenderingContext *v215;
  _QWORD v216[2];
  JSC::VM *v217;
  WTF::StringImpl **v218;
  WTF::StringImpl *v219;
  char v220;
  WTF::StringImpl *v221;
  int v222;
  float v223;
  float v224;
  float v225;
  float v226;
  float v227;
  float v228;
  float v229;
  float v230;
  WTF::StringImpl **v231;
  WTF::StringImpl *v232;
  WTF::StringImpl *v233;
  float *v234;
  float *v235;
  float *v236;
  float *v237;
  float *v238;
  float *v239;
  float *v240;
  _QWORD v241[2];
  char v242;
  _QWORD v243[2];
  char v244;
  _DWORD *v245;
  char v246;
  _DWORD *v247;
  char v248;
  _DWORD *v249;
  char v250;
  _DWORD *v251;
  char v252;
  char v253[8];
  uint64_t v254;
  unsigned int v255;
  int v256;
  uint64_t v257;

  v257 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v216[0] = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)v216, "OffscreenCanvasRenderingContext2D", "drawImage");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)v216, "OffscreenCanvasRenderingContext2D", "drawImage");
  v216[1] = v4;
  v12 = *((int *)a2 + 8) - 1;
  if (v12 >= 9)
    v12 = 9;
  if (v12 != 9)
  {
    if (v12 != 5)
    {
      if (v12 == 3)
      {
        v13 = *(_QWORD *)(v5 + 24);
        v217 = v4;
        WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLImageElement>,WebCore::IDLInterface<WebCore::SVGImageElement>,WebCore::IDLInterface<WebCore::HTMLCanvasElement>,WebCore::IDLInterface<WebCore::ImageBitmap>,WebCore::IDLInterface<WebCore::CSSStyleImageValue>,WebCore::IDLInterface<WebCore::OffscreenCanvas>,WebCore::IDLInterface<WebCore::HTMLVideoElement>,WebCore::IDLInterface<WebCore::WebCodecsVideoFrame>>>::convert((uint64_t)this, *((_QWORD *)a2 + 6), (uint64_t)v253);
        v14 = v256;
        if (v256)
        {
          v25 = 0;
LABEL_36:
          if (v14 != -1)
            ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32C2F80[v14])(&v232, &v254);
          return (_BYTE *)v25;
        }
        v15 = *((_QWORD *)a2 + 7);
        v232 = (WTF::StringImpl *)v15;
        v16 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v15 >= 0xFFFE000000000000)
        {
          v17 = (double)(int)v15;
        }
        else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v190 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v232, this);
          v16 = v190;
          v17 = v191;
        }
        else
        {
          *(_QWORD *)&v17 = v15 - 0x2000000000000;
        }
        if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
        {
          v25 = 0;
          goto LABEL_35;
        }
        v18 = *((_QWORD *)a2 + 8);
        v232 = (WTF::StringImpl *)v18;
        v19 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v18 >= 0xFFFE000000000000)
        {
          v20 = (double)(int)v18;
        }
        else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v232, this);
          v20 = v192;
        }
        else
        {
          *(_QWORD *)&v20 = v18 - 0x2000000000000;
        }
        if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
        {
LABEL_391:
          v25 = 0;
          goto LABEL_35;
        }
        if (*(_BYTE *)(v13 + 25))
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v221 = v232;
          if (v256)
            goto LABEL_413;
          v84 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 32) + 144))(*(_QWORD *)(v13 + 32));
          if (v84
            && (v86 = WebCore::InspectorInstrumentation::instrumentingAgents(v84, v85)) != 0
            && (v87 = *(_QWORD *)(v86 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v87, v13, (uint64_t)&v254);
          }
          else
          {
            LOBYTE(v232) = 0;
            LOBYTE(v234) = 0;
          }
          v102 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 32) + 144))(*(_QWORD *)(v13 + 32));
          if (v102
            && (v104 = WebCore::InspectorInstrumentation::instrumentingAgents(v102, v103)) != 0
            && (v105 = *(WebCore::InspectorCanvasAgent **)(v104 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v105, (WebCore::CanvasRenderingContext *)v13, v17, (uint64_t)&v235);
          }
          else
          {
            LOBYTE(v235) = 0;
            LOBYTE(v237) = 0;
          }
          v110 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 32) + 144))(*(_QWORD *)(v13 + 32));
          if (v110
            && (v112 = WebCore::InspectorInstrumentation::instrumentingAgents(v110, v111)) != 0
            && (v113 = *(WebCore::InspectorCanvasAgent **)(v112 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v113, (WebCore::CanvasRenderingContext *)v13, v20, (uint64_t)&v238);
          }
          else
          {
            LOBYTE(v238) = 0;
            LOBYTE(v240) = 0;
          }
          v218 = &v232;
          v219 = (WTF::StringImpl *)3;
          v118 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 32) + 144))(*(_QWORD *)(v13 + 32));
          if (v118)
          {
            v120 = WebCore::InspectorInstrumentation::instrumentingAgents(v118, v119);
            if (v120)
            {
              v121 = *(_QWORD *)(v120 + 96);
              if (v121)
                WebCore::InspectorCanvasAgent::recordAction(v121, (WebCore::CanvasRenderingContext *)v13, (const WTF::StringImpl *)&v221, &v218);
            }
          }
          if ((_BYTE)v240)
          {
            v122 = v238;
            v238 = 0;
            if (v122)
            {
              if (*(_DWORD *)v122 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*(_DWORD *)v122;
            }
          }
          if ((_BYTE)v237)
          {
            v123 = v235;
            v235 = 0;
            if (v123)
            {
              if (*(_DWORD *)v123 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*(_DWORD *)v123;
            }
          }
          if ((_BYTE)v234)
          {
            v124 = v232;
            v232 = 0;
            if (v124)
            {
              if (*(_DWORD *)v124 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*(_DWORD *)v124;
            }
          }
          v125 = v221;
          v221 = 0;
          if (v125)
          {
            if (*(_DWORD *)v125 == 2)
              WTF::StringImpl::destroy(v125, v119);
            else
              *(_DWORD *)v125 -= 2;
          }
        }
        if (!v256)
        {
          LOBYTE(v221) = 0;
          v222 = -1;
          v21 = v255;
          if (v255 != -1)
          {
            ((void (*)(WTF::StringImpl **, WTF::StringImpl **, uint64_t *))off_1E32C2F40[v255])(&v232, &v221, &v254);
            v222 = v21;
          }
          v22 = v17;
          v23 = v20;
          v229 = v23;
          v230 = v22;
          v232 = (WTF::StringImpl *)v13;
          v233 = (WTF::StringImpl *)&v230;
          v234 = &v229;
          v235 = (float *)v13;
          v236 = &v230;
          v237 = &v229;
          v238 = (float *)v13;
          v239 = &v230;
          v240 = &v229;
          if ((_DWORD)v21 != -1)
          {
            v231 = &v232;
            ((void (*)(WTF::StringImpl ***__return_ptr, WTF::StringImpl ***, WTF::StringImpl **))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore28CanvasRenderingContext2DBase9drawImageEONS_7variantIJNS6_6RefPtrINS8_16HTMLImageElementENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15SVGImageElementENSD_ISI_EENSF_ISI_EEEENSB_INS8_17HTMLCanvasElementENSD_ISM_EENSF_ISM_EEEENSB_INS8_11ImageBitmapENSD_ISQ_EENSF_ISQ_EEEENSB_INS8_18CSSStyleImageValueENSD_ISU_EENSF_ISU_EEEENSB_INS8_15OffscreenCanvasENSD_ISY_EENSF_ISY_EEEENSB_INS8_16HTMLVideoElementENSD_IS12_EENSF_IS12_EEEENSB_INS8_19WebCodecsVideoFrameENSD_IS16_EENSF_IS16_EEEEEEEffE3__0JZNS9_9drawImageES1B_ffE3__1ZNS9_9drawImageES1B_ffE3__2EEEEEJRNS0_6__implIJSH_SL_SP_ST_SX_S11_S15_S19_EEEEEEDcOT_DpOT0____fmatrix[v21])(&v218, &v231, &v221);
            if (v222 != -1)
              ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32C2F00[v222])(&v232, &v221);
            if (!v220)
            {
              v25 = 10;
LABEL_35:
              v14 = v256;
              goto LABEL_36;
            }
            LOBYTE(v232) = (_BYTE)v218;
            v88 = v219;
            v219 = 0;
            v233 = v88;
            if (!*((_QWORD *)v4 + 2))
            {
              WebCore::propagateExceptionSlowPath(this, &v217, (unsigned __int8 *)&v232);
              v88 = v233;
            }
            v233 = 0;
            if (v88)
            {
              if (*(_DWORD *)v88 == 2)
                WTF::StringImpl::destroy(v88, v24);
              else
                *(_DWORD *)v88 -= 2;
            }
            if (v220)
            {
              v89 = v219;
              v219 = 0;
              if (v89)
              {
                if (*(_DWORD *)v89 != 2)
                {
                  v25 = 0;
                  *(_DWORD *)v89 -= 2;
                  goto LABEL_35;
                }
                WTF::StringImpl::destroy(v89, v24);
              }
            }
            goto LABEL_391;
          }
        }
        goto LABEL_413;
      }
      if (v12 > 2)
        return (_BYTE *)JSC::throwTypeError();
      v81.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
      return (_BYTE *)JSC::VM::throwException(v4, this, v81);
    }
    v61 = *(_QWORD *)(v5 + 24);
    v217 = v4;
    WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLImageElement>,WebCore::IDLInterface<WebCore::SVGImageElement>,WebCore::IDLInterface<WebCore::HTMLCanvasElement>,WebCore::IDLInterface<WebCore::ImageBitmap>,WebCore::IDLInterface<WebCore::CSSStyleImageValue>,WebCore::IDLInterface<WebCore::OffscreenCanvas>,WebCore::IDLInterface<WebCore::HTMLVideoElement>,WebCore::IDLInterface<WebCore::WebCodecsVideoFrame>>>::convert((uint64_t)this, *((_QWORD *)a2 + 6), (uint64_t)v253);
    v62 = v256;
    if (v256)
    {
      v25 = 0;
LABEL_112:
      if (v62 != -1)
        ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32C2F80[v62])(&v232, &v254);
      return (_BYTE *)v25;
    }
    v63 = *((_QWORD *)a2 + 7);
    v232 = (WTF::StringImpl *)v63;
    v64 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v63 >= 0xFFFE000000000000)
    {
      v65 = (double)(int)v63;
    }
    else if (v63 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v208 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v232, this);
      v64 = v208;
      v65 = v209;
    }
    else
    {
      *(_QWORD *)&v65 = v63 - 0x2000000000000;
    }
    if (*((_DWORD *)v64 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v64))
    {
      v25 = 0;
      goto LABEL_111;
    }
    v66 = *((_QWORD *)a2 + 8);
    v232 = (WTF::StringImpl *)v66;
    v67 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v66 >= 0xFFFE000000000000)
    {
      v68 = (double)(int)v66;
    }
    else if (v66 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v210 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v232, this);
      v67 = v210;
      v68 = v211;
    }
    else
    {
      *(_QWORD *)&v68 = v66 - 0x2000000000000;
    }
    if (*((_DWORD *)v67 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v67))
    {
      v25 = 0;
      goto LABEL_111;
    }
    v69 = *((_QWORD *)a2 + 9);
    v232 = (WTF::StringImpl *)v69;
    v70 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v69 >= 0xFFFE000000000000)
    {
      v71 = (double)(int)v69;
    }
    else if (v69 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v212 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v232, this);
      v70 = v212;
      v71 = v213;
    }
    else
    {
      *(_QWORD *)&v71 = v69 - 0x2000000000000;
    }
    if (*((_DWORD *)v70 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v70))
    {
      v25 = 0;
      goto LABEL_111;
    }
    v72 = *((_QWORD *)a2 + 10);
    v232 = (WTF::StringImpl *)v72;
    v73 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v72 >= 0xFFFE000000000000)
    {
      v74 = (double)(int)v72;
    }
    else if (v72 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v232, this);
      v74 = v214;
    }
    else
    {
      *(_QWORD *)&v74 = v72 - 0x2000000000000;
    }
    if (*((_DWORD *)v73 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v73))
    {
LABEL_393:
      v25 = 0;
      goto LABEL_111;
    }
    if (*(_BYTE *)(v61 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v221 = v232;
      if (v256)
        goto LABEL_413;
      v90 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v61 + 32) + 144))(*(_QWORD *)(v61 + 32));
      if (v90
        && (v92 = WebCore::InspectorInstrumentation::instrumentingAgents(v90, v91)) != 0
        && (v93 = *(_QWORD *)(v92 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v93, v61, (uint64_t)&v254);
      }
      else
      {
        LOBYTE(v232) = 0;
        LOBYTE(v234) = 0;
      }
      v106 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v61 + 32) + 144))(*(_QWORD *)(v61 + 32));
      if (v106
        && (v108 = WebCore::InspectorInstrumentation::instrumentingAgents(v106, v107)) != 0
        && (v109 = *(WebCore::InspectorCanvasAgent **)(v108 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v109, (WebCore::CanvasRenderingContext *)v61, v65, (uint64_t)&v235);
      }
      else
      {
        LOBYTE(v235) = 0;
        LOBYTE(v237) = 0;
      }
      v114 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v61 + 32) + 144))(*(_QWORD *)(v61 + 32));
      if (v114
        && (v116 = WebCore::InspectorInstrumentation::instrumentingAgents(v114, v115)) != 0
        && (v117 = *(WebCore::InspectorCanvasAgent **)(v116 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v117, (WebCore::CanvasRenderingContext *)v61, v68, (uint64_t)&v238);
      }
      else
      {
        LOBYTE(v238) = 0;
        LOBYTE(v240) = 0;
      }
      v126 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v61 + 32) + 144))(*(_QWORD *)(v61 + 32));
      if (v126
        && (v128 = WebCore::InspectorInstrumentation::instrumentingAgents(v126, v127)) != 0
        && (v129 = *(WebCore::InspectorCanvasAgent **)(v128 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v129, (WebCore::CanvasRenderingContext *)v61, v71, (uint64_t)v241);
      }
      else
      {
        LOBYTE(v241[0]) = 0;
        v242 = 0;
      }
      v130 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v61 + 32) + 144))(*(_QWORD *)(v61 + 32));
      if (v130
        && (v132 = WebCore::InspectorInstrumentation::instrumentingAgents(v130, v131)) != 0
        && (v133 = *(WebCore::InspectorCanvasAgent **)(v132 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v133, (WebCore::CanvasRenderingContext *)v61, v74, (uint64_t)v243);
      }
      else
      {
        LOBYTE(v243[0]) = 0;
        v244 = 0;
      }
      v218 = &v232;
      v219 = (WTF::StringImpl *)5;
      v134 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v61 + 32) + 144))(*(_QWORD *)(v61 + 32));
      if (v134)
      {
        v136 = WebCore::InspectorInstrumentation::instrumentingAgents(v134, v135);
        if (v136)
        {
          v137 = *(_QWORD *)(v136 + 96);
          if (v137)
            WebCore::InspectorCanvasAgent::recordAction(v137, (WebCore::CanvasRenderingContext *)v61, (const WTF::StringImpl *)&v221, &v218);
        }
      }
      if (v244)
      {
        v138 = (_DWORD *)v243[0];
        v243[0] = 0;
        if (v138)
        {
          if (*v138 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v138;
        }
      }
      if (v242)
      {
        v139 = (_DWORD *)v241[0];
        v241[0] = 0;
        if (v139)
        {
          if (*v139 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v139;
        }
      }
      if ((_BYTE)v240)
      {
        v140 = v238;
        v238 = 0;
        if (v140)
        {
          if (*(_DWORD *)v140 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*(_DWORD *)v140;
        }
      }
      if ((_BYTE)v237)
      {
        v141 = v235;
        v235 = 0;
        if (v141)
        {
          if (*(_DWORD *)v141 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*(_DWORD *)v141;
        }
      }
      if ((_BYTE)v234)
      {
        v142 = v232;
        v232 = 0;
        if (v142)
        {
          if (*(_DWORD *)v142 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*(_DWORD *)v142;
        }
      }
      v143 = v221;
      v221 = 0;
      if (v143)
      {
        if (*(_DWORD *)v143 == 2)
          WTF::StringImpl::destroy(v143, v135);
        else
          *(_DWORD *)v143 -= 2;
      }
    }
    if (!v256)
    {
      LOBYTE(v221) = 0;
      v222 = -1;
      v75 = v255;
      if (v255 != -1)
      {
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **, uint64_t *))off_1E32C2F40[v255])(&v232, &v221, &v254);
        v222 = v75;
      }
      v76 = v65;
      v77 = v68;
      v78 = v71;
      v229 = v77;
      v230 = v76;
      v79 = v74;
      v227 = v79;
      v228 = v78;
      v232 = (WTF::StringImpl *)v61;
      v233 = (WTF::StringImpl *)&v230;
      v234 = &v229;
      v235 = &v228;
      v236 = &v227;
      if ((_DWORD)v75 != -1)
      {
        v231 = &v232;
        ((void (*)(WTF::StringImpl ***__return_ptr, WTF::StringImpl ***, WTF::StringImpl **))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore28CanvasRenderingContext2DBase9drawImageEONS_7variantIJNS6_6RefPtrINS8_16HTMLImageElementENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15SVGImageElementENSD_ISI_EENSF_ISI_EEEENSB_INS8_17HTMLCanvasElementENSD_ISM_EENSF_ISM_EEEENSB_INS8_11ImageBitmapENSD_ISQ_EENSF_ISQ_EEEENSB_INS8_18CSSStyleImageValueENSD_ISU_EENSF_ISU_EEEENSB_INS8_15OffscreenCanvasENSD_ISY_EENSF_ISY_EEEENSB_INS8_16HTMLVideoElementENSD_IS12_EENSF_IS12_EEEENSB_INS8_19WebCodecsVideoFrameENSD_IS16_EENSF_IS16_EEEEEEEffffE3__0JEEEEEJRNS0_6__implIJSH_SL_SP_ST_SX_S11_S15_S19_EEEEEEDcOT_DpOT0____fmatrix[v75])(&v218, &v231, &v221);
        if (v222 != -1)
          ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32C2F00[v222])(&v232, &v221);
        if (!v220)
        {
          v25 = 10;
LABEL_111:
          v62 = v256;
          goto LABEL_112;
        }
        LOBYTE(v232) = (_BYTE)v218;
        v94 = v219;
        v219 = 0;
        v233 = v94;
        if (!*((_QWORD *)v4 + 2))
        {
          WebCore::propagateExceptionSlowPath(this, &v217, (unsigned __int8 *)&v232);
          v94 = v233;
        }
        v233 = 0;
        if (v94)
        {
          if (*(_DWORD *)v94 == 2)
            WTF::StringImpl::destroy(v94, v80);
          else
            *(_DWORD *)v94 -= 2;
        }
        if (v220)
        {
          v95 = v219;
          v219 = 0;
          if (v95)
          {
            if (*(_DWORD *)v95 != 2)
            {
              v25 = 0;
              *(_DWORD *)v95 -= 2;
              goto LABEL_111;
            }
            WTF::StringImpl::destroy(v95, v80);
          }
        }
        goto LABEL_393;
      }
    }
LABEL_413:
    std::__throw_bad_variant_access[abi:sn180100]();
  }
  v215 = *(WebCore::CanvasRenderingContext **)(v5 + 24);
  v217 = v4;
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLImageElement>,WebCore::IDLInterface<WebCore::SVGImageElement>,WebCore::IDLInterface<WebCore::HTMLCanvasElement>,WebCore::IDLInterface<WebCore::ImageBitmap>,WebCore::IDLInterface<WebCore::CSSStyleImageValue>,WebCore::IDLInterface<WebCore::OffscreenCanvas>,WebCore::IDLInterface<WebCore::HTMLVideoElement>,WebCore::IDLInterface<WebCore::WebCodecsVideoFrame>>>::convert((uint64_t)this, *((_QWORD *)a2 + 6), (uint64_t)v253);
  v26 = v256;
  if (!v256)
  {
    v27 = *((_QWORD *)a2 + 7);
    v232 = (WTF::StringImpl *)v27;
    v28 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v27 >= 0xFFFE000000000000)
    {
      v29 = (double)(int)v27;
    }
    else if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v193 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v232, this);
      v28 = v193;
      v29 = v194;
    }
    else
    {
      *(_QWORD *)&v29 = v27 - 0x2000000000000;
    }
    if (*((_DWORD *)v28 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v28))
    {
      v25 = 0;
      goto LABEL_81;
    }
    v30 = *((_QWORD *)a2 + 8);
    v232 = (WTF::StringImpl *)v30;
    v31 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v30 >= 0xFFFE000000000000)
    {
      v32 = (double)(int)v30;
    }
    else if (v30 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v195 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v232, this);
      v31 = v195;
      v32 = v196;
    }
    else
    {
      *(_QWORD *)&v32 = v30 - 0x2000000000000;
    }
    if (*((_DWORD *)v31 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v31))
    {
      v25 = 0;
      goto LABEL_81;
    }
    v33 = *((_QWORD *)a2 + 9);
    v232 = (WTF::StringImpl *)v33;
    v34 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v33 >= 0xFFFE000000000000)
    {
      v35 = (double)(int)v33;
    }
    else if (v33 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v197 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v232, this);
      v34 = v197;
      v35 = v198;
    }
    else
    {
      *(_QWORD *)&v35 = v33 - 0x2000000000000;
    }
    if (*((_DWORD *)v34 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v34))
    {
      v25 = 0;
      goto LABEL_81;
    }
    v36 = *((_QWORD *)a2 + 10);
    v232 = (WTF::StringImpl *)v36;
    v37 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v36 >= 0xFFFE000000000000)
    {
      v38 = (double)(int)v36;
    }
    else if (v36 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v199 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v232, this);
      v37 = v199;
      v38 = v200;
    }
    else
    {
      *(_QWORD *)&v38 = v36 - 0x2000000000000;
    }
    if (*((_DWORD *)v37 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v37))
    {
      v25 = 0;
      goto LABEL_81;
    }
    v39 = *((_QWORD *)a2 + 11);
    v232 = (WTF::StringImpl *)v39;
    v40 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v39 >= 0xFFFE000000000000)
    {
      v41 = (double)(int)v39;
    }
    else if (v39 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v201 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v232, this);
      v40 = v201;
      v41 = v202;
    }
    else
    {
      *(_QWORD *)&v41 = v39 - 0x2000000000000;
    }
    if (*((_DWORD *)v40 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v40))
    {
      v25 = 0;
      goto LABEL_81;
    }
    v42 = *((_QWORD *)a2 + 12);
    v232 = (WTF::StringImpl *)v42;
    v43 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v42 >= 0xFFFE000000000000)
    {
      v44 = (double)(int)v42;
    }
    else if (v42 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v203 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v232, this);
      v43 = v203;
      v44 = v204;
    }
    else
    {
      *(_QWORD *)&v44 = v42 - 0x2000000000000;
    }
    if (*((_DWORD *)v43 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v43))
    {
      v25 = 0;
      goto LABEL_81;
    }
    v45 = *((_QWORD *)a2 + 13);
    v232 = (WTF::StringImpl *)v45;
    v46 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v45 >= 0xFFFE000000000000)
    {
      v47 = (double)(int)v45;
    }
    else if (v45 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v205 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v232, this);
      v46 = v205;
      v47 = v206;
    }
    else
    {
      *(_QWORD *)&v47 = v45 - 0x2000000000000;
    }
    if (*((_DWORD *)v46 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v46))
    {
      v25 = 0;
      goto LABEL_81;
    }
    v48 = *((_QWORD *)a2 + 14);
    v232 = (WTF::StringImpl *)v48;
    v49 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v48 >= 0xFFFE000000000000)
    {
      v50 = (double)(int)v48;
    }
    else if (v48 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v232, this);
      v50 = v207;
    }
    else
    {
      *(_QWORD *)&v50 = v48 - 0x2000000000000;
    }
    if (!*((_DWORD *)v49 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v49))
    {
      if (*((_BYTE *)v215 + 25))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v221 = v232;
        if (v256)
          goto LABEL_413;
        v96 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v215 + 4) + 144))(*((_QWORD *)v215 + 4));
        if (v96
          && (v98 = WebCore::InspectorInstrumentation::instrumentingAgents(v96, v97)) != 0
          && (v99 = *(_QWORD *)(v98 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v99, (uint64_t)v215, (uint64_t)&v254);
        }
        else
        {
          LOBYTE(v232) = 0;
          LOBYTE(v234) = 0;
        }
        v144 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v215 + 4) + 144))(*((_QWORD *)v215 + 4));
        if (v144
          && (v146 = WebCore::InspectorInstrumentation::instrumentingAgents(v144, v145)) != 0
          && (v147 = *(WebCore::InspectorCanvasAgent **)(v146 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v147, v215, v29, (uint64_t)&v235);
        }
        else
        {
          LOBYTE(v235) = 0;
          LOBYTE(v237) = 0;
        }
        v148 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v215 + 4) + 144))(*((_QWORD *)v215 + 4));
        if (v148
          && (v150 = WebCore::InspectorInstrumentation::instrumentingAgents(v148, v149)) != 0
          && (v151 = *(WebCore::InspectorCanvasAgent **)(v150 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v151, v215, v32, (uint64_t)&v238);
        }
        else
        {
          LOBYTE(v238) = 0;
          LOBYTE(v240) = 0;
        }
        v152 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v215 + 4) + 144))(*((_QWORD *)v215 + 4));
        if (v152
          && (v154 = WebCore::InspectorInstrumentation::instrumentingAgents(v152, v153)) != 0
          && (v155 = *(WebCore::InspectorCanvasAgent **)(v154 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v155, v215, v35, (uint64_t)v241);
        }
        else
        {
          LOBYTE(v241[0]) = 0;
          v242 = 0;
        }
        v156 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v215 + 4) + 144))(*((_QWORD *)v215 + 4));
        if (v156
          && (v158 = WebCore::InspectorInstrumentation::instrumentingAgents(v156, v157)) != 0
          && (v159 = *(WebCore::InspectorCanvasAgent **)(v158 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v159, v215, v38, (uint64_t)v243);
        }
        else
        {
          LOBYTE(v243[0]) = 0;
          v244 = 0;
        }
        v160 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v215 + 4) + 144))(*((_QWORD *)v215 + 4));
        if (v160
          && (v162 = WebCore::InspectorInstrumentation::instrumentingAgents(v160, v161)) != 0
          && (v163 = *(WebCore::InspectorCanvasAgent **)(v162 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v163, v215, v41, (uint64_t)&v245);
        }
        else
        {
          LOBYTE(v245) = 0;
          v246 = 0;
        }
        v164 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v215 + 4) + 144))(*((_QWORD *)v215 + 4));
        if (v164
          && (v166 = WebCore::InspectorInstrumentation::instrumentingAgents(v164, v165)) != 0
          && (v167 = *(WebCore::InspectorCanvasAgent **)(v166 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v167, v215, v44, (uint64_t)&v247);
        }
        else
        {
          LOBYTE(v247) = 0;
          v248 = 0;
        }
        v168 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v215 + 4) + 144))(*((_QWORD *)v215 + 4));
        if (v168
          && (v170 = WebCore::InspectorInstrumentation::instrumentingAgents(v168, v169)) != 0
          && (v171 = *(WebCore::InspectorCanvasAgent **)(v170 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v171, v215, v47, (uint64_t)&v249);
        }
        else
        {
          LOBYTE(v249) = 0;
          v250 = 0;
        }
        v172 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v215 + 4) + 144))(*((_QWORD *)v215 + 4));
        if (v172
          && (v174 = WebCore::InspectorInstrumentation::instrumentingAgents(v172, v173)) != 0
          && (v175 = *(WebCore::InspectorCanvasAgent **)(v174 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v175, v215, v50, (uint64_t)&v251);
        }
        else
        {
          LOBYTE(v251) = 0;
          v252 = 0;
        }
        v218 = &v232;
        v219 = (WTF::StringImpl *)9;
        v176 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v215 + 4) + 144))(*((_QWORD *)v215 + 4));
        if (v176)
        {
          v178 = WebCore::InspectorInstrumentation::instrumentingAgents(v176, v177);
          if (v178)
          {
            v179 = *(_QWORD *)(v178 + 96);
            if (v179)
              WebCore::InspectorCanvasAgent::recordAction(v179, v215, (const WTF::StringImpl *)&v221, &v218);
          }
        }
        if (v252)
        {
          v180 = v251;
          v251 = 0;
          if (v180)
          {
            if (*v180 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v180;
          }
        }
        if (v250)
        {
          v181 = v249;
          v249 = 0;
          if (v181)
          {
            if (*v181 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v181;
          }
        }
        if (v248)
        {
          v182 = v247;
          v247 = 0;
          if (v182)
          {
            if (*v182 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v182;
          }
        }
        if (v246)
        {
          v183 = v245;
          v245 = 0;
          if (v183)
          {
            if (*v183 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v183;
          }
        }
        if (v244)
        {
          v184 = (_DWORD *)v243[0];
          v243[0] = 0;
          if (v184)
          {
            if (*v184 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v184;
          }
        }
        if (v242)
        {
          v185 = (_DWORD *)v241[0];
          v241[0] = 0;
          if (v185)
          {
            if (*v185 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v185;
          }
        }
        if ((_BYTE)v240)
        {
          v186 = v238;
          v238 = 0;
          if (v186)
          {
            if (*(_DWORD *)v186 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*(_DWORD *)v186;
          }
        }
        if ((_BYTE)v237)
        {
          v187 = v235;
          v235 = 0;
          if (v187)
          {
            if (*(_DWORD *)v187 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*(_DWORD *)v187;
          }
        }
        if ((_BYTE)v234)
        {
          v188 = v232;
          v232 = 0;
          if (v188)
          {
            if (*(_DWORD *)v188 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*(_DWORD *)v188;
          }
        }
        v189 = v221;
        v221 = 0;
        if (v189)
        {
          if (*(_DWORD *)v189 == 2)
            WTF::StringImpl::destroy(v189, v177);
          else
            *(_DWORD *)v189 -= 2;
        }
      }
      if (v256)
        goto LABEL_413;
      LOBYTE(v221) = 0;
      v222 = -1;
      v51 = v255;
      if (v255 != -1)
      {
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **, uint64_t *))off_1E32C2F40[v255])(&v232, &v221, &v254);
        v222 = v51;
      }
      v52 = v29;
      v53 = v32;
      v54 = v35;
      v229 = v53;
      v230 = v52;
      v55 = v38;
      v227 = v55;
      v228 = v54;
      v56 = v41;
      v57 = v44;
      v58 = v47;
      v225 = v57;
      v226 = v56;
      v59 = v50;
      v223 = v59;
      v224 = v58;
      v232 = v215;
      v233 = (WTF::StringImpl *)&v230;
      v234 = &v229;
      v235 = &v228;
      v236 = &v227;
      v237 = &v226;
      v238 = &v225;
      v239 = &v224;
      v240 = &v223;
      if ((_DWORD)v51 == -1)
        goto LABEL_413;
      v231 = &v232;
      ((void (*)(WTF::StringImpl ***__return_ptr, WTF::StringImpl ***, WTF::StringImpl **))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore28CanvasRenderingContext2DBase9drawImageEONS_7variantIJNS6_6RefPtrINS8_16HTMLImageElementENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15SVGImageElementENSD_ISI_EENSF_ISI_EEEENSB_INS8_17HTMLCanvasElementENSD_ISM_EENSF_ISM_EEEENSB_INS8_11ImageBitmapENSD_ISQ_EENSF_ISQ_EEEENSB_INS8_18CSSStyleImageValueENSD_ISU_EENSF_ISU_EEEENSB_INS8_15OffscreenCanvasENSD_ISY_EENSF_ISY_EEEENSB_INS8_16HTMLVideoElementENSD_IS12_EENSF_IS12_EEEENSB_INS8_19WebCodecsVideoFrameENSD_IS16_EENSF_IS16_EEEEEEEffffffffE3__0JEEEEEJRNS0_6__implIJSH_SL_SP_ST_SX_S11_S15_S19_EEEEEEDcOT_DpOT0____fmatrix[v51])(&v218, &v231, &v221);
      if (v222 != -1)
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32C2F00[v222])(&v232, &v221);
      if (!v220)
      {
        v25 = 10;
LABEL_81:
        v26 = v256;
        goto LABEL_82;
      }
      LOBYTE(v232) = (_BYTE)v218;
      v100 = v219;
      v219 = 0;
      v233 = v100;
      if (!*((_QWORD *)v4 + 2))
      {
        WebCore::propagateExceptionSlowPath(this, &v217, (unsigned __int8 *)&v232);
        v100 = v233;
      }
      v233 = 0;
      if (v100)
      {
        if (*(_DWORD *)v100 == 2)
          WTF::StringImpl::destroy(v100, v60);
        else
          *(_DWORD *)v100 -= 2;
      }
      if (v220)
      {
        v101 = v219;
        v219 = 0;
        if (v101)
        {
          if (*(_DWORD *)v101 != 2)
          {
            v25 = 0;
            *(_DWORD *)v101 -= 2;
            goto LABEL_81;
          }
          WTF::StringImpl::destroy(v101, v60);
        }
      }
    }
    v25 = 0;
    goto LABEL_81;
  }
  v25 = 0;
LABEL_82:
  if (v26 != -1)
    ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32C2F80[v26])(&v232, &v254);
  return (_BYTE *)v25;
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_beginPath(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  WebCore::InspectorInstrumentation *v12;
  WebCore::ScriptExecutionContext *v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  _QWORD v18[2];
  WTF::StringImpl *v19;

  v3 = *((_QWORD *)a2 + 5);
  v17 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "OffscreenCanvasRenderingContext2D", "beginPath");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "OffscreenCanvasRenderingContext2D", "beginPath");
  v9 = *(_QWORD *)(v3 + 24);
  if (*(_BYTE *)(v9 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v18[0] = 0;
    v18[1] = 0;
    v12 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
    if (v12)
    {
      v14 = WebCore::InspectorInstrumentation::instrumentingAgents(v12, v13);
      if (v14)
      {
        v15 = *(_QWORD *)(v14 + 96);
        if (v15)
          WebCore::InspectorCanvasAgent::recordAction(v15, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v19, v18);
      }
    }
    v16 = v19;
    v19 = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v13);
      else
        *(_DWORD *)v16 -= 2;
    }
  }
  v10 = *(unsigned int *)(v9 + 112);
  if ((_DWORD)v10 == -1)
    goto LABEL_16;
  if ((_DWORD)v10)
  {
    ((void (*)(_QWORD *, uint64_t, JSC::CallFrame *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v10])(v18, v9 + 56, a3);
LABEL_16:
    *(_DWORD *)(v9 + 112) = 0;
  }
  return 10;
}

_BYTE *WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_fill(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSOffscreenCanvasRenderingContext2D *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  char **v12;
  BOOL v13;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BOOL4 v18;
  char **v19;
  BOOL v20;
  _QWORD v23[2];

  v8 = *((_QWORD *)this + 7);
  v23[0] = v8;
  v9 = *((_QWORD *)a2 + 5);
  if ((v9 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)v23, "OffscreenCanvasRenderingContext2D", "fill");
  v10 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v12 != 0);
  }
  if (!v11)
    return WebCore::throwThisTypeError((int)this, (int)v23, "OffscreenCanvasRenderingContext2D", "fill");
  v23[1] = v8;
  v15 = *((int *)a2 + 8) - 1;
  if (v15 >= 2)
    v15 = 2;
  if (v15 == 2)
    return (_BYTE *)WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_fill2Body(this, a2, *(JSC::CallFrame **)(v9 + 24), a4, a5, a6, a7, a8);
  if (v15 != 1)
    return (_BYTE *)WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_fill1Body((JSC::VM **)this, a2, *(JSC::CallFrame **)(v9 + 24), a4);
  v16 = *((_QWORD *)a2 + 6);
  if (v16 == 10 || (v16 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v16 + 5) < 0x17u)
    return (_BYTE *)WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_fill1Body((JSC::VM **)this, a2, *(JSC::CallFrame **)(v9 + 24), a4);
  v17 = *(unsigned int *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x4C);
  v18 = *(_DWORD *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x4C) != 0;
  v19 = (char **)(16 * v17);
  if ((_DWORD)v17)
    v20 = v19 == &WebCore::JSPath2D::s_info;
  else
    v20 = 1;
  if (!v20)
  {
    do
    {
      v19 = (char **)v19[2];
      v18 = v19 != 0;
    }
    while (v19 != &WebCore::JSPath2D::s_info && v19 != 0);
  }
  if (v18)
    return (_BYTE *)WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_fill2Body(this, a2, *(JSC::CallFrame **)(v9 + 24), a4, a5, a6, a7, a8);
  else
    return (_BYTE *)WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_fill1Body((JSC::VM **)this, a2, *(JSC::CallFrame **)(v9 + 24), a4);
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_stroke(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  char **v12;
  BOOL v13;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  WebCore::InspectorInstrumentation *v25;
  WebCore::ScriptExecutionContext *v26;
  uint64_t v27;
  uint64_t v28;
  WTF::StringImpl *v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  WebCore::InspectorCanvasAgent *v33;
  WebCore::InspectorInstrumentation *v34;
  WebCore::ScriptExecutionContext *v35;
  uint64_t v36;
  uint64_t v37;
  _DWORD *v38;
  WTF::StringImpl *v39;
  uint64_t v40;
  WTF::StringImpl *v41[2];
  WTF::StringImpl *v42;
  _QWORD v43[2];
  char v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v8 = *((_QWORD *)this + 7);
  v40 = v8;
  v9 = *((_QWORD *)a2 + 5);
  if ((v9 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v40, "OffscreenCanvasRenderingContext2D", "stroke");
  v10 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v12 != 0);
  }
  if (!v11)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v40, "OffscreenCanvasRenderingContext2D", "stroke");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v15 = *(_QWORD *)(v9 + 24);
    if (*(_BYTE *)(v15 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v43[0] = 0;
      v43[1] = 0;
      v25 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v15 + 32) + 144))(*(_QWORD *)(v15 + 32));
      if (v25)
      {
        v27 = WebCore::InspectorInstrumentation::instrumentingAgents(v25, v26);
        if (v27)
        {
          v28 = *(_QWORD *)(v27 + 96);
          if (v28)
            WebCore::InspectorCanvasAgent::recordAction(v28, (WebCore::CanvasRenderingContext *)v15, (const WTF::StringImpl *)v41, v43);
        }
      }
      v29 = v41[0];
      v41[0] = 0;
      if (v29)
      {
        if (*(_DWORD *)v29 == 2)
          WTF::StringImpl::destroy(v29, v26);
        else
          *(_DWORD *)v29 -= 2;
      }
    }
    WebCore::CanvasRenderingContext2DBase::stroke((WebCore::CanvasRenderingContext2DBase *)v15);
    return 10;
  }
  else
  {
    v17 = *((_QWORD *)a2 + 6);
    v18 = *(_QWORD *)(v9 + 24);
    v43[0] = v8;
    if ((v17 & 0xFFFE000000000002) != 0)
      goto LABEL_26;
    v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v21 = (char **)(16 * v19);
    if ((_DWORD)v19)
      v22 = v21 == &WebCore::JSPath2D::s_info;
    else
      v22 = 1;
    if (!v22)
    {
      do
      {
        v21 = (char **)v21[2];
        v20 = v21 != 0;
      }
      while (v21 != &WebCore::JSPath2D::s_info && v21 != 0);
    }
    if (v20 && (v24 = *(_QWORD *)(v17 + 24)) != 0)
    {
      if (*(_BYTE *)(v18 + 25))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v18 + 32) + 144))(*(_QWORD *)(v18 + 32));
        if (v30
          && (v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31)) != 0
          && (v33 = *(WebCore::InspectorCanvasAgent **)(v32 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v33, (WebCore::CanvasRenderingContext *)v18, (WebCore::Path2D *)v24, (uint64_t)v43);
        }
        else
        {
          LOBYTE(v43[0]) = 0;
          v44 = 0;
        }
        v41[0] = (WTF::StringImpl *)v43;
        v41[1] = (WTF::StringImpl *)1;
        v34 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v18 + 32) + 144))(*(_QWORD *)(v18 + 32));
        if (v34)
        {
          v36 = WebCore::InspectorInstrumentation::instrumentingAgents(v34, v35);
          if (v36)
          {
            v37 = *(_QWORD *)(v36 + 96);
            if (v37)
              WebCore::InspectorCanvasAgent::recordAction(v37, (WebCore::CanvasRenderingContext *)v18, (const WTF::StringImpl *)&v42, v41);
          }
        }
        if (v44)
        {
          v38 = (_DWORD *)v43[0];
          v43[0] = 0;
          if (v38)
          {
            if (*v38 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v38;
          }
        }
        v39 = v42;
        v42 = 0;
        if (v39)
        {
          if (*(_DWORD *)v39 == 2)
            WTF::StringImpl::destroy(v39, v35);
          else
            *(_DWORD *)v39 -= 2;
        }
      }
      WebCore::CanvasRenderingContext2DBase::strokeInternal((float32x2_t *)v18, (const WebCore::Path *)(v24 + 8));
      return 10;
    }
    else
    {
LABEL_26:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v43, 0, "path", 5, "OffscreenCanvasRenderingContext2D", 34, a8, "stroke", 7, "Path2D", 7);
      return 0;
    }
  }
}

_BYTE *WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_clip(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSOffscreenCanvasRenderingContext2D *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  char **v12;
  BOOL v13;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BOOL4 v18;
  char **v19;
  BOOL v20;
  _QWORD v23[2];

  v8 = *((_QWORD *)this + 7);
  v23[0] = v8;
  v9 = *((_QWORD *)a2 + 5);
  if ((v9 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)v23, "OffscreenCanvasRenderingContext2D", "clip");
  v10 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v12 != 0);
  }
  if (!v11)
    return WebCore::throwThisTypeError((int)this, (int)v23, "OffscreenCanvasRenderingContext2D", "clip");
  v23[1] = v8;
  v15 = *((int *)a2 + 8) - 1;
  if (v15 >= 2)
    v15 = 2;
  if (v15 == 2)
    return (_BYTE *)WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_clip2Body(this, a2, *(JSC::CallFrame **)(v9 + 24), a4, a5, a6, a7, a8);
  if (v15 != 1)
    return (_BYTE *)WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_clip1Body((JSC::VM **)this, a2, *(JSC::CallFrame **)(v9 + 24), a4);
  v16 = *((_QWORD *)a2 + 6);
  if (v16 == 10 || (v16 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v16 + 5) < 0x17u)
    return (_BYTE *)WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_clip1Body((JSC::VM **)this, a2, *(JSC::CallFrame **)(v9 + 24), a4);
  v17 = *(unsigned int *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x4C);
  v18 = *(_DWORD *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x4C) != 0;
  v19 = (char **)(16 * v17);
  if ((_DWORD)v17)
    v20 = v19 == &WebCore::JSPath2D::s_info;
  else
    v20 = 1;
  if (!v20)
  {
    do
    {
      v19 = (char **)v19[2];
      v18 = v19 != 0;
    }
    while (v19 != &WebCore::JSPath2D::s_info && v19 != 0);
  }
  if (v18)
    return (_BYTE *)WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_clip2Body(this, a2, *(JSC::CallFrame **)(v9 + 24), a4, a5, a6, a7, a8);
  else
    return (_BYTE *)WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_clip1Body((JSC::VM **)this, a2, *(JSC::CallFrame **)(v9 + 24), a4);
}

_BYTE *WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_isPointInPath(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSOffscreenCanvasRenderingContext2D *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  unint64_t v16;
  JSValue v17;
  uint64_t v19;
  uint64_t v20;
  _BOOL4 v21;
  char **v22;
  BOOL v23;
  JSC::VM *v25;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "OffscreenCanvasRenderingContext2D", "isPointInPath");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v13 != 0);
  }
  if (!v12)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "OffscreenCanvasRenderingContext2D", "isPointInPath");
  v16 = *((int *)a2 + 8) - 1;
  if (v16 >= 4)
    v16 = 4;
  switch(v16)
  {
    case 4uLL:
      return (_BYTE *)WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_isPointInPath2Body(this, a2, *(JSC::CallFrame **)(v10 + 24), a4, a5, a6, a7, a8);
    case 3uLL:
      v19 = *((_QWORD *)a2 + 6);
      if ((v19 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v19 + 5) < 0x17u)
        return (_BYTE *)WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_isPointInPath1Body(this, a2, *(JSC::CallFrame **)(v10 + 24), a4);
      v20 = *(unsigned int *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C);
      v21 = *(_DWORD *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C) != 0;
      v22 = (char **)(16 * v20);
      if ((_DWORD)v20)
        v23 = v22 == &WebCore::JSPath2D::s_info;
      else
        v23 = 1;
      if (!v23)
      {
        do
        {
          v22 = (char **)v22[2];
          v21 = v22 != 0;
        }
        while (v22 != &WebCore::JSPath2D::s_info && v22 != 0);
      }
      if (!v21)
        return (_BYTE *)WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_isPointInPath1Body(this, a2, *(JSC::CallFrame **)(v10 + 24), a4);
      return (_BYTE *)WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_isPointInPath2Body(this, a2, *(JSC::CallFrame **)(v10 + 24), a4, a5, a6, a7, a8);
    case 2uLL:
      return (_BYTE *)WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_isPointInPath1Body(this, a2, *(JSC::CallFrame **)(v10 + 24), a4);
  }
  v17.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
  return (_BYTE *)JSC::VM::throwException(v9, this, v17);
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_isPointInStroke(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BOOL4 v28;
  char **v29;
  BOOL v30;
  JSValue v32;
  uint64_t v33;
  unint64_t v34;
  double v35;
  unint64_t v36;
  JSC::VM *v37;
  double v38;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  WebCore::InspectorCanvasAgent *v42;
  WebCore::InspectorInstrumentation *v43;
  WebCore::ScriptExecutionContext *v44;
  uint64_t v45;
  WebCore::InspectorCanvasAgent *v46;
  WebCore::InspectorInstrumentation *v47;
  WebCore::ScriptExecutionContext *v48;
  uint64_t v49;
  uint64_t v50;
  _DWORD *v51;
  _DWORD *v52;
  WTF::StringImpl *v53;
  WebCore::InspectorInstrumentation *v54;
  WebCore::ScriptExecutionContext *v55;
  uint64_t v56;
  WebCore::InspectorCanvasAgent *v57;
  WebCore::InspectorInstrumentation *v58;
  WebCore::ScriptExecutionContext *v59;
  uint64_t v60;
  WebCore::InspectorCanvasAgent *v61;
  WebCore::InspectorInstrumentation *v62;
  WebCore::ScriptExecutionContext *v63;
  uint64_t v64;
  WebCore::InspectorCanvasAgent *v65;
  WebCore::InspectorInstrumentation *v66;
  WebCore::ScriptExecutionContext *v67;
  uint64_t v68;
  uint64_t v69;
  _DWORD *v70;
  _DWORD *v71;
  _DWORD *v72;
  WTF::StringImpl *v73;
  double v74;
  double v75;
  double v76;
  double v77;
  JSC::VM *v78;
  _QWORD *v79;
  uint64_t v80;
  WTF::StringImpl *v81;
  _QWORD v82[2];
  char v83;
  _QWORD v84[2];
  char v85;
  _DWORD *v86;
  char v87;
  uint64_t v88;

  v88 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v78 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v78, "OffscreenCanvasRenderingContext2D", "isPointInStroke");
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v14 != 0);
  }
  if (!v13)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v78, "OffscreenCanvasRenderingContext2D", "isPointInStroke");
  v17 = *((int *)a2 + 8) - 1;
  if (v17 >= 3)
    v17 = 3;
  if (v17 == 3)
  {
    v25 = *(_QWORD *)(v10 + 24);
    v26 = *((_QWORD *)a2 + 6);
    v82[0] = v9;
    if ((v26 & 0xFFFE000000000002) != 0)
      goto LABEL_39;
    v27 = *(unsigned int *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0x4C);
    v28 = *(_DWORD *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0x4C) != 0;
    v29 = (char **)(16 * v27);
    if ((_DWORD)v27)
      v30 = v29 == &WebCore::JSPath2D::s_info;
    else
      v30 = 1;
    if (!v30)
    {
      do
      {
        v29 = (char **)v29[2];
        v28 = v29 != 0;
      }
      while (v29 != &WebCore::JSPath2D::s_info && v29 != 0);
    }
    if (v28 && (v33 = *(_QWORD *)(v26 + 24)) != 0)
    {
      v34 = *((_QWORD *)a2 + 7);
      v82[0] = v34;
      if (v34 >= 0xFFFE000000000000)
      {
        v35 = (double)(int)v34;
      }
      else if (v34 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v82, this);
        v35 = v76;
      }
      else
      {
        *(_QWORD *)&v35 = v34 - 0x2000000000000;
      }
      if (*((_DWORD *)v9 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v9))
      {
        return 0;
      }
      else
      {
        v36 = *((_QWORD *)a2 + 8);
        v82[0] = v36;
        v37 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v36 >= 0xFFFE000000000000)
        {
          v38 = (double)(int)v36;
        }
        else if (v36 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v82, this);
          v38 = v77;
        }
        else
        {
          *(_QWORD *)&v38 = v36 - 0x2000000000000;
        }
        if (*((_DWORD *)v37 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v37))
        {
          return 0;
        }
        else
        {
          if (*(_BYTE *)(v25 + 25))
          {
            WTF::StringImpl::createWithoutCopyingNonEmpty();
            v54 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v25 + 32)
                                                                                         + 144))(*(_QWORD *)(v25 + 32));
            if (v54
              && (v56 = WebCore::InspectorInstrumentation::instrumentingAgents(v54, v55)) != 0
              && (v57 = *(WebCore::InspectorCanvasAgent **)(v56 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v57, (WebCore::CanvasRenderingContext *)v25, (WebCore::Path2D *)v33, (uint64_t)v82);
            }
            else
            {
              LOBYTE(v82[0]) = 0;
              v83 = 0;
            }
            v58 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v25 + 32)
                                                                                         + 144))(*(_QWORD *)(v25 + 32));
            if (v58
              && (v60 = WebCore::InspectorInstrumentation::instrumentingAgents(v58, v59)) != 0
              && (v61 = *(WebCore::InspectorCanvasAgent **)(v60 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v61, (WebCore::CanvasRenderingContext *)v25, v35, (uint64_t)v84);
            }
            else
            {
              LOBYTE(v84[0]) = 0;
              v85 = 0;
            }
            v62 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v25 + 32)
                                                                                         + 144))(*(_QWORD *)(v25 + 32));
            if (v62
              && (v64 = WebCore::InspectorInstrumentation::instrumentingAgents(v62, v63)) != 0
              && (v65 = *(WebCore::InspectorCanvasAgent **)(v64 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v65, (WebCore::CanvasRenderingContext *)v25, v38, (uint64_t)&v86);
            }
            else
            {
              LOBYTE(v86) = 0;
              v87 = 0;
            }
            v79 = v82;
            v80 = 3;
            v66 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v25 + 32)
                                                                                         + 144))(*(_QWORD *)(v25 + 32));
            if (v66)
            {
              v68 = WebCore::InspectorInstrumentation::instrumentingAgents(v66, v67);
              if (v68)
              {
                v69 = *(_QWORD *)(v68 + 96);
                if (v69)
                  WebCore::InspectorCanvasAgent::recordAction(v69, (WebCore::CanvasRenderingContext *)v25, (const WTF::StringImpl *)&v81, &v79);
              }
            }
            if (v87)
            {
              v70 = v86;
              v86 = 0;
              if (v70)
              {
                if (*v70 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v70;
              }
            }
            if (v85)
            {
              v71 = (_DWORD *)v84[0];
              v84[0] = 0;
              if (v71)
              {
                if (*v71 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v71;
              }
            }
            if (v83)
            {
              v72 = (_DWORD *)v82[0];
              v82[0] = 0;
              if (v72)
              {
                if (*v72 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v72;
              }
            }
            v73 = v81;
            v81 = 0;
            if (v73)
            {
              if (*(_DWORD *)v73 == 2)
                WTF::StringImpl::destroy(v73, v67);
              else
                *(_DWORD *)v73 -= 2;
            }
          }
          if (WebCore::CanvasRenderingContext2DBase::isPointInStrokeInternal((WebCore::CanvasRenderingContext2DBase *)v25, (const WebCore::Path *)(v33 + 8), v35, v38))return 7;
          else
            return 6;
        }
      }
    }
    else
    {
LABEL_39:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v82, 0, "path", 5, "OffscreenCanvasRenderingContext2D", 34, a8, "isPointInStroke", 16, "Path2D", 7);
      return 0;
    }
  }
  else if (v17 == 2)
  {
    v18 = *(_QWORD *)(v10 + 24);
    v19 = *((_QWORD *)a2 + 6);
    v82[0] = v19;
    if (v19 >= 0xFFFE000000000000)
    {
      v20 = (double)(int)v19;
    }
    else if (v19 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v82, this);
      v20 = v74;
    }
    else
    {
      *(_QWORD *)&v20 = v19 - 0x2000000000000;
    }
    if (*((_DWORD *)v9 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v9))
    {
      return 0;
    }
    else
    {
      v21 = *((_QWORD *)a2 + 7);
      v82[0] = v21;
      v22 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v21 >= 0xFFFE000000000000)
      {
        v23 = (double)(int)v21;
      }
      else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v82, this);
        v23 = v75;
      }
      else
      {
        *(_QWORD *)&v23 = v21 - 0x2000000000000;
      }
      if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
      {
        return 0;
      }
      else
      {
        if (*(_BYTE *)(v18 + 25))
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v18 + 32) + 144))(*(_QWORD *)(v18 + 32));
          if (v39
            && (v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40)) != 0
            && (v42 = *(WebCore::InspectorCanvasAgent **)(v41 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v42, (WebCore::CanvasRenderingContext *)v18, v20, (uint64_t)v82);
          }
          else
          {
            LOBYTE(v82[0]) = 0;
            v83 = 0;
          }
          v43 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v18 + 32) + 144))(*(_QWORD *)(v18 + 32));
          if (v43
            && (v45 = WebCore::InspectorInstrumentation::instrumentingAgents(v43, v44)) != 0
            && (v46 = *(WebCore::InspectorCanvasAgent **)(v45 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v46, (WebCore::CanvasRenderingContext *)v18, v23, (uint64_t)v84);
          }
          else
          {
            LOBYTE(v84[0]) = 0;
            v85 = 0;
          }
          v79 = v82;
          v80 = 2;
          v47 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v18 + 32) + 144))(*(_QWORD *)(v18 + 32));
          if (v47)
          {
            v49 = WebCore::InspectorInstrumentation::instrumentingAgents(v47, v48);
            if (v49)
            {
              v50 = *(_QWORD *)(v49 + 96);
              if (v50)
                WebCore::InspectorCanvasAgent::recordAction(v50, (WebCore::CanvasRenderingContext *)v18, (const WTF::StringImpl *)&v81, &v79);
            }
          }
          if (v85)
          {
            v51 = (_DWORD *)v84[0];
            v84[0] = 0;
            if (v51)
            {
              if (*v51 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v51;
            }
          }
          if (v83)
          {
            v52 = (_DWORD *)v82[0];
            v82[0] = 0;
            if (v52)
            {
              if (*v52 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v52;
            }
          }
          v53 = v81;
          v81 = 0;
          if (v53)
          {
            if (*(_DWORD *)v53 == 2)
              WTF::StringImpl::destroy(v53, v48);
            else
              *(_DWORD *)v53 -= 2;
          }
        }
        if (WebCore::CanvasRenderingContext2DBase::isPointInStrokeInternal((WebCore::CanvasRenderingContext2DBase *)v18, (const WebCore::Path *)(v18 + 48), v20, v23))return 7;
        else
          return 6;
      }
    }
  }
  else
  {
    v32.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v32);
  }
}

_BYTE *WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_createLinearGradient(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  _DWORD *v16;
  double v17;
  unint64_t v18;
  _DWORD *v19;
  double v20;
  unint64_t v21;
  _DWORD *v22;
  double v23;
  JSC::JSGlobalObject *v24;
  float v25;
  float v26;
  float v27;
  float v28;
  WebCore::CanvasGradient *v29;
  WebCore::CanvasGradient *v30;
  void *v31;
  unint64_t v32;
  uint64_t v33;
  WTF *v35;
  void *v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  JSValue v40;
  WebCore::InspectorInstrumentation *v41;
  WebCore::ScriptExecutionContext *v42;
  uint64_t v43;
  WebCore::InspectorCanvasAgent *v44;
  WebCore::InspectorInstrumentation *v45;
  WebCore::ScriptExecutionContext *v46;
  uint64_t v47;
  WebCore::InspectorCanvasAgent *v48;
  WebCore::InspectorInstrumentation *v49;
  WebCore::ScriptExecutionContext *v50;
  uint64_t v51;
  WebCore::InspectorCanvasAgent *v52;
  WebCore::InspectorInstrumentation *v53;
  WebCore::ScriptExecutionContext *v54;
  uint64_t v55;
  WebCore::InspectorCanvasAgent *v56;
  WebCore::InspectorInstrumentation *v57;
  WebCore::ScriptExecutionContext *v58;
  uint64_t v59;
  uint64_t v60;
  _DWORD *v61;
  _DWORD *v62;
  _DWORD *v63;
  _DWORD *v64;
  WTF::StringImpl *v65;
  double v66;
  _DWORD *v67;
  double v68;
  _DWORD *v69;
  double v70;
  double v71;
  uint64_t v72;
  JSC::VM *v73;
  _QWORD *v74;
  WTF::StringImpl *v75;
  WTF::StringImpl *v76;
  _QWORD v77[2];
  int v78;
  _DWORD *v79;
  char v80;
  _DWORD *v81;
  char v82;
  _DWORD *v83;
  char v84;
  uint64_t v85;

  v85 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)this + 7);
  v72 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v72, "OffscreenCanvasRenderingContext2D", "createLinearGradient");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v72, "OffscreenCanvasRenderingContext2D", "createLinearGradient");
  v73 = (JSC::VM *)v4;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v40.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException((JSC::VM *)v4, this, v40);
  }
  v12 = *(_QWORD *)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  v77[0] = v13;
  v74 = (_QWORD *)v4;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v77, this);
    v14 = v66;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v15 = *((_QWORD *)a2 + 7);
  v77[0] = v15;
  v16 = (_DWORD *)*((_QWORD *)this + 7);
  v74 = v16;
  if (v15 >= 0xFFFE000000000000)
  {
    v17 = (double)(int)v15;
  }
  else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v67 = v16;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v77, this);
    v16 = v67;
    v17 = v68;
  }
  else
  {
    *(_QWORD *)&v17 = v15 - 0x2000000000000;
  }
  if (v16[20] && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v16) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v17 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v18 = *((_QWORD *)a2 + 8);
  v77[0] = v18;
  v19 = (_DWORD *)*((_QWORD *)this + 7);
  v74 = v19;
  if (v18 >= 0xFFFE000000000000)
  {
    v20 = (double)(int)v18;
  }
  else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v69 = v19;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v77, this);
    v19 = v69;
    v20 = v70;
  }
  else
  {
    *(_QWORD *)&v20 = v18 - 0x2000000000000;
  }
  if (v19[20] && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v19) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v20 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v21 = *((_QWORD *)a2 + 9);
  v77[0] = v21;
  v22 = (_DWORD *)*((_QWORD *)this + 7);
  v74 = v22;
  if (v21 >= 0xFFFE000000000000)
  {
    v23 = (double)(int)v21;
  }
  else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v77, this);
    v23 = v71;
  }
  else
  {
    *(_QWORD *)&v23 = v21 - 0x2000000000000;
  }
  if (v22[20] && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v22) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v23 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  if (*(_BYTE *)(v12 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v76 = (WTF::StringImpl *)v77[0];
    v41 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
    if (v41
      && (v43 = WebCore::InspectorInstrumentation::instrumentingAgents(v41, v42)) != 0
      && (v44 = *(WebCore::InspectorCanvasAgent **)(v43 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v44, (WebCore::CanvasRenderingContext *)v12, v14, (uint64_t)v77);
    }
    else
    {
      LOBYTE(v77[0]) = 0;
      LOBYTE(v78) = 0;
    }
    v45 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
    if (v45
      && (v47 = WebCore::InspectorInstrumentation::instrumentingAgents(v45, v46)) != 0
      && (v48 = *(WebCore::InspectorCanvasAgent **)(v47 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v48, (WebCore::CanvasRenderingContext *)v12, v17, (uint64_t)&v79);
    }
    else
    {
      LOBYTE(v79) = 0;
      v80 = 0;
    }
    v49 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
    if (v49
      && (v51 = WebCore::InspectorInstrumentation::instrumentingAgents(v49, v50)) != 0
      && (v52 = *(WebCore::InspectorCanvasAgent **)(v51 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v52, (WebCore::CanvasRenderingContext *)v12, v20, (uint64_t)&v81);
    }
    else
    {
      LOBYTE(v81) = 0;
      v82 = 0;
    }
    v53 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
    if (v53
      && (v55 = WebCore::InspectorInstrumentation::instrumentingAgents(v53, v54)) != 0
      && (v56 = *(WebCore::InspectorCanvasAgent **)(v55 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v56, (WebCore::CanvasRenderingContext *)v12, v23, (uint64_t)&v83);
    }
    else
    {
      LOBYTE(v83) = 0;
      v84 = 0;
    }
    v74 = v77;
    v75 = (WTF::StringImpl *)4;
    v57 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
    if (v57)
    {
      v59 = WebCore::InspectorInstrumentation::instrumentingAgents(v57, v58);
      if (v59)
      {
        v60 = *(_QWORD *)(v59 + 96);
        if (v60)
          WebCore::InspectorCanvasAgent::recordAction(v60, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v76, &v74);
      }
    }
    if (v84)
    {
      v61 = v83;
      v83 = 0;
      if (v61)
      {
        if (*v61 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v61;
      }
    }
    if (v82)
    {
      v62 = v81;
      v81 = 0;
      if (v62)
      {
        if (*v62 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v62;
      }
    }
    if (v80)
    {
      v63 = v79;
      v79 = 0;
      if (v63)
      {
        if (*v63 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v63;
      }
    }
    if ((_BYTE)v78)
    {
      v64 = (_DWORD *)v77[0];
      v77[0] = 0;
      if (v64)
      {
        if (*v64 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v64;
      }
    }
    v65 = v76;
    v76 = 0;
    if (v65)
    {
      if (*(_DWORD *)v65 == 2)
        WTF::StringImpl::destroy(v65, v58);
      else
        *(_DWORD *)v65 -= 2;
    }
  }
  v24 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v25 = v14;
  if ((LODWORD(v25) & 0x7FFFFFFFu) > 0x7F7FFFFF
    || (v26 = v17, (LODWORD(v26) & 0x7FFFFFFFu) > 0x7F7FFFFF)
    || (v27 = v20, (LODWORD(v27) & 0x7FFFFFFFu) > 0x7F7FFFFF)
    || (v28 = v23, (LODWORD(v28) & 0x7FFFFFFFu) >= 0x7F800000))
  {
    LOBYTE(v77[0]) = 6;
    v78 = 1;
    LOBYTE(v74) = 6;
    v77[1] = 0;
    v75 = 0;
    if (!*(_QWORD *)(v4 + 16))
    {
      WebCore::propagateExceptionSlowPath(this, &v73, (unsigned __int8 *)&v74);
      v38 = v75;
      v75 = 0;
      if (v38)
      {
        if (*(_DWORD *)v38 == 2)
          WTF::StringImpl::destroy(v38, v37);
        else
          *(_DWORD *)v38 -= 2;
      }
    }
    v32 = 0;
    v33 = 1;
  }
  else
  {
    *(float *)&v74 = v14;
    *((float *)&v74 + 1) = v17;
    *(float *)&v76 = v20;
    *((float *)&v76 + 1) = v23;
    v29 = (WebCore::CanvasGradient *)WTF::fastMalloc((WTF *)0x18);
    WebCore::CanvasGradient::CanvasGradient(v29, (const WebCore::FloatPoint *)&v74, (const WebCore::FloatPoint *)&v76, (WebCore::CanvasRenderingContext *)v12);
    v78 = 0;
    v77[0] = 0;
    v32 = WebCore::toJS(this, v24, v29, v30);
    if (*(_DWORD *)v29 == 1)
    {
      WebCore::CanvasGradient::~CanvasGradient(v29, v31);
      WTF::fastFree(v35, v36);
      v33 = 0;
    }
    else
    {
      v33 = 0;
      --*(_DWORD *)v29;
    }
  }
  ((void (*)(_QWORD **, _QWORD *))off_1E32C2F90[v33])(&v74, v77);
  return (_BYTE *)v32;
}

_BYTE *WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_createRadialGradient(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::CanvasRenderingContext *v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  WebCore::CanvasRenderingContext *v16;
  double v17;
  unint64_t v18;
  WebCore::CanvasRenderingContext *v19;
  double v20;
  unint64_t v21;
  WebCore::CanvasRenderingContext *v22;
  double v23;
  unint64_t v24;
  WebCore::CanvasRenderingContext *v25;
  double v26;
  unint64_t v27;
  WebCore::CanvasRenderingContext *v28;
  double v29;
  JSC::JSGlobalObject *v30;
  float v31;
  float v32;
  float v33;
  float v34;
  float v35;
  float v36;
  char v37;
  WebCore::CanvasRenderingContext *v38;
  WebCore::CanvasGradient *v39;
  float v40;
  float v41;
  WebCore::CanvasGradient *v42;
  void *v43;
  unint64_t v44;
  uint64_t v45;
  WTF::StringImpl *v46;
  WTF::StringImpl *v47;
  WTF *v50;
  void *v51;
  JSValue v52;
  WebCore::CanvasRenderingContext *v53;
  char hasExceptionsAfterHandlingTraps;
  WebCore::CanvasRenderingContext *v55;
  char v56;
  WebCore::CanvasRenderingContext *v57;
  char v58;
  WebCore::CanvasRenderingContext *v59;
  char v60;
  WebCore::CanvasRenderingContext *v61;
  char v62;
  JSC::VM *v63;
  WebCore::CanvasRenderingContext *v64;
  char v65;
  WebCore::CanvasRenderingContext *v66;
  WebCore::InspectorInstrumentation *v67;
  WebCore::ScriptExecutionContext *v68;
  uint64_t v69;
  WebCore::InspectorCanvasAgent *v70;
  WebCore::InspectorInstrumentation *v71;
  WebCore::ScriptExecutionContext *v72;
  uint64_t v73;
  WebCore::InspectorCanvasAgent *v74;
  WebCore::InspectorInstrumentation *v75;
  WebCore::ScriptExecutionContext *v76;
  uint64_t v77;
  WebCore::InspectorCanvasAgent *v78;
  WebCore::InspectorInstrumentation *v79;
  WebCore::ScriptExecutionContext *v80;
  uint64_t v81;
  WebCore::InspectorCanvasAgent *v82;
  WebCore::InspectorInstrumentation *v83;
  WebCore::ScriptExecutionContext *v84;
  uint64_t v85;
  WebCore::InspectorCanvasAgent *v86;
  WebCore::InspectorInstrumentation *v87;
  WebCore::ScriptExecutionContext *v88;
  uint64_t v89;
  WebCore::InspectorCanvasAgent *v90;
  WebCore::InspectorInstrumentation *v91;
  WebCore::ScriptExecutionContext *v92;
  uint64_t v93;
  uint64_t v94;
  _DWORD *v95;
  _DWORD *v96;
  _DWORD *v97;
  _DWORD *v98;
  _DWORD *v99;
  _DWORD *v100;
  WTF::StringImpl *v101;
  WebCore::CanvasRenderingContext *v102;
  double v103;
  WebCore::CanvasRenderingContext *v104;
  WebCore::CanvasRenderingContext *v105;
  double v106;
  WebCore::CanvasRenderingContext *v107;
  WebCore::CanvasRenderingContext *v108;
  double v109;
  WebCore::CanvasRenderingContext *v110;
  WebCore::CanvasRenderingContext *v111;
  double v112;
  WebCore::CanvasRenderingContext *v113;
  double v114;
  double v115;
  WebCore::CanvasRenderingContext *v116;
  WebCore::CanvasRenderingContext *v117;
  uint64_t v118;
  JSC::VM *v119;
  WebCore::CanvasRenderingContext *v120;
  WTF::StringImpl *v121;
  WTF::StringImpl *v122;
  _QWORD v123[2];
  int v124;
  _DWORD *v125;
  char v126;
  _DWORD *v127;
  char v128;
  _DWORD *v129;
  char v130;
  _DWORD *v131;
  char v132;
  _DWORD *v133;
  char v134;
  uint64_t v135;

  v135 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)this + 7);
  v118 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v118, "OffscreenCanvasRenderingContext2D", "createRadialGradient");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v118, "OffscreenCanvasRenderingContext2D", "createRadialGradient");
  v119 = (JSC::VM *)v4;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 5)
  {
    v52.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException((JSC::VM *)v4, this, v52);
  }
  v12 = *(WebCore::CanvasRenderingContext **)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  v123[0] = v13;
  v120 = (WebCore::CanvasRenderingContext *)v4;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v102 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, this);
    v12 = v102;
    v14 = v103;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80))
  {
    v53 = v12;
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
    v12 = v53;
    if ((hasExceptionsAfterHandlingTraps & 1) != 0)
      return 0;
  }
  if ((*(_QWORD *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v15 = *((_QWORD *)a2 + 7);
  v123[0] = v15;
  v16 = (WebCore::CanvasRenderingContext *)*((_QWORD *)this + 7);
  v120 = v16;
  if (v15 >= 0xFFFE000000000000)
  {
    v17 = (double)(int)v15;
  }
  else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v104 = v16;
    v105 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, this);
    v12 = v105;
    v16 = v104;
    v17 = v106;
  }
  else
  {
    *(_QWORD *)&v17 = v15 - 0x2000000000000;
  }
  if (*((_DWORD *)v16 + 20))
  {
    v55 = v12;
    v56 = JSC::VM::hasExceptionsAfterHandlingTraps(v16);
    v12 = v55;
    if ((v56 & 1) != 0)
      return 0;
  }
  if ((*(_QWORD *)&v17 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v18 = *((_QWORD *)a2 + 8);
  v123[0] = v18;
  v19 = (WebCore::CanvasRenderingContext *)*((_QWORD *)this + 7);
  v120 = v19;
  if (v18 >= 0xFFFE000000000000)
  {
    v20 = (double)(int)v18;
  }
  else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v107 = v19;
    v108 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, this);
    v12 = v108;
    v19 = v107;
    v20 = v109;
  }
  else
  {
    *(_QWORD *)&v20 = v18 - 0x2000000000000;
  }
  if (*((_DWORD *)v19 + 20))
  {
    v57 = v12;
    v58 = JSC::VM::hasExceptionsAfterHandlingTraps(v19);
    v12 = v57;
    if ((v58 & 1) != 0)
      return 0;
  }
  if ((*(_QWORD *)&v20 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v21 = *((_QWORD *)a2 + 9);
  v123[0] = v21;
  v22 = (WebCore::CanvasRenderingContext *)*((_QWORD *)this + 7);
  v120 = v22;
  if (v21 >= 0xFFFE000000000000)
  {
    v23 = (double)(int)v21;
  }
  else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v110 = v22;
    v111 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, this);
    v12 = v111;
    v22 = v110;
    v23 = v112;
  }
  else
  {
    *(_QWORD *)&v23 = v21 - 0x2000000000000;
  }
  if (*((_DWORD *)v22 + 20))
  {
    v59 = v12;
    v60 = JSC::VM::hasExceptionsAfterHandlingTraps(v22);
    v12 = v59;
    if ((v60 & 1) != 0)
      return 0;
  }
  if ((*(_QWORD *)&v23 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v24 = *((_QWORD *)a2 + 10);
  v123[0] = v24;
  v25 = (WebCore::CanvasRenderingContext *)*((_QWORD *)this + 7);
  v120 = v25;
  if (v24 >= 0xFFFE000000000000)
  {
    v26 = (double)(int)v24;
  }
  else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v116 = v25;
    v113 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, this);
    v12 = v113;
    v25 = v116;
    v26 = v114;
  }
  else
  {
    *(_QWORD *)&v26 = v24 - 0x2000000000000;
  }
  if (*((_DWORD *)v25 + 20))
  {
    v61 = v12;
    v62 = JSC::VM::hasExceptionsAfterHandlingTraps(v25);
    v12 = v61;
    if ((v62 & 1) != 0)
      return 0;
  }
  if ((*(_QWORD *)&v26 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v27 = *((_QWORD *)a2 + 11);
  v123[0] = v27;
  v28 = (WebCore::CanvasRenderingContext *)*((_QWORD *)this + 7);
  v120 = v28;
  if (v27 >= 0xFFFE000000000000)
  {
    v29 = (double)(int)v27;
  }
  else if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v117 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, this);
    v12 = v117;
    v29 = v115;
  }
  else
  {
    *(_QWORD *)&v29 = v27 - 0x2000000000000;
  }
  if (*((_DWORD *)v28 + 20))
  {
    v63 = v28;
    v64 = v12;
    v65 = JSC::VM::hasExceptionsAfterHandlingTraps(v63);
    v12 = v64;
    if ((v65 & 1) != 0)
      return 0;
  }
  if ((*(_QWORD *)&v29 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  if (*((_BYTE *)v12 + 25))
  {
    v66 = v12;
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v122 = (WTF::StringImpl *)v123[0];
    v67 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD *))(**((_QWORD **)v66 + 4) + 144))(*((_QWORD **)v66 + 4));
    if (v67
      && (v69 = WebCore::InspectorInstrumentation::instrumentingAgents(v67, v68)) != 0
      && (v70 = *(WebCore::InspectorCanvasAgent **)(v69 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v70, v66, v14, (uint64_t)v123);
    }
    else
    {
      LOBYTE(v123[0]) = 0;
      LOBYTE(v124) = 0;
    }
    v71 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD *))(**((_QWORD **)v66 + 4) + 144))(*((_QWORD **)v66 + 4));
    if (v71
      && (v73 = WebCore::InspectorInstrumentation::instrumentingAgents(v71, v72)) != 0
      && (v74 = *(WebCore::InspectorCanvasAgent **)(v73 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v74, v66, v17, (uint64_t)&v125);
    }
    else
    {
      LOBYTE(v125) = 0;
      v126 = 0;
    }
    v75 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD *))(**((_QWORD **)v66 + 4) + 144))(*((_QWORD **)v66 + 4));
    if (v75
      && (v77 = WebCore::InspectorInstrumentation::instrumentingAgents(v75, v76)) != 0
      && (v78 = *(WebCore::InspectorCanvasAgent **)(v77 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v78, v66, v20, (uint64_t)&v127);
    }
    else
    {
      LOBYTE(v127) = 0;
      v128 = 0;
    }
    v79 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD *))(**((_QWORD **)v66 + 4) + 144))(*((_QWORD **)v66 + 4));
    if (v79
      && (v81 = WebCore::InspectorInstrumentation::instrumentingAgents(v79, v80)) != 0
      && (v82 = *(WebCore::InspectorCanvasAgent **)(v81 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v82, v66, v23, (uint64_t)&v129);
    }
    else
    {
      LOBYTE(v129) = 0;
      v130 = 0;
    }
    v83 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD *))(**((_QWORD **)v66 + 4) + 144))(*((_QWORD **)v66 + 4));
    if (v83
      && (v85 = WebCore::InspectorInstrumentation::instrumentingAgents(v83, v84)) != 0
      && (v86 = *(WebCore::InspectorCanvasAgent **)(v85 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v86, v66, v26, (uint64_t)&v131);
    }
    else
    {
      LOBYTE(v131) = 0;
      v132 = 0;
    }
    v87 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD *))(**((_QWORD **)v66 + 4) + 144))(*((_QWORD **)v66 + 4));
    if (v87
      && (v89 = WebCore::InspectorInstrumentation::instrumentingAgents(v87, v88)) != 0
      && (v90 = *(WebCore::InspectorCanvasAgent **)(v89 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v90, v66, v29, (uint64_t)&v133);
    }
    else
    {
      LOBYTE(v133) = 0;
      v134 = 0;
    }
    v120 = (WebCore::CanvasRenderingContext *)v123;
    v121 = (WTF::StringImpl *)6;
    v91 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD *))(**((_QWORD **)v66 + 4) + 144))(*((_QWORD **)v66 + 4));
    if (v91)
    {
      v93 = WebCore::InspectorInstrumentation::instrumentingAgents(v91, v92);
      if (v93)
      {
        v94 = *(_QWORD *)(v93 + 96);
        if (v94)
          WebCore::InspectorCanvasAgent::recordAction(v94, v66, (const WTF::StringImpl *)&v122, &v120);
      }
    }
    v12 = v66;
    if (v134)
    {
      v95 = v133;
      v133 = 0;
      if (v95)
      {
        if (*v95 == 1)
        {
          WTF::JSONImpl::Value::operator delete();
          v12 = v66;
        }
        else
        {
          --*v95;
        }
      }
    }
    if (v132)
    {
      v96 = v131;
      v131 = 0;
      if (v96)
      {
        if (*v96 == 1)
        {
          WTF::JSONImpl::Value::operator delete();
          v12 = v66;
        }
        else
        {
          --*v96;
        }
      }
    }
    if (v130)
    {
      v97 = v129;
      v129 = 0;
      if (v97)
      {
        if (*v97 == 1)
        {
          WTF::JSONImpl::Value::operator delete();
          v12 = v66;
        }
        else
        {
          --*v97;
        }
      }
    }
    if (v128)
    {
      v98 = v127;
      v127 = 0;
      if (v98)
      {
        if (*v98 == 1)
        {
          WTF::JSONImpl::Value::operator delete();
          v12 = v66;
        }
        else
        {
          --*v98;
        }
      }
    }
    if (v126)
    {
      v99 = v125;
      v125 = 0;
      if (v99)
      {
        if (*v99 == 1)
        {
          WTF::JSONImpl::Value::operator delete();
          v12 = v66;
        }
        else
        {
          --*v99;
        }
      }
    }
    if ((_BYTE)v124)
    {
      v100 = (_DWORD *)v123[0];
      v123[0] = 0;
      if (v100)
      {
        if (*v100 == 1)
        {
          WTF::JSONImpl::Value::operator delete();
          v12 = v66;
        }
        else
        {
          --*v100;
        }
      }
    }
    v101 = v122;
    v122 = 0;
    if (v101)
    {
      if (*(_DWORD *)v101 == 2)
      {
        WTF::StringImpl::destroy(v101, v92);
        v12 = v66;
      }
      else
      {
        *(_DWORD *)v101 -= 2;
      }
    }
  }
  v30 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v31 = v14;
  if ((LODWORD(v31) & 0x7FFFFFFFu) > 0x7F7FFFFF
    || (v32 = v17, (LODWORD(v32) & 0x7FFFFFFFu) > 0x7F7FFFFF)
    || (v33 = v20, (LODWORD(v33) & 0x7FFFFFFFu) > 0x7F7FFFFF)
    || (v34 = v23, (LODWORD(v34) & 0x7FFFFFFFu) > 0x7F7FFFFF)
    || (v35 = v26, (LODWORD(v35) & 0x7FFFFFFFu) > 0x7F7FFFFF)
    || (v36 = v29, (LODWORD(v36) & 0x7FFFFFFFu) > 0x7F7FFFFF))
  {
    v37 = 6;
LABEL_55:
    LOBYTE(v123[0]) = v37;
    v124 = 1;
    LOBYTE(v120) = v37;
    v123[1] = 0;
    v121 = 0;
    if (!*(_QWORD *)(v4 + 16))
    {
      WebCore::propagateExceptionSlowPath(this, &v119, (unsigned __int8 *)&v120);
      v47 = v121;
      v121 = 0;
      if (v47)
      {
        if (*(_DWORD *)v47 == 2)
          WTF::StringImpl::destroy(v47, v46);
        else
          *(_DWORD *)v47 -= 2;
      }
    }
    v44 = 0;
    v45 = 1;
    goto LABEL_60;
  }
  v37 = 0;
  if (v33 < 0.0 || v36 < 0.0)
    goto LABEL_55;
  v120 = (WebCore::CanvasRenderingContext *)__PAIR64__(LODWORD(v32), LODWORD(v31));
  *(float *)&v122 = v23;
  *((float *)&v122 + 1) = v26;
  v38 = v12;
  v39 = (WebCore::CanvasGradient *)WTF::fastMalloc((WTF *)0x18);
  v40 = v20;
  v41 = v29;
  WebCore::CanvasGradient::CanvasGradient(v39, (const WebCore::FloatPoint *)&v120, v40, (const WebCore::FloatPoint *)&v122, v41, v38);
  v124 = 0;
  v123[0] = 0;
  v44 = WebCore::toJS(this, v30, v39, v42);
  if (*(_DWORD *)v39 == 1)
  {
    WebCore::CanvasGradient::~CanvasGradient(v39, v43);
    WTF::fastFree(v50, v51);
    v45 = 0;
  }
  else
  {
    v45 = 0;
    --*(_DWORD *)v39;
  }
LABEL_60:
  ((void (*)(WebCore::CanvasRenderingContext **, _QWORD *))off_1E32C2F90[v45])(&v120, v123);
  return (_BYTE *)v44;
}

_BYTE *WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_createConicGradient(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  _DWORD *v16;
  double v17;
  unint64_t v18;
  _DWORD *v19;
  double v20;
  JSC::JSGlobalObject *v21;
  float v22;
  float v23;
  BOOL v24;
  float v25;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  unint64_t v29;
  uint64_t v30;
  float v32;
  WebCore::CanvasGradient *v33;
  WebCore::CanvasGradient *v34;
  void *v35;
  WTF *v36;
  void *v37;
  JSValue v39;
  WebCore::InspectorInstrumentation *v40;
  WebCore::ScriptExecutionContext *v41;
  uint64_t v42;
  WebCore::InspectorCanvasAgent *v43;
  WebCore::InspectorInstrumentation *v44;
  WebCore::ScriptExecutionContext *v45;
  uint64_t v46;
  WebCore::InspectorCanvasAgent *v47;
  WebCore::InspectorInstrumentation *v48;
  WebCore::ScriptExecutionContext *v49;
  uint64_t v50;
  WebCore::InspectorCanvasAgent *v51;
  WebCore::InspectorInstrumentation *v52;
  WebCore::ScriptExecutionContext *v53;
  uint64_t v54;
  uint64_t v55;
  _DWORD *v56;
  _DWORD *v57;
  _DWORD *v58;
  WTF::StringImpl *v59;
  double v60;
  _DWORD *v61;
  double v62;
  double v63;
  uint64_t v64;
  WTF::StringImpl *v65;
  JSC::VM *v66;
  _QWORD *v67;
  WTF::StringImpl *v68;
  _QWORD v69[2];
  int v70;
  _DWORD *v71;
  char v72;
  _DWORD *v73;
  char v74;
  uint64_t v75;

  v75 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)this + 7);
  v64 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v64, "OffscreenCanvasRenderingContext2D", "createConicGradient");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v64, "OffscreenCanvasRenderingContext2D", "createConicGradient");
  v66 = (JSC::VM *)v4;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v39.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException((JSC::VM *)v4, this, v39);
  }
  v12 = *(_QWORD *)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  v69[0] = v13;
  v67 = (_QWORD *)v4;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v69, this);
    v14 = v60;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v15 = *((_QWORD *)a2 + 7);
  v69[0] = v15;
  v16 = (_DWORD *)*((_QWORD *)this + 7);
  v67 = v16;
  if (v15 >= 0xFFFE000000000000)
  {
    v17 = (double)(int)v15;
  }
  else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v61 = v16;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v69, this);
    v16 = v61;
    v17 = v62;
  }
  else
  {
    *(_QWORD *)&v17 = v15 - 0x2000000000000;
  }
  if (v16[20] && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v16) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v17 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v18 = *((_QWORD *)a2 + 8);
  v69[0] = v18;
  v19 = (_DWORD *)*((_QWORD *)this + 7);
  v67 = v19;
  if (v18 >= 0xFFFE000000000000)
  {
    v20 = (double)(int)v18;
  }
  else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v69, this);
    v20 = v63;
  }
  else
  {
    *(_QWORD *)&v20 = v18 - 0x2000000000000;
  }
  if (v19[20] && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v19) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v20 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  if (*(_BYTE *)(v12 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v65 = (WTF::StringImpl *)v69[0];
    v40 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
    if (v40
      && (v42 = WebCore::InspectorInstrumentation::instrumentingAgents(v40, v41)) != 0
      && (v43 = *(WebCore::InspectorCanvasAgent **)(v42 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v43, (WebCore::CanvasRenderingContext *)v12, v14, (uint64_t)v69);
    }
    else
    {
      LOBYTE(v69[0]) = 0;
      LOBYTE(v70) = 0;
    }
    v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
    if (v44
      && (v46 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, v45)) != 0
      && (v47 = *(WebCore::InspectorCanvasAgent **)(v46 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v47, (WebCore::CanvasRenderingContext *)v12, v17, (uint64_t)&v71);
    }
    else
    {
      LOBYTE(v71) = 0;
      v72 = 0;
    }
    v48 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
    if (v48
      && (v50 = WebCore::InspectorInstrumentation::instrumentingAgents(v48, v49)) != 0
      && (v51 = *(WebCore::InspectorCanvasAgent **)(v50 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v51, (WebCore::CanvasRenderingContext *)v12, v20, (uint64_t)&v73);
    }
    else
    {
      LOBYTE(v73) = 0;
      v74 = 0;
    }
    v67 = v69;
    v68 = (WTF::StringImpl *)3;
    v52 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
    if (v52)
    {
      v54 = WebCore::InspectorInstrumentation::instrumentingAgents(v52, v53);
      if (v54)
      {
        v55 = *(_QWORD *)(v54 + 96);
        if (v55)
          WebCore::InspectorCanvasAgent::recordAction(v55, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v65, &v67);
      }
    }
    if (v74)
    {
      v56 = v73;
      v73 = 0;
      if (v56)
      {
        if (*v56 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v56;
      }
    }
    if (v72)
    {
      v57 = v71;
      v71 = 0;
      if (v57)
      {
        if (*v57 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v57;
      }
    }
    if ((_BYTE)v70)
    {
      v58 = (_DWORD *)v69[0];
      v69[0] = 0;
      if (v58)
      {
        if (*v58 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v58;
      }
    }
    v59 = v65;
    v65 = 0;
    if (v59)
    {
      if (*(_DWORD *)v59 == 2)
        WTF::StringImpl::destroy(v59, v53);
      else
        *(_DWORD *)v59 -= 2;
    }
  }
  v21 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v22 = v14;
  if ((LODWORD(v22) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
  {
    v23 = v17;
    v24 = (LODWORD(v23) & 0x7FFFFFFFu) <= 0x7F7FFFFF;
  }
  else
  {
    v24 = 0;
  }
  v25 = fabs(v20);
  if (v24 && SLODWORD(v25) < 2139095040)
  {
    v32 = (float)((float)((float)(v22 / 6.2832) - floorf(v22 / 6.2832)) * 6.2832) + 1.5708;
    *(float *)&v67 = v17;
    *((float *)&v67 + 1) = v20;
    v33 = (WebCore::CanvasGradient *)WTF::fastMalloc((WTF *)0x18);
    WebCore::CanvasGradient::CanvasGradient(v33, (const WebCore::FloatPoint *)&v67, v32, (WebCore::CanvasRenderingContext *)v12);
    v70 = 0;
    v69[0] = 0;
    v29 = WebCore::toJS(this, v21, v33, v34);
    if (*(_DWORD *)v33 == 1)
    {
      WebCore::CanvasGradient::~CanvasGradient(v33, v35);
      WTF::fastFree(v36, v37);
      v30 = 0;
    }
    else
    {
      v30 = 0;
      --*(_DWORD *)v33;
    }
  }
  else
  {
    LOBYTE(v69[0]) = 6;
    v70 = 1;
    LOBYTE(v67) = 6;
    v69[1] = 0;
    v68 = 0;
    if (!*(_QWORD *)(v4 + 16))
    {
      WebCore::propagateExceptionSlowPath(this, &v66, (unsigned __int8 *)&v67);
      v28 = v68;
      v68 = 0;
      if (v28)
      {
        if (*(_DWORD *)v28 == 2)
          WTF::StringImpl::destroy(v28, v27);
        else
          *(_DWORD *)v28 -= 2;
      }
    }
    v29 = 0;
    v30 = 1;
  }
  ((void (*)(_QWORD **, _QWORD *, JSC::CallFrame *))off_1E32C2F90[v30])(&v67, v69, a3);
  return (_BYTE *)v29;
}

_BYTE *WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_createPattern(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  WTF::StringImpl *v17;
  void *v18;
  WTF::StringImpl *v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  JSValue v26;
  WebCore::InspectorInstrumentation *v27;
  WebCore::ScriptExecutionContext *v28;
  uint64_t v29;
  uint64_t v30;
  WTF::StringImpl *v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  WebCore::InspectorCanvasAgent *v35;
  WebCore::InspectorInstrumentation *v36;
  WebCore::ScriptExecutionContext *v37;
  uint64_t v38;
  uint64_t v39;
  _DWORD *v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  JSC::VM *v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  int v46;
  WTF::StringImpl *v47;
  int v48;
  JSC::VM *v49;
  WTF::StringImpl **v50;
  WTF::StringImpl *v51;
  WTF::StringImpl *v52;
  WTF::StringImpl *v53;
  int v54;
  _DWORD *v55;
  char v56;
  char v57[8];
  uint64_t v58;
  int v59;
  int v60;
  uint64_t v61;

  v61 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v43 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v43, "OffscreenCanvasRenderingContext2D", "createPattern");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v43, "OffscreenCanvasRenderingContext2D", "createPattern");
  v49 = v4;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v26.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v26);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLImageElement>,WebCore::IDLInterface<WebCore::SVGImageElement>,WebCore::IDLInterface<WebCore::HTMLCanvasElement>,WebCore::IDLInterface<WebCore::ImageBitmap>,WebCore::IDLInterface<WebCore::CSSStyleImageValue>,WebCore::IDLInterface<WebCore::OffscreenCanvas>,WebCore::IDLInterface<WebCore::HTMLVideoElement>,WebCore::IDLInterface<WebCore::WebCodecsVideoFrame>>>::convert((uint64_t)this, *((_QWORD *)a2 + 6), (uint64_t)v57);
  v13 = v60;
  if (!v60)
  {
    WebCore::Converter<WebCore::IDLLegacyNullToEmptyStringAdaptor<WebCore::IDLDOMString>>::convert(this, *((_QWORD *)a2 + 7), (uint64_t)&v47);
    v14 = v48;
    if (v48)
    {
      v20 = 0;
LABEL_33:
      if (v14 != -1)
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32BEA70[v14])(&v52, &v47);
      v13 = v60;
      goto LABEL_36;
    }
    if (*(_BYTE *)(v12 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v45 = v52;
      if (v60)
        goto LABEL_94;
      v27 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
      if (v27
        && (v29 = WebCore::InspectorInstrumentation::instrumentingAgents(v27, v28)) != 0
        && (v30 = *(_QWORD *)(v29 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v30, v12, (uint64_t)&v58);
      }
      else
      {
        LOBYTE(v52) = 0;
        LOBYTE(v54) = 0;
      }
      if (v48)
        goto LABEL_94;
      v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
      if (v32
        && (v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33)) != 0
        && (v35 = *(WebCore::InspectorCanvasAgent **)(v34 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v35, (WebCore::CanvasRenderingContext *)v12, (int **)&v47, (uint64_t)&v55);
      }
      else
      {
        LOBYTE(v55) = 0;
        v56 = 0;
      }
      v50 = &v52;
      v51 = (WTF::StringImpl *)2;
      v36 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
      if (v36)
      {
        v38 = WebCore::InspectorInstrumentation::instrumentingAgents(v36, v37);
        if (v38)
        {
          v39 = *(_QWORD *)(v38 + 96);
          if (v39)
            WebCore::InspectorCanvasAgent::recordAction(v39, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v45, &v50);
        }
      }
      if (v56)
      {
        v40 = v55;
        v55 = 0;
        if (v40)
        {
          if (*v40 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v40;
        }
      }
      if ((_BYTE)v54)
      {
        v41 = v52;
        v52 = 0;
        if (v41)
        {
          if (*(_DWORD *)v41 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*(_DWORD *)v41;
        }
      }
      v42 = v45;
      v45 = 0;
      if (v42)
      {
        if (*(_DWORD *)v42 == 2)
          WTF::StringImpl::destroy(v42, v37);
        else
          *(_DWORD *)v42 -= 2;
      }
    }
    if (!v60)
    {
      v15 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
      LOBYTE(v45) = 0;
      v46 = -1;
      v16 = v59;
      if (v59 != -1)
      {
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **, uint64_t *))off_1E32C2F40[v59])(&v52, &v45, &v58);
        v46 = v16;
      }
      if (!v48)
      {
        v17 = v47;
        v47 = 0;
        v44 = v17;
        WebCore::CanvasRenderingContext2DBase::createPattern(v12, (uint64_t)&v45, &v44, (uint64_t)&v52);
        if (!v54)
        {
          v19 = v52;
          v52 = 0;
          if (v19)
          {
            v20 = WebCore::toJS((uint64_t)this, v15, v19);
            if (*(_DWORD *)v19 == 1)
            {
              v22 = *((_QWORD *)v19 + 1);
              *((_QWORD *)v19 + 1) = 0;
              if (v22)
              {
                if (*(_DWORD *)v22 == 1)
                {
                  if (*(_BYTE *)(v22 + 40))
                  {
                    v23 = *(unsigned int *)(v22 + 32);
                    if ((_DWORD)v23 != -1)
                      ((void (*)(WTF::StringImpl ***, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11NativeImageENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS7_INS8_11ImageBufferENSA_ISF_EENSC_ISF_EEEENS6_23ObjectIdentifierGenericINS8_31RenderingResourceIdentifierTypeENS6_38ObjectIdentifierThreadSafeAccessTraitsIyEEyEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSQ_EEEDcOSR_DpOT0____fmatrix[v23])(&v50, v22 + 24);
                    *(_DWORD *)(v22 + 32) = -1;
                  }
                  v24 = *(unsigned int *)(v22 + 16);
                  if ((_DWORD)v24 != -1)
                    ((void (*)(WTF::StringImpl ***, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11NativeImageENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS7_INS8_11ImageBufferENSA_ISF_EENSC_ISF_EEEENS6_23ObjectIdentifierGenericINS8_31RenderingResourceIdentifierTypeENS6_38ObjectIdentifierThreadSafeAccessTraitsIyEEyEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSQ_EEEDcOSR_DpOT0____fmatrix[v24])(&v50, v22 + 8);
                  *(_DWORD *)(v22 + 16) = -1;
                  WTF::fastFree((WTF *)v22, v18);
                }
                else
                {
                  --*(_DWORD *)v22;
                }
              }
              WTF::fastFree(v19, v18);
            }
            else
            {
              --*(_DWORD *)v19;
            }
          }
          else
          {
            v20 = 2;
          }
LABEL_25:
          if (v54 != -1)
            ((void (*)(WTF::StringImpl ***, WTF::StringImpl **))off_1E32C2FA0[v54])(&v50, &v52);
          v54 = -1;
          if (v17)
          {
            if (*(_DWORD *)v17 == 2)
              WTF::StringImpl::destroy(v17, (WTF::StringImpl *)v18);
            else
              *(_DWORD *)v17 -= 2;
          }
          if (v46 != -1)
            ((void (*)(WTF::StringImpl ***, WTF::StringImpl **))off_1E32C2F00[v46])(&v50, &v45);
          v14 = v48;
          goto LABEL_33;
        }
        if (v54 == 1)
        {
          LOBYTE(v50) = (_BYTE)v52;
          v31 = v53;
          v53 = 0;
          v51 = v31;
          if (!*((_QWORD *)v4 + 2))
          {
            WebCore::propagateExceptionSlowPath(this, &v49, (unsigned __int8 *)&v50);
            v31 = v51;
          }
          v51 = 0;
          if (v31)
          {
            if (*(_DWORD *)v31 == 2)
              WTF::StringImpl::destroy(v31, (WTF::StringImpl *)v18);
            else
              *(_DWORD *)v31 -= 2;
          }
          v20 = 0;
          goto LABEL_25;
        }
      }
    }
LABEL_94:
    std::__throw_bad_variant_access[abi:sn180100]();
  }
  v20 = 0;
LABEL_36:
  if (v13 != -1)
    ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32C2F80[v13])(&v52, &v58);
  return (_BYTE *)v20;
}

_BYTE *WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_createImageData(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  unint64_t v9;
  _QWORD v11[9];

  v11[8] = *MEMORY[0x1E0C80C00];
  v11[0] = *((_QWORD *)this + 7);
  v3 = *((_QWORD *)a2 + 5);
  if ((v3 & 0xFFFE000000000002) == 0)
  {
    v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
    v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
    v6 = (char **)(16 * v4);
    if ((_DWORD)v4)
      v7 = v6 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
    else
      v7 = 1;
    if (!v7)
    {
      do
      {
        v6 = (char **)v6[2];
        v5 = v6 != 0;
      }
      while (v6 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v6 != 0);
    }
    if (v5)
    {
      v9 = *((int *)a2 + 8) - 1;
      if (v9 >= 3)
        v9 = 3;
      __asm { BR              X12 }
    }
  }
  return WebCore::throwThisTypeError((int)this, (int)v11, "OffscreenCanvasRenderingContext2D", "createImageData");
}

_BYTE *WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_getImageData(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  double v3;
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::CanvasRenderingContext *v12;
  unint64_t v13;
  WebCore::CanvasRenderingContext *v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  WebCore *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  void *v24;
  unint64_t v25;
  _DWORD *v27;
  JSC::JSGlobalObject *v29;
  JSValue v30;
  WebCore::InspectorInstrumentation *v31;
  WebCore::ScriptExecutionContext *v32;
  uint64_t v33;
  WebCore::InspectorCanvasAgent *v34;
  WTF::StringImpl *v35;
  WebCore::InspectorInstrumentation *v36;
  WebCore::ScriptExecutionContext *v37;
  uint64_t v38;
  WebCore::InspectorCanvasAgent *v39;
  WebCore::InspectorInstrumentation *v40;
  WebCore::ScriptExecutionContext *v41;
  uint64_t v42;
  WebCore::InspectorCanvasAgent *v43;
  WebCore::InspectorInstrumentation *v44;
  WebCore::ScriptExecutionContext *v45;
  uint64_t v46;
  WebCore::InspectorCanvasAgent *v47;
  WebCore::InspectorInstrumentation *v48;
  WebCore::ScriptExecutionContext *v49;
  uint64_t v50;
  uint64_t v51;
  _DWORD *v52;
  _DWORD *v53;
  _DWORD *v54;
  _DWORD *v55;
  WTF::StringImpl *v56;
  WTF::StringImpl *v57;
  unint64_t v58;
  WebCore::CanvasRenderingContext *v59;
  JSC::VM *v60;
  WebCore *v61;
  JSC::VM *v62;
  WebCore::CanvasRenderingContext *v63;
  WebCore *v64;
  JSC::VM *v65;
  WebCore *v66;
  JSC::VM *v67;
  double v68;
  double v69;
  double v70;
  double v71;
  WebCore::CanvasRenderingContext *v72;
  WebCore::CanvasRenderingContext *v73;
  JSC::VM *v74;
  JSC::JSGlobalObject *v75;
  int v76;
  JSC::VM *v77;
  WTF::StringImpl *v78;
  char v79[4];
  unsigned __int16 v80;
  int v81;
  JSC::VM *v82;
  unint64_t v83;
  WTF::StringImpl *v84;
  WTF::StringImpl *v85;
  WTF::StringImpl *v86;
  int v87;
  _DWORD *v88;
  char v89;
  _DWORD *v90;
  char v91;
  _DWORD *v92;
  char v93;
  _DWORD *v94;
  char v95;
  uint64_t v96;

  v96 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v77 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v77, "OffscreenCanvasRenderingContext2D", "getImageData");
  v6 = (uint64_t)a2;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v77, "OffscreenCanvasRenderingContext2D", "getImageData");
  v82 = v4;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v29 = this;
    v30.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, v29, v30);
  }
  v12 = *(WebCore::CanvasRenderingContext **)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  v85 = (WTF::StringImpl *)v13;
  if (v13 < 0xFFFE000000000000)
  {
    v21 = this;
    v14 = v12;
    if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v85, this);
      v3 = v68;
    }
    else
    {
      *(_QWORD *)&v3 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20))
      goto LABEL_132;
    goto LABEL_117;
  }
  v83 = v13;
  while (1)
  {
    v14 = (WebCore::CanvasRenderingContext *)v83;
    if (HIDWORD(v83))
      return 0;
    v15 = *(_QWORD *)(v6 + 56);
    v85 = (WTF::StringImpl *)v15;
    if (v15 < 0xFFFE000000000000)
    {
      v58 = v83;
      v59 = v12;
      v60 = v4;
      v61 = this;
      v62 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v85, this);
        v3 = v69;
      }
      else
      {
        *(_QWORD *)&v3 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v62 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v62))
      {
        HIDWORD(v83) = 1;
        v4 = v60;
        v12 = v59;
        this = v61;
      }
      else
      {
        WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)&v83, (uint64_t)v61, v3);
        this = v61;
        v4 = v60;
        v12 = v59;
      }
      v14 = (WebCore::CanvasRenderingContext *)v58;
    }
    else
    {
      v83 = v15;
    }
    if (HIDWORD(v83))
      return 0;
    v16 = *(_QWORD *)(v6 + 64);
    v85 = (WTF::StringImpl *)v16;
    v76 = v83;
    if (v16 < 0xFFFE000000000000)
    {
      v63 = v12;
      v64 = this;
      v65 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v85, this);
        v3 = v70;
      }
      else
      {
        *(_QWORD *)&v3 = v16 - 0x2000000000000;
      }
      if (*((_DWORD *)v65 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v65))
      {
        HIDWORD(v83) = 1;
        v12 = v63;
        this = v64;
      }
      else
      {
        WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)&v83, (uint64_t)v64, v3);
        this = v64;
        v12 = v63;
      }
    }
    else
    {
      v83 = v16;
    }
    v17 = v83;
    if (HIDWORD(v83))
      return 0;
    v74 = v4;
    v4 = *(JSC::VM **)(v6 + 72);
    v85 = v4;
    if ((unint64_t)v4 < 0xFFFE000000000000)
    {
      v73 = v12;
      v66 = this;
      v67 = (JSC::VM *)*((_QWORD *)this + 7);
      if ((unint64_t)v4 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v85, this);
        v3 = v71;
      }
      else
      {
        *(_QWORD *)&v3 = (char *)v4 - 0x2000000000000;
      }
      if (*((_DWORD *)v67 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v67))
      {
        HIDWORD(v83) = 1;
        v12 = v73;
        this = v66;
      }
      else
      {
        WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)&v83, (uint64_t)v66, v3);
        this = v66;
        v12 = v73;
      }
    }
    else
    {
      v83 = v4;
    }
    v18 = v83;
    if (HIDWORD(v83))
      return 0;
    v19 = (uint64_t)v12;
    if ((unint64_t)(*(int *)(v6 + 32) - 6) > 0xFFFFFFFFFFFFFFFALL)
      v6 = 10;
    else
      v6 = *(_QWORD *)(v6 + 80);
    v75 = this;
    WebCore::convertDictionary<WebCore::ImageDataSettings>(this, (JSC::JSCell *)v6, (uint64_t)v79);
    if (v81)
      return 0;
    v20 = v19;
    if (*(_BYTE *)(v19 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v78 = v85;
      v72 = (WebCore::CanvasRenderingContext *)v19;
      v31 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v19 + 32) + 144))(*(_QWORD *)(v19 + 32));
      if (v31
        && (v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v31, v32)) != 0
        && (v34 = *(WebCore::InspectorCanvasAgent **)(v33 + 96)) != 0)
      {
        v21 = v14;
        WebCore::InspectorCanvasAgent::processArgument(v34, v72, (int)v14, (uint64_t)&v85);
      }
      else
      {
        LOBYTE(v85) = 0;
        LOBYTE(v87) = 0;
        v21 = v14;
      }
      v36 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v72 + 4) + 144))(*((_QWORD *)v72 + 4));
      if (v36
        && (v38 = WebCore::InspectorInstrumentation::instrumentingAgents(v36, v37)) != 0
        && (v39 = *(WebCore::InspectorCanvasAgent **)(v38 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v39, v72, v76, (uint64_t)&v88);
      }
      else
      {
        LOBYTE(v88) = 0;
        v89 = 0;
      }
      v40 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v72 + 4) + 144))(*((_QWORD *)v72 + 4));
      if (v40
        && (v42 = WebCore::InspectorInstrumentation::instrumentingAgents(v40, v41)) != 0
        && (v43 = *(WebCore::InspectorCanvasAgent **)(v42 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v43, v72, v17, (uint64_t)&v90);
      }
      else
      {
        LOBYTE(v90) = 0;
        v91 = 0;
      }
      v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v72 + 4) + 144))(*((_QWORD *)v72 + 4));
      if (v44
        && (v46 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, v45)) != 0
        && (v47 = *(WebCore::InspectorCanvasAgent **)(v46 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v47, v72, v18, (uint64_t)&v92);
      }
      else
      {
        LOBYTE(v92) = 0;
        v93 = 0;
      }
      if (v81)
        goto LABEL_131;
      v14 = v72;
      WebCore::InspectorCanvasCallTracer::processArgument((uint64_t)v72, &v94);
      v83 = (unint64_t)&v85;
      v84 = (WTF::StringImpl *)5;
      v48 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v14 + 4) + 144))(*((_QWORD *)v14 + 4));
      if (v48)
      {
        v50 = WebCore::InspectorInstrumentation::instrumentingAgents(v48, v49);
        if (v50)
        {
          v51 = *(_QWORD *)(v50 + 96);
          if (v51)
            WebCore::InspectorCanvasAgent::recordAction(v51, v72, (const WTF::StringImpl *)&v78, &v83);
        }
      }
      v20 = (uint64_t)v72;
      if (v95)
      {
        v52 = v94;
        v94 = 0;
        if (v52)
        {
          if (*v52 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v20 = (uint64_t)v72;
          }
          else
          {
            --*v52;
          }
        }
      }
      if (v93)
      {
        v53 = v92;
        v92 = 0;
        if (v53)
        {
          if (*v53 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v20 = (uint64_t)v72;
          }
          else
          {
            --*v53;
          }
        }
      }
      if (v91)
      {
        v54 = v90;
        v90 = 0;
        if (v54)
        {
          if (*v54 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v20 = (uint64_t)v72;
          }
          else
          {
            --*v54;
          }
        }
      }
      if (v89)
      {
        v55 = v88;
        v88 = 0;
        if (v55)
        {
          if (*v55 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v20 = (uint64_t)v72;
          }
          else
          {
            --*v55;
          }
        }
      }
      if ((_BYTE)v87)
      {
        v56 = v85;
        v85 = 0;
        if (v56)
        {
          if (*(_DWORD *)v56 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v20 = (uint64_t)v72;
          }
          else
          {
            --*(_DWORD *)v56;
          }
        }
      }
      v57 = v78;
      v78 = 0;
      if (v57)
      {
        if (*(_DWORD *)v57 == 2)
        {
          WTF::StringImpl::destroy(v57, v49);
          v20 = (uint64_t)v72;
        }
        else
        {
          *(_DWORD *)v57 -= 2;
        }
      }
      if (v81)
        goto LABEL_131;
      v5 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
    }
    else
    {
      v5 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
      v21 = v14;
    }
    WebCore::CanvasRenderingContext2DBase::getImageData(v20, (int)v21, v76, v17, v18, v80 | 0x10000, (uint64_t)&v85);
    if (!v87)
    {
      v23 = v85;
      v85 = 0;
      v25 = WebCore::wrap<WebCore::ImageData>(v75, v5, v23);
      if (*(_DWORD *)v23 == 1)
      {
        v27 = (_DWORD *)*((_QWORD *)v23 + 2);
        *((_QWORD *)v23 + 2) = 0;
        if (v27)
        {
          if (*v27 == 1)
            JSC::ArrayBufferView::operator delete();
          else
            --*v27;
        }
        WTF::fastFree(v23, v24);
      }
      else
      {
        --*(_DWORD *)v23;
      }
      goto LABEL_34;
    }
    if (v87 == 1)
      break;
LABEL_131:
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_132:
    if (JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      HIDWORD(v83) = 1;
      v12 = v14;
      this = v21;
    }
    else
    {
LABEL_117:
      WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)&v83, (uint64_t)v21, v3);
      this = v21;
      v12 = v14;
    }
  }
  LOBYTE(v83) = (_BYTE)v85;
  v35 = v86;
  v86 = 0;
  v84 = v35;
  if (!*((_QWORD *)v74 + 2))
  {
    WebCore::propagateExceptionSlowPath(v75, &v82, (unsigned __int8 *)&v83);
    v35 = v84;
  }
  v84 = 0;
  if (v35)
  {
    if (*(_DWORD *)v35 == 2)
      WTF::StringImpl::destroy(v35, v22);
    else
      *(_DWORD *)v35 -= 2;
  }
  v25 = 0;
LABEL_34:
  if (v87 != -1)
    ((void (*)(unint64_t *, WTF::StringImpl **))off_1E32C2FB0[v87])(&v83, &v85);
  return (_BYTE *)v25;
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_putImageData(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  int *v24;
  unint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  WebCore::CanvasRenderingContext *v30;
  uint64_t v31;
  uint64_t v32;
  _BOOL4 v33;
  char **v34;
  BOOL v35;
  WebCore::ImageData *v37;
  unint64_t v38;
  int v39;
  unint64_t v40;
  int v41;
  unint64_t v42;
  int v43;
  unint64_t v44;
  int v45;
  unint64_t v46;
  int v47;
  unint64_t v48;
  int v49;
  JSValue v50;
  WebCore::InspectorInstrumentation *v51;
  WebCore::ScriptExecutionContext *v52;
  uint64_t v53;
  WebCore::InspectorCanvasAgent *v54;
  WebCore::InspectorInstrumentation *v55;
  WebCore::ScriptExecutionContext *v56;
  uint64_t v57;
  WebCore::InspectorCanvasAgent *v58;
  WebCore::InspectorInstrumentation *v59;
  WebCore::ScriptExecutionContext *v60;
  uint64_t v61;
  WebCore::InspectorCanvasAgent *v62;
  WebCore::InspectorInstrumentation *v63;
  WebCore::ScriptExecutionContext *v64;
  uint64_t v65;
  WebCore::InspectorCanvasAgent *v66;
  WebCore::InspectorInstrumentation *v67;
  WebCore::ScriptExecutionContext *v68;
  uint64_t v69;
  uint64_t v70;
  _DWORD *v71;
  _DWORD *v72;
  _DWORD *v73;
  WTF::StringImpl *v74;
  WebCore::InspectorInstrumentation *v75;
  WebCore::ScriptExecutionContext *v76;
  uint64_t v77;
  WebCore::InspectorCanvasAgent *v78;
  WebCore::InspectorInstrumentation *v79;
  WebCore::ScriptExecutionContext *v80;
  uint64_t v81;
  WebCore::InspectorCanvasAgent *v82;
  WebCore::InspectorInstrumentation *v83;
  WebCore::ScriptExecutionContext *v84;
  uint64_t v85;
  WebCore::InspectorCanvasAgent *v86;
  WebCore::InspectorInstrumentation *v87;
  WebCore::ScriptExecutionContext *v88;
  uint64_t v89;
  WebCore::InspectorCanvasAgent *v90;
  WebCore::InspectorInstrumentation *v91;
  WebCore::ScriptExecutionContext *v92;
  uint64_t v93;
  WebCore::InspectorCanvasAgent *v94;
  WebCore::InspectorInstrumentation *v95;
  WebCore::ScriptExecutionContext *v96;
  uint64_t v97;
  WebCore::InspectorCanvasAgent *v98;
  WebCore::InspectorInstrumentation *v99;
  WebCore::ScriptExecutionContext *v100;
  uint64_t v101;
  uint64_t v102;
  _DWORD *v103;
  _DWORD *v104;
  _DWORD *v105;
  _DWORD *v106;
  _DWORD *v107;
  _DWORD *v108;
  _DWORD *v109;
  WTF::StringImpl *v110;
  JSC::JSGlobalObject *v111;
  double v112;
  WebCore::ImageData *v113;
  WebCore::CanvasRenderingContext *v114;
  JSC::JSGlobalObject *v115;
  double v116;
  JSC::VM *v117;
  double v118;
  int v119;
  WebCore::ImageData *v120;
  WebCore::CanvasRenderingContext *v121;
  JSC::JSGlobalObject *v122;
  JSC::VM *v123;
  double v124;
  WebCore::ImageData *v125;
  WebCore::CanvasRenderingContext *v126;
  JSC::JSGlobalObject *v127;
  JSC::VM *v128;
  double v129;
  WebCore::ImageData *v130;
  WebCore::CanvasRenderingContext *v131;
  JSC::JSGlobalObject *v132;
  JSC::VM *v133;
  double v134;
  JSC::JSGlobalObject *v135;
  JSC::VM *v136;
  double v137;
  JSC::VM *v138;
  double v139;
  double v140;
  double v141;
  double v142;
  double v143;
  double v144;
  double v145;
  double v146;
  double v147;
  WebCore::ImageData *v148;
  WebCore::ImageData *v149;
  WebCore::ImageData *v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  WebCore::CanvasRenderingContext *v165;
  WebCore::CanvasRenderingContext *v166;
  WebCore::CanvasRenderingContext *v167;
  _QWORD v168[2];
  int v169[2];
  uint64_t v170;
  WTF::StringImpl *v171;
  _QWORD v172[2];
  char v173;
  _QWORD v174[2];
  char v175;
  _QWORD v176[2];
  char v177;
  _DWORD *v178;
  char v179;
  _DWORD *v180;
  char v181;
  _DWORD *v182;
  char v183;
  _DWORD *v184;
  char v185;
  uint64_t v186;

  v186 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v168[0] = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v168, "OffscreenCanvasRenderingContext2D", "putImageData");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v168, "OffscreenCanvasRenderingContext2D", "putImageData");
  v168[1] = v9;
  v16 = *((int *)a2 + 8) - 1;
  if (v16 >= 7)
    v16 = 7;
  if (v16 == 7)
  {
    v30 = *(WebCore::CanvasRenderingContext **)(v10 + 24);
    v31 = *((_QWORD *)a2 + 6);
    v172[0] = v9;
    if ((v31 & 0xFFFE000000000002) != 0)
      goto LABEL_73;
    v32 = *(unsigned int *)(16 * (*(_DWORD *)v31 & 0xFFFFFFFE) + 0x4C);
    v33 = *(_DWORD *)(16 * (*(_DWORD *)v31 & 0xFFFFFFFE) + 0x4C) != 0;
    v34 = (char **)(16 * v32);
    if ((_DWORD)v32)
      v35 = v34 == &WebCore::JSImageData::s_info;
    else
      v35 = 1;
    if (!v35)
    {
      do
      {
        v34 = (char **)v34[2];
        v33 = v34 != 0;
      }
      while (v34 != &WebCore::JSImageData::s_info && v34 != 0);
    }
    if (v33 && (v37 = *(WebCore::ImageData **)(v31 + 24)) != 0)
    {
      v38 = *((_QWORD *)a2 + 7);
      v172[0] = v38;
      if (v38 < 0xFFFE000000000000)
      {
        v113 = v37;
        v114 = v30;
        v115 = a2;
        if (v38 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v172, this);
          v116 = v141;
        }
        else
        {
          *(_QWORD *)&v116 = v38 - 0x2000000000000;
        }
        if (*((_DWORD *)v9 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v9))
          v169[1] = 1;
        else
          WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)v169, (uint64_t)this, v116);
        a2 = v115;
        v30 = v114;
        v37 = v113;
      }
      else
      {
        v169[0] = v38;
        v169[1] = 0;
      }
      v39 = v169[0];
      if (v169[1])
      {
        return 0;
      }
      else
      {
        v40 = *((_QWORD *)a2 + 8);
        v172[0] = v40;
        if (v40 < 0xFFFE000000000000)
        {
          v119 = v169[0];
          v120 = v37;
          v121 = v30;
          v122 = a2;
          v123 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v40 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v172, this);
            v124 = v143;
          }
          else
          {
            *(_QWORD *)&v124 = v40 - 0x2000000000000;
          }
          if (*((_DWORD *)v123 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v123))
            v169[1] = 1;
          else
            WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)v169, (uint64_t)this, v124);
          a2 = v122;
          v30 = v121;
          v37 = v120;
          v39 = v119;
        }
        else
        {
          v169[0] = v40;
          v169[1] = 0;
        }
        v41 = v169[0];
        if (v169[1])
        {
          return 0;
        }
        else
        {
          v42 = *((_QWORD *)a2 + 9);
          v172[0] = v42;
          if (v42 < 0xFFFE000000000000)
          {
            v156 = v169[0];
            v161 = v39;
            v125 = v37;
            v126 = v30;
            v127 = a2;
            v128 = (JSC::VM *)*((_QWORD *)this + 7);
            if (v42 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v172, this);
              v129 = v144;
            }
            else
            {
              *(_QWORD *)&v129 = v42 - 0x2000000000000;
            }
            if (*((_DWORD *)v128 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v128))
              v169[1] = 1;
            else
              WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)v169, (uint64_t)this, v129);
            a2 = v127;
            v30 = v126;
            v37 = v125;
            v41 = v156;
            v39 = v161;
          }
          else
          {
            v169[0] = v42;
            v169[1] = 0;
          }
          v43 = v169[0];
          if (v169[1])
          {
            return 0;
          }
          else
          {
            v44 = *((_QWORD *)a2 + 10);
            v172[0] = v44;
            if (v44 < 0xFFFE000000000000)
            {
              v152 = v169[0];
              v157 = v41;
              v162 = v39;
              v130 = v37;
              v131 = v30;
              v132 = a2;
              v133 = (JSC::VM *)*((_QWORD *)this + 7);
              if (v44 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
              {
                JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v172, this);
                v134 = v145;
              }
              else
              {
                *(_QWORD *)&v134 = v44 - 0x2000000000000;
              }
              if (*((_DWORD *)v133 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v133))
                v169[1] = 1;
              else
                WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)v169, (uint64_t)this, v134);
              a2 = v132;
              v30 = v131;
              v37 = v130;
              v41 = v157;
              v39 = v162;
              v43 = v152;
            }
            else
            {
              v169[0] = v44;
              v169[1] = 0;
            }
            v45 = v169[0];
            if (v169[1])
            {
              return 0;
            }
            else
            {
              v46 = *((_QWORD *)a2 + 11);
              v172[0] = v46;
              if (v46 < 0xFFFE000000000000)
              {
                v153 = v43;
                v158 = v41;
                v163 = v39;
                v166 = v30;
                v149 = v37;
                v135 = a2;
                v136 = (JSC::VM *)*((_QWORD *)this + 7);
                if (v46 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
                {
                  JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v172, this);
                  v137 = v146;
                }
                else
                {
                  *(_QWORD *)&v137 = v46 - 0x2000000000000;
                }
                if (*((_DWORD *)v136 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v136))
                  v169[1] = 1;
                else
                  WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)v169, (uint64_t)this, v137);
                a2 = v135;
                v39 = v163;
                v30 = v166;
                v37 = v149;
                v43 = v153;
                v41 = v158;
              }
              else
              {
                v169[0] = v46;
                v169[1] = 0;
              }
              v47 = v169[0];
              if (v169[1])
              {
                return 0;
              }
              else
              {
                v48 = *((_QWORD *)a2 + 12);
                v172[0] = v48;
                if (v48 < 0xFFFE000000000000)
                {
                  v154 = v43;
                  v159 = v41;
                  v164 = v39;
                  v167 = v30;
                  v150 = v37;
                  v138 = (JSC::VM *)*((_QWORD *)this + 7);
                  if (v48 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
                  {
                    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v172, this);
                    v139 = v147;
                  }
                  else
                  {
                    *(_QWORD *)&v139 = v48 - 0x2000000000000;
                  }
                  if (*((_DWORD *)v138 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v138))
                    v169[1] = 1;
                  else
                    WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)v169, (uint64_t)this, v139);
                  v37 = v150;
                  v39 = v164;
                  v30 = v167;
                  v43 = v154;
                  v41 = v159;
                }
                else
                {
                  v169[0] = v48;
                  v169[1] = 0;
                }
                v49 = v169[0];
                if (v169[1])
                {
                  return 0;
                }
                else
                {
                  if (*((_BYTE *)v30 + 25))
                  {
                    v151 = v43;
                    v155 = v41;
                    v160 = v39;
                    v165 = v30;
                    v148 = v37;
                    WTF::StringImpl::createWithoutCopyingNonEmpty();
                    v171 = (WTF::StringImpl *)v172[0];
                    v55 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v165 + 4)
                                                                                                 + 144))(*((_QWORD *)v165 + 4));
                    if (v55
                      && (v57 = WebCore::InspectorInstrumentation::instrumentingAgents(v55, v56)) != 0
                      && (v58 = *(WebCore::InspectorCanvasAgent **)(v57 + 96)) != 0)
                    {
                      WebCore::InspectorCanvasAgent::processArgument(v58, v165, v148, (uint64_t)v172);
                    }
                    else
                    {
                      LOBYTE(v172[0]) = 0;
                      v173 = 0;
                    }
                    v75 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v165 + 4)
                                                                                                 + 144))(*((_QWORD *)v165 + 4));
                    if (v75
                      && (v77 = WebCore::InspectorInstrumentation::instrumentingAgents(v75, v76)) != 0
                      && (v78 = *(WebCore::InspectorCanvasAgent **)(v77 + 96)) != 0)
                    {
                      WebCore::InspectorCanvasAgent::processArgument(v78, v165, v160, (uint64_t)v174);
                    }
                    else
                    {
                      LOBYTE(v174[0]) = 0;
                      v175 = 0;
                    }
                    v79 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v165 + 4)
                                                                                                 + 144))(*((_QWORD *)v165 + 4));
                    if (v79
                      && (v81 = WebCore::InspectorInstrumentation::instrumentingAgents(v79, v80)) != 0
                      && (v82 = *(WebCore::InspectorCanvasAgent **)(v81 + 96)) != 0)
                    {
                      WebCore::InspectorCanvasAgent::processArgument(v82, v165, v155, (uint64_t)v176);
                    }
                    else
                    {
                      LOBYTE(v176[0]) = 0;
                      v177 = 0;
                    }
                    v83 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v165 + 4)
                                                                                                 + 144))(*((_QWORD *)v165 + 4));
                    if (v83
                      && (v85 = WebCore::InspectorInstrumentation::instrumentingAgents(v83, v84)) != 0
                      && (v86 = *(WebCore::InspectorCanvasAgent **)(v85 + 96)) != 0)
                    {
                      WebCore::InspectorCanvasAgent::processArgument(v86, v165, v151, (uint64_t)&v178);
                    }
                    else
                    {
                      LOBYTE(v178) = 0;
                      v179 = 0;
                    }
                    v87 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v165 + 4)
                                                                                                 + 144))(*((_QWORD *)v165 + 4));
                    if (v87
                      && (v89 = WebCore::InspectorInstrumentation::instrumentingAgents(v87, v88)) != 0
                      && (v90 = *(WebCore::InspectorCanvasAgent **)(v89 + 96)) != 0)
                    {
                      WebCore::InspectorCanvasAgent::processArgument(v90, v165, v45, (uint64_t)&v180);
                    }
                    else
                    {
                      LOBYTE(v180) = 0;
                      v181 = 0;
                    }
                    v91 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v165 + 4)
                                                                                                 + 144))(*((_QWORD *)v165 + 4));
                    if (v91
                      && (v93 = WebCore::InspectorInstrumentation::instrumentingAgents(v91, v92)) != 0
                      && (v94 = *(WebCore::InspectorCanvasAgent **)(v93 + 96)) != 0)
                    {
                      WebCore::InspectorCanvasAgent::processArgument(v94, v165, v47, (uint64_t)&v182);
                    }
                    else
                    {
                      LOBYTE(v182) = 0;
                      v183 = 0;
                    }
                    v95 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v165 + 4)
                                                                                                 + 144))(*((_QWORD *)v165 + 4));
                    if (v95
                      && (v97 = WebCore::InspectorInstrumentation::instrumentingAgents(v95, v96)) != 0
                      && (v98 = *(WebCore::InspectorCanvasAgent **)(v97 + 96)) != 0)
                    {
                      WebCore::InspectorCanvasAgent::processArgument(v98, v165, v49, (uint64_t)&v184);
                    }
                    else
                    {
                      LOBYTE(v184) = 0;
                      v185 = 0;
                    }
                    *(_QWORD *)v169 = v172;
                    v170 = 7;
                    v99 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v165 + 4)
                                                                                                 + 144))(*((_QWORD *)v165 + 4));
                    if (v99)
                    {
                      v101 = WebCore::InspectorInstrumentation::instrumentingAgents(v99, v100);
                      if (v101)
                      {
                        v102 = *(_QWORD *)(v101 + 96);
                        if (v102)
                          WebCore::InspectorCanvasAgent::recordAction(v102, v165, (const WTF::StringImpl *)&v171, v169);
                      }
                    }
                    if (v185)
                    {
                      v103 = v184;
                      v184 = 0;
                      if (v103)
                      {
                        if (*v103 == 1)
                          WTF::JSONImpl::Value::operator delete();
                        else
                          --*v103;
                      }
                    }
                    v37 = v148;
                    v43 = v151;
                    v41 = v155;
                    v39 = v160;
                    if (v183)
                    {
                      v104 = v182;
                      v182 = 0;
                      if (v104)
                      {
                        if (*v104 == 1)
                          WTF::JSONImpl::Value::operator delete();
                        else
                          --*v104;
                        v37 = v148;
                        v43 = v151;
                        v41 = v155;
                        v39 = v160;
                      }
                    }
                    if (v181)
                    {
                      v105 = v180;
                      v180 = 0;
                      if (v105)
                      {
                        if (*v105 == 1)
                          WTF::JSONImpl::Value::operator delete();
                        else
                          --*v105;
                        v37 = v148;
                        v43 = v151;
                        v41 = v155;
                        v39 = v160;
                      }
                    }
                    if (v179)
                    {
                      v106 = v178;
                      v178 = 0;
                      if (v106)
                      {
                        if (*v106 == 1)
                          WTF::JSONImpl::Value::operator delete();
                        else
                          --*v106;
                        v37 = v148;
                        v43 = v151;
                        v41 = v155;
                        v39 = v160;
                      }
                    }
                    if (v177)
                    {
                      v107 = (_DWORD *)v176[0];
                      v176[0] = 0;
                      if (v107)
                      {
                        if (*v107 == 1)
                          WTF::JSONImpl::Value::operator delete();
                        else
                          --*v107;
                        v37 = v148;
                        v43 = v151;
                        v41 = v155;
                        v39 = v160;
                      }
                    }
                    if (v175)
                    {
                      v108 = (_DWORD *)v174[0];
                      v174[0] = 0;
                      if (v108)
                      {
                        if (*v108 == 1)
                          WTF::JSONImpl::Value::operator delete();
                        else
                          --*v108;
                        v37 = v148;
                        v43 = v151;
                        v41 = v155;
                        v39 = v160;
                      }
                    }
                    if (v173)
                    {
                      v109 = (_DWORD *)v172[0];
                      v172[0] = 0;
                      if (v109)
                      {
                        if (*v109 == 1)
                          WTF::JSONImpl::Value::operator delete();
                        else
                          --*v109;
                        v37 = v148;
                        v43 = v151;
                        v41 = v155;
                        v39 = v160;
                      }
                    }
                    v110 = v171;
                    v171 = 0;
                    if (v110)
                    {
                      if (*(_DWORD *)v110 == 2)
                      {
                        WTF::StringImpl::destroy(v110, v100);
                        v43 = v151;
                        v41 = v155;
                        v39 = v160;
                        v37 = v148;
                      }
                      else
                      {
                        *(_DWORD *)v110 -= 2;
                      }
                    }
                    v30 = v165;
                  }
                  WebCore::CanvasRenderingContext2DBase::putImageData(v30, v37, v39, v41, v43, v45, v47, v49);
                  return 10;
                }
              }
            }
          }
        }
      }
    }
    else
    {
LABEL_73:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v172, 0, "imagedata", 10, "OffscreenCanvasRenderingContext2D", 34, a8, "putImageData", 13, "ImageData", 10);
      return 0;
    }
  }
  else if (v16 == 3)
  {
    v17 = *(_QWORD *)(v10 + 24);
    v18 = *((_QWORD *)a2 + 6);
    v172[0] = v9;
    if ((v18 & 0xFFFE000000000002) != 0)
      goto LABEL_72;
    v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
    v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
    v21 = (char **)(16 * v19);
    if ((_DWORD)v19)
      v22 = v21 == &WebCore::JSImageData::s_info;
    else
      v22 = 1;
    if (!v22)
    {
      do
      {
        v21 = (char **)v21[2];
        v20 = v21 != 0;
      }
      while (v21 != &WebCore::JSImageData::s_info && v21 != 0);
    }
    if (v20 && (v24 = *(int **)(v18 + 24)) != 0)
    {
      v25 = *((_QWORD *)a2 + 7);
      v172[0] = v25;
      if (v25 < 0xFFFE000000000000)
      {
        v111 = a2;
        if (v25 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v172, this);
          v112 = v140;
        }
        else
        {
          *(_QWORD *)&v112 = v25 - 0x2000000000000;
        }
        if (*((_DWORD *)v9 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v9))
          v169[1] = 1;
        else
          WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)v169, (uint64_t)this, v112);
        a2 = v111;
      }
      else
      {
        v169[0] = v25;
        v169[1] = 0;
      }
      v26 = v169[0];
      if (v169[1])
      {
        return 0;
      }
      else
      {
        v27 = *((_QWORD *)a2 + 8);
        v172[0] = v27;
        if (v27 < 0xFFFE000000000000)
        {
          v117 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v172, this);
            v118 = v142;
          }
          else
          {
            *(_QWORD *)&v118 = v27 - 0x2000000000000;
          }
          if (*((_DWORD *)v117 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v117))
            v169[1] = 1;
          else
            WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)v169, (uint64_t)this, v118);
        }
        else
        {
          v169[0] = v27;
          v169[1] = 0;
        }
        v28 = v169[0];
        if (v169[1])
        {
          return 0;
        }
        else
        {
          if (*(_BYTE *)(v17 + 25))
          {
            WTF::StringImpl::createWithoutCopyingNonEmpty();
            v51 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 32)
                                                                                         + 144))(*(_QWORD *)(v17 + 32));
            if (v51
              && (v53 = WebCore::InspectorInstrumentation::instrumentingAgents(v51, v52)) != 0
              && (v54 = *(WebCore::InspectorCanvasAgent **)(v53 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v54, (WebCore::CanvasRenderingContext *)v17, (WebCore::ImageData *)v24, (uint64_t)v172);
            }
            else
            {
              LOBYTE(v172[0]) = 0;
              v173 = 0;
            }
            v59 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 32)
                                                                                         + 144))(*(_QWORD *)(v17 + 32));
            if (v59
              && (v61 = WebCore::InspectorInstrumentation::instrumentingAgents(v59, v60)) != 0
              && (v62 = *(WebCore::InspectorCanvasAgent **)(v61 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v62, (WebCore::CanvasRenderingContext *)v17, v26, (uint64_t)v174);
            }
            else
            {
              LOBYTE(v174[0]) = 0;
              v175 = 0;
            }
            v63 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 32)
                                                                                         + 144))(*(_QWORD *)(v17 + 32));
            if (v63
              && (v65 = WebCore::InspectorInstrumentation::instrumentingAgents(v63, v64)) != 0
              && (v66 = *(WebCore::InspectorCanvasAgent **)(v65 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v66, (WebCore::CanvasRenderingContext *)v17, v28, (uint64_t)v176);
            }
            else
            {
              LOBYTE(v176[0]) = 0;
              v177 = 0;
            }
            *(_QWORD *)v169 = v172;
            v170 = 3;
            v67 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 32)
                                                                                         + 144))(*(_QWORD *)(v17 + 32));
            if (v67)
            {
              v69 = WebCore::InspectorInstrumentation::instrumentingAgents(v67, v68);
              if (v69)
              {
                v70 = *(_QWORD *)(v69 + 96);
                if (v70)
                  WebCore::InspectorCanvasAgent::recordAction(v70, (WebCore::CanvasRenderingContext *)v17, (const WTF::StringImpl *)&v171, v169);
              }
            }
            if (v177)
            {
              v71 = (_DWORD *)v176[0];
              v176[0] = 0;
              if (v71)
              {
                if (*v71 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v71;
              }
            }
            if (v175)
            {
              v72 = (_DWORD *)v174[0];
              v174[0] = 0;
              if (v72)
              {
                if (*v72 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v72;
              }
            }
            if (v173)
            {
              v73 = (_DWORD *)v172[0];
              v172[0] = 0;
              if (v73)
              {
                if (*v73 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v73;
              }
            }
            v74 = v171;
            v171 = 0;
            if (v74)
            {
              if (*(_DWORD *)v74 == 2)
                WTF::StringImpl::destroy(v74, v68);
              else
                *(_DWORD *)v74 -= 2;
            }
          }
          WebCore::CanvasRenderingContext2DBase::putImageData((WebCore::DestinationColorSpace *)v17, (WebCore::ImageData *)v24, v26, v28, 0, 0, v24[1], v24[2]);
          return 10;
        }
      }
    }
    else
    {
LABEL_72:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v172, 0, "imagedata", 10, "OffscreenCanvasRenderingContext2D", 34, a8, "putImageData", 13, "ImageData", 10);
      return 0;
    }
  }
  else if (v16 > 2)
  {
    return JSC::throwTypeError();
  }
  else
  {
    v50.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v50);
  }
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_beginLayer(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::InspectorInstrumentation *v11;
  WebCore::ScriptExecutionContext *v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  _QWORD v17[2];
  WTF::StringImpl *v18;

  v3 = *((_QWORD *)a2 + 5);
  v16 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "OffscreenCanvasRenderingContext2D", "beginLayer");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "OffscreenCanvasRenderingContext2D", "beginLayer");
  v9 = *(_QWORD *)(v3 + 24);
  if (*(_BYTE *)(v9 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v17[0] = 0;
    v17[1] = 0;
    v11 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
    if (v11)
    {
      v13 = WebCore::InspectorInstrumentation::instrumentingAgents(v11, v12);
      if (v13)
      {
        v14 = *(_QWORD *)(v13 + 96);
        if (v14)
          WebCore::InspectorCanvasAgent::recordAction(v14, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v18, v17);
      }
    }
    v15 = v18;
    v18 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v12);
      else
        *(_DWORD *)v15 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::beginLayer((WebCore::CanvasRenderingContext2DBase *)v9);
  return 10;
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_endLayer(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::InspectorInstrumentation *v11;
  WebCore::ScriptExecutionContext *v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  _QWORD v17[2];
  WTF::StringImpl *v18;

  v3 = *((_QWORD *)a2 + 5);
  v16 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "OffscreenCanvasRenderingContext2D", "endLayer");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "OffscreenCanvasRenderingContext2D", "endLayer");
  v9 = *(_QWORD *)(v3 + 24);
  if (*(_BYTE *)(v9 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v17[0] = 0;
    v17[1] = 0;
    v11 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
    if (v11)
    {
      v13 = WebCore::InspectorInstrumentation::instrumentingAgents(v11, v12);
      if (v13)
      {
        v14 = *(_QWORD *)(v13 + 96);
        if (v14)
          WebCore::InspectorCanvasAgent::recordAction(v14, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v18, v17);
      }
    }
    v15 = v18;
    v18 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v12);
      else
        *(_DWORD *)v15 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::endLayer((int32x2_t **)v9);
  return 10;
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_closePath(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::InspectorInstrumentation *v11;
  WebCore::ScriptExecutionContext *v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  _QWORD v17[2];
  WTF::StringImpl *v18;

  v3 = *((_QWORD *)a2 + 5);
  v16 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "OffscreenCanvasRenderingContext2D", "closePath");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "OffscreenCanvasRenderingContext2D", "closePath");
  v9 = *(_QWORD *)(v3 + 24);
  if (*(_BYTE *)(v9 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v17[0] = 0;
    v17[1] = 0;
    v11 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
    if (v11)
    {
      v13 = WebCore::InspectorInstrumentation::instrumentingAgents(v11, v12);
      if (v13)
      {
        v14 = *(_QWORD *)(v13 + 96);
        if (v14)
          WebCore::InspectorCanvasAgent::recordAction(v14, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v18, v17);
      }
    }
    v15 = v18;
    v18 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v12);
      else
        *(_DWORD *)v15 -= 2;
    }
  }
  WebCore::CanvasPath::closePath(v9 + 40);
  return 10;
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_moveTo(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  float v18;
  float v19;
  JSValue v21;
  WebCore::InspectorInstrumentation *v22;
  WebCore::ScriptExecutionContext *v23;
  uint64_t v24;
  WebCore::InspectorCanvasAgent *v25;
  WebCore::InspectorInstrumentation *v26;
  WebCore::ScriptExecutionContext *v27;
  uint64_t v28;
  WebCore::InspectorCanvasAgent *v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  _DWORD *v35;
  WTF::StringImpl *v36;
  double v37;
  double v38;
  JSC::VM *v39;
  _QWORD v40[2];
  WTF::StringImpl *v41;
  _QWORD v42[2];
  char v43;
  _DWORD *v44;
  char v45;
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v39 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v39, "OffscreenCanvasRenderingContext2D", "moveTo");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v39, "OffscreenCanvasRenderingContext2D", "moveTo");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v21);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v42[0] = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v42, this);
      v14 = v37;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v42[0] = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v42, this);
        v17 = v38;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        if (*(_BYTE *)(v12 + 25))
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v22 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
          if (v22
            && (v24 = WebCore::InspectorInstrumentation::instrumentingAgents(v22, v23)) != 0
            && (v25 = *(WebCore::InspectorCanvasAgent **)(v24 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v25, (WebCore::CanvasRenderingContext *)v12, v14, (uint64_t)v42);
          }
          else
          {
            LOBYTE(v42[0]) = 0;
            v43 = 0;
          }
          v26 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
          if (v26
            && (v28 = WebCore::InspectorInstrumentation::instrumentingAgents(v26, v27)) != 0
            && (v29 = *(WebCore::InspectorCanvasAgent **)(v28 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v29, (WebCore::CanvasRenderingContext *)v12, v17, (uint64_t)&v44);
          }
          else
          {
            LOBYTE(v44) = 0;
            v45 = 0;
          }
          v40[0] = v42;
          v40[1] = 2;
          v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
          if (v30)
          {
            v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31);
            if (v32)
            {
              v33 = *(_QWORD *)(v32 + 96);
              if (v33)
                WebCore::InspectorCanvasAgent::recordAction(v33, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v41, v40);
            }
          }
          if (v45)
          {
            v34 = v44;
            v44 = 0;
            if (v34)
            {
              if (*v34 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v34;
            }
          }
          if (v43)
          {
            v35 = (_DWORD *)v42[0];
            v42[0] = 0;
            if (v35)
            {
              if (*v35 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v35;
            }
          }
          v36 = v41;
          v41 = 0;
          if (v36)
          {
            if (*(_DWORD *)v36 == 2)
              WTF::StringImpl::destroy(v36, v31);
            else
              *(_DWORD *)v36 -= 2;
          }
        }
        v18 = v14;
        v19 = v17;
        WebCore::CanvasPath::moveTo(v12 + 40, v18, v19);
        return 10;
      }
    }
  }
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_lineTo(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  float v18;
  float v19;
  JSValue v21;
  WebCore::InspectorInstrumentation *v22;
  WebCore::ScriptExecutionContext *v23;
  uint64_t v24;
  WebCore::InspectorCanvasAgent *v25;
  WebCore::InspectorInstrumentation *v26;
  WebCore::ScriptExecutionContext *v27;
  uint64_t v28;
  WebCore::InspectorCanvasAgent *v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  _DWORD *v35;
  WTF::StringImpl *v36;
  double v37;
  double v38;
  JSC::VM *v39;
  _QWORD v40[2];
  WTF::StringImpl *v41;
  _QWORD v42[2];
  char v43;
  _DWORD *v44;
  char v45;
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v39 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v39, "OffscreenCanvasRenderingContext2D", "lineTo");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v39, "OffscreenCanvasRenderingContext2D", "lineTo");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v21);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v42[0] = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v42, this);
      v14 = v37;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v42[0] = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v42, this);
        v17 = v38;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        if (*(_BYTE *)(v12 + 25))
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v22 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
          if (v22
            && (v24 = WebCore::InspectorInstrumentation::instrumentingAgents(v22, v23)) != 0
            && (v25 = *(WebCore::InspectorCanvasAgent **)(v24 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v25, (WebCore::CanvasRenderingContext *)v12, v14, (uint64_t)v42);
          }
          else
          {
            LOBYTE(v42[0]) = 0;
            v43 = 0;
          }
          v26 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
          if (v26
            && (v28 = WebCore::InspectorInstrumentation::instrumentingAgents(v26, v27)) != 0
            && (v29 = *(WebCore::InspectorCanvasAgent **)(v28 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v29, (WebCore::CanvasRenderingContext *)v12, v17, (uint64_t)&v44);
          }
          else
          {
            LOBYTE(v44) = 0;
            v45 = 0;
          }
          v40[0] = v42;
          v40[1] = 2;
          v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
          if (v30)
          {
            v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31);
            if (v32)
            {
              v33 = *(_QWORD *)(v32 + 96);
              if (v33)
                WebCore::InspectorCanvasAgent::recordAction(v33, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v41, v40);
            }
          }
          if (v45)
          {
            v34 = v44;
            v44 = 0;
            if (v34)
            {
              if (*v34 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v34;
            }
          }
          if (v43)
          {
            v35 = (_DWORD *)v42[0];
            v42[0] = 0;
            if (v35)
            {
              if (*v35 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v35;
            }
          }
          v36 = v41;
          v41 = 0;
          if (v36)
          {
            if (*(_DWORD *)v36 == 2)
              WTF::StringImpl::destroy(v36, v31);
            else
              *(_DWORD *)v36 -= 2;
          }
        }
        v18 = v14;
        v19 = v17;
        WebCore::CanvasPath::lineTo((WebCore::CanvasPath *)(v12 + 40), v18, v19);
        return 10;
      }
    }
  }
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_quadraticCurveTo(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  float v24;
  float v25;
  float v26;
  float v27;
  JSValue v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  WebCore::InspectorCanvasAgent *v33;
  WebCore::InspectorInstrumentation *v34;
  WebCore::ScriptExecutionContext *v35;
  uint64_t v36;
  WebCore::InspectorCanvasAgent *v37;
  WebCore::InspectorInstrumentation *v38;
  WebCore::ScriptExecutionContext *v39;
  uint64_t v40;
  WebCore::InspectorCanvasAgent *v41;
  WebCore::InspectorInstrumentation *v42;
  WebCore::ScriptExecutionContext *v43;
  uint64_t v44;
  WebCore::InspectorCanvasAgent *v45;
  WebCore::InspectorInstrumentation *v46;
  WebCore::ScriptExecutionContext *v47;
  uint64_t v48;
  uint64_t v49;
  _DWORD *v50;
  _DWORD *v51;
  _DWORD *v52;
  _DWORD *v53;
  WTF::StringImpl *v54;
  double v55;
  double v56;
  double v57;
  double v58;
  JSC::VM *v59;
  _QWORD v60[2];
  WTF::StringImpl *v61;
  _QWORD v62[2];
  char v63;
  _DWORD *v64;
  char v65;
  _DWORD *v66;
  char v67;
  _DWORD *v68;
  char v69;
  uint64_t v70;

  v70 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v59 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v59, "OffscreenCanvasRenderingContext2D", "quadraticCurveTo");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v59, "OffscreenCanvasRenderingContext2D", "quadraticCurveTo");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v29.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v29);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v62[0] = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v62, this);
      v14 = v55;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v62[0] = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v62, this);
        v17 = v56;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = *((_QWORD *)a2 + 8);
        v62[0] = v18;
        v19 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v18 >= 0xFFFE000000000000)
        {
          v20 = (double)(int)v18;
        }
        else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v62, this);
          v20 = v57;
        }
        else
        {
          *(_QWORD *)&v20 = v18 - 0x2000000000000;
        }
        if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
        {
          return 0;
        }
        else
        {
          v21 = *((_QWORD *)a2 + 9);
          v62[0] = v21;
          v22 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v21 >= 0xFFFE000000000000)
          {
            v23 = (double)(int)v21;
          }
          else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v62, this);
            v23 = v58;
          }
          else
          {
            *(_QWORD *)&v23 = v21 - 0x2000000000000;
          }
          if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
          {
            return 0;
          }
          else
          {
            if (*(_BYTE *)(v12 + 25))
            {
              WTF::StringImpl::createWithoutCopyingNonEmpty();
              v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                           + 144))(*(_QWORD *)(v12 + 32));
              if (v30
                && (v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31)) != 0
                && (v33 = *(WebCore::InspectorCanvasAgent **)(v32 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v33, (WebCore::CanvasRenderingContext *)v12, v14, (uint64_t)v62);
              }
              else
              {
                LOBYTE(v62[0]) = 0;
                v63 = 0;
              }
              v34 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                           + 144))(*(_QWORD *)(v12 + 32));
              if (v34
                && (v36 = WebCore::InspectorInstrumentation::instrumentingAgents(v34, v35)) != 0
                && (v37 = *(WebCore::InspectorCanvasAgent **)(v36 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v37, (WebCore::CanvasRenderingContext *)v12, v17, (uint64_t)&v64);
              }
              else
              {
                LOBYTE(v64) = 0;
                v65 = 0;
              }
              v38 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                           + 144))(*(_QWORD *)(v12 + 32));
              if (v38
                && (v40 = WebCore::InspectorInstrumentation::instrumentingAgents(v38, v39)) != 0
                && (v41 = *(WebCore::InspectorCanvasAgent **)(v40 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v41, (WebCore::CanvasRenderingContext *)v12, v20, (uint64_t)&v66);
              }
              else
              {
                LOBYTE(v66) = 0;
                v67 = 0;
              }
              v42 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                           + 144))(*(_QWORD *)(v12 + 32));
              if (v42
                && (v44 = WebCore::InspectorInstrumentation::instrumentingAgents(v42, v43)) != 0
                && (v45 = *(WebCore::InspectorCanvasAgent **)(v44 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v45, (WebCore::CanvasRenderingContext *)v12, v23, (uint64_t)&v68);
              }
              else
              {
                LOBYTE(v68) = 0;
                v69 = 0;
              }
              v60[0] = v62;
              v60[1] = 4;
              v46 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                           + 144))(*(_QWORD *)(v12 + 32));
              if (v46)
              {
                v48 = WebCore::InspectorInstrumentation::instrumentingAgents(v46, v47);
                if (v48)
                {
                  v49 = *(_QWORD *)(v48 + 96);
                  if (v49)
                    WebCore::InspectorCanvasAgent::recordAction(v49, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v61, v60);
                }
              }
              if (v69)
              {
                v50 = v68;
                v68 = 0;
                if (v50)
                {
                  if (*v50 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v50;
                }
              }
              if (v67)
              {
                v51 = v66;
                v66 = 0;
                if (v51)
                {
                  if (*v51 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v51;
                }
              }
              if (v65)
              {
                v52 = v64;
                v64 = 0;
                if (v52)
                {
                  if (*v52 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v52;
                }
              }
              if (v63)
              {
                v53 = (_DWORD *)v62[0];
                v62[0] = 0;
                if (v53)
                {
                  if (*v53 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v53;
                }
              }
              v54 = v61;
              v61 = 0;
              if (v54)
              {
                if (*(_DWORD *)v54 == 2)
                  WTF::StringImpl::destroy(v54, v47);
                else
                  *(_DWORD *)v54 -= 2;
              }
            }
            v24 = v20;
            v25 = v17;
            v26 = v14;
            v27 = v23;
            WebCore::CanvasPath::quadraticCurveTo((WebCore::CanvasPath *)(v12 + 40), v26, v25, v24, v27);
            return 10;
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_bezierCurveTo(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  unint64_t v27;
  JSC::VM *v28;
  double v29;
  float v30;
  float v31;
  float v32;
  float v33;
  float v34;
  float v35;
  JSValue v37;
  WebCore::InspectorInstrumentation *v38;
  WebCore::ScriptExecutionContext *v39;
  uint64_t v40;
  WebCore::InspectorCanvasAgent *v41;
  WebCore::InspectorInstrumentation *v42;
  WebCore::ScriptExecutionContext *v43;
  uint64_t v44;
  WebCore::InspectorCanvasAgent *v45;
  WebCore::InspectorInstrumentation *v46;
  WebCore::ScriptExecutionContext *v47;
  uint64_t v48;
  WebCore::InspectorCanvasAgent *v49;
  WebCore::InspectorInstrumentation *v50;
  WebCore::ScriptExecutionContext *v51;
  uint64_t v52;
  WebCore::InspectorCanvasAgent *v53;
  WebCore::InspectorInstrumentation *v54;
  WebCore::ScriptExecutionContext *v55;
  uint64_t v56;
  WebCore::InspectorCanvasAgent *v57;
  WebCore::InspectorInstrumentation *v58;
  WebCore::ScriptExecutionContext *v59;
  uint64_t v60;
  WebCore::InspectorCanvasAgent *v61;
  WebCore::InspectorInstrumentation *v62;
  WebCore::ScriptExecutionContext *v63;
  uint64_t v64;
  uint64_t v65;
  _DWORD *v66;
  _DWORD *v67;
  _DWORD *v68;
  _DWORD *v69;
  _DWORD *v70;
  _DWORD *v71;
  WTF::StringImpl *v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  JSC::VM *v79;
  _QWORD v80[2];
  WTF::StringImpl *v81;
  _QWORD v82[2];
  char v83;
  _DWORD *v84;
  char v85;
  _DWORD *v86;
  char v87;
  _DWORD *v88;
  char v89;
  _DWORD *v90;
  char v91;
  _DWORD *v92;
  char v93;
  uint64_t v94;

  v94 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v79 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v79, "OffscreenCanvasRenderingContext2D", "bezierCurveTo");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v79, "OffscreenCanvasRenderingContext2D", "bezierCurveTo");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 5)
  {
    v37.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v37);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v82[0] = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v82, this);
      v14 = v73;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v82[0] = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v82, this);
        v17 = v74;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = *((_QWORD *)a2 + 8);
        v82[0] = v18;
        v19 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v18 >= 0xFFFE000000000000)
        {
          v20 = (double)(int)v18;
        }
        else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v82, this);
          v20 = v75;
        }
        else
        {
          *(_QWORD *)&v20 = v18 - 0x2000000000000;
        }
        if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
        {
          return 0;
        }
        else
        {
          v21 = *((_QWORD *)a2 + 9);
          v82[0] = v21;
          v22 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v21 >= 0xFFFE000000000000)
          {
            v23 = (double)(int)v21;
          }
          else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v82, this);
            v23 = v76;
          }
          else
          {
            *(_QWORD *)&v23 = v21 - 0x2000000000000;
          }
          if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
          {
            return 0;
          }
          else
          {
            v24 = *((_QWORD *)a2 + 10);
            v82[0] = v24;
            v25 = (JSC::VM *)*((_QWORD *)this + 7);
            if (v24 >= 0xFFFE000000000000)
            {
              v26 = (double)(int)v24;
            }
            else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v82, this);
              v26 = v77;
            }
            else
            {
              *(_QWORD *)&v26 = v24 - 0x2000000000000;
            }
            if (*((_DWORD *)v25 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v25))
            {
              return 0;
            }
            else
            {
              v27 = *((_QWORD *)a2 + 11);
              v82[0] = v27;
              v28 = (JSC::VM *)*((_QWORD *)this + 7);
              if (v27 >= 0xFFFE000000000000)
              {
                v29 = (double)(int)v27;
              }
              else if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
              {
                JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v82, this);
                v29 = v78;
              }
              else
              {
                *(_QWORD *)&v29 = v27 - 0x2000000000000;
              }
              if (*((_DWORD *)v28 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v28))
              {
                return 0;
              }
              else
              {
                if (*(_BYTE *)(v12 + 25))
                {
                  WTF::StringImpl::createWithoutCopyingNonEmpty();
                  v81 = (WTF::StringImpl *)v82[0];
                  v38 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                               + 144))(*(_QWORD *)(v12 + 32));
                  if (v38
                    && (v40 = WebCore::InspectorInstrumentation::instrumentingAgents(v38, v39)) != 0
                    && (v41 = *(WebCore::InspectorCanvasAgent **)(v40 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v41, (WebCore::CanvasRenderingContext *)v12, v14, (uint64_t)v82);
                  }
                  else
                  {
                    LOBYTE(v82[0]) = 0;
                    v83 = 0;
                  }
                  v42 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                               + 144))(*(_QWORD *)(v12 + 32));
                  if (v42
                    && (v44 = WebCore::InspectorInstrumentation::instrumentingAgents(v42, v43)) != 0
                    && (v45 = *(WebCore::InspectorCanvasAgent **)(v44 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v45, (WebCore::CanvasRenderingContext *)v12, v17, (uint64_t)&v84);
                  }
                  else
                  {
                    LOBYTE(v84) = 0;
                    v85 = 0;
                  }
                  v46 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                               + 144))(*(_QWORD *)(v12 + 32));
                  if (v46
                    && (v48 = WebCore::InspectorInstrumentation::instrumentingAgents(v46, v47)) != 0
                    && (v49 = *(WebCore::InspectorCanvasAgent **)(v48 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v49, (WebCore::CanvasRenderingContext *)v12, v20, (uint64_t)&v86);
                  }
                  else
                  {
                    LOBYTE(v86) = 0;
                    v87 = 0;
                  }
                  v50 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                               + 144))(*(_QWORD *)(v12 + 32));
                  if (v50
                    && (v52 = WebCore::InspectorInstrumentation::instrumentingAgents(v50, v51)) != 0
                    && (v53 = *(WebCore::InspectorCanvasAgent **)(v52 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v53, (WebCore::CanvasRenderingContext *)v12, v23, (uint64_t)&v88);
                  }
                  else
                  {
                    LOBYTE(v88) = 0;
                    v89 = 0;
                  }
                  v54 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                               + 144))(*(_QWORD *)(v12 + 32));
                  if (v54
                    && (v56 = WebCore::InspectorInstrumentation::instrumentingAgents(v54, v55)) != 0
                    && (v57 = *(WebCore::InspectorCanvasAgent **)(v56 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v57, (WebCore::CanvasRenderingContext *)v12, v26, (uint64_t)&v90);
                  }
                  else
                  {
                    LOBYTE(v90) = 0;
                    v91 = 0;
                  }
                  v58 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                               + 144))(*(_QWORD *)(v12 + 32));
                  if (v58
                    && (v60 = WebCore::InspectorInstrumentation::instrumentingAgents(v58, v59)) != 0
                    && (v61 = *(WebCore::InspectorCanvasAgent **)(v60 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v61, (WebCore::CanvasRenderingContext *)v12, v29, (uint64_t)&v92);
                  }
                  else
                  {
                    LOBYTE(v92) = 0;
                    v93 = 0;
                  }
                  v80[0] = v82;
                  v80[1] = 6;
                  v62 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                               + 144))(*(_QWORD *)(v12 + 32));
                  if (v62)
                  {
                    v64 = WebCore::InspectorInstrumentation::instrumentingAgents(v62, v63);
                    if (v64)
                    {
                      v65 = *(_QWORD *)(v64 + 96);
                      if (v65)
                        WebCore::InspectorCanvasAgent::recordAction(v65, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v81, v80);
                    }
                  }
                  if (v93)
                  {
                    v66 = v92;
                    v92 = 0;
                    if (v66)
                    {
                      if (*v66 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v66;
                    }
                  }
                  if (v91)
                  {
                    v67 = v90;
                    v90 = 0;
                    if (v67)
                    {
                      if (*v67 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v67;
                    }
                  }
                  if (v89)
                  {
                    v68 = v88;
                    v88 = 0;
                    if (v68)
                    {
                      if (*v68 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v68;
                    }
                  }
                  if (v87)
                  {
                    v69 = v86;
                    v86 = 0;
                    if (v69)
                    {
                      if (*v69 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v69;
                    }
                  }
                  if (v85)
                  {
                    v70 = v84;
                    v84 = 0;
                    if (v70)
                    {
                      if (*v70 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v70;
                    }
                  }
                  if (v83)
                  {
                    v71 = (_DWORD *)v82[0];
                    v82[0] = 0;
                    if (v71)
                    {
                      if (*v71 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v71;
                    }
                  }
                  v72 = v81;
                  v81 = 0;
                  if (v72)
                  {
                    if (*(_DWORD *)v72 == 2)
                      WTF::StringImpl::destroy(v72, v63);
                    else
                      *(_DWORD *)v72 -= 2;
                  }
                }
                v30 = v26;
                v31 = v23;
                v32 = v20;
                v33 = v17;
                v34 = v14;
                v35 = v29;
                WebCore::CanvasPath::bezierCurveTo((WebCore::CanvasPath *)(v12 + 40), v34, v33, v32, v31, v30, v35);
                return 10;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_arcTo(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  float v27;
  float v28;
  float v29;
  float v30;
  float v31;
  WTF::StringImpl *v32;
  JSValue v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  WebCore::InspectorCanvasAgent *v38;
  WTF::StringImpl *v39;
  WebCore::InspectorInstrumentation *v40;
  WebCore::ScriptExecutionContext *v41;
  uint64_t v42;
  WebCore::InspectorCanvasAgent *v43;
  WebCore::InspectorInstrumentation *v44;
  WebCore::ScriptExecutionContext *v45;
  uint64_t v46;
  WebCore::InspectorCanvasAgent *v47;
  WebCore::InspectorInstrumentation *v48;
  WebCore::ScriptExecutionContext *v49;
  uint64_t v50;
  WebCore::InspectorCanvasAgent *v51;
  WebCore::InspectorInstrumentation *v52;
  WebCore::ScriptExecutionContext *v53;
  uint64_t v54;
  WebCore::InspectorCanvasAgent *v55;
  WebCore::InspectorInstrumentation *v56;
  WebCore::ScriptExecutionContext *v57;
  uint64_t v58;
  uint64_t v59;
  _DWORD *v60;
  _DWORD *v61;
  _DWORD *v62;
  _DWORD *v63;
  WTF::StringImpl *v64;
  WTF::StringImpl *v65;
  double v66;
  JSC::VM *v67;
  double v68;
  JSC::VM *v69;
  double v70;
  JSC::VM *v71;
  double v72;
  double v73;
  uint64_t v74;
  WTF::StringImpl *v75;
  JSC::VM *v76;
  WTF::StringImpl **v77;
  WTF::StringImpl *v78;
  WTF::StringImpl *v79;
  WTF::StringImpl *v80;
  char v81;
  _DWORD *v82;
  char v83;
  _DWORD *v84;
  char v85;
  _DWORD *v86;
  char v87;
  _DWORD *v88;
  char v89;
  uint64_t v90;

  v90 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)this + 7);
  v74 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v74, "OffscreenCanvasRenderingContext2D", "arcTo");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v74, "OffscreenCanvasRenderingContext2D", "arcTo");
  v12 = *(_QWORD *)(v5 + 24);
  v76 = (JSC::VM *)v4;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 4)
  {
    v34.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException((JSC::VM *)v4, this, v34);
  }
  else
  {
    v13 = *((_QWORD *)a2 + 6);
    v79 = (WTF::StringImpl *)v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v79, this);
      v14 = v66;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v79 = (WTF::StringImpl *)v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v67 = (JSC::VM *)*((_QWORD *)this + 7);
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v79, this);
        v16 = v67;
        v17 = v68;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = *((_QWORD *)a2 + 8);
        v79 = (WTF::StringImpl *)v18;
        v19 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v18 >= 0xFFFE000000000000)
        {
          v20 = (double)(int)v18;
        }
        else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v69 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v79, this);
          v19 = v69;
          v20 = v70;
        }
        else
        {
          *(_QWORD *)&v20 = v18 - 0x2000000000000;
        }
        if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
        {
          return 0;
        }
        else
        {
          v21 = *((_QWORD *)a2 + 9);
          v79 = (WTF::StringImpl *)v21;
          v22 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v21 >= 0xFFFE000000000000)
          {
            v23 = (double)(int)v21;
          }
          else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            v71 = (JSC::VM *)*((_QWORD *)this + 7);
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v79, this);
            v22 = v71;
            v23 = v72;
          }
          else
          {
            *(_QWORD *)&v23 = v21 - 0x2000000000000;
          }
          if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
          {
            return 0;
          }
          else
          {
            v24 = *((_QWORD *)a2 + 10);
            v79 = (WTF::StringImpl *)v24;
            v25 = (JSC::VM *)*((_QWORD *)this + 7);
            if (v24 >= 0xFFFE000000000000)
            {
              v26 = (double)(int)v24;
            }
            else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v79, this);
              v26 = v73;
            }
            else
            {
              *(_QWORD *)&v26 = v24 - 0x2000000000000;
            }
            if (!*((_DWORD *)v25 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v25))
            {
              if (*(_BYTE *)(v12 + 25))
              {
                WTF::StringImpl::createWithoutCopyingNonEmpty();
                v75 = v79;
                v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                             + 144))(*(_QWORD *)(v12 + 32));
                if (v35
                  && (v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36)) != 0
                  && (v38 = *(WebCore::InspectorCanvasAgent **)(v37 + 96)) != 0)
                {
                  WebCore::InspectorCanvasAgent::processArgument(v38, (WebCore::CanvasRenderingContext *)v12, v14, (uint64_t)&v79);
                }
                else
                {
                  LOBYTE(v79) = 0;
                  v81 = 0;
                }
                v40 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                             + 144))(*(_QWORD *)(v12 + 32));
                if (v40
                  && (v42 = WebCore::InspectorInstrumentation::instrumentingAgents(v40, v41)) != 0
                  && (v43 = *(WebCore::InspectorCanvasAgent **)(v42 + 96)) != 0)
                {
                  WebCore::InspectorCanvasAgent::processArgument(v43, (WebCore::CanvasRenderingContext *)v12, v17, (uint64_t)&v82);
                }
                else
                {
                  LOBYTE(v82) = 0;
                  v83 = 0;
                }
                v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                             + 144))(*(_QWORD *)(v12 + 32));
                if (v44
                  && (v46 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, v45)) != 0
                  && (v47 = *(WebCore::InspectorCanvasAgent **)(v46 + 96)) != 0)
                {
                  WebCore::InspectorCanvasAgent::processArgument(v47, (WebCore::CanvasRenderingContext *)v12, v20, (uint64_t)&v84);
                }
                else
                {
                  LOBYTE(v84) = 0;
                  v85 = 0;
                }
                v48 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                             + 144))(*(_QWORD *)(v12 + 32));
                if (v48
                  && (v50 = WebCore::InspectorInstrumentation::instrumentingAgents(v48, v49)) != 0
                  && (v51 = *(WebCore::InspectorCanvasAgent **)(v50 + 96)) != 0)
                {
                  WebCore::InspectorCanvasAgent::processArgument(v51, (WebCore::CanvasRenderingContext *)v12, v23, (uint64_t)&v86);
                }
                else
                {
                  LOBYTE(v86) = 0;
                  v87 = 0;
                }
                v52 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                             + 144))(*(_QWORD *)(v12 + 32));
                if (v52
                  && (v54 = WebCore::InspectorInstrumentation::instrumentingAgents(v52, v53)) != 0
                  && (v55 = *(WebCore::InspectorCanvasAgent **)(v54 + 96)) != 0)
                {
                  WebCore::InspectorCanvasAgent::processArgument(v55, (WebCore::CanvasRenderingContext *)v12, v26, (uint64_t)&v88);
                }
                else
                {
                  LOBYTE(v88) = 0;
                  v89 = 0;
                }
                v77 = &v79;
                v78 = (WTF::StringImpl *)5;
                v56 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                             + 144))(*(_QWORD *)(v12 + 32));
                if (v56)
                {
                  v58 = WebCore::InspectorInstrumentation::instrumentingAgents(v56, v57);
                  if (v58)
                  {
                    v59 = *(_QWORD *)(v58 + 96);
                    if (v59)
                      WebCore::InspectorCanvasAgent::recordAction(v59, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v75, &v77);
                  }
                }
                if (v89)
                {
                  v60 = v88;
                  v88 = 0;
                  if (v60)
                  {
                    if (*v60 == 1)
                      WTF::JSONImpl::Value::operator delete();
                    else
                      --*v60;
                  }
                }
                if (v87)
                {
                  v61 = v86;
                  v86 = 0;
                  if (v61)
                  {
                    if (*v61 == 1)
                      WTF::JSONImpl::Value::operator delete();
                    else
                      --*v61;
                  }
                }
                if (v85)
                {
                  v62 = v84;
                  v84 = 0;
                  if (v62)
                  {
                    if (*v62 == 1)
                      WTF::JSONImpl::Value::operator delete();
                    else
                      --*v62;
                  }
                }
                if (v83)
                {
                  v63 = v82;
                  v82 = 0;
                  if (v63)
                  {
                    if (*v63 == 1)
                      WTF::JSONImpl::Value::operator delete();
                    else
                      --*v63;
                  }
                }
                if (v81)
                {
                  v64 = v79;
                  v79 = 0;
                  if (v64)
                  {
                    if (*(_DWORD *)v64 == 1)
                      WTF::JSONImpl::Value::operator delete();
                    else
                      --*(_DWORD *)v64;
                  }
                }
                v65 = v75;
                v75 = 0;
                if (v65)
                {
                  if (*(_DWORD *)v65 == 2)
                    WTF::StringImpl::destroy(v65, v57);
                  else
                    *(_DWORD *)v65 -= 2;
                }
              }
              v27 = v23;
              v28 = v20;
              v29 = v17;
              v30 = v14;
              v31 = v26;
              WebCore::CanvasPath::arcTo((WebCore::CanvasPath *)(v12 + 40), v30, v29, v28, v27, v31, (uint64_t)&v79);
              if (!v81)
                return 10;
              LOBYTE(v77) = (_BYTE)v79;
              v39 = v80;
              v78 = v80;
              if (!*(_QWORD *)(v4 + 16))
              {
                WebCore::propagateExceptionSlowPath(this, &v76, (unsigned __int8 *)&v77);
                v39 = v78;
              }
              v78 = 0;
              if (v39)
              {
                if (*(_DWORD *)v39 == 2)
                  WTF::StringImpl::destroy(v39, v32);
                else
                  *(_DWORD *)v39 -= 2;
              }
            }
            return 0;
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_rect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  float v24;
  float v25;
  float v26;
  float v27;
  JSValue v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  WebCore::InspectorCanvasAgent *v33;
  WebCore::InspectorInstrumentation *v34;
  WebCore::ScriptExecutionContext *v35;
  uint64_t v36;
  WebCore::InspectorCanvasAgent *v37;
  WebCore::InspectorInstrumentation *v38;
  WebCore::ScriptExecutionContext *v39;
  uint64_t v40;
  WebCore::InspectorCanvasAgent *v41;
  WebCore::InspectorInstrumentation *v42;
  WebCore::ScriptExecutionContext *v43;
  uint64_t v44;
  WebCore::InspectorCanvasAgent *v45;
  WebCore::InspectorInstrumentation *v46;
  WebCore::ScriptExecutionContext *v47;
  uint64_t v48;
  uint64_t v49;
  _DWORD *v50;
  _DWORD *v51;
  _DWORD *v52;
  _DWORD *v53;
  WTF::StringImpl *v54;
  double v55;
  double v56;
  double v57;
  double v58;
  JSC::VM *v59;
  _QWORD v60[2];
  WTF::StringImpl *v61;
  _DWORD *v62;
  float v63;
  float v64;
  char v65;
  _DWORD *v66;
  char v67;
  _DWORD *v68;
  char v69;
  _DWORD *v70;
  char v71;
  uint64_t v72;

  v72 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v59 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v59, "OffscreenCanvasRenderingContext2D", "rect");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v59, "OffscreenCanvasRenderingContext2D", "rect");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v29.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v29);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v62 = (_DWORD *)v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v62, this);
      v14 = v55;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v62 = (_DWORD *)v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v62, this);
        v17 = v56;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = *((_QWORD *)a2 + 8);
        v62 = (_DWORD *)v18;
        v19 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v18 >= 0xFFFE000000000000)
        {
          v20 = (double)(int)v18;
        }
        else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v62, this);
          v20 = v57;
        }
        else
        {
          *(_QWORD *)&v20 = v18 - 0x2000000000000;
        }
        if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
        {
          return 0;
        }
        else
        {
          v21 = *((_QWORD *)a2 + 9);
          v62 = (_DWORD *)v21;
          v22 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v21 >= 0xFFFE000000000000)
          {
            v23 = (double)(int)v21;
          }
          else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v62, this);
            v23 = v58;
          }
          else
          {
            *(_QWORD *)&v23 = v21 - 0x2000000000000;
          }
          if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
          {
            return 0;
          }
          else
          {
            if (*(_BYTE *)(v12 + 25))
            {
              WTF::StringImpl::createWithoutCopyingNonEmpty();
              v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                           + 144))(*(_QWORD *)(v12 + 32));
              if (v30
                && (v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31)) != 0
                && (v33 = *(WebCore::InspectorCanvasAgent **)(v32 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v33, (WebCore::CanvasRenderingContext *)v12, v14, (uint64_t)&v62);
              }
              else
              {
                LOBYTE(v62) = 0;
                v65 = 0;
              }
              v34 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                           + 144))(*(_QWORD *)(v12 + 32));
              if (v34
                && (v36 = WebCore::InspectorInstrumentation::instrumentingAgents(v34, v35)) != 0
                && (v37 = *(WebCore::InspectorCanvasAgent **)(v36 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v37, (WebCore::CanvasRenderingContext *)v12, v17, (uint64_t)&v66);
              }
              else
              {
                LOBYTE(v66) = 0;
                v67 = 0;
              }
              v38 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                           + 144))(*(_QWORD *)(v12 + 32));
              if (v38
                && (v40 = WebCore::InspectorInstrumentation::instrumentingAgents(v38, v39)) != 0
                && (v41 = *(WebCore::InspectorCanvasAgent **)(v40 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v41, (WebCore::CanvasRenderingContext *)v12, v20, (uint64_t)&v68);
              }
              else
              {
                LOBYTE(v68) = 0;
                v69 = 0;
              }
              v42 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                           + 144))(*(_QWORD *)(v12 + 32));
              if (v42
                && (v44 = WebCore::InspectorInstrumentation::instrumentingAgents(v42, v43)) != 0
                && (v45 = *(WebCore::InspectorCanvasAgent **)(v44 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v45, (WebCore::CanvasRenderingContext *)v12, v23, (uint64_t)&v70);
              }
              else
              {
                LOBYTE(v70) = 0;
                v71 = 0;
              }
              v60[0] = &v62;
              v60[1] = 4;
              v46 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                           + 144))(*(_QWORD *)(v12 + 32));
              if (v46)
              {
                v48 = WebCore::InspectorInstrumentation::instrumentingAgents(v46, v47);
                if (v48)
                {
                  v49 = *(_QWORD *)(v48 + 96);
                  if (v49)
                    WebCore::InspectorCanvasAgent::recordAction(v49, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v61, v60);
                }
              }
              if (v71)
              {
                v50 = v70;
                v70 = 0;
                if (v50)
                {
                  if (*v50 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v50;
                }
              }
              if (v69)
              {
                v51 = v68;
                v68 = 0;
                if (v51)
                {
                  if (*v51 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v51;
                }
              }
              if (v67)
              {
                v52 = v66;
                v66 = 0;
                if (v52)
                {
                  if (*v52 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v52;
                }
              }
              if (v65)
              {
                v53 = v62;
                v62 = 0;
                if (v53)
                {
                  if (*v53 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v53;
                }
              }
              v54 = v61;
              v61 = 0;
              if (v54)
              {
                if (*(_DWORD *)v54 == 2)
                  WTF::StringImpl::destroy(v54, v47);
                else
                  *(_DWORD *)v54 -= 2;
              }
            }
            if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)(v12 + 40) + 16))(v12 + 40))
            {
              v24 = v14;
              if ((LODWORD(v24) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
              {
                v25 = v17;
                if ((LODWORD(v25) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
                {
                  v26 = v20;
                  if ((LODWORD(v26) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
                  {
                    v27 = v23;
                    if ((LODWORD(v27) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
                    {
                      if (v26 == 0.0 && v27 == 0.0)
                      {
                        *(float *)&v62 = v14;
                        *((float *)&v62 + 1) = v17;
                        WebCore::Path::moveTo((WebCore::Path *)(v12 + 48), (const WebCore::FloatPoint *)&v62);
                      }
                      else
                      {
                        *(float *)&v62 = v14;
                        *((float *)&v62 + 1) = v17;
                        v63 = v20;
                        v64 = v23;
                        WebCore::Path::addRect((WebCore::Path *)(v12 + 48), (const WebCore::FloatRect *)&v62);
                      }
                    }
                  }
                }
              }
            }
            return 10;
          }
        }
      }
    }
  }
}

_BYTE *WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_roundRect(WebCore *this, JSC::JSGlobalObject *a2, JSValue a3, WebCore::JSCanvasRenderingContext2D *a4)
{
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  int hasIteratorMethod;
  int v14;
  uint64_t v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  double v18;
  WTF::StringImpl *v19;
  JSC::VM *v20;
  double v21;
  WTF::StringImpl *v22;
  JSC::VM *v23;
  double v24;
  WTF::StringImpl *v25;
  JSC::VM *v26;
  double v27;
  WTF::StringImpl **v28;
  float v29;
  float v30;
  float v31;
  WTF *v32;
  WTF *v33;
  float v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  int v38;
  JSValue v39;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  char hasExceptionsAfterHandlingTraps;
  void *v45;
  WTF::StringImpl *v46;
  WebCore::InspectorInstrumentation *v47;
  WebCore::ScriptExecutionContext *v48;
  uint64_t v49;
  WebCore::InspectorCanvasAgent *v50;
  WTF::StringImpl *v51;
  WTF::StringImpl *v52;
  WebCore::InspectorInstrumentation *v53;
  WebCore::ScriptExecutionContext *v54;
  uint64_t v55;
  WebCore::InspectorCanvasAgent *v56;
  WebCore::InspectorInstrumentation *v57;
  WebCore::ScriptExecutionContext *v58;
  uint64_t v59;
  WebCore::InspectorCanvasAgent *v60;
  WebCore::InspectorInstrumentation *v61;
  WebCore::ScriptExecutionContext *v62;
  uint64_t v63;
  WebCore::InspectorCanvasAgent *v64;
  WebCore::InspectorInstrumentation *v65;
  WebCore::ScriptExecutionContext *v66;
  uint64_t v67;
  uint64_t v68;
  WebCore::InspectorInstrumentation *v69;
  WebCore::ScriptExecutionContext *v70;
  uint64_t v71;
  uint64_t v72;
  _DWORD *v73;
  _DWORD *v74;
  _DWORD *v75;
  _DWORD *v76;
  WTF::StringImpl *v77;
  WTF::StringImpl *v78;
  double v79;
  JSC::VM *v80;
  double v81;
  JSC::VM *v82;
  double v83;
  JSC::VM *v84;
  double v85;
  JSC::VM *v86;
  WTF::StringImpl *v87;
  WTF *v88;
  WTF::StringImpl *v89;
  int v90;
  JSC::VM *v91;
  WTF::StringImpl **v92;
  WTF::StringImpl *v93;
  WTF::StringImpl *v94;
  WTF::StringImpl *v95;
  char v96;
  _DWORD *v97;
  char v98;
  _DWORD *v99;
  char v100;
  _DWORD *v101;
  char v102;
  _DWORD *v103;
  char v104;
  uint64_t v105;

  v105 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v86 = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v86, "OffscreenCanvasRenderingContext2D", "roundRect");
  v7 = (uint64_t)a2;
  v8 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v9 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v10 = (char **)(16 * v8);
  if ((_DWORD)v8)
    v11 = v10 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v11 = 1;
  if (!v11)
  {
    do
    {
      v10 = (char **)v10[2];
      v9 = v10 != 0;
    }
    while (v10 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v10 != 0);
  }
  if (!v9)
    return WebCore::throwThisTypeError((int)this, (int)&v86, "OffscreenCanvasRenderingContext2D", "roundRect");
  if ((unint64_t)(*((int *)a2 + 8) - 6) > 0xFFFFFFFFFFFFFFFALL)
  {
    v39.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v5, this, v39);
  }
  if ((*((_QWORD *)a2 + 10) & 0xFFFFFFFFFFFFFFF7) == 2)
    return (_BYTE *)WebCore::jsCanvasRenderingContext2DPrototypeFunction_roundRect2Body(this, (WTF::StringImpl **)v7, *(JSC::CallFrame **)(v6 + 24), a4);
  hasIteratorMethod = JSC::hasIteratorMethod(this, *((JSC::JSGlobalObject **)a2 + 10), a3);
  v14 = hasIteratorMethod;
  if (!*((_DWORD *)v5 + 20))
  {
    if (hasIteratorMethod)
    {
LABEL_16:
      v15 = *(_QWORD *)(v6 + 24);
      v16 = *((_QWORD *)this + 7);
      v91 = (JSC::VM *)v16;
      v17 = *(WTF::StringImpl **)(v7 + 48);
      v94 = v17;
      if ((unint64_t)v17 >= 0xFFFE000000000000)
      {
        v18 = (double)(int)v17;
      }
      else
      {
        if ((unint64_t)v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          goto LABEL_139;
        *(_QWORD *)&v18 = (char *)v17 - 0x2000000000000;
      }
      while (1)
      {
        if (*(_DWORD *)(v16 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v16))
          return 0;
        v19 = *(WTF::StringImpl **)(v7 + 56);
        v94 = v19;
        v20 = (JSC::VM *)*((_QWORD *)this + 7);
        if ((unint64_t)v19 >= 0xFFFE000000000000)
        {
          v21 = (double)(int)v19;
        }
        else if ((unint64_t)v19 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v80 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v94, this);
          v20 = v80;
          v21 = v81;
        }
        else
        {
          *(_QWORD *)&v21 = (char *)v19 - 0x2000000000000;
        }
        if (*((_DWORD *)v20 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v20))
          return 0;
        v22 = *(WTF::StringImpl **)(v7 + 64);
        v94 = v22;
        v23 = (JSC::VM *)*((_QWORD *)this + 7);
        if ((unint64_t)v22 >= 0xFFFE000000000000)
        {
          v24 = (double)(int)v22;
        }
        else if ((unint64_t)v22 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v82 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v94, this);
          v23 = v82;
          v24 = v83;
        }
        else
        {
          *(_QWORD *)&v24 = (char *)v22 - 0x2000000000000;
        }
        if (*((_DWORD *)v23 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v23))
          return 0;
        v25 = *(WTF::StringImpl **)(v7 + 72);
        v94 = v25;
        v26 = (JSC::VM *)*((_QWORD *)this + 7);
        if ((unint64_t)v25 >= 0xFFFE000000000000)
        {
          v27 = (double)(int)v25;
        }
        else if ((unint64_t)v25 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v84 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v94, this);
          v26 = v84;
          v27 = v85;
        }
        else
        {
          *(_QWORD *)&v27 = (char *)v25 - 0x2000000000000;
        }
        if (*((_DWORD *)v26 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v26))
          return 0;
        v7 = *(_QWORD *)(v7 + 80);
        v28 = (WTF::StringImpl **)*((_QWORD *)this + 7);
        v92 = v28;
        if ((v7 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v7 + 5) <= 0x16u)
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          JSC::throwTypeError();
          v43 = v94;
          v94 = 0;
          if (v43)
          {
            if (*(_DWORD *)v43 == 2)
              WTF::StringImpl::destroy(v43, v42);
            else
              *(_DWORD *)v43 -= 2;
          }
          v37 = 0;
          v38 = 1;
          v90 = 1;
          goto LABEL_51;
        }
        v94 = 0;
        v95 = 0;
        v88 = (WTF *)&v94;
        JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLUnion<WebCore::IDLUnrestrictedDouble,WebCore::IDLDictionary<WebCore::DOMPointInit>>>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<std::variant<double,WebCore::DOMPointInit>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(this, v7, (uint64_t *)&v88);
        if (*((_DWORD *)v28 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v28) & 1) != 0)
        {
          v46 = v94;
          v38 = 1;
          v90 = 1;
          if (!v94)
          {
            v37 = 0;
            goto LABEL_51;
          }
          v94 = 0;
          LODWORD(v95) = 0;
          WTF::fastFree(v46, v45);
          v38 = v90;
          if (v90)
          {
            v37 = 0;
            goto LABEL_42;
          }
        }
        else
        {
          v88 = v94;
          v89 = v95;
          v90 = 0;
        }
        if (!*(_BYTE *)(v15 + 25))
          goto LABEL_37;
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v87 = v94;
        v47 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v15 + 32) + 144))(*(_QWORD *)(v15 + 32));
        if (v47
          && (v49 = WebCore::InspectorInstrumentation::instrumentingAgents(v47, v48)) != 0
          && (v50 = *(WebCore::InspectorCanvasAgent **)(v49 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v50, (WebCore::CanvasRenderingContext *)v15, v18, (uint64_t)&v94);
        }
        else
        {
          LOBYTE(v94) = 0;
          v96 = 0;
        }
        v53 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v15 + 32) + 144))(*(_QWORD *)(v15 + 32));
        if (v53
          && (v55 = WebCore::InspectorInstrumentation::instrumentingAgents(v53, v54)) != 0
          && (v56 = *(WebCore::InspectorCanvasAgent **)(v55 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v56, (WebCore::CanvasRenderingContext *)v15, v21, (uint64_t)&v97);
        }
        else
        {
          LOBYTE(v97) = 0;
          v98 = 0;
        }
        v57 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v15 + 32) + 144))(*(_QWORD *)(v15 + 32));
        if (v57
          && (v59 = WebCore::InspectorInstrumentation::instrumentingAgents(v57, v58)) != 0
          && (v60 = *(WebCore::InspectorCanvasAgent **)(v59 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v60, (WebCore::CanvasRenderingContext *)v15, v24, (uint64_t)&v99);
        }
        else
        {
          LOBYTE(v99) = 0;
          v100 = 0;
        }
        v61 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v15 + 32) + 144))(*(_QWORD *)(v15 + 32));
        if (v61
          && (v63 = WebCore::InspectorInstrumentation::instrumentingAgents(v61, v62)) != 0
          && (v64 = *(WebCore::InspectorCanvasAgent **)(v63 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v64, (WebCore::CanvasRenderingContext *)v15, v27, (uint64_t)&v101);
        }
        else
        {
          LOBYTE(v101) = 0;
          v102 = 0;
        }
        if (!v90)
        {
          v65 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v15 + 32) + 144))(*(_QWORD *)(v15 + 32));
          if (v65
            && (v67 = WebCore::InspectorInstrumentation::instrumentingAgents(v65, v66)) != 0
            && (v68 = *(_QWORD *)(v67 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v68, v15, (uint64_t)&v88, (uint64_t)&v103);
          }
          else
          {
            LOBYTE(v103) = 0;
            v104 = 0;
          }
          v92 = &v94;
          v93 = (WTF::StringImpl *)5;
          v69 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v15 + 32) + 144))(*(_QWORD *)(v15 + 32));
          if (v69)
          {
            v71 = WebCore::InspectorInstrumentation::instrumentingAgents(v69, v70);
            if (v71)
            {
              v72 = *(_QWORD *)(v71 + 96);
              if (v72)
                WebCore::InspectorCanvasAgent::recordAction(v72, (WebCore::CanvasRenderingContext *)v15, (const WTF::StringImpl *)&v87, &v92);
            }
          }
          if (v104)
          {
            v73 = v103;
            v103 = 0;
            if (v73)
            {
              if (*v73 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v73;
            }
          }
          if (v102)
          {
            v74 = v101;
            v101 = 0;
            if (v74)
            {
              if (*v74 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v74;
            }
          }
          if (v100)
          {
            v75 = v99;
            v99 = 0;
            if (v75)
            {
              if (*v75 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v75;
            }
          }
          if (v98)
          {
            v76 = v97;
            v97 = 0;
            if (v76)
            {
              if (*v76 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v76;
            }
          }
          if (v96)
          {
            v77 = v94;
            v94 = 0;
            if (v77)
            {
              if (*(_DWORD *)v77 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*(_DWORD *)v77;
            }
          }
          v78 = v87;
          v87 = 0;
          if (v78)
          {
            if (*(_DWORD *)v78 == 2)
              WTF::StringImpl::destroy(v78, v70);
            else
              *(_DWORD *)v78 -= 2;
          }
          if (!v90)
          {
LABEL_37:
            v29 = v24;
            v30 = v21;
            v31 = v18;
            v32 = (WTF *)(v15 + 40);
            v33 = v88;
            v34 = v27;
            v35 = HIDWORD(v89);
            v88 = 0;
            v89 = 0;
            WebCore::CanvasPath::roundRect(v32, (uint64_t)v33, v35, &v94, v31, v30, v29, v34);
            if (v33)
              WTF::fastFree(v33, v36);
            if (!v96)
            {
              v37 = 10;
              goto LABEL_41;
            }
            LOBYTE(v92) = (_BYTE)v94;
            v51 = v95;
            v95 = 0;
            v93 = v51;
            if (!*(_QWORD *)(v16 + 16))
            {
              WebCore::propagateExceptionSlowPath(this, &v91, (unsigned __int8 *)&v92);
              v51 = v93;
            }
            v93 = 0;
            if (v51)
            {
              if (*(_DWORD *)v51 == 2)
                WTF::StringImpl::destroy(v51, (WTF::StringImpl *)v36);
              else
                *(_DWORD *)v51 -= 2;
            }
            if (v96)
            {
              v52 = v95;
              v95 = 0;
              if (v52)
              {
                if (*(_DWORD *)v52 != 2)
                {
                  v37 = 0;
                  *(_DWORD *)v52 -= 2;
                  goto LABEL_41;
                }
                WTF::StringImpl::destroy(v52, (WTF::StringImpl *)v36);
              }
            }
            v37 = 0;
LABEL_41:
            v38 = v90;
LABEL_42:
            if (v38 == -1)
              return (_BYTE *)v37;
LABEL_51:
            ((void (*)(WTF::StringImpl **, WTF **))off_1E32C2FC0[v38])(&v94, &v88);
            return (_BYTE *)v37;
          }
        }
        std::__throw_bad_variant_access[abi:sn180100]();
LABEL_139:
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v94, this);
        v18 = v79;
      }
    }
    return (_BYTE *)WebCore::jsCanvasRenderingContext2DPrototypeFunction_roundRect2Body(this, (WTF::StringImpl **)v7, *(JSC::CallFrame **)(v6 + 24), a4);
  }
  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
  if ((hasExceptionsAfterHandlingTraps & 1) == 0 && ((v14 ^ 1) & 1) == 0)
    goto LABEL_16;
  if ((hasExceptionsAfterHandlingTraps & 1) != 0)
    return 0;
  return (_BYTE *)WebCore::jsCanvasRenderingContext2DPrototypeFunction_roundRect2Body(this, (WTF::StringImpl **)v7, *(JSC::CallFrame **)(v6 + 24), a4);
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_arc(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  unint64_t v27;
  JSC::VM *v28;
  double v29;
  int v30;
  uint64_t v31;
  int *v32;
  int v33;
  _BOOL8 v34;
  float v35;
  float v36;
  float v37;
  unsigned int v38;
  unsigned int v39;
  WTF::StringImpl *v40;
  JSValue v42;
  WebCore::InspectorInstrumentation *v43;
  WebCore::ScriptExecutionContext *v44;
  uint64_t v45;
  WebCore::InspectorCanvasAgent *v46;
  WTF::StringImpl *v47;
  WebCore::InspectorInstrumentation *v48;
  WebCore::ScriptExecutionContext *v49;
  uint64_t v50;
  WebCore::InspectorCanvasAgent *v51;
  WebCore::InspectorInstrumentation *v52;
  WebCore::ScriptExecutionContext *v53;
  uint64_t v54;
  WebCore::InspectorCanvasAgent *v55;
  WebCore::InspectorInstrumentation *v56;
  WebCore::ScriptExecutionContext *v57;
  uint64_t v58;
  WebCore::InspectorCanvasAgent *v59;
  WebCore::InspectorInstrumentation *v60;
  WebCore::ScriptExecutionContext *v61;
  uint64_t v62;
  WebCore::InspectorCanvasAgent *v63;
  WebCore::InspectorInstrumentation *v64;
  WebCore::ScriptExecutionContext *v65;
  uint64_t v66;
  WebCore::InspectorCanvasAgent *v67;
  WebCore::InspectorInstrumentation *v68;
  WebCore::ScriptExecutionContext *v69;
  uint64_t v70;
  uint64_t v71;
  _DWORD *v72;
  _DWORD *v73;
  _DWORD *v74;
  _DWORD *v75;
  _DWORD *v76;
  WTF::StringImpl *v77;
  WTF::StringImpl *v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  BOOL v84;
  JSC::VM *v85;
  WTF::StringImpl *v86;
  JSC::VM *v87;
  WTF::StringImpl **v88;
  WTF::StringImpl *v89;
  WTF::StringImpl *v90;
  WTF::StringImpl *v91;
  char v92;
  _DWORD *v93;
  char v94;
  _DWORD *v95;
  char v96;
  _DWORD *v97;
  char v98;
  _DWORD *v99;
  char v100;
  _DWORD *v101;
  char v102;
  uint64_t v103;

  v103 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v85 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v85, "OffscreenCanvasRenderingContext2D", "arc");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v85, "OffscreenCanvasRenderingContext2D", "arc");
  v12 = *(_QWORD *)(v5 + 24);
  v87 = v4;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 4)
  {
    v42.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v42);
  }
  v13 = *((_QWORD *)a2 + 6);
  v90 = (WTF::StringImpl *)v13;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v90, this);
    v14 = v79;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  v15 = *((_QWORD *)a2 + 7);
  v90 = (WTF::StringImpl *)v15;
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v15 >= 0xFFFE000000000000)
  {
    v17 = (double)(int)v15;
  }
  else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v90, this);
    v17 = v80;
  }
  else
  {
    *(_QWORD *)&v17 = v15 - 0x2000000000000;
  }
  if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
    return 0;
  v18 = *((_QWORD *)a2 + 8);
  v90 = (WTF::StringImpl *)v18;
  v19 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v18 >= 0xFFFE000000000000)
  {
    v20 = (double)(int)v18;
  }
  else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v90, this);
    v20 = v81;
  }
  else
  {
    *(_QWORD *)&v20 = v18 - 0x2000000000000;
  }
  if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
    return 0;
  v21 = *((_QWORD *)a2 + 9);
  v90 = (WTF::StringImpl *)v21;
  v22 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v21 >= 0xFFFE000000000000)
  {
    v23 = (double)(int)v21;
  }
  else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v90, this);
    v23 = v82;
  }
  else
  {
    *(_QWORD *)&v23 = v21 - 0x2000000000000;
  }
  if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
    return 0;
  v24 = *((_QWORD *)a2 + 10);
  v90 = (WTF::StringImpl *)v24;
  v25 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v24 >= 0xFFFE000000000000)
  {
    v26 = (double)(int)v24;
  }
  else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v90, this);
    v26 = v83;
  }
  else
  {
    *(_QWORD *)&v26 = v24 - 0x2000000000000;
  }
  if (*((_DWORD *)v25 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v25))
    return 0;
  if ((unint64_t)(*((int *)a2 + 8) - 7) >= 0xFFFFFFFFFFFFFFFALL)
  {
    v28 = (JSC::VM *)*((_QWORD *)this + 7);
    v27 = 10;
    goto LABEL_44;
  }
  v27 = *((_QWORD *)a2 + 11);
  v28 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v27 >= 0xFFFE000000000000)
  {
    v84 = (_DWORD)v27 == 0;
    goto LABEL_156;
  }
  *(_QWORD *)&v29 = v27 - 0x2000000000000;
  if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v27 & 0xFFFE000000000002) == 0)
    {
      v30 = *(unsigned __int8 *)(v27 + 5);
      if (v30 == 3)
      {
        v33 = *(_DWORD *)(v27 + 8);
LABEL_152:
        v84 = v33 == 0;
        goto LABEL_156;
      }
      if (v30 == 2)
      {
        v31 = *(_QWORD *)(v27 + 8);
        if ((v31 & 1) != 0)
          v32 = (int *)(v27 + 16);
        else
          v32 = (int *)(v31 + 4);
        v33 = *v32;
        goto LABEL_152;
      }
      if ((*(_BYTE *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0xA) & 1) != 0)
      {
        v84 = *(_QWORD *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_156:
        v34 = !v84;
        goto LABEL_45;
      }
      goto LABEL_154;
    }
LABEL_44:
    v34 = v27 == 7;
    goto LABEL_45;
  }
  if (v29 <= 0.0)
  {
    v34 = v29 < 0.0;
    goto LABEL_45;
  }
LABEL_154:
  v34 = 1;
LABEL_45:
  if (!*((_DWORD *)v28 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v28) & 1) == 0)
  {
    if (*(_BYTE *)(v12 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v86 = v90;
      v43 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
      if (v43
        && (v45 = WebCore::InspectorInstrumentation::instrumentingAgents(v43, v44)) != 0
        && (v46 = *(WebCore::InspectorCanvasAgent **)(v45 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v46, (WebCore::CanvasRenderingContext *)v12, v14, (uint64_t)&v90);
      }
      else
      {
        LOBYTE(v90) = 0;
        v92 = 0;
      }
      v48 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
      if (v48
        && (v50 = WebCore::InspectorInstrumentation::instrumentingAgents(v48, v49)) != 0
        && (v51 = *(WebCore::InspectorCanvasAgent **)(v50 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v51, (WebCore::CanvasRenderingContext *)v12, v17, (uint64_t)&v93);
      }
      else
      {
        LOBYTE(v93) = 0;
        v94 = 0;
      }
      v52 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
      if (v52
        && (v54 = WebCore::InspectorInstrumentation::instrumentingAgents(v52, v53)) != 0
        && (v55 = *(WebCore::InspectorCanvasAgent **)(v54 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v55, (WebCore::CanvasRenderingContext *)v12, v20, (uint64_t)&v95);
      }
      else
      {
        LOBYTE(v95) = 0;
        v96 = 0;
      }
      v56 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
      if (v56
        && (v58 = WebCore::InspectorInstrumentation::instrumentingAgents(v56, v57)) != 0
        && (v59 = *(WebCore::InspectorCanvasAgent **)(v58 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v59, (WebCore::CanvasRenderingContext *)v12, v23, (uint64_t)&v97);
      }
      else
      {
        LOBYTE(v97) = 0;
        v98 = 0;
      }
      v60 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
      if (v60
        && (v62 = WebCore::InspectorInstrumentation::instrumentingAgents(v60, v61)) != 0
        && (v63 = *(WebCore::InspectorCanvasAgent **)(v62 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v63, (WebCore::CanvasRenderingContext *)v12, v26, (uint64_t)&v99);
      }
      else
      {
        LOBYTE(v99) = 0;
        v100 = 0;
      }
      v64 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
      if (v64
        && (v66 = WebCore::InspectorInstrumentation::instrumentingAgents(v64, v65)) != 0
        && (v67 = *(WebCore::InspectorCanvasAgent **)(v66 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v67, (WebCore::CanvasRenderingContext *)v12, (WTF::JSONImpl::Value *)v34, (uint64_t)&v101);
      }
      else
      {
        LOBYTE(v101) = 0;
        v102 = 0;
      }
      v88 = &v90;
      v89 = (WTF::StringImpl *)6;
      v68 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
      if (v68)
      {
        v70 = WebCore::InspectorInstrumentation::instrumentingAgents(v68, v69);
        if (v70)
        {
          v71 = *(_QWORD *)(v70 + 96);
          if (v71)
            WebCore::InspectorCanvasAgent::recordAction(v71, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v86, &v88);
        }
      }
      if (v102)
      {
        v72 = v101;
        v101 = 0;
        if (v72)
        {
          if (*v72 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v72;
        }
      }
      if (v100)
      {
        v73 = v99;
        v99 = 0;
        if (v73)
        {
          if (*v73 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v73;
        }
      }
      if (v98)
      {
        v74 = v97;
        v97 = 0;
        if (v74)
        {
          if (*v74 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v74;
        }
      }
      if (v96)
      {
        v75 = v95;
        v95 = 0;
        if (v75)
        {
          if (*v75 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v75;
        }
      }
      if (v94)
      {
        v76 = v93;
        v93 = 0;
        if (v76)
        {
          if (*v76 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v76;
        }
      }
      if (v92)
      {
        v77 = v90;
        v90 = 0;
        if (v77)
        {
          if (*(_DWORD *)v77 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*(_DWORD *)v77;
        }
      }
      v78 = v86;
      v86 = 0;
      if (v78)
      {
        if (*(_DWORD *)v78 == 2)
          WTF::StringImpl::destroy(v78, v69);
        else
          *(_DWORD *)v78 -= 2;
      }
    }
    v35 = v26;
    v36 = v23;
    v37 = v20;
    *(float *)&v38 = v17;
    *(float *)&v39 = v14;
    WebCore::CanvasPath::arc((WebCore::CanvasPath *)(v12 + 40), v39, v38, v37, v36, v35, v34, &v90);
    if (!v92)
      return 10;
    LOBYTE(v88) = (_BYTE)v90;
    v47 = v91;
    v89 = v91;
    if (!*((_QWORD *)v87 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v87, (unsigned __int8 *)&v88);
      v47 = v89;
    }
    v89 = 0;
    if (v47)
    {
      if (*(_DWORD *)v47 == 2)
        WTF::StringImpl::destroy(v47, v40);
      else
        *(_DWORD *)v47 -= 2;
    }
  }
  return 0;
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_ellipse(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::CanvasRenderingContext *v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  unint64_t v27;
  JSC::VM *v28;
  double v29;
  unint64_t v30;
  JSC::VM *v31;
  double v32;
  unint64_t v33;
  JSC::VM *v34;
  double v35;
  int v36;
  uint64_t v37;
  int *v38;
  int v39;
  _BOOL8 v40;
  float v41;
  float v42;
  float v43;
  float v44;
  float v45;
  unsigned int v46;
  unsigned int v47;
  WTF::StringImpl *v48;
  uint64_t result;
  JSValue v50;
  WebCore::CanvasRenderingContext *v51;
  int hasExceptionsAfterHandlingTraps;
  WebCore::CanvasRenderingContext *v53;
  int v54;
  WebCore::CanvasRenderingContext *v55;
  int v56;
  WebCore::CanvasRenderingContext *v57;
  int v58;
  WebCore::CanvasRenderingContext *v59;
  int v60;
  WebCore::CanvasRenderingContext *v61;
  int v62;
  JSC::VM *v63;
  WebCore::CanvasRenderingContext *v64;
  int v65;
  char v66;
  WebCore::InspectorInstrumentation *v67;
  WebCore::ScriptExecutionContext *v68;
  uint64_t v69;
  WebCore::InspectorCanvasAgent *v70;
  WTF::StringImpl *v71;
  WTF::StringImpl *v72;
  WebCore::InspectorInstrumentation *v73;
  WebCore::ScriptExecutionContext *v74;
  uint64_t v75;
  WebCore::InspectorCanvasAgent *v76;
  WebCore::InspectorInstrumentation *v77;
  WebCore::ScriptExecutionContext *v78;
  uint64_t v79;
  WebCore::InspectorCanvasAgent *v80;
  WebCore::InspectorInstrumentation *v81;
  WebCore::ScriptExecutionContext *v82;
  uint64_t v83;
  WebCore::InspectorCanvasAgent *v84;
  WebCore::InspectorInstrumentation *v85;
  WebCore::ScriptExecutionContext *v86;
  uint64_t v87;
  WebCore::InspectorCanvasAgent *v88;
  WebCore::InspectorInstrumentation *v89;
  WebCore::ScriptExecutionContext *v90;
  uint64_t v91;
  WebCore::InspectorCanvasAgent *v92;
  WebCore::InspectorInstrumentation *v93;
  WebCore::ScriptExecutionContext *v94;
  uint64_t v95;
  WebCore::InspectorCanvasAgent *v96;
  WebCore::InspectorInstrumentation *v97;
  WebCore::ScriptExecutionContext *v98;
  uint64_t v99;
  WebCore::InspectorCanvasAgent *v100;
  WebCore::InspectorInstrumentation *v101;
  WebCore::ScriptExecutionContext *v102;
  uint64_t v103;
  uint64_t v104;
  _DWORD *v105;
  _DWORD *v106;
  _DWORD *v107;
  _DWORD *v108;
  _DWORD *v109;
  _DWORD *v110;
  _DWORD *v111;
  WTF::StringImpl *v112;
  WTF::StringImpl *v113;
  WebCore::CanvasRenderingContext *v114;
  double v115;
  WebCore::CanvasRenderingContext *v116;
  double v117;
  WebCore::CanvasRenderingContext *v118;
  double v119;
  WebCore::CanvasRenderingContext *v120;
  double v121;
  WebCore::CanvasRenderingContext *v122;
  double v123;
  WebCore::CanvasRenderingContext *v124;
  double v125;
  double v126;
  BOOL v127;
  WebCore::CanvasRenderingContext *v128;
  WebCore::CanvasRenderingContext *v129;
  WebCore::CanvasRenderingContext *v130;
  JSC::VM *v131;
  WTF::StringImpl *v132;
  JSC::VM *v133;
  WTF::StringImpl **v134;
  WTF::StringImpl *v135;
  WTF::StringImpl *v136;
  WTF::StringImpl *v137;
  char v138;
  _DWORD *v139;
  char v140;
  _DWORD *v141;
  char v142;
  _DWORD *v143;
  char v144;
  _DWORD *v145;
  char v146;
  _DWORD *v147;
  char v148;
  _DWORD *v149;
  char v150;
  _DWORD *v151;
  char v152;
  uint64_t v153;

  v153 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v131 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v131, "OffscreenCanvasRenderingContext2D", "ellipse");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v131, "OffscreenCanvasRenderingContext2D", "ellipse");
  v12 = *(WebCore::CanvasRenderingContext **)(v5 + 24);
  v133 = v4;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 6)
  {
    v50.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v50);
  }
  v13 = *((_QWORD *)a2 + 6);
  v136 = (WTF::StringImpl *)v13;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v114 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v136, this);
    v12 = v114;
    v14 = v115;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20))
  {
    v51 = v12;
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v12 = v51;
    if (hasExceptionsAfterHandlingTraps)
      return 0;
  }
  v15 = *((_QWORD *)a2 + 7);
  v136 = (WTF::StringImpl *)v15;
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v15 >= 0xFFFE000000000000)
  {
    v17 = (double)(int)v15;
  }
  else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v116 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v136, this);
    v12 = v116;
    v17 = v117;
  }
  else
  {
    *(_QWORD *)&v17 = v15 - 0x2000000000000;
  }
  if (*((_DWORD *)v16 + 20))
  {
    v53 = v12;
    v54 = JSC::VM::hasExceptionsAfterHandlingTraps(v16);
    v12 = v53;
    if (v54)
      return 0;
  }
  v18 = *((_QWORD *)a2 + 8);
  v136 = (WTF::StringImpl *)v18;
  v19 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v18 >= 0xFFFE000000000000)
  {
    v20 = (double)(int)v18;
  }
  else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v118 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v136, this);
    v12 = v118;
    v20 = v119;
  }
  else
  {
    *(_QWORD *)&v20 = v18 - 0x2000000000000;
  }
  if (*((_DWORD *)v19 + 20))
  {
    v55 = v12;
    v56 = JSC::VM::hasExceptionsAfterHandlingTraps(v19);
    v12 = v55;
    if (v56)
      return 0;
  }
  v21 = *((_QWORD *)a2 + 9);
  v136 = (WTF::StringImpl *)v21;
  v22 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v21 >= 0xFFFE000000000000)
  {
    v23 = (double)(int)v21;
  }
  else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v120 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v136, this);
    v12 = v120;
    v23 = v121;
  }
  else
  {
    *(_QWORD *)&v23 = v21 - 0x2000000000000;
  }
  if (*((_DWORD *)v22 + 20))
  {
    v57 = v12;
    v58 = JSC::VM::hasExceptionsAfterHandlingTraps(v22);
    v12 = v57;
    if (v58)
      return 0;
  }
  v24 = *((_QWORD *)a2 + 10);
  v136 = (WTF::StringImpl *)v24;
  v25 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v24 >= 0xFFFE000000000000)
  {
    v26 = (double)(int)v24;
  }
  else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v122 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v136, this);
    v12 = v122;
    v26 = v123;
  }
  else
  {
    *(_QWORD *)&v26 = v24 - 0x2000000000000;
  }
  if (*((_DWORD *)v25 + 20))
  {
    v59 = v12;
    v60 = JSC::VM::hasExceptionsAfterHandlingTraps(v25);
    v12 = v59;
    if (v60)
      return 0;
  }
  v27 = *((_QWORD *)a2 + 11);
  v136 = (WTF::StringImpl *)v27;
  v28 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v27 >= 0xFFFE000000000000)
  {
    v29 = (double)(int)v27;
  }
  else if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v124 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v136, this);
    v12 = v124;
    v29 = v125;
  }
  else
  {
    *(_QWORD *)&v29 = v27 - 0x2000000000000;
  }
  if (*((_DWORD *)v28 + 20))
  {
    v61 = v12;
    v62 = JSC::VM::hasExceptionsAfterHandlingTraps(v28);
    v12 = v61;
    if (v62)
      return 0;
  }
  v30 = *((_QWORD *)a2 + 12);
  v136 = (WTF::StringImpl *)v30;
  v31 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v30 >= 0xFFFE000000000000)
  {
    v32 = (double)(int)v30;
  }
  else if (v30 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v130 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v136, this);
    v12 = v130;
    v32 = v126;
  }
  else
  {
    *(_QWORD *)&v32 = v30 - 0x2000000000000;
  }
  if (*((_DWORD *)v31 + 20))
  {
    v63 = v31;
    v64 = v12;
    v65 = JSC::VM::hasExceptionsAfterHandlingTraps(v63);
    v12 = v64;
    if (v65)
      return 0;
  }
  if ((unint64_t)(*((int *)a2 + 8) - 9) >= 0xFFFFFFFFFFFFFFF8)
  {
    v34 = (JSC::VM *)*((_QWORD *)this + 7);
    v33 = 10;
    goto LABEL_52;
  }
  v33 = *((_QWORD *)a2 + 13);
  v34 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v33 >= 0xFFFE000000000000)
  {
    v40 = (_DWORD)v33 != 0;
    goto LABEL_53;
  }
  *(_QWORD *)&v35 = v33 - 0x2000000000000;
  if (v33 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
  {
    v40 = v35 > 0.0 || v35 < 0.0;
    goto LABEL_53;
  }
  if ((v33 & 0xFFFE000000000002) != 0)
  {
LABEL_52:
    v40 = v33 == 7;
    goto LABEL_53;
  }
  v36 = *(unsigned __int8 *)(v33 + 5);
  if (v36 == 3)
  {
    v39 = *(_DWORD *)(v33 + 8);
LABEL_194:
    v127 = v39 == 0;
    goto LABEL_195;
  }
  if (v36 == 2)
  {
    v37 = *(_QWORD *)(v33 + 8);
    if ((v37 & 1) != 0)
      v38 = (int *)(v33 + 16);
    else
      v38 = (int *)(v37 + 4);
    v39 = *v38;
    goto LABEL_194;
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)v33 & 0xFFFFFFFE) + 0xA) & 1) != 0)
  {
    v127 = *(_QWORD *)(16 * (*(_DWORD *)v33 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_195:
    v40 = !v127;
    goto LABEL_53;
  }
  v40 = 1;
LABEL_53:
  if (!*((_DWORD *)v34 + 20)
    || (v128 = v12, v66 = JSC::VM::hasExceptionsAfterHandlingTraps(v34), v12 = v128, (v66 & 1) == 0))
  {
    if (*((_BYTE *)v12 + 25))
    {
      v129 = v12;
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v132 = v136;
      v67 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v129 + 4) + 144))(*((_QWORD *)v129 + 4));
      if (v67
        && (v69 = WebCore::InspectorInstrumentation::instrumentingAgents(v67, v68)) != 0
        && (v70 = *(WebCore::InspectorCanvasAgent **)(v69 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v70, v129, v14, (uint64_t)&v136);
      }
      else
      {
        LOBYTE(v136) = 0;
        v138 = 0;
      }
      v73 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v129 + 4) + 144))(*((_QWORD *)v129 + 4));
      if (v73
        && (v75 = WebCore::InspectorInstrumentation::instrumentingAgents(v73, v74)) != 0
        && (v76 = *(WebCore::InspectorCanvasAgent **)(v75 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v76, v129, v17, (uint64_t)&v139);
      }
      else
      {
        LOBYTE(v139) = 0;
        v140 = 0;
      }
      v77 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v129 + 4) + 144))(*((_QWORD *)v129 + 4));
      if (v77
        && (v79 = WebCore::InspectorInstrumentation::instrumentingAgents(v77, v78)) != 0
        && (v80 = *(WebCore::InspectorCanvasAgent **)(v79 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v80, v129, v20, (uint64_t)&v141);
      }
      else
      {
        LOBYTE(v141) = 0;
        v142 = 0;
      }
      v81 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v129 + 4) + 144))(*((_QWORD *)v129 + 4));
      if (v81
        && (v83 = WebCore::InspectorInstrumentation::instrumentingAgents(v81, v82)) != 0
        && (v84 = *(WebCore::InspectorCanvasAgent **)(v83 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v84, v129, v23, (uint64_t)&v143);
      }
      else
      {
        LOBYTE(v143) = 0;
        v144 = 0;
      }
      v85 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v129 + 4) + 144))(*((_QWORD *)v129 + 4));
      if (v85
        && (v87 = WebCore::InspectorInstrumentation::instrumentingAgents(v85, v86)) != 0
        && (v88 = *(WebCore::InspectorCanvasAgent **)(v87 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v88, v129, v26, (uint64_t)&v145);
      }
      else
      {
        LOBYTE(v145) = 0;
        v146 = 0;
      }
      v89 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v129 + 4) + 144))(*((_QWORD *)v129 + 4));
      if (v89
        && (v91 = WebCore::InspectorInstrumentation::instrumentingAgents(v89, v90)) != 0
        && (v92 = *(WebCore::InspectorCanvasAgent **)(v91 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v92, v129, v29, (uint64_t)&v147);
      }
      else
      {
        LOBYTE(v147) = 0;
        v148 = 0;
      }
      v93 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v129 + 4) + 144))(*((_QWORD *)v129 + 4));
      if (v93
        && (v95 = WebCore::InspectorInstrumentation::instrumentingAgents(v93, v94)) != 0
        && (v96 = *(WebCore::InspectorCanvasAgent **)(v95 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v96, v129, v32, (uint64_t)&v149);
      }
      else
      {
        LOBYTE(v149) = 0;
        v150 = 0;
      }
      v97 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v129 + 4) + 144))(*((_QWORD *)v129 + 4));
      if (v97
        && (v99 = WebCore::InspectorInstrumentation::instrumentingAgents(v97, v98)) != 0
        && (v100 = *(WebCore::InspectorCanvasAgent **)(v99 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v100, v129, (WTF::JSONImpl::Value *)v40, (uint64_t)&v151);
      }
      else
      {
        LOBYTE(v151) = 0;
        v152 = 0;
      }
      v134 = &v136;
      v135 = (WTF::StringImpl *)8;
      v101 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v129 + 4) + 144))(*((_QWORD *)v129 + 4));
      if (v101)
      {
        v103 = WebCore::InspectorInstrumentation::instrumentingAgents(v101, v102);
        if (v103)
        {
          v104 = *(_QWORD *)(v103 + 96);
          if (v104)
            WebCore::InspectorCanvasAgent::recordAction(v104, v129, (const WTF::StringImpl *)&v132, &v134);
        }
      }
      if (v152)
      {
        v105 = v151;
        v151 = 0;
        if (v105)
        {
          if (*v105 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v105;
        }
      }
      v12 = v129;
      if (v150)
      {
        v106 = v149;
        v149 = 0;
        if (v106)
        {
          if (*v106 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v12 = v129;
          }
          else
          {
            --*v106;
          }
        }
      }
      if (v148)
      {
        v107 = v147;
        v147 = 0;
        if (v107)
        {
          if (*v107 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v12 = v129;
          }
          else
          {
            --*v107;
          }
        }
      }
      if (v146)
      {
        v108 = v145;
        v145 = 0;
        if (v108)
        {
          if (*v108 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v12 = v129;
          }
          else
          {
            --*v108;
          }
        }
      }
      if (v144)
      {
        v109 = v143;
        v143 = 0;
        if (v109)
        {
          if (*v109 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v12 = v129;
          }
          else
          {
            --*v109;
          }
        }
      }
      if (v142)
      {
        v110 = v141;
        v141 = 0;
        if (v110)
        {
          if (*v110 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v12 = v129;
          }
          else
          {
            --*v110;
          }
        }
      }
      if (v140)
      {
        v111 = v139;
        v139 = 0;
        if (v111)
        {
          if (*v111 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v12 = v129;
          }
          else
          {
            --*v111;
          }
        }
      }
      if (v138)
      {
        v112 = v136;
        v136 = 0;
        if (v112)
        {
          if (*(_DWORD *)v112 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v12 = v129;
          }
          else
          {
            --*(_DWORD *)v112;
          }
        }
      }
      v113 = v132;
      v132 = 0;
      if (v113)
      {
        if (*(_DWORD *)v113 == 2)
        {
          WTF::StringImpl::destroy(v113, v102);
          v12 = v129;
        }
        else
        {
          *(_DWORD *)v113 -= 2;
        }
      }
    }
    v41 = v32;
    v42 = v29;
    v43 = v26;
    v44 = v23;
    v45 = v20;
    *(float *)&v46 = v17;
    *(float *)&v47 = v14;
    WebCore::CanvasPath::ellipse((WebCore::CanvasRenderingContext *)((char *)v12 + 40), v47, v46, v45, v44, v43, v42, v41, v40, (uint64_t)&v136);
    if (!v138)
      return 10;
    LOBYTE(v134) = (_BYTE)v136;
    v71 = v137;
    v137 = 0;
    v135 = v71;
    if (!*((_QWORD *)v133 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v133, (unsigned __int8 *)&v134);
      v71 = v135;
    }
    v135 = 0;
    if (v71)
    {
      if (*(_DWORD *)v71 == 2)
        WTF::StringImpl::destroy(v71, v48);
      else
        *(_DWORD *)v71 -= 2;
    }
    if (v138)
    {
      v72 = v137;
      v137 = 0;
      if (v72)
      {
        if (*(_DWORD *)v72 != 2)
        {
          result = 0;
          *(_DWORD *)v72 -= 2;
          return result;
        }
        WTF::StringImpl::destroy(v72, v48);
      }
    }
  }
  return 0;
}

_BYTE *WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_setLineDash(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  __n128 v12;
  int v13;
  uint64_t v14;
  void *v15;
  WTF *v16;
  uint64_t v17;
  JSValue v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  uint64_t v24;
  WebCore::InspectorInstrumentation *v25;
  WebCore::ScriptExecutionContext *v26;
  uint64_t v27;
  uint64_t v28;
  WTF *v29;
  WTF::StringImpl *v30;
  JSC::VM *v31;
  _QWORD v32[2];
  WTF::StringImpl *v33;
  WTF *v34;
  uint64_t v35;
  int v36;
  WTF *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v31 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "OffscreenCanvasRenderingContext2D", "setLineDash");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "OffscreenCanvasRenderingContext2D", "setLineDash");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v20);
  }
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::Detail::NumericSequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLUnrestrictedDouble>>::convert(*((_QWORD *)a2 + 6), this, (uint64_t)&v34);
  v13 = v36;
  if (v36)
  {
    v17 = 0;
  }
  else
  {
    if (*(_BYTE *)(v11 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      if (v36)
        goto LABEL_43;
      v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
      if (v21
        && (v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22)) != 0
        && (v24 = *(_QWORD *)(v23 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v24, v11, (uint64_t)&v34, (uint64_t)&v37);
      }
      else
      {
        LOBYTE(v37) = 0;
        v39 = 0;
      }
      v32[0] = &v37;
      v32[1] = 1;
      v25 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
      if (v25)
      {
        v27 = WebCore::InspectorInstrumentation::instrumentingAgents(v25, v26);
        if (v27)
        {
          v28 = *(_QWORD *)(v27 + 96);
          if (v28)
            WebCore::InspectorCanvasAgent::recordAction(v28, (WebCore::CanvasRenderingContext *)v11, (const WTF::StringImpl *)&v33, v32);
        }
      }
      if (v39)
      {
        v29 = v37;
        v37 = 0;
        if (v29)
        {
          if (*(_DWORD *)v29 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*(_DWORD *)v29;
        }
      }
      v30 = v33;
      v33 = 0;
      if (v30)
      {
        if (*(_DWORD *)v30 == 2)
          goto LABEL_44;
        *(_DWORD *)v30 -= 2;
      }
      while (v36)
      {
LABEL_43:
        v30 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_44:
        WTF::StringImpl::destroy(v30, v26);
      }
    }
    v37 = v34;
    v14 = v35;
    v34 = 0;
    v35 = 0;
    v38 = v14;
    v12.n128_f64[0] = WebCore::CanvasRenderingContext2DBase::setLineDash((WebCore::CanvasRenderingContext2DBase *)v11, (unsigned int *)&v37);
    v16 = v37;
    if (v37)
    {
      v37 = 0;
      LODWORD(v38) = 0;
      WTF::fastFree(v16, v15);
    }
    v13 = v36;
    v17 = 10;
  }
  if (v13 != -1)
    ((void (*)(WTF **, WTF **, __n128))off_1E32C2FD0[v13])(&v37, &v34, v12);
  return (_BYTE *)v17;
}

_BYTE *WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_getLineDash(_BYTE *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  unsigned int v11;
  WebCore::InspectorInstrumentation *v12;
  WebCore::ScriptExecutionContext *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  WTF::StringImpl *v18;

  v3 = (uint64_t)this;
  v4 = *((_QWORD *)a2 + 5);
  v16 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v16, "OffscreenCanvasRenderingContext2D", "getLineDash");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v16, "OffscreenCanvasRenderingContext2D", "getLineDash");
  v10 = *(_QWORD *)(v4 + 24);
  if (*(_BYTE *)(v10 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v17[0] = 0;
    v17[1] = 0;
    v12 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v10 + 32) + 144))(*(_QWORD *)(v10 + 32));
    if (v12)
    {
      v14 = WebCore::InspectorInstrumentation::instrumentingAgents(v12, v13);
      if (v14)
      {
        v15 = *(_QWORD *)(v14 + 96);
        if (v15)
          WebCore::InspectorCanvasAgent::recordAction(v15, (WebCore::CanvasRenderingContext *)v10, (const WTF::StringImpl *)&v18, v17);
      }
    }
    this = v18;
    v18 = 0;
    if (this)
    {
      if (*(_DWORD *)this == 2)
        this = (_BYTE *)WTF::StringImpl::destroy((WTF::StringImpl *)this, v13);
      else
        *(_DWORD *)this -= 2;
    }
  }
  v11 = *(_DWORD *)(v10 + 132);
  if (v11)
    return (_BYTE *)WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLUnrestrictedDouble>>::convert<double,0ul>(v3, *(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(v10 + 120) + 560 * v11 - 392);
  __break(0xC471u);
  return this;
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_clearRect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  uint64_t v13;
  unint64_t v14;
  double v15;
  unint64_t v16;
  JSC::VM *v17;
  double v18;
  unint64_t v19;
  JSC::VM *v20;
  double v21;
  unint64_t v22;
  JSC::VM *v23;
  double v24;
  JSValue v26;
  WebCore::InspectorInstrumentation *v27;
  WebCore::ScriptExecutionContext *v28;
  uint64_t v29;
  WebCore::InspectorCanvasAgent *v30;
  WebCore::InspectorInstrumentation *v31;
  WebCore::ScriptExecutionContext *v32;
  uint64_t v33;
  WebCore::InspectorCanvasAgent *v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  WebCore::InspectorCanvasAgent *v38;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  WebCore::InspectorCanvasAgent *v42;
  WebCore::InspectorInstrumentation *v43;
  WebCore::ScriptExecutionContext *v44;
  uint64_t v45;
  uint64_t v46;
  _DWORD *v47;
  _DWORD *v48;
  _DWORD *v49;
  _DWORD *v50;
  WTF::StringImpl *v51;
  JSC::VM *v52;
  _QWORD v53[2];
  WTF::StringImpl *v54;
  _QWORD v55[2];
  char v56;
  _DWORD *v57;
  char v58;
  _DWORD *v59;
  char v60;
  _DWORD *v61;
  char v62;
  uint64_t v63;

  v63 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v52 = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v52, "OffscreenCanvasRenderingContext2D", "clearRect");
  v8 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v9 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v10 = (char **)(16 * v8);
  if ((_DWORD)v8)
    v11 = v10 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v11 = 1;
  if (!v11)
  {
    do
    {
      v10 = (char **)v10[2];
      v9 = v10 != 0;
    }
    while (v10 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v10 != 0);
  }
  if (!v9)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v52, "OffscreenCanvasRenderingContext2D", "clearRect");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v26.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v5, this, v26);
  }
  else
  {
    v13 = *(_QWORD *)(v6 + 24);
    v14 = *((_QWORD *)a2 + 6);
    v55[0] = v14;
    if (v14 >= 0xFFFE000000000000)
    {
      v15 = (double)(int)v14;
    }
    else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v55, this);
      v15 = a4.n128_f64[0];
    }
    else
    {
      *(_QWORD *)&v15 = v14 - 0x2000000000000;
    }
    if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
    {
      return 0;
    }
    else
    {
      v16 = *((_QWORD *)a2 + 7);
      v55[0] = v16;
      v17 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v16 >= 0xFFFE000000000000)
      {
        v18 = (double)(int)v16;
      }
      else if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v55, this);
        v18 = a4.n128_f64[0];
      }
      else
      {
        *(_QWORD *)&v18 = v16 - 0x2000000000000;
      }
      if (*((_DWORD *)v17 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v17))
      {
        return 0;
      }
      else
      {
        v19 = *((_QWORD *)a2 + 8);
        v55[0] = v19;
        v20 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v19 >= 0xFFFE000000000000)
        {
          v21 = (double)(int)v19;
        }
        else if (v19 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v55, this);
          v21 = a4.n128_f64[0];
        }
        else
        {
          *(_QWORD *)&v21 = v19 - 0x2000000000000;
        }
        if (*((_DWORD *)v20 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v20))
        {
          return 0;
        }
        else
        {
          v22 = *((_QWORD *)a2 + 9);
          v55[0] = v22;
          v23 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v22 >= 0xFFFE000000000000)
          {
            v24 = (double)(int)v22;
          }
          else if (v22 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v55, this);
            v24 = a4.n128_f64[0];
          }
          else
          {
            *(_QWORD *)&v24 = v22 - 0x2000000000000;
          }
          if (*((_DWORD *)v23 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v23))
          {
            return 0;
          }
          else
          {
            if (*(_BYTE *)(v13 + 25))
            {
              WTF::StringImpl::createWithoutCopyingNonEmpty();
              v27 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 32)
                                                                                           + 144))(*(_QWORD *)(v13 + 32));
              if (v27
                && (v29 = WebCore::InspectorInstrumentation::instrumentingAgents(v27, v28)) != 0
                && (v30 = *(WebCore::InspectorCanvasAgent **)(v29 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v30, (WebCore::CanvasRenderingContext *)v13, v15, (uint64_t)v55);
              }
              else
              {
                LOBYTE(v55[0]) = 0;
                v56 = 0;
              }
              v31 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 32)
                                                                                           + 144))(*(_QWORD *)(v13 + 32));
              if (v31
                && (v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v31, v32)) != 0
                && (v34 = *(WebCore::InspectorCanvasAgent **)(v33 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v34, (WebCore::CanvasRenderingContext *)v13, v18, (uint64_t)&v57);
              }
              else
              {
                LOBYTE(v57) = 0;
                v58 = 0;
              }
              v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 32)
                                                                                           + 144))(*(_QWORD *)(v13 + 32));
              if (v35
                && (v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36)) != 0
                && (v38 = *(WebCore::InspectorCanvasAgent **)(v37 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v38, (WebCore::CanvasRenderingContext *)v13, v21, (uint64_t)&v59);
              }
              else
              {
                LOBYTE(v59) = 0;
                v60 = 0;
              }
              v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 32)
                                                                                           + 144))(*(_QWORD *)(v13 + 32));
              if (v39
                && (v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40)) != 0
                && (v42 = *(WebCore::InspectorCanvasAgent **)(v41 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v42, (WebCore::CanvasRenderingContext *)v13, v24, (uint64_t)&v61);
              }
              else
              {
                LOBYTE(v61) = 0;
                v62 = 0;
              }
              v53[0] = v55;
              v53[1] = 4;
              v43 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 32)
                                                                                           + 144))(*(_QWORD *)(v13 + 32));
              if (v43)
              {
                v45 = WebCore::InspectorInstrumentation::instrumentingAgents(v43, v44);
                if (v45)
                {
                  v46 = *(_QWORD *)(v45 + 96);
                  if (v46)
                    WebCore::InspectorCanvasAgent::recordAction(v46, (WebCore::CanvasRenderingContext *)v13, (const WTF::StringImpl *)&v54, v53);
                }
              }
              if (v62)
              {
                v47 = v61;
                v61 = 0;
                if (v47)
                {
                  if (*v47 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v47;
                }
              }
              if (v60)
              {
                v48 = v59;
                v59 = 0;
                if (v48)
                {
                  if (*v48 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v48;
                }
              }
              if (v58)
              {
                v49 = v57;
                v57 = 0;
                if (v49)
                {
                  if (*v49 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v49;
                }
              }
              if (v56)
              {
                v50 = (_DWORD *)v55[0];
                v55[0] = 0;
                if (v50)
                {
                  if (*v50 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v50;
                }
              }
              v51 = v54;
              v54 = 0;
              if (v51)
              {
                if (*(_DWORD *)v51 == 2)
                  WTF::StringImpl::destroy(v51, v44);
                else
                  *(_DWORD *)v51 -= 2;
              }
            }
            a4.n128_f64[0] = v15;
            WebCore::CanvasRenderingContext2DBase::clearRect((float *)v13, a4, v18, v21, v24);
            return 10;
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_fillRect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, double *a5)
{
  JSC::VM *v6;
  uint64_t v7;
  uint64_t v9;
  BOOL v10;
  char **v11;
  BOOL v12;
  uint64_t v14;
  unint64_t v15;
  double v16;
  unint64_t v17;
  JSC::VM *v18;
  double v19;
  unint64_t v20;
  JSC::VM *v21;
  double v22;
  unint64_t v23;
  JSC::VM *v24;
  double v25;
  JSValue v27;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  WebCore::InspectorCanvasAgent *v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  WebCore::InspectorCanvasAgent *v35;
  WebCore::InspectorInstrumentation *v36;
  WebCore::ScriptExecutionContext *v37;
  uint64_t v38;
  WebCore::InspectorCanvasAgent *v39;
  WebCore::InspectorInstrumentation *v40;
  WebCore::ScriptExecutionContext *v41;
  uint64_t v42;
  WebCore::InspectorCanvasAgent *v43;
  WebCore::InspectorInstrumentation *v44;
  uint64_t v45;
  uint64_t v46;
  _DWORD *v47;
  _DWORD *v48;
  _DWORD *v49;
  _DWORD *v50;
  WTF::StringImpl *v51;
  double v52;
  double v53;
  double v54;
  double v55;
  JSC::VM *v56;
  _QWORD v57[2];
  WTF::StringImpl *v58;
  _QWORD v59[2];
  char v60;
  _DWORD *v61;
  char v62;
  _DWORD *v63;
  char v64;
  _DWORD *v65;
  char v66;
  uint64_t v67;

  v67 = *MEMORY[0x1E0C80C00];
  v6 = (JSC::VM *)*((_QWORD *)this + 7);
  v56 = v6;
  v7 = *((_QWORD *)a2 + 5);
  if ((v7 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v56, "OffscreenCanvasRenderingContext2D", "fillRect");
  v9 = *(unsigned int *)(16 * (*(_DWORD *)v7 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)v7 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v11 != 0);
  }
  if (!v10)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v56, "OffscreenCanvasRenderingContext2D", "fillRect");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v27.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v6, this, v27);
  }
  else
  {
    v14 = *(_QWORD *)(v7 + 24);
    v15 = *((_QWORD *)a2 + 6);
    v59[0] = v15;
    if (v15 >= 0xFFFE000000000000)
    {
      v16 = (double)(int)v15;
    }
    else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v59, this);
      v16 = v52;
    }
    else
    {
      *(_QWORD *)&v16 = v15 - 0x2000000000000;
    }
    if (*((_DWORD *)v6 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v6))
    {
      return 0;
    }
    else
    {
      v17 = *((_QWORD *)a2 + 7);
      v59[0] = v17;
      v18 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v17 >= 0xFFFE000000000000)
      {
        v19 = (double)(int)v17;
      }
      else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v59, this);
        v19 = v53;
      }
      else
      {
        *(_QWORD *)&v19 = v17 - 0x2000000000000;
      }
      if (*((_DWORD *)v18 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v18))
      {
        return 0;
      }
      else
      {
        v20 = *((_QWORD *)a2 + 8);
        v59[0] = v20;
        v21 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v20 >= 0xFFFE000000000000)
        {
          v22 = (double)(int)v20;
        }
        else if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v59, this);
          v22 = v54;
        }
        else
        {
          *(_QWORD *)&v22 = v20 - 0x2000000000000;
        }
        if (*((_DWORD *)v21 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v21))
        {
          return 0;
        }
        else
        {
          v23 = *((_QWORD *)a2 + 9);
          v59[0] = v23;
          v24 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v23 >= 0xFFFE000000000000)
          {
            v25 = (double)(int)v23;
          }
          else if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v59, this);
            v25 = v55;
          }
          else
          {
            *(_QWORD *)&v25 = v23 - 0x2000000000000;
          }
          if (*((_DWORD *)v24 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v24))
          {
            return 0;
          }
          else
          {
            if (*(_BYTE *)(v14 + 25))
            {
              WTF::StringImpl::createWithoutCopyingNonEmpty();
              v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v14 + 32)
                                                                                           + 144))(*(_QWORD *)(v14 + 32));
              if (v28
                && (v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29)) != 0
                && (v31 = *(WebCore::InspectorCanvasAgent **)(v30 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v31, (WebCore::CanvasRenderingContext *)v14, v16, (uint64_t)v59);
              }
              else
              {
                LOBYTE(v59[0]) = 0;
                v60 = 0;
              }
              v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v14 + 32)
                                                                                           + 144))(*(_QWORD *)(v14 + 32));
              if (v32
                && (v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33)) != 0
                && (v35 = *(WebCore::InspectorCanvasAgent **)(v34 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v35, (WebCore::CanvasRenderingContext *)v14, v19, (uint64_t)&v61);
              }
              else
              {
                LOBYTE(v61) = 0;
                v62 = 0;
              }
              v36 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v14 + 32)
                                                                                           + 144))(*(_QWORD *)(v14 + 32));
              if (v36
                && (v38 = WebCore::InspectorInstrumentation::instrumentingAgents(v36, v37)) != 0
                && (v39 = *(WebCore::InspectorCanvasAgent **)(v38 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v39, (WebCore::CanvasRenderingContext *)v14, v22, (uint64_t)&v63);
              }
              else
              {
                LOBYTE(v63) = 0;
                v64 = 0;
              }
              v40 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v14 + 32)
                                                                                           + 144))(*(_QWORD *)(v14 + 32));
              if (v40
                && (v42 = WebCore::InspectorInstrumentation::instrumentingAgents(v40, v41)) != 0
                && (v43 = *(WebCore::InspectorCanvasAgent **)(v42 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v43, (WebCore::CanvasRenderingContext *)v14, v25, (uint64_t)&v65);
              }
              else
              {
                LOBYTE(v65) = 0;
                v66 = 0;
              }
              v57[0] = v59;
              v57[1] = 4;
              v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v14 + 32)
                                                                                           + 144))(*(_QWORD *)(v14 + 32));
              if (v44)
              {
                v45 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, a2);
                if (v45)
                {
                  v46 = *(_QWORD *)(v45 + 96);
                  if (v46)
                    WebCore::InspectorCanvasAgent::recordAction(v46, (WebCore::CanvasRenderingContext *)v14, (const WTF::StringImpl *)&v58, v57);
                }
              }
              if (v66)
              {
                v47 = v65;
                v65 = 0;
                if (v47)
                {
                  if (*v47 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v47;
                }
              }
              if (v64)
              {
                v48 = v63;
                v63 = 0;
                if (v48)
                {
                  if (*v48 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v48;
                }
              }
              if (v62)
              {
                v49 = v61;
                v61 = 0;
                if (v49)
                {
                  if (*v49 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v49;
                }
              }
              if (v60)
              {
                v50 = (_DWORD *)v59[0];
                v59[0] = 0;
                if (v50)
                {
                  if (*v50 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v50;
                }
              }
              v51 = v58;
              v58 = 0;
              if (v51)
              {
                if (*(_DWORD *)v51 == 2)
                  WTF::StringImpl::destroy(v51, a2);
                else
                  *(_DWORD *)v51 -= 2;
              }
            }
            WebCore::CanvasRenderingContext2DBase::fillRect((uint64_t **)v14, v16, v19, v22, v25, (uint64_t)a2, (uint64_t)a3, a4, a5);
            return 10;
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_strokeRect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, double *a5)
{
  JSC::VM *v6;
  uint64_t v7;
  uint64_t v9;
  BOOL v10;
  char **v11;
  BOOL v12;
  uint64_t v14;
  unint64_t v15;
  double v16;
  unint64_t v17;
  JSC::VM *v18;
  double v19;
  unint64_t v20;
  JSC::VM *v21;
  double v22;
  unint64_t v23;
  JSC::VM *v24;
  double v25;
  JSValue v27;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  WebCore::InspectorCanvasAgent *v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  WebCore::InspectorCanvasAgent *v35;
  WebCore::InspectorInstrumentation *v36;
  WebCore::ScriptExecutionContext *v37;
  uint64_t v38;
  WebCore::InspectorCanvasAgent *v39;
  WebCore::InspectorInstrumentation *v40;
  WebCore::ScriptExecutionContext *v41;
  uint64_t v42;
  WebCore::InspectorCanvasAgent *v43;
  WebCore::InspectorInstrumentation *v44;
  uint64_t v45;
  uint64_t v46;
  _DWORD *v47;
  _DWORD *v48;
  _DWORD *v49;
  _DWORD *v50;
  WTF::StringImpl *v51;
  double v52;
  double v53;
  double v54;
  double v55;
  JSC::VM *v56;
  _QWORD v57[2];
  WTF::StringImpl *v58;
  _QWORD v59[2];
  char v60;
  _DWORD *v61;
  char v62;
  _DWORD *v63;
  char v64;
  _DWORD *v65;
  char v66;
  uint64_t v67;

  v67 = *MEMORY[0x1E0C80C00];
  v6 = (JSC::VM *)*((_QWORD *)this + 7);
  v56 = v6;
  v7 = *((_QWORD *)a2 + 5);
  if ((v7 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v56, "OffscreenCanvasRenderingContext2D", "strokeRect");
  v9 = *(unsigned int *)(16 * (*(_DWORD *)v7 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)v7 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v11 != 0);
  }
  if (!v10)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v56, "OffscreenCanvasRenderingContext2D", "strokeRect");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v27.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v6, this, v27);
  }
  else
  {
    v14 = *(_QWORD *)(v7 + 24);
    v15 = *((_QWORD *)a2 + 6);
    v59[0] = v15;
    if (v15 >= 0xFFFE000000000000)
    {
      v16 = (double)(int)v15;
    }
    else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v59, this);
      v16 = v52;
    }
    else
    {
      *(_QWORD *)&v16 = v15 - 0x2000000000000;
    }
    if (*((_DWORD *)v6 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v6))
    {
      return 0;
    }
    else
    {
      v17 = *((_QWORD *)a2 + 7);
      v59[0] = v17;
      v18 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v17 >= 0xFFFE000000000000)
      {
        v19 = (double)(int)v17;
      }
      else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v59, this);
        v19 = v53;
      }
      else
      {
        *(_QWORD *)&v19 = v17 - 0x2000000000000;
      }
      if (*((_DWORD *)v18 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v18))
      {
        return 0;
      }
      else
      {
        v20 = *((_QWORD *)a2 + 8);
        v59[0] = v20;
        v21 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v20 >= 0xFFFE000000000000)
        {
          v22 = (double)(int)v20;
        }
        else if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v59, this);
          v22 = v54;
        }
        else
        {
          *(_QWORD *)&v22 = v20 - 0x2000000000000;
        }
        if (*((_DWORD *)v21 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v21))
        {
          return 0;
        }
        else
        {
          v23 = *((_QWORD *)a2 + 9);
          v59[0] = v23;
          v24 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v23 >= 0xFFFE000000000000)
          {
            v25 = (double)(int)v23;
          }
          else if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v59, this);
            v25 = v55;
          }
          else
          {
            *(_QWORD *)&v25 = v23 - 0x2000000000000;
          }
          if (*((_DWORD *)v24 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v24))
          {
            return 0;
          }
          else
          {
            if (*(_BYTE *)(v14 + 25))
            {
              WTF::StringImpl::createWithoutCopyingNonEmpty();
              v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v14 + 32)
                                                                                           + 144))(*(_QWORD *)(v14 + 32));
              if (v28
                && (v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29)) != 0
                && (v31 = *(WebCore::InspectorCanvasAgent **)(v30 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v31, (WebCore::CanvasRenderingContext *)v14, v16, (uint64_t)v59);
              }
              else
              {
                LOBYTE(v59[0]) = 0;
                v60 = 0;
              }
              v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v14 + 32)
                                                                                           + 144))(*(_QWORD *)(v14 + 32));
              if (v32
                && (v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33)) != 0
                && (v35 = *(WebCore::InspectorCanvasAgent **)(v34 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v35, (WebCore::CanvasRenderingContext *)v14, v19, (uint64_t)&v61);
              }
              else
              {
                LOBYTE(v61) = 0;
                v62 = 0;
              }
              v36 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v14 + 32)
                                                                                           + 144))(*(_QWORD *)(v14 + 32));
              if (v36
                && (v38 = WebCore::InspectorInstrumentation::instrumentingAgents(v36, v37)) != 0
                && (v39 = *(WebCore::InspectorCanvasAgent **)(v38 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v39, (WebCore::CanvasRenderingContext *)v14, v22, (uint64_t)&v63);
              }
              else
              {
                LOBYTE(v63) = 0;
                v64 = 0;
              }
              v40 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v14 + 32)
                                                                                           + 144))(*(_QWORD *)(v14 + 32));
              if (v40
                && (v42 = WebCore::InspectorInstrumentation::instrumentingAgents(v40, v41)) != 0
                && (v43 = *(WebCore::InspectorCanvasAgent **)(v42 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v43, (WebCore::CanvasRenderingContext *)v14, v25, (uint64_t)&v65);
              }
              else
              {
                LOBYTE(v65) = 0;
                v66 = 0;
              }
              v57[0] = v59;
              v57[1] = 4;
              v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v14 + 32)
                                                                                           + 144))(*(_QWORD *)(v14 + 32));
              if (v44)
              {
                v45 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, a2);
                if (v45)
                {
                  v46 = *(_QWORD *)(v45 + 96);
                  if (v46)
                    WebCore::InspectorCanvasAgent::recordAction(v46, (WebCore::CanvasRenderingContext *)v14, (const WTF::StringImpl *)&v58, v57);
                }
              }
              if (v66)
              {
                v47 = v65;
                v65 = 0;
                if (v47)
                {
                  if (*v47 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v47;
                }
              }
              if (v64)
              {
                v48 = v63;
                v63 = 0;
                if (v48)
                {
                  if (*v48 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v48;
                }
              }
              if (v62)
              {
                v49 = v61;
                v61 = 0;
                if (v49)
                {
                  if (*v49 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v49;
                }
              }
              if (v60)
              {
                v50 = (_DWORD *)v59[0];
                v59[0] = 0;
                if (v50)
                {
                  if (*v50 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v50;
                }
              }
              v51 = v58;
              v58 = 0;
              if (v51)
              {
                if (*(_DWORD *)v51 == 2)
                  WTF::StringImpl::destroy(v51, a2);
                else
                  *(_DWORD *)v51 -= 2;
              }
            }
            WebCore::CanvasRenderingContext2DBase::strokeRect((WebCore::CanvasRenderingContext2DBase *)v14, v16, v19, v22, v25, (uint64_t)a2, (uint64_t)a3, a4, a5);
            return 10;
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_save(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::InspectorInstrumentation *v11;
  WebCore::ScriptExecutionContext *v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  _QWORD v17[2];
  WTF::StringImpl *v18;

  v3 = *((_QWORD *)a2 + 5);
  v16 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "OffscreenCanvasRenderingContext2D", "save");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "OffscreenCanvasRenderingContext2D", "save");
  v9 = *(_QWORD *)(v3 + 24);
  if (*(_BYTE *)(v9 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v17[0] = 0;
    v17[1] = 0;
    v11 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
    if (v11)
    {
      v13 = WebCore::InspectorInstrumentation::instrumentingAgents(v11, v12);
      if (v13)
      {
        v14 = *(_QWORD *)(v13 + 96);
        if (v14)
          WebCore::InspectorCanvasAgent::recordAction(v14, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v18, v17);
      }
    }
    v15 = v18;
    v18 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v12);
      else
        *(_DWORD *)v15 -= 2;
    }
  }
  ++*(_DWORD *)(v9 + 712);
  return 10;
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_restore(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::InspectorInstrumentation *v11;
  WebCore::ScriptExecutionContext *v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  _QWORD v17[2];
  WTF::StringImpl *v18;

  v3 = *((_QWORD *)a2 + 5);
  v16 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "OffscreenCanvasRenderingContext2D", "restore");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "OffscreenCanvasRenderingContext2D", "restore");
  v9 = *(_QWORD *)(v3 + 24);
  if (*(_BYTE *)(v9 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v17[0] = 0;
    v17[1] = 0;
    v11 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
    if (v11)
    {
      v13 = WebCore::InspectorInstrumentation::instrumentingAgents(v11, v12);
      if (v13)
      {
        v14 = *(_QWORD *)(v13 + 96);
        if (v14)
          WebCore::InspectorCanvasAgent::recordAction(v14, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v18, v17);
      }
    }
    v15 = v18;
    v18 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v12);
      else
        *(_DWORD *)v15 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::restore(v9);
  return 10;
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_reset(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::InspectorInstrumentation *v11;
  uint64_t v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  _QWORD v16[2];
  WTF::StringImpl *v17;

  v3 = *((_QWORD *)a2 + 5);
  v15 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v15, "OffscreenCanvasRenderingContext2D", "reset");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v15, "OffscreenCanvasRenderingContext2D", "reset");
  v9 = *(_QWORD *)(v3 + 24);
  if (*(_BYTE *)(v9 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v16[0] = 0;
    v16[1] = 0;
    v11 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
    if (v11)
    {
      v12 = WebCore::InspectorInstrumentation::instrumentingAgents(v11, a2);
      if (v12)
      {
        v13 = *(_QWORD *)(v12 + 96);
        if (v13)
          WebCore::InspectorCanvasAgent::recordAction(v13, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v17, v16);
      }
    }
    v14 = v17;
    v17 = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, a2);
      else
        *(_DWORD *)v14 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::reset((WebCore::CanvasRenderingContext2DBase *)v9, a2);
  return 10;
}

_BYTE *WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_fillText(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  JSC::JSGlobalObject *v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  int *v15;
  WTF::StringImpl *v16;
  JSC::VM *v17;
  double v18;
  WTF::StringImpl *v19;
  JSC::VM *v20;
  double v21;
  unint64_t v22;
  char v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  uint64_t v27;
  int v28;
  double v30;
  JSValue v32;
  WTF::StringImpl *v33;
  char v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  WebCore::InspectorCanvasAgent *v38;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  WebCore::InspectorCanvasAgent *v42;
  WebCore::InspectorInstrumentation *v43;
  WebCore::ScriptExecutionContext *v44;
  uint64_t v45;
  WebCore::InspectorCanvasAgent *v46;
  WebCore::InspectorInstrumentation *v47;
  WebCore::ScriptExecutionContext *v48;
  uint64_t v49;
  uint64_t v50;
  WebCore::InspectorInstrumentation *v51;
  WebCore::ScriptExecutionContext *v52;
  uint64_t v53;
  uint64_t v54;
  _DWORD *v55;
  _DWORD *v56;
  _DWORD *v57;
  WTF::StringImpl *v58;
  WTF::StringImpl *v59;
  double v60;
  double v61;
  char hasExceptionsAfterHandlingTraps;
  double v63;
  JSC::VM *v64;
  _QWORD v65[2];
  WTF::StringImpl *v66;
  int *v67;
  int v68;
  WTF::StringImpl *v69[2];
  char v70;
  _DWORD *v71;
  char v72;
  _DWORD *v73;
  char v74;
  _DWORD *v75;
  char v76;
  int *v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;

  v81 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v64 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v64, "OffscreenCanvasRenderingContext2D", "fillText");
  v6 = a2;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v64, "OffscreenCanvasRenderingContext2D", "fillText");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v32.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v32);
  }
  v12 = *(_QWORD *)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  v69[0] = (WTF::StringImpl *)v13;
  if ((v13 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v13 + 5) == 2)
  {
    v14 = *(int **)(v13 + 8);
    if ((v14 & 1) != 0)
    {
      v14 = *(int **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v13, this);
      if (!v14)
        goto LABEL_18;
    }
    else if (!v14)
    {
LABEL_18:
      v77 = v14;
      goto LABEL_19;
    }
    *v14 += 2;
    goto LABEL_18;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v69, this);
LABEL_19:
  if (!*((_DWORD *)v4 + 20))
  {
    v15 = v77;
LABEL_21:
    v67 = v15;
    v68 = 0;
    v16 = (WTF::StringImpl *)*((_QWORD *)v6 + 7);
    v69[0] = v16;
    v17 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((unint64_t)v16 >= 0xFFFE000000000000)
    {
      v18 = (double)(int)v16;
    }
    else if ((unint64_t)v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v69, this);
      v18 = v60;
    }
    else
    {
      *(_QWORD *)&v18 = (char *)v16 - 0x2000000000000;
    }
    if (*((_DWORD *)v17 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v17))
    {
      v27 = 0;
      goto LABEL_39;
    }
    v19 = (WTF::StringImpl *)*((_QWORD *)v6 + 8);
    v69[0] = v19;
    v20 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((unint64_t)v19 >= 0xFFFE000000000000)
    {
      v21 = (double)(int)v19;
    }
    else if ((unint64_t)v19 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v69, this);
      v21 = v61;
    }
    else
    {
      *(_QWORD *)&v21 = (char *)v19 - 0x2000000000000;
    }
    if (*((_DWORD *)v20 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v20))
    {
      v27 = 0;
      goto LABEL_39;
    }
    if ((unint64_t)(*((int *)v6 + 8) - 5) < 0xFFFFFFFFFFFFFFFCLL)
    {
      v22 = *((_QWORD *)v6 + 9);
      if (v22 != 10)
      {
        v69[0] = *((WTF::StringImpl **)v6 + 9);
        v6 = (JSC::JSGlobalObject *)*((_QWORD *)this + 7);
        if (v22 >= 0xFFFE000000000000)
        {
          v30 = (double)(int)v22;
          goto LABEL_52;
        }
        if (v22 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
        {
          *(_QWORD *)&v30 = v22 - 0x2000000000000;
          goto LABEL_52;
        }
        goto LABEL_123;
      }
    }
    v23 = 0;
    LOBYTE(v78) = 0;
    while (1)
    {
      LOBYTE(v79) = v23;
      v80 = 0;
      if (*(_BYTE *)(v12 + 25))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v66 = v69[0];
        if (v68)
          goto LABEL_122;
        v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
        if (v35
          && (v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36)) != 0
          && (v38 = *(WebCore::InspectorCanvasAgent **)(v37 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v38, (WebCore::CanvasRenderingContext *)v12, &v67, (uint64_t)v69);
        }
        else
        {
          LOBYTE(v69[0]) = 0;
          v70 = 0;
        }
        v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
        if (v39
          && (v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40)) != 0
          && (v42 = *(WebCore::InspectorCanvasAgent **)(v41 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v42, (WebCore::CanvasRenderingContext *)v12, v18, (uint64_t)&v71);
        }
        else
        {
          LOBYTE(v71) = 0;
          v72 = 0;
        }
        v43 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
        if (v43
          && (v45 = WebCore::InspectorInstrumentation::instrumentingAgents(v43, v44)) != 0
          && (v46 = *(WebCore::InspectorCanvasAgent **)(v45 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v46, (WebCore::CanvasRenderingContext *)v12, v21, (uint64_t)&v73);
        }
        else
        {
          LOBYTE(v73) = 0;
          v74 = 0;
        }
        if (v80)
          goto LABEL_122;
        v47 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
        if (v47
          && (v49 = WebCore::InspectorInstrumentation::instrumentingAgents(v47, v48)) != 0
          && (v50 = *(_QWORD *)(v49 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v50, (WTF::StringImpl *)v12, (uint64_t)&v78, (uint64_t)&v75);
        }
        else
        {
          LOBYTE(v75) = 0;
          v76 = 0;
        }
        v65[0] = v69;
        v65[1] = 4;
        v51 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
        if (v51)
        {
          v53 = WebCore::InspectorInstrumentation::instrumentingAgents(v51, v52);
          if (v53)
          {
            v54 = *(_QWORD *)(v53 + 96);
            if (v54)
              WebCore::InspectorCanvasAgent::recordAction(v54, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v66, v65);
          }
        }
        if (v76)
        {
          v55 = v75;
          v75 = 0;
          if (v55)
          {
            if (*v55 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v55;
          }
        }
        if (v74)
        {
          v56 = v73;
          v73 = 0;
          if (v56)
          {
            if (*v56 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v56;
          }
        }
        if (v72)
        {
          v57 = v71;
          v71 = 0;
          if (v57)
          {
            if (*v57 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v57;
          }
        }
        if (v70)
        {
          v58 = v69[0];
          v69[0] = 0;
          if (v58)
          {
            if (*(_DWORD *)v58 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*(_DWORD *)v58;
          }
        }
        v59 = v66;
        v66 = 0;
        if (v59)
        {
          if (*(_DWORD *)v59 == 2)
            WTF::StringImpl::destroy(v59, v52);
          else
            *(_DWORD *)v59 -= 2;
        }
      }
      if (!v68)
      {
        v24 = (WTF::StringImpl *)v67;
        v67 = 0;
        v69[0] = v24;
        if (!v80)
        {
          WebCore::CanvasRenderingContext2DBase::drawText(v12, (uint64_t *)v69, 1, v78, v79, v18, v21);
          v26 = v69[0];
          v69[0] = 0;
          if (v26)
          {
            if (*(_DWORD *)v26 == 2)
              WTF::StringImpl::destroy(v26, v25);
            else
              *(_DWORD *)v26 -= 2;
          }
          v27 = 10;
LABEL_39:
          v28 = v68;
LABEL_40:
          if (v28 != -1)
            goto LABEL_41;
          return (_BYTE *)v27;
        }
      }
LABEL_122:
      std::__throw_bad_variant_access[abi:sn180100]();
LABEL_123:
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v69, this);
LABEL_52:
      if (*((_DWORD *)v6 + 20))
      {
        v63 = v30;
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v6);
        v30 = v63;
        if ((hasExceptionsAfterHandlingTraps & 1) != 0)
        {
          v27 = 0;
          goto LABEL_39;
        }
      }
      v78 = *(_QWORD *)&v30;
      v23 = 1;
    }
  }
  v34 = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
  v15 = v77;
  if ((v34 & 1) == 0)
    goto LABEL_21;
  v68 = 1;
  v77 = 0;
  if (v15)
  {
    if (*v15 == 2)
    {
      WTF::StringImpl::destroy((WTF::StringImpl *)v15, v33);
      v28 = v68;
      v27 = 0;
      goto LABEL_40;
    }
    *v15 -= 2;
  }
  v27 = 0;
  v28 = 1;
LABEL_41:
  ((void (*)(WTF::StringImpl **, int **))off_1E32BEA70[v28])(v69, &v67);
  return (_BYTE *)v27;
}

_BYTE *WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_strokeText(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  JSC::JSGlobalObject *v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  int *v15;
  WTF::StringImpl *v16;
  JSC::VM *v17;
  double v18;
  WTF::StringImpl *v19;
  JSC::VM *v20;
  double v21;
  unint64_t v22;
  char v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  uint64_t v27;
  int v28;
  double v30;
  JSValue v32;
  WTF::StringImpl *v33;
  char v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  WebCore::InspectorCanvasAgent *v38;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  WebCore::InspectorCanvasAgent *v42;
  WebCore::InspectorInstrumentation *v43;
  WebCore::ScriptExecutionContext *v44;
  uint64_t v45;
  WebCore::InspectorCanvasAgent *v46;
  WebCore::InspectorInstrumentation *v47;
  WebCore::ScriptExecutionContext *v48;
  uint64_t v49;
  uint64_t v50;
  WebCore::InspectorInstrumentation *v51;
  WebCore::ScriptExecutionContext *v52;
  uint64_t v53;
  uint64_t v54;
  _DWORD *v55;
  _DWORD *v56;
  _DWORD *v57;
  WTF::StringImpl *v58;
  WTF::StringImpl *v59;
  double v60;
  double v61;
  char hasExceptionsAfterHandlingTraps;
  double v63;
  JSC::VM *v64;
  _QWORD v65[2];
  WTF::StringImpl *v66;
  int *v67;
  int v68;
  WTF::StringImpl *v69[2];
  char v70;
  _DWORD *v71;
  char v72;
  _DWORD *v73;
  char v74;
  _DWORD *v75;
  char v76;
  int *v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;

  v81 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v64 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v64, "OffscreenCanvasRenderingContext2D", "strokeText");
  v6 = a2;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v64, "OffscreenCanvasRenderingContext2D", "strokeText");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v32.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v32);
  }
  v12 = *(_QWORD *)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  v69[0] = (WTF::StringImpl *)v13;
  if ((v13 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v13 + 5) == 2)
  {
    v14 = *(int **)(v13 + 8);
    if ((v14 & 1) != 0)
    {
      v14 = *(int **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v13, this);
      if (!v14)
        goto LABEL_18;
    }
    else if (!v14)
    {
LABEL_18:
      v77 = v14;
      goto LABEL_19;
    }
    *v14 += 2;
    goto LABEL_18;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v69, this);
LABEL_19:
  if (!*((_DWORD *)v4 + 20))
  {
    v15 = v77;
LABEL_21:
    v67 = v15;
    v68 = 0;
    v16 = (WTF::StringImpl *)*((_QWORD *)v6 + 7);
    v69[0] = v16;
    v17 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((unint64_t)v16 >= 0xFFFE000000000000)
    {
      v18 = (double)(int)v16;
    }
    else if ((unint64_t)v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v69, this);
      v18 = v60;
    }
    else
    {
      *(_QWORD *)&v18 = (char *)v16 - 0x2000000000000;
    }
    if (*((_DWORD *)v17 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v17))
    {
      v27 = 0;
      goto LABEL_39;
    }
    v19 = (WTF::StringImpl *)*((_QWORD *)v6 + 8);
    v69[0] = v19;
    v20 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((unint64_t)v19 >= 0xFFFE000000000000)
    {
      v21 = (double)(int)v19;
    }
    else if ((unint64_t)v19 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v69, this);
      v21 = v61;
    }
    else
    {
      *(_QWORD *)&v21 = (char *)v19 - 0x2000000000000;
    }
    if (*((_DWORD *)v20 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v20))
    {
      v27 = 0;
      goto LABEL_39;
    }
    if ((unint64_t)(*((int *)v6 + 8) - 5) < 0xFFFFFFFFFFFFFFFCLL)
    {
      v22 = *((_QWORD *)v6 + 9);
      if (v22 != 10)
      {
        v69[0] = *((WTF::StringImpl **)v6 + 9);
        v6 = (JSC::JSGlobalObject *)*((_QWORD *)this + 7);
        if (v22 >= 0xFFFE000000000000)
        {
          v30 = (double)(int)v22;
          goto LABEL_52;
        }
        if (v22 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
        {
          *(_QWORD *)&v30 = v22 - 0x2000000000000;
          goto LABEL_52;
        }
        goto LABEL_123;
      }
    }
    v23 = 0;
    LOBYTE(v78) = 0;
    while (1)
    {
      LOBYTE(v79) = v23;
      v80 = 0;
      if (*(_BYTE *)(v12 + 25))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v66 = v69[0];
        if (v68)
          goto LABEL_122;
        v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
        if (v35
          && (v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36)) != 0
          && (v38 = *(WebCore::InspectorCanvasAgent **)(v37 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v38, (WebCore::CanvasRenderingContext *)v12, &v67, (uint64_t)v69);
        }
        else
        {
          LOBYTE(v69[0]) = 0;
          v70 = 0;
        }
        v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
        if (v39
          && (v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40)) != 0
          && (v42 = *(WebCore::InspectorCanvasAgent **)(v41 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v42, (WebCore::CanvasRenderingContext *)v12, v18, (uint64_t)&v71);
        }
        else
        {
          LOBYTE(v71) = 0;
          v72 = 0;
        }
        v43 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
        if (v43
          && (v45 = WebCore::InspectorInstrumentation::instrumentingAgents(v43, v44)) != 0
          && (v46 = *(WebCore::InspectorCanvasAgent **)(v45 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v46, (WebCore::CanvasRenderingContext *)v12, v21, (uint64_t)&v73);
        }
        else
        {
          LOBYTE(v73) = 0;
          v74 = 0;
        }
        if (v80)
          goto LABEL_122;
        v47 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
        if (v47
          && (v49 = WebCore::InspectorInstrumentation::instrumentingAgents(v47, v48)) != 0
          && (v50 = *(_QWORD *)(v49 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v50, (WTF::StringImpl *)v12, (uint64_t)&v78, (uint64_t)&v75);
        }
        else
        {
          LOBYTE(v75) = 0;
          v76 = 0;
        }
        v65[0] = v69;
        v65[1] = 4;
        v51 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
        if (v51)
        {
          v53 = WebCore::InspectorInstrumentation::instrumentingAgents(v51, v52);
          if (v53)
          {
            v54 = *(_QWORD *)(v53 + 96);
            if (v54)
              WebCore::InspectorCanvasAgent::recordAction(v54, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v66, v65);
          }
        }
        if (v76)
        {
          v55 = v75;
          v75 = 0;
          if (v55)
          {
            if (*v55 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v55;
          }
        }
        if (v74)
        {
          v56 = v73;
          v73 = 0;
          if (v56)
          {
            if (*v56 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v56;
          }
        }
        if (v72)
        {
          v57 = v71;
          v71 = 0;
          if (v57)
          {
            if (*v57 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v57;
          }
        }
        if (v70)
        {
          v58 = v69[0];
          v69[0] = 0;
          if (v58)
          {
            if (*(_DWORD *)v58 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*(_DWORD *)v58;
          }
        }
        v59 = v66;
        v66 = 0;
        if (v59)
        {
          if (*(_DWORD *)v59 == 2)
            WTF::StringImpl::destroy(v59, v52);
          else
            *(_DWORD *)v59 -= 2;
        }
      }
      if (!v68)
      {
        v24 = (WTF::StringImpl *)v67;
        v67 = 0;
        v69[0] = v24;
        if (!v80)
        {
          WebCore::CanvasRenderingContext2DBase::drawText(v12, (uint64_t *)v69, 0, v78, v79, v18, v21);
          v26 = v69[0];
          v69[0] = 0;
          if (v26)
          {
            if (*(_DWORD *)v26 == 2)
              WTF::StringImpl::destroy(v26, v25);
            else
              *(_DWORD *)v26 -= 2;
          }
          v27 = 10;
LABEL_39:
          v28 = v68;
LABEL_40:
          if (v28 != -1)
            goto LABEL_41;
          return (_BYTE *)v27;
        }
      }
LABEL_122:
      std::__throw_bad_variant_access[abi:sn180100]();
LABEL_123:
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v69, this);
LABEL_52:
      if (*((_DWORD *)v6 + 20))
      {
        v63 = v30;
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v6);
        v30 = v63;
        if ((hasExceptionsAfterHandlingTraps & 1) != 0)
        {
          v27 = 0;
          goto LABEL_39;
        }
      }
      v78 = *(_QWORD *)&v30;
      v23 = 1;
    }
  }
  v34 = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
  v15 = v77;
  if ((v34 & 1) == 0)
    goto LABEL_21;
  v68 = 1;
  v77 = 0;
  if (v15)
  {
    if (*v15 == 2)
    {
      WTF::StringImpl::destroy((WTF::StringImpl *)v15, v33);
      v28 = v68;
      v27 = 0;
      goto LABEL_40;
    }
    *v15 -= 2;
  }
  v27 = 0;
  v28 = 1;
LABEL_41:
  ((void (*)(WTF::StringImpl **, int **))off_1E32BEA70[v28])(v69, &v67);
  return (_BYTE *)v27;
}

_BYTE *WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_measureText(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  JSC::VM *v15;
  void *v16;
  unint64_t v17;
  WTF *v18;
  WTF::StringImpl *v19;
  int v20;
  JSValue v23;
  WTF::StringImpl *v24;
  int hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v26;
  WebCore::ScriptExecutionContext *v27;
  uint64_t v28;
  WebCore::InspectorCanvasAgent *v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  uint64_t v33;
  WTF *v34;
  WTF::StringImpl *v35;
  WebCore *v36;
  JSC::JSGlobalObject *v37;
  JSC::CallFrame *v38;
  JSC::VM *v39;
  WTF::StringImpl *v40[2];
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  int v43;
  WTF *v44[2];
  char v45;
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v39 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v39, "OffscreenCanvasRenderingContext2D", "measureText");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v39, "OffscreenCanvasRenderingContext2D", "measureText");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v23.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v23);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v44[0] = (WTF *)v12;
  if ((v12 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v12 + 5) == 2)
  {
    v13 = *(WTF::StringImpl **)(v12 + 8);
    if ((v13 & 1) != 0)
    {
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
      if (!v13)
        goto LABEL_18;
    }
    else if (!v13)
    {
LABEL_18:
      v40[0] = v13;
      goto LABEL_19;
    }
    *(_DWORD *)v13 += 2;
    goto LABEL_18;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v44, this);
LABEL_19:
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v14 = v40[0];
    if (hasExceptionsAfterHandlingTraps)
    {
      v43 = 1;
      v40[0] = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v24);
        else
          *(_DWORD *)v14 -= 2;
      }
      v17 = 0;
      v20 = 1;
LABEL_30:
      ((void (*)(WTF **, WTF::StringImpl **))off_1E32BEA70[v20])(v44, &v42);
      return (_BYTE *)v17;
    }
  }
  else
  {
    v14 = v40[0];
  }
  v42 = v14;
  v43 = 0;
  if (!*(_BYTE *)(v11 + 25))
  {
    v15 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
    goto LABEL_23;
  }
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v26 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
  if (v26
    && (v28 = WebCore::InspectorInstrumentation::instrumentingAgents(v26, v27)) != 0
    && (v29 = *(WebCore::InspectorCanvasAgent **)(v28 + 96)) != 0)
  {
    WebCore::InspectorCanvasAgent::processArgument(v29, (WebCore::CanvasRenderingContext *)v11, (int **)&v42, (uint64_t)v44);
  }
  else
  {
    LOBYTE(v44[0]) = 0;
    v45 = 0;
  }
  v40[0] = (WTF::StringImpl *)v44;
  v40[1] = (WTF::StringImpl *)1;
  v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
  if (v30)
  {
    v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31);
    if (v32)
    {
      v33 = *(_QWORD *)(v32 + 96);
      if (v33)
        WebCore::InspectorCanvasAgent::recordAction(v33, (WebCore::CanvasRenderingContext *)v11, (const WTF::StringImpl *)&v41, v40);
    }
  }
  if (v45)
  {
    v34 = v44[0];
    v44[0] = 0;
    if (v34)
    {
      if (*(_DWORD *)v34 == 1)
        WTF::JSONImpl::Value::operator delete();
      else
        --*(_DWORD *)v34;
    }
  }
  v35 = v41;
  v41 = 0;
  if (v35)
  {
    if (*(_DWORD *)v35 == 2)
      WTF::StringImpl::destroy(v35, v31);
    else
      *(_DWORD *)v35 -= 2;
  }
  if (!v43)
  {
    v15 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
    v14 = v42;
LABEL_23:
    v42 = 0;
    v40[0] = v14;
    WebCore::CanvasRenderingContext2DBase::measureTextInternal((WebCore::CanvasRenderingContext2DBase *)v11, (const WTF::String *)v40, (uint64_t *)v44);
    v17 = WebCore::wrap<WebCore::TextMetrics>((int)this, v15, v44[0]);
    v18 = v44[0];
    v44[0] = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 1)
        WTF::fastFree(v18, v16);
      else
        --*(_DWORD *)v18;
    }
    v19 = v40[0];
    v40[0] = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, (WTF::StringImpl *)v16);
      else
        *(_DWORD *)v19 -= 2;
    }
    v20 = v43;
    if (v43 == -1)
      return (_BYTE *)v17;
    goto LABEL_30;
  }
  v36 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_scale(v36, v37, v38);
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_scale(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  JSValue v19;
  WebCore::InspectorInstrumentation *v20;
  WebCore::ScriptExecutionContext *v21;
  uint64_t v22;
  WebCore::InspectorCanvasAgent *v23;
  WebCore::InspectorInstrumentation *v24;
  WebCore::ScriptExecutionContext *v25;
  uint64_t v26;
  WebCore::InspectorCanvasAgent *v27;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  uint64_t v31;
  _DWORD *v32;
  _DWORD *v33;
  WTF::StringImpl *v34;
  double v35;
  double v36;
  JSC::VM *v37;
  _QWORD v38[2];
  WTF::StringImpl *v39;
  _QWORD v40[2];
  char v41;
  _DWORD *v42;
  char v43;
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v37 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v37, "OffscreenCanvasRenderingContext2D", "scale");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v37, "OffscreenCanvasRenderingContext2D", "scale");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v19);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v40[0] = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v40, this);
      v14 = v35;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v40[0] = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v40, this);
        v17 = v36;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        if (*(_BYTE *)(v12 + 25))
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v20 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
          if (v20
            && (v22 = WebCore::InspectorInstrumentation::instrumentingAgents(v20, v21)) != 0
            && (v23 = *(WebCore::InspectorCanvasAgent **)(v22 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v23, (WebCore::CanvasRenderingContext *)v12, v14, (uint64_t)v40);
          }
          else
          {
            LOBYTE(v40[0]) = 0;
            v41 = 0;
          }
          v24 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
          if (v24
            && (v26 = WebCore::InspectorInstrumentation::instrumentingAgents(v24, v25)) != 0
            && (v27 = *(WebCore::InspectorCanvasAgent **)(v26 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v27, (WebCore::CanvasRenderingContext *)v12, v17, (uint64_t)&v42);
          }
          else
          {
            LOBYTE(v42) = 0;
            v43 = 0;
          }
          v38[0] = v40;
          v38[1] = 2;
          v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
          if (v28)
          {
            v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29);
            if (v30)
            {
              v31 = *(_QWORD *)(v30 + 96);
              if (v31)
                WebCore::InspectorCanvasAgent::recordAction(v31, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v39, v38);
            }
          }
          if (v43)
          {
            v32 = v42;
            v42 = 0;
            if (v32)
            {
              if (*v32 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v32;
            }
          }
          if (v41)
          {
            v33 = (_DWORD *)v40[0];
            v40[0] = 0;
            if (v33)
            {
              if (*v33 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v33;
            }
          }
          v34 = v39;
          v39 = 0;
          if (v34)
          {
            if (*(_DWORD *)v34 == 2)
              WTF::StringImpl::destroy(v34, v29);
            else
              *(_DWORD *)v34 -= 2;
          }
        }
        WebCore::CanvasRenderingContext2DBase::scale((WebCore::CanvasRenderingContext2DBase *)v12, v14, v17);
        return 10;
      }
    }
  }
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_rotate(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  unint64_t v12;
  double v13;
  JSValue v15;
  WebCore::InspectorInstrumentation *v16;
  WebCore::ScriptExecutionContext *v17;
  uint64_t v18;
  WebCore::InspectorCanvasAgent *v19;
  WebCore::InspectorInstrumentation *v20;
  WebCore::ScriptExecutionContext *v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  WTF::StringImpl *v25;
  double v26;
  JSC::VM *v27;
  _QWORD v28[2];
  WTF::StringImpl *v29;
  _QWORD v30[2];
  char v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v27 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v27, "OffscreenCanvasRenderingContext2D", "rotate");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v27, "OffscreenCanvasRenderingContext2D", "rotate");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v15.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v15);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    v12 = *((_QWORD *)a2 + 6);
    v30[0] = v12;
    if (v12 >= 0xFFFE000000000000)
    {
      v13 = (double)(int)v12;
    }
    else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v30, this);
      v13 = v26;
    }
    else
    {
      *(_QWORD *)&v13 = v12 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      if (*(_BYTE *)(v11 + 25))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v16 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
        if (v16
          && (v18 = WebCore::InspectorInstrumentation::instrumentingAgents(v16, v17)) != 0
          && (v19 = *(WebCore::InspectorCanvasAgent **)(v18 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v19, (WebCore::CanvasRenderingContext *)v11, v13, (uint64_t)v30);
        }
        else
        {
          LOBYTE(v30[0]) = 0;
          v31 = 0;
        }
        v28[0] = v30;
        v28[1] = 1;
        v20 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
        if (v20)
        {
          v22 = WebCore::InspectorInstrumentation::instrumentingAgents(v20, v21);
          if (v22)
          {
            v23 = *(_QWORD *)(v22 + 96);
            if (v23)
              WebCore::InspectorCanvasAgent::recordAction(v23, (WebCore::CanvasRenderingContext *)v11, (const WTF::StringImpl *)&v29, v28);
          }
        }
        if (v31)
        {
          v24 = (_DWORD *)v30[0];
          v30[0] = 0;
          if (v24)
          {
            if (*v24 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v24;
          }
        }
        v25 = v29;
        v29 = 0;
        if (v25)
        {
          if (*(_DWORD *)v25 == 2)
            WTF::StringImpl::destroy(v25, v21);
          else
            *(_DWORD *)v25 -= 2;
        }
      }
      WebCore::CanvasRenderingContext2DBase::rotate((WebCore::CanvasRenderingContext2DBase *)v11, v13);
      return 10;
    }
  }
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_translate(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  JSValue v19;
  WebCore::InspectorInstrumentation *v20;
  WebCore::ScriptExecutionContext *v21;
  uint64_t v22;
  WebCore::InspectorCanvasAgent *v23;
  WebCore::InspectorInstrumentation *v24;
  WebCore::ScriptExecutionContext *v25;
  uint64_t v26;
  WebCore::InspectorCanvasAgent *v27;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  uint64_t v31;
  _DWORD *v32;
  _DWORD *v33;
  WTF::StringImpl *v34;
  double v35;
  double v36;
  JSC::VM *v37;
  _QWORD v38[2];
  WTF::StringImpl *v39;
  _QWORD v40[2];
  char v41;
  _DWORD *v42;
  char v43;
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v37 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v37, "OffscreenCanvasRenderingContext2D", "translate");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v37, "OffscreenCanvasRenderingContext2D", "translate");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v19);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v40[0] = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v40, this);
      v14 = v35;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v40[0] = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v40, this);
        v17 = v36;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        if (*(_BYTE *)(v12 + 25))
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v20 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
          if (v20
            && (v22 = WebCore::InspectorInstrumentation::instrumentingAgents(v20, v21)) != 0
            && (v23 = *(WebCore::InspectorCanvasAgent **)(v22 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v23, (WebCore::CanvasRenderingContext *)v12, v14, (uint64_t)v40);
          }
          else
          {
            LOBYTE(v40[0]) = 0;
            v41 = 0;
          }
          v24 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
          if (v24
            && (v26 = WebCore::InspectorInstrumentation::instrumentingAgents(v24, v25)) != 0
            && (v27 = *(WebCore::InspectorCanvasAgent **)(v26 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v27, (WebCore::CanvasRenderingContext *)v12, v17, (uint64_t)&v42);
          }
          else
          {
            LOBYTE(v42) = 0;
            v43 = 0;
          }
          v38[0] = v40;
          v38[1] = 2;
          v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
          if (v28)
          {
            v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29);
            if (v30)
            {
              v31 = *(_QWORD *)(v30 + 96);
              if (v31)
                WebCore::InspectorCanvasAgent::recordAction(v31, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v39, v38);
            }
          }
          if (v43)
          {
            v32 = v42;
            v42 = 0;
            if (v32)
            {
              if (*v32 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v32;
            }
          }
          if (v41)
          {
            v33 = (_DWORD *)v40[0];
            v40[0] = 0;
            if (v33)
            {
              if (*v33 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v33;
            }
          }
          v34 = v39;
          v39 = 0;
          if (v34)
          {
            if (*(_DWORD *)v34 == 2)
              WTF::StringImpl::destroy(v34, v29);
            else
              *(_DWORD *)v34 -= 2;
          }
        }
        WebCore::CanvasRenderingContext2DBase::translate((WebCore::CanvasRenderingContext2DBase *)v12, v14, v17);
        return 10;
      }
    }
  }
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_transform(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  unint64_t v27;
  JSC::VM *v28;
  double v29;
  JSValue v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  WebCore::InspectorCanvasAgent *v35;
  WebCore::InspectorInstrumentation *v36;
  WebCore::ScriptExecutionContext *v37;
  uint64_t v38;
  WebCore::InspectorCanvasAgent *v39;
  WebCore::InspectorInstrumentation *v40;
  WebCore::ScriptExecutionContext *v41;
  uint64_t v42;
  WebCore::InspectorCanvasAgent *v43;
  WebCore::InspectorInstrumentation *v44;
  WebCore::ScriptExecutionContext *v45;
  uint64_t v46;
  WebCore::InspectorCanvasAgent *v47;
  WebCore::InspectorInstrumentation *v48;
  WebCore::ScriptExecutionContext *v49;
  uint64_t v50;
  WebCore::InspectorCanvasAgent *v51;
  WebCore::InspectorInstrumentation *v52;
  WebCore::ScriptExecutionContext *v53;
  uint64_t v54;
  WebCore::InspectorCanvasAgent *v55;
  WebCore::InspectorInstrumentation *v56;
  WebCore::ScriptExecutionContext *v57;
  uint64_t v58;
  uint64_t v59;
  _DWORD *v60;
  _DWORD *v61;
  _DWORD *v62;
  _DWORD *v63;
  _DWORD *v64;
  _DWORD *v65;
  WTF::StringImpl *v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  JSC::VM *v73;
  _QWORD v74[2];
  WTF::StringImpl *v75;
  _QWORD v76[2];
  char v77;
  _DWORD *v78;
  char v79;
  _DWORD *v80;
  char v81;
  _DWORD *v82;
  char v83;
  _DWORD *v84;
  char v85;
  _DWORD *v86;
  char v87;
  uint64_t v88;

  v88 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v73 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v73, "OffscreenCanvasRenderingContext2D", "transform");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v73, "OffscreenCanvasRenderingContext2D", "transform");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 5)
  {
    v31.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v31);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v76[0] = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v76, this);
      v14 = v67;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v76[0] = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v76, this);
        v17 = v68;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = *((_QWORD *)a2 + 8);
        v76[0] = v18;
        v19 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v18 >= 0xFFFE000000000000)
        {
          v20 = (double)(int)v18;
        }
        else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v76, this);
          v20 = v69;
        }
        else
        {
          *(_QWORD *)&v20 = v18 - 0x2000000000000;
        }
        if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
        {
          return 0;
        }
        else
        {
          v21 = *((_QWORD *)a2 + 9);
          v76[0] = v21;
          v22 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v21 >= 0xFFFE000000000000)
          {
            v23 = (double)(int)v21;
          }
          else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v76, this);
            v23 = v70;
          }
          else
          {
            *(_QWORD *)&v23 = v21 - 0x2000000000000;
          }
          if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
          {
            return 0;
          }
          else
          {
            v24 = *((_QWORD *)a2 + 10);
            v76[0] = v24;
            v25 = (JSC::VM *)*((_QWORD *)this + 7);
            if (v24 >= 0xFFFE000000000000)
            {
              v26 = (double)(int)v24;
            }
            else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v76, this);
              v26 = v71;
            }
            else
            {
              *(_QWORD *)&v26 = v24 - 0x2000000000000;
            }
            if (*((_DWORD *)v25 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v25))
            {
              return 0;
            }
            else
            {
              v27 = *((_QWORD *)a2 + 11);
              v76[0] = v27;
              v28 = (JSC::VM *)*((_QWORD *)this + 7);
              if (v27 >= 0xFFFE000000000000)
              {
                v29 = (double)(int)v27;
              }
              else if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
              {
                JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v76, this);
                v29 = v72;
              }
              else
              {
                *(_QWORD *)&v29 = v27 - 0x2000000000000;
              }
              if (*((_DWORD *)v28 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v28))
              {
                return 0;
              }
              else
              {
                if (*(_BYTE *)(v12 + 25))
                {
                  WTF::StringImpl::createWithoutCopyingNonEmpty();
                  v75 = (WTF::StringImpl *)v76[0];
                  v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                               + 144))(*(_QWORD *)(v12 + 32));
                  if (v32
                    && (v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33)) != 0
                    && (v35 = *(WebCore::InspectorCanvasAgent **)(v34 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v35, (WebCore::CanvasRenderingContext *)v12, v14, (uint64_t)v76);
                  }
                  else
                  {
                    LOBYTE(v76[0]) = 0;
                    v77 = 0;
                  }
                  v36 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                               + 144))(*(_QWORD *)(v12 + 32));
                  if (v36
                    && (v38 = WebCore::InspectorInstrumentation::instrumentingAgents(v36, v37)) != 0
                    && (v39 = *(WebCore::InspectorCanvasAgent **)(v38 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v39, (WebCore::CanvasRenderingContext *)v12, v17, (uint64_t)&v78);
                  }
                  else
                  {
                    LOBYTE(v78) = 0;
                    v79 = 0;
                  }
                  v40 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                               + 144))(*(_QWORD *)(v12 + 32));
                  if (v40
                    && (v42 = WebCore::InspectorInstrumentation::instrumentingAgents(v40, v41)) != 0
                    && (v43 = *(WebCore::InspectorCanvasAgent **)(v42 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v43, (WebCore::CanvasRenderingContext *)v12, v20, (uint64_t)&v80);
                  }
                  else
                  {
                    LOBYTE(v80) = 0;
                    v81 = 0;
                  }
                  v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                               + 144))(*(_QWORD *)(v12 + 32));
                  if (v44
                    && (v46 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, v45)) != 0
                    && (v47 = *(WebCore::InspectorCanvasAgent **)(v46 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v47, (WebCore::CanvasRenderingContext *)v12, v23, (uint64_t)&v82);
                  }
                  else
                  {
                    LOBYTE(v82) = 0;
                    v83 = 0;
                  }
                  v48 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                               + 144))(*(_QWORD *)(v12 + 32));
                  if (v48
                    && (v50 = WebCore::InspectorInstrumentation::instrumentingAgents(v48, v49)) != 0
                    && (v51 = *(WebCore::InspectorCanvasAgent **)(v50 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v51, (WebCore::CanvasRenderingContext *)v12, v26, (uint64_t)&v84);
                  }
                  else
                  {
                    LOBYTE(v84) = 0;
                    v85 = 0;
                  }
                  v52 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                               + 144))(*(_QWORD *)(v12 + 32));
                  if (v52
                    && (v54 = WebCore::InspectorInstrumentation::instrumentingAgents(v52, v53)) != 0
                    && (v55 = *(WebCore::InspectorCanvasAgent **)(v54 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v55, (WebCore::CanvasRenderingContext *)v12, v29, (uint64_t)&v86);
                  }
                  else
                  {
                    LOBYTE(v86) = 0;
                    v87 = 0;
                  }
                  v74[0] = v76;
                  v74[1] = 6;
                  v56 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                               + 144))(*(_QWORD *)(v12 + 32));
                  if (v56)
                  {
                    v58 = WebCore::InspectorInstrumentation::instrumentingAgents(v56, v57);
                    if (v58)
                    {
                      v59 = *(_QWORD *)(v58 + 96);
                      if (v59)
                        WebCore::InspectorCanvasAgent::recordAction(v59, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v75, v74);
                    }
                  }
                  if (v87)
                  {
                    v60 = v86;
                    v86 = 0;
                    if (v60)
                    {
                      if (*v60 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v60;
                    }
                  }
                  if (v85)
                  {
                    v61 = v84;
                    v84 = 0;
                    if (v61)
                    {
                      if (*v61 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v61;
                    }
                  }
                  if (v83)
                  {
                    v62 = v82;
                    v82 = 0;
                    if (v62)
                    {
                      if (*v62 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v62;
                    }
                  }
                  if (v81)
                  {
                    v63 = v80;
                    v80 = 0;
                    if (v63)
                    {
                      if (*v63 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v63;
                    }
                  }
                  if (v79)
                  {
                    v64 = v78;
                    v78 = 0;
                    if (v64)
                    {
                      if (*v64 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v64;
                    }
                  }
                  if (v77)
                  {
                    v65 = (_DWORD *)v76[0];
                    v76[0] = 0;
                    if (v65)
                    {
                      if (*v65 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v65;
                    }
                  }
                  v66 = v75;
                  v75 = 0;
                  if (v66)
                  {
                    if (*(_DWORD *)v66 == 2)
                      WTF::StringImpl::destroy(v66, v57);
                    else
                      *(_DWORD *)v66 -= 2;
                  }
                }
                WebCore::CanvasRenderingContext2DBase::transform((WebCore::CanvasRenderingContext2DBase *)v12, v14, v17, v20, v23, v26, v29);
                return 10;
              }
            }
          }
        }
      }
    }
  }
}

_BYTE *WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_getTransform(_BYTE *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  unsigned int v12;
  JSC::VM *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  bmalloc::api *v23;
  WebCore::InspectorInstrumentation *v24;
  WebCore::ScriptExecutionContext *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  bmalloc::api *v29[2];
  WTF::StringImpl *v30;

  v3 = (int)this;
  v4 = *((_QWORD *)a2 + 5);
  v28 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "OffscreenCanvasRenderingContext2D", "getTransform");
  v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v6 = *(unsigned int *)(v5 + 0x4C);
  v7 = *(_DWORD *)(v5 + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "OffscreenCanvasRenderingContext2D", "getTransform");
  v11 = *(_QWORD *)(v4 + 24);
  if (*(_BYTE *)(v11 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v29[0] = 0;
    v29[1] = 0;
    v24 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
    if (v24)
    {
      v26 = WebCore::InspectorInstrumentation::instrumentingAgents(v24, v25);
      if (v26)
      {
        v27 = *(_QWORD *)(v26 + 96);
        if (v27)
          WebCore::InspectorCanvasAgent::recordAction(v27, (WebCore::CanvasRenderingContext *)v11, (const WTF::StringImpl *)&v30, v29);
      }
    }
    this = v30;
    v30 = 0;
    if (this)
    {
      if (*(_DWORD *)this == 2)
        this = (_BYTE *)WTF::StringImpl::destroy((WTF::StringImpl *)this, v25);
      else
        *(_DWORD *)this -= 2;
    }
    v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  }
  v12 = *(_DWORD *)(v11 + 132);
  if (v12)
  {
    v13 = *(JSC::VM **)(v5 + 40);
    v14 = *(_QWORD *)(*(_QWORD *)(v11 + 120) + 560 * v12 - 448);
    v15 = *(_QWORD *)(*(_QWORD *)(v11 + 120) + 560 * v12 - 440);
    v16 = *(_QWORD *)(*(_QWORD *)(v11 + 120) + 560 * v12 - 432);
    v17 = *(_QWORD *)(*(_QWORD *)(v11 + 120) + 560 * v12 - 424);
    v18 = *(_QWORD *)(*(_QWORD *)(v11 + 120) + 560 * v12 - 416);
    v19 = *(_QWORD *)(*(_QWORD *)(v11 + 120) + 560 * v12 - 408);
    v20 = bmalloc::api::isoAllocate();
    *(_QWORD *)v20 = 0;
    *(_DWORD *)(v20 + 8) = 1;
    *(_QWORD *)(v20 + 16) = v14;
    *(_QWORD *)(v20 + 24) = v15;
    *(_QWORD *)(v20 + 32) = 0;
    *(_QWORD *)(v20 + 40) = 0;
    *(_QWORD *)(v20 + 48) = v16;
    *(_QWORD *)(v20 + 56) = v17;
    *(_QWORD *)(v20 + 64) = 0;
    *(_QWORD *)(v20 + 72) = 0;
    *(_OWORD *)(v20 + 80) = constinit_13;
    *(_OWORD *)(v20 + 96) = unk_1969F8D70;
    *(_QWORD *)(v20 + 112) = v18;
    *(_QWORD *)(v20 + 120) = v19;
    *(_OWORD *)(v20 + 128) = xmmword_1968A14C0;
    *(_BYTE *)(v20 + 144) = 1;
    v29[0] = (bmalloc::api *)v20;
    v22 = WebCore::toJSNewlyCreated(v3, v13, (WebCore::JSDOMGlobalObject *)v29);
    v23 = v29[0];
    v29[0] = 0;
    if (v23)
    {
      if (*((_DWORD *)v23 + 2) == 1)
      {
        if (*(_QWORD *)v23)
        {
          *(_QWORD *)(*(_QWORD *)v23 + 8) = 3;
          *(_QWORD *)v23 = 0;
        }
        bmalloc::api::isoDeallocate(v23, v21);
      }
      else
      {
        --*((_DWORD *)v23 + 2);
      }
    }
    return (_BYTE *)v22;
  }
  __break(0xC471u);
  return this;
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_setTransform(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4)
{
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  unint64_t v13;
  uint64_t v15;
  unint64_t v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  unint64_t v27;
  JSC::VM *v28;
  double v29;
  unint64_t v30;
  JSC::VM *v31;
  double v32;
  WebCore::InspectorInstrumentation *v33;
  WebCore::ScriptExecutionContext *v34;
  uint64_t v35;
  WebCore::InspectorCanvasAgent *v36;
  WebCore::InspectorInstrumentation *v37;
  WebCore::ScriptExecutionContext *v38;
  uint64_t v39;
  WebCore::InspectorCanvasAgent *v40;
  WebCore::InspectorInstrumentation *v41;
  WebCore::ScriptExecutionContext *v42;
  uint64_t v43;
  WebCore::InspectorCanvasAgent *v44;
  WebCore::InspectorInstrumentation *v45;
  WebCore::ScriptExecutionContext *v46;
  uint64_t v47;
  WebCore::InspectorCanvasAgent *v48;
  WebCore::InspectorInstrumentation *v49;
  WebCore::ScriptExecutionContext *v50;
  uint64_t v51;
  WebCore::InspectorCanvasAgent *v52;
  WebCore::InspectorInstrumentation *v53;
  WebCore::ScriptExecutionContext *v54;
  uint64_t v55;
  WebCore::InspectorCanvasAgent *v56;
  WebCore::InspectorInstrumentation *v57;
  WebCore::ScriptExecutionContext *v58;
  uint64_t v59;
  uint64_t v60;
  _DWORD *v61;
  _DWORD *v62;
  _DWORD *v63;
  _DWORD *v64;
  _DWORD *v65;
  _DWORD *v66;
  WTF::StringImpl *v67;
  JSC::VM *v68;
  double v69;
  JSC::VM *v70;
  double v71;
  JSC::VM *v72;
  double v73;
  JSC::VM *v74;
  double v75;
  JSC::VM *v76;
  double v77;
  double v78;
  _QWORD v79[2];
  _QWORD v80[2];
  WTF::StringImpl *v81;
  _QWORD v82[2];
  char v83;
  _DWORD *v84;
  char v85;
  _DWORD *v86;
  char v87;
  _DWORD *v88;
  char v89;
  _DWORD *v90;
  char v91;
  _DWORD *v92;
  char v93;
  uint64_t v94;

  v94 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v79[0] = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v79, "OffscreenCanvasRenderingContext2D", "setTransform");
  v8 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v9 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v10 = (char **)(16 * v8);
  if ((_DWORD)v8)
    v11 = v10 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v11 = 1;
  if (!v11)
  {
    do
    {
      v10 = (char **)v10[2];
      v9 = v10 != 0;
    }
    while (v10 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v10 != 0);
  }
  if (!v9)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v79, "OffscreenCanvasRenderingContext2D", "setTransform");
  v79[1] = v5;
  v13 = *((int *)a2 + 8) - 1;
  if (v13 >= 6)
    v13 = 6;
  if (v13 == 6)
  {
    v15 = *(_QWORD *)(v6 + 24);
    v16 = *((_QWORD *)a2 + 6);
    v82[0] = v16;
    if (v16 >= 0xFFFE000000000000)
    {
      v17 = (double)(int)v16;
    }
    else if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v68 = v5;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v82, this);
      v5 = v68;
      v17 = v69;
    }
    else
    {
      *(_QWORD *)&v17 = v16 - 0x2000000000000;
    }
    if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
    {
      return 0;
    }
    else
    {
      v18 = *((_QWORD *)a2 + 7);
      v82[0] = v18;
      v19 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v18 >= 0xFFFE000000000000)
      {
        v20 = (double)(int)v18;
      }
      else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v70 = (JSC::VM *)*((_QWORD *)this + 7);
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v82, this);
        v19 = v70;
        v20 = v71;
      }
      else
      {
        *(_QWORD *)&v20 = v18 - 0x2000000000000;
      }
      if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
      {
        return 0;
      }
      else
      {
        v21 = *((_QWORD *)a2 + 8);
        v82[0] = v21;
        v22 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v21 >= 0xFFFE000000000000)
        {
          v23 = (double)(int)v21;
        }
        else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v72 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v82, this);
          v22 = v72;
          v23 = v73;
        }
        else
        {
          *(_QWORD *)&v23 = v21 - 0x2000000000000;
        }
        if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
        {
          return 0;
        }
        else
        {
          v24 = *((_QWORD *)a2 + 9);
          v82[0] = v24;
          v25 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v24 >= 0xFFFE000000000000)
          {
            v26 = (double)(int)v24;
          }
          else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            v74 = (JSC::VM *)*((_QWORD *)this + 7);
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v82, this);
            v25 = v74;
            v26 = v75;
          }
          else
          {
            *(_QWORD *)&v26 = v24 - 0x2000000000000;
          }
          if (*((_DWORD *)v25 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v25))
          {
            return 0;
          }
          else
          {
            v27 = *((_QWORD *)a2 + 10);
            v82[0] = v27;
            v28 = (JSC::VM *)*((_QWORD *)this + 7);
            if (v27 >= 0xFFFE000000000000)
            {
              v29 = (double)(int)v27;
            }
            else if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              v76 = (JSC::VM *)*((_QWORD *)this + 7);
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v82, this);
              v28 = v76;
              v29 = v77;
            }
            else
            {
              *(_QWORD *)&v29 = v27 - 0x2000000000000;
            }
            if (*((_DWORD *)v28 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v28))
            {
              return 0;
            }
            else
            {
              v30 = *((_QWORD *)a2 + 11);
              v82[0] = v30;
              v31 = (JSC::VM *)*((_QWORD *)this + 7);
              if (v30 >= 0xFFFE000000000000)
              {
                v32 = (double)(int)v30;
              }
              else if (v30 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
              {
                JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v82, this);
                v32 = v78;
              }
              else
              {
                *(_QWORD *)&v32 = v30 - 0x2000000000000;
              }
              if (*((_DWORD *)v31 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v31))
              {
                return 0;
              }
              else
              {
                if (*(_BYTE *)(v15 + 25))
                {
                  WTF::StringImpl::createWithoutCopyingNonEmpty();
                  v81 = (WTF::StringImpl *)v82[0];
                  v33 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v15 + 32)
                                                                                               + 144))(*(_QWORD *)(v15 + 32));
                  if (v33
                    && (v35 = WebCore::InspectorInstrumentation::instrumentingAgents(v33, v34)) != 0
                    && (v36 = *(WebCore::InspectorCanvasAgent **)(v35 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v36, (WebCore::CanvasRenderingContext *)v15, v17, (uint64_t)v82);
                  }
                  else
                  {
                    LOBYTE(v82[0]) = 0;
                    v83 = 0;
                  }
                  v37 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v15 + 32)
                                                                                               + 144))(*(_QWORD *)(v15 + 32));
                  if (v37
                    && (v39 = WebCore::InspectorInstrumentation::instrumentingAgents(v37, v38)) != 0
                    && (v40 = *(WebCore::InspectorCanvasAgent **)(v39 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v40, (WebCore::CanvasRenderingContext *)v15, v20, (uint64_t)&v84);
                  }
                  else
                  {
                    LOBYTE(v84) = 0;
                    v85 = 0;
                  }
                  v41 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v15 + 32)
                                                                                               + 144))(*(_QWORD *)(v15 + 32));
                  if (v41
                    && (v43 = WebCore::InspectorInstrumentation::instrumentingAgents(v41, v42)) != 0
                    && (v44 = *(WebCore::InspectorCanvasAgent **)(v43 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v44, (WebCore::CanvasRenderingContext *)v15, v23, (uint64_t)&v86);
                  }
                  else
                  {
                    LOBYTE(v86) = 0;
                    v87 = 0;
                  }
                  v45 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v15 + 32)
                                                                                               + 144))(*(_QWORD *)(v15 + 32));
                  if (v45
                    && (v47 = WebCore::InspectorInstrumentation::instrumentingAgents(v45, v46)) != 0
                    && (v48 = *(WebCore::InspectorCanvasAgent **)(v47 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v48, (WebCore::CanvasRenderingContext *)v15, v26, (uint64_t)&v88);
                  }
                  else
                  {
                    LOBYTE(v88) = 0;
                    v89 = 0;
                  }
                  v49 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v15 + 32)
                                                                                               + 144))(*(_QWORD *)(v15 + 32));
                  if (v49
                    && (v51 = WebCore::InspectorInstrumentation::instrumentingAgents(v49, v50)) != 0
                    && (v52 = *(WebCore::InspectorCanvasAgent **)(v51 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v52, (WebCore::CanvasRenderingContext *)v15, v29, (uint64_t)&v90);
                  }
                  else
                  {
                    LOBYTE(v90) = 0;
                    v91 = 0;
                  }
                  v53 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v15 + 32)
                                                                                               + 144))(*(_QWORD *)(v15 + 32));
                  if (v53
                    && (v55 = WebCore::InspectorInstrumentation::instrumentingAgents(v53, v54)) != 0
                    && (v56 = *(WebCore::InspectorCanvasAgent **)(v55 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v56, (WebCore::CanvasRenderingContext *)v15, v32, (uint64_t)&v92);
                  }
                  else
                  {
                    LOBYTE(v92) = 0;
                    v93 = 0;
                  }
                  v80[0] = v82;
                  v80[1] = 6;
                  v57 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v15 + 32)
                                                                                               + 144))(*(_QWORD *)(v15 + 32));
                  if (v57)
                  {
                    v59 = WebCore::InspectorInstrumentation::instrumentingAgents(v57, v58);
                    if (v59)
                    {
                      v60 = *(_QWORD *)(v59 + 96);
                      if (v60)
                        WebCore::InspectorCanvasAgent::recordAction(v60, (WebCore::CanvasRenderingContext *)v15, (const WTF::StringImpl *)&v81, v80);
                    }
                  }
                  if (v93)
                  {
                    v61 = v92;
                    v92 = 0;
                    if (v61)
                    {
                      if (*v61 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v61;
                    }
                  }
                  if (v91)
                  {
                    v62 = v90;
                    v90 = 0;
                    if (v62)
                    {
                      if (*v62 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v62;
                    }
                  }
                  if (v89)
                  {
                    v63 = v88;
                    v88 = 0;
                    if (v63)
                    {
                      if (*v63 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v63;
                    }
                  }
                  if (v87)
                  {
                    v64 = v86;
                    v86 = 0;
                    if (v64)
                    {
                      if (*v64 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v64;
                    }
                  }
                  if (v85)
                  {
                    v65 = v84;
                    v84 = 0;
                    if (v65)
                    {
                      if (*v65 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v65;
                    }
                  }
                  if (v83)
                  {
                    v66 = (_DWORD *)v82[0];
                    v82[0] = 0;
                    if (v66)
                    {
                      if (*v66 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v66;
                    }
                  }
                  v67 = v81;
                  v81 = 0;
                  if (v67)
                  {
                    if (*(_DWORD *)v67 == 2)
                      WTF::StringImpl::destroy(v67, v58);
                    else
                      *(_DWORD *)v67 -= 2;
                  }
                }
                if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v15 + 240))(v15)
                  && (*(_QWORD *)&v17 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
                  && (*(_QWORD *)&v23 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
                  && (*(_QWORD *)&v29 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
                  && (*(_QWORD *)&v20 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
                  && (*(_QWORD *)&v26 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
                  && (*(_QWORD *)&v32 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
                {
                  WebCore::CanvasRenderingContext2DBase::resetTransform((WebCore::CanvasRenderingContext2DBase *)v15);
                  WebCore::CanvasRenderingContext2DBase::transform((WebCore::CanvasRenderingContext2DBase *)v15, v17, v20, v23, v26, v29, v32);
                }
                return 10;
              }
            }
          }
        }
      }
    }
  }
  else if (v13 > 1)
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::jsCanvasRenderingContext2DPrototypeFunction_setTransform2Body(this, a2, *(JSC::CallFrame **)(v6 + 24), a4);
  }
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_resetTransform(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::InspectorInstrumentation *v11;
  WebCore::ScriptExecutionContext *v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  _QWORD v17[2];
  WTF::StringImpl *v18;

  v3 = *((_QWORD *)a2 + 5);
  v16 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "OffscreenCanvasRenderingContext2D", "resetTransform");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSOffscreenCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSOffscreenCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "OffscreenCanvasRenderingContext2D", "resetTransform");
  v9 = *(_QWORD *)(v3 + 24);
  if (*(_BYTE *)(v9 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v17[0] = 0;
    v17[1] = 0;
    v11 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
    if (v11)
    {
      v13 = WebCore::InspectorInstrumentation::instrumentingAgents(v11, v12);
      if (v13)
      {
        v14 = *(_QWORD *)(v13 + 96);
        if (v14)
          WebCore::InspectorCanvasAgent::recordAction(v14, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v18, v17);
      }
    }
    v15 = v18;
    v18 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v12);
      else
        *(_DWORD *)v15 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::resetTransform((WebCore::CanvasRenderingContext2DBase *)v9);
  return 10;
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_fill1Body(JSC::VM **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSOffscreenCanvasRenderingContext2D *a4)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  WebCore::InspectorInstrumentation *v10;
  WebCore::ScriptExecutionContext *v11;
  uint64_t v12;
  uint64_t v13;
  WebCore::InspectorInstrumentation *v14;
  WebCore::ScriptExecutionContext *v15;
  uint64_t v16;
  uint64_t v17;
  JSC::VM *v18;
  WTF::StringImpl *v19;
  _QWORD v20[2];
  WTF::StringImpl *v21;
  JSC::VM *v22[2];
  char v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v6 = 0;
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    if (v5 != 10)
    {
      v22[0] = this[7];
      v6 = WebCore::parseEnumeration<WebCore::CanvasFillRule>((JSC::JSGlobalObject *)this, v5);
      if (!*((_DWORD *)v22[0] + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v22[0]) & 1) == 0)
      {
        if ((v6 & 0xFF00000000) != 0)
          goto LABEL_7;
        WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)v22, 0, "fillRule", 9, "OffscreenCanvasRenderingContext2D", 34, v8, "fill", 5, "\"nonzero\", \"evenodd\"", 21);
      }
      return 0;
    }
    v6 = 0;
  }
LABEL_7:
  if (*((_BYTE *)a3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v10 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v10
      && (v12 = WebCore::InspectorInstrumentation::instrumentingAgents(v10, v11)) != 0
      && (v13 = *(_QWORD *)(v12 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v13, (uint64_t)a3, v6, (uint64_t)v22);
    }
    else
    {
      LOBYTE(v22[0]) = 0;
      v23 = 0;
    }
    v20[0] = v22;
    v20[1] = 1;
    v14 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v14)
    {
      v16 = WebCore::InspectorInstrumentation::instrumentingAgents(v14, v15);
      if (v16)
      {
        v17 = *(_QWORD *)(v16 + 96);
        if (v17)
          WebCore::InspectorCanvasAgent::recordAction(v17, a3, (const WTF::StringImpl *)&v21, v20);
      }
    }
    if (v23)
    {
      v18 = v22[0];
      v22[0] = 0;
      if (v18)
      {
        if (*(_DWORD *)v18 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*(_DWORD *)v18;
      }
    }
    v19 = v21;
    v21 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v15);
      else
        *(_DWORD *)v19 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::fill((uint64_t)a3, v6);
  return 10;
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_fill2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSOffscreenCanvasRenderingContext2D *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  JSC::VM *v10;
  uint64_t v12;
  _BOOL4 v13;
  char **v14;
  BOOL v15;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  WebCore::InspectorInstrumentation *v22;
  WebCore::ScriptExecutionContext *v23;
  uint64_t v24;
  WebCore::InspectorCanvasAgent *v25;
  WebCore::InspectorInstrumentation *v26;
  WebCore::ScriptExecutionContext *v27;
  uint64_t v28;
  uint64_t v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  _DWORD *v35;
  WTF::StringImpl *v36;
  _QWORD v37[2];
  WTF::StringImpl *v38;
  _QWORD v39[2];
  char v40;
  _DWORD *v41;
  char v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v9 = *((_QWORD *)a2 + 6);
  v10 = (JSC::VM *)*((_QWORD *)this + 7);
  v39[0] = v10;
  if ((v9 & 0xFFFE000000000002) != 0)
    goto LABEL_12;
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSPath2D::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSPath2D::s_info && v14 != 0);
  }
  if (!v13 || (v18 = *(_QWORD *)(v9 + 24)) == 0)
  {
LABEL_12:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v39, 0, "path", 5, "OffscreenCanvasRenderingContext2D", 34, a8, "fill", 5, "Path2D", 7);
    return 0;
  }
  if ((unint64_t)(*((int *)a2 + 8) - 3) > 0xFFFFFFFFFFFFFFFDLL)
  {
    LODWORD(v20) = 0;
  }
  else
  {
    v19 = *((_QWORD *)a2 + 7);
    if (v19 != 10)
    {
      v39[0] = v10;
      v20 = WebCore::parseEnumeration<WebCore::CanvasFillRule>(this, v19);
      if (!*((_DWORD *)v10 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) == 0)
      {
        if ((v20 & 0xFF00000000) != 0)
          goto LABEL_20;
        WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)v39, 1, "fillRule", 9, "OffscreenCanvasRenderingContext2D", 34, v21, "fill", 5, "\"nonzero\", \"evenodd\"", 21);
      }
      return 0;
    }
    LODWORD(v20) = 0;
  }
LABEL_20:
  if (*((_BYTE *)a3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v22 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v22
      && (v24 = WebCore::InspectorInstrumentation::instrumentingAgents(v22, v23)) != 0
      && (v25 = *(WebCore::InspectorCanvasAgent **)(v24 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v25, a3, (WebCore::Path2D *)v18, (uint64_t)v39);
    }
    else
    {
      LOBYTE(v39[0]) = 0;
      v40 = 0;
    }
    v26 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v26
      && (v28 = WebCore::InspectorInstrumentation::instrumentingAgents(v26, v27)) != 0
      && (v29 = *(_QWORD *)(v28 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v29, (uint64_t)a3, v20, (uint64_t)&v41);
    }
    else
    {
      LOBYTE(v41) = 0;
      v42 = 0;
    }
    v37[0] = v39;
    v37[1] = 2;
    v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v30)
    {
      v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31);
      if (v32)
      {
        v33 = *(_QWORD *)(v32 + 96);
        if (v33)
          WebCore::InspectorCanvasAgent::recordAction(v33, a3, (const WTF::StringImpl *)&v38, v37);
      }
    }
    if (v42)
    {
      v34 = v41;
      v41 = 0;
      if (v34)
      {
        if (*v34 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v34;
      }
    }
    if (v40)
    {
      v35 = (_DWORD *)v39[0];
      v39[0] = 0;
      if (v35)
      {
        if (*v35 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v35;
      }
    }
    v36 = v38;
    v38 = 0;
    if (v36)
    {
      if (*(_DWORD *)v36 == 2)
        WTF::StringImpl::destroy(v36, v31);
      else
        *(_DWORD *)v36 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::fillInternal((uint64_t)a3, (WebCore::Path *)(v18 + 8), v20);
  return 10;
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_clip1Body(JSC::VM **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSOffscreenCanvasRenderingContext2D *a4)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t result;
  unsigned int v10;
  uint64_t v11;
  WebCore::InspectorInstrumentation *v12;
  WebCore::ScriptExecutionContext *v13;
  uint64_t v14;
  uint64_t v15;
  WebCore::InspectorInstrumentation *v16;
  WebCore::ScriptExecutionContext *v17;
  uint64_t v18;
  uint64_t v19;
  JSC::VM *v20;
  WTF::StringImpl *v21;
  _QWORD v22[2];
  WTF::StringImpl *v23;
  JSC::VM *v24[2];
  char v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  if (*((_DWORD *)a2 + 8) == 1)
  {
    LODWORD(v6) = 0;
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    if (v5 != 10)
    {
      v24[0] = this[7];
      v6 = WebCore::parseEnumeration<WebCore::CanvasFillRule>((JSC::JSGlobalObject *)this, v5);
      if (!*((_DWORD *)v24[0] + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v24[0]) & 1) == 0)
      {
        if ((v6 & 0xFF00000000) != 0)
          goto LABEL_7;
        WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)v24, 0, "fillRule", 9, "OffscreenCanvasRenderingContext2D", 34, v8, "clip", 5, "\"nonzero\", \"evenodd\"", 21);
      }
      return 0;
    }
    LODWORD(v6) = 0;
  }
LABEL_7:
  if (*((_BYTE *)a3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v12 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v12
      && (v14 = WebCore::InspectorInstrumentation::instrumentingAgents(v12, v13)) != 0
      && (v15 = *(_QWORD *)(v14 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v15, (uint64_t)a3, v6, (uint64_t)v24);
    }
    else
    {
      LOBYTE(v24[0]) = 0;
      v25 = 0;
    }
    v22[0] = v24;
    v22[1] = 1;
    v16 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v16)
    {
      v18 = WebCore::InspectorInstrumentation::instrumentingAgents(v16, v17);
      if (v18)
      {
        v19 = *(_QWORD *)(v18 + 96);
        if (v19)
          WebCore::InspectorCanvasAgent::recordAction(v19, a3, (const WTF::StringImpl *)&v23, v22);
      }
    }
    if (v25)
    {
      v20 = v24[0];
      v24[0] = 0;
      if (v20)
      {
        if (*(_DWORD *)v20 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*(_DWORD *)v20;
      }
    }
    v21 = v23;
    v23 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v17);
      else
        *(_DWORD *)v21 -= 2;
    }
  }
  result = (*(uint64_t (**)(JSC::CallFrame *))(*(_QWORD *)a3 + 240))(a3);
  if (!result)
    return 10;
  v10 = *((_DWORD *)a3 + 33);
  if (v10)
  {
    if (*(_BYTE *)(*((_QWORD *)a3 + 15) + 560 * v10 - 400))
    {
      v11 = result;
      WebCore::CanvasRenderingContext2DBase::realizeSaves(a3);
      (*(void (**)(uint64_t, char *, BOOL))(*(_QWORD *)v11 + 496))(v11, (char *)a3 + 48, (_DWORD)v6 != 0);
    }
    return 10;
  }
  __break(0xC471u);
  return result;
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_clip2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSOffscreenCanvasRenderingContext2D *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  JSC::VM *v10;
  uint64_t v12;
  _BOOL4 v13;
  char **v14;
  BOOL v15;
  WebCore::Path2D *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  WebCore::InspectorInstrumentation *v22;
  WebCore::ScriptExecutionContext *v23;
  uint64_t v24;
  WebCore::InspectorCanvasAgent *v25;
  WebCore::InspectorInstrumentation *v26;
  WebCore::ScriptExecutionContext *v27;
  uint64_t v28;
  uint64_t v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  _DWORD *v35;
  WTF::StringImpl *v36;
  _QWORD v37[2];
  WTF::StringImpl *v38;
  _QWORD v39[2];
  char v40;
  _DWORD *v41;
  char v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v9 = *((_QWORD *)a2 + 6);
  v10 = (JSC::VM *)*((_QWORD *)this + 7);
  v39[0] = v10;
  if ((v9 & 0xFFFE000000000002) != 0)
    goto LABEL_12;
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSPath2D::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSPath2D::s_info && v14 != 0);
  }
  if (!v13 || (v18 = *(WebCore::Path2D **)(v9 + 24)) == 0)
  {
LABEL_12:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v39, 0, "path", 5, "OffscreenCanvasRenderingContext2D", 34, a8, "clip", 5, "Path2D", 7);
    return 0;
  }
  if ((unint64_t)(*((int *)a2 + 8) - 3) > 0xFFFFFFFFFFFFFFFDLL)
  {
    LODWORD(v20) = 0;
  }
  else
  {
    v19 = *((_QWORD *)a2 + 7);
    if (v19 != 10)
    {
      v39[0] = v10;
      v20 = WebCore::parseEnumeration<WebCore::CanvasFillRule>(this, v19);
      if (!*((_DWORD *)v10 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) == 0)
      {
        if ((v20 & 0xFF00000000) != 0)
          goto LABEL_20;
        WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)v39, 1, "fillRule", 9, "OffscreenCanvasRenderingContext2D", 34, v21, "clip", 5, "\"nonzero\", \"evenodd\"", 21);
      }
      return 0;
    }
    LODWORD(v20) = 0;
  }
LABEL_20:
  if (*((_BYTE *)a3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v22 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v22
      && (v24 = WebCore::InspectorInstrumentation::instrumentingAgents(v22, v23)) != 0
      && (v25 = *(WebCore::InspectorCanvasAgent **)(v24 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v25, a3, v18, (uint64_t)v39);
    }
    else
    {
      LOBYTE(v39[0]) = 0;
      v40 = 0;
    }
    v26 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v26
      && (v28 = WebCore::InspectorInstrumentation::instrumentingAgents(v26, v27)) != 0
      && (v29 = *(_QWORD *)(v28 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v29, (uint64_t)a3, v20, (uint64_t)&v41);
    }
    else
    {
      LOBYTE(v41) = 0;
      v42 = 0;
    }
    v37[0] = v39;
    v37[1] = 2;
    v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v30)
    {
      v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31);
      if (v32)
      {
        v33 = *(_QWORD *)(v32 + 96);
        if (v33)
          WebCore::InspectorCanvasAgent::recordAction(v33, a3, (const WTF::StringImpl *)&v38, v37);
      }
    }
    if (v42)
    {
      v34 = v41;
      v41 = 0;
      if (v34)
      {
        if (*v34 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v34;
      }
    }
    if (v40)
    {
      v35 = (_DWORD *)v39[0];
      v39[0] = 0;
      if (v35)
      {
        if (*v35 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v35;
      }
    }
    v36 = v38;
    v38 = 0;
    if (v36)
    {
      if (*(_DWORD *)v36 == 2)
        WTF::StringImpl::destroy(v36, v31);
      else
        *(_DWORD *)v36 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::clipInternal((unsigned int *)a3, (uint64_t)v18 + 8, v20);
  return 10;
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_isPointInPath1Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSOffscreenCanvasRenderingContext2D *a4)
{
  unint64_t v7;
  JSC::VM *v8;
  double v9;
  unint64_t v10;
  JSC::VM *v11;
  double v12;
  unint64_t v13;
  uint64_t v14;
  JSC::VM *v15;
  uint64_t v16;
  WebCore::InspectorInstrumentation *v18;
  WebCore::ScriptExecutionContext *v19;
  uint64_t v20;
  WebCore::InspectorCanvasAgent *v21;
  WebCore::InspectorInstrumentation *v22;
  WebCore::ScriptExecutionContext *v23;
  uint64_t v24;
  WebCore::InspectorCanvasAgent *v25;
  WebCore::InspectorInstrumentation *v26;
  WebCore::ScriptExecutionContext *v27;
  uint64_t v28;
  uint64_t v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  _DWORD *v35;
  _DWORD *v36;
  WTF::StringImpl *v37;
  double v38;
  double v39;
  _QWORD v40[2];
  WTF::StringImpl *v41;
  _QWORD v42[2];
  char v43;
  _DWORD *v44;
  char v45;
  _DWORD *v46;
  char v47;
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v7 = *((_QWORD *)a2 + 6);
  v42[0] = v7;
  v8 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v7 >= 0xFFFE000000000000)
  {
    v9 = (double)(int)v7;
  }
  else if (v7 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v42, this);
    v9 = v38;
  }
  else
  {
    *(_QWORD *)&v9 = v7 - 0x2000000000000;
  }
  if (*((_DWORD *)v8 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v8))
    return 0;
  v10 = *((_QWORD *)a2 + 7);
  v42[0] = v10;
  v11 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v10 >= 0xFFFE000000000000)
  {
    v12 = (double)(int)v10;
  }
  else if (v10 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v42, this);
    v12 = v39;
  }
  else
  {
    *(_QWORD *)&v12 = v10 - 0x2000000000000;
  }
  if (*((_DWORD *)v11 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v11))
    return 0;
  if ((unint64_t)(*((int *)a2 + 8) - 4) > 0xFFFFFFFFFFFFFFFCLL)
  {
    LODWORD(v14) = 0;
  }
  else
  {
    v13 = *((_QWORD *)a2 + 8);
    if (v13 != 10)
    {
      v42[0] = *((_QWORD *)this + 7);
      v15 = (JSC::VM *)v42[0];
      v14 = WebCore::parseEnumeration<WebCore::CanvasFillRule>(this, v13);
      if (!*((_DWORD *)v15 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) == 0)
      {
        if ((v14 & 0xFF00000000) != 0)
          goto LABEL_15;
        WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)v42, 2, "fillRule", 9, "OffscreenCanvasRenderingContext2D", 34, v16, "isPointInPath", 14, "\"nonzero\", \"evenodd\"", 21);
      }
      return 0;
    }
    LODWORD(v14) = 0;
  }
LABEL_15:
  if (*((_BYTE *)a3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v18 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v18
      && (v20 = WebCore::InspectorInstrumentation::instrumentingAgents(v18, v19)) != 0
      && (v21 = *(WebCore::InspectorCanvasAgent **)(v20 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v21, a3, v9, (uint64_t)v42);
    }
    else
    {
      LOBYTE(v42[0]) = 0;
      v43 = 0;
    }
    v22 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v22
      && (v24 = WebCore::InspectorInstrumentation::instrumentingAgents(v22, v23)) != 0
      && (v25 = *(WebCore::InspectorCanvasAgent **)(v24 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v25, a3, v12, (uint64_t)&v44);
    }
    else
    {
      LOBYTE(v44) = 0;
      v45 = 0;
    }
    v26 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v26
      && (v28 = WebCore::InspectorInstrumentation::instrumentingAgents(v26, v27)) != 0
      && (v29 = *(_QWORD *)(v28 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v29, (uint64_t)a3, v14, (uint64_t)&v46);
    }
    else
    {
      LOBYTE(v46) = 0;
      v47 = 0;
    }
    v40[0] = v42;
    v40[1] = 3;
    v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v30)
    {
      v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31);
      if (v32)
      {
        v33 = *(_QWORD *)(v32 + 96);
        if (v33)
          WebCore::InspectorCanvasAgent::recordAction(v33, a3, (const WTF::StringImpl *)&v41, v40);
      }
    }
    if (v47)
    {
      v34 = v46;
      v46 = 0;
      if (v34)
      {
        if (*v34 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v34;
      }
    }
    if (v45)
    {
      v35 = v44;
      v44 = 0;
      if (v35)
      {
        if (*v35 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v35;
      }
    }
    if (v43)
    {
      v36 = (_DWORD *)v42[0];
      v42[0] = 0;
      if (v36)
      {
        if (*v36 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v36;
      }
    }
    v37 = v41;
    v41 = 0;
    if (v37)
    {
      if (*(_DWORD *)v37 == 2)
        WTF::StringImpl::destroy(v37, v31);
      else
        *(_DWORD *)v37 -= 2;
    }
  }
  if (WebCore::CanvasRenderingContext2DBase::isPointInPathInternal((uint64_t)a3, (uint64_t)a3 + 48, v14, v9, v12))return 7;
  else
    return 6;
}

uint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_isPointInPath2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSOffscreenCanvasRenderingContext2D *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  JSC::VM *v10;
  uint64_t v13;
  _BOOL4 v14;
  char **v15;
  BOOL v16;
  WebCore::Path2D *v19;
  unint64_t v20;
  double v21;
  unint64_t v22;
  JSC::VM *v23;
  double v24;
  unint64_t v25;
  uint64_t v26;
  JSC::VM *v27;
  uint64_t v28;
  WebCore::InspectorInstrumentation *v29;
  WebCore::ScriptExecutionContext *v30;
  uint64_t v31;
  WebCore::InspectorCanvasAgent *v32;
  WebCore::InspectorInstrumentation *v33;
  WebCore::ScriptExecutionContext *v34;
  uint64_t v35;
  WebCore::InspectorCanvasAgent *v36;
  WebCore::InspectorInstrumentation *v37;
  WebCore::ScriptExecutionContext *v38;
  uint64_t v39;
  WebCore::InspectorCanvasAgent *v40;
  WebCore::InspectorInstrumentation *v41;
  WebCore::ScriptExecutionContext *v42;
  uint64_t v43;
  uint64_t v44;
  WebCore::InspectorInstrumentation *v45;
  WebCore::ScriptExecutionContext *v46;
  uint64_t v47;
  uint64_t v48;
  _DWORD *v49;
  _DWORD *v50;
  _DWORD *v51;
  _DWORD *v52;
  WTF::StringImpl *v53;
  double v54;
  double v55;
  _QWORD v56[2];
  WTF::StringImpl *v57;
  _QWORD v58[2];
  char v59;
  _DWORD *v60;
  char v61;
  _DWORD *v62;
  char v63;
  _DWORD *v64;
  char v65;
  uint64_t v66;

  v66 = *MEMORY[0x1E0C80C00];
  v9 = *((_QWORD *)a2 + 6);
  v10 = (JSC::VM *)*((_QWORD *)this + 7);
  v58[0] = v10;
  if ((v9 & 0xFFFE000000000002) != 0)
    goto LABEL_12;
  v13 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
  v14 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
  v15 = (char **)(16 * v13);
  if ((_DWORD)v13)
    v16 = v15 == &WebCore::JSPath2D::s_info;
  else
    v16 = 1;
  if (!v16)
  {
    do
    {
      v15 = (char **)v15[2];
      v14 = v15 != 0;
    }
    while (v15 != &WebCore::JSPath2D::s_info && v15 != 0);
  }
  if (!v14 || (v19 = *(WebCore::Path2D **)(v9 + 24)) == 0)
  {
LABEL_12:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v58, 0, "path", 5, "OffscreenCanvasRenderingContext2D", 34, a8, "isPointInPath", 14, "Path2D", 7);
    return 0;
  }
  v20 = *((_QWORD *)a2 + 7);
  v58[0] = v20;
  if (v20 >= 0xFFFE000000000000)
  {
    v21 = (double)(int)v20;
  }
  else if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v58, this);
    v21 = v54;
  }
  else
  {
    *(_QWORD *)&v21 = v20 - 0x2000000000000;
  }
  if (*((_DWORD *)v10 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v10))
    return 0;
  v22 = *((_QWORD *)a2 + 8);
  v58[0] = v22;
  v23 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v22 >= 0xFFFE000000000000)
  {
    v24 = (double)(int)v22;
  }
  else if (v22 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v58, this);
    v24 = v55;
  }
  else
  {
    *(_QWORD *)&v24 = v22 - 0x2000000000000;
  }
  if (*((_DWORD *)v23 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v23))
    return 0;
  if ((unint64_t)(*((int *)a2 + 8) - 5) > 0xFFFFFFFFFFFFFFFBLL)
  {
    LODWORD(v26) = 0;
  }
  else
  {
    v25 = *((_QWORD *)a2 + 9);
    if (v25 != 10)
    {
      v58[0] = *((_QWORD *)this + 7);
      v27 = (JSC::VM *)v58[0];
      v26 = WebCore::parseEnumeration<WebCore::CanvasFillRule>(this, v25);
      if (!*((_DWORD *)v27 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v27) & 1) == 0)
      {
        if ((v26 & 0xFF00000000) != 0)
          goto LABEL_28;
        WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)v58, 3, "fillRule", 9, "OffscreenCanvasRenderingContext2D", 34, v28, "isPointInPath", 14, "\"nonzero\", \"evenodd\"", 21);
      }
      return 0;
    }
    LODWORD(v26) = 0;
  }
LABEL_28:
  if (*((_BYTE *)a3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v29 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v29
      && (v31 = WebCore::InspectorInstrumentation::instrumentingAgents(v29, v30)) != 0
      && (v32 = *(WebCore::InspectorCanvasAgent **)(v31 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v32, a3, v19, (uint64_t)v58);
    }
    else
    {
      LOBYTE(v58[0]) = 0;
      v59 = 0;
    }
    v33 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v33
      && (v35 = WebCore::InspectorInstrumentation::instrumentingAgents(v33, v34)) != 0
      && (v36 = *(WebCore::InspectorCanvasAgent **)(v35 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v36, a3, v21, (uint64_t)&v60);
    }
    else
    {
      LOBYTE(v60) = 0;
      v61 = 0;
    }
    v37 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v37
      && (v39 = WebCore::InspectorInstrumentation::instrumentingAgents(v37, v38)) != 0
      && (v40 = *(WebCore::InspectorCanvasAgent **)(v39 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v40, a3, v24, (uint64_t)&v62);
    }
    else
    {
      LOBYTE(v62) = 0;
      v63 = 0;
    }
    v41 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v41
      && (v43 = WebCore::InspectorInstrumentation::instrumentingAgents(v41, v42)) != 0
      && (v44 = *(_QWORD *)(v43 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v44, (uint64_t)a3, v26, (uint64_t)&v64);
    }
    else
    {
      LOBYTE(v64) = 0;
      v65 = 0;
    }
    v56[0] = v58;
    v56[1] = 4;
    v45 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v45)
    {
      v47 = WebCore::InspectorInstrumentation::instrumentingAgents(v45, v46);
      if (v47)
      {
        v48 = *(_QWORD *)(v47 + 96);
        if (v48)
          WebCore::InspectorCanvasAgent::recordAction(v48, a3, (const WTF::StringImpl *)&v57, v56);
      }
    }
    if (v65)
    {
      v49 = v64;
      v64 = 0;
      if (v49)
      {
        if (*v49 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v49;
      }
    }
    if (v63)
    {
      v50 = v62;
      v62 = 0;
      if (v50)
      {
        if (*v50 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v50;
      }
    }
    if (v61)
    {
      v51 = v60;
      v60 = 0;
      if (v51)
      {
        if (*v51 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v51;
      }
    }
    if (v59)
    {
      v52 = (_DWORD *)v58[0];
      v58[0] = 0;
      if (v52)
      {
        if (*v52 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v52;
      }
    }
    v53 = v57;
    v57 = 0;
    if (v53)
    {
      if (*(_DWORD *)v53 == 2)
        WTF::StringImpl::destroy(v53, v46);
      else
        *(_DWORD *)v53 -= 2;
    }
  }
  if (WebCore::CanvasRenderingContext2DBase::isPointInPathInternal((uint64_t)a3, (uint64_t)v19 + 8, v26, v21, v24))return 7;
  else
    return 6;
}

unint64_t WebCore::jsOffscreenCanvasRenderingContext2DPrototypeFunction_createImageData1Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSOffscreenCanvasRenderingContext2D *a4)
{
  JSC::CallFrame *v4;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  WebCore::ScriptExecutionContext *v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  WTF *v18;
  void *v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  _DWORD *v23;
  WebCore::InspectorInstrumentation *v24;
  WebCore::ScriptExecutionContext *v25;
  uint64_t v26;
  WebCore::InspectorCanvasAgent *v27;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  WebCore::InspectorCanvasAgent *v31;
  WebCore::InspectorInstrumentation *v32;
  uint64_t v33;
  uint64_t v34;
  _DWORD *v35;
  _DWORD *v36;
  _DWORD *v37;
  WTF::StringImpl *v38;
  double v39;
  JSC::VM *v40;
  double v41;
  double v42;
  double v43;
  WTF::StringImpl *v44;
  _BYTE v45[4];
  unsigned __int16 v46;
  int v47;
  JSC::VM *v48;
  unint64_t v49;
  WTF::StringImpl *v50;
  unint64_t v51;
  WTF::StringImpl *v52;
  int v53;
  _DWORD *v54;
  char v55;
  _DWORD *v56;
  char v57;
  uint64_t v58;

  v4 = a3;
  v58 = *MEMORY[0x1E0C80C00];
  v7 = *((_QWORD *)this + 7);
  v48 = (JSC::VM *)v7;
  v8 = *((_QWORD *)a3 + 3);
  v9 = *((_QWORD *)a2 + 6);
  v51 = v9;
  if (v9 < 0xFFFE000000000000)
  {
    if (v9 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v51, this);
      v39 = v42;
    }
    else
    {
      *(_QWORD *)&v39 = v9 - 0x2000000000000;
    }
    if (*(_DWORD *)(v7 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v7))
      HIDWORD(v49) = 1;
    else
      WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)&v49, (uint64_t)this, v39);
  }
  else
  {
    v49 = v9;
  }
  v10 = v49;
  if (HIDWORD(v49))
    return 0;
  v11 = *((_QWORD *)a2 + 7);
  v51 = v11;
  if (v11 < 0xFFFE000000000000)
  {
    v40 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v11 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v51, this);
      v41 = v43;
    }
    else
    {
      *(_QWORD *)&v41 = v11 - 0x2000000000000;
    }
    if (*((_DWORD *)v40 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v40))
      HIDWORD(v49) = 1;
    else
      WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)&v49, (uint64_t)this, v41);
  }
  else
  {
    v49 = v11;
  }
  v12 = v49;
  if (HIDWORD(v49))
    return 0;
  if ((unint64_t)(*((int *)a2 + 8) - 4) > 0xFFFFFFFFFFFFFFFCLL)
    v13 = 10;
  else
    v13 = *((_QWORD *)a2 + 8);
  WebCore::convertDictionary<WebCore::ImageDataSettings>(this, (JSC::JSCell *)v13, (uint64_t)v45);
  if (v47)
    return 0;
  if (*(_BYTE *)(v8 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v44 = (WTF::StringImpl *)v51;
    v24 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v8 + 32) + 144))(*(_QWORD *)(v8 + 32));
    if (v24
      && (v26 = WebCore::InspectorInstrumentation::instrumentingAgents(v24, v25)) != 0
      && (v27 = *(WebCore::InspectorCanvasAgent **)(v26 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v27, (WebCore::CanvasRenderingContext *)v8, v10, (uint64_t)&v51);
    }
    else
    {
      LOBYTE(v51) = 0;
      LOBYTE(v53) = 0;
    }
    v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v8 + 32) + 144))(*(_QWORD *)(v8 + 32));
    if (v28
      && (v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29)) != 0
      && (v31 = *(WebCore::InspectorCanvasAgent **)(v30 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v31, (WebCore::CanvasRenderingContext *)v8, v12, (uint64_t)&v54);
    }
    else
    {
      LOBYTE(v54) = 0;
      v55 = 0;
    }
    if (!v47)
    {
      WebCore::InspectorCanvasCallTracer::processArgument(v8, &v56);
      v49 = (unint64_t)&v51;
      v50 = (WTF::StringImpl *)3;
      v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v8 + 32) + 144))(*(_QWORD *)(v8 + 32));
      if (v32)
      {
        v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v14);
        if (v33)
        {
          v34 = *(_QWORD *)(v33 + 96);
          if (v34)
            WebCore::InspectorCanvasAgent::recordAction(v34, (WebCore::CanvasRenderingContext *)v8, (const WTF::StringImpl *)&v44, &v49);
        }
      }
      if (v57)
      {
        v35 = v56;
        v56 = 0;
        if (v35)
        {
          if (*v35 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v35;
        }
      }
      if (v55)
      {
        v36 = v54;
        v54 = 0;
        if (v36)
        {
          if (*v36 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v36;
        }
      }
      if ((_BYTE)v53)
      {
        v37 = (_DWORD *)v51;
        v51 = 0;
        if (v37)
        {
          if (*v37 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v37;
        }
      }
      v38 = v44;
      v44 = 0;
      if (v38)
      {
        if (*(_DWORD *)v38 == 2)
          goto LABEL_76;
        *(_DWORD *)v38 -= 2;
      }
      goto LABEL_74;
    }
    goto LABEL_75;
  }
  while (1)
  {
    v4 = *(JSC::CallFrame **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
    if (v10 && v12)
    {
      if (v10 >= 0)
        v15 = v10;
      else
        v15 = -v10;
      if (v12 >= 0)
        v16 = v12;
      else
        v16 = -v12;
      WebCore::ImageData::createUninitialized(v15, v16, *(_BYTE *)(v8 + 802), v46 | 0x10000, (uint64_t)&v51);
      v17 = v53;
      if (!v53)
      {
        JSC::GenericTypedArrayView<JSC::Uint8ClampedAdaptor>::zeroFill(*(_QWORD *)(v51 + 16));
        v17 = v53;
        if (!v53)
        {
          v18 = (WTF *)v51;
          v51 = 0;
          v20 = WebCore::wrap<WebCore::ImageData>(this, (uint64_t)v4, v18);
          if (*(_DWORD *)v18 == 1)
          {
            v23 = (_DWORD *)*((_QWORD *)v18 + 2);
            *((_QWORD *)v18 + 2) = 0;
            if (v23)
            {
              if (*v23 == 1)
                JSC::ArrayBufferView::operator delete();
              else
                --*v23;
            }
            WTF::fastFree(v18, v19);
          }
          else
          {
            --*(_DWORD *)v18;
          }
          goto LABEL_32;
        }
      }
    }
    else
    {
      LOBYTE(v51) = 0;
      v52 = 0;
      v17 = 1;
      v53 = 1;
    }
    if (v17 == 1)
      break;
    do
    {
LABEL_75:
      v38 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_76:
      WTF::StringImpl::destroy(v38, v14);
LABEL_74:
      ;
    }
    while (v47);
  }
  LOBYTE(v49) = v51;
  v21 = v52;
  v52 = 0;
  v50 = v21;
  if (!*(_QWORD *)(v7 + 16))
  {
    WebCore::propagateExceptionSlowPath(this, &v48, (unsigned __int8 *)&v49);
    v21 = v50;
  }
  v50 = 0;
  if (v21)
  {
    if (*(_DWORD *)v21 == 2)
      WTF::StringImpl::destroy(v21, v14);
    else
      *(_DWORD *)v21 -= 2;
  }
  v20 = 0;
LABEL_32:
  if (v53 != -1)
    ((void (*)(unint64_t *, unint64_t *))off_1E32C2FB0[v53])(&v49, &v51);
  return v20;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore17OscillatorOptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  WTF ***v4;
  uint64_t v5;
  WTF **v6;
  void *v7;
  WTF *v8;

  v2 = a2[5];
  a2[5] = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = *(unsigned int *)(v2 + 36);
      if ((_DWORD)v3)
      {
        v4 = *(WTF ****)(v2 + 24);
        v5 = 8 * v3;
        do
        {
          v6 = *v4;
          *v4 = 0;
          if (v6)
          {
            WTF::fastAlignedFree(*v6, a2);
            WTF::fastFree((WTF *)v6, v7);
          }
          ++v4;
          v5 -= 8;
        }
        while (v5);
      }
      v8 = *(WTF **)(v2 + 24);
      if (v8)
      {
        *(_QWORD *)(v2 + 24) = 0;
        *(_DWORD *)(v2 + 32) = 0;
        WTF::fastFree(v8, a2);
      }
      WTF::fastFree((WTF *)v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
}

uint64_t WebCore::jsOscillatorNodePrototypeFunction_setPeriodicWave(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  WTF::StringImpl *v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v24;
  JSValue v25;
  JSC::VM *v26;
  JSC::VM *v27;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "OscillatorNode", "setPeriodicWave");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSOscillatorNode::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSOscillatorNode::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "OscillatorNode", "setPeriodicWave");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v25);
  }
  else
  {
    v16 = *(WTF::StringImpl **)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    v27 = v9;
    if ((v17 & 0xFFFE000000000002) != 0)
      goto LABEL_24;
    v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v20 = (char **)(16 * v18);
    if ((_DWORD)v18)
      v21 = v20 == &WebCore::JSPeriodicWave::s_info;
    else
      v21 = 1;
    if (!v21)
    {
      do
      {
        v20 = (char **)v20[2];
        v19 = v20 != 0;
      }
      while (v20 != &WebCore::JSPeriodicWave::s_info && v20 != 0);
    }
    if (v19 && (v24 = *(_QWORD *)(v17 + 24)) != 0)
    {
      WebCore::OscillatorNode::setPeriodicWave(v16, v24);
      return 10;
    }
    else
    {
LABEL_24:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v27, 0, "wave", 5, "OscillatorNode", 15, a8, "setPeriodicWave", 16, "PeriodicWave", 13);
      return 0;
    }
  }
}

uint64_t WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLBoolean>>::convert<BOOL,0ul>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  JSC::VM *v5;
  unsigned int v6;
  _BYTE *v7;
  uint64_t v8;
  objc_class *v9;
  int v10;
  BOOL v11;
  JSValue v12;
  void *v13;
  JSC::VM *v14;
  uint64_t v15;
  uint64_t *v16;
  _QWORD *v18;
  WTF *v19;
  int v20;
  BOOL v21;
  uint64_t v22;
  WTF *v23;
  _OWORD v24[4];
  uint64_t v25;
  JSC::VM *v26;

  v5 = *(JSC::VM **)(a1 + 56);
  v26 = v5;
  v21 = 0;
  v22 = 0x800000000;
  v23 = (WTF *)((char *)v24 + 8);
  memset(v24, 0, sizeof(v24));
  v25 = 0;
  v6 = *(_DWORD *)(a3 + 12);
  if (v6 >= 9)
  {
    v21 = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v22) == 1;
    v6 = *(_DWORD *)(a3 + 12);
    if (v6)
    {
LABEL_3:
      v7 = *(_BYTE **)a3;
      v8 = v6;
      do
      {
        v9 = (objc_class *)(*v7 ? 7 : 6);
        if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
          goto LABEL_33;
        v10 = v22;
        if ((_DWORD)v22 != HIDWORD(v22) && (v23 != (WTF *)((char *)v24 + 8) ? (v11 = v23 == 0) : (v11 = 1), v11))
        {
          *((_QWORD *)v23 + v22) = v9;
          LODWORD(v22) = v10 + 1;
        }
        else
        {
          v12.super.isa = v9;
          if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v22, v12) == 1)
            v21 = 1;
        }
        ++v7;
      }
      while (--v8);
    }
  }
  else if (v6)
  {
    goto LABEL_3;
  }
  if (v21)
  {
    JSC::throwOutOfMemoryError();
  }
  else
  {
    v19 = v23;
    v20 = v22;
    v14 = *(JSC::VM **)(a2 + 56);
    if (!*((_DWORD *)v14 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v14) & 1) == 0)
    {
      v15 = JSC::constructArray();
      goto LABEL_25;
    }
  }
LABEL_33:
  v15 = 0;
LABEL_25:
  v16 = *(uint64_t **)&v24[0];
  if (*(_QWORD *)&v24[0])
  {
    v19 = (WTF *)&v22;
    v18 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v24[0], (uint64_t *)&v19);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v16, v18);
  }
  if (v23 != (WTF *)((char *)v24 + 8) && v23)
    WTF::fastFree(v23, v13);
  return v15;
}

uint64_t WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLDictionary<WebCore::ConstrainDoubleRange>>>::convert(uint64_t a1, JSC::JSGlobalObject *a2, JSC::JSCell *a3)
{
  uint64_t result;
  int v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  int v13;
  _BYTE v14[72];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  if (((unint64_t)a3 & 0xFFFFFFFFFFFFFFF7) == 2
    || ((unint64_t)a3 & 0xFFFE000000000002) == 0 && *((unsigned __int8 *)a3 + 5) >= 0x17u)
  {
    result = WebCore::convertDictionary<WebCore::ConstrainDoubleRange>((uint64_t)&v8, a2, a3);
    v5 = 1;
    if (!v13)
    {
      *(_OWORD *)&v14[24] = v10;
      *(_OWORD *)&v14[8] = v9;
      *(_OWORD *)&v14[40] = v11;
      *(_OWORD *)&v14[56] = v12;
      v6 = *(_OWORD *)v14;
      *(_OWORD *)(a1 + 24) = *(_OWORD *)&v14[16];
      v7 = *(_OWORD *)&v14[48];
      *(_OWORD *)(a1 + 40) = *(_OWORD *)&v14[32];
      *(_OWORD *)(a1 + 56) = v7;
      *(_QWORD *)(a1 + 72) = *(_QWORD *)&v14[64];
      *(_OWORD *)(a1 + 8) = v6;
      *(_DWORD *)(a1 + 80) = 1;
      v5 = 0;
    }
  }
  else
  {
    result = (uint64_t)WebCore::Converter<WebCore::IDLDouble>::convert(a2, (unint64_t)a3, (uint64_t)&v8);
    v5 = v9;
    if ((_DWORD)v9)
    {
      v5 = 1;
    }
    else
    {
      *(_QWORD *)(a1 + 16) = v8;
      *(_DWORD *)(a1 + 80) = 0;
    }
  }
  *(_DWORD *)(a1 + 88) = v5;
  return result;
}

uint64_t WebCore::Converter<WebCore::IDLUnion<WebCore::IDLBoolean,WebCore::IDLDictionary<WebCore::ConstrainBooleanParameters>>>::convert(_DWORD *a1, JSC::JSGlobalObject *a2, unint64_t a3)
{
  uint64_t result;
  int v5;
  BOOL v6;
  unsigned int v7;
  uint64_t v8;
  int *v9;
  int v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  int v14;
  BOOL v15;
  _BYTE v16[4];
  int v17;
  int v18;

  if ((a3 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
LABEL_2:
    result = WebCore::convertDictionary<WebCore::ConstrainBooleanParameters>((uint64_t)v16, a2, (JSC::JSCell *)a3);
    v5 = 1;
    if (!v18)
    {
      a1[2] = v17;
      a1[3] = 1;
      v5 = 0;
    }
    a1[4] = v5;
    return result;
  }
  if ((a3 & 0xFFFE000000000002) == 0)
  {
    v7 = *(unsigned __int8 *)(a3 + 5);
    if (v7 >= 0x17)
      goto LABEL_2;
    result = *((_QWORD *)a2 + 7);
    if (v7 == 3)
    {
      v10 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v7 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v6 = 1;
          goto LABEL_32;
        }
        v13 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == (_QWORD)a2;
LABEL_29:
        v6 = !v13;
        goto LABEL_32;
      }
      v8 = *(_QWORD *)(a3 + 8);
      if ((v8 & 1) != 0)
        v9 = (int *)(a3 + 16);
      else
        v9 = (int *)(v8 + 4);
      v10 = *v9;
    }
    v13 = v10 == 0;
    goto LABEL_29;
  }
  result = *((_QWORD *)a2 + 7);
  if ((a3 & 0xFFFFFFFFFFFFFFFELL) == 6)
  {
    v6 = a3 == 7;
  }
  else
  {
    v11 = COERCE_DOUBLE(a3 - 0x2000000000000) > 0.0 || COERCE_DOUBLE(a3 - 0x2000000000000) < 0.0;
    if (a3 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
      v12 = v11;
    else
      v12 = a3 == 7;
    if (a3 >= 0xFFFE000000000000)
      v6 = (_DWORD)a3 != 0;
    else
      v6 = v12;
  }
LABEL_32:
  if (*(_DWORD *)(result + 80)
    && (v15 = v6, result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)result), v6 = v15, (result & 1) != 0))
  {
    v14 = 1;
  }
  else
  {
    v14 = 0;
    *((_BYTE *)a1 + 8) = v6;
    a1[3] = 0;
  }
  a1[4] = v14;
  return result;
}

uint64_t WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDOMString,WebCore::IDLSequence<WebCore::IDLDOMString>,WebCore::IDLDictionary<WebCore::ConstrainDOMStringParameters>>>::convert(uint64_t a1, JSC::JSGlobalObject *a2, uint64_t this)
{
  uint64_t result;
  JSC::VM *v7;
  unsigned int v8;
  JSC::JSObject *v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v18;
  JSC::JSObject *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  int v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  if ((this & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    v7 = (JSC::VM *)*((_QWORD *)a2 + 7);
    if ((this & 0xFFFE000000000002) != 0)
    {
      v21 = this;
LABEL_6:
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v21, a2);
      goto LABEL_18;
    }
    v8 = *(unsigned __int8 *)(this + 5);
    if (v8 >= 0x17)
    {
      v9 = (JSC::JSObject *)JSC::iteratorMethod(a2, (JSC::JSGlobalObject *)this, (JSC::JSObject *)this);
      if (*((_DWORD *)v7 + 20))
      {
        v18 = v7;
        v19 = v9;
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v18);
        v9 = v19;
        if ((_DWORD)result)
        {
          *(_DWORD *)(a1 + 88) = 1;
          return result;
        }
      }
      if (v9 != (JSC::JSObject *)10)
      {
        result = WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLDOMString>>::convert(a2, this, v9, (uint64_t)&v22);
        v10 = v24;
        if (v24)
        {
          *(_DWORD *)(a1 + 88) = 1;
          if ((_DWORD)v10 == -1)
            return result;
        }
        else
        {
          *(_QWORD *)(a1 + 16) = v22;
          v15 = v23;
          v22 = 0;
          v23 = 0;
          *(_QWORD *)(a1 + 24) = v15;
          *(_DWORD *)(a1 + 80) = 1;
          *(_DWORD *)(a1 + 88) = 0;
        }
        return ((uint64_t (*)(uint64_t *, uint64_t *))off_1E32C3118[v10])(&v21, &v22);
      }
      goto LABEL_2;
    }
    v21 = this;
    if (v8 != 2)
      goto LABEL_6;
    v11 = *(WTF::StringImpl **)(this + 8);
    if ((v11 & 1) != 0)
    {
      v11 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, a2);
      if (!v11)
        goto LABEL_17;
    }
    else if (!v11)
    {
LABEL_17:
      v20 = v11;
LABEL_18:
      if (*((_DWORD *)v7 + 20))
      {
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v7);
        v12 = v20;
        if (hasExceptionsAfterHandlingTraps)
        {
          LODWORD(v23) = 1;
          if (v20)
          {
            if (*(_DWORD *)v20 == 2)
              WTF::StringImpl::destroy(v20, v16);
            else
              *(_DWORD *)v20 -= 2;
          }
          v13 = 1;
          v14 = 1;
          goto LABEL_21;
        }
      }
      else
      {
        v12 = v20;
      }
      v13 = 0;
      v14 = 0;
      LODWORD(v23) = 0;
      v22 = 0;
      *(_QWORD *)(a1 + 16) = v12;
      *(_DWORD *)(a1 + 80) = 0;
LABEL_21:
      *(_DWORD *)(a1 + 88) = v13;
      return ((uint64_t (*)(uint64_t *, uint64_t *))off_1E32BEA70[v14])(&v21, &v22);
    }
    *(_DWORD *)v11 += 2;
    goto LABEL_17;
  }
LABEL_2:
  WebCore::convertDictionary<WebCore::ConstrainDOMStringParameters>((uint64_t)&v22, a2, (JSC::JSCell *)this);
  result = WebCore::Detail::ConversionResultStorage<std::variant<WTF::String,WTF::Vector<WTF::String,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>,WebCore::ConstrainDOMStringParameters>>::ConversionResultStorage<WebCore::ConstrainDOMStringParameters>(WebCore::Detail::ConversionResultStorage<WebCore::ConstrainDOMStringParameters> &&)::{lambda(void)#1}::operator()(a1, (uint64_t)&v22);
  if (v25 != -1)
    return ((uint64_t (*)(uint64_t *, uint64_t *))off_1E32C3108[v25])(&v21, &v23);
  return result;
}

uint64_t WebCore::Detail::ConversionResultStorage<std::variant<WTF::String,WTF::Vector<WTF::String,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>,WebCore::ConstrainDOMStringParameters>>::ConversionResultStorage<WebCore::ConstrainDOMStringParameters>(WebCore::Detail::ConversionResultStorage<WebCore::ConstrainDOMStringParameters> &&)::{lambda(void)#1}::operator()(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _BYTE v12[16];
  int v13;
  unsigned __int8 v14;
  _BYTE v15[16];
  int v16;
  unsigned __int8 v17;
  char v18;
  _BYTE v19[8];
  _BYTE v20[16];
  int v21;
  unsigned __int8 v22;
  _BYTE v23[16];
  int v24;
  unsigned __int8 v25;
  int v26;
  uint64_t v27;

  v2 = result;
  v27 = *MEMORY[0x1E0C80C00];
  if (*(_DWORD *)(a2 + 72))
  {
    *(_DWORD *)(result + 88) = 1;
  }
  else
  {
    v12[0] = 0;
    v14 = 0;
    v4 = *(unsigned __int8 *)(a2 + 32);
    if (*(_BYTE *)(a2 + 32))
    {
      v13 = -1;
      v5 = *(unsigned int *)(a2 + 24);
      if ((_DWORD)v5 != -1)
      {
        result = ((uint64_t (*)(_BYTE *, _BYTE *, uint64_t))off_1E32BEA18[v5])(v19, v12, a2 + 8);
        v13 = v5;
      }
      v4 = 1;
      v14 = 1;
    }
    v15[0] = 0;
    v17 = 0;
    v6 = *(unsigned __int8 *)(a2 + 64);
    if (*(_BYTE *)(a2 + 64))
    {
      v16 = -1;
      v7 = *(unsigned int *)(a2 + 56);
      if ((_DWORD)v7 != -1)
      {
        result = ((uint64_t (*)(_BYTE *, _BYTE *, uint64_t))off_1E32BEA18[v7])(v19, v15, a2 + 40);
        v16 = v7;
        v4 = v14;
      }
      v6 = 1;
      v17 = 1;
    }
    v20[0] = 0;
    v22 = 0;
    if (v4)
    {
      v21 = -1;
      v8 = v13;
      if (v13 != -1)
      {
        result = ((uint64_t (*)(char *, _BYTE *, _BYTE *))off_1E32BEA18[v13])(&v18, v20, v12);
        v21 = v8;
        v6 = v17;
      }
      v4 = 1;
      v22 = 1;
    }
    v23[0] = 0;
    v25 = 0;
    if (v6)
    {
      v24 = -1;
      v9 = v16;
      if (v16 != -1)
      {
        result = ((uint64_t (*)(char *, _BYTE *, _BYTE *))off_1E32BEA18[v16])(&v18, v23, v15);
        v24 = v9;
        v4 = v22;
      }
      v6 = 1;
      v25 = 1;
    }
    v26 = 2;
    *(_BYTE *)(v2 + 16) = 0;
    *(_DWORD *)(v2 + 80) = -1;
    *(_BYTE *)(v2 + 40) = 0;
    if (v4)
    {
      *(_DWORD *)(v2 + 32) = -1;
      v10 = v21;
      if (v21 != -1)
      {
        result = ((uint64_t (*)(char *))off_1E32BEA18[v21])(&v18);
        *(_DWORD *)(v2 + 32) = v10;
        v6 = v25;
      }
      *(_BYTE *)(v2 + 40) = 1;
    }
    *(_BYTE *)(v2 + 48) = 0;
    *(_BYTE *)(v2 + 72) = 0;
    if (v6)
    {
      *(_DWORD *)(v2 + 64) = -1;
      v11 = v24;
      if (v24 != -1)
      {
        result = ((uint64_t (*)(char *))off_1E32BEA18[v24])(&v18);
        *(_DWORD *)(v2 + 64) = v11;
      }
      *(_BYTE *)(v2 + 72) = 1;
    }
    *(_DWORD *)(v2 + 80) = 2;
    *(_DWORD *)(v2 + 88) = 0;
    if (v26 != -1)
      result = ((uint64_t (*)(char *, _BYTE *))off_1E32BE9D8[v26])(&v18, v20);
    v26 = -1;
    if (v17)
    {
      if (v16 != -1)
        result = ((uint64_t (*)(char *, _BYTE *))off_1E32BEA08[v16])(&v18, v15);
      v16 = -1;
    }
    if (v14)
    {
      if (v13 != -1)
        return ((uint64_t (*)(char *, _BYTE *))off_1E32BEA08[v13])(&v18, v12);
    }
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore28ConstrainDOMStringParametersENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char v6;
  char v7;

  if (*(_BYTE *)(a2 + 56))
  {
    v3 = *(unsigned int *)(a2 + 48);
    if ((_DWORD)v3 != -1)
      result = ((uint64_t (*)(char *, uint64_t))off_1E32BEA08[v3])(&v6, a2 + 32);
    *(_DWORD *)(a2 + 48) = -1;
  }
  if (*(_BYTE *)(a2 + 24))
  {
    v5 = *(unsigned int *)(a2 + 16);
    if ((_DWORD)v5 != -1)
      result = ((uint64_t (*)(char *, uint64_t))off_1E32BEA08[v5])(&v7, a2);
    *(_DWORD *)(a2 + 16) = -1;
  }
  return result;
}

uint64_t WebCore::Converter<WebCore::IDLUnion<WebCore::IDLLong,WebCore::IDLDictionary<WebCore::ConstrainLongRange>>>::convert(uint64_t a1, JSC::JSGlobalObject *a2, JSC::JSCell *a3)
{
  uint64_t result;
  int v5;
  __int128 v6;
  JSC::VM *v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  unsigned int v17;
  unint64_t v18;
  int v19;
  int v20;
  JSC::VM *v21;
  int v22;
  int v23;
  _BYTE v24[20];
  __int128 v25;
  int v26;
  _BYTE v27[36];
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  if (((unint64_t)a3 & 0xFFFFFFFFFFFFFFF7) == 2)
    goto LABEL_2;
  if (((unint64_t)a3 & 0xFFFE000000000002) != 0)
  {
    if ((unint64_t)a3 >> 49)
    {
      result = *((_QWORD *)a2 + 7);
      if ((unint64_t)a3 < 0xFFFE000000000000)
      {
        v15 = (uint64_t)a3 - 0x2000000000000;
        v16 = (((unint64_t)a3 - 0x2000000000000) >> 52) & 0x7FF;
        v17 = v16 - 1023;
        v18 = (unint64_t)v15 >> (51 - ((unint64_t)v15 >> 52));
        if (v16 > 0x433)
          LODWORD(v18) = (_QWORD)a3 << ((((unint64_t)a3 - 0x2000000000000) >> 52) - 51);
        if (v16 >= 0x41F)
          v19 = v18;
        else
          v19 = (((1 << ((((unint64_t)a3 - 0x2000000000000) >> 52) + 1)) - 1) & v18)
              + (1 << ((((unint64_t)a3 - 0x2000000000000) >> 52) + 1));
        if (v15 >= 0)
          v20 = v19;
        else
          v20 = -v19;
        if (v17 <= 0x53)
          LODWORD(a3) = v20;
        else
          LODWORD(a3) = 0;
      }
      if (*(_DWORD *)(result + 80)
        && (v23 = (int)a3,
            result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)result),
            LODWORD(a3) = v23,
            (result & 1) != 0))
      {
        v5 = 1;
      }
      else
      {
        v5 = 0;
        *(_DWORD *)(a1 + 8) = (_DWORD)a3;
        *(_DWORD *)(a1 + 40) = 0;
      }
      goto LABEL_9;
    }
  }
  else if (*((unsigned __int8 *)a3 + 5) >= 0x17u)
  {
LABEL_2:
    result = WebCore::convertDictionary<WebCore::ConstrainLongRange>((uint64_t)v24, a2, a3);
    v5 = 1;
    if (!v26)
    {
      *(_OWORD *)&v27[4] = *(_OWORD *)&v24[4];
      *(_OWORD *)&v27[20] = v25;
      v6 = *(_OWORD *)&v27[16];
      *(_OWORD *)(a1 + 4) = *(_OWORD *)v27;
      *(_OWORD *)(a1 + 20) = v6;
      *(_DWORD *)(a1 + 36) = *(_DWORD *)&v27[32];
      *(_DWORD *)(a1 + 40) = 1;
      v5 = 0;
    }
LABEL_9:
    *(_DWORD *)(a1 + 44) = v5;
    return result;
  }
  *(_QWORD *)v24 = a3;
  v7 = (JSC::VM *)*((_QWORD *)a2 + 7);
  result = JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v24, a2);
  v9 = (v8 >> 52) & 0x7FF;
  v10 = v9 - 1023;
  v11 = v8 >> (51 - (v8 >> 52));
  if (v9 > 0x433)
    LODWORD(v11) = v8 << ((v8 >> 52) - 51);
  if (v9 >= 0x41F)
    v12 = v11;
  else
    v12 = (((1 << ((v8 >> 52) + 1)) - 1) & v11) + (1 << ((v8 >> 52) + 1));
  if ((v8 & 0x8000000000000000) == 0)
    v13 = v12;
  else
    v13 = -v12;
  if (v10 > 0x53)
    v13 = 0;
  if (*((_DWORD *)v7 + 20)
    && (v21 = v7, v22 = v13, result = JSC::VM::hasExceptionsAfterHandlingTraps(v21), v13 = v22, (_DWORD)result))
  {
    v14 = 1;
  }
  else
  {
    v14 = 0;
    *(_DWORD *)(a1 + 8) = v13;
    *(_DWORD *)(a1 + 40) = 0;
  }
  *(_DWORD *)(a1 + 44) = v14;
  return result;
}

uint64_t WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::MediaTrackConstraintSet>>::convert(JSC::JSGlobalObject *a1, JSC::JSCell *this, uint64_t a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::Structure *Object;
  uint64_t result;
  WTF::StringImpl *v9;
  JSC::JSCell *v10;
  WTF::StringImpl *v11;
  unint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t (*v17)();
  int v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t (*v24)();
  int v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  unint64_t v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t (*v34)();
  int v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  JSC::JSCell *v38;
  WTF::StringImpl *v39;
  WTF::StringImpl *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t (*v44)();
  int v45;
  WTF::StringImpl *v46;
  WTF::StringImpl *v47;
  JSC::JSCell *v48;
  WTF::StringImpl *v49;
  WTF::StringImpl *v50;
  unint64_t v51;
  WTF::StringImpl *v52;
  WTF::StringImpl *v53;
  unint64_t v54;
  WTF::StringImpl *v55;
  WTF::StringImpl *v56;
  JSC::JSCell *v57;
  WTF::StringImpl *v58;
  WTF::StringImpl *v59;
  JSC::JSCell *v60;
  WTF::StringImpl *v61;
  WTF::StringImpl *v62;
  unint64_t v63;
  WTF::StringImpl *v64;
  WTF::StringImpl *v65;
  JSC::JSCell *v66;
  WTF::StringImpl *v67;
  WTF::StringImpl *v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t (*v72)();
  int v73;
  int v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  WTF::StringImpl *v78;
  WTF::StringImpl *v79;
  JSC::JSCell *v80;
  WTF::StringImpl *v81;
  WTF::StringImpl *v82;
  JSC::JSCell *v83;
  JSC::VM *v84;
  _BYTE *v85;
  WTF::StringImpl *v86;
  _BYTE v87[64];
  int v88;
  int v89;
  _BYTE *v90;
  _BYTE v91[64];
  int v92;
  _BYTE v93[56];
  __int128 v94;
  __int128 v95;
  int v96;
  _OWORD v97[2];
  uint64_t v98;
  char v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  char v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  char v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  char v115;
  char v116;
  _BYTE v117[64];
  int v118;
  char v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  char v125;
  __int128 v126;
  __int128 v127;
  uint64_t v128;
  char v129;
  __int128 v130;
  __int128 v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  int v135;
  char v136;
  char v137;
  _BYTE v138[64];
  int v139;
  char v140;
  char v141;
  _BYTE v142[64];
  int v143;
  char v144;
  char v145;
  _BYTE v146[64];
  int v147;
  char v148;
  uint64_t v149;
  int v150;
  char v151;
  char v152;
  _BYTE v153[64];
  int v154;
  char v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  char v161;
  uint64_t v162;
  int v163;
  char v164;
  uint64_t v165;
  int v166;
  char v167;
  uint64_t v168;
  int v169;
  char v170;
  uint64_t v171;

  v171 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v84 = v5;
  v6 = (unint64_t)this & 0xFFFFFFFFFFFFFFF7;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    Object = 0;
  }
  else if (((unint64_t)this & 0xFFFE000000000002) != 0
         || (Object = (JSC::Structure *)JSC::JSCell::getObject(this)) == 0)
  {
    JSC::throwTypeError();
    v74 = 1;
    v89 = 1;
    return ((uint64_t (*)(_OWORD *, _BYTE *))off_1E32C3128[v74])(v97, v87);
  }
  LOBYTE(v97[0]) = 0;
  v99 = 0;
  LOBYTE(v100) = 0;
  v103 = 0;
  LOBYTE(v104) = 0;
  v109 = 0;
  LOBYTE(v110) = 0;
  v115 = 0;
  v116 = 0;
  v119 = 0;
  LOBYTE(v120) = 0;
  v125 = 0;
  LOBYTE(v126) = 0;
  v129 = 0;
  LOBYTE(v130) = 0;
  v133 = 0;
  LOBYTE(v134) = 0;
  v136 = 0;
  v137 = 0;
  v140 = 0;
  v141 = 0;
  v144 = 0;
  v145 = 0;
  v148 = 0;
  LOBYTE(v149) = 0;
  v151 = 0;
  v152 = 0;
  v155 = 0;
  LOBYTE(v156) = 0;
  v161 = 0;
  LOBYTE(v162) = 0;
  v164 = 0;
  LOBYTE(v165) = 0;
  v167 = 0;
  LOBYTE(v168) = 0;
  v170 = 0;
  if (v6 == 2)
    goto LABEL_6;
  WTF::AtomStringImpl::addLiteral();
  v10 = (JSC::JSCell *)JSC::JSObject::get(Object, a1, (unint64_t)v86);
  if (v86)
  {
    if (*(_DWORD *)v86 == 2)
      WTF::StringImpl::destroy(v86, v9);
    else
      *(_DWORD *)v86 -= 2;
  }
  if (*((_DWORD *)v5 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    if ((_DWORD)result)
      goto LABEL_320;
  }
  if (v10 != (JSC::JSCell *)10)
  {
    result = WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLDictionary<WebCore::ConstrainDoubleRange>>>::convert((uint64_t)v93, a1, v10);
    if (v96)
      goto LABEL_320;
    v106 = *(_OWORD *)&v93[40];
    v107 = v94;
    v108 = v95;
    v104 = *(_OWORD *)&v93[8];
    v105 = *(_OWORD *)&v93[24];
    if (!v109)
      v109 = 1;
  }
  WTF::AtomStringImpl::addLiteral();
  v12 = JSC::JSObject::get(Object, a1, (unint64_t)v86);
  if (v86)
  {
    if (*(_DWORD *)v86 == 2)
      WTF::StringImpl::destroy(v86, v11);
    else
      *(_DWORD *)v86 -= 2;
  }
  if (*((_DWORD *)v5 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    if ((_DWORD)result)
      goto LABEL_320;
  }
  if (v12 != 10)
  {
    result = WebCore::Converter<WebCore::IDLUnion<WebCore::IDLBoolean,WebCore::IDLDictionary<WebCore::ConstrainBooleanParameters>>>::convert(v93, a1, v12);
    if (*(_DWORD *)&v93[16])
      goto LABEL_320;
    v165 = *(_QWORD *)&v93[4];
    v166 = *(_DWORD *)&v93[12];
    if (!v167)
      v167 = 1;
  }
  WTF::AtomStringImpl::addLiteral();
  v14 = JSC::JSObject::get(Object, a1, (unint64_t)v86);
  if (v86)
  {
    if (*(_DWORD *)v86 == 2)
      WTF::StringImpl::destroy(v86, v13);
    else
      *(_DWORD *)v86 -= 2;
  }
  if (*((_DWORD *)v5 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    if ((_DWORD)result)
      goto LABEL_320;
  }
  if (v14 == 10)
    goto LABEL_47;
  result = WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDOMString,WebCore::IDLSequence<WebCore::IDLDOMString>,WebCore::IDLDictionary<WebCore::ConstrainDOMStringParameters>>>::convert((uint64_t)v93, a1, v14);
  v15 = v96;
  if (!v96)
  {
    v87[0] = 0;
    v88 = -1;
    v16 = DWORD2(v95);
    if (DWORD2(v95) == -1)
    {
      if (v140)
      {
        if (v139 == -1)
        {
LABEL_43:
          v18 = v96;
          goto LABEL_44;
        }
        result = ((uint64_t (*)(_BYTE **, _BYTE *))off_1E32BE9D8[v139])(&v90, v138);
        v139 = -1;
LABEL_41:
        if (v88 != -1)
          result = ((uint64_t (*)(_BYTE **, _BYTE *))off_1E32BE9D8[v88])(&v90, v87);
        goto LABEL_43;
      }
      v138[0] = 0;
      v139 = -1;
    }
    else
    {
      v17 = off_1E32BE9F0[DWORD2(v95)];
      ((void (*)(_BYTE **, _BYTE *, _BYTE *))v17)(&v90, v87, &v93[16]);
      v88 = v16;
      if (v140)
      {
        v90 = v138;
        result = ((uint64_t (*)(_BYTE **))off_1E32BEA28[v16])(&v90);
        goto LABEL_41;
      }
      v138[0] = 0;
      v139 = -1;
      result = ((uint64_t (*)(_BYTE **, _BYTE *, _BYTE *))v17)(&v90, v138, v87);
      v139 = v16;
    }
    v140 = 1;
    goto LABEL_41;
  }
  v89 = 1;
  v18 = v96;
LABEL_44:
  if (v18 != -1)
    result = ((uint64_t (*)(_BYTE **, _BYTE *))off_1E32BEA50[v18])(&v90, &v93[8]);
  if (v15)
    goto LABEL_216;
LABEL_47:
  WTF::AtomStringImpl::addLiteral();
  v19 = *(WTF::StringImpl **)v93;
  v21 = JSC::JSObject::get(Object, a1, *(unint64_t *)v93);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  if (*((_DWORD *)v5 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    if ((_DWORD)result)
      goto LABEL_320;
  }
  if (v21 == 10)
    goto LABEL_69;
  result = WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDOMString,WebCore::IDLSequence<WebCore::IDLDOMString>,WebCore::IDLDictionary<WebCore::ConstrainDOMStringParameters>>>::convert((uint64_t)v93, a1, v21);
  v22 = v96;
  if (!v96)
  {
    v91[0] = 0;
    v92 = -1;
    v23 = DWORD2(v95);
    if (DWORD2(v95) == -1)
    {
      if (v148)
      {
        if (v147 == -1)
        {
LABEL_65:
          v25 = v96;
          goto LABEL_66;
        }
        result = ((uint64_t (*)(_BYTE **, _BYTE *))off_1E32BE9D8[v147])(&v85, v146);
        v147 = -1;
LABEL_63:
        if (v92 != -1)
          result = ((uint64_t (*)(_BYTE **, _BYTE *))off_1E32BE9D8[v92])(&v85, v91);
        goto LABEL_65;
      }
      v146[0] = 0;
      v147 = -1;
    }
    else
    {
      v24 = off_1E32BE9F0[DWORD2(v95)];
      ((void (*)(_BYTE **, _BYTE *, _BYTE *))v24)(&v85, v91, &v93[16]);
      v92 = v23;
      if (v148)
      {
        v85 = v146;
        result = ((uint64_t (*)(_BYTE **))off_1E32BEA28[v23])(&v85);
        goto LABEL_63;
      }
      v146[0] = 0;
      v147 = -1;
      result = ((uint64_t (*)(_BYTE **, _BYTE *, _BYTE *))v24)(&v85, v146, v91);
      v147 = v23;
    }
    v148 = 1;
    goto LABEL_63;
  }
  v89 = 1;
  v25 = v96;
LABEL_66:
  if (v25 != -1)
    result = ((uint64_t (*)(_BYTE **, _BYTE *))off_1E32BEA50[v25])(&v90, &v93[8]);
  if (v22)
    goto LABEL_216;
LABEL_69:
  WTF::AtomStringImpl::addLiteral();
  v26 = *(WTF::StringImpl **)v93;
  v28 = JSC::JSObject::get(Object, a1, *(unint64_t *)v93);
  if (v26)
  {
    if (*(_DWORD *)v26 == 2)
      WTF::StringImpl::destroy(v26, v27);
    else
      *(_DWORD *)v26 -= 2;
  }
  if (*((_DWORD *)v5 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    if ((_DWORD)result)
      goto LABEL_320;
  }
  if (v28 != 10)
  {
    result = WebCore::Converter<WebCore::IDLUnion<WebCore::IDLBoolean,WebCore::IDLDictionary<WebCore::ConstrainBooleanParameters>>>::convert(v93, a1, v28);
    if (*(_DWORD *)&v93[16])
      goto LABEL_320;
    v134 = *(_QWORD *)&v93[4];
    v135 = *(_DWORD *)&v93[12];
    if (!v136)
      v136 = 1;
  }
  WTF::AtomStringImpl::addLiteral();
  v29 = *(WTF::StringImpl **)v93;
  v31 = JSC::JSObject::get(Object, a1, *(unint64_t *)v93);
  if (v29)
  {
    if (*(_DWORD *)v29 == 2)
      WTF::StringImpl::destroy(v29, v30);
    else
      *(_DWORD *)v29 -= 2;
  }
  if (*((_DWORD *)v5 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    if ((_DWORD)result)
      goto LABEL_320;
  }
  if (v31 == 10)
    goto LABEL_100;
  result = WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDOMString,WebCore::IDLSequence<WebCore::IDLDOMString>,WebCore::IDLDictionary<WebCore::ConstrainDOMStringParameters>>>::convert((uint64_t)v93, a1, v31);
  v32 = v96;
  if (!v96)
  {
    v91[0] = 0;
    v92 = -1;
    v33 = DWORD2(v95);
    if (DWORD2(v95) == -1)
    {
      if (v119)
      {
        if (v118 == -1)
        {
LABEL_96:
          v35 = v96;
          goto LABEL_97;
        }
        result = ((uint64_t (*)(_BYTE **, _BYTE *))off_1E32BE9D8[v118])(&v85, v117);
        v118 = -1;
LABEL_94:
        if (v92 != -1)
          result = ((uint64_t (*)(_BYTE **, _BYTE *))off_1E32BE9D8[v92])(&v85, v91);
        goto LABEL_96;
      }
      v117[0] = 0;
      v118 = -1;
    }
    else
    {
      v34 = off_1E32BE9F0[DWORD2(v95)];
      ((void (*)(_BYTE **, _BYTE *, _BYTE *))v34)(&v85, v91, &v93[16]);
      v92 = v33;
      if (v119)
      {
        v85 = v117;
        result = ((uint64_t (*)(_BYTE **))off_1E32BEA28[v33])(&v85);
        goto LABEL_94;
      }
      v117[0] = 0;
      v118 = -1;
      result = ((uint64_t (*)(_BYTE **, _BYTE *, _BYTE *))v34)(&v85, v117, v91);
      v118 = v33;
    }
    v119 = 1;
    goto LABEL_94;
  }
  v89 = 1;
  v35 = v96;
LABEL_97:
  if (v35 != -1)
    result = ((uint64_t (*)(_BYTE **, _BYTE *))off_1E32BEA50[v35])(&v90, &v93[8]);
  if (v32)
    goto LABEL_216;
LABEL_100:
  WTF::AtomStringImpl::addLiteral();
  v36 = *(WTF::StringImpl **)v93;
  v38 = (JSC::JSCell *)JSC::JSObject::get(Object, a1, *(unint64_t *)v93);
  if (v36)
  {
    if (*(_DWORD *)v36 == 2)
      WTF::StringImpl::destroy(v36, v37);
    else
      *(_DWORD *)v36 -= 2;
  }
  if (*((_DWORD *)v5 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    if ((_DWORD)result)
      goto LABEL_320;
  }
  if (v38 != (JSC::JSCell *)10)
  {
    result = WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLDictionary<WebCore::ConstrainDoubleRange>>>::convert((uint64_t)v93, a1, v38);
    if (v96)
      goto LABEL_320;
    v112 = *(_OWORD *)&v93[40];
    v113 = v94;
    v114 = v95;
    v110 = *(_OWORD *)&v93[8];
    v111 = *(_OWORD *)&v93[24];
    if (!v115)
      v115 = 1;
  }
  WTF::AtomStringImpl::addLiteral();
  v39 = *(WTF::StringImpl **)v93;
  v41 = JSC::JSObject::get(Object, a1, *(unint64_t *)v93);
  if (v39)
  {
    if (*(_DWORD *)v39 == 2)
      WTF::StringImpl::destroy(v39, v40);
    else
      *(_DWORD *)v39 -= 2;
  }
  if (*((_DWORD *)v5 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    if ((_DWORD)result)
      goto LABEL_320;
  }
  if (v41 == 10)
  {
LABEL_131:
    WTF::AtomStringImpl::addLiteral();
    v46 = *(WTF::StringImpl **)v93;
    v48 = (JSC::JSCell *)JSC::JSObject::get(Object, a1, *(unint64_t *)v93);
    if (v46)
    {
      if (*(_DWORD *)v46 == 2)
        WTF::StringImpl::destroy(v46, v47);
      else
        *(_DWORD *)v46 -= 2;
    }
    if (*((_DWORD *)v5 + 20))
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
      if ((_DWORD)result)
        goto LABEL_320;
    }
    if (v48 != (JSC::JSCell *)10)
    {
      result = WebCore::Converter<WebCore::IDLUnion<WebCore::IDLLong,WebCore::IDLDictionary<WebCore::ConstrainLongRange>>>::convert((uint64_t)v93, a1, v48);
      if (*(_DWORD *)&v93[44])
        goto LABEL_320;
      v100 = *(_OWORD *)&v93[4];
      v101 = *(_OWORD *)&v93[20];
      v102 = *(_QWORD *)&v93[36];
      if (!v103)
        v103 = 1;
    }
    WTF::AtomStringImpl::addLiteral();
    v49 = *(WTF::StringImpl **)v93;
    v51 = JSC::JSObject::get(Object, a1, *(unint64_t *)v93);
    if (v49)
    {
      if (*(_DWORD *)v49 == 2)
        WTF::StringImpl::destroy(v49, v50);
      else
        *(_DWORD *)v49 -= 2;
    }
    if (*((_DWORD *)v5 + 20))
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
      if ((_DWORD)result)
        goto LABEL_320;
    }
    if (v51 != 10)
    {
      result = WebCore::Converter<WebCore::IDLUnion<WebCore::IDLBoolean,WebCore::IDLDictionary<WebCore::ConstrainBooleanParameters>>>::convert(v93, a1, v51);
      if (*(_DWORD *)&v93[16])
        goto LABEL_320;
      v149 = *(_QWORD *)&v93[4];
      v150 = *(_DWORD *)&v93[12];
      if (!v151)
        v151 = 1;
    }
    WTF::AtomStringImpl::addLiteral();
    v52 = *(WTF::StringImpl **)v93;
    v54 = JSC::JSObject::get(Object, a1, *(unint64_t *)v93);
    if (v52)
    {
      if (*(_DWORD *)v52 == 2)
        WTF::StringImpl::destroy(v52, v53);
      else
        *(_DWORD *)v52 -= 2;
    }
    if (*((_DWORD *)v5 + 20))
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
      if ((_DWORD)result)
        goto LABEL_320;
    }
    if (v54 != 10)
    {
      result = WebCore::Converter<WebCore::IDLUnion<WebCore::IDLBoolean,WebCore::IDLDictionary<WebCore::ConstrainBooleanParameters>>>::convert(v93, a1, v54);
      if (*(_DWORD *)&v93[16])
        goto LABEL_320;
      v168 = *(_QWORD *)&v93[4];
      v169 = *(_DWORD *)&v93[12];
      if (!v170)
        v170 = 1;
    }
    WTF::AtomStringImpl::addLiteral();
    v55 = *(WTF::StringImpl **)v93;
    v57 = (JSC::JSCell *)JSC::JSObject::get(Object, a1, *(unint64_t *)v93);
    if (v55)
    {
      if (*(_DWORD *)v55 == 2)
        WTF::StringImpl::destroy(v55, v56);
      else
        *(_DWORD *)v55 -= 2;
    }
    if (*((_DWORD *)v5 + 20))
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
      if ((_DWORD)result)
        goto LABEL_320;
    }
    if (v57 != (JSC::JSCell *)10)
    {
      result = WebCore::Converter<WebCore::IDLUnion<WebCore::IDLLong,WebCore::IDLDictionary<WebCore::ConstrainLongRange>>>::convert((uint64_t)v93, a1, v57);
      if (*(_DWORD *)&v93[44])
        goto LABEL_320;
      v126 = *(_OWORD *)&v93[4];
      v127 = *(_OWORD *)&v93[20];
      v128 = *(_QWORD *)&v93[36];
      if (!v129)
        v129 = 1;
    }
    WTF::AtomStringImpl::addLiteral();
    v58 = *(WTF::StringImpl **)v93;
    v60 = (JSC::JSCell *)JSC::JSObject::get(Object, a1, *(unint64_t *)v93);
    if (v58)
    {
      if (*(_DWORD *)v58 == 2)
        WTF::StringImpl::destroy(v58, v59);
      else
        *(_DWORD *)v58 -= 2;
    }
    if (*((_DWORD *)v5 + 20))
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
      if ((_DWORD)result)
        goto LABEL_320;
    }
    if (v60 != (JSC::JSCell *)10)
    {
      result = WebCore::Converter<WebCore::IDLUnion<WebCore::IDLLong,WebCore::IDLDictionary<WebCore::ConstrainLongRange>>>::convert((uint64_t)v93, a1, v60);
      if (*(_DWORD *)&v93[44])
        goto LABEL_320;
      v130 = *(_OWORD *)&v93[4];
      v131 = *(_OWORD *)&v93[20];
      v132 = *(_QWORD *)&v93[36];
      if (!v133)
        v133 = 1;
    }
    WTF::AtomStringImpl::addLiteral();
    v61 = *(WTF::StringImpl **)v93;
    v63 = JSC::JSObject::get(Object, a1, *(unint64_t *)v93);
    if (v61)
    {
      if (*(_DWORD *)v61 == 2)
        WTF::StringImpl::destroy(v61, v62);
      else
        *(_DWORD *)v61 -= 2;
    }
    if (*((_DWORD *)v84 + 20))
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v84);
      if ((_DWORD)result)
        goto LABEL_320;
    }
    if (v63 != 10)
    {
      result = WebCore::Converter<WebCore::IDLUnion<WebCore::IDLBoolean,WebCore::IDLDictionary<WebCore::ConstrainBooleanParameters>>>::convert(v93, a1, v63);
      if (*(_DWORD *)&v93[16])
        goto LABEL_320;
      v162 = *(_QWORD *)&v93[4];
      v163 = *(_DWORD *)&v93[12];
      if (!v164)
        v164 = 1;
    }
    WTF::AtomStringImpl::addLiteral();
    v64 = *(WTF::StringImpl **)v93;
    v66 = (JSC::JSCell *)JSC::JSObject::get(Object, a1, *(unint64_t *)v93);
    if (v64)
    {
      if (*(_DWORD *)v64 == 2)
        WTF::StringImpl::destroy(v64, v65);
      else
        *(_DWORD *)v64 -= 2;
    }
    if (*((_DWORD *)v84 + 20))
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v84);
      if ((_DWORD)result)
        goto LABEL_320;
    }
    if (v66 != (JSC::JSCell *)10)
    {
      result = WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLDictionary<WebCore::ConstrainDoubleRange>>>::convert((uint64_t)v93, a1, v66);
      if (v96)
        goto LABEL_320;
      v122 = *(_OWORD *)&v93[40];
      v123 = v94;
      v124 = v95;
      v120 = *(_OWORD *)&v93[8];
      v121 = *(_OWORD *)&v93[24];
      if (!v125)
        v125 = 1;
    }
    WTF::AtomStringImpl::addLiteral();
    v67 = *(WTF::StringImpl **)v93;
    v69 = JSC::JSObject::get(Object, a1, *(unint64_t *)v93);
    if (v67)
    {
      if (*(_DWORD *)v67 == 2)
        WTF::StringImpl::destroy(v67, v68);
      else
        *(_DWORD *)v67 -= 2;
    }
    if (*((_DWORD *)v84 + 20))
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v84);
      if ((_DWORD)result)
        goto LABEL_320;
    }
    if (v69 == 10)
      goto LABEL_262;
    result = WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDOMString,WebCore::IDLSequence<WebCore::IDLDOMString>,WebCore::IDLDictionary<WebCore::ConstrainDOMStringParameters>>>::convert((uint64_t)v93, a1, v69);
    v70 = v96;
    if (v96)
    {
      v89 = 1;
      v73 = v96;
LABEL_213:
      if (v73 != -1)
        result = ((uint64_t (*)(_BYTE **, _BYTE *))off_1E32BEA50[v73])(&v90, &v93[8]);
      if (v70)
        goto LABEL_216;
LABEL_262:
      WTF::AtomStringImpl::addLiteral();
      v78 = *(WTF::StringImpl **)v93;
      v80 = (JSC::JSCell *)JSC::JSObject::get(Object, a1, *(unint64_t *)v93);
      if (v78)
      {
        if (*(_DWORD *)v78 == 2)
          WTF::StringImpl::destroy(v78, v79);
        else
          *(_DWORD *)v78 -= 2;
      }
      if (*((_DWORD *)v84 + 20))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v84);
        if ((_DWORD)result)
          goto LABEL_320;
      }
      if (v80 != (JSC::JSCell *)10)
      {
        result = WebCore::Converter<WebCore::IDLUnion<WebCore::IDLLong,WebCore::IDLDictionary<WebCore::ConstrainLongRange>>>::convert((uint64_t)v93, a1, v80);
        if (*(_DWORD *)&v93[44])
          goto LABEL_320;
        v97[0] = *(_OWORD *)&v93[4];
        v97[1] = *(_OWORD *)&v93[20];
        v98 = *(_QWORD *)&v93[36];
        if (!v99)
          v99 = 1;
      }
      WTF::AtomStringImpl::addLiteral();
      v81 = *(WTF::StringImpl **)v93;
      v83 = (JSC::JSCell *)JSC::JSObject::get(Object, a1, *(unint64_t *)v93);
      if (v81)
      {
        if (*(_DWORD *)v81 == 2)
          WTF::StringImpl::destroy(v81, v82);
        else
          *(_DWORD *)v81 -= 2;
      }
      if (*((_DWORD *)v84 + 20))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v84);
        if ((_DWORD)result)
          goto LABEL_320;
      }
      if (v83 == (JSC::JSCell *)10)
      {
LABEL_6:
        result = WebCore::MediaTrackConstraintSet::MediaTrackConstraintSet((uint64_t)v87, (uint64_t)v97);
        v89 = 0;
        goto LABEL_216;
      }
      result = WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLDictionary<WebCore::ConstrainDoubleRange>>>::convert((uint64_t)v93, a1, v83);
      if (!v96)
      {
        v158 = *(_OWORD *)&v93[40];
        v159 = v94;
        v160 = v95;
        v156 = *(_OWORD *)&v93[8];
        v157 = *(_OWORD *)&v93[24];
        if (!v161)
          v161 = 1;
        goto LABEL_6;
      }
LABEL_320:
      v89 = 1;
      goto LABEL_216;
    }
    v91[0] = 0;
    v92 = -1;
    v71 = DWORD2(v95);
    if (DWORD2(v95) == -1)
    {
      if (v155)
      {
        if (v154 == -1)
        {
LABEL_212:
          v73 = v96;
          goto LABEL_213;
        }
        result = ((uint64_t (*)(_BYTE **, _BYTE *))off_1E32BE9D8[v154])(&v85, v153);
        v154 = -1;
LABEL_210:
        if (v92 != -1)
          result = ((uint64_t (*)(_BYTE **, _BYTE *))off_1E32BE9D8[v92])(&v85, v91);
        goto LABEL_212;
      }
      v153[0] = 0;
      v154 = -1;
    }
    else
    {
      v72 = off_1E32BE9F0[DWORD2(v95)];
      ((void (*)(_BYTE **, _BYTE *, _BYTE *))v72)(&v85, v91, &v93[16]);
      v92 = v71;
      if (v155)
      {
        v85 = v153;
        result = ((uint64_t (*)(_BYTE **))off_1E32BEA28[v71])(&v85);
        goto LABEL_210;
      }
      v153[0] = 0;
      v154 = -1;
      result = ((uint64_t (*)(_BYTE **, _BYTE *, _BYTE *))v72)(&v85, v153, v91);
      v154 = v71;
    }
    v155 = 1;
    goto LABEL_210;
  }
  result = WebCore::Converter<WebCore::IDLUnion<WebCore::IDLDOMString,WebCore::IDLSequence<WebCore::IDLDOMString>,WebCore::IDLDictionary<WebCore::ConstrainDOMStringParameters>>>::convert((uint64_t)v93, a1, v41);
  v42 = v96;
  if (!v96)
  {
    v91[0] = 0;
    v92 = -1;
    v43 = DWORD2(v95);
    if (DWORD2(v95) == -1)
    {
      if (v144)
      {
        if (v143 == -1)
        {
LABEL_127:
          v45 = v96;
          goto LABEL_128;
        }
        result = ((uint64_t (*)(_BYTE **, _BYTE *))off_1E32BE9D8[v143])(&v85, v142);
        v143 = -1;
LABEL_125:
        if (v92 != -1)
          result = ((uint64_t (*)(_BYTE **, _BYTE *))off_1E32BE9D8[v92])(&v85, v91);
        goto LABEL_127;
      }
      v142[0] = 0;
      v143 = -1;
    }
    else
    {
      v44 = off_1E32BE9F0[DWORD2(v95)];
      ((void (*)(_BYTE **, _BYTE *, _BYTE *))v44)(&v85, v91, &v93[16]);
      v92 = v43;
      if (v144)
      {
        v85 = v142;
        result = ((uint64_t (*)(_BYTE **))off_1E32BEA28[v43])(&v85);
        goto LABEL_125;
      }
      v142[0] = 0;
      v143 = -1;
      result = ((uint64_t (*)(_BYTE **, _BYTE *, _BYTE *))v44)(&v85, v142, v91);
      v143 = v43;
    }
    v144 = 1;
    goto LABEL_125;
  }
  v89 = 1;
  v45 = v96;
LABEL_128:
  if (v45 != -1)
    result = ((uint64_t (*)(_BYTE **, _BYTE *))off_1E32BEA50[v45])(&v90, &v93[8]);
  if (!v42)
    goto LABEL_131;
LABEL_216:
  if (v155)
  {
    if (v154 != -1)
      result = ((uint64_t (*)(_BYTE *, _BYTE *))off_1E32BE9D8[v154])(v93, v153);
    v154 = -1;
  }
  if (v148)
  {
    if (v147 != -1)
      result = ((uint64_t (*)(_BYTE *, _BYTE *))off_1E32BE9D8[v147])(v93, v146);
    v147 = -1;
  }
  if (v144)
  {
    if (v143 != -1)
      result = ((uint64_t (*)(_BYTE *, _BYTE *))off_1E32BE9D8[v143])(v93, v142);
    v143 = -1;
  }
  if (v140)
  {
    if (v139 != -1)
      result = ((uint64_t (*)(_BYTE *, _BYTE *))off_1E32BE9D8[v139])(v93, v138);
    v139 = -1;
  }
  if (v119 && v118 != -1)
    result = ((uint64_t (*)(_BYTE *, _BYTE *))off_1E32BE9D8[v118])(v93, v117);
  v74 = v89;
  if (!v89)
  {
    WebCore::MediaTrackConstraintSet::MediaTrackConstraintSet((uint64_t)v97, (uint64_t)v87);
    v75 = *(unsigned int *)(a3 + 12);
    if ((_DWORD)v75 == *(_DWORD *)(a3 + 8))
    {
      v76 = WTF::Vector<WebCore::MediaTrackConstraintSet,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(a3, v75 + 1, (unint64_t)v97);
      v77 = *(_QWORD *)a3 + 1048 * *(unsigned int *)(a3 + 12);
    }
    else
    {
      v77 = *(_QWORD *)a3 + 1048 * v75;
      v76 = (char *)v97;
    }
    result = WebCore::MediaTrackConstraintSet::MediaTrackConstraintSet(v77, (uint64_t)v76);
    ++*(_DWORD *)(a3 + 12);
    if (v155)
    {
      if (v154 != -1)
        result = ((uint64_t (*)(_BYTE *, _BYTE *))off_1E32BE9D8[v154])(v93, v153);
      v154 = -1;
    }
    if (v148)
    {
      if (v147 != -1)
        result = ((uint64_t (*)(_BYTE *, _BYTE *))off_1E32BE9D8[v147])(v93, v146);
      v147 = -1;
    }
    if (v144)
    {
      if (v143 != -1)
        result = ((uint64_t (*)(_BYTE *, _BYTE *))off_1E32BE9D8[v143])(v93, v142);
      v143 = -1;
    }
    if (v140)
    {
      if (v139 != -1)
        result = ((uint64_t (*)(_BYTE *, _BYTE *))off_1E32BE9D8[v139])(v93, v138);
      v139 = -1;
    }
    if (v119)
    {
      if (v118 != -1)
        result = ((uint64_t (*)(_BYTE *, _BYTE *))off_1E32BE9D8[v118])(v93, v117);
    }
    v74 = v89;
  }
  if (v74 != -1)
    return ((uint64_t (*)(_OWORD *, _BYTE *))off_1E32C3128[v74])(v97, v87);
  return result;
}

char *WTF::Vector<WebCore::MediaTrackConstraintSet,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3;
  WTF *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  void *v12;
  WTF *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  void *v20;

  v3 = a3;
  v5 = *(WTF **)a1;
  if (*(_QWORD *)a1 > a3 || (v6 = (unint64_t)v5 + 1048 * *(unsigned int *)(a1 + 12), v6 <= a3))
  {
    v14 = *(unsigned int *)(a1 + 8);
    v15 = v14 + (v14 >> 2);
    if (v15 >= 0x10)
      v16 = v15 + 1;
    else
      v16 = 16;
    if (v16 <= a2)
      v16 = a2;
    if (v16 > v14)
    {
      if (v16 >= 0x3E88CC)
      {
        __break(0xC471u);
        JUMPOUT(0x194DAF380);
      }
      v17 = (uint64_t)v5 + 1048 * *(unsigned int *)(a1 + 12);
      v18 = 1048 * v16;
      v19 = WTF::fastMalloc((WTF *)(1048 * v16));
      *(_DWORD *)(a1 + 8) = (v18 & 0xFFFFFFF8) / 0x418;
      *(_QWORD *)a1 = v19;
      WTF::VectorMover<false,WebCore::MediaTrackConstraintSet>::move((uint64_t)v5, v17, v19);
      if (v5)
      {
        if (*(WTF **)a1 == v5)
        {
          *(_QWORD *)a1 = 0;
          *(_DWORD *)(a1 + 8) = 0;
        }
        WTF::fastFree(v5, v20);
      }
    }
  }
  else
  {
    v7 = *(unsigned int *)(a1 + 8);
    v8 = v7 + (v7 >> 2);
    if (v8 >= 0x10)
      v9 = v8 + 1;
    else
      v9 = 16;
    if (v9 <= a2)
      v9 = a2;
    if (v9 <= v7)
    {
      v13 = *(WTF **)a1;
    }
    else
    {
      if (v9 >= 0x3E88CC)
      {
        __break(0xC471u);
        JUMPOUT(0x194DAF388);
      }
      v10 = 1048 * v9;
      v11 = WTF::fastMalloc((WTF *)(1048 * v9));
      *(_DWORD *)(a1 + 8) = (v10 & 0xFFFFFFF8) / 0x418;
      *(_QWORD *)a1 = v11;
      WTF::VectorMover<false,WebCore::MediaTrackConstraintSet>::move((uint64_t)v5, v6, v11);
      v13 = *(WTF **)a1;
      if (v5)
      {
        if (v13 == v5)
        {
          *(_QWORD *)a1 = 0;
          *(_DWORD *)(a1 + 8) = 0;
        }
        WTF::fastFree(v5, v12);
        v13 = *(WTF **)a1;
      }
    }
    return (char *)v13 + 8 * ((uint64_t)(v3 - (_QWORD)v5) >> 3);
  }
  return (char *)v3;
}

uint64_t WTF::VectorMover<false,WebCore::MediaTrackConstraintSet>::move(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;

  if (result != a2)
  {
    v24 = v3;
    v25 = v4;
    v7 = result;
    v8 = 0;
    do
    {
      v9 = v7 + v8;
      result = WebCore::MediaTrackConstraintSet::MediaTrackConstraintSet(a3 + v8, v7 + v8);
      if (*(_BYTE *)(v7 + v8 + 904))
      {
        v10 = *(unsigned int *)(v9 + 896);
        if ((_DWORD)v10 != -1)
          result = ((uint64_t (*)(char *, uint64_t))off_1E32BE9D8[v10])(&v19, v7 + v8 + 832);
        *(_DWORD *)(v9 + 896) = -1;
      }
      if (*(_BYTE *)(v9 + 800))
      {
        v11 = v7 + v8;
        v12 = *(unsigned int *)(v7 + v8 + 792);
        if ((_DWORD)v12 != -1)
          result = ((uint64_t (*)(char *, uint64_t))off_1E32BE9D8[v12])(&v20, v11 + 728);
        *(_DWORD *)(v11 + 792) = -1;
      }
      v13 = v7 + v8;
      if (*(_BYTE *)(v7 + v8 + 712))
      {
        v14 = *(unsigned int *)(v13 + 704);
        if ((_DWORD)v14 != -1)
          result = ((uint64_t (*)(char *, uint64_t))off_1E32BE9D8[v14])(&v21, v7 + v8 + 640);
        *(_DWORD *)(v13 + 704) = -1;
      }
      if (*(_BYTE *)(v13 + 624))
      {
        v15 = v7 + v8;
        v16 = *(unsigned int *)(v7 + v8 + 616);
        if ((_DWORD)v16 != -1)
          result = ((uint64_t (*)(char *, uint64_t))off_1E32BE9D8[v16])(&v22, v15 + 552);
        *(_DWORD *)(v15 + 616) = -1;
      }
      v17 = v7 + v8;
      if (*(_BYTE *)(v7 + v8 + 344))
      {
        v18 = *(unsigned int *)(v17 + 336);
        if ((_DWORD)v18 != -1)
          result = ((uint64_t (*)(char *, uint64_t))off_1E32BE9D8[v18])(&v23, v7 + v8 + 272);
        *(_DWORD *)(v17 + 336) = -1;
      }
      v8 += 1048;
    }
    while (v7 + v8 != a2);
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore23MediaTrackConstraintSetENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;

  if (*(_BYTE *)(a2 + 904))
  {
    v3 = *(unsigned int *)(a2 + 896);
    if ((_DWORD)v3 != -1)
      result = ((uint64_t (*)(char *, uint64_t))off_1E32BE9D8[v3])(&v9, a2 + 832);
    *(_DWORD *)(a2 + 896) = -1;
  }
  if (*(_BYTE *)(a2 + 800))
  {
    v5 = *(unsigned int *)(a2 + 792);
    if ((_DWORD)v5 != -1)
      result = ((uint64_t (*)(char *, uint64_t))off_1E32BE9D8[v5])(&v10, a2 + 728);
    *(_DWORD *)(a2 + 792) = -1;
  }
  if (*(_BYTE *)(a2 + 712))
  {
    v6 = *(unsigned int *)(a2 + 704);
    if ((_DWORD)v6 != -1)
      result = ((uint64_t (*)(char *, uint64_t))off_1E32BE9D8[v6])(&v11, a2 + 640);
    *(_DWORD *)(a2 + 704) = -1;
  }
  if (*(_BYTE *)(a2 + 624))
  {
    v7 = *(unsigned int *)(a2 + 616);
    if ((_DWORD)v7 != -1)
      result = ((uint64_t (*)(char *, uint64_t))off_1E32BE9D8[v7])(&v12, a2 + 552);
    *(_DWORD *)(a2 + 616) = -1;
  }
  if (*(_BYTE *)(a2 + 344))
  {
    v8 = *(unsigned int *)(a2 + 336);
    if ((_DWORD)v8 != -1)
      result = ((uint64_t (*)(char *, uint64_t))off_1E32BE9D8[v8])(&v13, a2 + 272);
    *(_DWORD *)(a2 + 336) = -1;
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6StringENS8_6VectorIS9_Lm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEEN7WebCore28ConstrainDOMStringParametersEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISG_LNS0_6_TraitE1EEEEEvRSH_OT_EUlRSP_OT0_E_JRNS0_6__baseILSK_1EJS9_SD_SF_EEERKSX_EEEDcSP_DpT0_(uint64_t a1, _QWORD *a2, _DWORD **a3)
{
  _DWORD *v3;

  v3 = *a3;
  if (*a3)
    *v3 += 2;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6StringENS8_6VectorIS9_Lm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEEN7WebCore28ConstrainDOMStringParametersEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISG_LNS0_6_TraitE1EEEEEvRSH_OT_EUlRSP_OT0_E_JRNS0_6__baseILSK_1EJS9_SD_SF_EEERKSX_EEEDcSP_DpT0_(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  _DWORD **v8;
  uint64_t v9;
  _DWORD *v10;

  v3 = *(unsigned int *)(a3 + 12);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_DWORD *)(a2 + 12) = v3;
  if ((_DWORD)v3)
  {
    if (v3 >> 29)
    {
      __break(0xC471u);
    }
    else
    {
      v6 = (_QWORD *)WTF::fastMalloc((WTF *)(8 * v3));
      *(_DWORD *)(a2 + 8) = v3;
      *(_QWORD *)a2 = v6;
      v7 = *(unsigned int *)(a3 + 12);
      if ((_DWORD)v7)
      {
        v8 = *(_DWORD ***)a3;
        v9 = 8 * v7;
        do
        {
          v10 = *v8;
          if (*v8)
            *v10 += 2;
          *v6++ = v10;
          ++v8;
          v9 -= 8;
        }
        while (v9);
      }
    }
  }
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6StringENS8_6VectorIS9_Lm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEEN7WebCore28ConstrainDOMStringParametersEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISG_LNS0_6_TraitE1EEEEEvRSH_OT_EUlRSP_OT0_E_JRNS0_6__baseILSK_1EJS9_SD_SF_EEERKSX_EEEDcSP_DpT0_(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  char v9;

  *(_BYTE *)a2 = 0;
  *(_BYTE *)(a2 + 24) = 0;
  if (*(_BYTE *)(a3 + 24))
  {
    *(_DWORD *)(a2 + 16) = -1;
    v5 = *(unsigned int *)(a3 + 16);
    if ((_DWORD)v5 != -1)
    {
      result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_1E32C3150[v5])(&v8, a2, a3);
      *(_DWORD *)(a2 + 16) = v5;
    }
    *(_BYTE *)(a2 + 24) = 1;
  }
  *(_BYTE *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 56) = 0;
  if (*(_BYTE *)(a3 + 56))
  {
    *(_DWORD *)(a2 + 48) = -1;
    v7 = *(unsigned int *)(a3 + 48);
    if ((_DWORD)v7 != -1)
    {
      result = ((uint64_t (*)(char *))off_1E32C3150[v7])(&v9);
      *(_DWORD *)(a2 + 48) = v7;
    }
    *(_BYTE *)(a2 + 56) = 1;
  }
  return result;
}

void _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLDOMStringENS_11IDLSequenceIS4_EENS_13IDLDictionaryINS_28ConstrainDOMStringParametersEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6StringENSJ_6VectorISK_Lm0ENSJ_15CrashOnOverflowELm16ENSJ_10FastMallocEEES8_EEEEUlTyvE_JNSH_17integral_constantIlLl0EEENST_IlLl1EEENST_IlLl2EEEEEET_SX_(uint64_t a1, uint64_t **a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  size_t v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  uint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  uint64_t *v30;
  __int128 v31;
  unsigned __int8 *v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t v35;
  _BYTE v36[16];
  int v37;
  _BYTE v38[40];
  uint64_t v39;
  char v40;
  uint64_t v41;
  WTF::StringImpl *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t *v45;
  _BYTE *v46;

  v4 = **a2;
  if (v4)
    goto LABEL_12;
  v5 = a2[4];
  if (*((_DWORD *)v5 + 18))
    goto LABEL_59;
  v6 = a2[2][7];
  v7 = v5[1];
  if (v7 && (v8 = *(_DWORD *)(v7 + 4)) != 0)
  {
    if (v8 != 1)
    {
LABEL_6:
      v9 = *(_QWORD *)(v6 + 64760);
      if (!v9 || v7 != *(_QWORD *)(v9 + 8))
        v9 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_9;
    }
    v32 = *(unsigned __int8 **)(v7 + 8);
    if ((*(_BYTE *)(v7 + 16) & 4) != 0)
    {
      v33 = *v32;
    }
    else
    {
      v34 = *(unsigned __int16 *)v32;
      if (v34 > 0xFF)
        goto LABEL_6;
      v33 = v34;
    }
    v9 = *(_QWORD *)(v6 + 8 * v33 + 42216);
  }
  else
  {
    v9 = *(_QWORD *)(v6 + 41968);
  }
LABEL_9:
  v10 = a2[1];
  if (!*((_BYTE *)v10 + 8))
    *((_BYTE *)v10 + 8) = 1;
  *v10 = v9;
  v4 = **a2;
LABEL_12:
  if (v4 != 1)
    goto LABEL_17;
  v11 = a2[4];
  if (*((_DWORD *)v11 + 18) != 1)
  {
LABEL_59:
    std::__throw_bad_variant_access[abi:sn180100]();
    goto LABEL_60;
  }
  v12 = WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLDOMString>>::convert<WTF::String,0ul>((uint64_t)a2[2], (uint64_t)a2[3], (uint64_t)(v11 + 1));
  v13 = a2[1];
  if (!*((_BYTE *)v13 + 8))
    *((_BYTE *)v13 + 8) = 1;
  *v13 = v12;
  v4 = **a2;
LABEL_17:
  if (v4 != 2)
  {
LABEL_46:
    v31 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v31;
    *(_QWORD *)(a1 + 32) = a2[4];
    return;
  }
  v14 = a2[4];
  if (*((_DWORD *)v14 + 18) != 2)
    goto LABEL_59;
  v15 = (uint64_t)a2[2];
  v16 = a2[3];
  v17 = *(_QWORD *)(v15 + 56);
  v18 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v19 = 8 * *(unsigned __int8 *)(v18 + 14);
  v20 = JSC::allocateCell<JSC::JSFinalObject>(v17, v19 + 16);
  v21 = *(_DWORD *)(v18 + 8);
  *(_DWORD *)v20 = v18 >> 4;
  *(_DWORD *)(v20 + 4) = v21;
  *(_QWORD *)(v20 + 8) = 0;
  bzero((void *)(v20 + 16), v19);
  if (*(_BYTE *)(v17 + 755))
    __dmb(0xAu);
  if (*((_BYTE *)v14 + 32))
  {
    v36[0] = 0;
    v37 = -1;
    v22 = *((unsigned int *)v14 + 6);
    if ((_DWORD)v22 == -1)
    {
      v22 = -1;
    }
    else
    {
      ((void (*)(WTF::StringImpl **, _BYTE *, uint64_t *))off_1E32C3150[v22])(&v42, v36, v14 + 1);
      v37 = v22;
    }
    LOBYTE(v39) = 0;
    v40 = 0;
    v41 = v22;
    v42 = (WTF::StringImpl *)&v41;
    v43 = &v39;
    v44 = v15;
    v45 = v16;
    v46 = v36;
    _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLDOMStringENS_11IDLSequenceIS4_EEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6StringENSG_6VectorISH_Lm0ENSG_15CrashOnOverflowELm16ENSG_10FastMallocEEEEEEEUlTyvE_JNSE_17integral_constantIlLl0EEENSQ_IlLl1EEEEEET_ST_((uint64_t)&v42, (uint64_t)v38);
    if (!v40)
      goto LABEL_60;
    v23 = v39;
    if (v37 != -1)
      ((void (*)(WTF::StringImpl **, _BYTE *))off_1E32BEA08[v37])(&v42, v36);
    if (*(_DWORD *)(v17 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v17) & 1) != 0)
    {
LABEL_58:
      v20 = 0;
      goto LABEL_43;
    }
    WTF::AtomStringImpl::addLiteral();
    v24 = v42;
    v42 = 0;
    v43 = (uint64_t *)v20;
    v44 = 0x1000000FFFFFFFFLL;
    v45 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v20, (JSC::VM *)v17, (unint64_t)v24, v23, 0, (uint64_t)&v42);
    if (v24)
    {
      if (*(_DWORD *)v24 == 2)
        WTF::StringImpl::destroy(v24, v25);
      else
        *(_DWORD *)v24 -= 2;
    }
  }
  if (!*((_BYTE *)v14 + 64))
  {
LABEL_43:
    v30 = a2[1];
    if (!*((_BYTE *)v30 + 8))
      *((_BYTE *)v30 + 8) = 1;
    *v30 = v20;
    goto LABEL_46;
  }
  v36[0] = 0;
  v37 = -1;
  v26 = *((unsigned int *)v14 + 14);
  if ((_DWORD)v26 == -1)
  {
    v26 = -1;
  }
  else
  {
    ((void (*)(WTF::StringImpl **, _BYTE *, uint64_t *))off_1E32C3150[v26])(&v42, v36, v14 + 5);
    v37 = v26;
  }
  LOBYTE(v39) = 0;
  v40 = 0;
  v41 = v26;
  v42 = (WTF::StringImpl *)&v41;
  v43 = &v39;
  v44 = v15;
  v45 = v16;
  v46 = v36;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLDOMStringENS_11IDLSequenceIS4_EEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6StringENSG_6VectorISH_Lm0ENSG_15CrashOnOverflowELm16ENSG_10FastMallocEEEEEEEUlTyvE_JNSE_17integral_constantIlLl0EEENSQ_IlLl1EEEEEET_ST_((uint64_t)&v42, (uint64_t)v38);
  if (v40)
  {
    v27 = v39;
    if (v37 != -1)
      ((void (*)(WTF::StringImpl **, _BYTE *))off_1E32BEA08[v37])(&v42, v36);
    if (!*(_DWORD *)(v17 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v17) & 1) == 0)
    {
      WTF::AtomStringImpl::addLiteral();
      v28 = v42;
      v42 = 0;
      v43 = (uint64_t *)v20;
      v44 = 0x1000000FFFFFFFFLL;
      v45 = 0;
      JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v20, (JSC::VM *)v17, (unint64_t)v28, v27, 0, (uint64_t)&v42);
      if (v28)
      {
        if (*(_DWORD *)v28 == 2)
          WTF::StringImpl::destroy(v28, v29);
        else
          *(_DWORD *)v28 -= 2;
      }
      goto LABEL_43;
    }
    goto LABEL_58;
  }
LABEL_60:
  v35 = std::__throw_bad_optional_access[abi:sn180100]();
  WebCore::MediaTrackConstraintSet::MediaTrackConstraintSet(v35);
}

uint64_t WebCore::JSMessageChannel::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSMessageChannel::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t result;
  WTF *v5;
  void *v6;

  v3 = *a2;
  *a2 = 0;
  result = *(_QWORD *)(a1 + 3744);
  *(_QWORD *)(a1 + 3744) = v3;
  if (result)
  {
    v5 = (WTF *)MEMORY[0x19AEA3528]();
    return WTF::fastFree(v5, v6);
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11MessagePortENSC_ISH_EENSE_ISH_EEEENS9_INSA_13ServiceWorkerENSC_ISL_EENSE_ISL_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISP_LNS0_6_TraitE1EEEEEvRSQ_OT_EUlRSY_OT0_E_JRNS0_6__baseILST_1EJSG_SK_SO_EEERKS16_EEEDcSY_DpT0_(uint64_t a1, _QWORD *a2, _DWORD **a3)
{
  _DWORD *v3;

  v3 = *a3;
  if (*a3)
    ++*v3;
  *a2 = v3;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11MessagePortENSC_ISH_EENSE_ISH_EEEENS9_INSA_13ServiceWorkerENSC_ISL_EENSE_ISL_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISP_LNS0_6_TraitE1EEEEEvRSQ_OT_EUlRSY_OT0_E_JRNS0_6__baseILST_1EJSG_SK_SO_EEERKS16_EEEDcSY_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int v8;

  v4 = *a3;
  if (!*a3)
    goto LABEL_11;
  v5 = *(_QWORD *)(v4 + 48);
  if (__ldaxr((unsigned __int8 *)v5))
  {
    __clrex();
LABEL_5:
    result = MEMORY[0x19AEA534C](v5);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v5))
    goto LABEL_5;
LABEL_6:
  ++*(_QWORD *)(v5 + 8);
  v8 = __ldxr((unsigned __int8 *)v5);
  if (v8 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v5))
      goto LABEL_11;
  }
  else
  {
    __clrex();
  }
  result = WTF::Lock::unlockSlow((WTF::Lock *)v5);
LABEL_11:
  *a2 = v4;
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11MessagePortENSC_ISH_EENSE_ISH_EEEENS9_INSA_13ServiceWorkerENSC_ISL_EENSE_ISL_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISP_LNS0_6_TraitE1EEEEEvRSQ_OT_EUlRSY_OT0_E_JRNS0_6__baseILST_1EJSG_SK_SO_EEERKS16_EEEDcSY_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  if (*a3)
    ++*(_DWORD *)(v3 + 24);
  *a2 = v3;
}

uint64_t WebCore::JSMessagePort::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSMouseEvent>(WebCore::JSUIEvent *a1, JSC::VM *a2)
{
  uint64_t result;
  WebCore::JSDOMGlobalObject *v5;
  JSC::JSCell *v6;
  unint64_t Structure;
  JSC::Structure *v8;
  JSC::JSCell *v9;
  uint64_t v10;

  result = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSMouseEvent::s_info);
  if (!result)
  {
    v6 = (JSC::JSCell *)WebCore::JSUIEvent::prototype(a1, a2, v5);
    Structure = WebCore::JSMouseEventPrototype::createStructure((uint64_t *)a1, (uint64_t)a2, v6);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v9 = (JSC::JSCell *)WebCore::JSMouseEventPrototype::create(a1, a2, Structure, v8);
    v10 = WebCore::JSMouseEvent::createStructure((uint64_t *)a1, (uint64_t)a2, v9);
    return WebCore::cacheDOMStructure((JSCell *)a2, v10, (uint64_t)&WebCore::JSMouseEvent::s_info);
  }
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSMutationObserver>(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v6;
  JSC::Structure *v7;
  JSC::JSCell *v8;
  uint64_t v9;

  result = WebCore::getCachedDOMStructure(a2, (uint64_t)&WebCore::JSMutationObserver::s_info);
  if (!result)
  {
    Structure = WebCore::JSMutationObserverPrototype::createStructure(a1, a2, *(JSC::JSCell **)(a2 + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v8 = (JSC::JSCell *)WebCore::JSMutationObserverPrototype::create((WebCore::JSMutationObserverPrototype *)a1, Structure, v6, v7);
    v9 = WebCore::JSMutationObserver::createStructure(a1, a2, v8);
    return WebCore::cacheDOMStructure((JSCell *)a2, v9, (uint64_t)&WebCore::JSMutationObserver::s_info);
  }
  return result;
}

uint64_t WebCore::JSMutationObserver::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSConverter<WebCore::IDLInterface<WebCore::NodeList>>::convert<WebCore::NodeList*>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _DWORD *v15;
  unint64_t Wrapper;
  uint64_t v17[3];

  if (!a2)
    return 2;
  v17[1] = v2;
  v17[2] = v3;
  v5 = *(_QWORD *)(a1 + 3320);
  if (!*(_DWORD *)(v5 + 48))
  {
    v6 = *(_BYTE **)(a2 + 8);
    if (!v6)
      goto LABEL_14;
    goto LABEL_5;
  }
  v7 = *(_QWORD *)(v5 + 32);
  if (v7)
  {
    v8 = *(_DWORD *)(v7 - 8);
    v9 = (~(a2 << 32) + a2) ^ ((unint64_t)(~(a2 << 32) + a2) >> 22);
    v10 = 9 * ((v9 + ~(v9 << 13)) ^ ((v9 + ~(v9 << 13)) >> 8));
    v11 = (v10 ^ (v10 >> 15)) + ~((v10 ^ (v10 >> 15)) << 27);
    v12 = v8 & ((v11 >> 31) ^ v11);
    v13 = *(_QWORD *)(v7 + 16 * v12);
    if (v13 != a2)
    {
      v14 = 1;
      while (v13)
      {
        v12 = ((_DWORD)v12 + v14) & v8;
        v13 = *(_QWORD *)(v7 + 16 * v12);
        ++v14;
        if (v13 == a2)
          goto LABEL_13;
      }
      goto LABEL_14;
    }
LABEL_13:
    v6 = *(_BYTE **)(v7 + 16 * v12 + 8);
    if (v6)
    {
LABEL_5:
      if ((v6[8] & 3) == 0 && *(_QWORD *)v6)
        return *(_QWORD *)v6;
    }
  }
LABEL_14:
  ++*(_DWORD *)(a2 + 16);
  v17[0] = a2;
  Wrapper = WebCore::createWrapper(a1, v17);
  v15 = (_DWORD *)v17[0];
  v17[0] = 0;
  if (v15)
  {
    if (v15[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v15 + 8))(v15);
    else
      --v15[4];
  }
  return Wrapper;
}

uint64_t WebCore::getCachedWrapper<WebCore::NodeList>(uint64_t result, int a2, uint64_t a3)
{
  _BYTE *v3;
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;

  if (!a2)
  {
    v3 = *(_BYTE **)(a3 + 8);
    if (!v3)
      return 0;
    goto LABEL_3;
  }
  if (result)
  {
    v4 = *(_DWORD *)(result - 8);
    v5 = (~(a3 << 32) + a3) ^ ((unint64_t)(~(a3 << 32) + a3) >> 22);
    v6 = 9 * ((v5 + ~(v5 << 13)) ^ ((v5 + ~(v5 << 13)) >> 8));
    v7 = (v6 ^ (v6 >> 15)) + ~((v6 ^ (v6 >> 15)) << 27);
    v8 = v4 & ((v7 >> 31) ^ v7);
    v9 = *(_QWORD *)(result + 16 * v8);
    if (v9 != a3)
    {
      v10 = 1;
      while (v9)
      {
        v8 = ((_DWORD)v8 + v10) & v4;
        v9 = *(_QWORD *)(result + 16 * v8);
        ++v10;
        if (v9 == a3)
          goto LABEL_11;
      }
      return 0;
    }
LABEL_11:
    v3 = *(_BYTE **)(result + 16 * v8 + 8);
    if (!v3)
      return 0;
LABEL_3:
    if ((v3[8] & 3) == 0)
      return *(_QWORD *)v3;
    return 0;
  }
  return result;
}

uint64_t WebCore::JSMutationRecord::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t result;
  WTF *v5;
  void *v6;

  v3 = *a2;
  *a2 = 0;
  result = *(_QWORD *)(a1 + 3792);
  *(_QWORD *)(a1 + 3792) = v3;
  if (result)
  {
    v5 = (WTF *)MEMORY[0x19AEA3528]();
    return WTF::fastFree(v5, v6);
  }
  return result;
}

uint64_t WebCore::JSMutationRecord::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSMutationRecord *v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;

  v5 = (WebCore::JSMutationRecord *)*((_QWORD *)a2 + 7);
  v6 = JSC::allocateCell<WebCore::JSMutationRecord>(v5, a2);
  result = WebCore::JSDOMObject::JSDOMObject(v6, a1);
  v8 = *a3;
  *a3 = 0;
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSNamedNodeMap>(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v6;
  JSC::Structure *v7;
  JSC::JSCell *v8;
  uint64_t v9;

  result = WebCore::getCachedDOMStructure(a2, (uint64_t)&WebCore::JSNamedNodeMap::s_info);
  if (!result)
  {
    Structure = WebCore::JSNamedNodeMapPrototype::createStructure(a1, a2, *(JSC::JSCell **)(a2 + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v8 = (JSC::JSCell *)WebCore::JSNamedNodeMapPrototype::create((WebCore::JSNamedNodeMapPrototype *)a1, Structure, v6, v7);
    v9 = WebCore::JSNamedNodeMap::createStructure(a1, a2, v8);
    return WebCore::cacheDOMStructure((JSCell *)a2, v9, (uint64_t)&WebCore::JSNamedNodeMap::s_info);
  }
  return result;
}

uint64_t WebCore::JSNamedNodeMap::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSNamedNodeMap>::create(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;

  v5 = JSC::allocateCell<WebCore::JSDOMConstructor<WebCore::JSBlob>>(a1);
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  WebCore::JSDOMConstructorNotConstructable<WebCore::JSNamedNodeMap>::initializeProperties(v5, a1, a3);
  return v5;
}

uint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSNamedNodeMap>::createStructure(uint64_t *a1, int a2, JSC::JSCell *a3)
{
  uint64_t result;

  result = JSC::Structure::create(a1, a2, a3);
  *(_DWORD *)(result + 16) |= 0x80000u;
  return result;
}

bmalloc::api *WTF::RefCounted<WebCore::NavigationTransition>::deref(bmalloc::api *this, void *a2)
{
  bmalloc::api *v2;
  _DWORD *v3;
  uint64_t v4;
  uint64_t v5;
  WebCore::HistoryItem *v6;
  void *v7;
  bmalloc::api *v8;
  void *v9;
  WTF *v10;
  void *v11;

  v2 = this;
  if (*(_DWORD *)this == 1)
  {
    v3 = (_DWORD *)*((_QWORD *)this + 4);
    *((_QWORD *)v2 + 4) = 0;
    if (v3)
    {
      if (v3[4] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v3 + 16))(v3);
      else
        --v3[4];
    }
    v4 = *((_QWORD *)v2 + 3);
    *((_QWORD *)v2 + 3) = 0;
    if (v4)
    {
      if (*(_DWORD *)(v4 + 24) == 1)
      {
        v6 = *(WebCore::HistoryItem **)(v4 + 64);
        *(_QWORD *)(v4 + 64) = 0;
        if (v6)
        {
          if (*(_DWORD *)v6 == 1)
          {
            WebCore::HistoryItem::~HistoryItem(v6);
            WTF::fastFree(v10, v11);
          }
          else
          {
            --*(_DWORD *)v6;
          }
        }
        WebCore::ContextDestructionObserver::~ContextDestructionObserver((WebCore::ContextDestructionObserver *)(v4 + 32), a2);
        WebCore::EventTarget::~EventTarget((WebCore::EventTarget *)v4, v7);
        bmalloc::api::isoDeallocate(v8, v9);
      }
      else
      {
        --*(_DWORD *)(v4 + 24);
      }
    }
    v5 = *((_QWORD *)v2 + 1);
    if (v5)
    {
      *(_QWORD *)(v5 + 8) = 3;
      *((_QWORD *)v2 + 1) = 0;
    }
    return (bmalloc::api *)bmalloc::api::isoDeallocate(v2, a2);
  }
  else
  {
    --*(_DWORD *)this;
  }
  return this;
}

void WebCore::NavigationActivation::~NavigationActivation(WebCore::NavigationActivation *this, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  WebCore::HistoryItem *v6;
  void *v7;
  bmalloc::api *v8;
  void *v9;
  WebCore::HistoryItem *v10;
  void *v11;
  bmalloc::api *v12;
  void *v13;
  WTF *v14;
  void *v15;
  WTF *v16;
  void *v17;

  v3 = *((_QWORD *)this + 4);
  *((_QWORD *)this + 4) = 0;
  if (v3)
  {
    if (*(_DWORD *)(v3 + 24) == 1)
    {
      v6 = *(WebCore::HistoryItem **)(v3 + 64);
      *(_QWORD *)(v3 + 64) = 0;
      if (v6)
      {
        if (*(_DWORD *)v6 == 1)
        {
          WebCore::HistoryItem::~HistoryItem(v6);
          WTF::fastFree(v14, v15);
        }
        else
        {
          --*(_DWORD *)v6;
        }
      }
      WebCore::ContextDestructionObserver::~ContextDestructionObserver((WebCore::ContextDestructionObserver *)(v3 + 32), a2);
      WebCore::EventTarget::~EventTarget((WebCore::EventTarget *)v3, v7);
      bmalloc::api::isoDeallocate(v8, v9);
    }
    else
    {
      --*(_DWORD *)(v3 + 24);
    }
  }
  v4 = *((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (v4)
  {
    if (*(_DWORD *)(v4 + 24) == 1)
    {
      v10 = *(WebCore::HistoryItem **)(v4 + 64);
      *(_QWORD *)(v4 + 64) = 0;
      if (v10)
      {
        if (*(_DWORD *)v10 == 1)
        {
          WebCore::HistoryItem::~HistoryItem(v10);
          WTF::fastFree(v16, v17);
        }
        else
        {
          --*(_DWORD *)v10;
        }
      }
      WebCore::ContextDestructionObserver::~ContextDestructionObserver((WebCore::ContextDestructionObserver *)(v4 + 32), a2);
      WebCore::EventTarget::~EventTarget((WebCore::EventTarget *)v4, v11);
      bmalloc::api::isoDeallocate(v12, v13);
    }
    else
    {
      --*(_DWORD *)(v4 + 24);
    }
  }
  v5 = *((_QWORD *)this + 1);
  if (v5)
  {
    *(_QWORD *)(v5 + 8) = 3;
    *((_QWORD *)this + 1) = 0;
  }
}

uint64_t WebCore::JSNavigation::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSNavigationActivation::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSNavigationDestination::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSNavigationHistoryEntry::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSNavigationPreloadManager::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSNavigationTransition::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::jsNavigator_vendorGetter(WebCore *this, JSC::JSGlobalObject *a2, WebCore::JSNavigator *a3)
{
  WTF::StringImpl *v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v8;
  uint64_t v9;

  v9 = *((_QWORD *)this + 7);
  WebCore::NavigatorBase::vendor((uint64_t *)&v8, this);
  v5 = WebCore::toJS<WebCore::IDLUSVString,WTF::String>((uint64_t)this, (uint64_t)&v9, (uint64_t *)&v8);
  v6 = v8;
  v8 = 0;
  if (v6)
  {
    if (*(_DWORD *)v6 == 2)
      WTF::StringImpl::destroy(v6, v4);
    else
      *(_DWORD *)v6 -= 2;
  }
  return v5;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJPN7WebCore22ServiceWorkerContainerENS8_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSNodeIterator::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSNodeIterator::create(unint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  WTF *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  WTF *v20;
  void *v21;
  int v22;
  unint64_t SlowCase;
  uint64_t result;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  WTF *v29;

  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(_QWORD *)(v5 + 41456);
  v7 = *(_QWORD *)(v6 + 23536);
  v8 = *(_QWORD **)(v7 + 3816);
  if (!v8)
  {
    v9 = *(_QWORD *)(v6 + 22648);
    if (__ldaxr((unsigned __int8 *)v9))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v9))
    {
      goto LABEL_6;
    }
    MEMORY[0x19AEA534C](v9);
LABEL_6:
    v11 = *(_QWORD *)(v9 + 2824);
    v27 = *(_QWORD *)(v11 + 3816);
    if (!v27)
    {
      v12 = WTF::fastMalloc((WTF *)0xF8);
      WTF::CString::CString((WTF::CString *)&v29, "IsoSpace T");
      v28 = 0;
      MEMORY[0x19AEA3204](v12, &v29, v5 + 192, v5 + 1872, 32, 8, &v28);
      v14 = v28;
      v28 = 0;
      if (v14)
        (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
      v15 = v29;
      v29 = 0;
      if (v15)
      {
        if (*(_DWORD *)v15 == 1)
          WTF::fastFree(v15, v13);
        else
          --*(_DWORD *)v15;
      }
      v27 = v12;
      v16 = *(_QWORD *)(v11 + 3816);
      *(_QWORD *)(v11 + 3816) = v12;
      if (v16)
        (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
      v17 = *(unsigned int *)(v9 + 2844);
      if ((_DWORD)v17 == *(_DWORD *)(v9 + 2840))
      {
        v18 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v9 + 2832, v17 + 1, (unint64_t)&v27);
        v17 = *(unsigned int *)(v9 + 2844);
        *(_QWORD *)(*(_QWORD *)(v9 + 2832) + 8 * v17) = *v18;
      }
      else
      {
        *(_QWORD *)(*(_QWORD *)(v9 + 2832) + 8 * v17) = v12;
      }
      *(_DWORD *)(v9 + 2844) = v17 + 1;
    }
    v8 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
    JSC::GCClient::IsoSubspace::IsoSubspace();
    v19 = *(_QWORD *)(v7 + 3816);
    *(_QWORD *)(v7 + 3816) = v8;
    if (v19)
    {
      v20 = (WTF *)MEMORY[0x19AEA3528]();
      WTF::fastFree(v20, v21);
    }
    v22 = __ldxr((unsigned __int8 *)v9);
    if (v22 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v9))
        goto LABEL_24;
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v9);
  }
LABEL_24:
  SlowCase = v8[3];
  if (SlowCase < v8[4])
  {
LABEL_25:
    v8[3] = SlowCase + 32;
    goto LABEL_26;
  }
  SlowCase = v8[5];
  if ((SlowCase & 1) == 0)
  {
    v26 = *(_QWORD *)(SlowCase + 8) ^ v8[6];
    v8[4] = SlowCase + HIDWORD(v26);
    v8[5] = SlowCase + (int)v26;
    goto LABEL_25;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_26:
  *(_DWORD *)SlowCase = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  v25 = *a3;
  *a3 = 0;
  *(_QWORD *)(result + 24) = v25;
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  return result;
}

_QWORD *WebCore::cacheWrapper<WebCore::NodeIterator,WebCore::JSNodeIterator>(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *result;
  uint64_t v4;
  uint64_t *v5;
  _QWORD *Allocator;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  _QWORD *v17;
  uint64_t *v18;

  if ((byte_1EE336208 & 1) == 0)
  {
    qword_1EE336200 = (uint64_t)&off_1E32BE748;
    byte_1EE336208 = 1;
  }
  if (!*(_DWORD *)(a1 + 48))
  {
    if (a3)
    {
      v11 = a2;
      if ((a3 & 8) != 0)
        v7 = (a3 - 112) | 1;
      else
        v7 = a3 & 0xFFFFFFFFFFFFC000;
      if ((v7 & 1) != 0)
        v8 = v7 + 47;
      else
        v8 = *(_QWORD *)v7 + 32;
      result = *(_QWORD **)(v8 + 16);
      if (!result)
        result = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v8 + 16) = *result;
      a2 = v11;
      *result = a3;
      result[1] = &qword_1EE336200;
      result[2] = a1;
    }
    else
    {
      result = 0;
    }
    v4 = *a2;
    *a2 = (uint64_t)result;
    if (!v4)
      return result;
LABEL_11:
    *(_QWORD *)(v4 + 8) = 3;
    return result;
  }
  v5 = (uint64_t *)(a1 + 32);
  v18 = a2;
  if (a3)
  {
    v12 = (uint64_t *)(a1 + 32);
    if ((a3 & 8) != 0)
      v9 = (a3 - 112) | 1;
    else
      v9 = a3 & 0xFFFFFFFFFFFFC000;
    if ((v9 & 1) != 0)
      v10 = v9 + 47;
    else
      v10 = *(_QWORD *)v9 + 32;
    Allocator = *(_QWORD **)(v10 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v10 + 16) = *Allocator;
    *Allocator = a3;
    Allocator[1] = &qword_1EE336200;
    Allocator[2] = a1;
    v5 = v12;
  }
  else
  {
    Allocator = 0;
  }
  v17 = Allocator;
  result = JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>(v5, (uint64_t *)&v18, (uint64_t *)&v17);
  v4 = (uint64_t)v17;
  if (v17)
    goto LABEL_11;
  return result;
}

uint64_t WebCore::JSNodeList::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSNodeList>::create(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  unint64_t SlowCase;
  unint64_t v8;

  v5 = *(_QWORD **)(a1 + 41456);
  SlowCase = v5[2846];
  if (SlowCase < v5[2847])
    goto LABEL_2;
  SlowCase = v5[2848];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v5[2849];
    v5[2847] = SlowCase + HIDWORD(v8);
    v5[2848] = SlowCase + (int)v8;
LABEL_2:
    v5[2846] = SlowCase + 48;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  WebCore::JSDOMConstructorNotConstructable<WebCore::JSNodeList>::initializeProperties(SlowCase, a1, a3);
  return SlowCase;
}

uint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSNodeList>::createStructure(uint64_t *a1, int a2, JSC::JSCell *this)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)this & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(this);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(result + 16) |= 0x80000u;
  return result;
}

uint64_t WebCore::JSNotification::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSOfflineAudioContext::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSOfflineAudioContext *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  unint64_t v11;

  v5 = (WebCore::JSOfflineAudioContext *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSOfflineAudioContext::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v11 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v11);
    v6[5] = SlowCase + (int)v11;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  v9 = v8 + 32;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v9;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

_QWORD *WebCore::cacheWrapper<WebCore::OfflineAudioContext,WebCore::JSOfflineAudioContext>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *result;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *Allocator;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  _QWORD *v18;
  uint64_t v19;

  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::OfflineAudioContext *)::owner = (uint64_t)&off_1E32C3B10;
  }
  v3 = (_QWORD *)(a2 + 40);
  if (!a2)
    v3 = 0;
  if (*(_DWORD *)(a1 + 48))
  {
    v6 = (uint64_t *)(a1 + 32);
    v19 = a2;
    if (a3)
    {
      v13 = (uint64_t *)(a1 + 32);
      if ((a3 & 8) != 0)
        v10 = (a3 - 112) | 1;
      else
        v10 = a3 & 0xFFFFFFFFFFFFC000;
      if ((v10 & 1) != 0)
        v11 = v10 + 47;
      else
        v11 = *(_QWORD *)v10 + 32;
      Allocator = *(_QWORD **)(v11 + 16);
      if (!Allocator)
        Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v11 + 16) = *Allocator;
      *Allocator = a3;
      Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::OfflineAudioContext *)::owner;
      Allocator[2] = a1;
      v6 = v13;
    }
    else
    {
      Allocator = 0;
    }
    v18 = Allocator;
    result = JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>(v6, &v19, (uint64_t *)&v18);
    if (v18)
      v18[1] = 3;
  }
  else
  {
    if (a3)
    {
      v12 = v3;
      if ((a3 & 8) != 0)
        v8 = (a3 - 112) | 1;
      else
        v8 = a3 & 0xFFFFFFFFFFFFC000;
      if ((v8 & 1) != 0)
        v9 = v8 + 47;
      else
        v9 = *(_QWORD *)v8 + 32;
      result = *(_QWORD **)(v9 + 16);
      if (!result)
        result = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v9 + 16) = *result;
      *result = a3;
      result[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::OfflineAudioContext *)::owner;
      result[2] = a1;
      v3 = v12;
    }
    else
    {
      result = 0;
    }
    v5 = *v3;
    *v3 = result;
    if (v5)
      *(_QWORD *)(v5 + 8) = 3;
  }
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSOffscreenCanvas>(WebCore::JSOffscreenCanvas *a1, JSC::VM *a2)
{
  uint64_t result;
  WebCore::JSDOMGlobalObject *v5;
  JSC::JSCell *Prototype;
  uint64_t v7;

  result = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSOffscreenCanvas::s_info);
  if (!result)
  {
    Prototype = (JSC::JSCell *)WebCore::JSOffscreenCanvas::createPrototype(a1, a2, v5);
    v7 = JSC::Structure::create((uint64_t *)a1, (int)a2, Prototype);
    return WebCore::cacheDOMStructure((JSCell *)a2, v7, (uint64_t)&WebCore::JSOffscreenCanvas::s_info);
  }
  return result;
}

unint64_t WebCore::JSDOMConstructor<WebCore::JSOffscreenCanvas>::create(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  unint64_t v5;

  v5 = JSC::allocateCell<WebCore::JSDOMConstructor<WebCore::JSBlob>>(a1);
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  WebCore::JSDOMConstructor<WebCore::JSOffscreenCanvas>::initializeProperties(v5, a1, a3);
  return v5;
}

uint64_t WebCore::JSDOMConstructor<WebCore::JSOffscreenCanvas>::createStructure(uint64_t *a1, int a2, JSC::JSCell *a3)
{
  uint64_t result;

  result = JSC::Structure::create(a1, a2, a3);
  *(_DWORD *)(result + 16) |= 0x80000u;
  return result;
}

unint64_t WebCore::JSOffscreenCanvas::create(unint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  WTF *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  WTF *v20;
  void *v21;
  int v22;
  unint64_t SlowCase;
  uint64_t v24;
  uint64_t v25;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  WTF *v30;

  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(_QWORD *)(v5 + 41456);
  v7 = *(_QWORD *)(v6 + 23536);
  v8 = *(_QWORD **)(v7 + 4816);
  if (!v8)
  {
    v9 = *(_QWORD *)(v6 + 22648);
    if (__ldaxr((unsigned __int8 *)v9))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v9))
    {
      goto LABEL_6;
    }
    MEMORY[0x19AEA534C](v9);
LABEL_6:
    v11 = *(_QWORD *)(v9 + 2824);
    v28 = *(_QWORD *)(v11 + 4816);
    if (!v28)
    {
      v12 = WTF::fastMalloc((WTF *)0xF8);
      WTF::CString::CString((WTF::CString *)&v30, "IsoSpace T");
      v29 = 0;
      MEMORY[0x19AEA3204](v12, &v30, v5 + 192, v5 + 1872, 32, 8, &v29);
      v14 = v29;
      v29 = 0;
      if (v14)
        (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
      v15 = v30;
      v30 = 0;
      if (v15)
      {
        if (*(_DWORD *)v15 == 1)
          WTF::fastFree(v15, v13);
        else
          --*(_DWORD *)v15;
      }
      v28 = v12;
      v16 = *(_QWORD *)(v11 + 4816);
      *(_QWORD *)(v11 + 4816) = v12;
      if (v16)
        (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
      v17 = *(unsigned int *)(v9 + 2844);
      if ((_DWORD)v17 == *(_DWORD *)(v9 + 2840))
      {
        v18 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v9 + 2832, v17 + 1, (unint64_t)&v28);
        v17 = *(unsigned int *)(v9 + 2844);
        *(_QWORD *)(*(_QWORD *)(v9 + 2832) + 8 * v17) = *v18;
      }
      else
      {
        *(_QWORD *)(*(_QWORD *)(v9 + 2832) + 8 * v17) = v12;
      }
      *(_DWORD *)(v9 + 2844) = v17 + 1;
    }
    v8 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
    JSC::GCClient::IsoSubspace::IsoSubspace();
    v19 = *(_QWORD *)(v7 + 4816);
    *(_QWORD *)(v7 + 4816) = v8;
    if (v19)
    {
      v20 = (WTF *)MEMORY[0x19AEA3528]();
      WTF::fastFree(v20, v21);
    }
    v22 = __ldxr((unsigned __int8 *)v9);
    if (v22 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v9))
        goto LABEL_24;
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v9);
  }
LABEL_24:
  SlowCase = v8[3];
  if (SlowCase < v8[4])
  {
LABEL_25:
    v8[3] = SlowCase + 32;
    goto LABEL_26;
  }
  SlowCase = v8[5];
  if ((SlowCase & 1) == 0)
  {
    v27 = *(_QWORD *)(SlowCase + 8) ^ v8[6];
    v8[4] = SlowCase + HIDWORD(v27);
    v8[5] = SlowCase + (int)v27;
    goto LABEL_25;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_26:
  *(_DWORD *)SlowCase = 0;
  v24 = *a3;
  *a3 = 0;
  v25 = v24 + 144;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(SlowCase + 24) = v25;
  if (*(_BYTE *)(v5 + 755))
  {
    __dmb(0xAu);
    v25 = *(_QWORD *)(SlowCase + 24);
  }
  if (*(_QWORD *)(v25 - 88) >= 0x101uLL)
    JSC::Heap::reportExtraMemoryAllocatedSlowCase();
  return SlowCase;
}

_QWORD *WebCore::cacheWrapper<WebCore::OffscreenCanvas,WebCore::JSOffscreenCanvas>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *result;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *Allocator;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  _QWORD *v18;
  uint64_t v19;

  if ((byte_1EE3362D8 & 1) == 0)
  {
    qword_1EE3362D0 = (uint64_t)&off_1E32BE9B8;
    byte_1EE3362D8 = 1;
  }
  v3 = (_QWORD *)(a2 + 152);
  if (!a2)
    v3 = 0;
  if (*(_DWORD *)(a1 + 48))
  {
    v6 = (uint64_t *)(a1 + 32);
    v19 = a2;
    if (a3)
    {
      v13 = (uint64_t *)(a1 + 32);
      if ((a3 & 8) != 0)
        v10 = (a3 - 112) | 1;
      else
        v10 = a3 & 0xFFFFFFFFFFFFC000;
      if ((v10 & 1) != 0)
        v11 = v10 + 47;
      else
        v11 = *(_QWORD *)v10 + 32;
      Allocator = *(_QWORD **)(v11 + 16);
      if (!Allocator)
        Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v11 + 16) = *Allocator;
      *Allocator = a3;
      Allocator[1] = &qword_1EE3362D0;
      Allocator[2] = a1;
      v6 = v13;
    }
    else
    {
      Allocator = 0;
    }
    v18 = Allocator;
    result = JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>(v6, &v19, (uint64_t *)&v18);
    if (v18)
      v18[1] = 3;
  }
  else
  {
    if (a3)
    {
      v12 = v3;
      if ((a3 & 8) != 0)
        v8 = (a3 - 112) | 1;
      else
        v8 = a3 & 0xFFFFFFFFFFFFC000;
      if ((v8 & 1) != 0)
        v9 = v8 + 47;
      else
        v9 = *(_QWORD *)v8 + 32;
      result = *(_QWORD **)(v9 + 16);
      if (!result)
        result = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v9 + 16) = *result;
      *result = a3;
      result[1] = &qword_1EE3362D0;
      result[2] = a1;
      v3 = v12;
    }
    else
    {
      result = 0;
    }
    v5 = *v3;
    *v3 = result;
    if (v5)
      *(_QWORD *)(v5 + 8) = 3;
  }
  return result;
}

uint64_t WebCore::JSOffscreenCanvasRenderingContext2D::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::convert<WebCore::IDLUnion<WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CanvasGradient>,WebCore::IDLInterface<WebCore::CanvasPattern>>>@<X0>(JSC::VM **a1@<X0>, unint64_t this@<X1>, uint64_t a3@<X8>)
{
  JSC::JSGlobalObject *v4;
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  _BOOL4 v10;
  JSC::VM *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  int v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  WTF::StringImpl *v20;
  int hasExceptionsAfterHandlingTraps;
  _DWORD *v22;
  int v23;
  int v24;
  _DWORD *v25;
  _DWORD *v27;
  int v28;
  unsigned __int8 v29;
  unint64_t v30;
  int v31;
  WTF::StringImpl *v32;

  v4 = (JSC::JSGlobalObject *)a1;
  LOBYTE(v27) = 0;
  v29 = 0;
  if ((this & 0xFFFE000000000002) != 0)
  {
    v30 = this;
    v12 = a1[7];
    goto LABEL_33;
  }
  v6 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCanvasGradient::s_info;
  else
    v9 = 1;
  v10 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  if (!v9)
  {
    v18 = 16 * v6;
    do
    {
      v18 = *(_QWORD *)(v18 + 16);
      v10 = v18 != 0;
    }
    while ((char **)v18 != &WebCore::JSCanvasGradient::s_info && v18 != 0);
  }
  if (!v10 || (v22 = *(_DWORD **)(this + 24)) == 0)
  {
    if ((_DWORD)v6 && v8 != &WebCore::JSCanvasPattern::s_info)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSCanvasPattern::s_info && v8 != 0);
    }
    if (v7)
    {
      v25 = *(_DWORD **)(this + 24);
      if (v25)
      {
        ++*v25;
        v30 = (unint64_t)v25;
        v31 = 2;
        result = std::optional<std::variant<WTF::String,WTF::RefPtr<WebCore::CanvasGradient,WTF::RawPtrTraits<WebCore::CanvasGradient>,WTF::DefaultRefDerefTraits<WebCore::CanvasGradient>>,WTF::RefPtr<WebCore::CanvasPattern,WTF::RawPtrTraits<WebCore::CanvasPattern>,WTF::DefaultRefDerefTraits<WebCore::CanvasPattern>>>>::operator=[abi:sn180100]<std::variant<WTF::String,WTF::RefPtr<WebCore::CanvasGradient,WTF::RawPtrTraits<WebCore::CanvasGradient>,WTF::DefaultRefDerefTraits<WebCore::CanvasGradient>>,WTF::RefPtr<WebCore::CanvasPattern,WTF::RawPtrTraits<WebCore::CanvasPattern>,WTF::DefaultRefDerefTraits<WebCore::CanvasPattern>>>,void>((uint64_t)&v27, (uint64_t)&v30);
        if (v31 != -1)
          result = ((uint64_t (*)(WTF::StringImpl **, unint64_t *))off_1E32C3188[v31])(&v32, &v30);
        v4 = (JSC::JSGlobalObject *)a1;
        if (v29)
        {
          v23 = v28;
          *(_BYTE *)(a3 + 8) = 0;
          *(_DWORD *)(a3 + 16) = -1;
          if (v23 == -1)
          {
            *(_DWORD *)(a3 + 24) = 0;
LABEL_44:
            v28 = -1;
            return result;
          }
          goto LABEL_41;
        }
      }
    }
    v30 = this;
    v12 = (JSC::VM *)*((_QWORD *)v4 + 7);
    if (*(_BYTE *)(this + 5) == 2)
    {
      v13 = *(WTF::StringImpl **)(this + 8);
      if ((v13 & 1) != 0)
        v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v4);
      if (v13)
        *(_DWORD *)v13 += 2;
      v32 = v13;
LABEL_22:
      if (*((_DWORD *)v12 + 20))
      {
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v12);
        v14 = v32;
        if (hasExceptionsAfterHandlingTraps)
        {
          v28 = 1;
          v32 = 0;
          if (v14)
          {
            if (*(_DWORD *)v14 == 2)
              WTF::StringImpl::destroy(v14, v20);
            else
              *(_DWORD *)v14 -= 2;
          }
          v15 = 1;
          v16 = 1;
          goto LABEL_25;
        }
      }
      else
      {
        v14 = v32;
      }
      v15 = 0;
      v16 = 0;
      v28 = 0;
      v27 = 0;
      *(_QWORD *)(a3 + 8) = v14;
      *(_DWORD *)(a3 + 16) = 0;
LABEL_25:
      *(_DWORD *)(a3 + 24) = v15;
      return ((uint64_t (*)(unint64_t *, _DWORD **))off_1E32BEA70[v16])(&v30, &v27);
    }
LABEL_33:
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v30, v4);
    goto LABEL_22;
  }
  ++*v22;
  v27 = v22;
  v23 = 1;
  v28 = 1;
  v29 = 1;
  *(_BYTE *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 16) = -1;
LABEL_41:
  result = ((uint64_t (*)(unint64_t *))off_1E32C31A0[v23])(&v30);
  *(_DWORD *)(a3 + 16) = v23;
  v24 = v29;
  *(_DWORD *)(a3 + 24) = 0;
  if (v24)
  {
    if (v28 != -1)
      result = ((uint64_t (*)(unint64_t *, _DWORD **))off_1E32C3188[v28])(&v30, &v27);
    goto LABEL_44;
  }
  return result;
}

uint64_t WebCore::JSOscillatorNode::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSOscillatorNode::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSOscillatorNode *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSOscillatorNode *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSOscillatorNode::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

_QWORD *WebCore::cacheWrapper<WebCore::OscillatorNode,WebCore::JSOscillatorNode>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *result;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *Allocator;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  _QWORD *v18;
  uint64_t v19;

  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::OscillatorNode *)::owner = (uint64_t)&off_1E32C39E0;
  }
  v3 = (_QWORD *)(a2 + 8);
  if (!a2)
    v3 = 0;
  if (*(_DWORD *)(a1 + 48))
  {
    v6 = (uint64_t *)(a1 + 32);
    v19 = a2;
    if (a3)
    {
      v13 = (uint64_t *)(a1 + 32);
      if ((a3 & 8) != 0)
        v10 = (a3 - 112) | 1;
      else
        v10 = a3 & 0xFFFFFFFFFFFFC000;
      if ((v10 & 1) != 0)
        v11 = v10 + 47;
      else
        v11 = *(_QWORD *)v10 + 32;
      Allocator = *(_QWORD **)(v11 + 16);
      if (!Allocator)
        Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v11 + 16) = *Allocator;
      *Allocator = a3;
      Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::OscillatorNode *)::owner;
      Allocator[2] = a1;
      v6 = v13;
    }
    else
    {
      Allocator = 0;
    }
    v18 = Allocator;
    result = JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>(v6, &v19, (uint64_t *)&v18);
    if (v18)
      v18[1] = 3;
  }
  else
  {
    if (a3)
    {
      v12 = v3;
      if ((a3 & 8) != 0)
        v8 = (a3 - 112) | 1;
      else
        v8 = a3 & 0xFFFFFFFFFFFFC000;
      if ((v8 & 1) != 0)
        v9 = v8 + 47;
      else
        v9 = *(_QWORD *)v8 + 32;
      result = *(_QWORD **)(v9 + 16);
      if (!result)
        result = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v9 + 16) = *result;
      *result = a3;
      result[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::OscillatorNode *)::owner;
      result[2] = a1;
      v3 = v12;
    }
    else
    {
      result = 0;
    }
    v5 = *v3;
    *v3 = result;
    if (v5)
      *(_QWORD *)(v5 + 8) = 3;
  }
  return result;
}

uint64_t WebCore::convertEnumerationToJS<WebCore::OverSampleType>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)(a1 + 41968);
  {
    WebCore::convertEnumerationToString(WebCore::OverSampleType)::$_0::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::OverSampleType)::$_1::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::OverSampleType)::values[0] = (uint64_t)&WebCore::convertEnumerationToString(WebCore::OverSampleType)::$_0::operator() const(void)::impl;
    unk_1EE2F4910 = &WebCore::convertEnumerationToString(WebCore::OverSampleType)::$_1::operator() const(void)::impl;
    WebCore::convertEnumerationToString(WebCore::OverSampleType)::$_2::operator() const(void)::impl += 2;
    qword_1EE2F4918 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::OverSampleType)::$_2::operator() const(void)::impl;
  }
  v3 = WebCore::convertEnumerationToString(WebCore::OverSampleType)::values[(int)a2];
  if (!v3)
    return *v2;
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  *(_DWORD *)v3 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_6:
      v6 = *(_QWORD *)(a1 + 64760);
      if (!v6 || v3 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v3 - 2;
      }
      goto LABEL_9;
    }
    v8 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_6;
      v9 = v10;
    }
    v6 = *(_QWORD *)(a1 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *v2;
  }
LABEL_9:
  if (v4)
    *(_DWORD *)v3 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v3, a2);
  return v6;
}

uint64_t WebCore::parseEnumeration<WebCore::OverSampleType>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  int v5;
  const char *v6;
  int v7;
  BOOL v8;
  int v9;
  int v10;
  BOOL v11;
  int v12;
  char **v13;
  uint64_t v14;
  uint64_t v18;
  unint64_t v19;

  v3 = a1;
  v19 = this;
  if ((this & 0xFFFE000000000002) != 0 || *(_BYTE *)(this + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v19, a1);
    v4 = v18;
    if (v18)
      goto LABEL_7;
    return 0;
  }
  v4 = *(_QWORD *)(this + 8);
  if ((v4 & 1) == 0)
  {
    if (!v4)
      goto LABEL_6;
    goto LABEL_5;
  }
  v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
  if (v4)
LABEL_5:
    *(_DWORD *)v4 += 2;
LABEL_6:
  if (!v4)
    return 0;
LABEL_7:
  v5 = *(_DWORD *)(v4 + 16);
  v6 = *(const char **)(v4 + 8);
  v7 = *(_DWORD *)(v4 + 4);
  v8 = v7 != 2;
  if (v6 != "2x" && v7 == 2)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 50)
      {
LABEL_13:
        v10 = 2;
        goto LABEL_18;
      }
      v9 = *((unsigned __int8 *)v6 + 1);
    }
    else
    {
      if (*(_WORD *)v6 != 50)
        goto LABEL_13;
      v9 = *((unsigned __int16 *)v6 + 1);
    }
    if (v9 != 120)
      goto LABEL_13;
LABEL_33:
    v13 = &WebCore::parseEnumerationFromString<WebCore::OverSampleType>(WTF::String const&)::mappings;
    goto LABEL_37;
  }
  v11 = v6 == "2x" && v7 == 2;
  v10 = *(_DWORD *)(v4 + 4);
  if (v11)
    goto LABEL_33;
LABEL_18:
  if (v6 == "4x")
    v8 = 1;
  if (v8)
  {
    if (v6 == "4x" && v7 == 2)
      goto LABEL_36;
  }
  else
  {
    if (!v10)
      goto LABEL_36;
    if ((v5 & 4) == 0)
    {
      if (*(_WORD *)v6 != 52)
        goto LABEL_26;
      v12 = *((unsigned __int16 *)v6 + 1);
LABEL_25:
      if (v12 != 120)
        goto LABEL_26;
LABEL_36:
      v13 = &off_1E32C4178;
      goto LABEL_37;
    }
    if (*v6 == 52)
    {
      v12 = *((unsigned __int8 *)v6 + 1);
      goto LABEL_25;
    }
  }
LABEL_26:
  if (v6 == "none" || v10 != 4)
  {
    if (v10 == 4 && v6 == "none")
      goto LABEL_32;
  }
  else if ((v5 & 4) != 0)
  {
    if (*v6 == 110 && *(_WORD *)(v6 + 1) == 28271 && *((_WORD *)v6 + 1) == 25966)
    {
LABEL_32:
      v13 = &off_1E32C4190;
LABEL_37:
      v14 = *((unsigned int *)v13 + 4) | 0x100000000;
      goto LABEL_38;
    }
  }
  else if (*(_WORD *)v6 == 110 && *((_DWORD *)v6 + 1) == 6619246 && *(_DWORD *)(v6 + 2) == 7209071)
  {
    goto LABEL_32;
  }
  v14 = 0;
LABEL_38:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v14;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSOverconstrainedError>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  JSC::VM *v4;
  uint64_t v5;
  WTF::StringImpl **v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  JSC::VM *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  int v16;
  WTF::StringImpl *v17;
  JSCell *v18;
  JSC::JSCell *v19;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v21;
  JSC::JSGlobalObject *v22;
  JSC::VM *v23;
  JSC::Structure *v24;
  uint64_t FunctionRealm;
  uint64_t v26;
  unsigned int v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char **v32;
  int v33;
  JSC::JSObject *v34;
  uint64_t v35;
  JSC::JSCell *v36;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v38;
  JSC::Structure *v39;
  JSC::JSCell *v40;
  uint64_t v41;
  unint64_t SubclassStructure;
  WTF::StringImpl *v43;
  int v44;
  int v45;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v51;
  uint64_t (*v52)(_QWORD *);
  _QWORD *v53;
  WTF::StringImpl *v54;
  int v55;
  WTF::StringImpl *v56;
  int v57;
  WTF::StringImpl *v58;
  _QWORD v59[3];

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = (WTF::StringImpl **)MEMORY[0x1E0CBF738];
  if (*(_DWORD *)(a2 + 32) == 1 || (v7 = *(_QWORD *)(a2 + 48), v7 == 10))
  {
    v8 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v8 += 2;
    v56 = v8;
    v57 = 0;
    goto LABEL_15;
  }
  v59[0] = *(_QWORD *)(a2 + 48);
  if ((v7 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v7 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v59, a1);
    goto LABEL_12;
  }
  v9 = *(WTF::StringImpl **)(v7 + 8);
  if ((v9 & 1) != 0)
  {
    v9 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v7, a1);
    if (!v9)
      goto LABEL_11;
    goto LABEL_10;
  }
  if (v9)
LABEL_10:
    *(_DWORD *)v9 += 2;
LABEL_11:
  v54 = v9;
LABEL_12:
  if (*((_DWORD *)v4 + 20))
  {
    v8 = v54;
    if (JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      v57 = 1;
      v54 = 0;
      if (v8)
      {
        if (*(_DWORD *)v8 == 2)
          WTF::StringImpl::destroy(v8, v49);
        else
          *(_DWORD *)v8 -= 2;
      }
      v18 = 0;
      v45 = 1;
      goto LABEL_61;
    }
  }
  else
  {
    v8 = v54;
  }
  v56 = v8;
  v57 = 0;
LABEL_15:
  if ((unint64_t)(*(int *)(a2 + 32) - 3) >= 0xFFFFFFFFFFFFFFFELL || (v10 = *(_QWORD *)(a2 + 56), v10 == 10))
  {
    v11 = *v6;
    if (v11)
      *(_DWORD *)v11 += 2;
    v55 = 0;
    goto LABEL_29;
  }
  v59[0] = *(_QWORD *)(a2 + 56);
  v12 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((v10 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v10 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v59, a1);
    goto LABEL_26;
  }
  v13 = *(WTF::StringImpl **)(v10 + 8);
  if ((v13 & 1) != 0)
  {
    v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v10, a1);
    if (!v13)
      goto LABEL_25;
    goto LABEL_24;
  }
  if (v13)
LABEL_24:
    *(_DWORD *)v13 += 2;
LABEL_25:
  v58 = v13;
LABEL_26:
  if (*((_DWORD *)v12 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v12);
    v11 = v58;
    if (hasExceptionsAfterHandlingTraps)
    {
      v55 = 1;
      v58 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v51);
        else
          *(_DWORD *)v11 -= 2;
      }
      v18 = 0;
      v44 = 1;
      goto LABEL_59;
    }
  }
  else
  {
    v11 = v58;
  }
  v55 = 0;
LABEL_29:
  v56 = 0;
  v54 = 0;
  v14 = (WTF::StringImpl *)WTF::fastMalloc((WTF *)0x20);
  *(_DWORD *)v14 = 1;
  if (v8)
    *(_DWORD *)v8 += 2;
  *((_QWORD *)v14 + 1) = v8;
  if (v11)
  {
    v16 = *(_DWORD *)v11;
    *(_DWORD *)v11 += 2;
    *((_QWORD *)v14 + 3) = v11;
    v58 = v14;
    if (v16)
      *(_DWORD *)v11 = v16;
    else
      WTF::StringImpl::destroy(v11, v15);
  }
  else
  {
    *((_QWORD *)v14 + 3) = 0;
    v58 = v14;
  }
  if (v8)
  {
    if (*(_DWORD *)v8 == 2)
      WTF::StringImpl::destroy(v8, v15);
    else
      *(_DWORD *)v8 -= 2;
  }
  v18 = (JSCell *)WebCore::createWrapper<WebCore::OverconstrainedError,WebCore::OverconstrainedError>(*(_QWORD *)(v5 + 40), (uint64_t *)&v58);
  v19 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v19 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v19);
    if (Object)
    {
      v22 = Object;
      if (Object != *(JSC::JSGlobalObject **)(a2 + 24))
      {
        v23 = (JSC::VM *)*((_QWORD *)a1 + 7);
        FunctionRealm = JSC::getFunctionRealm(a1, Object, v21);
        if (!*((_DWORD *)v23 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v23) & 1) == 0)
        {
          v26 = *(_QWORD *)(FunctionRealm + 3296);
          if (v26)
          {
            v27 = *(_DWORD *)(v26 - 8);
            v28 = ((unint64_t)&WebCore::JSOverconstrainedError::s_info
                 + ~((_QWORD)&WebCore::JSOverconstrainedError::s_info << 32)) ^ (((unint64_t)&WebCore::JSOverconstrainedError::s_info
                                                                                + ~((_QWORD)&WebCore::JSOverconstrainedError::s_info << 32)) >> 22);
            v29 = 9 * ((v28 + ~(v28 << 13)) ^ ((v28 + ~(v28 << 13)) >> 8));
            v30 = (v29 ^ (v29 >> 15)) + ~((v29 ^ (v29 >> 15)) << 27);
            v31 = v27 & ((v30 >> 31) ^ v30);
            v32 = *(char ***)(v26 + 16 * v31);
            if (v32 == &WebCore::JSOverconstrainedError::s_info)
            {
LABEL_46:
              v34 = *(JSC::JSObject **)(v26 + 16 * v31 + 8);
              if (v34)
              {
LABEL_52:
                SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v22, v34, v24);
                if (!*((_DWORD *)v23 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v23) & 1) == 0)
                  JSC::JSObject::setStructure(v18, v23, SubclassStructure);
                goto LABEL_54;
              }
            }
            else
            {
              v33 = 1;
              while (v32)
              {
                v31 = ((_DWORD)v31 + v33) & v27;
                v32 = *(char ***)(v26 + 16 * v31);
                ++v33;
                if (v32 == &WebCore::JSOverconstrainedError::s_info)
                  goto LABEL_46;
              }
            }
          }
          v35 = *(_QWORD *)(FunctionRealm + 1504);
          if ((v35 & 1) != 0)
          {
            v52 = *(uint64_t (**)(_QWORD *))(v35 & 0xFFFFFFFFFFFFFFFCLL);
            v53 = (_QWORD *)(FunctionRealm - 16);
            if ((FunctionRealm & 8) == 0)
              v53 = (_QWORD *)(FunctionRealm & 0xFFFFFFFFFFFFC000 | 8);
            v59[0] = *v53;
            v59[1] = FunctionRealm;
            v59[2] = FunctionRealm + 1504;
            v35 = v52(v59);
          }
          if (*(_QWORD *)(v35 + 48) == 2)
            v36 = 0;
          else
            v36 = *(JSC::JSCell **)(v35 + 48);
          Structure = WebCore::JSOverconstrainedErrorPrototype::createStructure((uint64_t *)v23, FunctionRealm, v36);
          *(_DWORD *)(Structure + 16) |= 0x80000u;
          v40 = (JSC::JSCell *)WebCore::JSOverconstrainedErrorPrototype::create(v23, Structure, v38, v39);
          v41 = WebCore::JSOverconstrainedError::createStructure((uint64_t *)v23, FunctionRealm, v40);
          v34 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v41, (uint64_t)&WebCore::JSOverconstrainedError::s_info);
          goto LABEL_52;
        }
      }
    }
  }
LABEL_54:
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    v18 = 0;
  v43 = v58;
  if (v58)
  {
    if (*(_DWORD *)v58 == 1)
    {
      v47 = (WTF::StringImpl *)*((_QWORD *)v58 + 3);
      *((_QWORD *)v58 + 3) = 0;
      if (v47)
      {
        if (*(_DWORD *)v47 == 2)
          WTF::StringImpl::destroy(v47, v17);
        else
          *(_DWORD *)v47 -= 2;
      }
      v48 = (WTF::StringImpl *)*((_QWORD *)v43 + 1);
      *((_QWORD *)v43 + 1) = 0;
      if (v48)
      {
        if (*(_DWORD *)v48 == 2)
          WTF::StringImpl::destroy(v48, v17);
        else
          *(_DWORD *)v48 -= 2;
      }
      WTF::fastFree(v43, v17);
    }
    else
    {
      --*(_DWORD *)v58;
    }
  }
  v44 = v55;
  if (v55 != -1)
LABEL_59:
    ((void (*)(_QWORD *, WTF::StringImpl **))off_1E32C9390[v44])(v59, &v54);
  v45 = v57;
  if (v57 != -1)
LABEL_61:
    ((void (*)(_QWORD *, WTF::StringImpl **))off_1E32C9390[v45])(v59, &v56);
  return v18;
}

uint64_t WebCore::JSOverconstrainedError::destroy(uint64_t this, JSC::JSCell *a2)
{
  WTF *v2;
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;

  v2 = *(WTF **)(this + 24);
  *(_QWORD *)(this + 24) = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = (WTF::StringImpl *)*((_QWORD *)v2 + 3);
      *((_QWORD *)v2 + 3) = 0;
      if (v3)
      {
        if (*(_DWORD *)v3 == 2)
          WTF::StringImpl::destroy(v3, a2);
        else
          *(_DWORD *)v3 -= 2;
      }
      v4 = (WTF::StringImpl *)*((_QWORD *)v2 + 1);
      *((_QWORD *)v2 + 1) = 0;
      if (v4)
      {
        if (*(_DWORD *)v4 == 2)
          WTF::StringImpl::destroy(v4, a2);
        else
          *(_DWORD *)v4 -= 2;
      }
      return WTF::fastFree(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
  return this;
}

uint64_t WebCore::JSOverconstrainedError::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSOverconstrainedErrorPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSOverconstrainedErrorPrototype::create(WebCore::JSOverconstrainedErrorPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSOverconstrainedError::s_info, &WebCore::JSOverconstrainedErrorPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSOverconstrainedError>,(WebCore::DOMConstructorID)143>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  JSC::JSCell *v26;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v28;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  uint64_t (*v36)(WTF::StringImpl **);
  WTF::StringImpl **v37;
  WTF::StringImpl *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1144);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v38) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v38, &WebCore::JSDOMConstructor<WebCore::JSOverconstrainedError>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 >= v9[2847])
  {
    v2 = v9[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v35 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v35);
    v9[2848] = v2 + (int)v35;
  }
  v9[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v38 = 0;
  v39 = v2;
  v40 = 0x1000000FFFFFFFFLL;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v38);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v38);
  v13 = v38;
  v38 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v38 = 0;
  v39 = v2;
  v40 = 0x1000000FFFFFFFFLL;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v38);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (!v16)
    goto LABEL_21;
  v17 = *(_DWORD *)(v16 - 8);
  v18 = ((unint64_t)&WebCore::JSOverconstrainedError::s_info
       + ~((_QWORD)&WebCore::JSOverconstrainedError::s_info << 32)) ^ (((unint64_t)&WebCore::JSOverconstrainedError::s_info
                                                                      + ~((_QWORD)&WebCore::JSOverconstrainedError::s_info << 32)) >> 22);
  v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
  v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
  v21 = v17 & ((v20 >> 31) ^ v20);
  v22 = *(char ***)(v16 + 16 * v21);
  if (v22 != &WebCore::JSOverconstrainedError::s_info)
  {
    v23 = 1;
    while (v22)
    {
      v21 = ((_DWORD)v21 + v23) & v17;
      v22 = *(char ***)(v16 + 16 * v21);
      ++v23;
      if (v22 == &WebCore::JSOverconstrainedError::s_info)
        goto LABEL_20;
    }
    goto LABEL_21;
  }
LABEL_20:
  v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
  if (!v24)
  {
LABEL_21:
    v25 = *(_QWORD *)(a2 + 1504);
    if ((v25 & 1) != 0)
    {
      v36 = *(uint64_t (**)(WTF::StringImpl **))(v25 & 0xFFFFFFFFFFFFFFFCLL);
      v37 = (WTF::StringImpl **)(a2 - 16);
      if ((a2 & 8) == 0)
        v37 = (WTF::StringImpl **)(a2 & 0xFFFFFFFFFFFFC000 | 8);
      v38 = *v37;
      v39 = a2;
      v40 = a2 + 1504;
      v25 = v36(&v38);
    }
    if (*(_QWORD *)(v25 + 48) == 2)
      v26 = 0;
    else
      v26 = *(JSC::JSCell **)(v25 + 48);
    Structure = WebCore::JSOverconstrainedErrorPrototype::createStructure((uint64_t *)a1, a2, v26);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v30 = (JSC::JSCell *)WebCore::JSOverconstrainedErrorPrototype::create((WebCore::JSOverconstrainedErrorPrototype *)a1, Structure, v28, v29);
    v31 = WebCore::JSOverconstrainedError::createStructure((uint64_t *)a1, a2, v30);
    v24 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSOverconstrainedError::s_info);
  }
  v32 = *(_QWORD *)(v24 + 48);
  v38 = 0;
  v39 = v2;
  v40 = 0x1000000FFFFFFFFLL;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v32, 14, (uint64_t)&v38);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1144) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsOverconstrainedErrorConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSOverconstrainedErrorPrototype::s_info != (char **)(16
                                                                    * *(unsigned int *)(16
                                                                                      * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                      + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSOverconstrainedError>,(WebCore::DOMConstructorID)143>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsOverconstrainedError_message(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 24);
  if (!v4)
    return *v3;
  v5 = *(_DWORD *)v4;
  v6 = *(_DWORD *)(v4 + 4);
  *(_DWORD *)v4 += 2;
  if (v6)
  {
    if (v6 != 1)
    {
LABEL_4:
      v7 = *(_QWORD *)(v2 + 64760);
      if (!v7 || v4 != *(_QWORD *)(v7 + 8))
      {
        v7 = JSC::jsStringWithCacheSlowCase();
        v5 = *(_DWORD *)v4 - 2;
      }
      goto LABEL_7;
    }
    v9 = *(unsigned __int8 **)(v4 + 8);
    if ((*(_BYTE *)(v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
        goto LABEL_4;
      v10 = v11;
    }
    v7 = *(_QWORD *)(v2 + 8 * v10 + 42216);
  }
  else
  {
    v7 = *v3;
  }
LABEL_7:
  if (v5)
    *(_DWORD *)v4 = v5;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, a2);
  return v7;
}

uint64_t WebCore::jsOverconstrainedError_constraint(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v12;
  unsigned int v13;
  unsigned int v14;
  WTF::StringImpl *v15;

  v3 = *((_QWORD *)a2 + 3);
  v4 = *(WTF::StringImpl **)(v3 + 8);
  if (v4)
    goto LABEL_7;
  WebCore::convertToString(*(unsigned __int8 *)(v3 + 16), &v15);
  v4 = v15;
  v15 = 0;
  v5 = *(WTF::StringImpl **)(v3 + 8);
  *(_QWORD *)(v3 + 8) = v4;
  if (v5)
  {
    v6 = *(_DWORD *)v5 - 2;
    if (*(_DWORD *)v5 == 2)
    {
      WTF::StringImpl::destroy(v5, a2);
      v5 = v15;
      v15 = 0;
      if (!v5)
        goto LABEL_5;
      v6 = *(_DWORD *)v5 - 2;
      if (*(_DWORD *)v5 == 2)
      {
        WTF::StringImpl::destroy(v5, a2);
        goto LABEL_5;
      }
    }
    *(_DWORD *)v5 = v6;
LABEL_5:
    v4 = *(WTF::StringImpl **)(v3 + 8);
  }
  if (!v4)
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
LABEL_7:
  v7 = *(_DWORD *)v4;
  v8 = *((_DWORD *)v4 + 1);
  *(_DWORD *)v4 += 2;
  v9 = *(_QWORD *)(a1 + 56);
  if (v8)
  {
    if (v8 != 1)
    {
LABEL_9:
      v10 = *(_QWORD *)(v9 + 64760);
      if (!v10 || v4 != *(WTF::StringImpl **)(v10 + 8))
      {
        v10 = JSC::jsStringWithCacheSlowCase();
        v7 = *(_DWORD *)v4 - 2;
      }
      goto LABEL_12;
    }
    v12 = (unsigned __int8 *)*((_QWORD *)v4 + 1);
    if ((*((_BYTE *)v4 + 16) & 4) != 0)
    {
      v13 = *v12;
    }
    else
    {
      v14 = *(unsigned __int16 *)v12;
      if (v14 > 0xFF)
        goto LABEL_9;
      v13 = v14;
    }
    v10 = *(_QWORD *)(v9 + 8 * v13 + 42216);
  }
  else
  {
    v10 = *(_QWORD *)(v9 + 41968);
  }
LABEL_12:
  if (v7)
    *(_DWORD *)v4 = v7;
  else
    WTF::StringImpl::destroy(v4, a2);
  return v10;
}

uint64_t WebCore::jsOverconstrainedError_name(uint64_t a1)
{
  uint64_t v2;
  WTF::StringImpl *v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned int v7;
  unsigned int v8;
  WTF::StringImpl *v10;

  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v2 = *(_QWORD *)(a1 + 56);
  v3 = v10;
  if (!v10 || (v4 = *((_DWORD *)v10 + 1)) == 0)
  {
    v5 = *(_QWORD *)(v2 + 41968);
LABEL_7:
    if (!v3)
      return v5;
    goto LABEL_15;
  }
  if (v4 != 1)
    goto LABEL_4;
  v6 = (unsigned __int8 *)*((_QWORD *)v10 + 1);
  if ((*((_BYTE *)v10 + 16) & 4) != 0)
  {
    v7 = *v6;
LABEL_14:
    v5 = *(_QWORD *)(v2 + 8 * v7 + 42216);
    goto LABEL_15;
  }
  v8 = *(unsigned __int16 *)v6;
  if (v8 <= 0xFF)
  {
    v7 = v8;
    goto LABEL_14;
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v10 != *(WTF::StringImpl **)(v5 + 8))
  {
    v5 = JSC::jsStringWithCacheSlowCase();
    v3 = v10;
    goto LABEL_7;
  }
LABEL_15:
  if (*(_DWORD *)v3 == 2)
    WTF::StringImpl::destroy(v3, v3);
  else
    *(_DWORD *)v3 -= 2;
  return v5;
}

uint64_t WebCore::JSOverconstrainedErrorOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

void WebCore::JSOverconstrainedErrorOwner::finalize(uint64_t a1, WTF::StringImpl *a2, uint64_t a3)
{
  WTF *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WTF *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;

  v3 = *(WTF **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(WTF **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(WTF **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
  {
    v24 = (WTF::StringImpl *)*((_QWORD *)v3 + 3);
    *((_QWORD *)v3 + 3) = 0;
    if (v24)
    {
      if (*(_DWORD *)v24 == 2)
        WTF::StringImpl::destroy(v24, a2);
      else
        *(_DWORD *)v24 -= 2;
    }
    v25 = (WTF::StringImpl *)*((_QWORD *)v3 + 1);
    *((_QWORD *)v3 + 1) = 0;
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, a2);
      else
        *(_DWORD *)v25 -= 2;
    }
    WTF::fastFree(v3, a2);
  }
  else
  {
    --*(_DWORD *)v3;
  }
}

unint64_t WebCore::createWrapper<WebCore::OverconstrainedError,WebCore::OverconstrainedError>(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  uint64_t v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v18;
  JSC::Structure *v19;
  JSC::JSCell *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  uint64_t v33;
  WTF *v34;
  void *v35;
  int v36;
  unint64_t SlowCase;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *Allocator;
  unint64_t v44;
  uint64_t (*v45)(uint64_t *);
  uint64_t *v46;
  uint64_t v47[3];
  _QWORD *v48;

  v4 = *a2;
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 3296);
  if (v6)
  {
    v7 = *(_DWORD *)(v6 - 8);
    v8 = ((unint64_t)&WebCore::JSOverconstrainedError::s_info
        + ~((_QWORD)&WebCore::JSOverconstrainedError::s_info << 32)) ^ (((unint64_t)&WebCore::JSOverconstrainedError::s_info
                                                                       + ~((_QWORD)&WebCore::JSOverconstrainedError::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(char ***)(v6 + 16 * v11);
    if (v12 == &WebCore::JSOverconstrainedError::s_info)
    {
LABEL_6:
      v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
      if (v14)
        goto LABEL_12;
    }
    else
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(char ***)(v6 + 16 * v11);
        ++v13;
        if (v12 == &WebCore::JSOverconstrainedError::s_info)
          goto LABEL_6;
      }
    }
  }
  v15 = *(_QWORD *)(a1 + 1504);
  if ((v15 & 1) != 0)
  {
    v45 = *(uint64_t (**)(uint64_t *))(v15 & 0xFFFFFFFFFFFFFFFCLL);
    v46 = (uint64_t *)(a1 - 16);
    if ((a1 & 8) == 0)
      v46 = (uint64_t *)(a1 & 0xFFFFFFFFFFFFC000 | 8);
    v47[0] = *v46;
    v47[1] = a1;
    v47[2] = a1 + 1504;
    v15 = v45(v47);
  }
  if (*(_QWORD *)(v15 + 48) == 2)
    v16 = 0;
  else
    v16 = *(JSC::JSCell **)(v15 + 48);
  Structure = WebCore::JSOverconstrainedErrorPrototype::createStructure((uint64_t *)v5, a1, v16);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v20 = (JSC::JSCell *)WebCore::JSOverconstrainedErrorPrototype::create((WebCore::JSOverconstrainedErrorPrototype *)v5, Structure, v18, v19);
  v21 = WebCore::JSOverconstrainedError::createStructure((uint64_t *)v5, a1, v20);
  v14 = WebCore::cacheDOMStructure((JSCell *)a1, v21, (uint64_t)&WebCore::JSOverconstrainedError::s_info);
  v5 = *(_QWORD *)(a1 + 56);
LABEL_12:
  v22 = *(_QWORD *)(v5 + 41456);
  v23 = *(_QWORD *)(v22 + 23536);
  v24 = *(_QWORD **)(v23 + 1168);
  if (v24)
    goto LABEL_32;
  v25 = *(_QWORD *)(v22 + 22648);
  if (__ldaxr((unsigned __int8 *)v25))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v25))
  {
    goto LABEL_17;
  }
  MEMORY[0x19AEA534C](v25);
LABEL_17:
  v27 = *(_QWORD *)(v25 + 2824);
  if (!*(_QWORD *)(v27 + 1168))
  {
    v28 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)v47, "IsoSpace T");
    v48 = 0;
    MEMORY[0x19AEA3204](v28, v47, v5 + 192, v5 + 1872, 32, 8, &v48);
    v30 = (uint64_t)v48;
    v48 = 0;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    v31 = (WTF *)v47[0];
    v47[0] = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
        WTF::fastFree(v31, v29);
      else
        --*(_DWORD *)v31;
    }
    v32 = *(_QWORD *)(v27 + 1168);
    *(_QWORD *)(v27 + 1168) = v28;
    if (v32)
      (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
  }
  v24 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v33 = *(_QWORD *)(v23 + 1168);
  *(_QWORD *)(v23 + 1168) = v24;
  if (v33)
  {
    v34 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v34, v35);
  }
  v36 = __ldxr((unsigned __int8 *)v25);
  if (v36 != 1)
  {
    __clrex();
    goto LABEL_31;
  }
  if (__stlxr(0, (unsigned __int8 *)v25))
LABEL_31:
    WTF::Lock::unlockSlow((WTF::Lock *)v25);
LABEL_32:
  SlowCase = v24[3];
  if (SlowCase < v24[4])
  {
LABEL_33:
    v24[3] = SlowCase + 32;
    goto LABEL_34;
  }
  SlowCase = v24[5];
  if ((SlowCase & 1) == 0)
  {
    v44 = *(_QWORD *)(SlowCase + 8) ^ v24[6];
    v24[4] = SlowCase + HIDWORD(v44);
    v24[5] = SlowCase + (int)v44;
    goto LABEL_33;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_34:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v14);
  v38 = *a2;
  *a2 = 0;
  *(_QWORD *)(SlowCase + 24) = v38;
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v39 = *(_QWORD *)(a1 + 3320);
  if ((byte_1EE336348 & 1) == 0)
  {
    qword_1EE336340 = (uint64_t)&off_1E32C9100;
    byte_1EE336348 = 1;
  }
  v47[0] = v4;
  if ((SlowCase & 8) != 0)
    v40 = (SlowCase - 112) | 1;
  else
    v40 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v40 & 1) != 0)
    v41 = v40 + 47;
  else
    v41 = *(_QWORD *)v40 + 32;
  Allocator = *(_QWORD **)(v41 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v41 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE336340;
  Allocator[2] = v39;
  v48 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v39 + 32), v47, (uint64_t *)&v48);
  if (v48)
    v48[1] = 3;
  return SlowCase;
}

unint64_t WebCore::wrap<WebCore::OverconstrainedError>(uint64_t a1, uint64_t a2, WTF *a3)
{
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  WTF *v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  WTF::StringImpl *v13;
  WTF *v14;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF *v18;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v3)
  {
    v4 = *(_DWORD *)(v3 - 8);
    v5 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v6 = 9 * ((v5 + ~(v5 << 13)) ^ ((v5 + ~(v5 << 13)) >> 8));
    v7 = (v6 ^ (v6 >> 15)) + ~((v6 ^ (v6 >> 15)) << 27);
    v8 = v4 & ((v7 >> 31) ^ v7);
    v9 = *(WTF **)(v3 + 16 * v8);
    if (v9 == a3)
    {
LABEL_6:
      v11 = *(_QWORD *)(v3 + 16 * v8 + 8);
      if (v11)
      {
        if ((*(_BYTE *)(v11 + 8) & 3) == 0)
        {
          v12 = *(_QWORD *)v11;
          if (*(_QWORD *)v11)
            return v12;
        }
      }
    }
    else
    {
      v10 = 1;
      while (v9)
      {
        v8 = ((_DWORD)v8 + v10) & v4;
        v9 = *(WTF **)(v3 + 16 * v8);
        ++v10;
        if (v9 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*(_DWORD *)a3;
  v18 = a3;
  v12 = WebCore::createWrapper<WebCore::OverconstrainedError,WebCore::OverconstrainedError>(a2, (uint64_t *)&v18);
  v14 = v18;
  if (v18)
  {
    if (*(_DWORD *)v18 == 1)
    {
      v16 = (WTF::StringImpl *)*((_QWORD *)v18 + 3);
      *((_QWORD *)v18 + 3) = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v13);
        else
          *(_DWORD *)v16 -= 2;
      }
      v17 = (WTF::StringImpl *)*((_QWORD *)v14 + 1);
      *((_QWORD *)v14 + 1) = 0;
      if (v17)
      {
        if (*(_DWORD *)v17 == 2)
          WTF::StringImpl::destroy(v17, v13);
        else
          *(_DWORD *)v17 -= 2;
      }
      WTF::fastFree(v14, v13);
    }
    else
    {
      --*(_DWORD *)v18;
    }
  }
  return v12;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSOverconstrainedErrorEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  JSC::VM *v5;
  uint64_t v7;
  int v8;
  JSC::JSCell *v9;
  uint64_t v10;
  _BOOL4 v11;
  _BOOL4 v12;
  _BOOL4 v13;
  uint64_t Object;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSC::VM *v17;
  double v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  unint64_t v26;
  JSC::VM *v27;
  double v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  unint64_t v31;
  WTF::StringImpl *v32;
  WebCore::JSDOMGlobalObject *v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  unsigned int v38;
  int v39;
  JSC::VM *v40;
  uint64_t v41;
  unsigned int v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char **v47;
  int v48;
  unint64_t v49;
  WebCore::JSEvent *v50;
  JSC::JSCell *v51;
  unint64_t Structure;
  JSC::Structure *v53;
  JSC::JSCell *v54;
  uint64_t v55;
  JSCell *v56;
  JSC::JSCell *v57;
  JSC::JSGlobalObject *v58;
  JSC::JSObject *v59;
  JSC::JSGlobalObject *v60;
  JSC::VM *v61;
  JSC::JSObject *v62;
  JSC::Structure *v63;
  JSC::VM *FunctionRealm;
  uint64_t v65;
  unsigned int v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char **v71;
  int v72;
  JSC::JSCell *v73;
  unint64_t v74;
  JSC::Structure *v75;
  JSC::JSCell *v76;
  uint64_t v77;
  unint64_t SubclassStructure;
  _DWORD *v79;
  uint64_t v80;
  uint64_t v82;
  _BOOL4 v83;
  uint64_t v84;
  WTF::StringImpl *v86;
  WTF::StringImpl *v87;
  JSValue v88;
  BOOL v89;
  int v90;
  uint64_t v91;
  int *v92;
  int v93;
  BOOL v94;
  int v95;
  uint64_t v96;
  int *v97;
  int v98;
  BOOL v99;
  int v100;
  uint64_t v101;
  int *v102;
  int v103;
  JSC::VM *v104;
  _BYTE v105[8];
  uint64_t v106;
  int v107;
  WTF::StringImpl *v108;
  int v109;
  uint64_t v110;
  unint64_t v111;

  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v88.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v5, a1, v88);
  }
  v7 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v108);
  v8 = v109;
  if (v109)
  {
    v56 = 0;
    goto LABEL_93;
  }
  v104 = v5;
  if ((unint64_t)(*(int *)(a2 + 32) - 3) >= 0xFFFFFFFFFFFFFFFELL)
  {
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v10 = 0;
    goto LABEL_48;
  }
  v9 = *(JSC::JSCell **)(a2 + 56);
  v10 = *((_QWORD *)a1 + 7);
  v110 = v10;
  if (((unint64_t)v9 & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    if (((unint64_t)v9 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v9)) == 0)
    {
LABEL_105:
      JSC::throwTypeError();
LABEL_106:
      v56 = 0;
      v80 = 1;
      v107 = 1;
      goto LABEL_92;
    }
    v2 = Object;
    WTF::AtomStringImpl::addLiteral();
    v15 = (WTF::StringImpl *)v111;
    v3 = JSC::JSObject::get((JSC::Structure *)v2, a1, v111);
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v16);
      else
        *(_DWORD *)v15 -= 2;
    }
    if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
      goto LABEL_106;
    if (v3 == 10)
    {
      v11 = 0;
      goto LABEL_20;
    }
    v17 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v3 >= 0xFFFE000000000000)
      goto LABEL_150;
    *(_QWORD *)&v18 = v3 - 0x2000000000000;
    if (v3 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      if (v18 <= 0.0)
      {
        v11 = v18 < 0.0;
        goto LABEL_19;
      }
    }
    else
    {
      if ((v3 & 0xFFFE000000000002) != 0)
      {
        v11 = v3 == 7;
        goto LABEL_19;
      }
      v90 = *(unsigned __int8 *)(v3 + 5);
      if (v90 == 3)
      {
        v93 = *(_DWORD *)(v3 + 8);
LABEL_178:
        v89 = v93 == 0;
        goto LABEL_190;
      }
      if (v90 == 2)
      {
        v91 = *(_QWORD *)(v3 + 8);
        if ((v91 & 1) != 0)
          v92 = (int *)(v3 + 16);
        else
          v92 = (int *)(v91 + 4);
        v93 = *v92;
        goto LABEL_178;
      }
      if ((*(_BYTE *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0xA) & 1) != 0)
      {
        v89 = *(_QWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
        goto LABEL_190;
      }
    }
    v11 = 1;
    goto LABEL_19;
  }
  v11 = 0;
  v12 = 0;
  v13 = 0;
LABEL_47:
  v10 = 0;
LABEL_48:
  while (1)
  {
    v105[0] = v11;
    v105[1] = v12;
    v105[2] = v13;
    v107 = 0;
    if (!v109)
      break;
    v17 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_150:
    v89 = (_DWORD)v3 == 0;
LABEL_190:
    v11 = !v89;
LABEL_19:
    if (*((_DWORD *)v17 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) != 0)
      goto LABEL_106;
LABEL_20:
    WTF::AtomStringImpl::addLiteral();
    v19 = (WTF::StringImpl *)v111;
    v21 = JSC::JSObject::get((JSC::Structure *)v2, a1, v111);
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v20);
      else
        *(_DWORD *)v19 -= 2;
    }
    if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
      goto LABEL_106;
    if (v21 == 10)
    {
      v12 = 0;
      goto LABEL_31;
    }
    v22 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v21 >= 0xFFFE000000000000)
    {
      v94 = (_DWORD)v21 == 0;
      goto LABEL_194;
    }
    *(_QWORD *)&v23 = v21 - 0x2000000000000;
    if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      if ((v21 & 0xFFFE000000000002) != 0)
      {
        v12 = v21 == 7;
        goto LABEL_30;
      }
      v95 = *(unsigned __int8 *)(v21 + 5);
      if (v95 == 3)
      {
        v98 = *(_DWORD *)(v21 + 8);
      }
      else
      {
        if (v95 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_184:
            v12 = 1;
            goto LABEL_30;
          }
          v94 = *(_QWORD *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
          goto LABEL_194;
        }
        v96 = *(_QWORD *)(v21 + 8);
        if ((v96 & 1) != 0)
          v97 = (int *)(v21 + 16);
        else
          v97 = (int *)(v96 + 4);
        v98 = *v97;
      }
      v94 = v98 == 0;
LABEL_194:
      v12 = !v94;
      goto LABEL_30;
    }
    if (v23 > 0.0)
      goto LABEL_184;
    v12 = v23 < 0.0;
LABEL_30:
    if (*((_DWORD *)v22 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v22) & 1) != 0)
      goto LABEL_106;
LABEL_31:
    WTF::AtomStringImpl::addLiteral();
    v24 = (WTF::StringImpl *)v111;
    v26 = JSC::JSObject::get((JSC::Structure *)v2, a1, v111);
    if (v24)
    {
      if (*(_DWORD *)v24 == 2)
        WTF::StringImpl::destroy(v24, v25);
      else
        *(_DWORD *)v24 -= 2;
    }
    if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
      goto LABEL_106;
    if (v26 == 10)
    {
      v13 = 0;
      goto LABEL_42;
    }
    v27 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v26 >= 0xFFFE000000000000)
    {
      v99 = (_DWORD)v26 == 0;
      goto LABEL_198;
    }
    *(_QWORD *)&v28 = v26 - 0x2000000000000;
    if (v26 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      if ((v26 & 0xFFFE000000000002) != 0)
      {
        v13 = v26 == 7;
        goto LABEL_41;
      }
      v100 = *(unsigned __int8 *)(v26 + 5);
      if (v100 == 3)
      {
        v103 = *(_DWORD *)(v26 + 8);
      }
      else
      {
        if (v100 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_188:
            v13 = 1;
            goto LABEL_41;
          }
          v99 = *(_QWORD *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
          goto LABEL_198;
        }
        v101 = *(_QWORD *)(v26 + 8);
        if ((v101 & 1) != 0)
          v102 = (int *)(v26 + 16);
        else
          v102 = (int *)(v101 + 4);
        v103 = *v102;
      }
      v99 = v103 == 0;
LABEL_198:
      v13 = !v99;
      goto LABEL_41;
    }
    if (v28 > 0.0)
      goto LABEL_188;
    v13 = v28 < 0.0;
LABEL_41:
    if (*((_DWORD *)v27 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v27) & 1) != 0)
      goto LABEL_106;
LABEL_42:
    WTF::AtomStringImpl::addLiteral();
    v3 = v111;
    v2 = JSC::JSObject::get((JSC::Structure *)v2, a1, v111);
    if (v3)
    {
      if (*(_DWORD *)v3 == 2)
        WTF::StringImpl::destroy((WTF::StringImpl *)v3, v29);
      else
        *(_DWORD *)v3 -= 2;
    }
    if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
      goto LABEL_106;
    if ((v2 | 8) == 0xA)
      goto LABEL_47;
    v111 = *((_QWORD *)a1 + 7);
    if ((v2 & 0xFFFE000000000002) != 0)
      goto LABEL_105;
    v82 = *(unsigned int *)(16 * (*(_DWORD *)v2 & 0xFFFFFFFE) + 0x4C);
    v83 = *(_DWORD *)(16 * (*(_DWORD *)v2 & 0xFFFFFFFE) + 0x4C) != 0;
    if ((_DWORD)v82)
    {
      v84 = 16 * v82;
      if ((char **)v84 != &WebCore::JSOverconstrainedError::s_info)
      {
        do
        {
          v84 = *(_QWORD *)(v84 + 16);
          v83 = v84 != 0;
        }
        while ((char **)v84 != &WebCore::JSOverconstrainedError::s_info && v84 != 0);
      }
    }
    if (!v83)
      goto LABEL_105;
    v10 = *(_QWORD *)(v2 + 24);
    if (!v10)
      goto LABEL_105;
    ++*(_DWORD *)v10;
  }
  v30 = v108;
  v108 = 0;
  v106 = 0;
  v31 = bmalloc::api::isoAllocate();
  WTF::MonotonicTime::now((WTF::MonotonicTime *)v31);
  *(_QWORD *)(v31 + 8) = 0;
  if (v12)
    v35 = 4;
  else
    v35 = 0;
  if (v13)
    v36 = 8;
  else
    v36 = 0;
  if (v11)
    v37 = 688130;
  else
    v37 = 688128;
  v38 = v37 | v35 | v36 | (v30 != 0) | *(_DWORD *)(v31 + 20) & 0xFFC00000;
  *(_DWORD *)(v31 + 16) = 1;
  *(_DWORD *)(v31 + 20) = v38;
  if (v30)
  {
    *(_DWORD *)v30 += 2;
    v38 = *(_DWORD *)(v31 + 20);
  }
  *(_QWORD *)(v31 + 24) = v30;
  *(_QWORD *)(v31 + 32) = 0;
  *(_QWORD *)(v31 + 40) = 0;
  *(_QWORD *)(v31 + 48) = 0;
  *(_QWORD *)(v31 + 56) = v34;
  *(_QWORD *)(v31 + 64) = 0;
  *(_DWORD *)(v31 + 20) = v38 | 0x4000;
  *(_QWORD *)v31 = off_1E32C9450;
  if (v10)
  {
    v39 = (*(_DWORD *)v10)++;
    *(_QWORD *)(v31 + 72) = v10;
    v111 = v31;
    if (v39)
    {
      *(_DWORD *)v10 = v39;
    }
    else
    {
      v86 = *(WTF::StringImpl **)(v10 + 24);
      *(_QWORD *)(v10 + 24) = 0;
      if (v86)
      {
        if (*(_DWORD *)v86 == 2)
          WTF::StringImpl::destroy(v86, v32);
        else
          *(_DWORD *)v86 -= 2;
      }
      v87 = *(WTF::StringImpl **)(v10 + 8);
      *(_QWORD *)(v10 + 8) = 0;
      if (v87)
      {
        if (*(_DWORD *)v87 == 2)
          WTF::StringImpl::destroy(v87, v32);
        else
          *(_DWORD *)v87 -= 2;
      }
      WTF::fastFree((WTF *)v10, v32);
    }
  }
  else
  {
    *(_QWORD *)(v31 + 72) = 0;
    v111 = v31;
  }
  if (v30)
  {
    if (*(_DWORD *)v30 == 2)
      WTF::StringImpl::destroy(v30, v32);
    else
      *(_DWORD *)v30 -= 2;
  }
  if (*(void (***)(WebCore::OverconstrainedErrorEvent *__hidden))v31 != off_1E32C9450)
  {
    __break(0xC471u);
    JUMPOUT(0x194DB4E44);
  }
  v40 = *(JSC::VM **)(v7 + 40);
  v41 = *((_QWORD *)v40 + 412);
  if (!v41)
    goto LABEL_73;
  v42 = *(_DWORD *)(v41 - 8);
  v43 = ((unint64_t)&WebCore::JSOverconstrainedErrorEvent::s_info
       + ~((_QWORD)&WebCore::JSOverconstrainedErrorEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSOverconstrainedErrorEvent::s_info
                                                                           + ~((_QWORD)&WebCore::JSOverconstrainedErrorEvent::s_info << 32)) >> 22);
  v44 = 9 * ((v43 + ~(v43 << 13)) ^ ((v43 + ~(v43 << 13)) >> 8));
  v45 = (v44 ^ (v44 >> 15)) + ~((v44 ^ (v44 >> 15)) << 27);
  v46 = v42 & ((v45 >> 31) ^ v45);
  v47 = *(char ***)(v41 + 16 * v46);
  if (v47 == &WebCore::JSOverconstrainedErrorEvent::s_info)
  {
LABEL_72:
    v49 = *(_QWORD *)(v41 + 16 * v46 + 8);
    if (!v49)
      goto LABEL_73;
  }
  else
  {
    v48 = 1;
    while (v47)
    {
      v46 = ((_DWORD)v46 + v48) & v42;
      v47 = *(char ***)(v41 + 16 * v46);
      ++v48;
      if (v47 == &WebCore::JSOverconstrainedErrorEvent::s_info)
        goto LABEL_72;
    }
LABEL_73:
    v50 = (WebCore::JSEvent *)*((_QWORD *)v40 + 7);
    v51 = (JSC::JSCell *)WebCore::JSEvent::prototype(v50, *(JSC::VM **)(v7 + 40), v33);
    Structure = WebCore::JSOverconstrainedErrorEventPrototype::createStructure((uint64_t *)v50, (uint64_t)v40, v51);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v54 = (JSC::JSCell *)WebCore::JSOverconstrainedErrorEventPrototype::create(v50, v40, Structure, v53);
    v55 = WebCore::JSOverconstrainedErrorEvent::createStructure((uint64_t *)v50, (uint64_t)v40, v54);
    v49 = WebCore::cacheDOMStructure((JSCell *)v40, v55, (uint64_t)&WebCore::JSOverconstrainedErrorEvent::s_info);
  }
  v56 = (JSCell *)WebCore::JSOverconstrainedErrorEvent::create(v49, v40, (uint64_t *)&v111);
  WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*((_QWORD *)v40 + 415), v31, (uint64_t)v56);
  v57 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v57 & 0xFFFE000000000002) == 0)
  {
    v58 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v57);
    if (v58)
    {
      v60 = v58;
      if (v58 != *(JSC::JSGlobalObject **)(a2 + 24))
      {
        v61 = (JSC::VM *)*((_QWORD *)a1 + 7);
        FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v58, v59);
        if (!*((_DWORD *)v61 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v61) & 1) == 0)
        {
          v65 = *((_QWORD *)FunctionRealm + 412);
          if (v65)
          {
            v66 = *(_DWORD *)(v65 - 8);
            v67 = ((unint64_t)&WebCore::JSOverconstrainedErrorEvent::s_info
                 + ~((_QWORD)&WebCore::JSOverconstrainedErrorEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSOverconstrainedErrorEvent::s_info
                                                                                     + ~((_QWORD)&WebCore::JSOverconstrainedErrorEvent::s_info << 32)) >> 22);
            v68 = 9 * ((v67 + ~(v67 << 13)) ^ ((v67 + ~(v67 << 13)) >> 8));
            v69 = (v68 ^ (v68 >> 15)) + ~((v68 ^ (v68 >> 15)) << 27);
            v70 = v66 & ((v69 >> 31) ^ v69);
            v71 = *(char ***)(v65 + 16 * v70);
            if (v71 == &WebCore::JSOverconstrainedErrorEvent::s_info)
            {
LABEL_83:
              v62 = *(JSC::JSObject **)(v65 + 16 * v70 + 8);
              if (v62)
              {
LABEL_85:
                SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v60, v62, v63);
                if (!*((_DWORD *)v61 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v61) & 1) == 0)
                  JSC::JSObject::setStructure(v56, v61, SubclassStructure);
                goto LABEL_87;
              }
            }
            else
            {
              v72 = 1;
              while (v71)
              {
                v70 = ((_DWORD)v70 + v72) & v66;
                v71 = *(char ***)(v65 + 16 * v70);
                ++v72;
                if (v71 == &WebCore::JSOverconstrainedErrorEvent::s_info)
                  goto LABEL_83;
              }
            }
          }
          v73 = (JSC::JSCell *)WebCore::JSEvent::prototype(v61, FunctionRealm, v62);
          v74 = WebCore::JSOverconstrainedErrorEventPrototype::createStructure((uint64_t *)v61, (uint64_t)FunctionRealm, v73);
          *(_DWORD *)(v74 + 16) |= 0x80000u;
          v76 = (JSC::JSCell *)WebCore::JSOverconstrainedErrorEventPrototype::create(v61, FunctionRealm, v74, v75);
          v77 = WebCore::JSOverconstrainedErrorEvent::createStructure((uint64_t *)v61, (uint64_t)FunctionRealm, v76);
          v62 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v77, (uint64_t)&WebCore::JSOverconstrainedErrorEvent::s_info);
          goto LABEL_85;
        }
      }
    }
  }
LABEL_87:
  if (*((_DWORD *)v104 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v104) & 1) != 0)
    v56 = 0;
  v79 = (_DWORD *)v111;
  v111 = 0;
  if (v79)
  {
    if (v79[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v79 + 8))(v79);
    else
      --v79[4];
  }
  v80 = 0;
LABEL_92:
  ((void (*)(unint64_t *, _BYTE *))off_1E32C9508[v80])(&v111, v105);
  v8 = v109;
LABEL_93:
  if (v8 != -1)
    ((void (*)(_BYTE *, WTF::StringImpl **))off_1E32C9518[v8])(v105, &v108);
  return v56;
}

uint64_t WebCore::JSOverconstrainedErrorEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSOverconstrainedErrorEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSOverconstrainedErrorEventPrototype::create(WebCore::JSOverconstrainedErrorEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSOverconstrainedErrorEvent::s_info, (uint64_t)&WebCore::JSOverconstrainedErrorEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSOverconstrainedErrorEvent>,(WebCore::DOMConstructorID)144>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1152);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSOverconstrainedErrorEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSOverconstrainedErrorEvent::s_info
         + ~((_QWORD)&WebCore::JSOverconstrainedErrorEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSOverconstrainedErrorEvent::s_info
                                                                             + ~((_QWORD)&WebCore::JSOverconstrainedErrorEvent::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSOverconstrainedErrorEvent::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSOverconstrainedErrorEvent::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEvent::prototype((WebCore::JSEvent *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSOverconstrainedErrorEventPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSOverconstrainedErrorEventPrototype::create((WebCore::JSOverconstrainedErrorEventPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSOverconstrainedErrorEvent::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSOverconstrainedErrorEvent::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1152) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsOverconstrainedErrorEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSOverconstrainedErrorEventPrototype::s_info != (char **)(16
                                                                         * *(unsigned int *)(16
                                                                                           * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                           + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSOverconstrainedErrorEvent>,(WebCore::DOMConstructorID)144>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsOverconstrainedErrorEvent_error(uint64_t a1, uint64_t a2)
{
  WTF *v2;

  v2 = *(WTF **)(*(_QWORD *)(a2 + 24) + 72);
  if (v2)
    return WebCore::wrap<WebCore::OverconstrainedError>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v2);
  else
    return 2;
}

uint64_t WebCore::JSOverconstrainedErrorEvent::subspaceForImpl(WebCore::JSOverconstrainedErrorEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 1176);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 1176))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 1176);
    *(_QWORD *)(v8 + 1176) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 1176);
  *(_QWORD *)(v3 + 1176) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSOverflowEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  JSC::VM *v5;
  uint64_t v7;
  int v8;
  JSC::JSCell *v9;
  unint64_t v10;
  _BOOL4 v11;
  uint64_t i;
  uint64_t Object;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  JSC::VM *v16;
  double v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  unint64_t v20;
  JSC::VM *v21;
  double v22;
  _BOOL4 v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  unint64_t v26;
  JSC::VM *v27;
  double v28;
  _BOOL4 v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  unint64_t v32;
  JSC::VM *v33;
  double v34;
  _BOOL4 v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  unint64_t v39;
  JSC::VM *v40;
  double v41;
  double v42;
  double v43;
  long double v44;
  double v45;
  WTF::StringImpl *v46;
  WTF::StringImpl *v47;
  uint64_t v48;
  JSC::VM *v49;
  double v50;
  WTF::StringImpl *v51;
  unint64_t v52;
  WTF::StringImpl *v53;
  WebCore::JSDOMGlobalObject *v54;
  uint64_t v55;
  int v56;
  unsigned int v57;
  JSC::VM *v58;
  uint64_t v59;
  unsigned int v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char **v65;
  int v66;
  unint64_t v67;
  WebCore::JSEvent *v68;
  JSC::JSCell *v69;
  unint64_t Structure;
  JSC::Structure *v71;
  JSC::JSCell *v72;
  uint64_t v73;
  JSCell *v74;
  JSC::JSCell *v75;
  JSC::JSGlobalObject *v76;
  JSC::JSObject *v77;
  JSC::JSGlobalObject *v78;
  JSC::VM *v79;
  WebCore::JSDOMGlobalObject *v80;
  JSC::Structure *v81;
  JSC::VM *FunctionRealm;
  uint64_t v83;
  unsigned int v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  char **v89;
  int v90;
  JSC::JSCell *v91;
  unint64_t v92;
  JSC::Structure *v93;
  JSC::JSCell *v94;
  uint64_t v95;
  unint64_t SubclassStructure;
  _DWORD *v97;
  JSValue v99;
  double v100;
  char hasExceptionsAfterHandlingTraps;
  JSC::VM *v102;
  BOOL v103;
  int v104;
  uint64_t v105;
  int *v106;
  int v107;
  BOOL v108;
  int v109;
  uint64_t v110;
  int *v111;
  int v112;
  BOOL v113;
  int v114;
  uint64_t v115;
  int *v116;
  int v117;
  BOOL v118;
  int v119;
  uint64_t v120;
  int *v121;
  int v122;
  BOOL v123;
  int v124;
  uint64_t v125;
  int *v126;
  int v127;
  _BOOL4 v128;
  _BOOL4 v129;
  _BOOL4 v130;
  JSC::VM *v131;
  WTF::StringImpl *v132;
  int v133;
  uint64_t v134;
  unint64_t v135;

  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v99.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v5, a1, v99);
  }
  v7 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v132);
  v8 = v133;
  if (!v133)
  {
    v131 = v5;
    if ((unint64_t)(*(int *)(a2 + 32) - 3) < 0xFFFFFFFFFFFFFFFELL)
    {
      v9 = *(JSC::JSCell **)(a2 + 56);
      v2 = *((_QWORD *)a1 + 7);
      v134 = v2;
      if (((unint64_t)v9 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v10 = 0;
        v11 = 0;
LABEL_6:
        i = 0;
        goto LABEL_95;
      }
      if (((unint64_t)v9 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v9)) == 0)
      {
        JSC::throwTypeError();
      }
      else
      {
        v3 = Object;
        WTF::AtomStringImpl::addLiteral();
        v14 = (WTF::StringImpl *)v135;
        v10 = JSC::JSObject::get((JSC::Structure *)v3, a1, v135);
        if (v14)
        {
          if (*(_DWORD *)v14 == 2)
            WTF::StringImpl::destroy(v14, v15);
          else
            *(_DWORD *)v14 -= 2;
        }
        if (!*(_DWORD *)(v2 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v2) & 1) == 0)
        {
          if (v10 == 10)
          {
            v11 = 0;
            goto LABEL_21;
          }
          v16 = (JSC::VM *)*((_QWORD *)a1 + 7);
          if (v10 >= 0xFFFE000000000000)
            goto LABEL_178;
          *(_QWORD *)&v17 = v10 - 0x2000000000000;
          if (v10 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
          {
            v11 = v17 > 0.0 || v17 < 0.0;
            goto LABEL_20;
          }
          if ((v10 & 0xFFFE000000000002) != 0)
          {
            v11 = v10 == 7;
            goto LABEL_20;
          }
          v104 = *(unsigned __int8 *)(v10 + 5);
          if (v104 == 3)
          {
            v107 = *(_DWORD *)(v10 + 8);
          }
          else
          {
            if (v104 != 2)
            {
              if ((*(_BYTE *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0xA) & 1) != 0)
              {
                v103 = *(_QWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
                goto LABEL_245;
              }
              v11 = 1;
              goto LABEL_20;
            }
            v105 = *(_QWORD *)(v10 + 8);
            if ((v105 & 1) != 0)
              v106 = (int *)(v10 + 16);
            else
              v106 = (int *)(v105 + 4);
            v107 = *v106;
          }
          v103 = v107 == 0;
          goto LABEL_245;
        }
      }
LABEL_142:
      v74 = 0;
LABEL_128:
      v8 = v133;
      goto LABEL_129;
    }
    v10 = 0;
    v11 = 0;
    for (i = 0; ; i = 256)
    {
LABEL_95:
      if (!v133)
      {
        v51 = v132;
        v132 = 0;
        v52 = bmalloc::api::isoAllocate();
        WTF::MonotonicTime::now((WTF::MonotonicTime *)v52);
        *(_QWORD *)(v52 + 8) = 0;
        if (v10 | (unint64_t)v11)
          v56 = 2621442;
        else
          v56 = 2621440;
        v57 = (8 * ((v10 & 0xFF0000) != 0)) | (4 * ((i | (unsigned __int16)v10 & 0xFF00) != 0)) | v56 | (v51 != 0) | *(_DWORD *)(v52 + 20) & 0xFFC00000;
        *(_DWORD *)(v52 + 16) = 1;
        *(_DWORD *)(v52 + 20) = v57;
        if (v51)
        {
          *(_DWORD *)v51 += 2;
          v57 = *(_DWORD *)(v52 + 20);
        }
        *(_QWORD *)(v52 + 24) = v51;
        *(_QWORD *)(v52 + 32) = 0;
        *(_QWORD *)(v52 + 40) = 0;
        *(_QWORD *)(v52 + 48) = 0;
        *(_QWORD *)(v52 + 56) = v55;
        *(_DWORD *)(v52 + 20) = v57 | 0x4000;
        *(_QWORD *)(v52 + 64) = 0;
        *(_QWORD *)v52 = off_1E33A6400;
        *(_WORD *)(v52 + 72) = WORD2(v10);
        *(_BYTE *)(v52 + 74) = BYTE6(v10);
        *(_BYTE *)(v52 + 75) = HIBYTE(v10);
        v135 = v52;
        if (v51)
        {
          if (*(_DWORD *)v51 == 2)
          {
            WTF::StringImpl::destroy(v51, v53);
            if (*(void (***)(WebCore::OverflowEvent *__hidden))v52 != off_1E33A6400)
            {
              __break(0xC471u);
              JUMPOUT(0x194DB63FCLL);
            }
          }
          else
          {
            *(_DWORD *)v51 -= 2;
          }
        }
        v58 = *(JSC::VM **)(v7 + 40);
        v59 = *((_QWORD *)v58 + 412);
        if (!v59)
          goto LABEL_110;
        v60 = *(_DWORD *)(v59 - 8);
        v61 = ((unint64_t)&WebCore::JSOverflowEvent::s_info + ~((_QWORD)&WebCore::JSOverflowEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSOverflowEvent::s_info + ~((_QWORD)&WebCore::JSOverflowEvent::s_info << 32)) >> 22);
        v62 = 9 * ((v61 + ~(v61 << 13)) ^ ((v61 + ~(v61 << 13)) >> 8));
        v63 = (v62 ^ (v62 >> 15)) + ~((v62 ^ (v62 >> 15)) << 27);
        v64 = v60 & ((v63 >> 31) ^ v63);
        v65 = *(char ***)(v59 + 16 * v64);
        if (v65 == &WebCore::JSOverflowEvent::s_info)
        {
LABEL_109:
          v67 = *(_QWORD *)(v59 + 16 * v64 + 8);
          if (!v67)
            goto LABEL_110;
        }
        else
        {
          v66 = 1;
          while (v65)
          {
            v64 = ((_DWORD)v64 + v66) & v60;
            v65 = *(char ***)(v59 + 16 * v64);
            ++v66;
            if (v65 == &WebCore::JSOverflowEvent::s_info)
              goto LABEL_109;
          }
LABEL_110:
          v68 = (WebCore::JSEvent *)*((_QWORD *)v58 + 7);
          v69 = (JSC::JSCell *)WebCore::JSEvent::prototype(v68, *(JSC::VM **)(v7 + 40), v54);
          Structure = WebCore::JSOverflowEventPrototype::createStructure((uint64_t *)v68, (uint64_t)v58, v69);
          *(_DWORD *)(Structure + 16) |= 0x80000u;
          v72 = (JSC::JSCell *)WebCore::JSOverflowEventPrototype::create(v68, v58, Structure, v71);
          v73 = WebCore::JSOverflowEvent::createStructure((uint64_t *)v68, (uint64_t)v58, v72);
          v67 = WebCore::cacheDOMStructure((JSCell *)v58, v73, (uint64_t)&WebCore::JSOverflowEvent::s_info);
        }
        v74 = (JSCell *)WebCore::JSOverflowEvent::create(v67, v58, (uint64_t *)&v135);
        WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*((_QWORD *)v58 + 415), v52, (uint64_t)v74);
        v75 = *(JSC::JSCell **)(a2 + 40);
        if (((unint64_t)v75 & 0xFFFE000000000002) != 0
          || (v76 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v75)) == 0
          || (v78 = v76, v76 == *(JSC::JSGlobalObject **)(a2 + 24))
          || (v79 = (JSC::VM *)*((_QWORD *)a1 + 7),
              FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v76, v77),
              *((_DWORD *)v79 + 20))
          && (JSC::VM::hasExceptionsAfterHandlingTraps(v79) & 1) != 0)
        {
LABEL_124:
          if (*((_DWORD *)v131 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v131) & 1) != 0)
            v74 = 0;
          v97 = (_DWORD *)v135;
          v135 = 0;
          if (v97)
          {
            if (v97[4] == 1)
              (*(void (**)(_DWORD *))(*(_QWORD *)v97 + 8))(v97);
            else
              --v97[4];
          }
          goto LABEL_128;
        }
        v83 = *((_QWORD *)FunctionRealm + 412);
        if (v83)
        {
          v84 = *(_DWORD *)(v83 - 8);
          v85 = ((unint64_t)&WebCore::JSOverflowEvent::s_info + ~((_QWORD)&WebCore::JSOverflowEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSOverflowEvent::s_info + ~((_QWORD)&WebCore::JSOverflowEvent::s_info << 32)) >> 22);
          v86 = 9 * ((v85 + ~(v85 << 13)) ^ ((v85 + ~(v85 << 13)) >> 8));
          v87 = (v86 ^ (v86 >> 15)) + ~((v86 ^ (v86 >> 15)) << 27);
          v88 = v84 & ((v87 >> 31) ^ v87);
          v89 = *(char ***)(v83 + 16 * v88);
          if (v89 != &WebCore::JSOverflowEvent::s_info)
          {
            v90 = 1;
            while (v89)
            {
              v88 = ((_DWORD)v88 + v90) & v84;
              v89 = *(char ***)(v83 + 16 * v88);
              ++v90;
              if (v89 == &WebCore::JSOverflowEvent::s_info)
                goto LABEL_120;
            }
            goto LABEL_121;
          }
LABEL_120:
          v80 = *(WebCore::JSDOMGlobalObject **)(v83 + 16 * v88 + 8);
          if (!v80)
            goto LABEL_121;
        }
        else
        {
LABEL_121:
          v91 = (JSC::JSCell *)WebCore::JSEvent::prototype(v79, FunctionRealm, v80);
          v92 = WebCore::JSOverflowEventPrototype::createStructure((uint64_t *)v79, (uint64_t)FunctionRealm, v91);
          *(_DWORD *)(v92 + 16) |= 0x80000u;
          v94 = (JSC::JSCell *)WebCore::JSOverflowEventPrototype::create(v79, FunctionRealm, v92, v93);
          v95 = WebCore::JSOverflowEvent::createStructure((uint64_t *)v79, (uint64_t)FunctionRealm, v94);
          v80 = (WebCore::JSDOMGlobalObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v95, (uint64_t)&WebCore::JSOverflowEvent::s_info);
        }
        SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v78, v80, v81);
        if (!*((_DWORD *)v79 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v79) & 1) == 0)
          JSC::JSObject::setStructure(v74, v79, SubclassStructure);
        goto LABEL_124;
      }
      v16 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_178:
      v103 = (_DWORD)v10 == 0;
LABEL_245:
      v11 = !v103;
LABEL_20:
      if (*((_DWORD *)v16 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v16) & 1) != 0)
        goto LABEL_142;
LABEL_21:
      WTF::AtomStringImpl::addLiteral();
      v18 = (WTF::StringImpl *)v135;
      v20 = JSC::JSObject::get((JSC::Structure *)v3, a1, v135);
      if (v18)
      {
        if (*(_DWORD *)v18 == 2)
          WTF::StringImpl::destroy(v18, v19);
        else
          *(_DWORD *)v18 -= 2;
      }
      if (*(_DWORD *)(v2 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v2) & 1) != 0)
        goto LABEL_142;
      if (v20 == 10)
      {
        v130 = 0;
        goto LABEL_32;
      }
      v21 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v20 >= 0xFFFE000000000000)
        break;
      *(_QWORD *)&v22 = v20 - 0x2000000000000;
      if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        if ((v20 & 0xFFFE000000000002) != 0)
        {
          v23 = v20 == 7;
          goto LABEL_31;
        }
        v109 = *(unsigned __int8 *)(v20 + 5);
        if (v109 == 3)
        {
          v112 = *(_DWORD *)(v20 + 8);
          goto LABEL_229;
        }
        if (v109 == 2)
        {
          v110 = *(_QWORD *)(v20 + 8);
          if ((v110 & 1) != 0)
            v111 = (int *)(v20 + 16);
          else
            v111 = (int *)(v110 + 4);
          v112 = *v111;
LABEL_229:
          v108 = v112 == 0;
        }
        else
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_231:
            v23 = 1;
            goto LABEL_31;
          }
          v108 = *(_QWORD *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
        }
LABEL_249:
        v23 = !v108;
        goto LABEL_31;
      }
      if (v22 > 0.0)
        goto LABEL_231;
      v23 = v22 < 0.0;
LABEL_31:
      v130 = v23;
      if (*((_DWORD *)v21 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) != 0)
        goto LABEL_142;
LABEL_32:
      WTF::AtomStringImpl::addLiteral();
      v24 = (WTF::StringImpl *)v135;
      v26 = JSC::JSObject::get((JSC::Structure *)v3, a1, v135);
      if (v24)
      {
        if (*(_DWORD *)v24 == 2)
          WTF::StringImpl::destroy(v24, v25);
        else
          *(_DWORD *)v24 -= 2;
      }
      if (*(_DWORD *)(v2 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v2) & 1) != 0)
        goto LABEL_142;
      if (v26 == 10)
      {
        v129 = 0;
        goto LABEL_43;
      }
      v27 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v26 >= 0xFFFE000000000000)
      {
        v113 = (_DWORD)v26 == 0;
        goto LABEL_253;
      }
      *(_QWORD *)&v28 = v26 - 0x2000000000000;
      if (v26 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        if ((v26 & 0xFFFE000000000002) != 0)
        {
          v29 = v26 == 7;
          goto LABEL_42;
        }
        v114 = *(unsigned __int8 *)(v26 + 5);
        if (v114 == 3)
        {
          v117 = *(_DWORD *)(v26 + 8);
        }
        else
        {
          if (v114 != 2)
          {
            if ((*(_BYTE *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0xA) & 1) == 0)
            {
LABEL_235:
              v29 = 1;
              goto LABEL_42;
            }
            v113 = *(_QWORD *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            goto LABEL_253;
          }
          v115 = *(_QWORD *)(v26 + 8);
          if ((v115 & 1) != 0)
            v116 = (int *)(v26 + 16);
          else
            v116 = (int *)(v115 + 4);
          v117 = *v116;
        }
        v113 = v117 == 0;
LABEL_253:
        v29 = !v113;
        goto LABEL_42;
      }
      if (v28 > 0.0)
        goto LABEL_235;
      v29 = v28 < 0.0;
LABEL_42:
      v129 = v29;
      if (*((_DWORD *)v27 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v27) & 1) != 0)
        goto LABEL_142;
LABEL_43:
      WTF::AtomStringImpl::addLiteral();
      v30 = (WTF::StringImpl *)v135;
      v32 = JSC::JSObject::get((JSC::Structure *)v3, a1, v135);
      if (v30)
      {
        if (*(_DWORD *)v30 == 2)
          WTF::StringImpl::destroy(v30, v31);
        else
          *(_DWORD *)v30 -= 2;
      }
      if (*(_DWORD *)(v2 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v2) & 1) != 0)
        goto LABEL_142;
      if (v32 != 10)
      {
        v33 = (JSC::VM *)*((_QWORD *)a1 + 7);
        if (v32 >= 0xFFFE000000000000)
        {
          v118 = (_DWORD)v32 == 0;
          goto LABEL_257;
        }
        *(_QWORD *)&v34 = v32 - 0x2000000000000;
        if (v32 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
        {
          if (v34 <= 0.0)
          {
            v35 = v34 < 0.0;
            goto LABEL_53;
          }
        }
        else
        {
          if ((v32 & 0xFFFE000000000002) != 0)
          {
            v35 = v32 == 7;
            goto LABEL_53;
          }
          v119 = *(unsigned __int8 *)(v32 + 5);
          if (v119 == 3)
          {
            v122 = *(_DWORD *)(v32 + 8);
            goto LABEL_237;
          }
          if (v119 == 2)
          {
            v120 = *(_QWORD *)(v32 + 8);
            if ((v120 & 1) != 0)
              v121 = (int *)(v32 + 16);
            else
              v121 = (int *)(v120 + 4);
            v122 = *v121;
LABEL_237:
            v118 = v122 == 0;
LABEL_257:
            v35 = !v118;
LABEL_53:
            v128 = v35;
            if (*((_DWORD *)v33 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v33) & 1) != 0)
              goto LABEL_142;
            goto LABEL_54;
          }
          if ((*(_BYTE *)(16 * (*(_DWORD *)v32 & 0xFFFFFFFE) + 0xA) & 1) != 0)
          {
            v118 = *(_QWORD *)(16 * (*(_DWORD *)v32 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            goto LABEL_257;
          }
        }
        v35 = 1;
        goto LABEL_53;
      }
      v128 = 0;
LABEL_54:
      WTF::AtomStringImpl::addLiteral();
      v36 = (WTF::StringImpl *)v135;
      v38 = JSC::JSObject::get((JSC::Structure *)v3, a1, v135);
      if (v36)
      {
        if (*(_DWORD *)v36 == 2)
          WTF::StringImpl::destroy(v36, v37);
        else
          *(_DWORD *)v36 -= 2;
      }
      if (*(_DWORD *)(v2 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v2) & 1) != 0)
        goto LABEL_142;
      if (v38 == 10)
      {
        v39 = 0;
      }
      else
      {
        v135 = v38;
        v40 = (JSC::VM *)*((_QWORD *)a1 + 7);
        if (v38 < 0xFFFE000000000000 || (v38 & 0x80000000) != 0)
        {
          if (v38 >= 0xFFFE000000000000)
          {
            v41 = (double)(int)v38;
          }
          else if (v38 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            v102 = (JSC::VM *)*((_QWORD *)a1 + 7);
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v135, a1);
            v40 = v102;
          }
          else
          {
            *(_QWORD *)&v41 = v38 - 0x2000000000000;
          }
          if (*((_DWORD *)v40 + 20))
          {
            v100 = v41;
            hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v40);
            v41 = v100;
            if ((hasExceptionsAfterHandlingTraps & 1) != 0)
              goto LABEL_142;
          }
          LOWORD(v38) = 0;
          if (fabs(v41) != INFINITY && v41 != 0.0)
          {
            v42 = -floor(-v41);
            v43 = floor(v41);
            if (v41 >= 0.0)
              v44 = v43;
            else
              v44 = v42;
            v45 = fmod(v44, 65536.0);
            if (v45 < 0.0)
              v45 = v45 + 65536.0;
            LODWORD(v38) = (int)v45;
          }
        }
        v39 = (unint64_t)(unsigned __int16)v38 << 32;
      }
      WTF::AtomStringImpl::addLiteral();
      v46 = (WTF::StringImpl *)v135;
      v3 = JSC::JSObject::get((JSC::Structure *)v3, a1, v135);
      if (v46)
      {
        if (*(_DWORD *)v46 == 2)
          WTF::StringImpl::destroy(v46, v47);
        else
          *(_DWORD *)v46 -= 2;
      }
      if (*(_DWORD *)(v2 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v2) & 1) != 0)
        goto LABEL_142;
      if (v3 == 10)
      {
        v48 = 0;
        if (v128)
          goto LABEL_81;
        goto LABEL_92;
      }
      v49 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v3 >= 0xFFFE000000000000)
      {
        v123 = (_DWORD)v3 == 0;
        goto LABEL_261;
      }
      *(_QWORD *)&v50 = v3 - 0x2000000000000;
      if (v3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        if ((v3 & 0xFFFE000000000002) != 0)
        {
          v2 = v3 == 7;
          goto LABEL_88;
        }
        v124 = *(unsigned __int8 *)(v3 + 5);
        if (v124 == 3)
        {
          v127 = *(_DWORD *)(v3 + 8);
        }
        else
        {
          if (v124 != 2)
          {
            if ((*(_BYTE *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
            {
LABEL_243:
              v2 = 1;
              goto LABEL_88;
            }
            v123 = *(_QWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            goto LABEL_261;
          }
          v125 = *(_QWORD *)(v3 + 8);
          if ((v125 & 1) != 0)
            v126 = (int *)(v3 + 16);
          else
            v126 = (int *)(v125 + 4);
          v127 = *v126;
        }
        v123 = v127 == 0;
LABEL_261:
        v2 = !v123;
        goto LABEL_88;
      }
      if (v50 > 0.0)
        goto LABEL_243;
      v2 = v50 < 0.0;
LABEL_88:
      if (*((_DWORD *)v49 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v49) & 1) != 0)
        goto LABEL_142;
      v48 = 0x100000000000000;
      if (!(_DWORD)v2)
        v48 = 0;
      if (v128)
      {
LABEL_81:
        v10 = v39 | v48 | 0x1000000000000;
        if (!v129)
          goto LABEL_82;
        goto LABEL_93;
      }
LABEL_92:
      v10 = v48 | v39;
      if (!v129)
      {
LABEL_82:
        if (!v130)
          goto LABEL_6;
        continue;
      }
LABEL_93:
      v10 |= 0x10000uLL;
      if (!v130)
        goto LABEL_6;
    }
    v108 = (_DWORD)v20 == 0;
    goto LABEL_249;
  }
  v74 = 0;
LABEL_129:
  if (v8 != -1)
    ((void (*)(unint64_t *, WTF::StringImpl **))off_1E32C9518[v8])(&v135, &v132);
  return v74;
}

uint64_t WebCore::JSOverflowEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSOverflowEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSOverflowEventPrototype::create(WebCore::JSOverflowEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<7u>(this, (uint64_t)&WebCore::JSOverflowEvent::s_info, &WebCore::JSOverflowEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSOverflowEvent>,(WebCore::DOMConstructorID)470>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3760);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSOverflowEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSOverflowEvent::s_info + ~((_QWORD)&WebCore::JSOverflowEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSOverflowEvent::s_info + ~((_QWORD)&WebCore::JSOverflowEvent::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSOverflowEvent::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSOverflowEvent::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEvent::prototype((WebCore::JSEvent *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSOverflowEventPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSOverflowEventPrototype::create((WebCore::JSOverflowEventPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSOverflowEvent::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSOverflowEvent::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  JSC::reifyStaticProperties<3u>((JSC::VM *)a1, (uint64_t)&WebCore::JSOverflowEvent::s_info, &WebCore::JSOverflowEventConstructorTableValues, (JSC::JSObject *)v2);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3760) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsOverflowEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSOverflowEventPrototype::s_info != (char **)(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSOverflowEvent>,(WebCore::DOMConstructorID)470>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsOverflowEvent_orient(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int16 *)(*(_QWORD *)(a2 + 24) + 72) | 0xFFFE000000000000;
}

uint64_t WebCore::jsOverflowEvent_horizontalOverflow(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(*(_QWORD *)(a2 + 24) + 74))
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsOverflowEvent_verticalOverflow(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(*(_QWORD *)(a2 + 24) + 75))
    return 7;
  else
    return 6;
}

uint64_t WebCore::JSOverflowEvent::subspaceForImpl(WebCore::JSOverflowEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3840);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3840))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3840);
    *(_QWORD *)(v8 + 3840) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3840);
  *(_QWORD *)(v3 + 3840) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSPageTransitionEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  JSC::VM *v5;
  uint64_t v7;
  int v8;
  JSC::JSCell *v9;
  int v10;
  _BOOL4 v11;
  int v12;
  unint64_t v13;
  uint64_t Object;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSC::VM *v17;
  double v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  _BOOL4 v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  unint64_t v27;
  _BOOL4 v28;
  JSC::VM *v29;
  double v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  JSC::VM *v33;
  double v34;
  int v35;
  WTF::StringImpl *v36;
  uint64_t v37;
  WTF::StringImpl *v38;
  uint64_t v39;
  int v40;
  unsigned int v41;
  JSCell *v42;
  JSC::JSCell *v43;
  JSC::JSGlobalObject *v44;
  JSC::JSObject *v45;
  JSC::JSGlobalObject *v46;
  WebCore::JSPageTransitionEvent *v47;
  JSC::VM *FunctionRealm;
  JSC::JSObject *v49;
  JSC::Structure *v50;
  unint64_t SubclassStructure;
  _DWORD *v52;
  JSValue v54;
  BOOL v55;
  int v56;
  uint64_t v57;
  int *v58;
  int v59;
  BOOL v60;
  int v61;
  uint64_t v62;
  int *v63;
  int v64;
  BOOL v65;
  int v66;
  uint64_t v67;
  int *v68;
  int v69;
  BOOL v70;
  int v71;
  uint64_t v72;
  int *v73;
  int v74;
  _BOOL4 v75;
  JSC::VM *v76;
  WTF::StringImpl *v77;
  int v78;
  uint64_t v79;
  unint64_t v80;

  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v54.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v5, a1, v54);
  }
  v7 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v77);
  v8 = v78;
  if (!v78)
  {
    if ((unint64_t)(*(int *)(a2 + 32) - 3) < 0xFFFFFFFFFFFFFFFELL)
    {
      v9 = *(JSC::JSCell **)(a2 + 56);
      v2 = *((_QWORD *)a1 + 7);
      v79 = v2;
      if (((unint64_t)v9 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v10 = 0;
        v11 = 0;
        v12 = 0;
        LODWORD(v13) = 0;
        goto LABEL_63;
      }
      if (((unint64_t)v9 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v9)) == 0)
      {
        JSC::throwTypeError();
      }
      else
      {
        v3 = Object;
        v76 = v5;
        WTF::AtomStringImpl::addLiteral();
        v15 = (WTF::StringImpl *)v80;
        v13 = JSC::JSObject::get((JSC::Structure *)v3, a1, v80);
        if (v15)
        {
          if (*(_DWORD *)v15 == 2)
            WTF::StringImpl::destroy(v15, v16);
          else
            *(_DWORD *)v15 -= 2;
        }
        if (!*(_DWORD *)(v2 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v2) & 1) == 0)
        {
          if (v13 == 10)
          {
            v11 = 0;
            goto LABEL_20;
          }
          v17 = (JSC::VM *)*((_QWORD *)a1 + 7);
          if (v13 >= 0xFFFE000000000000)
            goto LABEL_120;
          *(_QWORD *)&v18 = v13 - 0x2000000000000;
          if (v13 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
          {
            v11 = v18 > 0.0 || v18 < 0.0;
            goto LABEL_19;
          }
          if ((v13 & 0xFFFE000000000002) != 0)
          {
            v11 = v13 == 7;
            goto LABEL_19;
          }
          v56 = *(unsigned __int8 *)(v13 + 5);
          if (v56 == 3)
          {
            v59 = *(_DWORD *)(v13 + 8);
          }
          else
          {
            if (v56 != 2)
            {
              if ((*(_BYTE *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0xA) & 1) != 0)
              {
                v55 = *(_QWORD *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
                goto LABEL_174;
              }
              v11 = 1;
              goto LABEL_19;
            }
            v57 = *(_QWORD *)(v13 + 8);
            if ((v57 & 1) != 0)
              v58 = (int *)(v13 + 16);
            else
              v58 = (int *)(v57 + 4);
            v59 = *v58;
          }
          v55 = v59 == 0;
          goto LABEL_174;
        }
      }
LABEL_94:
      v42 = 0;
LABEL_82:
      v8 = v78;
      goto LABEL_83;
    }
    v10 = 0;
    v11 = 0;
    v12 = 0;
    LODWORD(v13) = 0;
    while (1)
    {
LABEL_63:
      if (!v78)
      {
        v35 = v10 | v11 | v12;
        v36 = v77;
        v77 = 0;
        v37 = bmalloc::api::isoAllocate();
        WTF::MonotonicTime::now((WTF::MonotonicTime *)v37);
        *(_QWORD *)(v37 + 8) = 0;
        if ((_BYTE)v35)
          v40 = 2654210;
        else
          v40 = 2654208;
        v41 = v40 | (8 * ((v35 & 0xFF0000) != 0)) | (4 * ((v35 & 0xFF00 | v13) != 0)) | (v36 != 0) | *(_DWORD *)(v37 + 20) & 0xFFC00000;
        *(_DWORD *)(v37 + 16) = 1;
        *(_DWORD *)(v37 + 20) = v41;
        if (v36)
        {
          *(_DWORD *)v36 += 2;
          v41 = *(_DWORD *)(v37 + 20);
        }
        *(_QWORD *)(v37 + 24) = v36;
        *(_QWORD *)(v37 + 32) = 0;
        *(_QWORD *)(v37 + 40) = 0;
        *(_QWORD *)(v37 + 48) = 0;
        *(_QWORD *)(v37 + 56) = v39;
        *(_QWORD *)(v37 + 64) = 0;
        *(_DWORD *)(v37 + 20) = v41 | 0x4000;
        *(_QWORD *)v37 = off_1E33A65D0;
        *(_BYTE *)(v37 + 72) = HIBYTE(v35);
        v80 = v37;
        if (v36)
        {
          if (*(_DWORD *)v36 == 2)
          {
            WTF::StringImpl::destroy(v36, v38);
            if (*(void (***)(WebCore::PageTransitionEvent *__hidden))v37 != off_1E33A65D0)
            {
              __break(0xC471u);
              JUMPOUT(0x194DB7874);
            }
          }
          else
          {
            *(_DWORD *)v36 -= 2;
          }
        }
        v42 = (JSCell *)WebCore::createWrapper<WebCore::PageTransitionEvent,WebCore::PageTransitionEvent>(*(_QWORD *)(v7 + 40), (uint64_t *)&v80);
        v43 = *(JSC::JSCell **)(a2 + 40);
        if (((unint64_t)v43 & 0xFFFE000000000002) == 0)
        {
          v44 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v43);
          if (v44)
          {
            v46 = v44;
            if (v44 != *(JSC::JSGlobalObject **)(a2 + 24))
            {
              v47 = (WebCore::JSPageTransitionEvent *)*((_QWORD *)a1 + 7);
              FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v44, v45);
              if (!*((_DWORD *)v47 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v47) & 1) == 0)
              {
                v49 = (JSC::JSObject *)WebCore::getDOMStructure<WebCore::JSPageTransitionEvent>(v47, FunctionRealm);
                SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v46, v49, v50);
                if (!*((_DWORD *)v47 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v47) & 1) == 0)
                  JSC::JSObject::setStructure(v42, v47, SubclassStructure);
              }
            }
          }
        }
        if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
          v42 = 0;
        v52 = (_DWORD *)v80;
        v80 = 0;
        if (v52)
        {
          if (v52[4] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v52 + 8))(v52);
          else
            --v52[4];
        }
        goto LABEL_82;
      }
      v17 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_120:
      v55 = (_DWORD)v13 == 0;
LABEL_174:
      v11 = !v55;
LABEL_19:
      if (*((_DWORD *)v17 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) != 0)
        goto LABEL_94;
LABEL_20:
      WTF::AtomStringImpl::addLiteral();
      v19 = (WTF::StringImpl *)v80;
      v21 = JSC::JSObject::get((JSC::Structure *)v3, a1, v80);
      if (v19)
      {
        if (*(_DWORD *)v19 == 2)
          WTF::StringImpl::destroy(v19, v20);
        else
          *(_DWORD *)v19 -= 2;
      }
      if (*(_DWORD *)(v2 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v2) & 1) != 0)
        goto LABEL_94;
      if (v21 == 10)
      {
        v75 = 0;
        goto LABEL_31;
      }
      v22 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v21 >= 0xFFFE000000000000)
        break;
      *(_QWORD *)&v23 = v21 - 0x2000000000000;
      if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        if ((v21 & 0xFFFE000000000002) != 0)
        {
          v24 = v21 == 7;
          goto LABEL_30;
        }
        v61 = *(unsigned __int8 *)(v21 + 5);
        if (v61 == 3)
        {
          v64 = *(_DWORD *)(v21 + 8);
          goto LABEL_162;
        }
        if (v61 == 2)
        {
          v62 = *(_QWORD *)(v21 + 8);
          if ((v62 & 1) != 0)
            v63 = (int *)(v21 + 16);
          else
            v63 = (int *)(v62 + 4);
          v64 = *v63;
LABEL_162:
          v60 = v64 == 0;
        }
        else
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_164:
            v24 = 1;
            goto LABEL_30;
          }
          v60 = *(_QWORD *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
        }
LABEL_178:
        v24 = !v60;
        goto LABEL_30;
      }
      if (v23 > 0.0)
        goto LABEL_164;
      v24 = v23 < 0.0;
LABEL_30:
      v75 = v24;
      if (*((_DWORD *)v22 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v22) & 1) != 0)
        goto LABEL_94;
LABEL_31:
      WTF::AtomStringImpl::addLiteral();
      v25 = (WTF::StringImpl *)v80;
      v27 = JSC::JSObject::get((JSC::Structure *)v3, a1, v80);
      if (v25)
      {
        if (*(_DWORD *)v25 == 2)
          WTF::StringImpl::destroy(v25, v26);
        else
          *(_DWORD *)v25 -= 2;
      }
      if (*(_DWORD *)(v2 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v2) & 1) != 0)
        goto LABEL_94;
      if (v27 != 10)
      {
        v29 = (JSC::VM *)*((_QWORD *)a1 + 7);
        if (v27 >= 0xFFFE000000000000)
        {
          v65 = (_DWORD)v27 == 0;
          goto LABEL_182;
        }
        *(_QWORD *)&v30 = v27 - 0x2000000000000;
        if (v27 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
        {
          if (v30 <= 0.0)
          {
            v28 = v30 < 0.0;
            goto LABEL_41;
          }
        }
        else
        {
          if ((v27 & 0xFFFE000000000002) != 0)
          {
            v28 = v27 == 7;
            goto LABEL_41;
          }
          v66 = *(unsigned __int8 *)(v27 + 5);
          if (v66 == 3)
          {
            v69 = *(_DWORD *)(v27 + 8);
            goto LABEL_166;
          }
          if (v66 == 2)
          {
            v67 = *(_QWORD *)(v27 + 8);
            if ((v67 & 1) != 0)
              v68 = (int *)(v27 + 16);
            else
              v68 = (int *)(v67 + 4);
            v69 = *v68;
LABEL_166:
            v65 = v69 == 0;
LABEL_182:
            v28 = !v65;
LABEL_41:
            if (*((_DWORD *)v29 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v29) & 1) != 0)
              goto LABEL_94;
            goto LABEL_42;
          }
          if ((*(_BYTE *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0xA) & 1) != 0)
          {
            v65 = *(_QWORD *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            goto LABEL_182;
          }
        }
        v28 = 1;
        goto LABEL_41;
      }
      v28 = 0;
LABEL_42:
      WTF::AtomStringImpl::addLiteral();
      v31 = (WTF::StringImpl *)v80;
      v3 = JSC::JSObject::get((JSC::Structure *)v3, a1, v80);
      if (v31)
      {
        if (*(_DWORD *)v31 == 2)
          WTF::StringImpl::destroy(v31, v32);
        else
          *(_DWORD *)v31 -= 2;
      }
      if (*(_DWORD *)(v2 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v2) & 1) != 0)
        goto LABEL_94;
      if (v3 == 10)
      {
        v12 = 0;
        if (v28)
          goto LABEL_48;
LABEL_59:
        v10 = 0;
        v5 = v76;
        if (v75)
LABEL_60:
          LODWORD(v13) = 256;
        else
          LODWORD(v13) = 0;
      }
      else
      {
        v33 = (JSC::VM *)*((_QWORD *)a1 + 7);
        if (v3 >= 0xFFFE000000000000)
        {
          v70 = (_DWORD)v3 == 0;
          goto LABEL_186;
        }
        *(_QWORD *)&v34 = v3 - 0x2000000000000;
        if (v3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          if ((v3 & 0xFFFE000000000002) != 0)
          {
            v2 = v3 == 7;
            goto LABEL_54;
          }
          v71 = *(unsigned __int8 *)(v3 + 5);
          if (v71 == 3)
          {
            v74 = *(_DWORD *)(v3 + 8);
            goto LABEL_170;
          }
          if (v71 == 2)
          {
            v72 = *(_QWORD *)(v3 + 8);
            if ((v72 & 1) != 0)
              v73 = (int *)(v3 + 16);
            else
              v73 = (int *)(v72 + 4);
            v74 = *v73;
LABEL_170:
            v70 = v74 == 0;
          }
          else
          {
            if ((*(_BYTE *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
            {
LABEL_172:
              v2 = 1;
              goto LABEL_54;
            }
            v70 = *(_QWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
          }
LABEL_186:
          v2 = !v70;
          goto LABEL_54;
        }
        if (v34 > 0.0)
          goto LABEL_172;
        v2 = v34 < 0.0;
LABEL_54:
        if (*((_DWORD *)v33 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v33) & 1) != 0)
          goto LABEL_94;
        if ((_DWORD)v2)
          v12 = 0x1000000;
        else
          v12 = 0;
        if (!v28)
          goto LABEL_59;
LABEL_48:
        v10 = 0x10000;
        if (v75)
        {
          v5 = v76;
          goto LABEL_60;
        }
        LODWORD(v13) = 0;
        v5 = v76;
      }
    }
    v60 = (_DWORD)v21 == 0;
    goto LABEL_178;
  }
  v42 = 0;
LABEL_83:
  if (v8 != -1)
    ((void (*)(unint64_t *, WTF::StringImpl **))off_1E32C9518[v8])(&v80, &v77);
  return v42;
}

