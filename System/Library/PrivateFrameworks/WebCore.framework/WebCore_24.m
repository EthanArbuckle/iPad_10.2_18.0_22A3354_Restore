uint64_t WebCore::JSDedicatedWorkerGlobalScope::subspaceForImpl(WebCore::JSDedicatedWorkerGlobalScope *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  WTF *v11;
  void *v12;
  int v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  WTF *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 7240);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v7))
  {
    goto LABEL_6;
  }
  MEMORY[0x19AEA534C](v7, a2);
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  v21 = *(_QWORD *)(v9 + 7240);
  if (!v21)
  {
    v14 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v14, &v23, (char *)this + 192, v7 + 128, 3408, 8, &v22);
    v16 = v22;
    v22 = 0;
    if (v16)
      (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
    v17 = v23;
    v23 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 1)
        WTF::fastFree(v17, v15);
      else
        --*(_DWORD *)v17;
    }
    v21 = v14;
    v18 = *(_QWORD *)(v9 + 7240);
    *(_QWORD *)(v9 + 7240) = v14;
    if (v18)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
    v19 = *(unsigned int *)(v7 + 2844);
    if ((_DWORD)v19 == *(_DWORD *)(v7 + 2840))
    {
      v20 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v7 + 2832, v19 + 1, (unint64_t)&v21);
      v19 = *(unsigned int *)(v7 + 2844);
      *(_QWORD *)(*(_QWORD *)(v7 + 2832) + 8 * v19) = *v20;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v7 + 2832) + 8 * v19) = v14;
    }
    *(_DWORD *)(v7 + 2844) = v19 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v10 = *(_QWORD *)(v3 + 7240);
  *(_QWORD *)(v3 + 7240) = v4;
  if (v10)
  {
    v11 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v11, v12);
  }
  v13 = __ldxr((unsigned __int8 *)v7);
  if (v13 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::JSDOMConstructor<WebCore::JSDelayNode>::construct(WebCore::AudioNode **a1, uint64_t a2)
{
  WebCore::AudioNode *v4;
  uint64_t v5;
  uint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  JSCell *v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::AudioNode *v15;
  uint64_t v16;
  BOOL v17;
  char **v18;
  BOOL v19;
  uint64_t v21;
  unint64_t v22;
  JSC::JSCell *v23;
  uint64_t Object;
  JSC::Structure *v25;
  WTF::StringImpl *v26;
  unint64_t v27;
  char v28;
  unsigned __int8 v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  double v34;
  double v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  WebCore::AudioNode *v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  unint64_t v42;
  WebCore::AudioNode *v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  WebCore::AudioNode *v46;
  JSC::VM *v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  WebCore::AudioNode *v50;
  JSC::VM *v51;
  WTF::StringImpl *v52;
  WebCore::JSDOMGlobalObject *v53;
  JSC::VM *v54;
  WebCore::AudioNode *v55;
  WebCore::AudioNode *v56;
  JSC::JSCell *v57;
  JSC::JSGlobalObject *v58;
  JSC::JSObject *v59;
  JSC::JSGlobalObject *v60;
  JSC::VM *v61;
  JSC::JSObject *v62;
  JSC::Structure *v63;
  JSC::VM *FunctionRealm;
  uint64_t v65;
  unsigned int v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char **v71;
  int v72;
  JSC::JSCell *v73;
  unint64_t Structure;
  JSC::Structure *v75;
  JSC::JSCell *v76;
  uint64_t v77;
  unint64_t SubclassStructure;
  JSValue v80;
  WTF::StringImpl *v81;
  char hasExceptionsAfterHandlingTraps;
  JSC::VM *v83;
  double v84;
  uint64_t v85;
  double v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  char v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  WebCore::AudioNode *v95;
  WTF::StringImpl *v96;
  int v97;
  char v98;
  __int16 v99;
  char v100;
  double v101;
  double v102;
  WebCore::AudioNode *v103;
  WTF::StringImpl *v104;
  int v105;
  JSC::VM *v106;
  __int16 v107;
  char v108;
  __int16 v109;
  char v110;
  __int16 v111;
  char v112;
  WebCore::AudioNode *v113;

  v4 = a1[7];
  v106 = v4;
  v5 = *(_QWORD *)(a2 + 24);
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext((WebCore::JSDOMGlobalObject *)a1);
  if (v6 && *(_BYTE *)(v6 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194A3E4C0);
  }
  v11 = v6 - 192;
  if (!v6)
    v11 = 0;
  if ((*(_DWORD *)(*(_QWORD *)(v11 + 680) + 720) & 0x20) == 0)
  {
    JSC::throwTypeError();
    return 2;
  }
  v13 = *(int *)(a2 + 32);
  if ((_DWORD)v13 == 1)
  {
    v80.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)a1, v7);
    return JSC::VM::throwException(v4, (JSC::JSGlobalObject *)a1, v80);
  }
  v14 = *(_QWORD *)(a2 + 48);
  v15 = a1[7];
  v95 = v15;
  if ((v14 & 0xFFFE000000000002) != 0)
    goto LABEL_19;
  v16 = *(unsigned int *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C);
  v17 = *(_DWORD *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C) != 0;
  v18 = (char **)(16 * v16);
  if ((_DWORD)v16)
    v19 = v18 == &WebCore::JSBaseAudioContext::s_info;
  else
    v19 = 1;
  if (!v19)
  {
    do
    {
      v18 = (char **)v18[2];
      v17 = v18 != 0;
    }
    while (v18 != &WebCore::JSBaseAudioContext::s_info && v18 != 0);
  }
  if (!v17)
  {
LABEL_19:
    WebCore::throwArgumentTypeError((uint64_t)a1, (uint64_t)&v95, 0, "context", 8, "DelayNode", 10, v8, 0, 0, "BaseAudioContext", 17);
    return 0;
  }
  v21 = *(_QWORD *)(v14 + 24);
  v22 = v13 - 3;
  if (v22 < 0xFFFFFFFFFFFFFFFELL)
  {
    v23 = *(JSC::JSCell **)(a2 + 56);
    v113 = v15;
    LODWORD(v22) = v23 & 0xFFFFFFF7;
    if (((unint64_t)v23 & 0xFFFFFFFFFFFFFFF7) != 2)
    {
      v94 = v21;
      if (((unint64_t)v23 & 0xFFFE000000000002) == 0)
      {
        Object = JSC::JSCell::getObject(v23);
        if (Object)
        {
          v25 = (JSC::Structure *)Object;
          v93 = v5;
          WTF::AtomStringImpl::addLiteral();
          v27 = JSC::JSObject::get(v25, (JSC::JSGlobalObject *)a1, (unint64_t)v95);
          if (v95)
          {
            if (*(_DWORD *)v95 == 2)
              WTF::StringImpl::destroy(v95, v26);
            else
              *(_DWORD *)v95 -= 2;
          }
          if (*((_DWORD *)v15 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) != 0)
            return 0;
          if (v27 == 10)
          {
            v92 = 0;
          }
          else
          {
            WebCore::convertToInteger<WebCore::IDLUnsignedLong>((JSC::JSGlobalObject *)a1, v27, &v95);
            if (HIDWORD(v95))
              return 0;
            BYTE4(v92) = (_BYTE)v95;
            v89 = v95 >> 8;
            LOBYTE(v92) = 1;
          }
          WTF::AtomStringImpl::addLiteral();
          v36 = v95;
          v38 = JSC::JSObject::get(v25, (JSC::JSGlobalObject *)a1, (unint64_t)v95);
          if (v36)
          {
            if (*(_DWORD *)v36 == 2)
              WTF::StringImpl::destroy(v36, v37);
            else
              *(_DWORD *)v36 -= 2;
          }
          if (*((_DWORD *)v15 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) != 0)
            return 0;
          if (v38 == 10)
          {
            v91 = 0;
            LOBYTE(v31) = 0;
          }
          else
          {
            v95 = a1[7];
            v39 = v95;
            v31 = WebCore::parseEnumeration<WebCore::ChannelCountMode>((JSC::JSGlobalObject *)a1, v38);
            if (*((_DWORD *)v39 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v39) & 1) != 0)
              return 0;
            if ((v31 & 0xFF00000000) == 0)
              goto LABEL_104;
            v88 = v31 >> 8;
            v91 = 1;
          }
          WTF::AtomStringImpl::addLiteral();
          v40 = v95;
          v42 = JSC::JSObject::get(v25, (JSC::JSGlobalObject *)a1, (unint64_t)v95);
          if (v40)
          {
            if (*(_DWORD *)v40 == 2)
              WTF::StringImpl::destroy(v40, v41);
            else
              *(_DWORD *)v40 -= 2;
          }
          if (*((_DWORD *)v15 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) != 0)
            return 0;
          if (v42 == 10)
          {
            v90 = 0;
            LOBYTE(v33) = 0;
LABEL_51:
            WTF::AtomStringImpl::addLiteral();
            v44 = v95;
            v46 = (WebCore::AudioNode *)JSC::JSObject::get(v25, (JSC::JSGlobalObject *)a1, (unint64_t)v95);
            if (v44)
            {
              if (*(_DWORD *)v44 == 2)
                WTF::StringImpl::destroy(v44, v45);
              else
                *(_DWORD *)v44 -= 2;
            }
            if (*((_DWORD *)v15 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) != 0)
              return 0;
            v34 = 0.0;
            if (v46 == (WebCore::AudioNode *)10)
              goto LABEL_61;
            v95 = v46;
            v47 = a1[7];
            v103 = v47;
            if ((unint64_t)v46 >= 0xFFFE000000000000)
            {
              v34 = (double)(int)v46;
            }
            else if ((unint64_t)v46 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              v83 = v47;
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v95, (JSC::JSGlobalObject *)a1);
              v47 = v83;
              v34 = v84;
            }
            else
            {
              *(_QWORD *)&v34 = (char *)v46 - 0x2000000000000;
            }
            if (*((_DWORD *)v47 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v47) & 1) != 0)
              return 0;
            if ((*(_QWORD *)&v34 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
            {
LABEL_61:
              WTF::AtomStringImpl::addLiteral();
              v48 = v95;
              v50 = (WebCore::AudioNode *)JSC::JSObject::get(v25, (JSC::JSGlobalObject *)a1, (unint64_t)v95);
              if (v48)
              {
                if (*(_DWORD *)v48 == 2)
                  WTF::StringImpl::destroy(v48, v49);
                else
                  *(_DWORD *)v48 -= 2;
              }
              if (*((_DWORD *)v15 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) != 0)
                return 0;
              v35 = 1.0;
              if (v50 == (WebCore::AudioNode *)10)
              {
                v5 = v93;
LABEL_72:
                v21 = v94;
                v28 = v92;
                v29 = BYTE4(v92);
                v9 = v88;
                LODWORD(v22) = v89;
                v32 = v90;
                v30 = v91;
                v10 = v87;
                goto LABEL_73;
              }
              v95 = v50;
              v51 = a1[7];
              v103 = v51;
              v5 = v93;
              if ((unint64_t)v50 >= 0xFFFE000000000000)
              {
                v35 = (double)(int)v50;
              }
              else if ((unint64_t)v50 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
              {
                JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v95, (JSC::JSGlobalObject *)a1);
              }
              else
              {
                *(_QWORD *)&v35 = (char *)v50 - 0x2000000000000;
              }
              if (*((_DWORD *)v51 + 20))
              {
                v86 = v35;
                hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v51);
                v35 = v86;
                if ((hasExceptionsAfterHandlingTraps & 1) != 0)
                  return 0;
              }
              if ((*(_QWORD *)&v35 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
                goto LABEL_72;
            }
            JSC::throwTypeError();
            return 0;
          }
          v95 = a1[7];
          v43 = v95;
          v33 = WebCore::parseEnumeration<WebCore::ChannelInterpretation>((JSC::JSGlobalObject *)a1, v42);
          if (*((_DWORD *)v43 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v43) & 1) != 0)
            return 0;
          if ((v33 & 0xFF00000000) != 0)
          {
            v87 = v33 >> 8;
            v90 = 1;
            goto LABEL_51;
          }
        }
      }
LABEL_104:
      JSC::throwTypeError();
      return 0;
    }
  }
  v28 = 0;
  v29 = 0;
  v30 = 0;
  LOBYTE(v31) = 0;
  v32 = 0;
  LOBYTE(v33) = 0;
  v34 = 0.0;
  v35 = 1.0;
LABEL_73:
  *(_WORD *)((char *)&v95 + 5) = v111;
  HIBYTE(v95) = v112;
  *(_WORD *)((char *)&v96 + 5) = v109;
  HIBYTE(v96) = v110;
  v99 = v107;
  v100 = v108;
  LODWORD(v95) = v29 | ((_DWORD)v22 << 8);
  BYTE4(v95) = v28;
  LODWORD(v96) = v31 | (v9 << 8);
  BYTE4(v96) = v30;
  v97 = v33 | (v10 << 8);
  v98 = v32;
  v101 = v35;
  v102 = v34;
  WebCore::DelayNode::create((unsigned int *)(v21 - 32), (uint64_t)&v95, (uint64_t)&v103);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    goto LABEL_120;
  if (!v105)
  {
    v54 = *(JSC::VM **)(v5 + 40);
    v55 = v103;
    v103 = 0;
    v95 = v55;
    if (*(uint64_t (***)(WebCore::AudioNode *__hidden))v55 != off_1E336A9F0)
    {
      __break(0xC471u);
      JUMPOUT(0x194A3E58CLL);
    }
    v12 = (JSCell *)WebCore::createWrapper<WebCore::DelayNode,WebCore::DelayNode>(v54, (uint64_t *)&v95, v53);
    v56 = v95;
    v95 = 0;
    if (v56)
      WebCore::AudioNode::deref(v56);
    goto LABEL_78;
  }
  if (v105 == 1)
  {
    LOBYTE(v95) = (_BYTE)v103;
    v81 = v104;
    v104 = 0;
    v96 = v81;
    if (!*((_QWORD *)v4 + 2))
    {
      WebCore::propagateExceptionSlowPath((JSC *)a1, &v106, (unsigned __int8 *)&v95);
      v81 = v96;
    }
    v96 = 0;
    if (v81)
    {
      if (*(_DWORD *)v81 == 2)
        WTF::StringImpl::destroy(v81, v52);
      else
        *(_DWORD *)v81 -= 2;
    }
    v12 = 0;
LABEL_78:
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    {
LABEL_120:
      v12 = 0;
LABEL_93:
      if (v105 != -1)
        ((void (*)(WebCore::AudioNode **, WebCore::AudioNode **))off_1E3265C18[v105])(&v95, &v103);
      return (uint64_t)v12;
    }
    v57 = *(JSC::JSCell **)(a2 + 40);
    if (((unint64_t)v57 & 0xFFFE000000000002) != 0
      || (v58 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v57)) == 0
      || (v60 = v58, v58 == *(JSC::JSGlobalObject **)(a2 + 24))
      || (v61 = a1[7], FunctionRealm = (JSC::VM *)JSC::getFunctionRealm((JSC *)a1, v58, v59), *((_DWORD *)v61 + 20))
      && (JSC::VM::hasExceptionsAfterHandlingTraps(v61) & 1) != 0)
    {
LABEL_92:
      if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
        goto LABEL_93;
      goto LABEL_120;
    }
    v65 = *((_QWORD *)FunctionRealm + 412);
    if (v65)
    {
      v66 = *(_DWORD *)(v65 - 8);
      v67 = ((unint64_t)&WebCore::JSDelayNode::s_info + ~((_QWORD)&WebCore::JSDelayNode::s_info << 32)) ^ (((unint64_t)&WebCore::JSDelayNode::s_info + ~((_QWORD)&WebCore::JSDelayNode::s_info << 32)) >> 22);
      v68 = 9 * ((v67 + ~(v67 << 13)) ^ ((v67 + ~(v67 << 13)) >> 8));
      v69 = (v68 ^ (v68 >> 15)) + ~((v68 ^ (v68 >> 15)) << 27);
      v70 = v66 & ((v69 >> 31) ^ v69);
      v71 = *(char ***)(v65 + 16 * v70);
      if (v71 == &WebCore::JSDelayNode::s_info)
      {
LABEL_88:
        v62 = *(JSC::JSObject **)(v65 + 16 * v70 + 8);
        if (v62)
        {
LABEL_90:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure((JSC::InternalFunction *)a1, v60, v62, v63);
          if (!*((_DWORD *)v61 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v61) & 1) == 0)
            JSC::JSObject::setStructure(v12, v61, SubclassStructure);
          goto LABEL_92;
        }
      }
      else
      {
        v72 = 1;
        while (v71)
        {
          v70 = ((_DWORD)v70 + v72) & v66;
          v71 = *(char ***)(v65 + 16 * v70);
          ++v72;
          if (v71 == &WebCore::JSDelayNode::s_info)
            goto LABEL_88;
        }
      }
    }
    v73 = (JSC::JSCell *)WebCore::JSAudioNode::prototype(v61, FunctionRealm, v62);
    Structure = WebCore::JSDelayNodePrototype::createStructure((uint64_t *)v61, (uint64_t)FunctionRealm, v73);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v76 = (JSC::JSCell *)WebCore::JSDelayNodePrototype::create(v61, FunctionRealm, Structure, v75);
    v77 = WebCore::JSDelayNode::createStructure((uint64_t *)v61, (uint64_t)FunctionRealm, v76);
    v62 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v77, (uint64_t)&WebCore::JSDelayNode::s_info);
    goto LABEL_90;
  }
  v85 = std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::JSDelayNode::analyzeHeap(v85);
}

uint64_t WebCore::JSDelayNode::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSAudioNode::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSAudioNode::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSAudioNode::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDelayNodePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDelayNodePrototype::create(WebCore::JSDelayNodePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSDelayNode::s_info, (uint64_t)&WebCore::JSDelayNodePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDelayNode>,(WebCore::DOMConstructorID)252>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2016);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSAudioNode>,(WebCore::DOMConstructorID)237>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSDelayNode>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSDelayNode::s_info + ~((_QWORD)&WebCore::JSDelayNode::s_info << 32)) ^ (((unint64_t)&WebCore::JSDelayNode::s_info + ~((_QWORD)&WebCore::JSDelayNode::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSDelayNode::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSDelayNode::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSAudioNode::prototype((WebCore::JSAudioNode *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSDelayNodePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSDelayNodePrototype::create((WebCore::JSDelayNodePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSDelayNode::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSDelayNode::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2016) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDelayNodeConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDelayNodePrototype::s_info != (char **)(16
                                                         * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDelayNode>,(WebCore::DOMConstructorID)252>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsDelayNode_delayTime(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::AudioParam>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WTF **)(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 152) + 48));
}

uint64_t WebCore::JSDelayNode::subspaceForImpl(WebCore::JSDelayNode *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2040);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 2040);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 2040);
    *(_QWORD *)(v8 + 2040) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 2040);
  *(_QWORD *)(v3 + 2040) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::createWrapper<WebCore::DelayNode,WebCore::DelayNode>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSAudioNode *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (!v6)
    goto LABEL_7;
  v7 = *(_DWORD *)(v6 - 8);
  v8 = ((unint64_t)&WebCore::JSDelayNode::s_info + ~((_QWORD)&WebCore::JSDelayNode::s_info << 32)) ^ (((unint64_t)&WebCore::JSDelayNode::s_info + ~((_QWORD)&WebCore::JSDelayNode::s_info << 32)) >> 22);
  v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
  v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
  v11 = v7 & ((v10 >> 31) ^ v10);
  v12 = *(char ***)(v6 + 16 * v11);
  if (v12 != &WebCore::JSDelayNode::s_info)
  {
    v13 = 1;
    while (v12)
    {
      v11 = ((_DWORD)v11 + v13) & v7;
      v12 = *(char ***)(v6 + 16 * v11);
      ++v13;
      if (v12 == &WebCore::JSDelayNode::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
  if (!v14)
  {
LABEL_7:
    v15 = (WebCore::JSAudioNode *)*((_QWORD *)a1 + 7);
    v16 = (JSC::JSCell *)WebCore::JSAudioNode::prototype(v15, a1, a3);
    Structure = WebCore::JSDelayNodePrototype::createStructure((uint64_t *)v15, (uint64_t)a1, v16);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v19 = (JSC::JSCell *)WebCore::JSDelayNodePrototype::create(v15, a1, Structure, v18);
    v20 = WebCore::JSDelayNode::createStructure((uint64_t *)v15, (uint64_t)a1, v19);
    v14 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSDelayNode::s_info);
  }
  v21 = WebCore::JSDelayNode::create(v14, a1, a2);
  WebCore::cacheWrapper<WebCore::AnalyserNode,WebCore::JSAnalyserNode>(*((_QWORD *)a1 + 415), v5, v21);
  return v21;
}

uint64_t WebCore::wrap<WebCore::DelayNode>(int a1, JSC::VM *a2, WebCore::AudioNode *this)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  WebCore::JSDOMGlobalObject *v8;
  WebCore::AudioNode *v9;
  uint64_t result;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  WebCore::AudioNode *v17;
  int v18;
  WebCore::AudioNode *v19;

  v5 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v5 + 48))
  {
    v11 = *(_QWORD *)(v5 + 32);
    if (!v11)
      goto LABEL_5;
    v12 = *(_DWORD *)(v11 - 8);
    v13 = ((unint64_t)this + ~((_QWORD)this << 32)) ^ (((unint64_t)this + ~((_QWORD)this << 32)) >> 22);
    v14 = 9 * ((v13 + ~(v13 << 13)) ^ ((v13 + ~(v13 << 13)) >> 8));
    v15 = (v14 ^ (v14 >> 15)) + ~((v14 ^ (v14 >> 15)) << 27);
    v16 = v12 & ((v15 >> 31) ^ v15);
    v17 = *(WebCore::AudioNode **)(v11 + 16 * v16);
    if (v17 != this)
    {
      v18 = 1;
      while (v17)
      {
        v16 = ((_DWORD)v16 + v18) & v12;
        v17 = *(WebCore::AudioNode **)(v11 + 16 * v16);
        ++v18;
        if (v17 == this)
          goto LABEL_14;
      }
      goto LABEL_5;
    }
LABEL_14:
    v6 = *(_QWORD *)(v11 + 16 * v16 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *((_QWORD *)this + 1);
    if (!v6)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    v7 = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return v7;
  }
LABEL_5:
  WebCore::AudioNode::ref(this);
  v19 = this;
  if (*(uint64_t (***)(WebCore::AudioNode *__hidden))this == off_1E336A9F0)
  {
    v7 = WebCore::createWrapper<WebCore::DelayNode,WebCore::DelayNode>(a2, (uint64_t *)&v19, v8);
    v9 = v19;
    v19 = 0;
    if (v9)
      WebCore::AudioNode::deref(v9);
    return v7;
  }
  result = 257;
  __break(0xC471u);
  return result;
}

WTF::StringImpl **WebCore::JSDeprecatedCSSOMCounter::destroy(WebCore::JSDeprecatedCSSOMCounter *this, JSC::JSCell *a2)
{
  WTF::StringImpl **result;

  result = (WTF::StringImpl **)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
    return WTF::RefCounted<WebCore::PlatformSpeechSynthesisVoice>::deref(result, a2);
  return result;
}

uint64_t WebCore::JSDeprecatedCSSOMCounter::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDeprecatedCSSOMCounterPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDeprecatedCSSOMCounterPrototype::create(WebCore::JSDeprecatedCSSOMCounterPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSDeprecatedCSSOMCounter::s_info, &WebCore::JSDeprecatedCSSOMCounterPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMCounter>,(WebCore::DOMConstructorID)360>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2880);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMCounter>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSDeprecatedCSSOMCounter::s_info
         + ~((_QWORD)&WebCore::JSDeprecatedCSSOMCounter::s_info << 32)) ^ (((unint64_t)&WebCore::JSDeprecatedCSSOMCounter::s_info
                                                                          + ~((_QWORD)&WebCore::JSDeprecatedCSSOMCounter::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSDeprecatedCSSOMCounter::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSDeprecatedCSSOMCounter::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSDeprecatedCSSOMCounterPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSDeprecatedCSSOMCounterPrototype::create((WebCore::JSDeprecatedCSSOMCounterPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSDeprecatedCSSOMCounter::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSDeprecatedCSSOMCounter::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2880) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDeprecatedCSSOMCounterConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDeprecatedCSSOMCounterPrototype::s_info != (char **)(16
                                                                      * *(unsigned int *)(16
                                                                                        * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                        + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMCounter>,(WebCore::DOMConstructorID)360>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsDeprecatedCSSOMCounter_identifier(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 8);
  if (!v4)
    return *v3;
  v5 = *(_DWORD *)v4;
  v6 = *(_DWORD *)(v4 + 4);
  *(_DWORD *)v4 += 2;
  if (v6)
  {
    if (v6 != 1)
    {
LABEL_4:
      v7 = *(_QWORD *)(v2 + 64760);
      if (!v7 || v4 != *(_QWORD *)(v7 + 8))
      {
        v7 = JSC::jsStringWithCacheSlowCase();
        v5 = *(_DWORD *)v4 - 2;
      }
      goto LABEL_7;
    }
    v9 = *(unsigned __int8 **)(v4 + 8);
    if ((*(_BYTE *)(v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
        goto LABEL_4;
      v10 = v11;
    }
    v7 = *(_QWORD *)(v2 + 8 * v10 + 42216);
  }
  else
  {
    v7 = *v3;
  }
LABEL_7:
  if (v5)
    *(_DWORD *)v4 = v5;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, a2);
  return v7;
}

uint64_t WebCore::jsDeprecatedCSSOMCounter_listStyle(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 24);
  if (!v4)
    return *v3;
  v5 = *(_DWORD *)v4;
  v6 = *(_DWORD *)(v4 + 4);
  *(_DWORD *)v4 += 2;
  if (v6)
  {
    if (v6 != 1)
    {
LABEL_4:
      v7 = *(_QWORD *)(v2 + 64760);
      if (!v7 || v4 != *(_QWORD *)(v7 + 8))
      {
        v7 = JSC::jsStringWithCacheSlowCase();
        v5 = *(_DWORD *)v4 - 2;
      }
      goto LABEL_7;
    }
    v9 = *(unsigned __int8 **)(v4 + 8);
    if ((*(_BYTE *)(v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
        goto LABEL_4;
      v10 = v11;
    }
    v7 = *(_QWORD *)(v2 + 8 * v10 + 42216);
  }
  else
  {
    v7 = *v3;
  }
LABEL_7:
  if (v5)
    *(_DWORD *)v4 = v5;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, a2);
  return v7;
}

uint64_t WebCore::jsDeprecatedCSSOMCounter_separator(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 16);
  if (!v4)
    return *v3;
  v5 = *(_DWORD *)v4;
  v6 = *(_DWORD *)(v4 + 4);
  *(_DWORD *)v4 += 2;
  if (v6)
  {
    if (v6 != 1)
    {
LABEL_4:
      v7 = *(_QWORD *)(v2 + 64760);
      if (!v7 || v4 != *(_QWORD *)(v7 + 8))
      {
        v7 = JSC::jsStringWithCacheSlowCase();
        v5 = *(_DWORD *)v4 - 2;
      }
      goto LABEL_7;
    }
    v9 = *(unsigned __int8 **)(v4 + 8);
    if ((*(_BYTE *)(v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
        goto LABEL_4;
      v10 = v11;
    }
    v7 = *(_QWORD *)(v2 + 8 * v10 + 42216);
  }
  else
  {
    v7 = *v3;
  }
LABEL_7:
  if (v5)
    *(_DWORD *)v4 = v5;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, a2);
  return v7;
}

uint64_t WebCore::JSDeprecatedCSSOMCounterOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

WTF::StringImpl **WebCore::JSDeprecatedCSSOMCounterOwner::finalize(uint64_t a1, WTF::StringImpl *a2, uint64_t a3)
{
  WTF::StringImpl **v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WTF::StringImpl **v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;

  v3 = *(WTF::StringImpl ***)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(WTF::StringImpl ***)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(WTF::StringImpl ***)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  return WTF::RefCounted<WebCore::PlatformSpeechSynthesisVoice>::deref(v3, a2);
}

uint64_t WebCore::JSDeprecatedCSSOMCounter::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSDeprecatedCSSOMCounter::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSDeprecatedCSSOMCounter::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

JSC::VM *JSC::reifyStaticProperties<26u>(JSC::VM *result, uint64_t a2, uint64_t a3, JSC::JSObject *this)
{
  JSC::VM *v7;
  uint64_t i;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;

  v7 = result;
  if ((*(_BYTE *)((16 * *(unsigned int *)this) | 0x10) & 3) == 0)
    result = (JSC::VM *)JSC::JSObject::convertToDictionary(this, result);
  for (i = 0; i != 1040; i += 40)
  {
    v9 = *(_QWORD *)(a3 + i + 8);
    if (v9)
    {
      if (v9 == 2)
        JSC::SmallStrings::singleCharacterStringRep((JSC::VM *)((char *)v7 + 41968));
      else
        WTF::AtomStringImpl::addLiteral();
      v10 = v12;
      result = (JSC::VM *)JSC::reifyStaticProperty(v7, a2, (unint64_t *)&v12, a3 + i, (unsigned __int8 *)this);
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          result = (JSC::VM *)WTF::StringImpl::destroy(v10, v11);
        else
          *(_DWORD *)v10 -= 2;
      }
    }
  }
  return result;
}

_DWORD *WebCore::JSDeprecatedCSSOMValue::destroy(WebCore::JSDeprecatedCSSOMValue *this, JSC::JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*result == 1)
      return (_DWORD *)WebCore::DeprecatedCSSOMValue::operator delete((uint64_t)result, a2);
    else
      --*result;
  }
  return result;
}

uint64_t WebCore::JSDeprecatedCSSOMPrimitiveValue::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSDeprecatedCSSOMValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSDeprecatedCSSOMValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSDeprecatedCSSOMValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDeprecatedCSSOMPrimitiveValuePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDeprecatedCSSOMPrimitiveValuePrototype::create(WebCore::JSDeprecatedCSSOMPrimitiveValuePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<35u>(this, (uint64_t)&WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info, (uint64_t)&WebCore::JSDeprecatedCSSOMPrimitiveValuePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMPrimitiveValue>,(WebCore::DOMConstructorID)361>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char **v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t Structure;
  JSC::Structure *v28;
  JSC::JSCell *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v33;
  unint64_t v34;
  WTF::StringImpl *v35;
  unint64_t v36;
  int v37;
  int v38;
  uint64_t v39;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2888);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMValue>,(WebCore::DOMConstructorID)364>(a1, a2);
  v7 = v6;
  LODWORD(v35) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v33 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v33);
    v5[2] = SlowCase + (int)v33;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v35, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMPrimitiveValue>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v34 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v34);
    v10[2848] = v2 + (int)v34;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v35 = 0;
  v36 = v2;
  v37 = -1;
  v38 = 0x1000000;
  v39 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v35);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v35);
  v14 = v35;
  v35 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v35 = 0;
  v36 = v2;
  v37 = -1;
  v38 = 0x1000000;
  v39 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v35);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v17 = *(_QWORD *)(a2 + 3296);
  if (v17)
  {
    v18 = *(_DWORD *)(v17 - 8);
    v19 = ((unint64_t)&WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info
         + ~((_QWORD)&WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info
                                                                                 + ~((_QWORD)&WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info << 32)) >> 22);
    v20 = 9 * ((v19 + ~(v19 << 13)) ^ ((v19 + ~(v19 << 13)) >> 8));
    v21 = (v20 ^ (v20 >> 15)) + ~((v20 ^ (v20 >> 15)) << 27);
    v22 = v18 & ((v21 >> 31) ^ v21);
    v23 = *(char ***)(v17 + 16 * v22);
    if (v23 == &WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info)
    {
LABEL_20:
      v25 = *(_QWORD *)(v17 + 16 * v22 + 8);
      if (v25)
        goto LABEL_22;
    }
    else
    {
      v24 = 1;
      while (v23)
      {
        v22 = ((_DWORD)v22 + v24) & v18;
        v23 = *(char ***)(v17 + 16 * v22);
        ++v24;
        if (v23 == &WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info)
          goto LABEL_20;
      }
    }
  }
  v26 = WebCore::getDOMStructure<WebCore::JSDeprecatedCSSOMValue>((WebCore::JSDeprecatedCSSOMValue *)a1, (JSC::JSCell **)a2);
  Structure = WebCore::JSDeprecatedCSSOMPrimitiveValuePrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(v26 + 48));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v29 = (JSC::JSCell *)WebCore::JSDeprecatedCSSOMPrimitiveValuePrototype::create((WebCore::JSDeprecatedCSSOMPrimitiveValuePrototype *)a1, (JSC::VM *)a2, Structure, v28);
  v30 = WebCore::JSDeprecatedCSSOMPrimitiveValue::createStructure((uint64_t *)a1, a2, v29);
  v25 = WebCore::cacheDOMStructure((JSCell *)a2, v30, (uint64_t)&WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info);
LABEL_22:
  v31 = *(_QWORD *)(v25 + 48);
  v35 = 0;
  v36 = v2;
  v37 = -1;
  v38 = 0x1000000;
  v39 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v31, 14, (uint64_t)&v35);
  JSC::reifyStaticProperties<26u>((JSC::VM *)a1, (uint64_t)&WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info, (uint64_t)&WebCore::JSDeprecatedCSSOMPrimitiveValueConstructorTableValues, (JSC::JSObject *)v2);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2888) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDeprecatedCSSOMPrimitiveValueConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDeprecatedCSSOMPrimitiveValuePrototype::s_info != (char **)(16
                                                                             * *(unsigned int *)(16
                                                                                               * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMPrimitiveValue>,(WebCore::DOMConstructorID)361>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsDeprecatedCSSOMPrimitiveValue_primitiveType(uint64_t a1, uint64_t a2)
{
  return WebCore::DeprecatedCSSOMPrimitiveValue::primitiveType(*(WebCore::DeprecatedCSSOMPrimitiveValue **)(a2 + 24)) | 0xFFFE000000000000;
}

uint64_t WebCore::JSDeprecatedCSSOMPrimitiveValue::subspaceForImpl(WebCore::JSDeprecatedCSSOMPrimitiveValue *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2928);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 2928))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 2928);
    *(_QWORD *)(v8 + 2928) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 2928);
  *(_QWORD *)(v3 + 2928) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSDeprecatedCSSOMValue::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

WTF *WebCore::JSDeprecatedCSSOMRGBColor::destroy(WebCore::JSDeprecatedCSSOMRGBColor *this, JSC::JSCell *a2)
{
  WTF *result;

  result = (WTF *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
    return WTF::RefCounted<WebCore::DeprecatedCSSOMRGBColor>::deref(result, a2);
  return result;
}

uint64_t WebCore::JSDeprecatedCSSOMRGBColor::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDeprecatedCSSOMRGBColorPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDeprecatedCSSOMRGBColorPrototype::create(WebCore::JSDeprecatedCSSOMRGBColorPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSDeprecatedCSSOMRGBColor::s_info, &WebCore::JSDeprecatedCSSOMRGBColorPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMRGBColor>,(WebCore::DOMConstructorID)362>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2896);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMRGBColor>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSDeprecatedCSSOMRGBColor::s_info
         + ~((_QWORD)&WebCore::JSDeprecatedCSSOMRGBColor::s_info << 32)) ^ (((unint64_t)&WebCore::JSDeprecatedCSSOMRGBColor::s_info
                                                                           + ~((_QWORD)&WebCore::JSDeprecatedCSSOMRGBColor::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSDeprecatedCSSOMRGBColor::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSDeprecatedCSSOMRGBColor::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSDeprecatedCSSOMRGBColorPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSDeprecatedCSSOMRGBColorPrototype::create((WebCore::JSDeprecatedCSSOMRGBColorPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSDeprecatedCSSOMRGBColor::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSDeprecatedCSSOMRGBColor::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2896) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDeprecatedCSSOMRGBColorConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDeprecatedCSSOMRGBColorPrototype::s_info != (char **)(16
                                                                       * *(unsigned int *)(16
                                                                                         * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                         + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMRGBColor>,(WebCore::DOMConstructorID)362>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsDeprecatedCSSOMRGBColor_red(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DeprecatedCSSOMValue *a4)
{
  return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WebCore::JSDOMGlobalObject **)(*(_QWORD *)(a2 + 24) + 8), a4);
}

unint64_t WebCore::jsDeprecatedCSSOMRGBColor_green(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DeprecatedCSSOMValue *a4)
{
  return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WebCore::JSDOMGlobalObject **)(*(_QWORD *)(a2 + 24) + 16), a4);
}

unint64_t WebCore::jsDeprecatedCSSOMRGBColor_blue(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DeprecatedCSSOMValue *a4)
{
  return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WebCore::JSDOMGlobalObject **)(*(_QWORD *)(a2 + 24) + 24), a4);
}

unint64_t WebCore::jsDeprecatedCSSOMRGBColor_alpha(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DeprecatedCSSOMValue *a4)
{
  return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WebCore::JSDOMGlobalObject **)(*(_QWORD *)(a2 + 24) + 32), a4);
}

uint64_t WebCore::JSDeprecatedCSSOMRGBColorOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

WTF *WebCore::JSDeprecatedCSSOMRGBColorOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  WTF *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WTF *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;

  v3 = *(WTF **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(WTF **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(WTF **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  return WTF::RefCounted<WebCore::DeprecatedCSSOMRGBColor>::deref(v3, a2);
}

uint64_t WebCore::JSDeprecatedCSSOMRGBColor::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSDeprecatedCSSOMRGBColor::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSDeprecatedCSSOMRGBColor::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

WTF *WebCore::JSDeprecatedCSSOMRect::destroy(WebCore::JSDeprecatedCSSOMRect *this, JSC::JSCell *a2)
{
  WTF *result;

  result = (WTF *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
    return WTF::RefCounted<WebCore::DeprecatedCSSOMRGBColor>::deref(result, a2);
  return result;
}

uint64_t WebCore::JSDeprecatedCSSOMRect::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDeprecatedCSSOMRectPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDeprecatedCSSOMRectPrototype::create(WebCore::JSDeprecatedCSSOMRectPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSDeprecatedCSSOMRect::s_info, &WebCore::JSDeprecatedCSSOMRectPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMRect>,(WebCore::DOMConstructorID)363>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2904);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMRect>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSDeprecatedCSSOMRect::s_info
         + ~((_QWORD)&WebCore::JSDeprecatedCSSOMRect::s_info << 32)) ^ (((unint64_t)&WebCore::JSDeprecatedCSSOMRect::s_info
                                                                       + ~((_QWORD)&WebCore::JSDeprecatedCSSOMRect::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSDeprecatedCSSOMRect::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSDeprecatedCSSOMRect::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSDeprecatedCSSOMRectPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSDeprecatedCSSOMRectPrototype::create((WebCore::JSDeprecatedCSSOMRectPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSDeprecatedCSSOMRect::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSDeprecatedCSSOMRect::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2904) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDeprecatedCSSOMRectConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDeprecatedCSSOMRectPrototype::s_info != (char **)(16
                                                                   * *(unsigned int *)(16
                                                                                     * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                     + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMRect>,(WebCore::DOMConstructorID)363>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsDeprecatedCSSOMRect_top(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DeprecatedCSSOMValue *a4)
{
  WebCore::JSDOMGlobalObject *v4;

  v4 = *(WebCore::JSDOMGlobalObject **)(*(_QWORD *)(a2 + 24) + 8);
  if (v4)
    return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v4, a4);
  else
    return 2;
}

unint64_t WebCore::jsDeprecatedCSSOMRect_right(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DeprecatedCSSOMValue *a4)
{
  WebCore::JSDOMGlobalObject *v4;

  v4 = *(WebCore::JSDOMGlobalObject **)(*(_QWORD *)(a2 + 24) + 16);
  if (v4)
    return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v4, a4);
  else
    return 2;
}

unint64_t WebCore::jsDeprecatedCSSOMRect_bottom(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DeprecatedCSSOMValue *a4)
{
  WebCore::JSDOMGlobalObject *v4;

  v4 = *(WebCore::JSDOMGlobalObject **)(*(_QWORD *)(a2 + 24) + 24);
  if (v4)
    return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v4, a4);
  else
    return 2;
}

unint64_t WebCore::jsDeprecatedCSSOMRect_left(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DeprecatedCSSOMValue *a4)
{
  WebCore::JSDOMGlobalObject *v4;

  v4 = *(WebCore::JSDOMGlobalObject **)(*(_QWORD *)(a2 + 24) + 32);
  if (v4)
    return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v4, a4);
  else
    return 2;
}

uint64_t WebCore::JSDeprecatedCSSOMRectOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

WTF *WebCore::JSDeprecatedCSSOMRectOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  WTF *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WTF *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;

  v3 = *(WTF **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(WTF **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(WTF **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  return WTF::RefCounted<WebCore::DeprecatedCSSOMRGBColor>::deref(v3, a2);
}

uint64_t WebCore::JSDeprecatedCSSOMRect::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSDeprecatedCSSOMRect::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSDeprecatedCSSOMRect::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

JSC::VM *WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMValue>::initializeProperties(uint64_t a1, uint64_t a2, JSC::JSCell **a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v13;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v13);
  v9 = v13;
  v13 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v11 = WebCore::getDOMStructure<WebCore::JSDeprecatedCSSOMValue>((WebCore::JSDeprecatedCSSOMValue *)a2, a3);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v11 + 48), 14);
  return JSC::reifyStaticProperties<4u>((JSC::VM *)a2, (uint64_t)&WebCore::JSDeprecatedCSSOMValue::s_info, &WebCore::JSDeprecatedCSSOMValueConstructorTableValues, (JSC::JSObject *)a1);
}

WTF::StringImpl *WebCore::JSDeprecatedCSSOMValuePrototype::finishCreation(WebCore::JSDeprecatedCSSOMValuePrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<7u>(a2, (uint64_t)&WebCore::JSDeprecatedCSSOMValue::s_info, &WebCore::JSDeprecatedCSSOMValuePrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

unint64_t WebCore::JSDeprecatedCSSOMValue::createPrototype(WebCore::JSDeprecatedCSSOMValue *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t v4;
  WebCore::JSDOMGlobalObject *v5;
  JSC::Structure *v6;

  v4 = JSC::Structure::create((uint64_t *)this, (int)a2, a2[82]);
  *(_DWORD *)(v4 + 16) |= 0x80000u;
  return WebCore::JSDeprecatedCSSOMValuePrototype::create(this, v4, v5, v6);
}

unint64_t WebCore::JSDeprecatedCSSOMValuePrototype::create(WebCore::JSDeprecatedCSSOMValuePrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSDeprecatedCSSOMValuePrototype::finishCreation((WebCore::JSDeprecatedCSSOMValuePrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMValue>,(WebCore::DOMConstructorID)364>(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  uint64_t Structure;
  JSC::Heap *v6;
  unint64_t v7;

  result = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2912);
  if (!result)
  {
    Structure = WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMValue>::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 664));
    result = WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMValue>::create(a1, Structure, (JSC::JSCell **)a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2912) = result;
    if (result)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
      {
        v6 = (JSC::Heap *)(a1 + 192);
        v7 = result;
        JSC::Heap::writeBarrierSlowPath(v6, (const JSCell *)a2);
        return v7;
      }
    }
  }
  return result;
}

unint64_t WebCore::jsDeprecatedCSSOMValueConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDeprecatedCSSOMValuePrototype::s_info != (char **)(16
                                                                    * *(unsigned int *)(16
                                                                                      * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                      + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMValue>,(WebCore::DOMConstructorID)364>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsDeprecatedCSSOMValue_cssText(uint64_t a1, uint64_t a2, WTF::StringBuilder *a3, WTF::String *a4, __n128 a5)
{
  uint64_t v6;
  unsigned int v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;
  WTF::StringImpl *v17;

  v6 = *(_QWORD *)(a2 + 24);
  v7 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 3;
  if (v7 == 2)
  {
    WebCore::DeprecatedCSSOMValueList::cssText((WebCore::DeprecatedCSSOMValueList *)v6, a3, a4, &v17, a5);
LABEL_5:
    v8 = v17;
    if (v17)
      goto LABEL_6;
    return 2;
  }
  if (v7 <= 1)
  {
    _ZN7WebCore8CSSValue12visitDerivedIZNKS0_12visitDerivedIZNKS0_7cssTextEvE3__0EEDcOT_EUlRS5_E_EES4_S6_((WebCore *)&v17, *(_QWORD *)(v6 + 32), a3, a4, a5);
    goto LABEL_5;
  }
  v8 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
  if (*MEMORY[0x1E0CBF738])
    *(_DWORD *)v8 += 2;
  v17 = v8;
  if (!v8)
    return 2;
LABEL_6:
  v9 = *(_QWORD *)(a1 + 56);
  v10 = (uint64_t *)(v9 + 41968);
  v11 = *((_DWORD *)v8 + 1);
  if (!v11)
    goto LABEL_21;
  if (v11 == 1)
  {
    v13 = (unsigned __int8 *)*((_QWORD *)v8 + 1);
    if ((*((_BYTE *)v8 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v15 = *(unsigned __int16 *)v13;
      if (v15 > 0xFF)
        goto LABEL_8;
      v14 = v15;
    }
    v10 = (uint64_t *)(v9 + 8 * v14 + 42216);
LABEL_21:
    v12 = *v10;
    goto LABEL_22;
  }
LABEL_8:
  v12 = *(_QWORD *)(v9 + 64760);
  if (!v12 || v8 != *(WTF::StringImpl **)(v12 + 8))
  {
    v12 = JSC::jsStringWithCacheSlowCase();
    v8 = v17;
    v17 = 0;
    if (!v8)
      return v12;
    goto LABEL_23;
  }
LABEL_22:
  v17 = 0;
LABEL_23:
  if (*(_DWORD *)v8 == 2)
    WTF::StringImpl::destroy(v8, v8);
  else
    *(_DWORD *)v8 -= 2;
  return v12;
}

BOOL WebCore::setJSDeprecatedCSSOMValue_cssText(JSC::JSGlobalObject *a1, unint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v13;
  int v14;
  char v15;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSDeprecatedCSSOMValue::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSDeprecatedCSSOMValue::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  WebCore::Converter<WebCore::IDLNullable<WebCore::IDLDOMString>>::convert(a1, (unint64_t)this, (uint64_t)&v13);
  v9 = v14;
  v10 = v14 == 0;
  if (v14)
    goto LABEL_19;
  v11 = v13;
  v13 = 0;
  if (!v11)
  {
    v9 = 0;
    goto LABEL_16;
  }
  if (*(_DWORD *)v11 == 2)
  {
    WTF::StringImpl::destroy(v11, v8);
    v9 = v14;
LABEL_19:
    if (v9 == -1)
      return v10;
    goto LABEL_16;
  }
  v9 = 0;
  *(_DWORD *)v11 -= 2;
LABEL_16:
  ((void (*)(char *, WTF::StringImpl **))off_1E325A258[v9])(&v15, &v13);
  return v10;
}

unint64_t WebCore::jsDeprecatedCSSOMValue_cssValueType(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unsigned __int16 v6;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = (*(unsigned __int8 *)(v2 + 16) >> 2) & 3;
  if (v3 == 2)
    return 0xFFFE000000000002;
  if (v3 == 1)
    return 0xFFFE000000000001;
  if (v3)
    return 0xFFFE000000000003;
  v4 = *(_QWORD *)(v2 + 32);
  if (((*(unsigned __int16 *)(v4 + 4) | (*(unsigned __int8 *)(v4 + 6) << 16)) & 0x3F87F) != 0x50)
    return 0xFFFE000000000003;
  v6 = *(_WORD *)(v4 + 8) - 1;
  if (v6 >= 4u)
    return 0xFFFE000000000003;
  return qword_1968BF6A8[(__int16)v6];
}

uint64_t WebCore::JSDeprecatedCSSOMValue::subspaceForImpl(WebCore::JSDeprecatedCSSOMValue *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2952);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 2952))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 2952);
    *(_QWORD *)(v8 + 2952) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 2952);
  *(_QWORD *)(v3 + 2952) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

_QWORD *WebCore::JSDeprecatedCSSOMValueOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _QWORD *result;

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = (~(v3 << 32) + v3) ^ ((unint64_t)(~(v3 << 32) + v3) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_QWORD *)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_QWORD *)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
    return (_QWORD *)WebCore::DeprecatedCSSOMValue::operator delete(v3, a2);
  --*(_DWORD *)v3;
  return result;
}

uint64_t WebCore::JSDeprecatedCSSOMValue::toWrapped(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL4 v3;
  char **v4;
  BOOL v5;

  if ((a2 & 0xFFFE000000000002) != 0)
    return 0;
  v2 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v3 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v4 = (char **)(16 * v2);
  if ((_DWORD)v2)
    v5 = v4 == &WebCore::JSDeprecatedCSSOMValue::s_info;
  else
    v5 = 1;
  if (!v5)
  {
    do
    {
      v4 = (char **)v4[2];
      v3 = v4 != 0;
    }
    while (v4 != &WebCore::JSDeprecatedCSSOMValue::s_info && v4 != 0);
  }
  if (v3)
    return *(_QWORD *)(a2 + 24);
  else
    return 0;
}

BOOL WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMValueList>::initializeProperties(uint64_t a1, uint64_t a2, JSC::JSCell **a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v13;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v13);
  v9 = v13;
  v13 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v11 = WebCore::getDOMStructure<WebCore::JSDeprecatedCSSOMValueList>((WebCore::JSDeprecatedCSSOMValueList *)a2, a3);
  return JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v11 + 48), 14);
}

WTF::StringImpl *WebCore::JSDeprecatedCSSOMValueListPrototype::finishCreation(WebCore::JSDeprecatedCSSOMValueListPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t Direct;
  WTF::StringImpl *v8;
  unint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *result;
  WTF::StringImpl *v13;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(a2, (uint64_t)&WebCore::JSDeprecatedCSSOMValueList::s_info, &WebCore::JSDeprecatedCSSOMValueListPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2712);
  v5 = *(_QWORD *)(*(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28) + 672);
  v6 = (_DWORD *)MEMORY[0x1E0CBEBF0];
  *MEMORY[0x1E0CBEBF0] += 2;
  Direct = JSC::JSObject::getDirect(v5, a2, (unint64_t)v6);
  JSC::JSObject::putDirect((unsigned __int8 *)this, a2, v4, Direct, 4);
  if (*v6 == 2)
    WTF::StringImpl::destroy(MEMORY[0x1E0CBEBF0], v8);
  else
    *v6 -= 2;
  v9 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v10 = JSC::jsNontrivialString((uint64_t)a2, &v13);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v9, v10, 6);
  result = v13;
  v13 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v11);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSDeprecatedCSSOMValueList::put(uint64_t a1, WebCore::JSDOMGlobalObject *a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  WebCore::JSDOMGlobalObject *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  JSC::VM *v21;
  _BYTE *v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t result;
  unsigned __int16 *v26;
  uint64_t v27;
  unsigned int v28;
  BOOL v29;
  unsigned __int8 *v30;
  uint64_t v31;
  unsigned int v32;
  int OwnProperty;
  int v34;
  int v35;
  char hasExceptionsAfterHandlingTraps;
  char v37[16];
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v8 = *(_QWORD *)(a5 + 8);
  if (v8 != a1)
    return JSC::JSObject::put();
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSDOMGlobalObject::s_info && v11 != 0);
  }
  if (v10)
    v14 = a2;
  else
    v14 = 0;
  v15 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v14);
  if (v15)
  {
    v16 = v15;
    if (!*(_BYTE *)(v15 + 274))
    {
      v17 = *(_BYTE **)(v15 + 496);
      if (!v17)
        v17 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v16 - 192));
      if (*(_QWORD *)v17)
      {
        v18 = *(_QWORD *)(*(_QWORD *)v17 + 8);
        if (v18)
        {
          v19 = *(_QWORD *)(v18 + 680);
          if (*(_BYTE *)(v19 + 243))
          {
            if (!*(_BYTE *)(v19 + 242))
              goto LABEL_23;
          }
          else if ((*(_QWORD *)(v19 + 688) & 0x80000) == 0)
          {
            goto LABEL_23;
          }
          if (v17[65])
            return JSC::JSObject::put();
        }
      }
    }
  }
LABEL_23:
  if (!a3)
    return JSC::JSObject::put();
  v20 = *(_DWORD *)(a3 + 16);
  if ((v20 & 0x20) != 0)
    return JSC::JSObject::put();
  v21 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v22 = *(_BYTE **)(a3 + 8);
  v23 = *(unsigned int *)(a3 + 4);
  if ((v20 & 4) != 0)
  {
    if (!(_DWORD)v23)
      return JSC::JSObject::put();
    v24 = *v22 - 48;
    if (v24 > 9 || v23 >= 2 && *v22 == 48)
      return JSC::JSObject::put();
    v30 = v22 + 1;
    v31 = v23 - 1;
    while (v31)
    {
      if (v24 <= 0x19999999)
      {
        v32 = *v30 - 48;
        if (v32 <= 9)
        {
          v29 = __CFADD__(v32, 10 * v24);
          v24 = v32 + 10 * v24;
          ++v30;
          --v31;
          if (!v29)
            continue;
        }
      }
      return JSC::JSObject::put();
    }
  }
  else
  {
    if (!(_DWORD)v23)
      return JSC::JSObject::put();
    v24 = *(unsigned __int16 *)v22 - 48;
    if (v24 > 9 || v23 >= 2 && *(_WORD *)v22 == 48)
      return JSC::JSObject::put();
    v26 = (unsigned __int16 *)(v22 + 2);
    v27 = v23 - 1;
    while (v27)
    {
      if (v24 <= 0x19999999)
      {
        v28 = *v26 - 48;
        if (v28 <= 9)
        {
          v29 = __CFADD__(v28, 10 * v24);
          v24 = v28 + 10 * v24;
          ++v26;
          --v27;
          if (!v29)
            continue;
        }
      }
      return JSC::JSObject::put();
    }
  }
  if (v24 == -1)
    return JSC::JSObject::put();
  v48 = 0;
  v49 = 0;
  v50 = 0;
  v51 = 14;
  v38 = 0xFFFFFFFF00000000;
  v40 = 0;
  v41 = 0;
  v39 = v8;
  v42 = 0x20000;
  v43 = 0;
  LOBYTE(v44) = 0;
  v45 = 0;
  v46 = 0;
  v47 = 0;
  OwnProperty = WebCore::JSDeprecatedCSSOMValueList::legacyPlatformObjectGetOwnProperty(a1, (JSC::VM **)a2, a3, (uint64_t)v37);
  if (*((_DWORD *)v21 + 20)
    && (v35 = OwnProperty,
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v21),
        OwnProperty = v35,
        (hasExceptionsAfterHandlingTraps & 1) != 0)
    || OwnProperty
    && (JSC::PropertyDescriptor::setPropertySlot(), *((_DWORD *)v21 + 20))
    && (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) != 0)
  {
    result = 0;
  }
  else
  {
    result = JSC::ordinarySetWithOwnDescriptor();
  }
  if (v45)
  {
    v34 = *(_DWORD *)(v44 + 4);
    if (!v34)
    {
      __break(0xC471u);
      JUMPOUT(0x194A43328);
    }
    *(_DWORD *)(v44 + 4) = v34 - 1;
  }
  return result;
}

uint64_t WebCore::JSDeprecatedCSSOMValueList::putByIndex(JSC::JSObject *a1, JSC::JSCell *a2, JSC::JSGlobalObject *a3, uint64_t a4, objc_class *a5)
{
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  WebCore::JSDOMGlobalObject *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  JSValue v24;
  WTF::StringImpl *v25;

  v10 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSDOMGlobalObject::s_info && v12 != 0);
  }
  if (v11)
    v15 = a2;
  else
    v15 = 0;
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v15);
  if (!v16)
    goto LABEL_22;
  v17 = v16;
  if (*(_BYTE *)(v16 + 274))
    goto LABEL_22;
  v18 = *(_BYTE **)(v16 + 496);
  if (!v18)
    v18 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v17 - 192));
  if (!*(_QWORD *)v18)
    goto LABEL_22;
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
  if (!v19)
    goto LABEL_22;
  v20 = *(_QWORD *)(v19 + 680);
  if (*(_BYTE *)(v20 + 243))
  {
    if (!*(_BYTE *)(v20 + 242))
      goto LABEL_22;
  }
  else if ((*(_QWORD *)(v20 + 688) & 0x80000) == 0)
  {
    goto LABEL_22;
  }
  if (v18[65])
  {
    v24.super.isa = a5;
    return JSC::JSObject::putByIndex(a1, a2, a3, a4, v24);
  }
LABEL_22:
  JSC::Identifier::from();
  v22 = JSC::ordinarySetSlow();
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v21);
    else
      *(_DWORD *)v25 -= 2;
  }
  return v22;
}

uint64_t WebCore::JSDeprecatedCSSOMValueList::deleteProperty(uint64_t a1, WebCore::JSDOMGlobalObject *a2, uint64_t a3)
{
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::JSDOMGlobalObject *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _BYTE *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned __int16 *v25;
  uint64_t v26;
  unsigned int v27;
  BOOL v28;
  unsigned int v29;
  uint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unsigned int v35;

  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDOMGlobalObject::s_info && v6 != 0);
  }
  v9 = *(_QWORD *)(a1 + 24);
  if (v5)
    v10 = a2;
  else
    v10 = 0;
  v11 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v10);
  if (v11)
  {
    v12 = v11;
    if (!*(_BYTE *)(v11 + 274))
    {
      v13 = *(_BYTE **)(v11 + 496);
      if (!v13)
        v13 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v12 - 192));
      if (*(_QWORD *)v13)
      {
        v14 = *(_QWORD *)(*(_QWORD *)v13 + 8);
        if (v14)
        {
          v15 = *(_QWORD *)(v14 + 680);
          if (*(_BYTE *)(v15 + 243))
          {
            if (*(_BYTE *)(v15 + 242))
            {
LABEL_21:
              if (v13[65])
                return JSC::JSObject::deleteProperty();
            }
          }
          else if ((*(_QWORD *)(v15 + 688) & 0x80000) != 0)
          {
            goto LABEL_21;
          }
        }
      }
    }
  }
  if (a3)
  {
    v16 = *(_DWORD *)(a3 + 16);
    if ((v16 & 0x20) == 0)
    {
      v17 = *(_BYTE **)(a3 + 8);
      v18 = *(unsigned int *)(a3 + 4);
      if ((v16 & 4) != 0)
      {
        if (!(_DWORD)v18 || (v29 = *v17 - 48, v29 > 9) || v18 >= 2 && *v17 == 48)
        {
LABEL_46:
          v30 = 0;
          v31 = 0;
          v32 = 0;
        }
        else
        {
          v33 = v18 - 1;
          v34 = v17 + 1;
          while (v33)
          {
            if (v29 > 0x19999999)
              goto LABEL_46;
            v35 = *v34 - 48;
            if (v35 > 9)
              goto LABEL_46;
            v30 = 0;
            v31 = 0;
            v32 = 0;
            v28 = __CFADD__(v35, 10 * v29);
            v29 = v35 + 10 * v29;
            --v33;
            ++v34;
            if (v28)
              goto LABEL_47;
          }
          v30 = 0x100000000;
          if (v29 == -1)
          {
            v30 = 0;
            v31 = 0;
          }
          else
          {
            v31 = v29;
          }
          if (v29 == -1)
            v32 = 0;
          else
            v32 = v29 & 0xFFFFFF00;
        }
LABEL_47:
        v23 = v32 | v31;
        if ((v30 & 0x100000000) != 0)
          return *(_DWORD *)(v9 + 44) <= v23;
      }
      else
      {
        if ((_DWORD)v18
          && (v19 = *(unsigned __int16 *)v17 - 48, v19 <= 9)
          && (v18 < 2 || *(_WORD *)v17 != 48))
        {
          v25 = (unsigned __int16 *)(v17 + 2);
          v26 = v18 - 1;
          while (v26)
          {
            if (v19 <= 0x19999999)
            {
              v27 = *v25 - 48;
              if (v27 <= 9)
              {
                v28 = __CFADD__(v27, 10 * v19);
                v19 = v27 + 10 * v19;
                ++v25;
                --v26;
                if (!v28)
                  continue;
              }
            }
            goto LABEL_29;
          }
          v7 = v19 == -1;
          v22 = v19 & 0xFFFFFF00;
          v21 = v19;
          v20 = 0x100000000;
          if (v7)
          {
            v20 = 0;
            v21 = 0;
            v22 = 0;
          }
        }
        else
        {
LABEL_29:
          v20 = 0;
          v21 = 0;
          v22 = 0;
        }
        v23 = v22 | v21;
        if ((v20 & 0x100000000) != 0)
          return *(_DWORD *)(v9 + 44) <= v23;
      }
    }
  }
  return JSC::JSObject::deleteProperty();
}

uint64_t WebCore::JSDeprecatedCSSOMValueList::deletePropertyByIndex(WebCore::JSDeprecatedCSSOMValueList *this, JSC::JSCell *a2, JSC::JSGlobalObject *a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = *((_QWORD *)this + 3);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (!v13)
    return *(_DWORD *)(v11 + 44) <= a3;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
    return *(_DWORD *)(v11 + 44) <= a3;
  v15 = *(_BYTE **)(v13 + 496);
  if (!v15)
    v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
  if (!*(_QWORD *)v15)
    return *(_DWORD *)(v11 + 44) <= a3;
  v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
  if (!v16)
    return *(_DWORD *)(v11 + 44) <= a3;
  v17 = *(_QWORD *)(v16 + 680);
  if (*(_BYTE *)(v17 + 243))
  {
    if (!*(_BYTE *)(v17 + 242))
      return *(_DWORD *)(v11 + 44) <= a3;
  }
  else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
  {
    return *(_DWORD *)(v11 + 44) <= a3;
  }
  if (!v15[65])
    return *(_DWORD *)(v11 + 44) <= a3;
  return JSC::JSObject::deletePropertyByIndex(this, a2, a3);
}

uint64_t WebCore::JSDeprecatedCSSOMValueList::getOwnPropertySlotByIndex(WebCore::JSDeprecatedCSSOMValueList *this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5)
{
  uint64_t v7;
  WebCore::JSDOMGlobalObject *v8;
  JSC::VM *v9;
  unint64_t v10;
  uint64_t result;

  if ((_DWORD)a3 == -1)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v7 = *((_QWORD *)this + 3);
  if (*(_DWORD *)(v7 + 44) <= a3)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v8 = *(WebCore::JSDOMGlobalObject **)(*(_QWORD *)(v7 + 32) + 8 * a3);
  if (!v8)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v9 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v10 = WebCore::toJS(a2, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28), v8, (WebCore::DeprecatedCSSOMValue *)a4);
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    return 0;
  *(_QWORD *)a4 = v10;
  *(_DWORD *)(a4 + 16) = 2;
  *(_QWORD *)(a4 + 32) = this;
  result = 1;
  *(_BYTE *)(a4 + 49) = 1;
  return result;
}

uint64_t WebCore::JSDeprecatedCSSOMValueList::getOwnPropertyNames(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  int v4;
  int v5;
  uint64_t *v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  WTF::StringImpl **v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  unsigned int v32;
  int v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44[2];
  char v45;
  WTF::StringImpl *v46;

  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 24) + 44);
  if (v4)
  {
    v5 = 0;
    v6 = a3 + 1;
    while (1)
    {
      JSC::Identifier::from();
      v8 = v43;
      v46 = v43;
      v9 = *((_DWORD *)v43 + 4);
      if ((v9 & 0x20) != 0)
      {
        if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*((_BYTE *)v43 + 36) & 4) != 0)
          goto LABEL_60;
      }
      else if ((a3[3] & 2) == 0)
      {
        goto LABEL_60;
      }
      v10 = *a3;
      v11 = *(unsigned int *)(*a3 + 20);
      if (v11 <= 0x13)
      {
        if ((_DWORD)v11)
        {
          v12 = *(WTF::StringImpl ***)(v10 + 8);
          while (*v12 != v43)
          {
            ++v12;
            if (!--v11)
              goto LABEL_19;
          }
          goto LABEL_60;
        }
LABEL_19:
        if ((v9 & 0x20) != 0)
        {
          v33 = *(_DWORD *)v8 + 2;
        }
        else
        {
          if ((v9 & 0x10) != 0)
          {
            *(_DWORD *)v8 += 2;
          }
          else
          {
            WTF::AtomStringImpl::addSlowCase();
            v8 = v44[0];
          }
          v33 = *(_DWORD *)v8;
          *(_DWORD *)v8 += 2;
          if (!v33)
          {
            WTF::StringImpl::destroy(v8, v7);
LABEL_54:
            v34 = (uint64_t *)(v10 + 8);
            v44[0] = v8;
            v35 = *(unsigned int *)(v10 + 20);
            if ((_DWORD)v35 == *(_DWORD *)(v10 + 16))
            {
              v36 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v34, v35 + 1, (unint64_t)v44);
              v35 = *(unsigned int *)(v10 + 20);
              v37 = *(_QWORD *)(v10 + 8);
              v38 = *v36;
              *v36 = 0;
              *(_QWORD *)(v37 + 8 * v35) = v38;
            }
            else
            {
              v39 = *v34;
              v44[0] = 0;
              *(_QWORD *)(v39 + 8 * v35) = v8;
            }
            *(_DWORD *)(v10 + 20) = v35 + 1;
            v40 = v44[0];
            v44[0] = 0;
            if (v40)
            {
              if (*(_DWORD *)v40 == 2)
                WTF::StringImpl::destroy(v40, v7);
              else
                *(_DWORD *)v40 -= 2;
            }
            goto LABEL_60;
          }
        }
        *(_DWORD *)v8 = v33;
        goto LABEL_54;
      }
      if (!*v6 || !*(_DWORD *)(*v6 - 12))
        break;
LABEL_17:
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v46, (uint64_t)v44);
      if (v45)
      {
        v8 = v46;
        v10 = *a3;
        v9 = *((_DWORD *)v46 + 4);
        goto LABEL_19;
      }
LABEL_60:
      v41 = v43;
      v43 = 0;
      if (v41)
      {
        if (*(_DWORD *)v41 == 2)
          WTF::StringImpl::destroy(v41, v7);
        else
          *(_DWORD *)v41 -= 2;
      }
      if (++v5 == v4)
        return JSC::JSObject::getOwnPropertyNames();
    }
    v13 = *(uint64_t **)(v10 + 8);
    v14 = &v13[v11];
    while (1)
    {
      v15 = *v13;
      v16 = *v6;
      if (*v6
        || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, 8u, 0), (v16 = *v6) != 0))
      {
        v17 = *(_DWORD *)(v16 - 8);
      }
      else
      {
        v17 = 0;
      }
      v18 = (~(v15 << 32) + v15) ^ ((unint64_t)(~(v15 << 32) + v15) >> 22);
      v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
      v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
      v21 = v17 & ((v20 >> 31) ^ v20);
      v22 = (uint64_t *)(v16 + 8 * v21);
      v23 = *v22;
      if (*v22)
      {
        v24 = 0;
        v25 = 1;
        while (v23 != v15)
        {
          if (v23 == -1)
            v24 = v22;
          v21 = (v21 + v25) & v17;
          v22 = (uint64_t *)(v16 + 8 * v21);
          v23 = *v22;
          ++v25;
          if (!*v22)
          {
            if (v24)
            {
              *v24 = 0;
              --*(_DWORD *)(*v6 - 16);
              v22 = v24;
            }
            goto LABEL_34;
          }
        }
        goto LABEL_47;
      }
LABEL_34:
      *v22 = v15;
      v26 = *v6;
      v27 = *v6 ? *(_DWORD *)(v26 - 12) + 1 : 1;
      *(_DWORD *)(v26 - 12) = v27;
      v28 = *v6;
      v29 = *v6 ? *(_DWORD *)(v28 - 12) : 0;
      v30 = (*(_DWORD *)(v28 - 16) + v29);
      v31 = *(unsigned int *)(v28 - 4);
      if (v31 > 0x400)
        break;
      if (3 * v31 <= 4 * v30)
      {
        if ((_DWORD)v31)
          goto LABEL_43;
        v32 = 8;
        goto LABEL_46;
      }
LABEL_47:
      if (++v13 == v14)
        goto LABEL_17;
    }
    if (v31 > 2 * v30)
      goto LABEL_47;
LABEL_43:
    v32 = (_DWORD)v31 << (6 * *(_DWORD *)(v28 - 12) >= (2 * v31));
LABEL_46:
    WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, v32, v22);
    goto LABEL_47;
  }
  return JSC::JSObject::getOwnPropertyNames();
}

uint64_t WebCore::JSDeprecatedCSSOMValueList::defineOwnProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  _BYTE *v6;
  uint64_t v7;
  unsigned int v8;
  unsigned __int16 *v10;
  uint64_t v11;
  unsigned int v12;
  BOOL v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;

  if (!a3)
    return JSC::JSObject::defineOwnProperty();
  v5 = *(_DWORD *)(a3 + 16);
  if ((v5 & 0x20) != 0)
    return JSC::JSObject::defineOwnProperty();
  v6 = *(_BYTE **)(a3 + 8);
  v7 = *(unsigned int *)(a3 + 4);
  if ((v5 & 4) != 0)
  {
    if (!(_DWORD)v7)
      return JSC::JSObject::defineOwnProperty();
    v8 = *v6 - 48;
    if (v8 > 9 || v7 >= 2 && *v6 == 48)
      return JSC::JSObject::defineOwnProperty();
    v14 = v7 - 1;
    v15 = v6 + 1;
    while (v14)
    {
      if (v8 <= 0x19999999)
      {
        v16 = *v15 - 48;
        if (v16 <= 9)
        {
          v13 = __CFADD__(v16, 10 * v8);
          v8 = v16 + 10 * v8;
          --v14;
          ++v15;
          if (!v13)
            continue;
        }
      }
      return JSC::JSObject::defineOwnProperty();
    }
  }
  else
  {
    if (!(_DWORD)v7)
      return JSC::JSObject::defineOwnProperty();
    v8 = *(unsigned __int16 *)v6 - 48;
    if (v8 > 9 || v7 >= 2 && *(_WORD *)v6 == 48)
      return JSC::JSObject::defineOwnProperty();
    v10 = (unsigned __int16 *)(v6 + 2);
    v11 = v7 - 1;
    while (v11)
    {
      if (v8 <= 0x19999999)
      {
        v12 = *v10 - 48;
        if (v12 <= 9)
        {
          v13 = __CFADD__(v12, 10 * v8);
          v8 = v12 + 10 * v8;
          ++v10;
          --v11;
          if (!v13)
            continue;
        }
      }
      return JSC::JSObject::defineOwnProperty();
    }
  }
  if (v8 == -1)
    return JSC::JSObject::defineOwnProperty();
  if (a5)
    JSC::throwTypeError();
  return 0;
}

uint64_t WebCore::JSDeprecatedCSSOMValueList::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSDeprecatedCSSOMValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSDeprecatedCSSOMValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSDeprecatedCSSOMValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSDeprecatedCSSOMValueList::createPrototype(WebCore::JSDeprecatedCSSOMValueList *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  int v3;
  uint64_t v5;
  unint64_t v6;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v3 = (int)a2;
  v5 = WebCore::getDOMStructure<WebCore::JSDeprecatedCSSOMValue>(this, a2);
  v6 = JSC::Structure::create((uint64_t *)this, v3, *(JSC::JSCell **)(v5 + 48));
  *(_DWORD *)(v6 + 16) |= 0x80000u;
  return WebCore::JSDeprecatedCSSOMValueListPrototype::create(this, v6, v7, v8);
}

unint64_t WebCore::JSDeprecatedCSSOMValueListPrototype::create(WebCore::JSDeprecatedCSSOMValueListPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSDeprecatedCSSOMValueListPrototype::finishCreation((WebCore::JSDeprecatedCSSOMValueListPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMValueList>,(WebCore::DOMConstructorID)365>(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  JSC::JSCell *v5;
  uint64_t Structure;
  JSC::Heap *v7;
  unint64_t v8;

  result = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2920);
  if (!result)
  {
    v5 = (JSC::JSCell *)WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMValue>,(WebCore::DOMConstructorID)364>(a1, a2);
    Structure = WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMValueList>::createStructure((uint64_t *)a1, a2, v5);
    result = WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMValueList>::create(a1, Structure, (JSC::JSCell **)a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2920) = result;
    if (result)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
      {
        v7 = (JSC::Heap *)(a1 + 192);
        v8 = result;
        JSC::Heap::writeBarrierSlowPath(v7, (const JSCell *)a2);
        return v8;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSDeprecatedCSSOMValueList::legacyPlatformObjectGetOwnProperty(uint64_t a1, JSC::VM **a2, unint64_t a3, uint64_t a4)
{
  JSC::VM *v6;
  int v8;
  _BYTE *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  _BYTE *v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t result;
  unsigned __int16 *v21;
  uint64_t v22;
  unsigned int v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  unsigned __int16 *v29;
  uint64_t v30;
  unsigned int v31;
  BOOL v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 *v39;
  unsigned int v40;
  uint64_t v41;
  WebCore::JSDOMGlobalObject *v42;
  unint64_t v43;
  unsigned int v44;
  uint64_t v45;
  unsigned __int8 *v46;
  uint64_t v47;
  unsigned int v48;
  unint64_t v49;

  v6 = a2[7];
  if (!a3)
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0)
      return JSC::JSObject::getOwnStaticPropertySlot();
    return 0;
  }
  v8 = *(_DWORD *)(a3 + 16);
  if ((v8 & 0x20) == 0)
  {
    v9 = *(_BYTE **)(a3 + 8);
    v10 = *(unsigned int *)(a3 + 4);
    if ((v8 & 4) != 0)
    {
      if (!(_DWORD)v10)
        goto LABEL_8;
      v11 = *v9 - 48;
      if (v11 > 9 || v10 >= 2 && *v9 == 48)
        goto LABEL_8;
      v38 = v10 - 1;
      v39 = v9 + 1;
      while (v38)
      {
        if (v11 <= 0x19999999)
        {
          v40 = *v39 - 48;
          if (v40 <= 9)
          {
            v24 = __CFADD__(v40, 10 * v11);
            v11 = v40 + 10 * v11;
            --v38;
            ++v39;
            if (!v24)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    else
    {
      if (!(_DWORD)v10)
        goto LABEL_8;
      v11 = *(unsigned __int16 *)v9 - 48;
      if (v11 > 9 || v10 >= 2 && *(_WORD *)v9 == 48)
        goto LABEL_8;
      v21 = (unsigned __int16 *)(v9 + 2);
      v22 = v10 - 1;
      while (v22)
      {
        if (v11 <= 0x19999999)
        {
          v23 = *v21 - 48;
          if (v23 <= 9)
          {
            v24 = __CFADD__(v23, 10 * v11);
            v11 = v23 + 10 * v11;
            ++v21;
            --v22;
            if (!v24)
              continue;
          }
        }
        goto LABEL_8;
      }
    }
    if (v11 != -1)
    {
      v41 = *(_QWORD *)(a1 + 24);
      if (v11 < *(_DWORD *)(v41 + 44))
      {
        v42 = *(WebCore::JSDOMGlobalObject **)(*(_QWORD *)(v41 + 32) + 8 * v11);
        if (v42)
        {
          v43 = WebCore::toJS((WebCore *)a2, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28), v42, (WebCore::DeprecatedCSSOMValue *)a4);
          if (!*((_DWORD *)v6 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) == 0)
          {
            *(_QWORD *)a4 = v43;
            *(_DWORD *)(a4 + 16) = 2;
            *(_QWORD *)(a4 + 32) = a1;
            result = 1;
            *(_BYTE *)(a4 + 49) = 1;
            return result;
          }
          return 0;
        }
      }
    }
  }
LABEL_8:
  if (!(a3 >> 4)
    || (v12 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE), ((a3 >> 4) & ~*(_DWORD *)(v12 + 0x20)) != 0)
    || (v13 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), a2[7])) == 0|| (v49 = a3, v14 = JSC::PropertyTable::get(v13, (uint64_t *)&v49), (_DWORD)v14 == -1))
  {
    if ((*(_BYTE *)(a1 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
      return 1;
    v15 = *(_DWORD *)(a3 + 16);
    if ((v15 & 0x20) != 0)
      return 0;
    v16 = *(_BYTE **)(a3 + 8);
    v17 = *(unsigned int *)(a3 + 4);
    if ((v15 & 4) != 0)
    {
      if ((_DWORD)v17)
      {
        v44 = *v16 - 48;
        if (v44 > 9 || v17 >= 2 && *v16 == 48)
        {
LABEL_80:
          v45 = 0;
        }
        else
        {
          v46 = v16 + 1;
          v47 = v17 - 1;
          while (v47)
          {
            if (v44 > 0x19999999)
              goto LABEL_80;
            v48 = *v46 - 48;
            if (v48 > 9)
              goto LABEL_80;
            v45 = 0;
            v24 = __CFADD__(v48, 10 * v44);
            v44 = v48 + 10 * v44;
            ++v46;
            --v47;
            if (v24)
              goto LABEL_81;
          }
          v45 = 0x100000000;
          if (v44 == -1)
            v45 = 0;
        }
      }
      else
      {
        v45 = 0;
      }
LABEL_81:
      if ((v45 & 0x100000000) == 0)
        return 0;
    }
    else
    {
      if ((_DWORD)v17)
      {
        v18 = *(unsigned __int16 *)v16 - 48;
        if (v18 > 9 || v17 >= 2 && *(_WORD *)v16 == 48)
        {
LABEL_19:
          v19 = 0;
        }
        else
        {
          v29 = (unsigned __int16 *)(v16 + 2);
          v30 = v17 - 1;
          while (v30)
          {
            if (v18 <= 0x19999999)
            {
              v31 = *v29 - 48;
              if (v31 <= 9)
              {
                v24 = __CFADD__(v31, 10 * v18);
                v18 = v31 + 10 * v18;
                ++v29;
                --v30;
                if (!v24)
                  continue;
              }
            }
            goto LABEL_19;
          }
          v32 = v18 == -1;
          v19 = 0x100000000;
          if (v32)
            v19 = 0;
        }
      }
      else
      {
        v19 = 0;
      }
      if ((v19 & 0x100000000) == 0)
        return 0;
    }
    return JSC::JSObject::getOwnPropertySlotByIndex();
  }
  if ((int)v14 > 63)
  {
    v25 = *(_QWORD *)(a1 + 8) - 8;
    v26 = 0x3F00000000 - (v14 << 32);
  }
  else
  {
    v25 = a1 + 16;
    v26 = v14 << 32;
  }
  v27 = *(_QWORD *)(v25 + (v26 >> 29));
  if ((v27 & 0xFFFE000000000002) != 0)
  {
LABEL_36:
    *(_QWORD *)a4 = v27;
    *(_QWORD *)(a4 + 32) = a1;
    *(_DWORD *)(a4 + 16) = HIDWORD(v14);
    *(_DWORD *)(a4 + 20) = v14;
    result = 1;
    *(_WORD *)(a4 + 48) = 257;
    return result;
  }
  v28 = *(unsigned __int8 *)(v27 + 5);
  if (v28 != 6)
  {
    if (v28 == 5)
    {
      JSC::JSObject::fillGetterPropertySlot();
      return 1;
    }
    goto LABEL_36;
  }
  v33 = *(_DWORD *)(v12 + 16) & 3;
  v35 = *(_QWORD *)(v27 + 8);
  v34 = *(_QWORD *)(v27 + 16);
  if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x4C))
  {
    v37 = *(_QWORD *)(v27 + 24);
    v36 = *(_QWORD *)(v27 + 32);
    *(_QWORD *)a4 = v35;
    *(_QWORD *)(a4 + 8) = v34;
    *(_DWORD *)(a4 + 16) = HIDWORD(v14);
    *(_QWORD *)(a4 + 32) = a1;
    *(_BYTE *)(a4 + 49) = 3;
    result = 1;
    if (v33 != 2)
      *(_BYTE *)(a4 + 48) = 1;
    *(_BYTE *)(a4 + 51) = 1;
    *(_QWORD *)(a4 + 72) = v37;
    *(_QWORD *)(a4 + 80) = v36;
  }
  else
  {
    *(_QWORD *)a4 = v35;
    *(_QWORD *)(a4 + 8) = v34;
    *(_DWORD *)(a4 + 16) = HIDWORD(v14);
    *(_QWORD *)(a4 + 32) = a1;
    result = 1;
    *(_BYTE *)(a4 + 49) = 3;
    if (v33 != 2)
      *(_BYTE *)(a4 + 48) = 1;
  }
  return result;
}

unint64_t WebCore::jsDeprecatedCSSOMValueListConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDeprecatedCSSOMValueListPrototype::s_info != (char **)(16
                                                                        * *(unsigned int *)(16
                                                                                          * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                          + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecatedCSSOMValueList>,(WebCore::DOMConstructorID)365>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsDeprecatedCSSOMValueList_length(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(unsigned int *)(*(_QWORD *)(a2 + 24) + 44);
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

uint64_t WebCore::JSDeprecatedCSSOMValueList::subspaceForImpl(WebCore::JSDeprecatedCSSOMValueList *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2960);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 2960))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 2960);
    *(_QWORD *)(v8 + 2960) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 2960);
  *(_QWORD *)(v3 + 2960) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSDeprecationReportBody::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSReportBody::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSReportBody::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSReportBody::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDeprecationReportBodyPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDeprecationReportBodyPrototype::create(WebCore::JSDeprecationReportBodyPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<8u>(this, (uint64_t)&WebCore::JSDeprecationReportBody::s_info, (uint64_t)&WebCore::JSDeprecationReportBodyPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecationReportBody>,(WebCore::DOMConstructorID)194>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  unint64_t v30;
  unint64_t v31;
  JSC::JSObject *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  WTF::StringImpl *v39;
  unint64_t v40;
  int v41;
  int v42;
  uint64_t v43;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1552);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSReportBody>,(WebCore::DOMConstructorID)196>(a1, a2);
  v7 = v6;
  LODWORD(v39) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v36 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v36);
    v5[2] = SlowCase + (int)v36;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v39, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecationReportBody>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v37 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v37);
    v10[2848] = v2 + (int)v37;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v39 = 0;
  v40 = v2;
  v41 = -1;
  v42 = 0x1000000;
  v43 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v39);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v39);
  v14 = v39;
  v39 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v39 = 0;
  v40 = v2;
  v41 = -1;
  v42 = 0x1000000;
  v43 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v39);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (!v18)
    goto LABEL_21;
  v19 = *(_DWORD *)(v18 - 8);
  v20 = ((unint64_t)&WebCore::JSDeprecationReportBody::s_info
       + ~((_QWORD)&WebCore::JSDeprecationReportBody::s_info << 32)) ^ (((unint64_t)&WebCore::JSDeprecationReportBody::s_info
                                                                       + ~((_QWORD)&WebCore::JSDeprecationReportBody::s_info << 32)) >> 22);
  v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
  v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
  v23 = v19 & ((v22 >> 31) ^ v22);
  v24 = *(char ***)(v18 + 16 * v23);
  if (v24 != &WebCore::JSDeprecationReportBody::s_info)
  {
    v25 = 1;
    while (v24)
    {
      v23 = ((_DWORD)v23 + v25) & v19;
      v24 = *(char ***)(v18 + 16 * v23);
      ++v25;
      if (v24 == &WebCore::JSDeprecationReportBody::s_info)
        goto LABEL_20;
    }
LABEL_21:
    v27 = (JSC::JSCell *)WebCore::JSReportBody::prototype((WebCore::JSReportBody *)a1, (JSC::VM *)a2, v16);
    Structure = WebCore::JSDeprecationReportBodyPrototype::createStructure((uint64_t *)a1, a2, v27);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v30 = WebCore::JSDeprecationReportBodyPrototype::create((WebCore::JSDeprecationReportBodyPrototype *)a1, (JSC::VM *)a2, Structure, v29);
    v31 = v30;
    LODWORD(v39) = 23;
    if ((v30 & 0xFFFE000000000002) == 0)
    {
      v32 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v30);
      if (v32)
        JSC::JSObject::didBecomePrototype(v32, (JSC::VM *)a1);
    }
    v33 = *v5;
    if (*v5 >= (unint64_t)v5[1])
    {
      v33 = v5[2];
      if ((v33 & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        v33 = JSC::LocalAllocator::allocateSlowCase();
        goto LABEL_26;
      }
      v38 = *(_QWORD *)(v33 + 8) ^ v5[3];
      v5[1] = v33 + HIDWORD(v38);
      v5[2] = v33 + (int)v38;
    }
    *v5 = v33 + 128;
LABEL_26:
    *(_DWORD *)v33 = 0;
    MEMORY[0x19AEA4278](v33, a1, a2, v31, &v39, &WebCore::JSDeprecationReportBody::s_info, 0, 0);
    if (*(_BYTE *)(a1 + 755))
      __dmb(0xAu);
    v26 = WebCore::cacheDOMStructure((JSCell *)a2, v33, (uint64_t)&WebCore::JSDeprecationReportBody::s_info);
    goto LABEL_29;
  }
LABEL_20:
  v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
  if (!v26)
    goto LABEL_21;
LABEL_29:
  v34 = *(_QWORD *)(v26 + 48);
  v39 = 0;
  v40 = v2;
  v41 = -1;
  v42 = 0x1000000;
  v43 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v34, 14, (uint64_t)&v39);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1552) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDeprecationReportBodyConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDeprecationReportBodyPrototype::s_info != (char **)(16
                                                                     * *(unsigned int *)(16
                                                                                       * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                       + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecationReportBody>,(WebCore::DOMConstructorID)194>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsDeprecationReportBody_id(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 16);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsDeprecationReportBody_anticipatedRemoval(uint64_t a1)
{
  return WebCore::jsDate(a1);
}

uint64_t WebCore::jsDeprecationReportBody_message(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 32);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsDeprecationReportBody_sourceFile(uint64_t a1, uint64_t a2)
{
  return WebCore::toJS<WebCore::IDLNullable<WebCore::IDLDOMString>,WTF::AtomString>(*(_QWORD *)(a1 + 56), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 40));
}

unint64_t WebCore::jsDeprecationReportBody_lineNumber(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 48);
  if ((v2 & 0xFF00000000) == 0)
    return 2;
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  return *(_QWORD *)(*(_QWORD *)(a2 + 24) + 48) | 0xFFFE000000000000;
}

unint64_t WebCore::jsDeprecationReportBody_columnNumber(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 56);
  if ((v2 & 0xFF00000000) == 0)
    return 2;
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  return *(_QWORD *)(*(_QWORD *)(a2 + 24) + 56) | 0xFFFE000000000000;
}

uint64_t WebCore::JSDeprecationReportBody::subspaceForImpl(WebCore::JSDeprecationReportBody *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 1576);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 1576))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 1576);
    *(_QWORD *)(v8 + 1576) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 1576);
  *(_QWORD *)(v3 + 1576) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

unint64_t WebCore::convertDictionaryToJS(JSC *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  size_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  uint64_t *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  int v21;
  uint64_t v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  unsigned __int8 *v32;
  unsigned int v33;
  unsigned __int8 *v34;
  unsigned int v35;
  unsigned int v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v6 = *((_QWORD *)a1 + 7);
  v7 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v8 = 8 * *(unsigned __int8 *)(v7 + 14);
  v9 = JSC::allocateCell<JSC::JSFinalObject>(v6, v8 + 16);
  v10 = *(_DWORD *)(v7 + 8);
  *(_DWORD *)v9 = v7 >> 4;
  *(_DWORD *)(v9 + 4) = v10;
  *(_QWORD *)(v9 + 8) = 0;
  bzero((void *)(v9 + 16), v8);
  if (*(_BYTE *)(v6 + 755))
    __dmb(0xAu);
  v11 = WebCore::JSConverter<WebCore::IDLInterface<WebCore::DOMRectReadOnly>>::convert<WTF::RefPtr<WebCore::DOMRectReadOnly,WTF::RawPtrTraits<WebCore::DOMRectReadOnly>,WTF::DefaultRefDerefTraits<WebCore::DOMRectReadOnly>>>(a2, *(bmalloc::api **)a3);
  if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v12 = v37;
  v37 = 0;
  v38 = v9;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v12, v11, 0, (uint64_t)&v37);
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v13);
    else
      *(_DWORD *)v12 -= 2;
  }
  v14 = WebCore::JSConverter<WebCore::IDLFrozenArray<WebCore::IDLDictionary<WebCore::Point2D>>>::convert<WebCore::Point2D,0ul>(a1, a2, a3 + 24);
  if (*(_DWORD *)(v6 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v15 = v37;
  v37 = 0;
  v38 = v9;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v15, v14, 0, (uint64_t)&v37);
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v16);
    else
      *(_DWORD *)v15 -= 2;
  }
  v17 = *((_QWORD *)a1 + 7);
  v18 = (uint64_t *)(v17 + 41968);
  WebCore::convertEnumerationToString(*(unsigned __int8 *)(a3 + 16), &v37);
  v20 = v37;
  if (!v37)
  {
    v22 = *v18;
    goto LABEL_19;
  }
  v21 = *((_DWORD *)v37 + 1);
  if (v21)
  {
    if (v21 != 1)
    {
LABEL_14:
      v22 = *(_QWORD *)(v17 + 64760);
      if (!v22 || v37 != *(WTF::StringImpl **)(v22 + 8))
        v22 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_17;
    }
    v32 = (unsigned __int8 *)*((_QWORD *)v37 + 1);
    if ((*((_BYTE *)v37 + 16) & 4) != 0)
    {
      v33 = *v32;
    }
    else
    {
      v33 = *(unsigned __int16 *)v32;
      if (v33 > 0xFF)
        goto LABEL_14;
      v33 = v33;
    }
    v22 = *(_QWORD *)(v17 + 8 * v33 + 42216);
  }
  else
  {
    v22 = *v18;
  }
LABEL_17:
  if (*(_DWORD *)v20 == 2)
    WTF::StringImpl::destroy(v20, v19);
  else
    *(_DWORD *)v20 -= 2;
LABEL_19:
  if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v23 = v37;
  v37 = 0;
  v38 = v9;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v23, v22, 0, (uint64_t)&v37);
  if (v23)
  {
    if (*(_DWORD *)v23 == 2)
      WTF::StringImpl::destroy(v23, v24);
    else
      *(_DWORD *)v23 -= 2;
  }
  v25 = *((_QWORD *)a1 + 7);
  v26 = *(_QWORD *)(a3 + 8);
  if (!v26 || (v27 = *(_DWORD *)(v26 + 4)) == 0)
  {
    v28 = *(_QWORD *)(v25 + 41968);
    goto LABEL_29;
  }
  if (v27 == 1)
  {
    v34 = *(unsigned __int8 **)(v26 + 8);
    if ((*(_BYTE *)(v26 + 16) & 4) != 0)
    {
      v35 = *v34;
    }
    else
    {
      v36 = *(unsigned __int16 *)v34;
      if (v36 > 0xFF)
        goto LABEL_26;
      v35 = v36;
    }
    v28 = *(_QWORD *)(v25 + 8 * v35 + 42216);
    goto LABEL_29;
  }
LABEL_26:
  v28 = *(_QWORD *)(v25 + 64760);
  if (!v28 || v26 != *(_QWORD *)(v28 + 8))
    v28 = JSC::jsStringWithCacheSlowCase();
LABEL_29:
  if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v29 = v37;
  v37 = 0;
  v38 = v9;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v29, v28, 0, (uint64_t)&v37);
  if (v29)
  {
    if (*(_DWORD *)v29 == 2)
      WTF::StringImpl::destroy(v29, v30);
    else
      *(_DWORD *)v29 -= 2;
  }
  return v9;
}

{
  uint64_t v6;
  unint64_t v7;
  size_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  unsigned __int8 *v24;
  unsigned int v25;
  unsigned int v26;
  WTF::StringImpl *v27;
  unint64_t v28;
  int v29;
  int v30;
  uint64_t v31;

  v6 = *((_QWORD *)a1 + 7);
  v7 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v8 = 8 * *(unsigned __int8 *)(v7 + 14);
  v9 = JSC::allocateCell<JSC::JSFinalObject>(v6, v8 + 16);
  v10 = *(_DWORD *)(v7 + 8);
  *(_DWORD *)v9 = v7 >> 4;
  *(_DWORD *)(v9 + 4) = v10;
  *(_QWORD *)(v9 + 8) = 0;
  bzero((void *)(v9 + 16), v8);
  if (*(_BYTE *)(v6 + 755))
    __dmb(0xAu);
  v11 = WebCore::JSConverter<WebCore::IDLInterface<WebCore::DOMRectReadOnly>>::convert<WTF::RefPtr<WebCore::DOMRectReadOnly,WTF::RawPtrTraits<WebCore::DOMRectReadOnly>,WTF::DefaultRefDerefTraits<WebCore::DOMRectReadOnly>>>(a2, *(bmalloc::api **)a3);
  if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v12 = v27;
  v27 = 0;
  v28 = v9;
  v29 = -1;
  v30 = 0x1000000;
  v31 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v12, v11, 0, (uint64_t)&v27);
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v13);
    else
      *(_DWORD *)v12 -= 2;
  }
  v14 = WebCore::JSConverter<WebCore::IDLFrozenArray<WebCore::IDLDictionary<WebCore::Point2D>>>::convert<WebCore::Point2D,0ul>(a1, a2, a3 + 16);
  if (*(_DWORD *)(v6 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v15 = v27;
  v27 = 0;
  v28 = v9;
  v29 = -1;
  v30 = 0x1000000;
  v31 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v15, v14, 0, (uint64_t)&v27);
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v16);
    else
      *(_DWORD *)v15 -= 2;
  }
  v17 = *((_QWORD *)a1 + 7);
  v18 = *(_QWORD *)(a3 + 8);
  if (!v18 || (v19 = *(_DWORD *)(v18 + 4)) == 0)
  {
    v20 = *(_QWORD *)(v17 + 41968);
    goto LABEL_17;
  }
  if (v19 == 1)
  {
    v24 = *(unsigned __int8 **)(v18 + 8);
    if ((*(_BYTE *)(v18 + 16) & 4) != 0)
    {
      v25 = *v24;
    }
    else
    {
      v26 = *(unsigned __int16 *)v24;
      if (v26 > 0xFF)
        goto LABEL_14;
      v25 = v26;
    }
    v20 = *(_QWORD *)(v17 + 8 * v25 + 42216);
    goto LABEL_17;
  }
LABEL_14:
  v20 = *(_QWORD *)(v17 + 64760);
  if (!v20 || v18 != *(_QWORD *)(v20 + 8))
    v20 = JSC::jsStringWithCacheSlowCase();
LABEL_17:
  if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v21 = v27;
  v27 = 0;
  v28 = v9;
  v29 = -1;
  v30 = 0x1000000;
  v31 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v21, v20, 0, (uint64_t)&v27);
  if (v21)
  {
    if (*(_DWORD *)v21 == 2)
      WTF::StringImpl::destroy(v21, v22);
    else
      *(_DWORD *)v21 -= 2;
  }
  return v9;
}

unint64_t WebCore::convertDictionaryToJS(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  size_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  __int128 *v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  JSC::VM *v28;
  WTF *v29;
  uint64_t v30;
  objc_class *v31;
  int v32;
  BOOL v33;
  JSValue v34;
  void *v35;
  JSC::VM *v36;
  JSC::JSObject *v37;
  JSC::JSGlobalObject *v38;
  uint64_t *v39;
  WTF *v40;
  WTF *v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  _QWORD *v45;
  WTF *v46;
  WTF *v47;
  int v48;
  WTF::StringImpl *v49;
  uint64_t v50;
  WTF *v51;
  _OWORD v52[4];
  uint64_t v53;
  JSC::VM *v54;

  v6 = a1[7];
  v7 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v8 = 8 * *(unsigned __int8 *)(v7 + 14);
  v9 = JSC::allocateCell<JSC::JSFinalObject>(v6, v8 + 16);
  v10 = *(_DWORD *)(v7 + 8);
  *(_DWORD *)v9 = v7 >> 4;
  *(_DWORD *)(v9 + 4) = v10;
  *(_QWORD *)(v9 + 8) = 0;
  bzero((void *)(v9 + 16), v8);
  if (*(_BYTE *)(v6 + 755))
    __dmb(0xAu);
  v11 = WebCore::JSConverter<WebCore::IDLInterface<WebCore::DOMRectReadOnly>>::convert<WTF::RefPtr<WebCore::DOMRectReadOnly,WTF::RawPtrTraits<WebCore::DOMRectReadOnly>,WTF::DefaultRefDerefTraits<WebCore::DOMRectReadOnly>>>(a2, *(bmalloc::api **)a3);
  if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v12 = v49;
  v49 = 0;
  v50 = v9;
  v51 = (WTF *)0x1000000FFFFFFFFLL;
  *(_QWORD *)&v52[0] = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v12, v11, 0, (uint64_t)&v49);
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v13);
    else
      *(_DWORD *)v12 -= 2;
  }
  if (!*(_BYTE *)(a3 + 24))
  {
    v27 = 2;
    goto LABEL_54;
  }
  v14 = *(unsigned int *)(a3 + 20);
  if ((_DWORD)v14)
  {
    if (v14 >= 0xAAAAAAB)
    {
LABEL_74:
      __break(0xC471u);
      JUMPOUT(0x194A45D2CLL);
    }
    v15 = WTF::fastMalloc((WTF *)(24 * v14));
    v16 = (WTF *)v15;
    v17 = *(_DWORD *)(a3 + 20);
    if (v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = v18 + 24 * v17;
      v20 = v15;
      do
      {
        v21 = *(unsigned int *)(v18 + 12);
        *(_QWORD *)v20 = 0;
        *(_QWORD *)(v20 + 8) = 0;
        *(_DWORD *)(v20 + 12) = v21;
        if ((_DWORD)v21)
        {
          if (v21 >> 28)
            goto LABEL_74;
          v22 = (_OWORD *)WTF::fastMalloc((WTF *)(16 * v21));
          *(_DWORD *)(v20 + 8) = v21;
          *(_QWORD *)v20 = v22;
          v23 = *(unsigned int *)(v18 + 12);
          if ((_DWORD)v23)
          {
            v24 = *(__int128 **)v18;
            v25 = 16 * v23;
            do
            {
              v26 = *v24++;
              *v22++ = v26;
              v25 -= 16;
            }
            while (v25);
          }
        }
        *(_BYTE *)(v20 + 16) = *(_BYTE *)(v18 + 16);
        v20 += 24;
        v18 += 24;
      }
      while (v18 != v19);
    }
  }
  else
  {
    v16 = 0;
  }
  v28 = (JSC::VM *)a1[7];
  v54 = v28;
  LOBYTE(v49) = 0;
  v50 = 0x800000000;
  v51 = (WTF *)((char *)v52 + 8);
  memset(v52, 0, sizeof(v52));
  v53 = 0;
  if (v14 >= 9)
  {
    LOBYTE(v49) = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v50) == 1;
    v29 = (WTF *)((char *)v16 + 24 * v14);
LABEL_23:
    v46 = v16;
    v30 = (uint64_t)v16;
    while (1)
    {
      v31 = (objc_class *)WebCore::convertDictionaryToJS(a1, a2, v30);
      if (*((_DWORD *)v28 + 20))
      {
        if ((JSC::VM::hasExceptionsAfterHandlingTraps(v28) & 1) != 0)
          break;
      }
      v32 = v50;
      if ((_DWORD)v50 != HIDWORD(v50) && (v51 != (WTF *)((char *)v52 + 8) ? (v33 = v51 == 0) : (v33 = 1), v33))
      {
        *((_QWORD *)v51 + v50) = v31;
        LODWORD(v50) = v32 + 1;
      }
      else
      {
        v34.super.isa = v31;
        if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v50, v34) == 1)
          LOBYTE(v49) = 1;
      }
      v30 += 24;
      if ((WTF *)v30 == v29)
      {
        if (!(_BYTE)v49)
        {
          v16 = v46;
          goto LABEL_40;
        }
        JSC::throwOutOfMemoryError();
        break;
      }
    }
    v27 = 0;
    v16 = v46;
    goto LABEL_44;
  }
  v29 = (WTF *)((char *)v16 + 24 * v14);
  if ((_DWORD)v14)
    goto LABEL_23;
LABEL_40:
  v47 = v51;
  v48 = v50;
  v36 = *(JSC::VM **)(a2 + 56);
  if (*((_DWORD *)v36 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v36) & 1) != 0)
    v38 = 0;
  else
    v38 = (JSC::JSGlobalObject *)JSC::constructArray();
  if (*((_DWORD *)v28 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v28) & 1) != 0)
    v27 = 0;
  else
    v27 = JSC::objectConstructorFreeze((JSC *)a1, v38, v37);
LABEL_44:
  v39 = *(uint64_t **)&v52[0];
  if (*(_QWORD *)&v52[0])
  {
    v47 = (WTF *)&v50;
    v45 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v52[0], (uint64_t *)&v47);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v39, v45);
  }
  if (v51 != (WTF *)((char *)v52 + 8) && v51)
    WTF::fastFree(v51, v35);
  if ((_DWORD)v14)
  {
    v40 = v16;
    do
    {
      v41 = *(WTF **)v40;
      if (*(_QWORD *)v40)
      {
        *(_QWORD *)v40 = 0;
        *((_DWORD *)v40 + 2) = 0;
        WTF::fastFree(v41, v35);
      }
      v40 = (WTF *)((char *)v40 + 24);
    }
    while (v40 != v29);
  }
  if (v16)
    WTF::fastFree(v16, v35);
LABEL_54:
  if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v42 = v49;
  v49 = 0;
  v50 = v9;
  v51 = (WTF *)0x1000000FFFFFFFFLL;
  *(_QWORD *)&v52[0] = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v42, v27, 0, (uint64_t)&v49);
  if (v42)
  {
    if (*(_DWORD *)v42 == 2)
      WTF::StringImpl::destroy(v42, v43);
    else
      *(_DWORD *)v42 -= 2;
  }
  return v9;
}

{
  uint64_t v6;
  unint64_t v7;
  size_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v18;
  unint64_t v19;
  int v20;
  int v21;
  uint64_t v22;

  v6 = a1[7];
  v7 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v8 = 8 * *(unsigned __int8 *)(v7 + 14);
  v9 = JSC::allocateCell<JSC::JSFinalObject>(v6, v8 + 16);
  v10 = *(_DWORD *)(v7 + 8);
  *(_DWORD *)v9 = v7 >> 4;
  *(_DWORD *)(v9 + 4) = v10;
  *(_QWORD *)(v9 + 8) = 0;
  bzero((void *)(v9 + 16), v8);
  if (*(_BYTE *)(v6 + 755))
    __dmb(0xAu);
  v11 = WebCore::JSConverter<WebCore::IDLFrozenArray<WebCore::IDLDictionary<WebCore::Point2D>>>::convert<WebCore::Point2D,0ul>((JSC *)a1, a2, a3);
  if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v12 = v18;
  v18 = 0;
  v19 = v9;
  v20 = -1;
  v21 = 0x1000000;
  v22 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v12, v11, 0, (uint64_t)&v18);
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v13);
    else
      *(_DWORD *)v12 -= 2;
  }
  v14 = WebCore::convertEnumerationToJS<WebCore::LandmarkType>(a1[7], (WTF::StringImpl *)*(unsigned __int8 *)(a3 + 16));
  if (*(_DWORD *)(v6 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v15 = v18;
  v18 = 0;
  v19 = v9;
  v20 = -1;
  v21 = 0x1000000;
  v22 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v15, v14, 0, (uint64_t)&v18);
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v16);
    else
      *(_DWORD *)v15 -= 2;
  }
  return v9;
}

uint64_t WebCore::convertDictionary<WebCore::DeviceMotionEvent::Acceleration>(uint64_t result, JSC::JSGlobalObject *a2, JSC::JSCell *this)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  char v7;
  unsigned __int8 v8;
  char v9;
  unsigned __int8 v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t Object;
  JSC::Structure *v16;
  WTF::StringImpl *v17;
  unint64_t v18;
  double v19;
  JSC::VM *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  double v24;
  JSC::VM *v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  unint64_t v28;
  double v29;
  JSC::VM *v30;
  int v31;
  JSC::VM *v32;
  JSC::VM *v33;
  double v34;
  double v35;
  uint64_t v36;
  double v37;
  _BYTE v38[7];
  _BYTE v39[7];
  _BYTE v40[7];
  WTF::StringImpl *v41;

  v5 = result;
  v6 = (_DWORD *)*((_QWORD *)a2 + 7);
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
    {
      result = JSC::throwTypeError();
      *(_DWORD *)(v5 + 56) = 1;
      return result;
    }
    v16 = (JSC::Structure *)Object;
    JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v6 + 10492));
    v18 = JSC::JSObject::get(v16, a2, (unint64_t)v41);
    if (v41)
    {
      if (*(_DWORD *)v41 == 2)
        WTF::StringImpl::destroy(v41, v17);
      else
        *(_DWORD *)v41 -= 2;
    }
    if (v6[20])
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6);
      if ((result & 1) != 0)
        goto LABEL_67;
    }
    if (v18 == 10)
    {
      v7 = 0;
      v8 = 0;
    }
    else
    {
      if ((v18 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v7 = 0;
        v19 = 0.0;
      }
      else
      {
        v20 = (JSC::VM *)*((_QWORD *)a2 + 7);
        v41 = (WTF::StringImpl *)v18;
        if (v18 >= 0xFFFE000000000000)
        {
          v19 = (double)(int)v18;
        }
        else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v32 = v20;
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v41, a2);
          v20 = v32;
        }
        else
        {
          *(_QWORD *)&v19 = v18 - 0x2000000000000;
        }
        if (*((_DWORD *)v20 + 20))
        {
          v37 = v19;
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v20);
          v19 = v37;
          if ((result & 1) != 0)
            goto LABEL_67;
        }
        if ((*(_QWORD *)&v19 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
          goto LABEL_66;
        v7 = 1;
      }
      v8 = LOBYTE(v19);
      v36 = *(_QWORD *)&v19 >> 8;
    }
    JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v6 + 10492));
    v21 = v41;
    v23 = JSC::JSObject::get(v16, a2, (unint64_t)v41);
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v22);
      else
        *(_DWORD *)v21 -= 2;
    }
    if (v6[20])
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6);
      if ((result & 1) != 0)
        goto LABEL_67;
    }
    if (v23 == 10)
    {
      v9 = 0;
      v10 = 0;
    }
    else
    {
      if ((v23 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v9 = 0;
        v24 = 0.0;
      }
      else
      {
        v25 = (JSC::VM *)*((_QWORD *)a2 + 7);
        v41 = (WTF::StringImpl *)v23;
        if (v23 >= 0xFFFE000000000000)
        {
          v24 = (double)(int)v23;
        }
        else if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v33 = v25;
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v41, a2);
          v25 = v33;
        }
        else
        {
          *(_QWORD *)&v24 = v23 - 0x2000000000000;
        }
        if (*((_DWORD *)v25 + 20))
        {
          v34 = v24;
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v25);
          v24 = v34;
          if ((result & 1) != 0)
            goto LABEL_67;
        }
        if ((*(_QWORD *)&v24 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
          goto LABEL_66;
        v9 = 1;
      }
      v10 = LOBYTE(v24);
      v4 = *(_QWORD *)&v24 >> 8;
    }
    JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v6 + 10492));
    v26 = v41;
    result = JSC::JSObject::get(v16, a2, (unint64_t)v41);
    v28 = result;
    v3 = v36;
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
      {
        result = WTF::StringImpl::destroy(v26, v27);
        v3 = v36;
      }
      else
      {
        *(_DWORD *)v26 -= 2;
      }
    }
    if (v6[20])
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6);
      v3 = v36;
      if ((result & 1) != 0)
        goto LABEL_67;
    }
    if (v28 == 10)
    {
      v11 = 0;
      v12 = 0;
      v13 = 0;
      goto LABEL_50;
    }
    if ((v28 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v11 = 0;
      v29 = 0.0;
LABEL_49:
      v13 = *(_QWORD *)&v29 & 0xFFFFFFFFFFFFFF00;
      v12 = LOBYTE(v29);
      goto LABEL_50;
    }
    v30 = (JSC::VM *)*((_QWORD *)a2 + 7);
    v41 = (WTF::StringImpl *)v28;
    if (v28 >= 0xFFFE000000000000)
    {
      v29 = (double)(int)v28;
    }
    else if (v28 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      result = JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v41, a2);
      v3 = v36;
    }
    else
    {
      *(_QWORD *)&v29 = v28 - 0x2000000000000;
    }
    if (*((_DWORD *)v30 + 20))
    {
      v35 = v29;
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v30);
      v3 = v36;
      v29 = v35;
      if ((result & 1) != 0)
      {
LABEL_67:
        v31 = 1;
        goto LABEL_51;
      }
    }
    if ((*(_QWORD *)&v29 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
    {
      v11 = 1;
      goto LABEL_49;
    }
LABEL_66:
    result = JSC::throwTypeError();
    goto LABEL_67;
  }
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = 0;
LABEL_50:
  v31 = 0;
  *(_QWORD *)(v5 + 8) = v8 | (unint64_t)(v3 << 8);
  *(_BYTE *)(v5 + 16) = v7;
  *(_DWORD *)(v5 + 17) = *(_DWORD *)v40;
  *(_DWORD *)(v5 + 20) = *(_DWORD *)&v40[3];
  *(_QWORD *)(v5 + 24) = v10 | (unint64_t)(v4 << 8);
  *(_BYTE *)(v5 + 32) = v9;
  *(_DWORD *)(v5 + 33) = *(_DWORD *)v39;
  *(_DWORD *)(v5 + 36) = *(_DWORD *)&v39[3];
  *(_QWORD *)(v5 + 40) = v13 | v12;
  *(_BYTE *)(v5 + 48) = v11;
  *(_DWORD *)(v5 + 52) = *(_DWORD *)&v38[3];
  *(_DWORD *)(v5 + 49) = *(_DWORD *)v38;
LABEL_51:
  *(_DWORD *)(v5 + 56) = v31;
  return result;
}

unint64_t WebCore::convertDictionaryToJS(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  size_t v6;
  unint64_t v7;
  int v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  double v14;
  uint64_t v15;
  unint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  double v19;
  uint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v25;
  unint64_t v26;
  int v27;
  int v28;
  uint64_t v29;

  v4 = *(_QWORD *)(a1 + 56);
  v5 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v6 = 8 * *(unsigned __int8 *)(v5 + 14);
  v7 = JSC::allocateCell<JSC::JSFinalObject>(v4, v6 + 16);
  v8 = *(_DWORD *)(v5 + 8);
  *(_DWORD *)v7 = v5 >> 4;
  *(_DWORD *)(v7 + 4) = v8;
  *(_QWORD *)(v7 + 8) = 0;
  bzero((void *)(v7 + 16), v6);
  if (*(_BYTE *)(v4 + 755))
    __dmb(0xAu);
  if (*(_BYTE *)(a3 + 8))
  {
    v9 = *(double *)a3;
    if ((*(_QWORD *)a3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v10 = (int)v9, v9 == (double)(int)v10)
      && ((_DWORD)v10 || (*(_QWORD *)&v9 & 0x8000000000000000) == 0))
    {
      v11 = v10 | 0xFFFE000000000000;
    }
    else
    {
      v11 = *(_QWORD *)&v9 + 0x2000000000000;
    }
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      return 0;
    JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 41968));
    v12 = v25;
    v25 = 0;
    v26 = v7;
    v27 = -1;
    v28 = 0x1000000;
    v29 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v7, (JSC::VM *)v4, (unint64_t)v12, v11, 0, (uint64_t)&v25);
    if (v12)
    {
      if (*(_DWORD *)v12 == 2)
        WTF::StringImpl::destroy(v12, v13);
      else
        *(_DWORD *)v12 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 24))
  {
    v14 = *(double *)(a3 + 16);
    if ((*(_QWORD *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v15 = (int)v14, v14 == (double)(int)v15)
      && ((_DWORD)v15 || (*(_QWORD *)&v14 & 0x8000000000000000) == 0))
    {
      v16 = v15 | 0xFFFE000000000000;
    }
    else
    {
      v16 = *(_QWORD *)&v14 + 0x2000000000000;
    }
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      return 0;
    JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 41968));
    v17 = v25;
    v25 = 0;
    v26 = v7;
    v27 = -1;
    v28 = 0x1000000;
    v29 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v7, (JSC::VM *)v4, (unint64_t)v17, v16, 0, (uint64_t)&v25);
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v18);
      else
        *(_DWORD *)v17 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 40))
  {
    v19 = *(double *)(a3 + 32);
    if ((*(_QWORD *)&v19 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v20 = (int)v19, v19 == (double)(int)v20)
      && ((_DWORD)v20 || (*(_QWORD *)&v19 & 0x8000000000000000) == 0))
    {
      v21 = v20 | 0xFFFE000000000000;
    }
    else
    {
      v21 = *(_QWORD *)&v19 + 0x2000000000000;
    }
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      return 0;
    JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 41968));
    v22 = v25;
    v25 = 0;
    v26 = v7;
    v27 = -1;
    v28 = 0x1000000;
    v29 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v7, (JSC::VM *)v4, (unint64_t)v22, v21, 0, (uint64_t)&v25);
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, v23);
      else
        *(_DWORD *)v22 -= 2;
    }
  }
  return v7;
}

{
  uint64_t v4;
  unint64_t v5;
  size_t v6;
  unint64_t v7;
  int v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  double v14;
  uint64_t v15;
  unint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;

  v4 = *(_QWORD *)(a1 + 56);
  v5 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v6 = 8 * *(unsigned __int8 *)(v5 + 14);
  v7 = JSC::allocateCell<JSC::JSFinalObject>(v4, v6 + 16);
  v8 = *(_DWORD *)(v5 + 8);
  *(_DWORD *)v7 = v5 >> 4;
  *(_DWORD *)(v7 + 4) = v8;
  *(_QWORD *)(v7 + 8) = 0;
  bzero((void *)(v7 + 16), v6);
  if (*(_BYTE *)(v4 + 755))
    __dmb(0xAu);
  if (*(_BYTE *)(a3 + 8))
  {
    v9 = *(double *)a3;
    if ((*(_QWORD *)a3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v10 = (int)v9, v9 == (double)(int)v10)
      && ((_DWORD)v10 || (*(_QWORD *)&v9 & 0x8000000000000000) == 0))
    {
      v11 = v10 | 0xFFFE000000000000;
    }
    else
    {
      v11 = *(_QWORD *)&v9 + 0x2000000000000;
    }
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v12 = v20;
    v20 = 0;
    v21 = v7;
    v22 = -1;
    v23 = 0x1000000;
    v24 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v7, (JSC::VM *)v4, (unint64_t)v12, v11, 0, (uint64_t)&v20);
    if (v12)
    {
      if (*(_DWORD *)v12 == 2)
        WTF::StringImpl::destroy(v12, v13);
      else
        *(_DWORD *)v12 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 24))
  {
    v14 = *(double *)(a3 + 16);
    if ((*(_QWORD *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v15 = (int)v14, v14 == (double)(int)v15)
      && ((_DWORD)v15 || (*(_QWORD *)&v14 & 0x8000000000000000) == 0))
    {
      v16 = v15 | 0xFFFE000000000000;
    }
    else
    {
      v16 = *(_QWORD *)&v14 + 0x2000000000000;
    }
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v17 = v20;
    v20 = 0;
    v21 = v7;
    v22 = -1;
    v23 = 0x1000000;
    v24 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v7, (JSC::VM *)v4, (unint64_t)v17, v16, 0, (uint64_t)&v20);
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v18);
      else
        *(_DWORD *)v17 -= 2;
    }
  }
  return v7;
}

{
  uint64_t v5;
  unint64_t v6;
  size_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  double v13;
  uint64_t v14;
  unint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  double v24;
  uint64_t v25;
  unint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  unsigned __int8 *v30;
  unsigned int v31;
  unsigned int v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v5 = *(_QWORD *)(a1 + 56);
  v6 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v7 = 8 * *(unsigned __int8 *)(v6 + 14);
  v8 = JSC::allocateCell<JSC::JSFinalObject>(v5, v7 + 16);
  v9 = *(_DWORD *)(v6 + 8);
  *(_DWORD *)v8 = v6 >> 4;
  *(_DWORD *)(v8 + 4) = v9;
  *(_QWORD *)(v8 + 8) = 0;
  bzero((void *)(v8 + 16), v7);
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v10 = WebCore::convertEnumerationToJS<WebCore::CompositeOperationOrAuto>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned __int8 *)(a3 + 16));
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v11 = v33;
  v33 = 0;
  v34 = v8;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v11, v10, 0, (uint64_t)&v33);
  if (v11)
  {
    if (*(_DWORD *)v11 == 2)
      WTF::StringImpl::destroy(v11, v12);
    else
      *(_DWORD *)v11 -= 2;
  }
  v13 = *(double *)(a3 + 24);
  if ((*(_QWORD *)&v13 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v14 = (int)v13, v13 == (double)(int)v14)
    && ((_DWORD)v14 || (*(_QWORD *)&v13 & 0x8000000000000000) == 0))
  {
    v15 = v14 | 0xFFFE000000000000;
  }
  else
  {
    v15 = *(_QWORD *)&v13 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v16 = v33;
  v33 = 0;
  v34 = v8;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v16, v15, 0, (uint64_t)&v33);
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v17);
    else
      *(_DWORD *)v16 -= 2;
  }
  v18 = *(_QWORD *)(a1 + 56);
  v19 = *(_QWORD *)(a3 + 8);
  if (!v19 || (v20 = *(_DWORD *)(v19 + 4)) == 0)
  {
    v21 = *(_QWORD *)(v18 + 41968);
    goto LABEL_23;
  }
  if (v20 != 1)
    goto LABEL_20;
  v30 = *(unsigned __int8 **)(v19 + 8);
  if ((*(_BYTE *)(v19 + 16) & 4) != 0)
  {
    v31 = *v30;
LABEL_45:
    v21 = *(_QWORD *)(v18 + 8 * v31 + 42216);
    goto LABEL_23;
  }
  v32 = *(unsigned __int16 *)v30;
  if (v32 <= 0xFF)
  {
    v31 = v32;
    goto LABEL_45;
  }
LABEL_20:
  v21 = *(_QWORD *)(v18 + 64760);
  if (!v21 || v19 != *(_QWORD *)(v21 + 8))
    v21 = JSC::jsStringWithCacheSlowCase();
LABEL_23:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v22 = v33;
  v33 = 0;
  v34 = v8;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v22, v21, 0, (uint64_t)&v33);
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v23);
    else
      *(_DWORD *)v22 -= 2;
  }
  v24 = *(double *)a3;
  if ((*(_QWORD *)a3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v25 = (int)v24, v24 == (double)(int)v25)
    && ((_DWORD)v25 || (*(_QWORD *)&v24 & 0x8000000000000000) == 0))
  {
    v26 = v25 | 0xFFFE000000000000;
  }
  else
  {
    v26 = *(_QWORD *)&v24 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v27 = v33;
  v33 = 0;
  v34 = v8;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v27, v26, 0, (uint64_t)&v33);
  if (v27)
  {
    if (*(_DWORD *)v27 == 2)
      WTF::StringImpl::destroy(v27, v28);
    else
      *(_DWORD *)v27 -= 2;
  }
  return v8;
}

{
  uint64_t v4;
  unint64_t v5;
  size_t v6;
  unint64_t v7;
  int v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  double v14;
  uint64_t v15;
  unint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  double v19;
  uint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v25;
  unint64_t v26;
  int v27;
  int v28;
  uint64_t v29;

  v4 = *(_QWORD *)(a1 + 56);
  v5 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v6 = 8 * *(unsigned __int8 *)(v5 + 14);
  v7 = JSC::allocateCell<JSC::JSFinalObject>(v4, v6 + 16);
  v8 = *(_DWORD *)(v5 + 8);
  *(_DWORD *)v7 = v5 >> 4;
  *(_DWORD *)(v7 + 4) = v8;
  *(_QWORD *)(v7 + 8) = 0;
  bzero((void *)(v7 + 16), v6);
  if (*(_BYTE *)(v4 + 755))
    __dmb(0xAu);
  if (*(_BYTE *)(a3 + 8))
  {
    v9 = *(double *)a3;
    if ((*(_QWORD *)a3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v10 = (int)v9, v9 == (double)(int)v10)
      && ((_DWORD)v10 || (*(_QWORD *)&v9 & 0x8000000000000000) == 0))
    {
      v11 = v10 | 0xFFFE000000000000;
    }
    else
    {
      v11 = *(_QWORD *)&v9 + 0x2000000000000;
    }
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v12 = v25;
    v25 = 0;
    v26 = v7;
    v27 = -1;
    v28 = 0x1000000;
    v29 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v7, (JSC::VM *)v4, (unint64_t)v12, v11, 0, (uint64_t)&v25);
    if (v12)
    {
      if (*(_DWORD *)v12 == 2)
        WTF::StringImpl::destroy(v12, v13);
      else
        *(_DWORD *)v12 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 24))
  {
    v14 = *(double *)(a3 + 16);
    if ((*(_QWORD *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v15 = (int)v14, v14 == (double)(int)v15)
      && ((_DWORD)v15 || (*(_QWORD *)&v14 & 0x8000000000000000) == 0))
    {
      v16 = v15 | 0xFFFE000000000000;
    }
    else
    {
      v16 = *(_QWORD *)&v14 + 0x2000000000000;
    }
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v17 = v25;
    v25 = 0;
    v26 = v7;
    v27 = -1;
    v28 = 0x1000000;
    v29 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v7, (JSC::VM *)v4, (unint64_t)v17, v16, 0, (uint64_t)&v25);
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v18);
      else
        *(_DWORD *)v17 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 40))
  {
    v19 = *(double *)(a3 + 32);
    if ((*(_QWORD *)&v19 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v20 = (int)v19, v19 == (double)(int)v20)
      && ((_DWORD)v20 || (*(_QWORD *)&v19 & 0x8000000000000000) == 0))
    {
      v21 = v20 | 0xFFFE000000000000;
    }
    else
    {
      v21 = *(_QWORD *)&v19 + 0x2000000000000;
    }
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v22 = v25;
    v25 = 0;
    v26 = v7;
    v27 = -1;
    v28 = 0x1000000;
    v29 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v7, (JSC::VM *)v4, (unint64_t)v22, v21, 0, (uint64_t)&v25);
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, v23);
      else
        *(_DWORD *)v22 -= 2;
    }
  }
  return v7;
}

{
  uint64_t v4;
  unint64_t v5;
  size_t v6;
  unint64_t v7;
  int v8;
  double v9;
  uint64_t v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  double v14;
  uint64_t v15;
  unint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  double v19;
  uint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  double v24;
  uint64_t v25;
  unint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v30;
  unint64_t v31;
  int v32;
  int v33;
  uint64_t v34;

  v4 = *(_QWORD *)(a1 + 56);
  v5 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v6 = 8 * *(unsigned __int8 *)(v5 + 14);
  v7 = JSC::allocateCell<JSC::JSFinalObject>(v4, v6 + 16);
  v8 = *(_DWORD *)(v5 + 8);
  *(_DWORD *)v7 = v5 >> 4;
  *(_DWORD *)(v7 + 4) = v8;
  *(_QWORD *)(v7 + 8) = 0;
  bzero((void *)(v7 + 16), v6);
  if (*(_BYTE *)(v4 + 755))
    __dmb(0xAu);
  if (*(_BYTE *)(a3 + 8))
  {
    v9 = *(double *)a3;
    if ((*(_QWORD *)a3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v10 = (int)v9, v9 == (double)(int)v10)
      && ((_DWORD)v10 || (*(_QWORD *)&v9 & 0x8000000000000000) == 0))
    {
      v11 = v10 | 0xFFFE000000000000;
    }
    else
    {
      v11 = *(_QWORD *)&v9 + 0x2000000000000;
    }
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v12 = v30;
    v30 = 0;
    v31 = v7;
    v32 = -1;
    v33 = 0x1000000;
    v34 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v7, (JSC::VM *)v4, (unint64_t)v12, v11, 0, (uint64_t)&v30);
    if (v12)
    {
      if (*(_DWORD *)v12 == 2)
        WTF::StringImpl::destroy(v12, v13);
      else
        *(_DWORD *)v12 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 24))
  {
    v14 = *(double *)(a3 + 16);
    if ((*(_QWORD *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v15 = (int)v14, v14 == (double)(int)v15)
      && ((_DWORD)v15 || (*(_QWORD *)&v14 & 0x8000000000000000) == 0))
    {
      v16 = v15 | 0xFFFE000000000000;
    }
    else
    {
      v16 = *(_QWORD *)&v14 + 0x2000000000000;
    }
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v17 = v30;
    v30 = 0;
    v31 = v7;
    v32 = -1;
    v33 = 0x1000000;
    v34 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v7, (JSC::VM *)v4, (unint64_t)v17, v16, 0, (uint64_t)&v30);
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v18);
      else
        *(_DWORD *)v17 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 40))
  {
    v19 = *(double *)(a3 + 32);
    if ((*(_QWORD *)&v19 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v20 = (int)v19, v19 == (double)(int)v20)
      && ((_DWORD)v20 || (*(_QWORD *)&v19 & 0x8000000000000000) == 0))
    {
      v21 = v20 | 0xFFFE000000000000;
    }
    else
    {
      v21 = *(_QWORD *)&v19 + 0x2000000000000;
    }
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v22 = v30;
    v30 = 0;
    v31 = v7;
    v32 = -1;
    v33 = 0x1000000;
    v34 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v7, (JSC::VM *)v4, (unint64_t)v22, v21, 0, (uint64_t)&v30);
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, v23);
      else
        *(_DWORD *)v22 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 56))
  {
    v24 = *(double *)(a3 + 48);
    if ((*(_QWORD *)&v24 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v25 = (int)v24, v24 == (double)(int)v25)
      && ((_DWORD)v25 || (*(_QWORD *)&v24 & 0x8000000000000000) == 0))
    {
      v26 = v25 | 0xFFFE000000000000;
    }
    else
    {
      v26 = *(_QWORD *)&v24 + 0x2000000000000;
    }
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v27 = v30;
    v30 = 0;
    v31 = v7;
    v32 = -1;
    v33 = 0x1000000;
    v34 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v7, (JSC::VM *)v4, (unint64_t)v27, v26, 0, (uint64_t)&v30);
    if (v27)
    {
      if (*(_DWORD *)v27 == 2)
        WTF::StringImpl::destroy(v27, v28);
      else
        *(_DWORD *)v27 -= 2;
    }
  }
  return v7;
}

{
  uint64_t v5;
  unint64_t v6;
  size_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  unsigned __int8 *v20;
  unsigned int v21;
  unsigned int v22;
  WTF::StringImpl *v23;
  unint64_t v24;
  int v25;
  int v26;
  uint64_t v27;

  v5 = *(_QWORD *)(a1 + 56);
  v6 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v7 = 8 * *(unsigned __int8 *)(v6 + 14);
  v8 = JSC::allocateCell<JSC::JSFinalObject>(v5, v7 + 16);
  v9 = *(_DWORD *)(v6 + 8);
  *(_DWORD *)v8 = v6 >> 4;
  *(_DWORD *)(v8 + 4) = v9;
  *(_QWORD *)(v8 + 8) = 0;
  bzero((void *)(v8 + 16), v7);
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  if (*(_BYTE *)a3)
    v10 = 7;
  else
    v10 = 6;
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v11 = v23;
  v23 = 0;
  v24 = v8;
  v25 = -1;
  v26 = 0x1000000;
  v27 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v11, v10, 0, (uint64_t)&v23);
  if (v11)
  {
    if (*(_DWORD *)v11 == 2)
      WTF::StringImpl::destroy(v11, v12);
    else
      *(_DWORD *)v11 -= 2;
  }
  v13 = *(_QWORD *)(a3 + 8);
  if (!v13)
    return v8;
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_DWORD *)(v13 + 4);
  if (v15)
  {
    if (v15 != 1)
    {
LABEL_13:
      v16 = *(_QWORD *)(v14 + 64760);
      if (!v16 || v13 != *(_QWORD *)(v16 + 8))
        v16 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_16;
    }
    v20 = *(unsigned __int8 **)(v13 + 8);
    if ((*(_BYTE *)(v13 + 16) & 4) != 0)
    {
      v21 = *v20;
    }
    else
    {
      v22 = *(unsigned __int16 *)v20;
      if (v22 > 0xFF)
        goto LABEL_13;
      v21 = v22;
    }
    v16 = *(_QWORD *)(v14 + 8 * v21 + 42216);
  }
  else
  {
    v16 = *(_QWORD *)(v14 + 41968);
  }
LABEL_16:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v17 = v23;
  v23 = 0;
  v24 = v8;
  v25 = -1;
  v26 = 0x1000000;
  v27 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v17, v16, 0, (uint64_t)&v23);
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v18);
    else
      *(_DWORD *)v17 -= 2;
  }
  return v8;
}

{
  uint64_t v5;
  unint64_t v6;
  size_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  double v16;
  uint64_t v17;
  unint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  uint64_t v36;
  uint64_t v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  double v46;
  uint64_t v47;
  unint64_t v48;
  WTF::StringImpl *v49;
  WTF::StringImpl *v50;
  uint64_t v51;
  unint64_t v52;
  WTF::StringImpl *v53;
  WTF::StringImpl *v54;
  unint64_t v55;
  unint64_t v56;
  WTF::StringImpl *v57;
  WTF::StringImpl *v58;
  double v59;
  uint64_t v60;
  unint64_t v61;
  WTF::StringImpl *v62;
  WTF::StringImpl *v63;
  unint64_t v64;
  unint64_t v65;
  WTF::StringImpl *v66;
  WTF::StringImpl *v67;
  unint64_t v68;
  unint64_t v69;
  WTF::StringImpl *v70;
  WTF::StringImpl *v71;
  unint64_t v72;
  unint64_t v73;
  WTF::StringImpl *v74;
  WTF::StringImpl *v75;
  double v76;
  uint64_t v77;
  unint64_t v78;
  WTF::StringImpl *v79;
  WTF::StringImpl *v80;
  unint64_t v81;
  unint64_t v82;
  WTF::StringImpl *v83;
  WTF::StringImpl *v84;
  unint64_t v85;
  unint64_t v86;
  WTF::StringImpl *v87;
  WTF::StringImpl *v88;
  unint64_t v89;
  unint64_t v90;
  WTF::StringImpl *v91;
  WTF::StringImpl *v92;
  uint64_t v93;
  unint64_t v94;
  WTF::StringImpl *v95;
  WTF::StringImpl *v96;
  uint64_t v97;
  unint64_t v98;
  WTF::StringImpl *v99;
  WTF::StringImpl *v100;
  uint64_t v101;
  unint64_t v102;
  WTF::StringImpl *v103;
  WTF::StringImpl *v104;
  uint64_t v105;
  unint64_t v106;
  WTF::StringImpl *v107;
  WTF::StringImpl *v108;
  uint64_t v109;
  unint64_t v110;
  WTF::StringImpl *v111;
  WTF::StringImpl *v112;
  uint64_t v113;
  unint64_t v114;
  WTF::StringImpl *v115;
  WTF::StringImpl *v116;
  uint64_t v117;
  unint64_t v118;
  WTF::StringImpl *v119;
  WTF::StringImpl *v120;
  double v121;
  uint64_t v122;
  unint64_t v123;
  WTF::StringImpl *v124;
  WTF::StringImpl *v125;
  uint64_t v126;
  unint64_t v127;
  WTF::StringImpl *v128;
  WTF::StringImpl *v129;
  uint64_t v130;
  unint64_t v131;
  WTF::StringImpl *v132;
  WTF::StringImpl *v133;
  uint64_t v134;
  unint64_t v135;
  WTF::StringImpl *v136;
  WTF::StringImpl *v137;
  unint64_t v138;
  unint64_t v139;
  WTF::StringImpl *v140;
  WTF::StringImpl *v141;
  unint64_t v142;
  unint64_t v143;
  WTF::StringImpl *v144;
  WTF::StringImpl *v145;
  double v146;
  uint64_t v147;
  unint64_t v148;
  WTF::StringImpl *v149;
  WTF::StringImpl *v150;
  unint64_t v151;
  unint64_t v152;
  WTF::StringImpl *v153;
  WTF::StringImpl *v154;
  double v155;
  uint64_t v156;
  unint64_t v157;
  WTF::StringImpl *v158;
  WTF::StringImpl *v159;
  double v160;
  uint64_t v161;
  unint64_t v162;
  WTF::StringImpl *v163;
  WTF::StringImpl *v164;
  uint64_t v165;
  unint64_t v166;
  WTF::StringImpl *v167;
  WTF::StringImpl *v168;
  double v169;
  uint64_t v170;
  unint64_t v171;
  WTF::StringImpl *v172;
  WTF::StringImpl *v173;
  uint64_t v174;
  uint64_t v175;
  int v176;
  uint64_t v177;
  WTF::StringImpl *v178;
  WTF::StringImpl *v179;
  uint64_t v180;
  unint64_t v181;
  WTF::StringImpl *v182;
  WTF::StringImpl *v183;
  unint64_t v184;
  unint64_t v185;
  WTF::StringImpl *v186;
  WTF::StringImpl *v187;
  uint64_t v188;
  unint64_t v189;
  WTF::StringImpl *v190;
  WTF::StringImpl *v191;
  uint64_t v192;
  uint64_t v193;
  int v194;
  uint64_t v195;
  WTF::StringImpl *v196;
  WTF::StringImpl *v197;
  uint64_t v198;
  unint64_t v199;
  WTF::StringImpl *v200;
  WTF::StringImpl *v201;
  unint64_t v202;
  unint64_t v203;
  WTF::StringImpl *v204;
  WTF::StringImpl *v205;
  uint64_t v206;
  uint64_t v207;
  int v208;
  uint64_t v209;
  WTF::StringImpl *v210;
  WTF::StringImpl *v211;
  unint64_t v212;
  unint64_t v213;
  WTF::StringImpl *v214;
  WTF::StringImpl *v215;
  unint64_t v216;
  unint64_t v217;
  WTF::StringImpl *v218;
  WTF::StringImpl *v219;
  unint64_t v220;
  unint64_t v221;
  WTF::StringImpl *v222;
  WTF::StringImpl *v223;
  uint64_t v224;
  unint64_t v225;
  WTF::StringImpl *v226;
  WTF::StringImpl *v227;
  unint64_t v228;
  unint64_t v229;
  WTF::StringImpl *v230;
  WTF::StringImpl *v231;
  double v232;
  uint64_t v233;
  unint64_t v234;
  WTF::StringImpl *v235;
  WTF::StringImpl *v236;
  double v237;
  uint64_t v238;
  unint64_t v239;
  WTF::StringImpl *v240;
  WTF::StringImpl *v241;
  double v242;
  uint64_t v243;
  unint64_t v244;
  WTF::StringImpl *v245;
  WTF::StringImpl *v246;
  double v247;
  uint64_t v248;
  unint64_t v249;
  WTF::StringImpl *v250;
  WTF::StringImpl *v251;
  double v252;
  uint64_t v253;
  unint64_t v254;
  WTF::StringImpl *v255;
  WTF::StringImpl *v256;
  double v257;
  uint64_t v258;
  unint64_t v259;
  WTF::StringImpl *v260;
  WTF::StringImpl *v261;
  double v262;
  uint64_t v263;
  unint64_t v264;
  WTF::StringImpl *v265;
  WTF::StringImpl *v266;
  double v267;
  uint64_t v268;
  unint64_t v269;
  WTF::StringImpl *v270;
  WTF::StringImpl *v271;
  unint64_t v272;
  unint64_t v273;
  WTF::StringImpl *v274;
  WTF::StringImpl *v275;
  double v276;
  uint64_t v277;
  unint64_t v278;
  WTF::StringImpl *v279;
  WTF::StringImpl *v280;
  uint64_t v281;
  uint64_t v282;
  int v283;
  uint64_t v284;
  WTF::StringImpl *v285;
  WTF::StringImpl *v286;
  unsigned __int8 *v288;
  unsigned int v289;
  unsigned __int8 *v290;
  unsigned int v291;
  unsigned __int8 *v292;
  unsigned int v293;
  double v294;
  double v295;
  double v296;
  double v297;
  double v298;
  double v299;
  double v300;
  double v301;
  double v302;
  double v303;
  double v304;
  double v305;
  double v306;
  double v307;
  double v308;
  double v309;
  double v310;
  unsigned __int8 *v311;
  unsigned int v312;
  unsigned __int8 *v313;
  unsigned int v314;
  unsigned __int8 *v315;
  unsigned int v316;
  unsigned __int8 *v317;
  unsigned int v318;
  unsigned __int8 *v319;
  unsigned int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  WTF::StringImpl *v329;
  unint64_t v330;
  int v331;
  int v332;
  uint64_t v333;

  v5 = *(_QWORD *)(a1 + 56);
  v6 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v7 = 8 * *(unsigned __int8 *)(v6 + 14);
  v8 = JSC::allocateCell<JSC::JSFinalObject>(v5, v7 + 16);
  v9 = *(_DWORD *)(v6 + 8);
  *(_DWORD *)v8 = v6 >> 4;
  *(_DWORD *)(v8 + 4) = v9;
  *(_QWORD *)(v8 + 8) = 0;
  bzero((void *)(v8 + 16), v7);
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a3 + 16);
  if (!v11 || (v12 = *(_DWORD *)(v11 + 4)) == 0)
  {
    v13 = *(_QWORD *)(v10 + 41968);
    goto LABEL_9;
  }
  if (v12 != 1)
    goto LABEL_6;
  v288 = *(unsigned __int8 **)(v11 + 8);
  if ((*(_BYTE *)(v11 + 16) & 4) != 0)
  {
    v289 = *v288;
LABEL_605:
    v13 = *(_QWORD *)(v10 + 8 * v289 + 42216);
    goto LABEL_9;
  }
  v321 = *(unsigned __int16 *)v288;
  if (v321 <= 0xFF)
  {
    v289 = v321;
    goto LABEL_605;
  }
LABEL_6:
  v13 = *(_QWORD *)(v10 + 64760);
  if (!v13 || v11 != *(_QWORD *)(v13 + 8))
    v13 = JSC::jsStringWithCacheSlowCase();
LABEL_9:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v14 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v14, v13, 0, (uint64_t)&v329);
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v15);
    else
      *(_DWORD *)v14 -= 2;
  }
  v16 = *(double *)a3;
  if ((*(_QWORD *)a3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v17 = (int)v16, v16 == (double)(int)v17)
    && ((_DWORD)v17 || (*(_QWORD *)&v16 & 0x8000000000000000) == 0))
  {
    v18 = v17 | 0xFFFE000000000000;
  }
  else
  {
    v18 = *(_QWORD *)&v16 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v329);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = WebCore::JSConverter<WebCore::IDLEnumeration<WebCore::RTCStatsReport::Type>>::convert(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned int *)(a3 + 8));
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v22 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v22, v21, 0, (uint64_t)&v329);
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v23);
    else
      *(_DWORD *)v22 -= 2;
  }
  v24 = *(_QWORD *)(a3 + 48);
  if (!v24)
    goto LABEL_37;
  v25 = *(_QWORD *)(a1 + 56);
  v26 = *(_DWORD *)(v24 + 4);
  if (v26)
  {
    if (v26 != 1)
    {
LABEL_30:
      v27 = *(_QWORD *)(v25 + 64760);
      if (!v27 || v24 != *(_QWORD *)(v27 + 8))
        v27 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_33;
    }
    v311 = *(unsigned __int8 **)(v24 + 8);
    if ((*(_BYTE *)(v24 + 16) & 4) != 0)
    {
      v312 = *v311;
    }
    else
    {
      v324 = *(unsigned __int16 *)v311;
      if (v324 > 0xFF)
        goto LABEL_30;
      v312 = v324;
    }
    v27 = *(_QWORD *)(v25 + 8 * v312 + 42216);
  }
  else
  {
    v27 = *(_QWORD *)(v25 + 41968);
  }
LABEL_33:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v28 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v28, v27, 0, (uint64_t)&v329);
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v29);
    else
      *(_DWORD *)v28 -= 2;
  }
LABEL_37:
  v30 = *(_QWORD *)(a1 + 56);
  v31 = *(_QWORD *)(a3 + 32);
  if (!v31 || (v32 = *(_DWORD *)(v31 + 4)) == 0)
  {
    v33 = *(_QWORD *)(v30 + 41968);
    goto LABEL_43;
  }
  if (v32 != 1)
    goto LABEL_40;
  v290 = *(unsigned __int8 **)(v31 + 8);
  if ((*(_BYTE *)(v31 + 16) & 4) != 0)
  {
    v291 = *v290;
LABEL_608:
    v33 = *(_QWORD *)(v30 + 8 * v291 + 42216);
    goto LABEL_43;
  }
  v322 = *(unsigned __int16 *)v290;
  if (v322 <= 0xFF)
  {
    v291 = v322;
    goto LABEL_608;
  }
LABEL_40:
  v33 = *(_QWORD *)(v30 + 64760);
  if (!v33 || v31 != *(_QWORD *)(v33 + 8))
    v33 = JSC::jsStringWithCacheSlowCase();
LABEL_43:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v34 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v34, v33, 0, (uint64_t)&v329);
  if (v34)
  {
    if (*(_DWORD *)v34 == 2)
      WTF::StringImpl::destroy(v34, v35);
    else
      *(_DWORD *)v34 -= 2;
  }
  v36 = *(unsigned int *)(a3 + 24);
  v37 = (v36 & 0x80000000) != 0
      ? COERCE__INT64((double)v36) + 0x2000000000000
      : v36 | 0xFFFE000000000000;
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v38 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v38, v37, 0, (uint64_t)&v329);
  if (v38)
  {
    if (*(_DWORD *)v38 == 2)
      WTF::StringImpl::destroy(v38, v39);
    else
      *(_DWORD *)v38 -= 2;
  }
  v40 = *(_QWORD *)(a3 + 40);
  if (!v40)
    goto LABEL_63;
  v41 = *(_QWORD *)(a1 + 56);
  v42 = *(_DWORD *)(v40 + 4);
  if (v42)
  {
    if (v42 != 1)
    {
LABEL_56:
      v43 = *(_QWORD *)(v41 + 64760);
      if (!v43 || v40 != *(_QWORD *)(v43 + 8))
        v43 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_59;
    }
    v313 = *(unsigned __int8 **)(v40 + 8);
    if ((*(_BYTE *)(v40 + 16) & 4) != 0)
    {
      v314 = *v313;
    }
    else
    {
      v325 = *(unsigned __int16 *)v313;
      if (v325 > 0xFF)
        goto LABEL_56;
      v314 = v325;
    }
    v43 = *(_QWORD *)(v41 + 8 * v314 + 42216);
  }
  else
  {
    v43 = *(_QWORD *)(v41 + 41968);
  }
LABEL_59:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v44 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v44, v43, 0, (uint64_t)&v329);
  if (v44)
  {
    if (*(_DWORD *)v44 == 2)
      WTF::StringImpl::destroy(v44, v45);
    else
      *(_DWORD *)v44 -= 2;
  }
LABEL_63:
  if (*(_BYTE *)(a3 + 96))
  {
    v46 = *(double *)(a3 + 88);
    if ((*(_QWORD *)&v46 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v47 = (int)v46, v46 == (double)(int)v47)
      && ((_DWORD)v47 || (*(_QWORD *)&v46 & 0x8000000000000000) == 0))
    {
      v48 = v47 | 0xFFFE000000000000;
    }
    else
    {
      v48 = *(_QWORD *)&v46 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v49 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v49, v48, 0, (uint64_t)&v329);
    if (v49)
    {
      if (*(_DWORD *)v49 == 2)
        WTF::StringImpl::destroy(v49, v50);
      else
        *(_DWORD *)v49 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 80))
  {
    v51 = *(_QWORD *)(a3 + 72);
    if (v51 == (int)v51)
      v52 = *(_QWORD *)(a3 + 72) | 0xFFFE000000000000;
    else
      v52 = COERCE__INT64((double)v51) + 0x2000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v53 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v53, v52, 0, (uint64_t)&v329);
    if (v53)
    {
      if (*(_DWORD *)v53 == 2)
        WTF::StringImpl::destroy(v53, v54);
      else
        *(_DWORD *)v53 -= 2;
    }
  }
  if (!*(_BYTE *)(a3 + 64))
    goto LABEL_89;
  v55 = *(_QWORD *)(a3 + 56);
  if (HIDWORD(v55))
  {
    v294 = (double)v55;
  }
  else
  {
    if ((v55 & 0x80000000) == 0)
    {
      v56 = v55 | 0xFFFE000000000000;
      goto LABEL_85;
    }
    v294 = (double)v55;
  }
  v56 = *(_QWORD *)&v294 + 0x2000000000000;
LABEL_85:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v57 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v57, v56, 0, (uint64_t)&v329);
  if (v57)
  {
    if (*(_DWORD *)v57 == 2)
      WTF::StringImpl::destroy(v57, v58);
    else
      *(_DWORD *)v57 -= 2;
  }
LABEL_89:
  if (*(_BYTE *)(a3 + 704))
  {
    v59 = *(double *)(a3 + 696);
    if ((*(_QWORD *)&v59 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v60 = (int)v59, v59 == (double)(int)v60)
      && ((_DWORD)v60 || (*(_QWORD *)&v59 & 0x8000000000000000) == 0))
    {
      v61 = v60 | 0xFFFE000000000000;
    }
    else
    {
      v61 = *(_QWORD *)&v59 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v62 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v62, v61, 0, (uint64_t)&v329);
    if (v62)
    {
      if (*(_DWORD *)v62 == 2)
        WTF::StringImpl::destroy(v62, v63);
      else
        *(_DWORD *)v62 -= 2;
    }
  }
  if (!*(_BYTE *)(a3 + 408))
    goto LABEL_108;
  v64 = *(_QWORD *)(a3 + 400);
  if (HIDWORD(v64))
  {
    v295 = (double)v64;
  }
  else
  {
    if ((v64 & 0x80000000) == 0)
    {
      v65 = v64 | 0xFFFE000000000000;
      goto LABEL_104;
    }
    v295 = (double)v64;
  }
  v65 = *(_QWORD *)&v295 + 0x2000000000000;
LABEL_104:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v66 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v66, v65, 0, (uint64_t)&v329);
  if (v66)
  {
    if (*(_DWORD *)v66 == 2)
      WTF::StringImpl::destroy(v66, v67);
    else
      *(_DWORD *)v66 -= 2;
  }
LABEL_108:
  if (!*(_BYTE *)(a3 + 624))
    goto LABEL_116;
  v68 = *(_QWORD *)(a3 + 616);
  if (HIDWORD(v68))
  {
    v296 = (double)v68;
  }
  else
  {
    if ((v68 & 0x80000000) == 0)
    {
      v69 = v68 | 0xFFFE000000000000;
      goto LABEL_112;
    }
    v296 = (double)v68;
  }
  v69 = *(_QWORD *)&v296 + 0x2000000000000;
LABEL_112:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v70 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v70, v69, 0, (uint64_t)&v329);
  if (v70)
  {
    if (*(_DWORD *)v70 == 2)
      WTF::StringImpl::destroy(v70, v71);
    else
      *(_DWORD *)v70 -= 2;
  }
LABEL_116:
  if (!*(_BYTE *)(a3 + 656))
    goto LABEL_124;
  v72 = *(_QWORD *)(a3 + 648);
  if (HIDWORD(v72))
  {
    v297 = (double)v72;
  }
  else
  {
    if ((v72 & 0x80000000) == 0)
    {
      v73 = v72 | 0xFFFE000000000000;
      goto LABEL_120;
    }
    v297 = (double)v72;
  }
  v73 = *(_QWORD *)&v297 + 0x2000000000000;
LABEL_120:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v74 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v74, v73, 0, (uint64_t)&v329);
  if (v74)
  {
    if (*(_DWORD *)v74 == 2)
      WTF::StringImpl::destroy(v74, v75);
    else
      *(_DWORD *)v74 -= 2;
  }
LABEL_124:
  if (*(_BYTE *)(a3 + 496))
  {
    v76 = *(double *)(a3 + 488);
    if ((*(_QWORD *)&v76 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v77 = (int)v76, v76 == (double)(int)v77)
      && ((_DWORD)v77 || (*(_QWORD *)&v76 & 0x8000000000000000) == 0))
    {
      v78 = v77 | 0xFFFE000000000000;
    }
    else
    {
      v78 = *(_QWORD *)&v76 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v79 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v79, v78, 0, (uint64_t)&v329);
    if (v79)
    {
      if (*(_DWORD *)v79 == 2)
        WTF::StringImpl::destroy(v79, v80);
      else
        *(_DWORD *)v79 -= 2;
    }
  }
  if (!*(_BYTE *)(a3 + 360))
    goto LABEL_143;
  v81 = *(_QWORD *)(a3 + 352);
  if (HIDWORD(v81))
  {
    v298 = (double)v81;
  }
  else
  {
    if ((v81 & 0x80000000) == 0)
    {
      v82 = v81 | 0xFFFE000000000000;
      goto LABEL_139;
    }
    v298 = (double)v81;
  }
  v82 = *(_QWORD *)&v298 + 0x2000000000000;
LABEL_139:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v83 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v83, v82, 0, (uint64_t)&v329);
  if (v83)
  {
    if (*(_DWORD *)v83 == 2)
      WTF::StringImpl::destroy(v83, v84);
    else
      *(_DWORD *)v83 -= 2;
  }
LABEL_143:
  if (!*(_BYTE *)(a3 + 392))
    goto LABEL_151;
  v85 = *(_QWORD *)(a3 + 384);
  if (HIDWORD(v85))
  {
    v299 = (double)v85;
  }
  else
  {
    if ((v85 & 0x80000000) == 0)
    {
      v86 = v85 | 0xFFFE000000000000;
      goto LABEL_147;
    }
    v299 = (double)v85;
  }
  v86 = *(_QWORD *)&v299 + 0x2000000000000;
LABEL_147:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v87 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v87, v86, 0, (uint64_t)&v329);
  if (v87)
  {
    if (*(_DWORD *)v87 == 2)
      WTF::StringImpl::destroy(v87, v88);
    else
      *(_DWORD *)v87 -= 2;
  }
LABEL_151:
  if (!*(_BYTE *)(a3 + 376))
    goto LABEL_159;
  v89 = *(_QWORD *)(a3 + 368);
  if (HIDWORD(v89))
  {
    v300 = (double)v89;
  }
  else
  {
    if ((v89 & 0x80000000) == 0)
    {
      v90 = v89 | 0xFFFE000000000000;
      goto LABEL_155;
    }
    v300 = (double)v89;
  }
  v90 = *(_QWORD *)&v300 + 0x2000000000000;
LABEL_155:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v91 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v91, v90, 0, (uint64_t)&v329);
  if (v91)
  {
    if (*(_DWORD *)v91 == 2)
      WTF::StringImpl::destroy(v91, v92);
    else
      *(_DWORD *)v91 -= 2;
  }
LABEL_159:
  if (*(_BYTE *)(a3 + 844))
  {
    v93 = *(unsigned int *)(a3 + 840);
    if ((v93 & 0x80000000) != 0)
      v94 = COERCE__INT64((double)v93) + 0x2000000000000;
    else
      v94 = v93 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v95 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v95, v94, 0, (uint64_t)&v329);
    if (v95)
    {
      if (*(_DWORD *)v95 == 2)
        WTF::StringImpl::destroy(v95, v96);
      else
        *(_DWORD *)v95 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 460))
  {
    v97 = *(unsigned int *)(a3 + 456);
    if ((v97 & 0x80000000) != 0)
      v98 = COERCE__INT64((double)v97) + 0x2000000000000;
    else
      v98 = v97 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v99 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v99, v98, 0, (uint64_t)&v329);
    if (v99)
    {
      if (*(_DWORD *)v99 == 2)
        WTF::StringImpl::destroy(v99, v100);
      else
        *(_DWORD *)v99 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 172))
  {
    v101 = *(unsigned int *)(a3 + 168);
    if ((v101 & 0x80000000) != 0)
      v102 = COERCE__INT64((double)v101) + 0x2000000000000;
    else
      v102 = v101 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v103 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v103, v102, 0, (uint64_t)&v329);
    if (v103)
    {
      if (*(_DWORD *)v103 == 2)
        WTF::StringImpl::destroy(v103, v104);
      else
        *(_DWORD *)v103 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 164))
  {
    v105 = *(unsigned int *)(a3 + 160);
    if ((v105 & 0x80000000) != 0)
      v106 = COERCE__INT64((double)v105) + 0x2000000000000;
    else
      v106 = v105 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v107 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v107, v106, 0, (uint64_t)&v329);
    if (v107)
    {
      if (*(_DWORD *)v107 == 2)
        WTF::StringImpl::destroy(v107, v108);
      else
        *(_DWORD *)v107 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 776))
  {
    v109 = *(unsigned int *)(a3 + 772);
    if ((v109 & 0x80000000) != 0)
      v110 = COERCE__INT64((double)v109) + 0x2000000000000;
    else
      v110 = v109 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v111 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v111, v110, 0, (uint64_t)&v329);
    if (v111)
    {
      if (*(_DWORD *)v111 == 2)
        WTF::StringImpl::destroy(v111, v112);
      else
        *(_DWORD *)v111 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 132))
  {
    v113 = *(unsigned int *)(a3 + 128);
    if ((v113 & 0x80000000) != 0)
      v114 = COERCE__INT64((double)v113) + 0x2000000000000;
    else
      v114 = v113 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v115 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v115, v114, 0, (uint64_t)&v329);
    if (v115)
    {
      if (*(_DWORD *)v115 == 2)
        WTF::StringImpl::destroy(v115, v116);
      else
        *(_DWORD *)v115 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 156))
  {
    v117 = *(unsigned int *)(a3 + 152);
    if ((v117 & 0x80000000) != 0)
      v118 = COERCE__INT64((double)v117) + 0x2000000000000;
    else
      v118 = v117 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v119 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v119, v118, 0, (uint64_t)&v329);
    if (v119)
    {
      if (*(_DWORD *)v119 == 2)
        WTF::StringImpl::destroy(v119, v120);
      else
        *(_DWORD *)v119 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 184))
  {
    v121 = *(double *)(a3 + 176);
    if ((*(_QWORD *)&v121 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v122 = (int)v121, v121 == (double)(int)v122)
      && ((_DWORD)v122 || (*(_QWORD *)&v121 & 0x8000000000000000) == 0))
    {
      v123 = v122 | 0xFFFE000000000000;
    }
    else
    {
      v123 = *(_QWORD *)&v121 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v124 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v124, v123, 0, (uint64_t)&v329);
    if (v124)
    {
      if (*(_DWORD *)v124 == 2)
        WTF::StringImpl::destroy(v124, v125);
      else
        *(_DWORD *)v124 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 748))
  {
    v126 = *(unsigned int *)(a3 + 744);
    if ((v126 & 0x80000000) != 0)
      v127 = COERCE__INT64((double)v126) + 0x2000000000000;
    else
      v127 = v126 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v128 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v128, v127, 0, (uint64_t)&v329);
    if (v128)
    {
      if (*(_DWORD *)v128 == 2)
        WTF::StringImpl::destroy(v128, v129);
      else
        *(_DWORD *)v128 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 148))
  {
    v130 = *(unsigned int *)(a3 + 144);
    if ((v130 & 0x80000000) != 0)
      v131 = COERCE__INT64((double)v130) + 0x2000000000000;
    else
      v131 = v130 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v132 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v132, v131, 0, (uint64_t)&v329);
    if (v132)
    {
      if (*(_DWORD *)v132 == 2)
        WTF::StringImpl::destroy(v132, v133);
      else
        *(_DWORD *)v132 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 284))
  {
    v134 = *(unsigned int *)(a3 + 280);
    if ((v134 & 0x80000000) != 0)
      v135 = COERCE__INT64((double)v134) + 0x2000000000000;
    else
      v135 = v134 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v136 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v136, v135, 0, (uint64_t)&v329);
    if (v136)
    {
      if (*(_DWORD *)v136 == 2)
        WTF::StringImpl::destroy(v136, v137);
      else
        *(_DWORD *)v136 -= 2;
    }
  }
  if (!*(_BYTE *)(a3 + 328))
    goto LABEL_248;
  v138 = *(_QWORD *)(a3 + 320);
  if (HIDWORD(v138))
  {
    v301 = (double)v138;
  }
  else
  {
    if ((v138 & 0x80000000) == 0)
    {
      v139 = v138 | 0xFFFE000000000000;
      goto LABEL_244;
    }
    v301 = (double)v138;
  }
  v139 = *(_QWORD *)&v301 + 0x2000000000000;
LABEL_244:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v140 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v140, v139, 0, (uint64_t)&v329);
  if (v140)
  {
    if (*(_DWORD *)v140 == 2)
      WTF::StringImpl::destroy(v140, v141);
    else
      *(_DWORD *)v140 -= 2;
  }
LABEL_248:
  if (!*(_BYTE *)(a3 + 672))
    goto LABEL_256;
  v142 = *(_QWORD *)(a3 + 664);
  if (HIDWORD(v142))
  {
    v302 = (double)v142;
  }
  else
  {
    if ((v142 & 0x80000000) == 0)
    {
      v143 = v142 | 0xFFFE000000000000;
      goto LABEL_252;
    }
    v302 = (double)v142;
  }
  v143 = *(_QWORD *)&v302 + 0x2000000000000;
LABEL_252:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v144 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v144, v143, 0, (uint64_t)&v329);
  if (v144)
  {
    if (*(_DWORD *)v144 == 2)
      WTF::StringImpl::destroy(v144, v145);
    else
      *(_DWORD *)v144 -= 2;
  }
LABEL_256:
  if (*(_BYTE *)(a3 + 512))
  {
    v146 = *(double *)(a3 + 504);
    if ((*(_QWORD *)&v146 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v147 = (int)v146, v146 == (double)(int)v147)
      && ((_DWORD)v147 || (*(_QWORD *)&v146 & 0x8000000000000000) == 0))
    {
      v148 = v147 | 0xFFFE000000000000;
    }
    else
    {
      v148 = *(_QWORD *)&v146 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v149 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v149, v148, 0, (uint64_t)&v329);
    if (v149)
    {
      if (*(_DWORD *)v149 == 2)
        WTF::StringImpl::destroy(v149, v150);
      else
        *(_DWORD *)v149 -= 2;
    }
  }
  if (!*(_BYTE *)(a3 + 544))
    goto LABEL_275;
  v151 = *(_QWORD *)(a3 + 536);
  if (HIDWORD(v151))
  {
    v303 = (double)v151;
  }
  else
  {
    if ((v151 & 0x80000000) == 0)
    {
      v152 = v151 | 0xFFFE000000000000;
      goto LABEL_271;
    }
    v303 = (double)v151;
  }
  v152 = *(_QWORD *)&v303 + 0x2000000000000;
LABEL_271:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v153 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v153, v152, 0, (uint64_t)&v329);
  if (v153)
  {
    if (*(_DWORD *)v153 == 2)
      WTF::StringImpl::destroy(v153, v154);
    else
      *(_DWORD *)v153 -= 2;
  }
LABEL_275:
  if (*(_BYTE *)(a3 + 560))
  {
    v155 = *(double *)(a3 + 552);
    if ((*(_QWORD *)&v155 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v156 = (int)v155, v155 == (double)(int)v156)
      && ((_DWORD)v156 || (*(_QWORD *)&v155 & 0x8000000000000000) == 0))
    {
      v157 = v156 | 0xFFFE000000000000;
    }
    else
    {
      v157 = *(_QWORD *)&v155 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v158 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v158, v157, 0, (uint64_t)&v329);
    if (v158)
    {
      if (*(_DWORD *)v158 == 2)
        WTF::StringImpl::destroy(v158, v159);
      else
        *(_DWORD *)v158 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 528))
  {
    v160 = *(double *)(a3 + 520);
    if ((*(_QWORD *)&v160 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v161 = (int)v160, v160 == (double)(int)v161)
      && ((_DWORD)v161 || (*(_QWORD *)&v160 & 0x8000000000000000) == 0))
    {
      v162 = v161 | 0xFFFE000000000000;
    }
    else
    {
      v162 = *(_QWORD *)&v160 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v163 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v163, v162, 0, (uint64_t)&v329);
    if (v163)
    {
      if (*(_DWORD *)v163 == 2)
        WTF::StringImpl::destroy(v163, v164);
      else
        *(_DWORD *)v163 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 140))
  {
    v165 = *(unsigned int *)(a3 + 136);
    if ((v165 & 0x80000000) != 0)
      v166 = COERCE__INT64((double)v165) + 0x2000000000000;
    else
      v166 = v165 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v167 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v167, v166, 0, (uint64_t)&v329);
    if (v167)
    {
      if (*(_DWORD *)v167 == 2)
        WTF::StringImpl::destroy(v167, v168);
      else
        *(_DWORD *)v167 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 312))
  {
    v169 = *(double *)(a3 + 304);
    if ((*(_QWORD *)&v169 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v170 = (int)v169, v169 == (double)(int)v170)
      && ((_DWORD)v170 || (*(_QWORD *)&v169 & 0x8000000000000000) == 0))
    {
      v171 = v170 | 0xFFFE000000000000;
    }
    else
    {
      v171 = *(_QWORD *)&v169 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v172 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v172, v171, 0, (uint64_t)&v329);
    if (v172)
    {
      if (*(_DWORD *)v172 == 2)
        WTF::StringImpl::destroy(v172, v173);
      else
        *(_DWORD *)v172 -= 2;
    }
  }
  v174 = *(_QWORD *)(a3 + 112);
  if (!v174)
    goto LABEL_325;
  v175 = *(_QWORD *)(a1 + 56);
  v176 = *(_DWORD *)(v174 + 4);
  if (v176)
  {
    if (v176 != 1)
    {
LABEL_318:
      v177 = *(_QWORD *)(v175 + 64760);
      if (!v177 || v174 != *(_QWORD *)(v177 + 8))
        v177 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_321;
    }
    v315 = *(unsigned __int8 **)(v174 + 8);
    if ((*(_BYTE *)(v174 + 16) & 4) != 0)
    {
      v316 = *v315;
    }
    else
    {
      v326 = *(unsigned __int16 *)v315;
      if (v326 > 0xFF)
        goto LABEL_318;
      v316 = v326;
    }
    v177 = *(_QWORD *)(v175 + 8 * v316 + 42216);
  }
  else
  {
    v177 = *(_QWORD *)(v175 + 41968);
  }
LABEL_321:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v178 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v178, v177, 0, (uint64_t)&v329);
  if (v178)
  {
    if (*(_DWORD *)v178 == 2)
      WTF::StringImpl::destroy(v178, v179);
    else
      *(_DWORD *)v178 -= 2;
  }
LABEL_325:
  if (*(_BYTE *)(a3 + 452))
  {
    v180 = *(unsigned int *)(a3 + 448);
    if ((v180 & 0x80000000) != 0)
      v181 = COERCE__INT64((double)v180) + 0x2000000000000;
    else
      v181 = v180 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v182 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v182, v181, 0, (uint64_t)&v329);
    if (v182)
    {
      if (*(_DWORD *)v182 == 2)
        WTF::StringImpl::destroy(v182, v183);
      else
        *(_DWORD *)v182 -= 2;
    }
  }
  if (!*(_BYTE *)(a3 + 344))
    goto LABEL_340;
  v184 = *(_QWORD *)(a3 + 336);
  if (HIDWORD(v184))
  {
    v304 = (double)v184;
  }
  else
  {
    if ((v184 & 0x80000000) == 0)
    {
      v185 = v184 | 0xFFFE000000000000;
      goto LABEL_336;
    }
    v304 = (double)v184;
  }
  v185 = *(_QWORD *)&v304 + 0x2000000000000;
LABEL_336:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v186 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v186, v185, 0, (uint64_t)&v329);
  if (v186)
  {
    if (*(_DWORD *)v186 == 2)
      WTF::StringImpl::destroy(v186, v187);
    else
      *(_DWORD *)v186 -= 2;
  }
LABEL_340:
  if (*(_BYTE *)(a3 + 260))
  {
    v188 = *(unsigned int *)(a3 + 256);
    if ((v188 & 0x80000000) != 0)
      v189 = COERCE__INT64((double)v188) + 0x2000000000000;
    else
      v189 = v188 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v190 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v190, v189, 0, (uint64_t)&v329);
    if (v190)
    {
      if (*(_DWORD *)v190 == 2)
        WTF::StringImpl::destroy(v190, v191);
      else
        *(_DWORD *)v190 -= 2;
    }
  }
  v192 = *(_QWORD *)(a3 + 760);
  if (!v192)
    goto LABEL_357;
  v193 = *(_QWORD *)(a1 + 56);
  v194 = *(_DWORD *)(v192 + 4);
  if (v194)
  {
    if (v194 != 1)
    {
LABEL_350:
      v195 = *(_QWORD *)(v193 + 64760);
      if (!v195 || v192 != *(_QWORD *)(v195 + 8))
        v195 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_353;
    }
    v317 = *(unsigned __int8 **)(v192 + 8);
    if ((*(_BYTE *)(v192 + 16) & 4) != 0)
    {
      v318 = *v317;
    }
    else
    {
      v327 = *(unsigned __int16 *)v317;
      if (v327 > 0xFF)
        goto LABEL_350;
      v318 = v327;
    }
    v195 = *(_QWORD *)(v193 + 8 * v318 + 42216);
  }
  else
  {
    v195 = *(_QWORD *)(v193 + 41968);
  }
LABEL_353:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v196 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v196, v195, 0, (uint64_t)&v329);
  if (v196)
  {
    if (*(_DWORD *)v196 == 2)
      WTF::StringImpl::destroy(v196, v197);
    else
      *(_DWORD *)v196 -= 2;
  }
LABEL_357:
  if (*(_BYTE *)(a3 + 468))
  {
    v198 = *(unsigned int *)(a3 + 464);
    if ((v198 & 0x80000000) != 0)
      v199 = COERCE__INT64((double)v198) + 0x2000000000000;
    else
      v199 = v198 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v200 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v200, v199, 0, (uint64_t)&v329);
    if (v200)
    {
      if (*(_DWORD *)v200 == 2)
        WTF::StringImpl::destroy(v200, v201);
      else
        *(_DWORD *)v200 -= 2;
    }
  }
  if (!*(_BYTE *)(a3 + 200))
    goto LABEL_372;
  v202 = *(_QWORD *)(a3 + 192);
  if (HIDWORD(v202))
  {
    v305 = (double)v202;
  }
  else
  {
    if ((v202 & 0x80000000) == 0)
    {
      v203 = v202 | 0xFFFE000000000000;
      goto LABEL_368;
    }
    v305 = (double)v202;
  }
  v203 = *(_QWORD *)&v305 + 0x2000000000000;
LABEL_368:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v204 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v204, v203, 0, (uint64_t)&v329);
  if (v204)
  {
    if (*(_DWORD *)v204 == 2)
      WTF::StringImpl::destroy(v204, v205);
    else
      *(_DWORD *)v204 -= 2;
  }
LABEL_372:
  v206 = *(_QWORD *)(a3 + 120);
  if (!v206)
    goto LABEL_382;
  v207 = *(_QWORD *)(a1 + 56);
  v208 = *(_DWORD *)(v206 + 4);
  if (v208)
  {
    if (v208 != 1)
    {
LABEL_375:
      v209 = *(_QWORD *)(v207 + 64760);
      if (!v209 || v206 != *(_QWORD *)(v209 + 8))
        v209 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_378;
    }
    v319 = *(unsigned __int8 **)(v206 + 8);
    if ((*(_BYTE *)(v206 + 16) & 4) != 0)
    {
      v320 = *v319;
    }
    else
    {
      v328 = *(unsigned __int16 *)v319;
      if (v328 > 0xFF)
        goto LABEL_375;
      v320 = v328;
    }
    v209 = *(_QWORD *)(v207 + 8 * v320 + 42216);
  }
  else
  {
    v209 = *(_QWORD *)(v207 + 41968);
  }
LABEL_378:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v210 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v210, v209, 0, (uint64_t)&v329);
  if (v210)
  {
    if (*(_DWORD *)v210 == 2)
      WTF::StringImpl::destroy(v210, v211);
    else
      *(_DWORD *)v210 -= 2;
  }
LABEL_382:
  if (!*(_BYTE *)(a3 + 688))
    goto LABEL_390;
  v212 = *(_QWORD *)(a3 + 680);
  if (HIDWORD(v212))
  {
    v306 = (double)v212;
  }
  else
  {
    if ((v212 & 0x80000000) == 0)
    {
      v213 = v212 | 0xFFFE000000000000;
      goto LABEL_386;
    }
    v306 = (double)v212;
  }
  v213 = *(_QWORD *)&v306 + 0x2000000000000;
LABEL_386:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v214 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v214, v213, 0, (uint64_t)&v329);
  if (v214)
  {
    if (*(_DWORD *)v214 == 2)
      WTF::StringImpl::destroy(v214, v215);
    else
      *(_DWORD *)v214 -= 2;
  }
LABEL_390:
  if (!*(_BYTE *)(a3 + 824))
    goto LABEL_398;
  v216 = *(_QWORD *)(a3 + 816);
  if (HIDWORD(v216))
  {
    v307 = (double)v216;
  }
  else
  {
    if ((v216 & 0x80000000) == 0)
    {
      v217 = v216 | 0xFFFE000000000000;
      goto LABEL_394;
    }
    v307 = (double)v216;
  }
  v217 = *(_QWORD *)&v307 + 0x2000000000000;
LABEL_394:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v218 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v218, v217, 0, (uint64_t)&v329);
  if (v218)
  {
    if (*(_DWORD *)v218 == 2)
      WTF::StringImpl::destroy(v218, v219);
    else
      *(_DWORD *)v218 -= 2;
  }
LABEL_398:
  if (!*(_BYTE *)(a3 + 808))
    goto LABEL_406;
  v220 = *(_QWORD *)(a3 + 800);
  if (HIDWORD(v220))
  {
    v308 = (double)v220;
  }
  else
  {
    if ((v220 & 0x80000000) == 0)
    {
      v221 = v220 | 0xFFFE000000000000;
      goto LABEL_402;
    }
    v308 = (double)v220;
  }
  v221 = *(_QWORD *)&v308 + 0x2000000000000;
LABEL_402:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v222 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v222, v221, 0, (uint64_t)&v329);
  if (v222)
  {
    if (*(_DWORD *)v222 == 2)
      WTF::StringImpl::destroy(v222, v223);
    else
      *(_DWORD *)v222 -= 2;
  }
LABEL_406:
  if (*(_BYTE *)(a3 + 836))
  {
    v224 = *(unsigned int *)(a3 + 832);
    if ((v224 & 0x80000000) != 0)
      v225 = COERCE__INT64((double)v224) + 0x2000000000000;
    else
      v225 = v224 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v226 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v226, v225, 0, (uint64_t)&v329);
    if (v226)
    {
      if (*(_DWORD *)v226 == 2)
        WTF::StringImpl::destroy(v226, v227);
      else
        *(_DWORD *)v226 -= 2;
    }
  }
  if (!*(_BYTE *)(a3 + 640))
    goto LABEL_421;
  v228 = *(_QWORD *)(a3 + 632);
  if (HIDWORD(v228))
  {
    v309 = (double)v228;
  }
  else
  {
    if ((v228 & 0x80000000) == 0)
    {
      v229 = v228 | 0xFFFE000000000000;
      goto LABEL_417;
    }
    v309 = (double)v228;
  }
  v229 = *(_QWORD *)&v309 + 0x2000000000000;
LABEL_417:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v230 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v230, v229, 0, (uint64_t)&v329);
  if (v230)
  {
    if (*(_DWORD *)v230 == 2)
      WTF::StringImpl::destroy(v230, v231);
    else
      *(_DWORD *)v230 -= 2;
  }
LABEL_421:
  if (*(_BYTE *)(a3 + 792))
  {
    v232 = *(double *)(a3 + 784);
    if ((*(_QWORD *)&v232 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v233 = (int)v232, v232 == (double)(int)v233)
      && ((_DWORD)v233 || (*(_QWORD *)&v232 & 0x8000000000000000) == 0))
    {
      v234 = v233 | 0xFFFE000000000000;
    }
    else
    {
      v234 = *(_QWORD *)&v232 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v235 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v235, v234, 0, (uint64_t)&v329);
    if (v235)
    {
      if (*(_DWORD *)v235 == 2)
        WTF::StringImpl::destroy(v235, v236);
      else
        *(_DWORD *)v235 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 720))
  {
    v237 = *(double *)(a3 + 712);
    if ((*(_QWORD *)&v237 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v238 = (int)v237, v237 == (double)(int)v238)
      && ((_DWORD)v238 || (*(_QWORD *)&v237 & 0x8000000000000000) == 0))
    {
      v239 = v238 | 0xFFFE000000000000;
    }
    else
    {
      v239 = *(_QWORD *)&v237 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v240 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v240, v239, 0, (uint64_t)&v329);
    if (v240)
    {
      if (*(_DWORD *)v240 == 2)
        WTF::StringImpl::destroy(v240, v241);
      else
        *(_DWORD *)v240 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 216))
  {
    v242 = *(double *)(a3 + 208);
    if ((*(_QWORD *)&v242 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v243 = (int)v242, v242 == (double)(int)v243)
      && ((_DWORD)v243 || (*(_QWORD *)&v242 & 0x8000000000000000) == 0))
    {
      v244 = v243 | 0xFFFE000000000000;
    }
    else
    {
      v244 = *(_QWORD *)&v242 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v245 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v245, v244, 0, (uint64_t)&v329);
    if (v245)
    {
      if (*(_DWORD *)v245 == 2)
        WTF::StringImpl::destroy(v245, v246);
      else
        *(_DWORD *)v245 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 296))
  {
    v247 = *(double *)(a3 + 288);
    if ((*(_QWORD *)&v247 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v248 = (int)v247, v247 == (double)(int)v248)
      && ((_DWORD)v248 || (*(_QWORD *)&v247 & 0x8000000000000000) == 0))
    {
      v249 = v248 | 0xFFFE000000000000;
    }
    else
    {
      v249 = *(_QWORD *)&v247 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v250 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v250, v249, 0, (uint64_t)&v329);
    if (v250)
    {
      if (*(_DWORD *)v250 == 2)
        WTF::StringImpl::destroy(v250, v251);
      else
        *(_DWORD *)v250 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 232))
  {
    v252 = *(double *)(a3 + 224);
    if ((*(_QWORD *)&v252 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v253 = (int)v252, v252 == (double)(int)v253)
      && ((_DWORD)v253 || (*(_QWORD *)&v252 & 0x8000000000000000) == 0))
    {
      v254 = v253 | 0xFFFE000000000000;
    }
    else
    {
      v254 = *(_QWORD *)&v252 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v255 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v255, v254, 0, (uint64_t)&v329);
    if (v255)
    {
      if (*(_DWORD *)v255 == 2)
        WTF::StringImpl::destroy(v255, v256);
      else
        *(_DWORD *)v255 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 272))
  {
    v257 = *(double *)(a3 + 264);
    if ((*(_QWORD *)&v257 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v258 = (int)v257, v257 == (double)(int)v258)
      && ((_DWORD)v258 || (*(_QWORD *)&v257 & 0x8000000000000000) == 0))
    {
      v259 = v258 | 0xFFFE000000000000;
    }
    else
    {
      v259 = *(_QWORD *)&v257 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v260 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v260, v259, 0, (uint64_t)&v329);
    if (v260)
    {
      if (*(_DWORD *)v260 == 2)
        WTF::StringImpl::destroy(v260, v261);
      else
        *(_DWORD *)v260 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 480))
  {
    v262 = *(double *)(a3 + 472);
    if ((*(_QWORD *)&v262 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v263 = (int)v262, v262 == (double)(int)v263)
      && ((_DWORD)v263 || (*(_QWORD *)&v262 & 0x8000000000000000) == 0))
    {
      v264 = v263 | 0xFFFE000000000000;
    }
    else
    {
      v264 = *(_QWORD *)&v262 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v265 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v265, v264, 0, (uint64_t)&v329);
    if (v265)
    {
      if (*(_DWORD *)v265 == 2)
        WTF::StringImpl::destroy(v265, v266);
      else
        *(_DWORD *)v265 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 736))
  {
    v267 = *(double *)(a3 + 728);
    if ((*(_QWORD *)&v267 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v268 = (int)v267, v267 == (double)(int)v268)
      && ((_DWORD)v268 || (*(_QWORD *)&v267 & 0x8000000000000000) == 0))
    {
      v269 = v268 | 0xFFFE000000000000;
    }
    else
    {
      v269 = *(_QWORD *)&v267 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v270 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v270, v269, 0, (uint64_t)&v329);
    if (v270)
    {
      if (*(_DWORD *)v270 == 2)
        WTF::StringImpl::destroy(v270, v271);
      else
        *(_DWORD *)v270 -= 2;
    }
  }
  if (!*(_BYTE *)(a3 + 576))
    goto LABEL_517;
  v272 = *(_QWORD *)(a3 + 568);
  if (HIDWORD(v272))
  {
    v310 = (double)v272;
  }
  else
  {
    if ((v272 & 0x80000000) == 0)
    {
      v273 = v272 | 0xFFFE000000000000;
      goto LABEL_513;
    }
    v310 = (double)v272;
  }
  v273 = *(_QWORD *)&v310 + 0x2000000000000;
LABEL_513:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v274 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v274, v273, 0, (uint64_t)&v329);
  if (v274)
  {
    if (*(_DWORD *)v274 == 2)
      WTF::StringImpl::destroy(v274, v275);
    else
      *(_DWORD *)v274 -= 2;
  }
LABEL_517:
  if (*(_BYTE *)(a3 + 248))
  {
    v276 = *(double *)(a3 + 240);
    if ((*(_QWORD *)&v276 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v277 = (int)v276, v276 == (double)(int)v277)
      && ((_DWORD)v277 || (*(_QWORD *)&v276 & 0x8000000000000000) == 0))
    {
      v278 = v277 | 0xFFFE000000000000;
    }
    else
    {
      v278 = *(_QWORD *)&v276 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v279 = v329;
    v329 = 0;
    v330 = v8;
    v331 = -1;
    v332 = 0x1000000;
    v333 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v279, v278, 0, (uint64_t)&v329);
    if (v279)
    {
      if (*(_DWORD *)v279 == 2)
        WTF::StringImpl::destroy(v279, v280);
      else
        *(_DWORD *)v279 -= 2;
    }
  }
  v281 = *(_QWORD *)(a1 + 56);
  v282 = *(_QWORD *)(a3 + 104);
  if (!v282 || (v283 = *(_DWORD *)(v282 + 4)) == 0)
  {
    v284 = *(_QWORD *)(v281 + 41968);
    goto LABEL_534;
  }
  if (v283 == 1)
  {
    v292 = *(unsigned __int8 **)(v282 + 8);
    if ((*(_BYTE *)(v282 + 16) & 4) != 0)
    {
      v293 = *v292;
    }
    else
    {
      v323 = *(unsigned __int16 *)v292;
      if (v323 > 0xFF)
        goto LABEL_531;
      v293 = v323;
    }
    v284 = *(_QWORD *)(v281 + 8 * v293 + 42216);
    goto LABEL_534;
  }
LABEL_531:
  v284 = *(_QWORD *)(v281 + 64760);
  if (!v284 || v282 != *(_QWORD *)(v284 + 8))
    v284 = JSC::jsStringWithCacheSlowCase();
LABEL_534:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v285 = v329;
  v329 = 0;
  v330 = v8;
  v331 = -1;
  v332 = 0x1000000;
  v333 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v285, v284, 0, (uint64_t)&v329);
  if (v285)
  {
    if (*(_DWORD *)v285 == 2)
      WTF::StringImpl::destroy(v285, v286);
    else
      *(_DWORD *)v285 -= 2;
  }
  return v8;
}

{
  uint64_t v5;
  unint64_t v6;
  size_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  double v16;
  uint64_t v17;
  unint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  uint64_t v36;
  uint64_t v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  double v46;
  uint64_t v47;
  unint64_t v48;
  WTF::StringImpl *v49;
  WTF::StringImpl *v50;
  uint64_t v51;
  unint64_t v52;
  WTF::StringImpl *v53;
  WTF::StringImpl *v54;
  unint64_t v55;
  unint64_t v56;
  WTF::StringImpl *v57;
  WTF::StringImpl *v58;
  double v59;
  uint64_t v60;
  unint64_t v61;
  WTF::StringImpl *v62;
  WTF::StringImpl *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  WTF::StringImpl *v68;
  WTF::StringImpl *v69;
  double v70;
  uint64_t v71;
  unint64_t v72;
  WTF::StringImpl *v73;
  WTF::StringImpl *v74;
  unint64_t v75;
  unint64_t v76;
  WTF::StringImpl *v77;
  WTF::StringImpl *v78;
  double v79;
  uint64_t v80;
  unint64_t v81;
  WTF::StringImpl *v82;
  WTF::StringImpl *v83;
  unsigned __int8 *v85;
  unsigned int v86;
  unsigned __int8 *v87;
  unsigned int v88;
  double v89;
  double v90;
  unsigned __int8 *v91;
  unsigned int v92;
  unsigned __int8 *v93;
  unsigned int v94;
  unsigned __int8 *v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  WTF::StringImpl *v102;
  unint64_t v103;
  int v104;
  int v105;
  uint64_t v106;

  v5 = *(_QWORD *)(a1 + 56);
  v6 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v7 = 8 * *(unsigned __int8 *)(v6 + 14);
  v8 = JSC::allocateCell<JSC::JSFinalObject>(v5, v7 + 16);
  v9 = *(_DWORD *)(v6 + 8);
  *(_DWORD *)v8 = v6 >> 4;
  *(_DWORD *)(v8 + 4) = v9;
  *(_QWORD *)(v8 + 8) = 0;
  bzero((void *)(v8 + 16), v7);
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a3 + 16);
  if (!v11 || (v12 = *(_DWORD *)(v11 + 4)) == 0)
  {
    v13 = *(_QWORD *)(v10 + 41968);
    goto LABEL_9;
  }
  if (v12 != 1)
    goto LABEL_6;
  v85 = *(unsigned __int8 **)(v11 + 8);
  if ((*(_BYTE *)(v11 + 16) & 4) != 0)
  {
    v86 = *v85;
LABEL_160:
    v13 = *(_QWORD *)(v10 + 8 * v86 + 42216);
    goto LABEL_9;
  }
  v97 = *(unsigned __int16 *)v85;
  if (v97 <= 0xFF)
  {
    v86 = v97;
    goto LABEL_160;
  }
LABEL_6:
  v13 = *(_QWORD *)(v10 + 64760);
  if (!v13 || v11 != *(_QWORD *)(v13 + 8))
    v13 = JSC::jsStringWithCacheSlowCase();
LABEL_9:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v14 = v102;
  v102 = 0;
  v103 = v8;
  v104 = -1;
  v105 = 0x1000000;
  v106 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v14, v13, 0, (uint64_t)&v102);
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v15);
    else
      *(_DWORD *)v14 -= 2;
  }
  v16 = *(double *)a3;
  if ((*(_QWORD *)a3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v17 = (int)v16, v16 == (double)(int)v17)
    && ((_DWORD)v17 || (*(_QWORD *)&v16 & 0x8000000000000000) == 0))
  {
    v18 = v17 | 0xFFFE000000000000;
  }
  else
  {
    v18 = *(_QWORD *)&v16 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v102;
  v102 = 0;
  v103 = v8;
  v104 = -1;
  v105 = 0x1000000;
  v106 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v102);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = WebCore::JSConverter<WebCore::IDLEnumeration<WebCore::RTCStatsReport::Type>>::convert(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned int *)(a3 + 8));
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v22 = v102;
  v102 = 0;
  v103 = v8;
  v104 = -1;
  v105 = 0x1000000;
  v106 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v22, v21, 0, (uint64_t)&v102);
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v23);
    else
      *(_DWORD *)v22 -= 2;
  }
  v24 = *(_QWORD *)(a3 + 48);
  if (!v24)
    goto LABEL_37;
  v25 = *(_QWORD *)(a1 + 56);
  v26 = *(_DWORD *)(v24 + 4);
  if (v26)
  {
    if (v26 != 1)
    {
LABEL_30:
      v27 = *(_QWORD *)(v25 + 64760);
      if (!v27 || v24 != *(_QWORD *)(v27 + 8))
        v27 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_33;
    }
    v91 = *(unsigned __int8 **)(v24 + 8);
    if ((*(_BYTE *)(v24 + 16) & 4) != 0)
    {
      v92 = *v91;
    }
    else
    {
      v99 = *(unsigned __int16 *)v91;
      if (v99 > 0xFF)
        goto LABEL_30;
      v92 = v99;
    }
    v27 = *(_QWORD *)(v25 + 8 * v92 + 42216);
  }
  else
  {
    v27 = *(_QWORD *)(v25 + 41968);
  }
LABEL_33:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v28 = v102;
  v102 = 0;
  v103 = v8;
  v104 = -1;
  v105 = 0x1000000;
  v106 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v28, v27, 0, (uint64_t)&v102);
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v29);
    else
      *(_DWORD *)v28 -= 2;
  }
LABEL_37:
  v30 = *(_QWORD *)(a1 + 56);
  v31 = *(_QWORD *)(a3 + 32);
  if (!v31 || (v32 = *(_DWORD *)(v31 + 4)) == 0)
  {
    v33 = *(_QWORD *)(v30 + 41968);
    goto LABEL_43;
  }
  if (v32 != 1)
    goto LABEL_40;
  v87 = *(unsigned __int8 **)(v31 + 8);
  if ((*(_BYTE *)(v31 + 16) & 4) != 0)
  {
    v88 = *v87;
LABEL_163:
    v33 = *(_QWORD *)(v30 + 8 * v88 + 42216);
    goto LABEL_43;
  }
  v98 = *(unsigned __int16 *)v87;
  if (v98 <= 0xFF)
  {
    v88 = v98;
    goto LABEL_163;
  }
LABEL_40:
  v33 = *(_QWORD *)(v30 + 64760);
  if (!v33 || v31 != *(_QWORD *)(v33 + 8))
    v33 = JSC::jsStringWithCacheSlowCase();
LABEL_43:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v34 = v102;
  v102 = 0;
  v103 = v8;
  v104 = -1;
  v105 = 0x1000000;
  v106 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v34, v33, 0, (uint64_t)&v102);
  if (v34)
  {
    if (*(_DWORD *)v34 == 2)
      WTF::StringImpl::destroy(v34, v35);
    else
      *(_DWORD *)v34 -= 2;
  }
  v36 = *(unsigned int *)(a3 + 24);
  v37 = (v36 & 0x80000000) != 0
      ? COERCE__INT64((double)v36) + 0x2000000000000
      : v36 | 0xFFFE000000000000;
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v38 = v102;
  v102 = 0;
  v103 = v8;
  v104 = -1;
  v105 = 0x1000000;
  v106 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v38, v37, 0, (uint64_t)&v102);
  if (v38)
  {
    if (*(_DWORD *)v38 == 2)
      WTF::StringImpl::destroy(v38, v39);
    else
      *(_DWORD *)v38 -= 2;
  }
  v40 = *(_QWORD *)(a3 + 40);
  if (!v40)
    goto LABEL_63;
  v41 = *(_QWORD *)(a1 + 56);
  v42 = *(_DWORD *)(v40 + 4);
  if (v42)
  {
    if (v42 != 1)
    {
LABEL_56:
      v43 = *(_QWORD *)(v41 + 64760);
      if (!v43 || v40 != *(_QWORD *)(v43 + 8))
        v43 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_59;
    }
    v93 = *(unsigned __int8 **)(v40 + 8);
    if ((*(_BYTE *)(v40 + 16) & 4) != 0)
    {
      v94 = *v93;
    }
    else
    {
      v100 = *(unsigned __int16 *)v93;
      if (v100 > 0xFF)
        goto LABEL_56;
      v94 = v100;
    }
    v43 = *(_QWORD *)(v41 + 8 * v94 + 42216);
  }
  else
  {
    v43 = *(_QWORD *)(v41 + 41968);
  }
LABEL_59:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v44 = v102;
  v102 = 0;
  v103 = v8;
  v104 = -1;
  v105 = 0x1000000;
  v106 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v44, v43, 0, (uint64_t)&v102);
  if (v44)
  {
    if (*(_DWORD *)v44 == 2)
      WTF::StringImpl::destroy(v44, v45);
    else
      *(_DWORD *)v44 -= 2;
  }
LABEL_63:
  if (*(_BYTE *)(a3 + 96))
  {
    v46 = *(double *)(a3 + 88);
    if ((*(_QWORD *)&v46 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v47 = (int)v46, v46 == (double)(int)v47)
      && ((_DWORD)v47 || (*(_QWORD *)&v46 & 0x8000000000000000) == 0))
    {
      v48 = v47 | 0xFFFE000000000000;
    }
    else
    {
      v48 = *(_QWORD *)&v46 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v49 = v102;
    v102 = 0;
    v103 = v8;
    v104 = -1;
    v105 = 0x1000000;
    v106 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v49, v48, 0, (uint64_t)&v102);
    if (v49)
    {
      if (*(_DWORD *)v49 == 2)
        WTF::StringImpl::destroy(v49, v50);
      else
        *(_DWORD *)v49 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 80))
  {
    v51 = *(_QWORD *)(a3 + 72);
    if (v51 == (int)v51)
      v52 = *(_QWORD *)(a3 + 72) | 0xFFFE000000000000;
    else
      v52 = COERCE__INT64((double)v51) + 0x2000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v53 = v102;
    v102 = 0;
    v103 = v8;
    v104 = -1;
    v105 = 0x1000000;
    v106 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v53, v52, 0, (uint64_t)&v102);
    if (v53)
    {
      if (*(_DWORD *)v53 == 2)
        WTF::StringImpl::destroy(v53, v54);
      else
        *(_DWORD *)v53 -= 2;
    }
  }
  if (!*(_BYTE *)(a3 + 64))
    goto LABEL_89;
  v55 = *(_QWORD *)(a3 + 56);
  if (HIDWORD(v55))
  {
    v89 = (double)v55;
  }
  else
  {
    if ((v55 & 0x80000000) == 0)
    {
      v56 = v55 | 0xFFFE000000000000;
      goto LABEL_85;
    }
    v89 = (double)v55;
  }
  v56 = *(_QWORD *)&v89 + 0x2000000000000;
LABEL_85:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v57 = v102;
  v102 = 0;
  v103 = v8;
  v104 = -1;
  v105 = 0x1000000;
  v106 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v57, v56, 0, (uint64_t)&v102);
  if (v57)
  {
    if (*(_DWORD *)v57 == 2)
      WTF::StringImpl::destroy(v57, v58);
    else
      *(_DWORD *)v57 -= 2;
  }
LABEL_89:
  if (*(_BYTE *)(a3 + 152))
  {
    v59 = *(double *)(a3 + 144);
    if ((*(_QWORD *)&v59 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v60 = (int)v59, v59 == (double)(int)v60)
      && ((_DWORD)v60 || (*(_QWORD *)&v59 & 0x8000000000000000) == 0))
    {
      v61 = v60 | 0xFFFE000000000000;
    }
    else
    {
      v61 = *(_QWORD *)&v59 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v62 = v102;
    v102 = 0;
    v103 = v8;
    v104 = -1;
    v105 = 0x1000000;
    v106 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v62, v61, 0, (uint64_t)&v102);
    if (v62)
    {
      if (*(_DWORD *)v62 == 2)
        WTF::StringImpl::destroy(v62, v63);
      else
        *(_DWORD *)v62 -= 2;
    }
  }
  v64 = *(_QWORD *)(a3 + 104);
  if (!v64)
    goto LABEL_110;
  v65 = *(_QWORD *)(a1 + 56);
  v66 = *(_DWORD *)(v64 + 4);
  if (v66)
  {
    if (v66 != 1)
    {
LABEL_103:
      v67 = *(_QWORD *)(v65 + 64760);
      if (!v67 || v64 != *(_QWORD *)(v67 + 8))
        v67 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_106;
    }
    v95 = *(unsigned __int8 **)(v64 + 8);
    if ((*(_BYTE *)(v64 + 16) & 4) != 0)
    {
      v96 = *v95;
    }
    else
    {
      v101 = *(unsigned __int16 *)v95;
      if (v101 > 0xFF)
        goto LABEL_103;
      v96 = v101;
    }
    v67 = *(_QWORD *)(v65 + 8 * v96 + 42216);
  }
  else
  {
    v67 = *(_QWORD *)(v65 + 41968);
  }
LABEL_106:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v68 = v102;
  v102 = 0;
  v103 = v8;
  v104 = -1;
  v105 = 0x1000000;
  v106 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v68, v67, 0, (uint64_t)&v102);
  if (v68)
  {
    if (*(_DWORD *)v68 == 2)
      WTF::StringImpl::destroy(v68, v69);
    else
      *(_DWORD *)v68 -= 2;
  }
LABEL_110:
  if (*(_BYTE *)(a3 + 120))
  {
    v70 = *(double *)(a3 + 112);
    if ((*(_QWORD *)&v70 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v71 = (int)v70, v70 == (double)(int)v71)
      && ((_DWORD)v71 || (*(_QWORD *)&v70 & 0x8000000000000000) == 0))
    {
      v72 = v71 | 0xFFFE000000000000;
    }
    else
    {
      v72 = *(_QWORD *)&v70 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v73 = v102;
    v102 = 0;
    v103 = v8;
    v104 = -1;
    v105 = 0x1000000;
    v106 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v73, v72, 0, (uint64_t)&v102);
    if (v73)
    {
      if (*(_DWORD *)v73 == 2)
        WTF::StringImpl::destroy(v73, v74);
      else
        *(_DWORD *)v73 -= 2;
    }
  }
  if (!*(_BYTE *)(a3 + 168))
    goto LABEL_129;
  v75 = *(_QWORD *)(a3 + 160);
  if (HIDWORD(v75))
  {
    v90 = (double)v75;
  }
  else
  {
    if ((v75 & 0x80000000) == 0)
    {
      v76 = v75 | 0xFFFE000000000000;
      goto LABEL_125;
    }
    v90 = (double)v75;
  }
  v76 = *(_QWORD *)&v90 + 0x2000000000000;
LABEL_125:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v77 = v102;
  v102 = 0;
  v103 = v8;
  v104 = -1;
  v105 = 0x1000000;
  v106 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v77, v76, 0, (uint64_t)&v102);
  if (v77)
  {
    if (*(_DWORD *)v77 == 2)
      WTF::StringImpl::destroy(v77, v78);
    else
      *(_DWORD *)v77 -= 2;
  }
LABEL_129:
  if (*(_BYTE *)(a3 + 136))
  {
    v79 = *(double *)(a3 + 128);
    if ((*(_QWORD *)&v79 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v80 = (int)v79, v79 == (double)(int)v80)
      && ((_DWORD)v80 || (*(_QWORD *)&v79 & 0x8000000000000000) == 0))
    {
      v81 = v80 | 0xFFFE000000000000;
    }
    else
    {
      v81 = *(_QWORD *)&v79 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v82 = v102;
    v102 = 0;
    v103 = v8;
    v104 = -1;
    v105 = 0x1000000;
    v106 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v82, v81, 0, (uint64_t)&v102);
    if (v82)
    {
      if (*(_DWORD *)v82 == 2)
        WTF::StringImpl::destroy(v82, v83);
      else
        *(_DWORD *)v82 -= 2;
    }
  }
  return v8;
}

{
  uint64_t v5;
  unint64_t v6;
  size_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  double v16;
  uint64_t v17;
  unint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  uint64_t v36;
  uint64_t v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  unint64_t v46;
  unint64_t v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  uint64_t v50;
  unint64_t v51;
  WTF::StringImpl *v52;
  WTF::StringImpl *v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  WTF::StringImpl *v58;
  WTF::StringImpl *v59;
  double v60;
  uint64_t v61;
  unint64_t v62;
  WTF::StringImpl *v63;
  WTF::StringImpl *v64;
  unint64_t v65;
  unint64_t v66;
  WTF::StringImpl *v67;
  WTF::StringImpl *v68;
  double v69;
  uint64_t v70;
  unint64_t v71;
  WTF::StringImpl *v72;
  WTF::StringImpl *v73;
  unint64_t v74;
  unint64_t v75;
  WTF::StringImpl *v76;
  WTF::StringImpl *v77;
  double v78;
  uint64_t v79;
  unint64_t v80;
  WTF::StringImpl *v81;
  WTF::StringImpl *v82;
  unsigned __int8 *v84;
  unsigned int v85;
  unsigned __int8 *v86;
  unsigned int v87;
  double v88;
  double v89;
  double v90;
  unsigned __int8 *v91;
  unsigned int v92;
  unsigned __int8 *v93;
  unsigned int v94;
  unsigned __int8 *v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  WTF::StringImpl *v102;
  unint64_t v103;
  int v104;
  int v105;
  uint64_t v106;

  v5 = *(_QWORD *)(a1 + 56);
  v6 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v7 = 8 * *(unsigned __int8 *)(v6 + 14);
  v8 = JSC::allocateCell<JSC::JSFinalObject>(v5, v7 + 16);
  v9 = *(_DWORD *)(v6 + 8);
  *(_DWORD *)v8 = v6 >> 4;
  *(_DWORD *)(v8 + 4) = v9;
  *(_QWORD *)(v8 + 8) = 0;
  bzero((void *)(v8 + 16), v7);
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a3 + 16);
  if (!v11 || (v12 = *(_DWORD *)(v11 + 4)) == 0)
  {
    v13 = *(_QWORD *)(v10 + 41968);
    goto LABEL_9;
  }
  if (v12 != 1)
    goto LABEL_6;
  v84 = *(unsigned __int8 **)(v11 + 8);
  if ((*(_BYTE *)(v11 + 16) & 4) != 0)
  {
    v85 = *v84;
LABEL_157:
    v13 = *(_QWORD *)(v10 + 8 * v85 + 42216);
    goto LABEL_9;
  }
  v97 = *(unsigned __int16 *)v84;
  if (v97 <= 0xFF)
  {
    v85 = v97;
    goto LABEL_157;
  }
LABEL_6:
  v13 = *(_QWORD *)(v10 + 64760);
  if (!v13 || v11 != *(_QWORD *)(v13 + 8))
    v13 = JSC::jsStringWithCacheSlowCase();
LABEL_9:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v14 = v102;
  v102 = 0;
  v103 = v8;
  v104 = -1;
  v105 = 0x1000000;
  v106 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v14, v13, 0, (uint64_t)&v102);
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v15);
    else
      *(_DWORD *)v14 -= 2;
  }
  v16 = *(double *)a3;
  if ((*(_QWORD *)a3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v17 = (int)v16, v16 == (double)(int)v17)
    && ((_DWORD)v17 || (*(_QWORD *)&v16 & 0x8000000000000000) == 0))
  {
    v18 = v17 | 0xFFFE000000000000;
  }
  else
  {
    v18 = *(_QWORD *)&v16 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v102;
  v102 = 0;
  v103 = v8;
  v104 = -1;
  v105 = 0x1000000;
  v106 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v102);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = WebCore::JSConverter<WebCore::IDLEnumeration<WebCore::RTCStatsReport::Type>>::convert(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned int *)(a3 + 8));
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v22 = v102;
  v102 = 0;
  v103 = v8;
  v104 = -1;
  v105 = 0x1000000;
  v106 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v22, v21, 0, (uint64_t)&v102);
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v23);
    else
      *(_DWORD *)v22 -= 2;
  }
  v24 = *(_QWORD *)(a3 + 48);
  if (!v24)
    goto LABEL_37;
  v25 = *(_QWORD *)(a1 + 56);
  v26 = *(_DWORD *)(v24 + 4);
  if (v26)
  {
    if (v26 != 1)
    {
LABEL_30:
      v27 = *(_QWORD *)(v25 + 64760);
      if (!v27 || v24 != *(_QWORD *)(v27 + 8))
        v27 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_33;
    }
    v91 = *(unsigned __int8 **)(v24 + 8);
    if ((*(_BYTE *)(v24 + 16) & 4) != 0)
    {
      v92 = *v91;
    }
    else
    {
      v99 = *(unsigned __int16 *)v91;
      if (v99 > 0xFF)
        goto LABEL_30;
      v92 = v99;
    }
    v27 = *(_QWORD *)(v25 + 8 * v92 + 42216);
  }
  else
  {
    v27 = *(_QWORD *)(v25 + 41968);
  }
LABEL_33:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v28 = v102;
  v102 = 0;
  v103 = v8;
  v104 = -1;
  v105 = 0x1000000;
  v106 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v28, v27, 0, (uint64_t)&v102);
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v29);
    else
      *(_DWORD *)v28 -= 2;
  }
LABEL_37:
  v30 = *(_QWORD *)(a1 + 56);
  v31 = *(_QWORD *)(a3 + 32);
  if (!v31 || (v32 = *(_DWORD *)(v31 + 4)) == 0)
  {
    v33 = *(_QWORD *)(v30 + 41968);
    goto LABEL_43;
  }
  if (v32 != 1)
    goto LABEL_40;
  v86 = *(unsigned __int8 **)(v31 + 8);
  if ((*(_BYTE *)(v31 + 16) & 4) != 0)
  {
    v87 = *v86;
LABEL_160:
    v33 = *(_QWORD *)(v30 + 8 * v87 + 42216);
    goto LABEL_43;
  }
  v98 = *(unsigned __int16 *)v86;
  if (v98 <= 0xFF)
  {
    v87 = v98;
    goto LABEL_160;
  }
LABEL_40:
  v33 = *(_QWORD *)(v30 + 64760);
  if (!v33 || v31 != *(_QWORD *)(v33 + 8))
    v33 = JSC::jsStringWithCacheSlowCase();
LABEL_43:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v34 = v102;
  v102 = 0;
  v103 = v8;
  v104 = -1;
  v105 = 0x1000000;
  v106 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v34, v33, 0, (uint64_t)&v102);
  if (v34)
  {
    if (*(_DWORD *)v34 == 2)
      WTF::StringImpl::destroy(v34, v35);
    else
      *(_DWORD *)v34 -= 2;
  }
  v36 = *(unsigned int *)(a3 + 24);
  v37 = (v36 & 0x80000000) != 0
      ? COERCE__INT64((double)v36) + 0x2000000000000
      : v36 | 0xFFFE000000000000;
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v38 = v102;
  v102 = 0;
  v103 = v8;
  v104 = -1;
  v105 = 0x1000000;
  v106 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v38, v37, 0, (uint64_t)&v102);
  if (v38)
  {
    if (*(_DWORD *)v38 == 2)
      WTF::StringImpl::destroy(v38, v39);
    else
      *(_DWORD *)v38 -= 2;
  }
  v40 = *(_QWORD *)(a3 + 40);
  if (!v40)
    goto LABEL_63;
  v41 = *(_QWORD *)(a1 + 56);
  v42 = *(_DWORD *)(v40 + 4);
  if (v42)
  {
    if (v42 != 1)
    {
LABEL_56:
      v43 = *(_QWORD *)(v41 + 64760);
      if (!v43 || v40 != *(_QWORD *)(v43 + 8))
        v43 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_59;
    }
    v93 = *(unsigned __int8 **)(v40 + 8);
    if ((*(_BYTE *)(v40 + 16) & 4) != 0)
    {
      v94 = *v93;
    }
    else
    {
      v100 = *(unsigned __int16 *)v93;
      if (v100 > 0xFF)
        goto LABEL_56;
      v94 = v100;
    }
    v43 = *(_QWORD *)(v41 + 8 * v94 + 42216);
  }
  else
  {
    v43 = *(_QWORD *)(v41 + 41968);
  }
LABEL_59:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v44 = v102;
  v102 = 0;
  v103 = v8;
  v104 = -1;
  v105 = 0x1000000;
  v106 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v44, v43, 0, (uint64_t)&v102);
  if (v44)
  {
    if (*(_DWORD *)v44 == 2)
      WTF::StringImpl::destroy(v44, v45);
    else
      *(_DWORD *)v44 -= 2;
  }
LABEL_63:
  if (!*(_BYTE *)(a3 + 72))
    goto LABEL_71;
  v46 = *(_QWORD *)(a3 + 64);
  if (HIDWORD(v46))
  {
    v88 = (double)v46;
  }
  else
  {
    if ((v46 & 0x80000000) == 0)
    {
      v47 = v46 | 0xFFFE000000000000;
      goto LABEL_67;
    }
    v88 = (double)v46;
  }
  v47 = *(_QWORD *)&v88 + 0x2000000000000;
LABEL_67:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v48 = v102;
  v102 = 0;
  v103 = v8;
  v104 = -1;
  v105 = 0x1000000;
  v106 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v48, v47, 0, (uint64_t)&v102);
  if (v48)
  {
    if (*(_DWORD *)v48 == 2)
      WTF::StringImpl::destroy(v48, v49);
    else
      *(_DWORD *)v48 -= 2;
  }
LABEL_71:
  if (*(_BYTE *)(a3 + 60))
  {
    v50 = *(unsigned int *)(a3 + 56);
    if ((v50 & 0x80000000) != 0)
      v51 = COERCE__INT64((double)v50) + 0x2000000000000;
    else
      v51 = v50 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v52 = v102;
    v102 = 0;
    v103 = v8;
    v104 = -1;
    v105 = 0x1000000;
    v106 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v52, v51, 0, (uint64_t)&v102);
    if (v52)
    {
      if (*(_DWORD *)v52 == 2)
        WTF::StringImpl::destroy(v52, v53);
      else
        *(_DWORD *)v52 -= 2;
    }
  }
  v54 = *(_QWORD *)(a3 + 80);
  if (!v54)
    goto LABEL_88;
  v55 = *(_QWORD *)(a1 + 56);
  v56 = *(_DWORD *)(v54 + 4);
  if (v56)
  {
    if (v56 != 1)
    {
LABEL_81:
      v57 = *(_QWORD *)(v55 + 64760);
      if (!v57 || v54 != *(_QWORD *)(v57 + 8))
        v57 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_84;
    }
    v95 = *(unsigned __int8 **)(v54 + 8);
    if ((*(_BYTE *)(v54 + 16) & 4) != 0)
    {
      v96 = *v95;
    }
    else
    {
      v101 = *(unsigned __int16 *)v95;
      if (v101 > 0xFF)
        goto LABEL_81;
      v96 = v101;
    }
    v57 = *(_QWORD *)(v55 + 8 * v96 + 42216);
  }
  else
  {
    v57 = *(_QWORD *)(v55 + 41968);
  }
LABEL_84:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v58 = v102;
  v102 = 0;
  v103 = v8;
  v104 = -1;
  v105 = 0x1000000;
  v106 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v58, v57, 0, (uint64_t)&v102);
  if (v58)
  {
    if (*(_DWORD *)v58 == 2)
      WTF::StringImpl::destroy(v58, v59);
    else
      *(_DWORD *)v58 -= 2;
  }
LABEL_88:
  if (*(_BYTE *)(a3 + 96))
  {
    v60 = *(double *)(a3 + 88);
    if ((*(_QWORD *)&v60 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v61 = (int)v60, v60 == (double)(int)v61)
      && ((_DWORD)v61 || (*(_QWORD *)&v60 & 0x8000000000000000) == 0))
    {
      v62 = v61 | 0xFFFE000000000000;
    }
    else
    {
      v62 = *(_QWORD *)&v60 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v63 = v102;
    v102 = 0;
    v103 = v8;
    v104 = -1;
    v105 = 0x1000000;
    v106 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v63, v62, 0, (uint64_t)&v102);
    if (v63)
    {
      if (*(_DWORD *)v63 == 2)
        WTF::StringImpl::destroy(v63, v64);
      else
        *(_DWORD *)v63 -= 2;
    }
  }
  if (!*(_BYTE *)(a3 + 112))
    goto LABEL_107;
  v65 = *(_QWORD *)(a3 + 104);
  if (HIDWORD(v65))
  {
    v89 = (double)v65;
  }
  else
  {
    if ((v65 & 0x80000000) == 0)
    {
      v66 = v65 | 0xFFFE000000000000;
      goto LABEL_103;
    }
    v89 = (double)v65;
  }
  v66 = *(_QWORD *)&v89 + 0x2000000000000;
LABEL_103:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v67 = v102;
  v102 = 0;
  v103 = v8;
  v104 = -1;
  v105 = 0x1000000;
  v106 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v67, v66, 0, (uint64_t)&v102);
  if (v67)
  {
    if (*(_DWORD *)v67 == 2)
      WTF::StringImpl::destroy(v67, v68);
    else
      *(_DWORD *)v67 -= 2;
  }
LABEL_107:
  if (*(_BYTE *)(a3 + 128))
  {
    v69 = *(double *)(a3 + 120);
    if ((*(_QWORD *)&v69 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v70 = (int)v69, v69 == (double)(int)v70)
      && ((_DWORD)v70 || (*(_QWORD *)&v69 & 0x8000000000000000) == 0))
    {
      v71 = v70 | 0xFFFE000000000000;
    }
    else
    {
      v71 = *(_QWORD *)&v69 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v72 = v102;
    v102 = 0;
    v103 = v8;
    v104 = -1;
    v105 = 0x1000000;
    v106 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v72, v71, 0, (uint64_t)&v102);
    if (v72)
    {
      if (*(_DWORD *)v72 == 2)
        WTF::StringImpl::destroy(v72, v73);
      else
        *(_DWORD *)v72 -= 2;
    }
  }
  if (!*(_BYTE *)(a3 + 160))
    goto LABEL_126;
  v74 = *(_QWORD *)(a3 + 152);
  if (HIDWORD(v74))
  {
    v90 = (double)v74;
  }
  else
  {
    if ((v74 & 0x80000000) == 0)
    {
      v75 = v74 | 0xFFFE000000000000;
      goto LABEL_122;
    }
    v90 = (double)v74;
  }
  v75 = *(_QWORD *)&v90 + 0x2000000000000;
LABEL_122:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v76 = v102;
  v102 = 0;
  v103 = v8;
  v104 = -1;
  v105 = 0x1000000;
  v106 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v76, v75, 0, (uint64_t)&v102);
  if (v76)
  {
    if (*(_DWORD *)v76 == 2)
      WTF::StringImpl::destroy(v76, v77);
    else
      *(_DWORD *)v76 -= 2;
  }
LABEL_126:
  if (*(_BYTE *)(a3 + 144))
  {
    v78 = *(double *)(a3 + 136);
    if ((*(_QWORD *)&v78 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v79 = (int)v78, v78 == (double)(int)v79)
      && ((_DWORD)v79 || (*(_QWORD *)&v78 & 0x8000000000000000) == 0))
    {
      v80 = v79 | 0xFFFE000000000000;
    }
    else
    {
      v80 = *(_QWORD *)&v78 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v81 = v102;
    v102 = 0;
    v103 = v8;
    v104 = -1;
    v105 = 0x1000000;
    v106 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v81, v80, 0, (uint64_t)&v102);
    if (v81)
    {
      if (*(_DWORD *)v81 == 2)
        WTF::StringImpl::destroy(v81, v82);
      else
        *(_DWORD *)v81 -= 2;
    }
  }
  return v8;
}

{
  uint64_t v5;
  unint64_t v6;
  size_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  double v16;
  uint64_t v17;
  unint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  unint64_t v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  uint64_t v28;
  unint64_t v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  uint64_t v38;
  uint64_t v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  WTF::StringImpl *v46;
  WTF::StringImpl *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  WTF::StringImpl *v52;
  WTF::StringImpl *v53;
  unsigned __int8 *v55;
  unsigned int v56;
  unsigned __int8 *v57;
  unsigned int v58;
  unsigned __int8 *v59;
  unsigned int v60;
  unsigned __int8 *v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  WTF::StringImpl *v67;
  unint64_t v68;
  int v69;
  int v70;
  uint64_t v71;

  v5 = *(_QWORD *)(a1 + 56);
  v6 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v7 = 8 * *(unsigned __int8 *)(v6 + 14);
  v8 = JSC::allocateCell<JSC::JSFinalObject>(v5, v7 + 16);
  v9 = *(_DWORD *)(v6 + 8);
  *(_DWORD *)v8 = v6 >> 4;
  *(_DWORD *)(v8 + 4) = v9;
  *(_QWORD *)(v8 + 8) = 0;
  bzero((void *)(v8 + 16), v7);
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a3 + 16);
  if (!v11 || (v12 = *(_DWORD *)(v11 + 4)) == 0)
  {
    v13 = *(_QWORD *)(v10 + 41968);
    goto LABEL_9;
  }
  if (v12 != 1)
    goto LABEL_6;
  v55 = *(unsigned __int8 **)(v11 + 8);
  if ((*(_BYTE *)(v11 + 16) & 4) != 0)
  {
    v56 = *v55;
LABEL_92:
    v13 = *(_QWORD *)(v10 + 8 * v56 + 42216);
    goto LABEL_9;
  }
  v63 = *(unsigned __int16 *)v55;
  if (v63 <= 0xFF)
  {
    v56 = v63;
    goto LABEL_92;
  }
LABEL_6:
  v13 = *(_QWORD *)(v10 + 64760);
  if (!v13 || v11 != *(_QWORD *)(v13 + 8))
    v13 = JSC::jsStringWithCacheSlowCase();
LABEL_9:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v14 = v67;
  v67 = 0;
  v68 = v8;
  v69 = -1;
  v70 = 0x1000000;
  v71 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v14, v13, 0, (uint64_t)&v67);
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v15);
    else
      *(_DWORD *)v14 -= 2;
  }
  v16 = *(double *)a3;
  if ((*(_QWORD *)a3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v17 = (int)v16, v16 == (double)(int)v17)
    && ((_DWORD)v17 || (*(_QWORD *)&v16 & 0x8000000000000000) == 0))
  {
    v18 = v17 | 0xFFFE000000000000;
  }
  else
  {
    v18 = *(_QWORD *)&v16 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v67;
  v67 = 0;
  v68 = v8;
  v69 = -1;
  v70 = 0x1000000;
  v71 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v67);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = WebCore::JSConverter<WebCore::IDLEnumeration<WebCore::RTCStatsReport::Type>>::convert(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned int *)(a3 + 8));
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v22 = v67;
  v67 = 0;
  v68 = v8;
  v69 = -1;
  v70 = 0x1000000;
  v71 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v22, v21, 0, (uint64_t)&v67);
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v23);
    else
      *(_DWORD *)v22 -= 2;
  }
  if (*(_BYTE *)(a3 + 60))
  {
    v24 = *(unsigned int *)(a3 + 56);
    if ((v24 & 0x80000000) != 0)
      v25 = COERCE__INT64((double)v24) + 0x2000000000000;
    else
      v25 = v24 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v26 = v67;
    v67 = 0;
    v68 = v8;
    v69 = -1;
    v70 = 0x1000000;
    v71 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v26, v25, 0, (uint64_t)&v67);
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
        WTF::StringImpl::destroy(v26, v27);
      else
        *(_DWORD *)v26 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 52))
  {
    v28 = *(unsigned int *)(a3 + 48);
    if ((v28 & 0x80000000) != 0)
      v29 = COERCE__INT64((double)v28) + 0x2000000000000;
    else
      v29 = v28 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v30 = v67;
    v67 = 0;
    v68 = v8;
    v69 = -1;
    v70 = 0x1000000;
    v71 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v30, v29, 0, (uint64_t)&v67);
    if (v30)
    {
      if (*(_DWORD *)v30 == 2)
        WTF::StringImpl::destroy(v30, v31);
      else
        *(_DWORD *)v30 -= 2;
    }
  }
  v32 = *(_QWORD *)(a1 + 56);
  v33 = *(_QWORD *)(a3 + 40);
  if (!v33 || (v34 = *(_DWORD *)(v33 + 4)) == 0)
  {
    v35 = *(_QWORD *)(v32 + 41968);
    goto LABEL_47;
  }
  if (v34 != 1)
    goto LABEL_44;
  v57 = *(unsigned __int8 **)(v33 + 8);
  if ((*(_BYTE *)(v33 + 16) & 4) != 0)
  {
    v58 = *v57;
LABEL_95:
    v35 = *(_QWORD *)(v32 + 8 * v58 + 42216);
    goto LABEL_47;
  }
  v64 = *(unsigned __int16 *)v57;
  if (v64 <= 0xFF)
  {
    v58 = v64;
    goto LABEL_95;
  }
LABEL_44:
  v35 = *(_QWORD *)(v32 + 64760);
  if (!v35 || v33 != *(_QWORD *)(v35 + 8))
    v35 = JSC::jsStringWithCacheSlowCase();
LABEL_47:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v36 = v67;
  v67 = 0;
  v68 = v8;
  v69 = -1;
  v70 = 0x1000000;
  v71 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v36, v35, 0, (uint64_t)&v67);
  if (v36)
  {
    if (*(_DWORD *)v36 == 2)
      WTF::StringImpl::destroy(v36, v37);
    else
      *(_DWORD *)v36 -= 2;
  }
  v38 = *(unsigned int *)(a3 + 24);
  v39 = (v38 & 0x80000000) != 0
      ? COERCE__INT64((double)v38) + 0x2000000000000
      : v38 | 0xFFFE000000000000;
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v40 = v67;
  v67 = 0;
  v68 = v8;
  v69 = -1;
  v70 = 0x1000000;
  v71 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v40, v39, 0, (uint64_t)&v67);
  if (v40)
  {
    if (*(_DWORD *)v40 == 2)
      WTF::StringImpl::destroy(v40, v41);
    else
      *(_DWORD *)v40 -= 2;
  }
  v42 = *(_QWORD *)(a3 + 64);
  if (!v42)
    goto LABEL_67;
  v43 = *(_QWORD *)(a1 + 56);
  v44 = *(_DWORD *)(v42 + 4);
  if (v44)
  {
    if (v44 != 1)
    {
LABEL_60:
      v45 = *(_QWORD *)(v43 + 64760);
      if (!v45 || v42 != *(_QWORD *)(v45 + 8))
        v45 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_63;
    }
    v61 = *(unsigned __int8 **)(v42 + 8);
    if ((*(_BYTE *)(v42 + 16) & 4) != 0)
    {
      v62 = *v61;
    }
    else
    {
      v66 = *(unsigned __int16 *)v61;
      if (v66 > 0xFF)
        goto LABEL_60;
      v62 = v66;
    }
    v45 = *(_QWORD *)(v43 + 8 * v62 + 42216);
  }
  else
  {
    v45 = *(_QWORD *)(v43 + 41968);
  }
LABEL_63:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v46 = v67;
  v67 = 0;
  v68 = v8;
  v69 = -1;
  v70 = 0x1000000;
  v71 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v46, v45, 0, (uint64_t)&v67);
  if (v46)
  {
    if (*(_DWORD *)v46 == 2)
      WTF::StringImpl::destroy(v46, v47);
    else
      *(_DWORD *)v46 -= 2;
  }
LABEL_67:
  v48 = *(_QWORD *)(a1 + 56);
  v49 = *(_QWORD *)(a3 + 32);
  if (!v49 || (v50 = *(_DWORD *)(v49 + 4)) == 0)
  {
    v51 = *(_QWORD *)(v48 + 41968);
    goto LABEL_73;
  }
  if (v50 == 1)
  {
    v59 = *(unsigned __int8 **)(v49 + 8);
    if ((*(_BYTE *)(v49 + 16) & 4) != 0)
    {
      v60 = *v59;
    }
    else
    {
      v65 = *(unsigned __int16 *)v59;
      if (v65 > 0xFF)
        goto LABEL_70;
      v60 = v65;
    }
    v51 = *(_QWORD *)(v48 + 8 * v60 + 42216);
    goto LABEL_73;
  }
LABEL_70:
  v51 = *(_QWORD *)(v48 + 64760);
  if (!v51 || v49 != *(_QWORD *)(v51 + 8))
    v51 = JSC::jsStringWithCacheSlowCase();
LABEL_73:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v52 = v67;
  v67 = 0;
  v68 = v8;
  v69 = -1;
  v70 = 0x1000000;
  v71 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v52, v51, 0, (uint64_t)&v67);
  if (v52)
  {
    if (*(_DWORD *)v52 == 2)
      WTF::StringImpl::destroy(v52, v53);
    else
      *(_DWORD *)v52 -= 2;
  }
  return v8;
}

{
  uint64_t v5;
  unint64_t v6;
  size_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  double v16;
  uint64_t v17;
  unint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  double v36;
  uint64_t v37;
  unint64_t v38;
  WTF::StringImpl *v39;
  WTF::StringImpl *v40;
  double v41;
  uint64_t v42;
  unint64_t v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  double v46;
  uint64_t v47;
  unint64_t v48;
  WTF::StringImpl *v49;
  WTF::StringImpl *v50;
  double v51;
  uint64_t v52;
  unint64_t v53;
  WTF::StringImpl *v54;
  WTF::StringImpl *v55;
  double v56;
  uint64_t v57;
  unint64_t v58;
  WTF::StringImpl *v59;
  WTF::StringImpl *v60;
  unsigned __int8 *v62;
  unsigned int v63;
  unsigned __int8 *v64;
  unsigned int v65;
  unsigned __int8 *v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  WTF::StringImpl *v71;
  unint64_t v72;
  int v73;
  int v74;
  uint64_t v75;

  v5 = *(_QWORD *)(a1 + 56);
  v6 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v7 = 8 * *(unsigned __int8 *)(v6 + 14);
  v8 = JSC::allocateCell<JSC::JSFinalObject>(v5, v7 + 16);
  v9 = *(_DWORD *)(v6 + 8);
  *(_DWORD *)v8 = v6 >> 4;
  *(_DWORD *)(v8 + 4) = v9;
  *(_QWORD *)(v8 + 8) = 0;
  bzero((void *)(v8 + 16), v7);
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a3 + 16);
  if (!v11 || (v12 = *(_DWORD *)(v11 + 4)) == 0)
  {
    v13 = *(_QWORD *)(v10 + 41968);
    goto LABEL_9;
  }
  if (v12 != 1)
    goto LABEL_6;
  v62 = *(unsigned __int8 **)(v11 + 8);
  if ((*(_BYTE *)(v11 + 16) & 4) != 0)
  {
    v63 = *v62;
LABEL_118:
    v13 = *(_QWORD *)(v10 + 8 * v63 + 42216);
    goto LABEL_9;
  }
  v68 = *(unsigned __int16 *)v62;
  if (v68 <= 0xFF)
  {
    v63 = v68;
    goto LABEL_118;
  }
LABEL_6:
  v13 = *(_QWORD *)(v10 + 64760);
  if (!v13 || v11 != *(_QWORD *)(v13 + 8))
    v13 = JSC::jsStringWithCacheSlowCase();
LABEL_9:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v14 = v71;
  v71 = 0;
  v72 = v8;
  v73 = -1;
  v74 = 0x1000000;
  v75 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v14, v13, 0, (uint64_t)&v71);
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v15);
    else
      *(_DWORD *)v14 -= 2;
  }
  v16 = *(double *)a3;
  if ((*(_QWORD *)a3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v17 = (int)v16, v16 == (double)(int)v17)
    && ((_DWORD)v17 || (*(_QWORD *)&v16 & 0x8000000000000000) == 0))
  {
    v18 = v17 | 0xFFFE000000000000;
  }
  else
  {
    v18 = *(_QWORD *)&v16 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v71;
  v71 = 0;
  v72 = v8;
  v73 = -1;
  v74 = 0x1000000;
  v75 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v71);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = WebCore::JSConverter<WebCore::IDLEnumeration<WebCore::RTCStatsReport::Type>>::convert(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned int *)(a3 + 8));
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v22 = v71;
  v71 = 0;
  v72 = v8;
  v73 = -1;
  v74 = 0x1000000;
  v75 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v22, v21, 0, (uint64_t)&v71);
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v23);
    else
      *(_DWORD *)v22 -= 2;
  }
  v24 = *(_QWORD *)(a1 + 56);
  v25 = *(_QWORD *)(a3 + 32);
  if (!v25 || (v26 = *(_DWORD *)(v25 + 4)) == 0)
  {
    v27 = *(_QWORD *)(v24 + 41968);
    goto LABEL_33;
  }
  if (v26 == 1)
  {
    v64 = *(unsigned __int8 **)(v25 + 8);
    if ((*(_BYTE *)(v25 + 16) & 4) != 0)
    {
      v65 = *v64;
    }
    else
    {
      v69 = *(unsigned __int16 *)v64;
      if (v69 > 0xFF)
        goto LABEL_30;
      v65 = v69;
    }
    v27 = *(_QWORD *)(v24 + 8 * v65 + 42216);
    goto LABEL_33;
  }
LABEL_30:
  v27 = *(_QWORD *)(v24 + 64760);
  if (!v27 || v25 != *(_QWORD *)(v27 + 8))
    v27 = JSC::jsStringWithCacheSlowCase();
LABEL_33:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v28 = v71;
  v71 = 0;
  v72 = v8;
  v73 = -1;
  v74 = 0x1000000;
  v75 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v28, v27, 0, (uint64_t)&v71);
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v29);
    else
      *(_DWORD *)v28 -= 2;
  }
  v30 = *(_QWORD *)(a1 + 56);
  v31 = *(_QWORD *)(a3 + 24);
  if (!v31 || (v32 = *(_DWORD *)(v31 + 4)) == 0)
  {
    v33 = *(_QWORD *)(v30 + 41968);
    goto LABEL_43;
  }
  if (v32 == 1)
  {
    v66 = *(unsigned __int8 **)(v31 + 8);
    if ((*(_BYTE *)(v31 + 16) & 4) != 0)
    {
      v67 = *v66;
    }
    else
    {
      v70 = *(unsigned __int16 *)v66;
      if (v70 > 0xFF)
        goto LABEL_40;
      v67 = v70;
    }
    v33 = *(_QWORD *)(v30 + 8 * v67 + 42216);
    goto LABEL_43;
  }
LABEL_40:
  v33 = *(_QWORD *)(v30 + 64760);
  if (!v33 || v31 != *(_QWORD *)(v33 + 8))
    v33 = JSC::jsStringWithCacheSlowCase();
LABEL_43:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v34 = v71;
  v71 = 0;
  v72 = v8;
  v73 = -1;
  v74 = 0x1000000;
  v75 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v34, v33, 0, (uint64_t)&v71);
  if (v34)
  {
    if (*(_DWORD *)v34 == 2)
      WTF::StringImpl::destroy(v34, v35);
    else
      *(_DWORD *)v34 -= 2;
  }
  if (*(_BYTE *)(a3 + 56))
  {
    v36 = *(double *)(a3 + 48);
    if ((*(_QWORD *)&v36 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v37 = (int)v36, v36 == (double)(int)v37)
      && ((_DWORD)v37 || (*(_QWORD *)&v36 & 0x8000000000000000) == 0))
    {
      v38 = v37 | 0xFFFE000000000000;
    }
    else
    {
      v38 = *(_QWORD *)&v36 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v39 = v71;
    v71 = 0;
    v72 = v8;
    v73 = -1;
    v74 = 0x1000000;
    v75 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v39, v38, 0, (uint64_t)&v71);
    if (v39)
    {
      if (*(_DWORD *)v39 == 2)
        WTF::StringImpl::destroy(v39, v40);
      else
        *(_DWORD *)v39 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 104))
  {
    v41 = *(double *)(a3 + 96);
    if ((*(_QWORD *)&v41 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v42 = (int)v41, v41 == (double)(int)v42)
      && ((_DWORD)v42 || (*(_QWORD *)&v41 & 0x8000000000000000) == 0))
    {
      v43 = v42 | 0xFFFE000000000000;
    }
    else
    {
      v43 = *(_QWORD *)&v41 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v44 = v71;
    v71 = 0;
    v72 = v8;
    v73 = -1;
    v74 = 0x1000000;
    v75 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v44, v43, 0, (uint64_t)&v71);
    if (v44)
    {
      if (*(_DWORD *)v44 == 2)
        WTF::StringImpl::destroy(v44, v45);
      else
        *(_DWORD *)v44 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 120))
  {
    v46 = *(double *)(a3 + 112);
    if ((*(_QWORD *)&v46 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v47 = (int)v46, v46 == (double)(int)v47)
      && ((_DWORD)v47 || (*(_QWORD *)&v46 & 0x8000000000000000) == 0))
    {
      v48 = v47 | 0xFFFE000000000000;
    }
    else
    {
      v48 = *(_QWORD *)&v46 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v49 = v71;
    v71 = 0;
    v72 = v8;
    v73 = -1;
    v74 = 0x1000000;
    v75 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v49, v48, 0, (uint64_t)&v71);
    if (v49)
    {
      if (*(_DWORD *)v49 == 2)
        WTF::StringImpl::destroy(v49, v50);
      else
        *(_DWORD *)v49 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 72))
  {
    v51 = *(double *)(a3 + 64);
    if ((*(_QWORD *)&v51 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v52 = (int)v51, v51 == (double)(int)v52)
      && ((_DWORD)v52 || (*(_QWORD *)&v51 & 0x8000000000000000) == 0))
    {
      v53 = v52 | 0xFFFE000000000000;
    }
    else
    {
      v53 = *(_QWORD *)&v51 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v54 = v71;
    v71 = 0;
    v72 = v8;
    v73 = -1;
    v74 = 0x1000000;
    v75 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v54, v53, 0, (uint64_t)&v71);
    if (v54)
    {
      if (*(_DWORD *)v54 == 2)
        WTF::StringImpl::destroy(v54, v55);
      else
        *(_DWORD *)v54 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 88))
  {
    v56 = *(double *)(a3 + 80);
    if ((*(_QWORD *)&v56 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v57 = (int)v56, v56 == (double)(int)v57)
      && ((_DWORD)v57 || (*(_QWORD *)&v56 & 0x8000000000000000) == 0))
    {
      v58 = v57 | 0xFFFE000000000000;
    }
    else
    {
      v58 = *(_QWORD *)&v56 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v59 = v71;
    v71 = 0;
    v72 = v8;
    v73 = -1;
    v74 = 0x1000000;
    v75 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v59, v58, 0, (uint64_t)&v71);
    if (v59)
    {
      if (*(_DWORD *)v59 == 2)
        WTF::StringImpl::destroy(v59, v60);
      else
        *(_DWORD *)v59 -= 2;
    }
  }
  return v8;
}

{
  uint64_t v5;
  unint64_t v6;
  size_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  double v16;
  uint64_t v17;
  unint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  uint64_t v36;
  unint64_t v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  double v40;
  uint64_t v41;
  unint64_t v42;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44;
  uint64_t v45;
  unint64_t v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;
  uint64_t v49;
  unint64_t v50;
  WTF::StringImpl *v51;
  WTF::StringImpl *v52;
  unsigned __int8 *v54;
  unsigned int v55;
  unsigned __int8 *v56;
  unsigned int v57;
  unsigned __int8 *v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  WTF::StringImpl *v63;
  unint64_t v64;
  int v65;
  int v66;
  uint64_t v67;

  v5 = *(_QWORD *)(a1 + 56);
  v6 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v7 = 8 * *(unsigned __int8 *)(v6 + 14);
  v8 = JSC::allocateCell<JSC::JSFinalObject>(v5, v7 + 16);
  v9 = *(_DWORD *)(v6 + 8);
  *(_DWORD *)v8 = v6 >> 4;
  *(_DWORD *)(v8 + 4) = v9;
  *(_QWORD *)(v8 + 8) = 0;
  bzero((void *)(v8 + 16), v7);
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a3 + 16);
  if (!v11 || (v12 = *(_DWORD *)(v11 + 4)) == 0)
  {
    v13 = *(_QWORD *)(v10 + 41968);
    goto LABEL_9;
  }
  if (v12 != 1)
    goto LABEL_6;
  v54 = *(unsigned __int8 **)(v11 + 8);
  if ((*(_BYTE *)(v11 + 16) & 4) != 0)
  {
    v55 = *v54;
LABEL_94:
    v13 = *(_QWORD *)(v10 + 8 * v55 + 42216);
    goto LABEL_9;
  }
  v60 = *(unsigned __int16 *)v54;
  if (v60 <= 0xFF)
  {
    v55 = v60;
    goto LABEL_94;
  }
LABEL_6:
  v13 = *(_QWORD *)(v10 + 64760);
  if (!v13 || v11 != *(_QWORD *)(v13 + 8))
    v13 = JSC::jsStringWithCacheSlowCase();
LABEL_9:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v14 = v63;
  v63 = 0;
  v64 = v8;
  v65 = -1;
  v66 = 0x1000000;
  v67 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v14, v13, 0, (uint64_t)&v63);
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v15);
    else
      *(_DWORD *)v14 -= 2;
  }
  v16 = *(double *)a3;
  if ((*(_QWORD *)a3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v17 = (int)v16, v16 == (double)(int)v17)
    && ((_DWORD)v17 || (*(_QWORD *)&v16 & 0x8000000000000000) == 0))
  {
    v18 = v17 | 0xFFFE000000000000;
  }
  else
  {
    v18 = *(_QWORD *)&v16 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v63;
  v63 = 0;
  v64 = v8;
  v65 = -1;
  v66 = 0x1000000;
  v67 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v63);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = WebCore::JSConverter<WebCore::IDLEnumeration<WebCore::RTCStatsReport::Type>>::convert(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned int *)(a3 + 8));
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v22 = v63;
  v63 = 0;
  v64 = v8;
  v65 = -1;
  v66 = 0x1000000;
  v67 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v22, v21, 0, (uint64_t)&v63);
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v23);
    else
      *(_DWORD *)v22 -= 2;
  }
  v24 = *(_QWORD *)(a1 + 56);
  v25 = *(_QWORD *)(a3 + 32);
  if (!v25 || (v26 = *(_DWORD *)(v25 + 4)) == 0)
  {
    v27 = *(_QWORD *)(v24 + 41968);
    goto LABEL_33;
  }
  if (v26 == 1)
  {
    v56 = *(unsigned __int8 **)(v25 + 8);
    if ((*(_BYTE *)(v25 + 16) & 4) != 0)
    {
      v57 = *v56;
    }
    else
    {
      v61 = *(unsigned __int16 *)v56;
      if (v61 > 0xFF)
        goto LABEL_30;
      v57 = v61;
    }
    v27 = *(_QWORD *)(v24 + 8 * v57 + 42216);
    goto LABEL_33;
  }
LABEL_30:
  v27 = *(_QWORD *)(v24 + 64760);
  if (!v27 || v25 != *(_QWORD *)(v27 + 8))
    v27 = JSC::jsStringWithCacheSlowCase();
LABEL_33:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v28 = v63;
  v63 = 0;
  v64 = v8;
  v65 = -1;
  v66 = 0x1000000;
  v67 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v28, v27, 0, (uint64_t)&v63);
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v29);
    else
      *(_DWORD *)v28 -= 2;
  }
  v30 = *(_QWORD *)(a1 + 56);
  v31 = *(_QWORD *)(a3 + 24);
  if (!v31 || (v32 = *(_DWORD *)(v31 + 4)) == 0)
  {
    v33 = *(_QWORD *)(v30 + 41968);
    goto LABEL_43;
  }
  if (v32 == 1)
  {
    v58 = *(unsigned __int8 **)(v31 + 8);
    if ((*(_BYTE *)(v31 + 16) & 4) != 0)
    {
      v59 = *v58;
    }
    else
    {
      v62 = *(unsigned __int16 *)v58;
      if (v62 > 0xFF)
        goto LABEL_40;
      v59 = v62;
    }
    v33 = *(_QWORD *)(v30 + 8 * v59 + 42216);
    goto LABEL_43;
  }
LABEL_40:
  v33 = *(_QWORD *)(v30 + 64760);
  if (!v33 || v31 != *(_QWORD *)(v33 + 8))
    v33 = JSC::jsStringWithCacheSlowCase();
LABEL_43:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v34 = v63;
  v63 = 0;
  v64 = v8;
  v65 = -1;
  v66 = 0x1000000;
  v67 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v34, v33, 0, (uint64_t)&v63);
  if (v34)
  {
    if (*(_DWORD *)v34 == 2)
      WTF::StringImpl::destroy(v34, v35);
    else
      *(_DWORD *)v34 -= 2;
  }
  if (*(_BYTE *)(a3 + 88))
  {
    v36 = *(_QWORD *)(a3 + 80);
    if ((v36 & 0x80000000) != 0)
      v37 = COERCE__INT64((double)v36) + 0x2000000000000;
    else
      v37 = *(_QWORD *)(a3 + 80) | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v38 = v63;
    v63 = 0;
    v64 = v8;
    v65 = -1;
    v66 = 0x1000000;
    v67 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v38, v37, 0, (uint64_t)&v63);
    if (v38)
    {
      if (*(_DWORD *)v38 == 2)
        WTF::StringImpl::destroy(v38, v39);
      else
        *(_DWORD *)v38 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 104))
  {
    v40 = *(double *)(a3 + 96);
    if ((*(_QWORD *)&v40 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v41 = (int)v40, v40 == (double)(int)v41)
      && ((_DWORD)v41 || (*(_QWORD *)&v40 & 0x8000000000000000) == 0))
    {
      v42 = v41 | 0xFFFE000000000000;
    }
    else
    {
      v42 = *(_QWORD *)&v40 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v43 = v63;
    v63 = 0;
    v64 = v8;
    v65 = -1;
    v66 = 0x1000000;
    v67 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v43, v42, 0, (uint64_t)&v63);
    if (v43)
    {
      if (*(_DWORD *)v43 == 2)
        WTF::StringImpl::destroy(v43, v44);
      else
        *(_DWORD *)v43 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 72))
  {
    v45 = *(_QWORD *)(a3 + 64);
    if ((v45 & 0x80000000) != 0)
      v46 = COERCE__INT64((double)v45) + 0x2000000000000;
    else
      v46 = *(_QWORD *)(a3 + 64) | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v47 = v63;
    v63 = 0;
    v64 = v8;
    v65 = -1;
    v66 = 0x1000000;
    v67 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v47, v46, 0, (uint64_t)&v63);
    if (v47)
    {
      if (*(_DWORD *)v47 == 2)
        WTF::StringImpl::destroy(v47, v48);
      else
        *(_DWORD *)v47 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 56))
  {
    v49 = *(_QWORD *)(a3 + 48);
    if ((v49 & 0x80000000) != 0)
      v50 = COERCE__INT64((double)v49) + 0x2000000000000;
    else
      v50 = *(_QWORD *)(a3 + 48) | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v51 = v63;
    v63 = 0;
    v64 = v8;
    v65 = -1;
    v66 = 0x1000000;
    v67 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v51, v50, 0, (uint64_t)&v63);
    if (v51)
    {
      if (*(_DWORD *)v51 == 2)
        WTF::StringImpl::destroy(v51, v52);
      else
        *(_DWORD *)v51 -= 2;
    }
  }
  return v8;
}

{
  uint64_t v5;
  unint64_t v6;
  size_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  double v16;
  uint64_t v17;
  unint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  double v30;
  uint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  uint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  double v39;
  uint64_t v40;
  unint64_t v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  unint64_t v44;
  unint64_t v45;
  WTF::StringImpl *v46;
  WTF::StringImpl *v47;
  double v48;
  uint64_t v49;
  unint64_t v50;
  WTF::StringImpl *v51;
  WTF::StringImpl *v52;
  unsigned __int8 *v54;
  unsigned int v55;
  unsigned __int8 *v56;
  unsigned int v57;
  double v58;
  unsigned int v59;
  unsigned int v60;
  WTF::StringImpl *v61;
  unint64_t v62;
  int v63;
  int v64;
  uint64_t v65;

  v5 = *(_QWORD *)(a1 + 56);
  v6 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v7 = 8 * *(unsigned __int8 *)(v6 + 14);
  v8 = JSC::allocateCell<JSC::JSFinalObject>(v5, v7 + 16);
  v9 = *(_DWORD *)(v6 + 8);
  *(_DWORD *)v8 = v6 >> 4;
  *(_DWORD *)(v8 + 4) = v9;
  *(_QWORD *)(v8 + 8) = 0;
  bzero((void *)(v8 + 16), v7);
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a3 + 16);
  if (!v11 || (v12 = *(_DWORD *)(v11 + 4)) == 0)
  {
    v13 = *(_QWORD *)(v10 + 41968);
    goto LABEL_9;
  }
  if (v12 != 1)
    goto LABEL_6;
  v54 = *(unsigned __int8 **)(v11 + 8);
  if ((*(_BYTE *)(v11 + 16) & 4) != 0)
  {
    v55 = *v54;
LABEL_99:
    v13 = *(_QWORD *)(v10 + 8 * v55 + 42216);
    goto LABEL_9;
  }
  v59 = *(unsigned __int16 *)v54;
  if (v59 <= 0xFF)
  {
    v55 = v59;
    goto LABEL_99;
  }
LABEL_6:
  v13 = *(_QWORD *)(v10 + 64760);
  if (!v13 || v11 != *(_QWORD *)(v13 + 8))
    v13 = JSC::jsStringWithCacheSlowCase();
LABEL_9:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v14 = v61;
  v61 = 0;
  v62 = v8;
  v63 = -1;
  v64 = 0x1000000;
  v65 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v14, v13, 0, (uint64_t)&v61);
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v15);
    else
      *(_DWORD *)v14 -= 2;
  }
  v16 = *(double *)a3;
  if ((*(_QWORD *)a3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v17 = (int)v16, v16 == (double)(int)v17)
    && ((_DWORD)v17 || (*(_QWORD *)&v16 & 0x8000000000000000) == 0))
  {
    v18 = v17 | 0xFFFE000000000000;
  }
  else
  {
    v18 = *(_QWORD *)&v16 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v61;
  v61 = 0;
  v62 = v8;
  v63 = -1;
  v64 = 0x1000000;
  v65 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v61);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = WebCore::JSConverter<WebCore::IDLEnumeration<WebCore::RTCStatsReport::Type>>::convert(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned int *)(a3 + 8));
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v22 = v61;
  v61 = 0;
  v62 = v8;
  v63 = -1;
  v64 = 0x1000000;
  v65 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v22, v21, 0, (uint64_t)&v61);
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v23);
    else
      *(_DWORD *)v22 -= 2;
  }
  v24 = *(_QWORD *)(a1 + 56);
  v25 = *(_QWORD *)(a3 + 24);
  if (!v25 || (v26 = *(_DWORD *)(v25 + 4)) == 0)
  {
    v27 = *(_QWORD *)(v24 + 41968);
    goto LABEL_33;
  }
  if (v26 == 1)
  {
    v56 = *(unsigned __int8 **)(v25 + 8);
    if ((*(_BYTE *)(v25 + 16) & 4) != 0)
    {
      v57 = *v56;
    }
    else
    {
      v60 = *(unsigned __int16 *)v56;
      if (v60 > 0xFF)
        goto LABEL_30;
      v57 = v60;
    }
    v27 = *(_QWORD *)(v24 + 8 * v57 + 42216);
    goto LABEL_33;
  }
LABEL_30:
  v27 = *(_QWORD *)(v24 + 64760);
  if (!v27 || v25 != *(_QWORD *)(v27 + 8))
    v27 = JSC::jsStringWithCacheSlowCase();
LABEL_33:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v28 = v61;
  v61 = 0;
  v62 = v8;
  v63 = -1;
  v64 = 0x1000000;
  v65 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v28, v27, 0, (uint64_t)&v61);
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v29);
    else
      *(_DWORD *)v28 -= 2;
  }
  if (*(_BYTE *)(a3 + 40))
  {
    v30 = *(double *)(a3 + 32);
    if ((*(_QWORD *)&v30 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v31 = (int)v30, v30 == (double)(int)v31)
      && ((_DWORD)v31 || (*(_QWORD *)&v30 & 0x8000000000000000) == 0))
    {
      v32 = v31 | 0xFFFE000000000000;
    }
    else
    {
      v32 = *(_QWORD *)&v30 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v33 = v61;
    v61 = 0;
    v62 = v8;
    v63 = -1;
    v64 = 0x1000000;
    v65 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v33, v32, 0, (uint64_t)&v61);
    if (v33)
    {
      if (*(_DWORD *)v33 == 2)
        WTF::StringImpl::destroy(v33, v34);
      else
        *(_DWORD *)v33 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 52))
  {
    v35 = *(unsigned int *)(a3 + 48);
    if ((v35 & 0x80000000) != 0)
      v36 = COERCE__INT64((double)v35) + 0x2000000000000;
    else
      v36 = v35 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v37 = v61;
    v61 = 0;
    v62 = v8;
    v63 = -1;
    v64 = 0x1000000;
    v65 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v37, v36, 0, (uint64_t)&v61);
    if (v37)
    {
      if (*(_DWORD *)v37 == 2)
        WTF::StringImpl::destroy(v37, v38);
      else
        *(_DWORD *)v37 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 80))
  {
    v39 = *(double *)(a3 + 72);
    if ((*(_QWORD *)&v39 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v40 = (int)v39, v39 == (double)(int)v40)
      && ((_DWORD)v40 || (*(_QWORD *)&v39 & 0x8000000000000000) == 0))
    {
      v41 = v40 | 0xFFFE000000000000;
    }
    else
    {
      v41 = *(_QWORD *)&v39 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v42 = v61;
    v61 = 0;
    v62 = v8;
    v63 = -1;
    v64 = 0x1000000;
    v65 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v42, v41, 0, (uint64_t)&v61);
    if (v42)
    {
      if (*(_DWORD *)v42 == 2)
        WTF::StringImpl::destroy(v42, v43);
      else
        *(_DWORD *)v42 -= 2;
    }
  }
  if (!*(_BYTE *)(a3 + 96))
    goto LABEL_74;
  v44 = *(_QWORD *)(a3 + 88);
  if (HIDWORD(v44))
  {
    v58 = (double)v44;
  }
  else
  {
    if ((v44 & 0x80000000) == 0)
    {
      v45 = v44 | 0xFFFE000000000000;
      goto LABEL_70;
    }
    v58 = (double)v44;
  }
  v45 = *(_QWORD *)&v58 + 0x2000000000000;
LABEL_70:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v46 = v61;
  v61 = 0;
  v62 = v8;
  v63 = -1;
  v64 = 0x1000000;
  v65 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v46, v45, 0, (uint64_t)&v61);
  if (v46)
  {
    if (*(_DWORD *)v46 == 2)
      WTF::StringImpl::destroy(v46, v47);
    else
      *(_DWORD *)v46 -= 2;
  }
LABEL_74:
  if (*(_BYTE *)(a3 + 64))
  {
    v48 = *(double *)(a3 + 56);
    if ((*(_QWORD *)&v48 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v49 = (int)v48, v48 == (double)(int)v49)
      && ((_DWORD)v49 || (*(_QWORD *)&v48 & 0x8000000000000000) == 0))
    {
      v50 = v49 | 0xFFFE000000000000;
    }
    else
    {
      v50 = *(_QWORD *)&v48 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v51 = v61;
    v61 = 0;
    v62 = v8;
    v63 = -1;
    v64 = 0x1000000;
    v65 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v51, v50, 0, (uint64_t)&v61);
    if (v51)
    {
      if (*(_DWORD *)v51 == 2)
        WTF::StringImpl::destroy(v51, v52);
      else
        *(_DWORD *)v51 -= 2;
    }
  }
  return v8;
}

{
  uint64_t v5;
  unint64_t v6;
  size_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  double v16;
  uint64_t v17;
  unint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  unint64_t v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  uint64_t v28;
  unint64_t v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  unsigned __int8 *v33;
  unsigned int v34;
  unsigned int v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v5 = *(_QWORD *)(a1 + 56);
  v6 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v7 = 8 * *(unsigned __int8 *)(v6 + 14);
  v8 = JSC::allocateCell<JSC::JSFinalObject>(v5, v7 + 16);
  v9 = *(_DWORD *)(v6 + 8);
  *(_DWORD *)v8 = v6 >> 4;
  *(_DWORD *)(v8 + 4) = v9;
  *(_QWORD *)(v8 + 8) = 0;
  bzero((void *)(v8 + 16), v7);
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a3 + 16);
  if (!v11 || (v12 = *(_DWORD *)(v11 + 4)) == 0)
  {
    v13 = *(_QWORD *)(v10 + 41968);
    goto LABEL_9;
  }
  if (v12 != 1)
    goto LABEL_6;
  v33 = *(unsigned __int8 **)(v11 + 8);
  if ((*(_BYTE *)(v11 + 16) & 4) != 0)
  {
    v34 = *v33;
LABEL_50:
    v13 = *(_QWORD *)(v10 + 8 * v34 + 42216);
    goto LABEL_9;
  }
  v35 = *(unsigned __int16 *)v33;
  if (v35 <= 0xFF)
  {
    v34 = v35;
    goto LABEL_50;
  }
LABEL_6:
  v13 = *(_QWORD *)(v10 + 64760);
  if (!v13 || v11 != *(_QWORD *)(v13 + 8))
    v13 = JSC::jsStringWithCacheSlowCase();
LABEL_9:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v14 = v36;
  v36 = 0;
  v37 = v8;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v14, v13, 0, (uint64_t)&v36);
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v15);
    else
      *(_DWORD *)v14 -= 2;
  }
  v16 = *(double *)a3;
  if ((*(_QWORD *)a3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v17 = (int)v16, v16 == (double)(int)v17)
    && ((_DWORD)v17 || (*(_QWORD *)&v16 & 0x8000000000000000) == 0))
  {
    v18 = v17 | 0xFFFE000000000000;
  }
  else
  {
    v18 = *(_QWORD *)&v16 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v36;
  v36 = 0;
  v37 = v8;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v36);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = WebCore::JSConverter<WebCore::IDLEnumeration<WebCore::RTCStatsReport::Type>>::convert(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned int *)(a3 + 8));
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v22 = v36;
  v36 = 0;
  v37 = v8;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v22, v21, 0, (uint64_t)&v36);
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v23);
    else
      *(_DWORD *)v22 -= 2;
  }
  if (*(_BYTE *)(a3 + 36))
  {
    v24 = *(unsigned int *)(a3 + 32);
    if ((v24 & 0x80000000) != 0)
      v25 = COERCE__INT64((double)v24) + 0x2000000000000;
    else
      v25 = v24 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v26 = v36;
    v36 = 0;
    v37 = v8;
    v38 = -1;
    v39 = 0x1000000;
    v40 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v26, v25, 0, (uint64_t)&v36);
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
        WTF::StringImpl::destroy(v26, v27);
      else
        *(_DWORD *)v26 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 28))
  {
    v28 = *(unsigned int *)(a3 + 24);
    if ((v28 & 0x80000000) != 0)
      v29 = COERCE__INT64((double)v28) + 0x2000000000000;
    else
      v29 = v28 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v30 = v36;
    v36 = 0;
    v37 = v8;
    v38 = -1;
    v39 = 0x1000000;
    v40 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v30, v29, 0, (uint64_t)&v36);
    if (v30)
    {
      if (*(_DWORD *)v30 == 2)
        WTF::StringImpl::destroy(v30, v31);
      else
        *(_DWORD *)v30 -= 2;
    }
  }
  return v8;
}

{
  uint64_t v5;
  unint64_t v6;
  size_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  double v16;
  uint64_t v17;
  unint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  unint64_t v24;
  unint64_t v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  unint64_t v28;
  unint64_t v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  uint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  uint64_t v42;
  unint64_t v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  uint64_t v46;
  unint64_t v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  WTF::StringImpl *v54;
  WTF::StringImpl *v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  WTF::StringImpl *v60;
  WTF::StringImpl *v61;
  unsigned __int8 *v63;
  unsigned int v64;
  double v65;
  double v66;
  unsigned __int8 *v67;
  unsigned int v68;
  unsigned __int8 *v69;
  unsigned int v70;
  unsigned __int8 *v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  WTF::StringImpl *v77;
  unint64_t v78;
  int v79;
  int v80;
  uint64_t v81;

  v5 = *(_QWORD *)(a1 + 56);
  v6 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v7 = 8 * *(unsigned __int8 *)(v6 + 14);
  v8 = JSC::allocateCell<JSC::JSFinalObject>(v5, v7 + 16);
  v9 = *(_DWORD *)(v6 + 8);
  *(_DWORD *)v8 = v6 >> 4;
  *(_DWORD *)(v8 + 4) = v9;
  *(_QWORD *)(v8 + 8) = 0;
  bzero((void *)(v8 + 16), v7);
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a3 + 16);
  if (!v11 || (v12 = *(_DWORD *)(v11 + 4)) == 0)
  {
    v13 = *(_QWORD *)(v10 + 41968);
    goto LABEL_9;
  }
  if (v12 != 1)
    goto LABEL_6;
  v63 = *(unsigned __int8 **)(v11 + 8);
  if ((*(_BYTE *)(v11 + 16) & 4) != 0)
  {
    v64 = *v63;
LABEL_107:
    v13 = *(_QWORD *)(v10 + 8 * v64 + 42216);
    goto LABEL_9;
  }
  v73 = *(unsigned __int16 *)v63;
  if (v73 <= 0xFF)
  {
    v64 = v73;
    goto LABEL_107;
  }
LABEL_6:
  v13 = *(_QWORD *)(v10 + 64760);
  if (!v13 || v11 != *(_QWORD *)(v13 + 8))
    v13 = JSC::jsStringWithCacheSlowCase();
LABEL_9:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v14 = v77;
  v77 = 0;
  v78 = v8;
  v79 = -1;
  v80 = 0x1000000;
  v81 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v14, v13, 0, (uint64_t)&v77);
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v15);
    else
      *(_DWORD *)v14 -= 2;
  }
  v16 = *(double *)a3;
  if ((*(_QWORD *)a3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v17 = (int)v16, v16 == (double)(int)v17)
    && ((_DWORD)v17 || (*(_QWORD *)&v16 & 0x8000000000000000) == 0))
  {
    v18 = v17 | 0xFFFE000000000000;
  }
  else
  {
    v18 = *(_QWORD *)&v16 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v77;
  v77 = 0;
  v78 = v8;
  v79 = -1;
  v80 = 0x1000000;
  v81 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v77);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = WebCore::JSConverter<WebCore::IDLEnumeration<WebCore::RTCStatsReport::Type>>::convert(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned int *)(a3 + 8));
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v22 = v77;
  v77 = 0;
  v78 = v8;
  v79 = -1;
  v80 = 0x1000000;
  v81 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v22, v21, 0, (uint64_t)&v77);
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v23);
    else
      *(_DWORD *)v22 -= 2;
  }
  if (!*(_BYTE *)(a3 + 96))
    goto LABEL_35;
  v24 = *(_QWORD *)(a3 + 88);
  if (HIDWORD(v24))
  {
    v65 = (double)v24;
  }
  else
  {
    if ((v24 & 0x80000000) == 0)
    {
      v25 = v24 | 0xFFFE000000000000;
      goto LABEL_31;
    }
    v65 = (double)v24;
  }
  v25 = *(_QWORD *)&v65 + 0x2000000000000;
LABEL_31:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v26 = v77;
  v77 = 0;
  v78 = v8;
  v79 = -1;
  v80 = 0x1000000;
  v81 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v26, v25, 0, (uint64_t)&v77);
  if (v26)
  {
    if (*(_DWORD *)v26 == 2)
      WTF::StringImpl::destroy(v26, v27);
    else
      *(_DWORD *)v26 -= 2;
  }
LABEL_35:
  if (!*(_BYTE *)(a3 + 72))
    goto LABEL_43;
  v28 = *(_QWORD *)(a3 + 64);
  if (HIDWORD(v28))
  {
    v66 = (double)v28;
  }
  else
  {
    if ((v28 & 0x80000000) == 0)
    {
      v29 = v28 | 0xFFFE000000000000;
      goto LABEL_39;
    }
    v66 = (double)v28;
  }
  v29 = *(_QWORD *)&v66 + 0x2000000000000;
LABEL_39:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v30 = v77;
  v77 = 0;
  v78 = v8;
  v79 = -1;
  v80 = 0x1000000;
  v81 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v30, v29, 0, (uint64_t)&v77);
  if (v30)
  {
    if (*(_DWORD *)v30 == 2)
      WTF::StringImpl::destroy(v30, v31);
    else
      *(_DWORD *)v30 -= 2;
  }
LABEL_43:
  if (*(_BYTE *)(a3 + 44))
  {
    v32 = *(unsigned int *)(a3 + 40);
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    v33 = v32 | 0xFFFE000000000000;
    WTF::AtomStringImpl::addLiteral();
    v34 = v77;
    v77 = 0;
    v78 = v8;
    v79 = -1;
    v80 = 0x1000000;
    v81 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v34, v33, 0, (uint64_t)&v77);
    if (v34)
    {
      if (*(_DWORD *)v34 == 2)
        WTF::StringImpl::destroy(v34, v35);
      else
        *(_DWORD *)v34 -= 2;
    }
  }
  v36 = *(_QWORD *)(a3 + 24);
  if (!v36)
    goto LABEL_58;
  v37 = *(_QWORD *)(a1 + 56);
  v38 = *(_DWORD *)(v36 + 4);
  if (v38)
  {
    if (v38 != 1)
    {
LABEL_51:
      v39 = *(_QWORD *)(v37 + 64760);
      if (!v39 || v36 != *(_QWORD *)(v39 + 8))
        v39 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_54;
    }
    v67 = *(unsigned __int8 **)(v36 + 8);
    if ((*(_BYTE *)(v36 + 16) & 4) != 0)
    {
      v68 = *v67;
    }
    else
    {
      v74 = *(unsigned __int16 *)v67;
      if (v74 > 0xFF)
        goto LABEL_51;
      v68 = v74;
    }
    v39 = *(_QWORD *)(v37 + 8 * v68 + 42216);
  }
  else
  {
    v39 = *(_QWORD *)(v37 + 41968);
  }
LABEL_54:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v40 = v77;
  v77 = 0;
  v78 = v8;
  v79 = -1;
  v80 = 0x1000000;
  v81 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v40, v39, 0, (uint64_t)&v77);
  if (v40)
  {
    if (*(_DWORD *)v40 == 2)
      WTF::StringImpl::destroy(v40, v41);
    else
      *(_DWORD *)v40 -= 2;
  }
LABEL_58:
  if (*(_BYTE *)(a3 + 84))
  {
    v42 = *(unsigned int *)(a3 + 80);
    if ((v42 & 0x80000000) != 0)
      v43 = COERCE__INT64((double)v42) + 0x2000000000000;
    else
      v43 = v42 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v44 = v77;
    v77 = 0;
    v78 = v8;
    v79 = -1;
    v80 = 0x1000000;
    v81 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v44, v43, 0, (uint64_t)&v77);
    if (v44)
    {
      if (*(_DWORD *)v44 == 2)
        WTF::StringImpl::destroy(v44, v45);
      else
        *(_DWORD *)v44 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 60))
  {
    v46 = *(unsigned int *)(a3 + 56);
    if ((v46 & 0x80000000) != 0)
      v47 = COERCE__INT64((double)v46) + 0x2000000000000;
    else
      v47 = v46 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v48 = v77;
    v77 = 0;
    v78 = v8;
    v79 = -1;
    v80 = 0x1000000;
    v81 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v48, v47, 0, (uint64_t)&v77);
    if (v48)
    {
      if (*(_DWORD *)v48 == 2)
        WTF::StringImpl::destroy(v48, v49);
      else
        *(_DWORD *)v48 -= 2;
    }
  }
  v50 = *(_QWORD *)(a3 + 32);
  if (!v50)
    goto LABEL_82;
  v51 = *(_QWORD *)(a1 + 56);
  v52 = *(_DWORD *)(v50 + 4);
  if (v52)
  {
    if (v52 != 1)
    {
LABEL_75:
      v53 = *(_QWORD *)(v51 + 64760);
      if (!v53 || v50 != *(_QWORD *)(v53 + 8))
        v53 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_78;
    }
    v69 = *(unsigned __int8 **)(v50 + 8);
    if ((*(_BYTE *)(v50 + 16) & 4) != 0)
    {
      v70 = *v69;
    }
    else
    {
      v75 = *(unsigned __int16 *)v69;
      if (v75 > 0xFF)
        goto LABEL_75;
      v70 = v75;
    }
    v53 = *(_QWORD *)(v51 + 8 * v70 + 42216);
  }
  else
  {
    v53 = *(_QWORD *)(v51 + 41968);
  }
LABEL_78:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v54 = v77;
  v77 = 0;
  v78 = v8;
  v79 = -1;
  v80 = 0x1000000;
  v81 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v54, v53, 0, (uint64_t)&v77);
  if (v54)
  {
    if (*(_DWORD *)v54 == 2)
      WTF::StringImpl::destroy(v54, v55);
    else
      *(_DWORD *)v54 -= 2;
  }
LABEL_82:
  v56 = *(_QWORD *)(a3 + 48);
  if (!v56)
    return v8;
  v57 = *(_QWORD *)(a1 + 56);
  v58 = *(_DWORD *)(v56 + 4);
  if (v58)
  {
    if (v58 != 1)
    {
LABEL_85:
      v59 = *(_QWORD *)(v57 + 64760);
      if (!v59 || v56 != *(_QWORD *)(v59 + 8))
        v59 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_88;
    }
    v71 = *(unsigned __int8 **)(v56 + 8);
    if ((*(_BYTE *)(v56 + 16) & 4) != 0)
    {
      v72 = *v71;
    }
    else
    {
      v76 = *(unsigned __int16 *)v71;
      if (v76 > 0xFF)
        goto LABEL_85;
      v72 = v76;
    }
    v59 = *(_QWORD *)(v57 + 8 * v72 + 42216);
  }
  else
  {
    v59 = *(_QWORD *)(v57 + 41968);
  }
LABEL_88:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v60 = v77;
  v77 = 0;
  v78 = v8;
  v79 = -1;
  v80 = 0x1000000;
  v81 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v60, v59, 0, (uint64_t)&v77);
  if (v60)
  {
    if (*(_DWORD *)v60 == 2)
      WTF::StringImpl::destroy(v60, v61);
    else
      *(_DWORD *)v60 -= 2;
  }
  return v8;
}

{
  uint64_t v5;
  unint64_t v6;
  size_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  double v16;
  uint64_t v17;
  unint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  unint64_t v24;
  unint64_t v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  unint64_t v28;
  unint64_t v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  WTF::StringImpl *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  uint64_t v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  WTF::StringImpl *v53;
  WTF::StringImpl *v54;
  uint64_t v55;
  WTF::StringImpl *v56;
  WTF::StringImpl *v57;
  uint64_t v58;
  WTF::StringImpl *v59;
  WTF::StringImpl *v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  WTF::StringImpl *v65;
  WTF::StringImpl *v66;
  unint64_t v67;
  unint64_t v68;
  WTF::StringImpl *v69;
  WTF::StringImpl *v70;
  unint64_t v71;
  unint64_t v72;
  WTF::StringImpl *v73;
  WTF::StringImpl *v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  WTF::StringImpl *v79;
  WTF::StringImpl *v80;
  uint64_t v81;
  unint64_t v82;
  WTF::StringImpl *v83;
  WTF::StringImpl *v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  WTF::StringImpl *v89;
  WTF::StringImpl *v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  WTF::StringImpl *v95;
  WTF::StringImpl *v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  WTF::StringImpl *v101;
  WTF::StringImpl *v102;
  unsigned __int8 *v104;
  unsigned int v105;
  double v106;
  double v107;
  double v108;
  double v109;
  unsigned __int8 *v110;
  unsigned int v111;
  unsigned __int8 *v112;
  unsigned int v113;
  unsigned __int8 *v114;
  unsigned int v115;
  unsigned __int8 *v116;
  unsigned int v117;
  unsigned __int8 *v118;
  unsigned int v119;
  unsigned __int8 *v120;
  unsigned int v121;
  unsigned __int8 *v122;
  unsigned int v123;
  unsigned __int8 *v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  WTF::StringImpl *v135;
  unint64_t v136;
  int v137;
  int v138;
  uint64_t v139;

  v5 = *(_QWORD *)(a1 + 56);
  v6 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v7 = 8 * *(unsigned __int8 *)(v6 + 14);
  v8 = JSC::allocateCell<JSC::JSFinalObject>(v5, v7 + 16);
  v9 = *(_DWORD *)(v6 + 8);
  *(_DWORD *)v8 = v6 >> 4;
  *(_DWORD *)(v8 + 4) = v9;
  *(_QWORD *)(v8 + 8) = 0;
  bzero((void *)(v8 + 16), v7);
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a3 + 16);
  if (!v11 || (v12 = *(_DWORD *)(v11 + 4)) == 0)
  {
    v13 = *(_QWORD *)(v10 + 41968);
    goto LABEL_9;
  }
  if (v12 != 1)
    goto LABEL_6;
  v104 = *(unsigned __int8 **)(v11 + 8);
  if ((*(_BYTE *)(v11 + 16) & 4) != 0)
  {
    v105 = *v104;
LABEL_190:
    v13 = *(_QWORD *)(v10 + 8 * v105 + 42216);
    goto LABEL_9;
  }
  v126 = *(unsigned __int16 *)v104;
  if (v126 <= 0xFF)
  {
    v105 = v126;
    goto LABEL_190;
  }
LABEL_6:
  v13 = *(_QWORD *)(v10 + 64760);
  if (!v13 || v11 != *(_QWORD *)(v13 + 8))
    v13 = JSC::jsStringWithCacheSlowCase();
LABEL_9:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v14 = v135;
  v135 = 0;
  v136 = v8;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v14, v13, 0, (uint64_t)&v135);
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v15);
    else
      *(_DWORD *)v14 -= 2;
  }
  v16 = *(double *)a3;
  if ((*(_QWORD *)a3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v17 = (int)v16, v16 == (double)(int)v17)
    && ((_DWORD)v17 || (*(_QWORD *)&v16 & 0x8000000000000000) == 0))
  {
    v18 = v17 | 0xFFFE000000000000;
  }
  else
  {
    v18 = *(_QWORD *)&v16 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v135;
  v135 = 0;
  v136 = v8;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v135);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = WebCore::JSConverter<WebCore::IDLEnumeration<WebCore::RTCStatsReport::Type>>::convert(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned int *)(a3 + 8));
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v22 = v135;
  v135 = 0;
  v136 = v8;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v22, v21, 0, (uint64_t)&v135);
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v23);
    else
      *(_DWORD *)v22 -= 2;
  }
  if (!*(_BYTE *)(a3 + 80))
    goto LABEL_35;
  v24 = *(_QWORD *)(a3 + 72);
  if (HIDWORD(v24))
  {
    v106 = (double)v24;
  }
  else
  {
    if ((v24 & 0x80000000) == 0)
    {
      v25 = v24 | 0xFFFE000000000000;
      goto LABEL_31;
    }
    v106 = (double)v24;
  }
  v25 = *(_QWORD *)&v106 + 0x2000000000000;
LABEL_31:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v26 = v135;
  v135 = 0;
  v136 = v8;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v26, v25, 0, (uint64_t)&v135);
  if (v26)
  {
    if (*(_DWORD *)v26 == 2)
      WTF::StringImpl::destroy(v26, v27);
    else
      *(_DWORD *)v26 -= 2;
  }
LABEL_35:
  if (!*(_BYTE *)(a3 + 64))
    goto LABEL_43;
  v28 = *(_QWORD *)(a3 + 56);
  if (HIDWORD(v28))
  {
    v107 = (double)v28;
  }
  else
  {
    if ((v28 & 0x80000000) == 0)
    {
      v29 = v28 | 0xFFFE000000000000;
      goto LABEL_39;
    }
    v107 = (double)v28;
  }
  v29 = *(_QWORD *)&v107 + 0x2000000000000;
LABEL_39:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v30 = v135;
  v135 = 0;
  v136 = v8;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v30, v29, 0, (uint64_t)&v135);
  if (v30)
  {
    if (*(_DWORD *)v30 == 2)
      WTF::StringImpl::destroy(v30, v31);
    else
      *(_DWORD *)v30 -= 2;
  }
LABEL_43:
  v32 = *(_QWORD *)(a3 + 152);
  if (!v32)
    goto LABEL_53;
  v33 = *(_QWORD *)(a1 + 56);
  v34 = *(_DWORD *)(v32 + 4);
  if (v34)
  {
    if (v34 != 1)
    {
LABEL_46:
      v35 = *(_QWORD *)(v33 + 64760);
      if (!v35 || v32 != *(_QWORD *)(v35 + 8))
        v35 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_49;
    }
    v110 = *(unsigned __int8 **)(v32 + 8);
    if ((*(_BYTE *)(v32 + 16) & 4) != 0)
    {
      v111 = *v110;
    }
    else
    {
      v127 = *(unsigned __int16 *)v110;
      if (v127 > 0xFF)
        goto LABEL_46;
      v111 = v127;
    }
    v35 = *(_QWORD *)(v33 + 8 * v111 + 42216);
  }
  else
  {
    v35 = *(_QWORD *)(v33 + 41968);
  }
LABEL_49:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v36 = v135;
  v135 = 0;
  v136 = v8;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v36, v35, 0, (uint64_t)&v135);
  if (v36)
  {
    if (*(_DWORD *)v36 == 2)
      WTF::StringImpl::destroy(v36, (WTF::StringImpl *)v32);
    else
      *(_DWORD *)v36 -= 2;
  }
LABEL_53:
  if (!*(_BYTE *)(a3 + 164))
    goto LABEL_68;
  v37 = *(unsigned int *)(a3 + 160);
  v38 = *(_QWORD *)(a1 + 56);
  v39 = (uint64_t *)(v38 + 41968);
  if ((byte_1EE3366ED & 1) == 0)
  {
    dword_1ECE79C00 += 2;
    byte_1EE3366ED = 1;
    dword_1ECE79C20 += 2;
    qword_1EE336840 = (uint64_t)&dword_1ECE79C00;
    unk_1EE336848 = &dword_1ECE79C20;
    dword_1ECE79C40 += 2;
    qword_1EE336850 = (uint64_t)&dword_1ECE79C40;
  }
  v40 = *(_QWORD *)&_MergedGlobals_514[8 * v37 + 344];
  if (v40)
  {
    v41 = *(_DWORD *)v40;
    v42 = *(_DWORD *)(v40 + 4);
    *(_DWORD *)v40 += 2;
    if (v42)
    {
      if (v42 != 1)
      {
LABEL_59:
        v43 = *(_QWORD *)(v38 + 64760);
        if (!v43 || v40 != *(_QWORD *)(v43 + 8))
        {
          v43 = JSC::jsStringWithCacheSlowCase();
          v41 = *(_DWORD *)v40 - 2;
        }
        goto LABEL_62;
      }
      v124 = *(unsigned __int8 **)(v40 + 8);
      if ((*(_BYTE *)(v40 + 16) & 4) != 0)
      {
        v125 = *v124;
      }
      else
      {
        v134 = *(unsigned __int16 *)v124;
        if (v134 > 0xFF)
          goto LABEL_59;
        v125 = v134;
      }
      v43 = *(_QWORD *)(v38 + 8 * v125 + 42216);
    }
    else
    {
      v43 = *v39;
    }
LABEL_62:
    if (v41)
      *(_DWORD *)v40 = v41;
    else
      WTF::StringImpl::destroy((WTF::StringImpl *)v40, (WTF::StringImpl *)v32);
    goto LABEL_64;
  }
  v43 = *v39;
LABEL_64:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v44 = v135;
  v135 = 0;
  v136 = v8;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v44, v43, 0, (uint64_t)&v135);
  if (v44)
  {
    if (*(_DWORD *)v44 == 2)
      WTF::StringImpl::destroy(v44, v45);
    else
      *(_DWORD *)v44 -= 2;
  }
LABEL_68:
  v46 = WebCore::convertEnumerationToJS<RTCDtlsTransportState>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned int *)(a3 + 104));
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v47 = v135;
  v135 = 0;
  v136 = v8;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v47, v46, 0, (uint64_t)&v135);
  if (v47)
  {
    if (*(_DWORD *)v47 == 2)
      WTF::StringImpl::destroy(v47, v48);
    else
      *(_DWORD *)v47 -= 2;
  }
  v49 = *(_QWORD *)(a3 + 96);
  if (!v49)
    goto LABEL_82;
  v50 = *(_QWORD *)(a1 + 56);
  v51 = *(_DWORD *)(v49 + 4);
  if (v51)
  {
    if (v51 != 1)
    {
LABEL_75:
      v52 = *(_QWORD *)(v50 + 64760);
      if (!v52 || v49 != *(_QWORD *)(v52 + 8))
        v52 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_78;
    }
    v112 = *(unsigned __int8 **)(v49 + 8);
    if ((*(_BYTE *)(v49 + 16) & 4) != 0)
    {
      v113 = *v112;
    }
    else
    {
      v128 = *(unsigned __int16 *)v112;
      if (v128 > 0xFF)
        goto LABEL_75;
      v113 = v128;
    }
    v52 = *(_QWORD *)(v50 + 8 * v113 + 42216);
  }
  else
  {
    v52 = *(_QWORD *)(v50 + 41968);
  }
LABEL_78:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v53 = v135;
  v135 = 0;
  v136 = v8;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v53, v52, 0, (uint64_t)&v135);
  if (v53)
  {
    if (*(_DWORD *)v53 == 2)
      WTF::StringImpl::destroy(v53, v54);
    else
      *(_DWORD *)v53 -= 2;
  }
LABEL_82:
  if (*(_BYTE *)(a3 + 92))
  {
    v55 = WebCore::convertEnumerationToJS<WebCore::RTCIceRole>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned int *)(a3 + 88));
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v56 = v135;
    v135 = 0;
    v136 = v8;
    v137 = -1;
    v138 = 0x1000000;
    v139 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v56, v55, 0, (uint64_t)&v135);
    if (v56)
    {
      if (*(_DWORD *)v56 == 2)
        WTF::StringImpl::destroy(v56, v57);
      else
        *(_DWORD *)v56 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 112))
  {
    v58 = WebCore::convertEnumerationToJS<WebCore::RTCIceTransportState>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned int *)(a3 + 108));
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v59 = v135;
    v135 = 0;
    v136 = v8;
    v137 = -1;
    v138 = 0x1000000;
    v139 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v59, v58, 0, (uint64_t)&v135);
    if (v59)
    {
      if (*(_DWORD *)v59 == 2)
        WTF::StringImpl::destroy(v59, v60);
      else
        *(_DWORD *)v59 -= 2;
    }
  }
  v61 = *(_QWORD *)(a3 + 128);
  if (!v61)
    goto LABEL_102;
  v62 = *(_QWORD *)(a1 + 56);
  v63 = *(_DWORD *)(v61 + 4);
  if (v63)
  {
    if (v63 != 1)
    {
LABEL_95:
      v64 = *(_QWORD *)(v62 + 64760);
      if (!v64 || v61 != *(_QWORD *)(v64 + 8))
        v64 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_98;
    }
    v114 = *(unsigned __int8 **)(v61 + 8);
    if ((*(_BYTE *)(v61 + 16) & 4) != 0)
    {
      v115 = *v114;
    }
    else
    {
      v129 = *(unsigned __int16 *)v114;
      if (v129 > 0xFF)
        goto LABEL_95;
      v115 = v129;
    }
    v64 = *(_QWORD *)(v62 + 8 * v115 + 42216);
  }
  else
  {
    v64 = *(_QWORD *)(v62 + 41968);
  }
LABEL_98:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v65 = v135;
  v135 = 0;
  v136 = v8;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v65, v64, 0, (uint64_t)&v135);
  if (v65)
  {
    if (*(_DWORD *)v65 == 2)
      WTF::StringImpl::destroy(v65, v66);
    else
      *(_DWORD *)v65 -= 2;
  }
LABEL_102:
  if (!*(_BYTE *)(a3 + 48))
    goto LABEL_110;
  v67 = *(_QWORD *)(a3 + 40);
  if (HIDWORD(v67))
  {
    v108 = (double)v67;
  }
  else
  {
    if ((v67 & 0x80000000) == 0)
    {
      v68 = v67 | 0xFFFE000000000000;
      goto LABEL_106;
    }
    v108 = (double)v67;
  }
  v68 = *(_QWORD *)&v108 + 0x2000000000000;
LABEL_106:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v69 = v135;
  v135 = 0;
  v136 = v8;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v69, v68, 0, (uint64_t)&v135);
  if (v69)
  {
    if (*(_DWORD *)v69 == 2)
      WTF::StringImpl::destroy(v69, v70);
    else
      *(_DWORD *)v69 -= 2;
  }
LABEL_110:
  if (!*(_BYTE *)(a3 + 32))
    goto LABEL_118;
  v71 = *(_QWORD *)(a3 + 24);
  if (HIDWORD(v71))
  {
    v109 = (double)v71;
  }
  else
  {
    if ((v71 & 0x80000000) == 0)
    {
      v72 = v71 | 0xFFFE000000000000;
      goto LABEL_114;
    }
    v109 = (double)v71;
  }
  v72 = *(_QWORD *)&v109 + 0x2000000000000;
LABEL_114:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v73 = v135;
  v135 = 0;
  v136 = v8;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v73, v72, 0, (uint64_t)&v135);
  if (v73)
  {
    if (*(_DWORD *)v73 == 2)
      WTF::StringImpl::destroy(v73, v74);
    else
      *(_DWORD *)v73 -= 2;
  }
LABEL_118:
  v75 = *(_QWORD *)(a3 + 136);
  if (!v75)
    goto LABEL_128;
  v76 = *(_QWORD *)(a1 + 56);
  v77 = *(_DWORD *)(v75 + 4);
  if (v77)
  {
    if (v77 != 1)
    {
LABEL_121:
      v78 = *(_QWORD *)(v76 + 64760);
      if (!v78 || v75 != *(_QWORD *)(v78 + 8))
        v78 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_124;
    }
    v116 = *(unsigned __int8 **)(v75 + 8);
    if ((*(_BYTE *)(v75 + 16) & 4) != 0)
    {
      v117 = *v116;
    }
    else
    {
      v130 = *(unsigned __int16 *)v116;
      if (v130 > 0xFF)
        goto LABEL_121;
      v117 = v130;
    }
    v78 = *(_QWORD *)(v76 + 8 * v117 + 42216);
  }
  else
  {
    v78 = *(_QWORD *)(v76 + 41968);
  }
LABEL_124:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v79 = v135;
  v135 = 0;
  v136 = v8;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v79, v78, 0, (uint64_t)&v135);
  if (v79)
  {
    if (*(_DWORD *)v79 == 2)
      WTF::StringImpl::destroy(v79, v80);
    else
      *(_DWORD *)v79 -= 2;
  }
LABEL_128:
  if (*(_BYTE *)(a3 + 180))
  {
    v81 = *(unsigned int *)(a3 + 176);
    if ((v81 & 0x80000000) != 0)
      v82 = COERCE__INT64((double)v81) + 0x2000000000000;
    else
      v82 = v81 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v83 = v135;
    v135 = 0;
    v136 = v8;
    v137 = -1;
    v138 = 0x1000000;
    v139 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v83, v82, 0, (uint64_t)&v135);
    if (v83)
    {
      if (*(_DWORD *)v83 == 2)
        WTF::StringImpl::destroy(v83, v84);
      else
        *(_DWORD *)v83 -= 2;
    }
  }
  v85 = *(_QWORD *)(a3 + 120);
  if (!v85)
    goto LABEL_145;
  v86 = *(_QWORD *)(a1 + 56);
  v87 = *(_DWORD *)(v85 + 4);
  if (v87)
  {
    if (v87 != 1)
    {
LABEL_138:
      v88 = *(_QWORD *)(v86 + 64760);
      if (!v88 || v85 != *(_QWORD *)(v88 + 8))
        v88 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_141;
    }
    v118 = *(unsigned __int8 **)(v85 + 8);
    if ((*(_BYTE *)(v85 + 16) & 4) != 0)
    {
      v119 = *v118;
    }
    else
    {
      v131 = *(unsigned __int16 *)v118;
      if (v131 > 0xFF)
        goto LABEL_138;
      v119 = v131;
    }
    v88 = *(_QWORD *)(v86 + 8 * v119 + 42216);
  }
  else
  {
    v88 = *(_QWORD *)(v86 + 41968);
  }
LABEL_141:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v89 = v135;
  v135 = 0;
  v136 = v8;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v89, v88, 0, (uint64_t)&v135);
  if (v89)
  {
    if (*(_DWORD *)v89 == 2)
      WTF::StringImpl::destroy(v89, v90);
    else
      *(_DWORD *)v89 -= 2;
  }
LABEL_145:
  v91 = *(_QWORD *)(a3 + 168);
  if (!v91)
    goto LABEL_155;
  v92 = *(_QWORD *)(a1 + 56);
  v93 = *(_DWORD *)(v91 + 4);
  if (v93)
  {
    if (v93 != 1)
    {
LABEL_148:
      v94 = *(_QWORD *)(v92 + 64760);
      if (!v94 || v91 != *(_QWORD *)(v94 + 8))
        v94 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_151;
    }
    v120 = *(unsigned __int8 **)(v91 + 8);
    if ((*(_BYTE *)(v91 + 16) & 4) != 0)
    {
      v121 = *v120;
    }
    else
    {
      v132 = *(unsigned __int16 *)v120;
      if (v132 > 0xFF)
        goto LABEL_148;
      v121 = v132;
    }
    v94 = *(_QWORD *)(v92 + 8 * v121 + 42216);
  }
  else
  {
    v94 = *(_QWORD *)(v92 + 41968);
  }
LABEL_151:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v95 = v135;
  v135 = 0;
  v136 = v8;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v95, v94, 0, (uint64_t)&v135);
  if (v95)
  {
    if (*(_DWORD *)v95 == 2)
      WTF::StringImpl::destroy(v95, v96);
    else
      *(_DWORD *)v95 -= 2;
  }
LABEL_155:
  v97 = *(_QWORD *)(a3 + 144);
  if (!v97)
    return v8;
  v98 = *(_QWORD *)(a1 + 56);
  v99 = *(_DWORD *)(v97 + 4);
  if (v99)
  {
    if (v99 != 1)
    {
LABEL_158:
      v100 = *(_QWORD *)(v98 + 64760);
      if (!v100 || v97 != *(_QWORD *)(v100 + 8))
        v100 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_161;
    }
    v122 = *(unsigned __int8 **)(v97 + 8);
    if ((*(_BYTE *)(v97 + 16) & 4) != 0)
    {
      v123 = *v122;
    }
    else
    {
      v133 = *(unsigned __int16 *)v122;
      if (v133 > 0xFF)
        goto LABEL_158;
      v123 = v133;
    }
    v100 = *(_QWORD *)(v98 + 8 * v123 + 42216);
  }
  else
  {
    v100 = *(_QWORD *)(v98 + 41968);
  }
LABEL_161:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v101 = v135;
  v135 = 0;
  v136 = v8;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v101, v100, 0, (uint64_t)&v135);
  if (v101)
  {
    if (*(_DWORD *)v101 == 2)
      WTF::StringImpl::destroy(v101, v102);
    else
      *(_DWORD *)v101 -= 2;
  }
  return v8;
}

{
  uint64_t v5;
  unint64_t v6;
  size_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  double v16;
  uint64_t v17;
  unint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  uint64_t v39;
  unint64_t v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  uint64_t v43;
  unint64_t v44;
  WTF::StringImpl *v45;
  WTF::StringImpl *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  WTF::StringImpl *v51;
  WTF::StringImpl *v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  WTF::StringImpl *v57;
  WTF::StringImpl *v58;
  uint64_t v59;
  unint64_t v60;
  WTF::StringImpl *v61;
  WTF::StringImpl *v62;
  uint64_t v63;
  WTF::StringImpl *v64;
  WTF::StringImpl *v65;
  uint64_t v66;
  WTF::StringImpl *v67;
  WTF::StringImpl *v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  WTF::StringImpl *v73;
  WTF::StringImpl *v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  WTF::StringImpl *v79;
  WTF::StringImpl *v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  WTF::StringImpl *v85;
  WTF::StringImpl *v86;
  unsigned __int8 *v88;
  unsigned int v89;
  unsigned __int8 *v90;
  unsigned int v91;
  unsigned __int8 *v92;
  unsigned int v93;
  unsigned __int8 *v94;
  unsigned int v95;
  unsigned __int8 *v96;
  unsigned int v97;
  unsigned __int8 *v98;
  unsigned int v99;
  unsigned __int8 *v100;
  unsigned int v101;
  unsigned __int8 *v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  WTF::StringImpl *v112;
  unint64_t v113;
  int v114;
  int v115;
  uint64_t v116;

  v5 = *(_QWORD *)(a1 + 56);
  v6 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v7 = 8 * *(unsigned __int8 *)(v6 + 14);
  v8 = JSC::allocateCell<JSC::JSFinalObject>(v5, v7 + 16);
  v9 = *(_DWORD *)(v6 + 8);
  *(_DWORD *)v8 = v6 >> 4;
  *(_DWORD *)(v8 + 4) = v9;
  *(_QWORD *)(v8 + 8) = 0;
  bzero((void *)(v8 + 16), v7);
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a3 + 16);
  if (!v11 || (v12 = *(_DWORD *)(v11 + 4)) == 0)
  {
    v13 = *(_QWORD *)(v10 + 41968);
    goto LABEL_9;
  }
  if (v12 != 1)
    goto LABEL_6;
  v88 = *(unsigned __int8 **)(v11 + 8);
  if ((*(_BYTE *)(v11 + 16) & 4) != 0)
  {
    v89 = *v88;
LABEL_147:
    v13 = *(_QWORD *)(v10 + 8 * v89 + 42216);
    goto LABEL_9;
  }
  v104 = *(unsigned __int16 *)v88;
  if (v104 <= 0xFF)
  {
    v89 = v104;
    goto LABEL_147;
  }
LABEL_6:
  v13 = *(_QWORD *)(v10 + 64760);
  if (!v13 || v11 != *(_QWORD *)(v13 + 8))
    v13 = JSC::jsStringWithCacheSlowCase();
LABEL_9:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v14 = v112;
  v112 = 0;
  v113 = v8;
  v114 = -1;
  v115 = 0x1000000;
  v116 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v14, v13, 0, (uint64_t)&v112);
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v15);
    else
      *(_DWORD *)v14 -= 2;
  }
  v16 = *(double *)a3;
  if ((*(_QWORD *)a3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v17 = (int)v16, v16 == (double)(int)v17)
    && ((_DWORD)v17 || (*(_QWORD *)&v16 & 0x8000000000000000) == 0))
  {
    v18 = v17 | 0xFFFE000000000000;
  }
  else
  {
    v18 = *(_QWORD *)&v16 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v112;
  v112 = 0;
  v113 = v8;
  v114 = -1;
  v115 = 0x1000000;
  v116 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v112);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = WebCore::JSConverter<WebCore::IDLEnumeration<WebCore::RTCStatsReport::Type>>::convert(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned int *)(a3 + 8));
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v22 = v112;
  v112 = 0;
  v113 = v8;
  v114 = -1;
  v115 = 0x1000000;
  v116 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v22, v21, 0, (uint64_t)&v112);
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v23);
    else
      *(_DWORD *)v22 -= 2;
  }
  v24 = *(_QWORD *)(a3 + 32);
  if (!v24)
    goto LABEL_37;
  v25 = *(_QWORD *)(a1 + 56);
  v26 = *(_DWORD *)(v24 + 4);
  if (v26)
  {
    if (v26 != 1)
    {
LABEL_30:
      v27 = *(_QWORD *)(v25 + 64760);
      if (!v27 || v24 != *(_QWORD *)(v27 + 8))
        v27 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_33;
    }
    v92 = *(unsigned __int8 **)(v24 + 8);
    if ((*(_BYTE *)(v24 + 16) & 4) != 0)
    {
      v93 = *v92;
    }
    else
    {
      v106 = *(unsigned __int16 *)v92;
      if (v106 > 0xFF)
        goto LABEL_30;
      v93 = v106;
    }
    v27 = *(_QWORD *)(v25 + 8 * v93 + 42216);
  }
  else
  {
    v27 = *(_QWORD *)(v25 + 41968);
  }
LABEL_33:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v28 = v112;
  v112 = 0;
  v113 = v8;
  v114 = -1;
  v115 = 0x1000000;
  v116 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v28, v27, 0, (uint64_t)&v112);
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v29);
    else
      *(_DWORD *)v28 -= 2;
  }
LABEL_37:
  v30 = WebCore::convertEnumerationToJS<WebCore::RTCIceCandidateType>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned int *)(a3 + 56));
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v31 = v112;
  v112 = 0;
  v113 = v8;
  v114 = -1;
  v115 = 0x1000000;
  v116 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v31, v30, 0, (uint64_t)&v112);
  if (v31)
  {
    if (*(_DWORD *)v31 == 2)
      WTF::StringImpl::destroy(v31, v32);
    else
      *(_DWORD *)v31 -= 2;
  }
  v33 = *(_QWORD *)(a3 + 88);
  if (!v33)
    goto LABEL_51;
  v34 = *(_QWORD *)(a1 + 56);
  v35 = *(_DWORD *)(v33 + 4);
  if (v35)
  {
    if (v35 != 1)
    {
LABEL_44:
      v36 = *(_QWORD *)(v34 + 64760);
      if (!v36 || v33 != *(_QWORD *)(v36 + 8))
        v36 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_47;
    }
    v94 = *(unsigned __int8 **)(v33 + 8);
    if ((*(_BYTE *)(v33 + 16) & 4) != 0)
    {
      v95 = *v94;
    }
    else
    {
      v107 = *(unsigned __int16 *)v94;
      if (v107 > 0xFF)
        goto LABEL_44;
      v95 = v107;
    }
    v36 = *(_QWORD *)(v34 + 8 * v95 + 42216);
  }
  else
  {
    v36 = *(_QWORD *)(v34 + 41968);
  }
LABEL_47:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v37 = v112;
  v112 = 0;
  v113 = v8;
  v114 = -1;
  v115 = 0x1000000;
  v116 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v37, v36, 0, (uint64_t)&v112);
  if (v37)
  {
    if (*(_DWORD *)v37 == 2)
      WTF::StringImpl::destroy(v37, v38);
    else
      *(_DWORD *)v37 -= 2;
  }
LABEL_51:
  if (*(_BYTE *)(a3 + 44))
  {
    v39 = *(unsigned int *)(a3 + 40);
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    v40 = v39 | 0xFFFE000000000000;
    WTF::AtomStringImpl::addLiteral();
    v41 = v112;
    v112 = 0;
    v113 = v8;
    v114 = -1;
    v115 = 0x1000000;
    v116 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v41, v40, 0, (uint64_t)&v112);
    if (v41)
    {
      if (*(_DWORD *)v41 == 2)
        WTF::StringImpl::destroy(v41, v42);
      else
        *(_DWORD *)v41 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 64))
  {
    v43 = *(unsigned int *)(a3 + 60);
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    v44 = v43 | 0xFFFE000000000000;
    WTF::AtomStringImpl::addLiteral();
    v45 = v112;
    v112 = 0;
    v113 = v8;
    v114 = -1;
    v115 = 0x1000000;
    v116 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v45, v44, 0, (uint64_t)&v112);
    if (v45)
    {
      if (*(_DWORD *)v45 == 2)
        WTF::StringImpl::destroy(v45, v46);
      else
        *(_DWORD *)v45 -= 2;
    }
  }
  v47 = *(_QWORD *)(a3 + 48);
  if (!v47)
    goto LABEL_71;
  v48 = *(_QWORD *)(a1 + 56);
  v49 = *(_DWORD *)(v47 + 4);
  if (v49)
  {
    if (v49 != 1)
    {
LABEL_64:
      v50 = *(_QWORD *)(v48 + 64760);
      if (!v50 || v47 != *(_QWORD *)(v50 + 8))
        v50 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_67;
    }
    v96 = *(unsigned __int8 **)(v47 + 8);
    if ((*(_BYTE *)(v47 + 16) & 4) != 0)
    {
      v97 = *v96;
    }
    else
    {
      v108 = *(unsigned __int16 *)v96;
      if (v108 > 0xFF)
        goto LABEL_64;
      v97 = v108;
    }
    v50 = *(_QWORD *)(v48 + 8 * v97 + 42216);
  }
  else
  {
    v50 = *(_QWORD *)(v48 + 41968);
  }
LABEL_67:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v51 = v112;
  v112 = 0;
  v113 = v8;
  v114 = -1;
  v115 = 0x1000000;
  v116 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v51, v50, 0, (uint64_t)&v112);
  if (v51)
  {
    if (*(_DWORD *)v51 == 2)
      WTF::StringImpl::destroy(v51, v52);
    else
      *(_DWORD *)v51 -= 2;
  }
LABEL_71:
  v53 = *(_QWORD *)(a3 + 96);
  if (!v53)
    goto LABEL_81;
  v54 = *(_QWORD *)(a1 + 56);
  v55 = *(_DWORD *)(v53 + 4);
  if (v55)
  {
    if (v55 != 1)
    {
LABEL_74:
      v56 = *(_QWORD *)(v54 + 64760);
      if (!v56 || v53 != *(_QWORD *)(v56 + 8))
        v56 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_77;
    }
    v98 = *(unsigned __int8 **)(v53 + 8);
    if ((*(_BYTE *)(v53 + 16) & 4) != 0)
    {
      v99 = *v98;
    }
    else
    {
      v109 = *(unsigned __int16 *)v98;
      if (v109 > 0xFF)
        goto LABEL_74;
      v99 = v109;
    }
    v56 = *(_QWORD *)(v54 + 8 * v99 + 42216);
  }
  else
  {
    v56 = *(_QWORD *)(v54 + 41968);
  }
LABEL_77:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v57 = v112;
  v112 = 0;
  v113 = v8;
  v114 = -1;
  v115 = 0x1000000;
  v116 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v57, v56, 0, (uint64_t)&v112);
  if (v57)
  {
    if (*(_DWORD *)v57 == 2)
      WTF::StringImpl::destroy(v57, v58);
    else
      *(_DWORD *)v57 -= 2;
  }
LABEL_81:
  if (*(_BYTE *)(a3 + 108))
  {
    v59 = *(unsigned int *)(a3 + 104);
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    v60 = v59 | 0xFFFE000000000000;
    WTF::AtomStringImpl::addLiteral();
    v61 = v112;
    v112 = 0;
    v113 = v8;
    v114 = -1;
    v115 = 0x1000000;
    v116 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v61, v60, 0, (uint64_t)&v112);
    if (v61)
    {
      if (*(_DWORD *)v61 == 2)
        WTF::StringImpl::destroy(v61, v62);
      else
        *(_DWORD *)v61 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 84))
  {
    v63 = WebCore::convertEnumerationToJS<WebCore::RTCIceServerTransportProtocol>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned int *)(a3 + 80));
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v64 = v112;
    v112 = 0;
    v113 = v8;
    v114 = -1;
    v115 = 0x1000000;
    v116 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v64, v63, 0, (uint64_t)&v112);
    if (v64)
    {
      if (*(_DWORD *)v64 == 2)
        WTF::StringImpl::destroy(v64, v65);
      else
        *(_DWORD *)v64 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 124))
  {
    v66 = WebCore::convertEnumerationToJS<WebCore::RTCIceTcpCandidateType>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned int *)(a3 + 120));
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v67 = v112;
    v112 = 0;
    v113 = v8;
    v114 = -1;
    v115 = 0x1000000;
    v116 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v67, v66, 0, (uint64_t)&v112);
    if (v67)
    {
      if (*(_DWORD *)v67 == 2)
        WTF::StringImpl::destroy(v67, v68);
      else
        *(_DWORD *)v67 -= 2;
    }
  }
  v69 = *(_QWORD *)(a1 + 56);
  v70 = *(_QWORD *)(a3 + 24);
  if (!v70 || (v71 = *(_DWORD *)(v70 + 4)) == 0)
  {
    v72 = *(_QWORD *)(v69 + 41968);
    goto LABEL_102;
  }
  if (v71 == 1)
  {
    v90 = *(unsigned __int8 **)(v70 + 8);
    if ((*(_BYTE *)(v70 + 16) & 4) != 0)
    {
      v91 = *v90;
    }
    else
    {
      v105 = *(unsigned __int16 *)v90;
      if (v105 > 0xFF)
        goto LABEL_99;
      v91 = v105;
    }
    v72 = *(_QWORD *)(v69 + 8 * v91 + 42216);
    goto LABEL_102;
  }
LABEL_99:
  v72 = *(_QWORD *)(v69 + 64760);
  if (!v72 || v70 != *(_QWORD *)(v72 + 8))
    v72 = JSC::jsStringWithCacheSlowCase();
LABEL_102:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v73 = v112;
  v112 = 0;
  v113 = v8;
  v114 = -1;
  v115 = 0x1000000;
  v116 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v73, v72, 0, (uint64_t)&v112);
  if (v73)
  {
    if (*(_DWORD *)v73 == 2)
      WTF::StringImpl::destroy(v73, v74);
    else
      *(_DWORD *)v73 -= 2;
  }
  v75 = *(_QWORD *)(a3 + 72);
  if (!v75)
    goto LABEL_116;
  v76 = *(_QWORD *)(a1 + 56);
  v77 = *(_DWORD *)(v75 + 4);
  if (v77)
  {
    if (v77 != 1)
    {
LABEL_109:
      v78 = *(_QWORD *)(v76 + 64760);
      if (!v78 || v75 != *(_QWORD *)(v78 + 8))
        v78 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_112;
    }
    v100 = *(unsigned __int8 **)(v75 + 8);
    if ((*(_BYTE *)(v75 + 16) & 4) != 0)
    {
      v101 = *v100;
    }
    else
    {
      v110 = *(unsigned __int16 *)v100;
      if (v110 > 0xFF)
        goto LABEL_109;
      v101 = v110;
    }
    v78 = *(_QWORD *)(v76 + 8 * v101 + 42216);
  }
  else
  {
    v78 = *(_QWORD *)(v76 + 41968);
  }
LABEL_112:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v79 = v112;
  v112 = 0;
  v113 = v8;
  v114 = -1;
  v115 = 0x1000000;
  v116 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v79, v78, 0, (uint64_t)&v112);
  if (v79)
  {
    if (*(_DWORD *)v79 == 2)
      WTF::StringImpl::destroy(v79, v80);
    else
      *(_DWORD *)v79 -= 2;
  }
LABEL_116:
  v81 = *(_QWORD *)(a3 + 112);
  if (!v81)
    return v8;
  v82 = *(_QWORD *)(a1 + 56);
  v83 = *(_DWORD *)(v81 + 4);
  if (v83)
  {
    if (v83 != 1)
    {
LABEL_119:
      v84 = *(_QWORD *)(v82 + 64760);
      if (!v84 || v81 != *(_QWORD *)(v84 + 8))
        v84 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_122;
    }
    v102 = *(unsigned __int8 **)(v81 + 8);
    if ((*(_BYTE *)(v81 + 16) & 4) != 0)
    {
      v103 = *v102;
    }
    else
    {
      v111 = *(unsigned __int16 *)v102;
      if (v111 > 0xFF)
        goto LABEL_119;
      v103 = v111;
    }
    v84 = *(_QWORD *)(v82 + 8 * v103 + 42216);
  }
  else
  {
    v84 = *(_QWORD *)(v82 + 41968);
  }
LABEL_122:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v85 = v112;
  v112 = 0;
  v113 = v8;
  v114 = -1;
  v115 = 0x1000000;
  v116 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v85, v84, 0, (uint64_t)&v112);
  if (v85)
  {
    if (*(_DWORD *)v85 == 2)
      WTF::StringImpl::destroy(v85, v86);
    else
      *(_DWORD *)v85 -= 2;
  }
  return v8;
}

{
  uint64_t v5;
  unint64_t v6;
  size_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  double v16;
  uint64_t v17;
  unint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  double v24;
  uint64_t v25;
  unint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  double v29;
  uint64_t v30;
  unint64_t v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  unint64_t v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  unint64_t v42;
  unint64_t v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  unint64_t v46;
  unint64_t v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  double v50;
  uint64_t v51;
  unint64_t v52;
  WTF::StringImpl *v53;
  WTF::StringImpl *v54;
  double v55;
  uint64_t v56;
  unint64_t v57;
  WTF::StringImpl *v58;
  WTF::StringImpl *v59;
  double v60;
  uint64_t v61;
  unint64_t v62;
  WTF::StringImpl *v63;
  WTF::StringImpl *v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  WTF::StringImpl *v69;
  WTF::StringImpl *v70;
  uint64_t v71;
  WTF::StringImpl *v72;
  WTF::StringImpl *v73;
  uint64_t v74;
  unint64_t v75;
  WTF::StringImpl *v76;
  WTF::StringImpl *v77;
  unint64_t v78;
  unint64_t v79;
  WTF::StringImpl *v80;
  WTF::StringImpl *v81;
  unint64_t v82;
  unint64_t v83;
  WTF::StringImpl *v84;
  WTF::StringImpl *v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  WTF::StringImpl *v90;
  WTF::StringImpl *v91;
  unint64_t v92;
  unint64_t v93;
  WTF::StringImpl *v94;
  unint64_t v95;
  unint64_t v96;
  WTF::StringImpl *v97;
  unint64_t v98;
  unint64_t v99;
  WTF::StringImpl *v100;
  unint64_t v101;
  unint64_t v102;
  WTF::StringImpl *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  int v108;
  int v109;
  uint64_t v110;
  WTF::StringImpl *v111;
  WTF::StringImpl *v112;
  double v113;
  uint64_t v114;
  unint64_t v115;
  WTF::StringImpl *v116;
  WTF::StringImpl *v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  WTF::StringImpl *v122;
  WTF::StringImpl *v123;
  unsigned __int8 *v125;
  unsigned int v126;
  unsigned __int8 *v127;
  unsigned int v128;
  unsigned __int8 *v129;
  unsigned int v130;
  unsigned __int8 *v131;
  unsigned int v132;
  unsigned __int8 *v133;
  unsigned int v134;
  double v135;
  double v136;
  double v137;
  double v138;
  double v139;
  double v140;
  double v141;
  double v142;
  double v143;
  double v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  WTF::StringImpl *v150;
  unint64_t v151;
  int v152;
  int v153;
  uint64_t v154;

  v5 = *(_QWORD *)(a1 + 56);
  v6 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v7 = 8 * *(unsigned __int8 *)(v6 + 14);
  v8 = JSC::allocateCell<JSC::JSFinalObject>(v5, v7 + 16);
  v9 = *(_DWORD *)(v6 + 8);
  *(_DWORD *)v8 = v6 >> 4;
  *(_DWORD *)(v8 + 4) = v9;
  *(_QWORD *)(v8 + 8) = 0;
  bzero((void *)(v8 + 16), v7);
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a3 + 16);
  if (!v11 || (v12 = *(_DWORD *)(v11 + 4)) == 0)
  {
    v13 = *(_QWORD *)(v10 + 41968);
    goto LABEL_9;
  }
  if (v12 != 1)
    goto LABEL_6;
  v125 = *(unsigned __int8 **)(v11 + 8);
  if ((*(_BYTE *)(v11 + 16) & 4) != 0)
  {
    v126 = *v125;
LABEL_266:
    v13 = *(_QWORD *)(v10 + 8 * v126 + 42216);
    goto LABEL_9;
  }
  v145 = *(unsigned __int16 *)v125;
  if (v145 <= 0xFF)
  {
    v126 = v145;
    goto LABEL_266;
  }
LABEL_6:
  v13 = *(_QWORD *)(v10 + 64760);
  if (!v13 || v11 != *(_QWORD *)(v13 + 8))
    v13 = JSC::jsStringWithCacheSlowCase();
LABEL_9:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v14 = v150;
  v150 = 0;
  v151 = v8;
  v152 = -1;
  v153 = 0x1000000;
  v154 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v14, v13, 0, (uint64_t)&v150);
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v15);
    else
      *(_DWORD *)v14 -= 2;
  }
  v16 = *(double *)a3;
  if ((*(_QWORD *)a3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v17 = (int)v16, v16 == (double)(int)v17)
    && ((_DWORD)v17 || (*(_QWORD *)&v16 & 0x8000000000000000) == 0))
  {
    v18 = v17 | 0xFFFE000000000000;
  }
  else
  {
    v18 = *(_QWORD *)&v16 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v150;
  v150 = 0;
  v151 = v8;
  v152 = -1;
  v153 = 0x1000000;
  v154 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v150);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = WebCore::JSConverter<WebCore::IDLEnumeration<WebCore::RTCStatsReport::Type>>::convert(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned int *)(a3 + 8));
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v22 = v150;
  v150 = 0;
  v151 = v8;
  v152 = -1;
  v153 = 0x1000000;
  v154 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v22, v21, 0, (uint64_t)&v150);
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v23);
    else
      *(_DWORD *)v22 -= 2;
  }
  if (*(_BYTE *)(a3 + 208))
  {
    v24 = *(double *)(a3 + 200);
    if ((*(_QWORD *)&v24 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v25 = (int)v24, v24 == (double)(int)v25)
      && ((_DWORD)v25 || (*(_QWORD *)&v24 & 0x8000000000000000) == 0))
    {
      v26 = v25 | 0xFFFE000000000000;
    }
    else
    {
      v26 = *(_QWORD *)&v24 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v27 = v150;
    v150 = 0;
    v151 = v8;
    v152 = -1;
    v153 = 0x1000000;
    v154 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v27, v26, 0, (uint64_t)&v150);
    if (v27)
    {
      if (*(_DWORD *)v27 == 2)
        WTF::StringImpl::destroy(v27, v28);
      else
        *(_DWORD *)v27 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 192))
  {
    v29 = *(double *)(a3 + 184);
    if ((*(_QWORD *)&v29 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v30 = (int)v29, v29 == (double)(int)v30)
      && ((_DWORD)v30 || (*(_QWORD *)&v29 & 0x8000000000000000) == 0))
    {
      v31 = v30 | 0xFFFE000000000000;
    }
    else
    {
      v31 = *(_QWORD *)&v29 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v32 = v150;
    v150 = 0;
    v151 = v8;
    v152 = -1;
    v153 = 0x1000000;
    v154 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v32, v31, 0, (uint64_t)&v150);
    if (v32)
    {
      if (*(_DWORD *)v32 == 2)
        WTF::StringImpl::destroy(v32, v33);
      else
        *(_DWORD *)v32 -= 2;
    }
  }
  if (!*(_BYTE *)(a3 + 312))
    goto LABEL_57;
  v34 = *(_QWORD *)(a3 + 304);
  if (HIDWORD(v34))
  {
    v135 = (double)v34;
  }
  else
  {
    if ((v34 & 0x80000000) == 0)
    {
      v35 = v34 | 0xFFFE000000000000;
      goto LABEL_53;
    }
    v135 = (double)v34;
  }
  v35 = *(_QWORD *)&v135 + 0x2000000000000;
LABEL_53:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v36 = v150;
  v150 = 0;
  v151 = v8;
  v152 = -1;
  v153 = 0x1000000;
  v154 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v36, v35, 0, (uint64_t)&v150);
  if (v36)
  {
    if (*(_DWORD *)v36 == 2)
      WTF::StringImpl::destroy(v36, v37);
    else
      *(_DWORD *)v36 -= 2;
  }
LABEL_57:
  if (!*(_BYTE *)(a3 + 112))
    goto LABEL_65;
  v38 = *(_QWORD *)(a3 + 104);
  if (HIDWORD(v38))
  {
    v136 = (double)v38;
  }
  else
  {
    if ((v38 & 0x80000000) == 0)
    {
      v39 = v38 | 0xFFFE000000000000;
      goto LABEL_61;
    }
    v136 = (double)v38;
  }
  v39 = *(_QWORD *)&v136 + 0x2000000000000;
LABEL_61:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v40 = v150;
  v150 = 0;
  v151 = v8;
  v152 = -1;
  v153 = 0x1000000;
  v154 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v40, v39, 0, (uint64_t)&v150);
  if (v40)
  {
    if (*(_DWORD *)v40 == 2)
      WTF::StringImpl::destroy(v40, v41);
    else
      *(_DWORD *)v40 -= 2;
  }
LABEL_65:
  if (!*(_BYTE *)(a3 + 96))
    goto LABEL_73;
  v42 = *(_QWORD *)(a3 + 88);
  if (HIDWORD(v42))
  {
    v137 = (double)v42;
  }
  else
  {
    if ((v42 & 0x80000000) == 0)
    {
      v43 = v42 | 0xFFFE000000000000;
      goto LABEL_69;
    }
    v137 = (double)v42;
  }
  v43 = *(_QWORD *)&v137 + 0x2000000000000;
LABEL_69:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v44 = v150;
  v150 = 0;
  v151 = v8;
  v152 = -1;
  v153 = 0x1000000;
  v154 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v44, v43, 0, (uint64_t)&v150);
  if (v44)
  {
    if (*(_DWORD *)v44 == 2)
      WTF::StringImpl::destroy(v44, v45);
    else
      *(_DWORD *)v44 -= 2;
  }
LABEL_73:
  if (!*(_BYTE *)(a3 + 288))
    goto LABEL_81;
  v46 = *(_QWORD *)(a3 + 280);
  if (HIDWORD(v46))
  {
    v138 = (double)v46;
  }
  else
  {
    if ((v46 & 0x80000000) == 0)
    {
      v47 = v46 | 0xFFFE000000000000;
      goto LABEL_77;
    }
    v138 = (double)v46;
  }
  v47 = *(_QWORD *)&v138 + 0x2000000000000;
LABEL_77:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v48 = v150;
  v150 = 0;
  v151 = v8;
  v152 = -1;
  v153 = 0x1000000;
  v154 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v48, v47, 0, (uint64_t)&v150);
  if (v48)
  {
    if (*(_DWORD *)v48 == 2)
      WTF::StringImpl::destroy(v48, v49);
    else
      *(_DWORD *)v48 -= 2;
  }
LABEL_81:
  if (*(_BYTE *)(a3 + 176))
  {
    v50 = *(double *)(a3 + 168);
    if ((*(_QWORD *)&v50 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v51 = (int)v50, v50 == (double)(int)v51)
      && ((_DWORD)v51 || (*(_QWORD *)&v50 & 0x8000000000000000) == 0))
    {
      v52 = v51 | 0xFFFE000000000000;
    }
    else
    {
      v52 = *(_QWORD *)&v50 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v53 = v150;
    v150 = 0;
    v151 = v8;
    v152 = -1;
    v153 = 0x1000000;
    v154 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v53, v52, 0, (uint64_t)&v150);
    if (v53)
    {
      if (*(_DWORD *)v53 == 2)
        WTF::StringImpl::destroy(v53, v54);
      else
        *(_DWORD *)v53 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 144))
  {
    v55 = *(double *)(a3 + 136);
    if ((*(_QWORD *)&v55 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v56 = (int)v55, v55 == (double)(int)v56)
      && ((_DWORD)v56 || (*(_QWORD *)&v55 & 0x8000000000000000) == 0))
    {
      v57 = v56 | 0xFFFE000000000000;
    }
    else
    {
      v57 = *(_QWORD *)&v55 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v58 = v150;
    v150 = 0;
    v151 = v8;
    v152 = -1;
    v153 = 0x1000000;
    v154 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v58, v57, 0, (uint64_t)&v150);
    if (v58)
    {
      if (*(_DWORD *)v58 == 2)
        WTF::StringImpl::destroy(v58, v59);
      else
        *(_DWORD *)v58 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 128))
  {
    v60 = *(double *)(a3 + 120);
    if ((*(_QWORD *)&v60 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v61 = (int)v60, v60 == (double)(int)v61)
      && ((_DWORD)v61 || (*(_QWORD *)&v60 & 0x8000000000000000) == 0))
    {
      v62 = v61 | 0xFFFE000000000000;
    }
    else
    {
      v62 = *(_QWORD *)&v60 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v63 = v150;
    v150 = 0;
    v151 = v8;
    v152 = -1;
    v153 = 0x1000000;
    v154 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v63, v62, 0, (uint64_t)&v150);
    if (v63)
    {
      if (*(_DWORD *)v63 == 2)
        WTF::StringImpl::destroy(v63, v64);
      else
        *(_DWORD *)v63 -= 2;
    }
  }
  v65 = *(_QWORD *)(a1 + 56);
  v66 = *(_QWORD *)(a3 + 32);
  if (!v66 || (v67 = *(_DWORD *)(v66 + 4)) == 0)
  {
    v68 = *(_QWORD *)(v65 + 41968);
    goto LABEL_120;
  }
  if (v67 == 1)
  {
    v127 = *(unsigned __int8 **)(v66 + 8);
    if ((*(_BYTE *)(v66 + 16) & 4) != 0)
    {
      v128 = *v127;
    }
    else
    {
      v146 = *(unsigned __int16 *)v127;
      if (v146 > 0xFF)
        goto LABEL_117;
      v128 = v146;
    }
    v68 = *(_QWORD *)(v65 + 8 * v128 + 42216);
    goto LABEL_120;
  }
LABEL_117:
  v68 = *(_QWORD *)(v65 + 64760);
  if (!v68 || v66 != *(_QWORD *)(v68 + 8))
    v68 = JSC::jsStringWithCacheSlowCase();
LABEL_120:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v69 = v150;
  v150 = 0;
  v151 = v8;
  v152 = -1;
  v153 = 0x1000000;
  v154 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v69, v68, 0, (uint64_t)&v150);
  if (v69)
  {
    if (*(_DWORD *)v69 == 2)
      WTF::StringImpl::destroy(v69, v70);
    else
      *(_DWORD *)v69 -= 2;
  }
  if (*(_BYTE *)(a3 + 53))
  {
    if (*(_BYTE *)(a3 + 52))
      v71 = 7;
    else
      v71 = 6;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v72 = v150;
    v150 = 0;
    v151 = v8;
    v152 = -1;
    v153 = 0x1000000;
    v154 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v72, v71, 0, (uint64_t)&v150);
    if (v72)
    {
      if (*(_DWORD *)v72 == 2)
        WTF::StringImpl::destroy(v72, v73);
      else
        *(_DWORD *)v72 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 300))
  {
    v74 = *(unsigned int *)(a3 + 296);
    if ((v74 & 0x80000000) != 0)
      v75 = COERCE__INT64((double)v74) + 0x2000000000000;
    else
      v75 = v74 | 0xFFFE000000000000;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v76 = v150;
    v150 = 0;
    v151 = v8;
    v152 = -1;
    v153 = 0x1000000;
    v154 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v76, v75, 0, (uint64_t)&v150);
    if (v76)
    {
      if (*(_DWORD *)v76 == 2)
        WTF::StringImpl::destroy(v76, v77);
      else
        *(_DWORD *)v76 -= 2;
    }
  }
  if (!*(_BYTE *)(a3 + 80))
    goto LABEL_147;
  v78 = *(_QWORD *)(a3 + 72);
  if (HIDWORD(v78))
  {
    v139 = (double)v78;
  }
  else
  {
    if ((v78 & 0x80000000) == 0)
    {
      v79 = v78 | 0xFFFE000000000000;
      goto LABEL_143;
    }
    v139 = (double)v78;
  }
  v79 = *(_QWORD *)&v139 + 0x2000000000000;
LABEL_143:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v80 = v150;
  v150 = 0;
  v151 = v8;
  v152 = -1;
  v153 = 0x1000000;
  v154 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v80, v79, 0, (uint64_t)&v150);
  if (v80)
  {
    if (*(_DWORD *)v80 == 2)
      WTF::StringImpl::destroy(v80, v81);
    else
      *(_DWORD *)v80 -= 2;
  }
LABEL_147:
  if (!*(_BYTE *)(a3 + 64))
    goto LABEL_155;
  v82 = *(_QWORD *)(a3 + 56);
  if (HIDWORD(v82))
  {
    v140 = (double)v82;
  }
  else
  {
    if ((v82 & 0x80000000) == 0)
    {
      v83 = v82 | 0xFFFE000000000000;
      goto LABEL_151;
    }
    v140 = (double)v82;
  }
  v83 = *(_QWORD *)&v140 + 0x2000000000000;
LABEL_151:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v84 = v150;
  v150 = 0;
  v151 = v8;
  v152 = -1;
  v153 = 0x1000000;
  v154 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v84, v83, 0, (uint64_t)&v150);
  if (v84)
  {
    if (*(_DWORD *)v84 == 2)
      WTF::StringImpl::destroy(v84, v85);
    else
      *(_DWORD *)v84 -= 2;
  }
LABEL_155:
  v86 = *(_QWORD *)(a1 + 56);
  v87 = *(_QWORD *)(a3 + 40);
  if (!v87 || (v88 = *(_DWORD *)(v87 + 4)) == 0)
  {
    v89 = *(_QWORD *)(v86 + 41968);
    goto LABEL_161;
  }
  if (v88 == 1)
  {
    v129 = *(unsigned __int8 **)(v87 + 8);
    if ((*(_BYTE *)(v87 + 16) & 4) != 0)
    {
      v130 = *v129;
    }
    else
    {
      v147 = *(unsigned __int16 *)v129;
      if (v147 > 0xFF)
        goto LABEL_158;
      v130 = v147;
    }
    v89 = *(_QWORD *)(v86 + 8 * v130 + 42216);
    goto LABEL_161;
  }
LABEL_158:
  v89 = *(_QWORD *)(v86 + 64760);
  if (!v89 || v87 != *(_QWORD *)(v89 + 8))
    v89 = JSC::jsStringWithCacheSlowCase();
LABEL_161:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v90 = v150;
  v150 = 0;
  v151 = v8;
  v152 = -1;
  v153 = 0x1000000;
  v154 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v90, v89, 0, (uint64_t)&v150);
  if (v90)
  {
    if (*(_DWORD *)v90 == 2)
      WTF::StringImpl::destroy(v90, v91);
    else
      *(_DWORD *)v90 -= 2;
  }
  if (!*(_BYTE *)(a3 + 224))
    goto LABEL_173;
  v92 = *(_QWORD *)(a3 + 216);
  if (HIDWORD(v92))
  {
    v141 = (double)v92;
  }
  else
  {
    if ((v92 & 0x80000000) == 0)
    {
      v93 = v92 | 0xFFFE000000000000;
      goto LABEL_169;
    }
    v141 = (double)v92;
  }
  v93 = *(_QWORD *)&v141 + 0x2000000000000;
LABEL_169:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v94 = v150;
  v150 = 0;
  v151 = v8;
  v152 = -1;
  v153 = 0x1000000;
  v154 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v94, v93, 0, (uint64_t)&v150);
  if (v94)
  {
    if (*(_DWORD *)v94 == 2)
      WTF::StringImpl::destroy(v94, v91);
    else
      *(_DWORD *)v94 -= 2;
  }
LABEL_173:
  if (!*(_BYTE *)(a3 + 240))
    goto LABEL_181;
  v95 = *(_QWORD *)(a3 + 232);
  if (HIDWORD(v95))
  {
    v142 = (double)v95;
  }
  else
  {
    if ((v95 & 0x80000000) == 0)
    {
      v96 = v95 | 0xFFFE000000000000;
      goto LABEL_177;
    }
    v142 = (double)v95;
  }
  v96 = *(_QWORD *)&v142 + 0x2000000000000;
LABEL_177:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v97 = v150;
  v150 = 0;
  v151 = v8;
  v152 = -1;
  v153 = 0x1000000;
  v154 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v97, v96, 0, (uint64_t)&v150);
  if (v97)
  {
    if (*(_DWORD *)v97 == 2)
      WTF::StringImpl::destroy(v97, v91);
    else
      *(_DWORD *)v97 -= 2;
  }
LABEL_181:
  if (!*(_BYTE *)(a3 + 256))
    goto LABEL_189;
  v98 = *(_QWORD *)(a3 + 248);
  if (HIDWORD(v98))
  {
    v143 = (double)v98;
  }
  else
  {
    if ((v98 & 0x80000000) == 0)
    {
      v99 = v98 | 0xFFFE000000000000;
      goto LABEL_185;
    }
    v143 = (double)v98;
  }
  v99 = *(_QWORD *)&v143 + 0x2000000000000;
LABEL_185:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v100 = v150;
  v150 = 0;
  v151 = v8;
  v152 = -1;
  v153 = 0x1000000;
  v154 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v100, v99, 0, (uint64_t)&v150);
  if (v100)
  {
    if (*(_DWORD *)v100 == 2)
      WTF::StringImpl::destroy(v100, v91);
    else
      *(_DWORD *)v100 -= 2;
  }
LABEL_189:
  if (!*(_BYTE *)(a3 + 272))
    goto LABEL_197;
  v101 = *(_QWORD *)(a3 + 264);
  if (HIDWORD(v101))
  {
    v144 = (double)v101;
  }
  else
  {
    if ((v101 & 0x80000000) == 0)
    {
      v102 = v101 | 0xFFFE000000000000;
      goto LABEL_193;
    }
    v144 = (double)v101;
  }
  v102 = *(_QWORD *)&v144 + 0x2000000000000;
LABEL_193:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v103 = v150;
  v150 = 0;
  v151 = v8;
  v152 = -1;
  v153 = 0x1000000;
  v154 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v103, v102, 0, (uint64_t)&v150);
  if (v103)
  {
    if (*(_DWORD *)v103 == 2)
      WTF::StringImpl::destroy(v103, v91);
    else
      *(_DWORD *)v103 -= 2;
  }
LABEL_197:
  v104 = *(int *)(a3 + 48);
  v105 = *(_QWORD *)(a1 + 56);
  v106 = (uint64_t *)(v105 + 41968);
  if ((byte_1EE3366EE & 1) == 0)
  {
    dword_1ECE79C60 += 2;
    byte_1EE3366EE = 1;
    dword_1ECE79C80 += 2;
    qword_1EE3368B0 = (uint64_t)&dword_1ECE79C60;
    unk_1EE3368B8 = &dword_1ECE79C80;
    dword_1ECE79CA0 += 2;
    dword_1ECE79CC0 += 2;
    qword_1EE3368C0 = (uint64_t)&dword_1ECE79CA0;
    unk_1EE3368C8 = &dword_1ECE79CC0;
    dword_1ECE79CE0 += 2;
    qword_1EE3368D0 = (uint64_t)&dword_1ECE79CE0;
  }
  v107 = *(_QWORD *)&_MergedGlobals_514[8 * v104 + 456];
  if (!v107)
  {
    v110 = *v106;
    goto LABEL_207;
  }
  v108 = *(_DWORD *)v107;
  v109 = *(_DWORD *)(v107 + 4);
  *(_DWORD *)v107 += 2;
  if (v109)
  {
    if (v109 != 1)
    {
LABEL_202:
      v110 = *(_QWORD *)(v105 + 64760);
      if (!v110 || v107 != *(_QWORD *)(v110 + 8))
      {
        v110 = JSC::jsStringWithCacheSlowCase();
        v108 = *(_DWORD *)v107 - 2;
      }
      goto LABEL_205;
    }
    v131 = *(unsigned __int8 **)(v107 + 8);
    if ((*(_BYTE *)(v107 + 16) & 4) != 0)
    {
      v132 = *v131;
    }
    else
    {
      v148 = *(unsigned __int16 *)v131;
      if (v148 > 0xFF)
        goto LABEL_202;
      v132 = v148;
    }
    v110 = *(_QWORD *)(v105 + 8 * v132 + 42216);
  }
  else
  {
    v110 = *v106;
  }
LABEL_205:
  if (v108)
    *(_DWORD *)v107 = v108;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v107, v91);
LABEL_207:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v111 = v150;
  v150 = 0;
  v151 = v8;
  v152 = -1;
  v153 = 0x1000000;
  v154 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v111, v110, 0, (uint64_t)&v150);
  if (v111)
  {
    if (*(_DWORD *)v111 == 2)
      WTF::StringImpl::destroy(v111, v112);
    else
      *(_DWORD *)v111 -= 2;
  }
  if (*(_BYTE *)(a3 + 160))
  {
    v113 = *(double *)(a3 + 152);
    if ((*(_QWORD *)&v113 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v114 = (int)v113, v113 == (double)(int)v114)
      && ((_DWORD)v114 || (*(_QWORD *)&v113 & 0x8000000000000000) == 0))
    {
      v115 = v114 | 0xFFFE000000000000;
    }
    else
    {
      v115 = *(_QWORD *)&v113 + 0x2000000000000;
    }
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v116 = v150;
    v150 = 0;
    v151 = v8;
    v152 = -1;
    v153 = 0x1000000;
    v154 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v116, v115, 0, (uint64_t)&v150);
    if (v116)
    {
      if (*(_DWORD *)v116 == 2)
        WTF::StringImpl::destroy(v116, v117);
      else
        *(_DWORD *)v116 -= 2;
    }
  }
  v118 = *(_QWORD *)(a1 + 56);
  v119 = *(_QWORD *)(a3 + 24);
  if (!v119 || (v120 = *(_DWORD *)(v119 + 4)) == 0)
  {
    v121 = *(_QWORD *)(v118 + 41968);
    goto LABEL_228;
  }
  if (v120 == 1)
  {
    v133 = *(unsigned __int8 **)(v119 + 8);
    if ((*(_BYTE *)(v119 + 16) & 4) != 0)
    {
      v134 = *v133;
    }
    else
    {
      v149 = *(unsigned __int16 *)v133;
      if (v149 > 0xFF)
        goto LABEL_225;
      v134 = v149;
    }
    v121 = *(_QWORD *)(v118 + 8 * v134 + 42216);
    goto LABEL_228;
  }
LABEL_225:
  v121 = *(_QWORD *)(v118 + 64760);
  if (!v121 || v119 != *(_QWORD *)(v121 + 8))
    v121 = JSC::jsStringWithCacheSlowCase();
LABEL_228:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v122 = v150;
  v150 = 0;
  v151 = v8;
  v152 = -1;
  v153 = 0x1000000;
  v154 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v122, v121, 0, (uint64_t)&v150);
  if (v122)
  {
    if (*(_DWORD *)v122 == 2)
      WTF::StringImpl::destroy(v122, v123);
    else
      *(_DWORD *)v122 -= 2;
  }
  return v8;
}

{
  uint64_t v5;
  unint64_t v6;
  size_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  double v16;
  uint64_t v17;
  unint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  WTF::StringImpl *v46;
  WTF::StringImpl *v47;
  unsigned __int8 *v49;
  unsigned int v50;
  unsigned __int8 *v51;
  unsigned int v52;
  unsigned __int8 *v53;
  unsigned int v54;
  unsigned __int8 *v55;
  unsigned int v56;
  unsigned __int8 *v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  WTF::StringImpl *v64;
  unint64_t v65;
  int v66;
  int v67;
  uint64_t v68;

  v5 = *(_QWORD *)(a1 + 56);
  v6 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v7 = 8 * *(unsigned __int8 *)(v6 + 14);
  v8 = JSC::allocateCell<JSC::JSFinalObject>(v5, v7 + 16);
  v9 = *(_DWORD *)(v6 + 8);
  *(_DWORD *)v8 = v6 >> 4;
  *(_DWORD *)(v8 + 4) = v9;
  *(_QWORD *)(v8 + 8) = 0;
  bzero((void *)(v8 + 16), v7);
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a3 + 16);
  if (!v11 || (v12 = *(_DWORD *)(v11 + 4)) == 0)
  {
    v13 = *(_QWORD *)(v10 + 41968);
    goto LABEL_9;
  }
  if (v12 != 1)
    goto LABEL_6;
  v49 = *(unsigned __int8 **)(v11 + 8);
  if ((*(_BYTE *)(v11 + 16) & 4) != 0)
  {
    v50 = *v49;
LABEL_81:
    v13 = *(_QWORD *)(v10 + 8 * v50 + 42216);
    goto LABEL_9;
  }
  v59 = *(unsigned __int16 *)v49;
  if (v59 <= 0xFF)
  {
    v50 = v59;
    goto LABEL_81;
  }
LABEL_6:
  v13 = *(_QWORD *)(v10 + 64760);
  if (!v13 || v11 != *(_QWORD *)(v13 + 8))
    v13 = JSC::jsStringWithCacheSlowCase();
LABEL_9:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v14 = v64;
  v64 = 0;
  v65 = v8;
  v66 = -1;
  v67 = 0x1000000;
  v68 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v14, v13, 0, (uint64_t)&v64);
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v15);
    else
      *(_DWORD *)v14 -= 2;
  }
  v16 = *(double *)a3;
  if ((*(_QWORD *)a3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v17 = (int)v16, v16 == (double)(int)v17)
    && ((_DWORD)v17 || (*(_QWORD *)&v16 & 0x8000000000000000) == 0))
  {
    v18 = v17 | 0xFFFE000000000000;
  }
  else
  {
    v18 = *(_QWORD *)&v16 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v64;
  v64 = 0;
  v65 = v8;
  v66 = -1;
  v67 = 0x1000000;
  v68 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v64);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = WebCore::JSConverter<WebCore::IDLEnumeration<WebCore::RTCStatsReport::Type>>::convert(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned int *)(a3 + 8));
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v22 = v64;
  v64 = 0;
  v65 = v8;
  v66 = -1;
  v67 = 0x1000000;
  v68 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v22, v21, 0, (uint64_t)&v64);
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v23);
    else
      *(_DWORD *)v22 -= 2;
  }
  v24 = *(_QWORD *)(a1 + 56);
  v25 = *(_QWORD *)(a3 + 40);
  if (!v25 || (v26 = *(_DWORD *)(v25 + 4)) == 0)
  {
    v27 = *(_QWORD *)(v24 + 41968);
    goto LABEL_33;
  }
  if (v26 == 1)
  {
    v51 = *(unsigned __int8 **)(v25 + 8);
    if ((*(_BYTE *)(v25 + 16) & 4) != 0)
    {
      v52 = *v51;
    }
    else
    {
      v60 = *(unsigned __int16 *)v51;
      if (v60 > 0xFF)
        goto LABEL_30;
      v52 = v60;
    }
    v27 = *(_QWORD *)(v24 + 8 * v52 + 42216);
    goto LABEL_33;
  }
LABEL_30:
  v27 = *(_QWORD *)(v24 + 64760);
  if (!v27 || v25 != *(_QWORD *)(v27 + 8))
    v27 = JSC::jsStringWithCacheSlowCase();
LABEL_33:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v28 = v64;
  v64 = 0;
  v65 = v8;
  v66 = -1;
  v67 = 0x1000000;
  v68 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v28, v27, 0, (uint64_t)&v64);
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v29);
    else
      *(_DWORD *)v28 -= 2;
  }
  v30 = *(_QWORD *)(a1 + 56);
  v31 = *(_QWORD *)(a3 + 24);
  if (!v31 || (v32 = *(_DWORD *)(v31 + 4)) == 0)
  {
    v33 = *(_QWORD *)(v30 + 41968);
    goto LABEL_43;
  }
  if (v32 == 1)
  {
    v53 = *(unsigned __int8 **)(v31 + 8);
    if ((*(_BYTE *)(v31 + 16) & 4) != 0)
    {
      v54 = *v53;
    }
    else
    {
      v61 = *(unsigned __int16 *)v53;
      if (v61 > 0xFF)
        goto LABEL_40;
      v54 = v61;
    }
    v33 = *(_QWORD *)(v30 + 8 * v54 + 42216);
    goto LABEL_43;
  }
LABEL_40:
  v33 = *(_QWORD *)(v30 + 64760);
  if (!v33 || v31 != *(_QWORD *)(v33 + 8))
    v33 = JSC::jsStringWithCacheSlowCase();
LABEL_43:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v34 = v64;
  v64 = 0;
  v65 = v8;
  v66 = -1;
  v67 = 0x1000000;
  v68 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v34, v33, 0, (uint64_t)&v64);
  if (v34)
  {
    if (*(_DWORD *)v34 == 2)
      WTF::StringImpl::destroy(v34, v35);
    else
      *(_DWORD *)v34 -= 2;
  }
  v36 = *(_QWORD *)(a1 + 56);
  v37 = *(_QWORD *)(a3 + 32);
  if (!v37 || (v38 = *(_DWORD *)(v37 + 4)) == 0)
  {
    v39 = *(_QWORD *)(v36 + 41968);
    goto LABEL_53;
  }
  if (v38 == 1)
  {
    v55 = *(unsigned __int8 **)(v37 + 8);
    if ((*(_BYTE *)(v37 + 16) & 4) != 0)
    {
      v56 = *v55;
    }
    else
    {
      v62 = *(unsigned __int16 *)v55;
      if (v62 > 0xFF)
        goto LABEL_50;
      v56 = v62;
    }
    v39 = *(_QWORD *)(v36 + 8 * v56 + 42216);
    goto LABEL_53;
  }
LABEL_50:
  v39 = *(_QWORD *)(v36 + 64760);
  if (!v39 || v37 != *(_QWORD *)(v39 + 8))
    v39 = JSC::jsStringWithCacheSlowCase();
LABEL_53:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v40 = v64;
  v64 = 0;
  v65 = v8;
  v66 = -1;
  v67 = 0x1000000;
  v68 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v40, v39, 0, (uint64_t)&v64);
  if (v40)
  {
    if (*(_DWORD *)v40 == 2)
      WTF::StringImpl::destroy(v40, v41);
    else
      *(_DWORD *)v40 -= 2;
  }
  v42 = *(_QWORD *)(a3 + 48);
  if (!v42)
    return v8;
  v43 = *(_QWORD *)(a1 + 56);
  v44 = *(_DWORD *)(v42 + 4);
  if (v44)
  {
    if (v44 != 1)
    {
LABEL_60:
      v45 = *(_QWORD *)(v43 + 64760);
      if (!v45 || v42 != *(_QWORD *)(v45 + 8))
        v45 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_63;
    }
    v57 = *(unsigned __int8 **)(v42 + 8);
    if ((*(_BYTE *)(v42 + 16) & 4) != 0)
    {
      v58 = *v57;
    }
    else
    {
      v63 = *(unsigned __int16 *)v57;
      if (v63 > 0xFF)
        goto LABEL_60;
      v58 = v63;
    }
    v45 = *(_QWORD *)(v43 + 8 * v58 + 42216);
  }
  else
  {
    v45 = *(_QWORD *)(v43 + 41968);
  }
LABEL_63:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v46 = v64;
  v64 = 0;
  v65 = v8;
  v66 = -1;
  v67 = 0x1000000;
  v68 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v46, v45, 0, (uint64_t)&v64);
  if (v46)
  {
    if (*(_DWORD *)v46 == 2)
      WTF::StringImpl::destroy(v46, v47);
    else
      *(_DWORD *)v46 -= 2;
  }
  return v8;
}

{
  uint64_t v6;
  unint64_t v7;
  size_t v8;
  unint64_t v9;
  int v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  __int128 v27;
  char v28;

  v6 = *(_QWORD *)(a1 + 56);
  v7 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v8 = 8 * *(unsigned __int8 *)(v7 + 14);
  v9 = JSC::allocateCell<JSC::JSFinalObject>(v6, v8 + 16);
  v10 = *(_DWORD *)(v7 + 8);
  *(_DWORD *)v9 = v7 >> 4;
  *(_DWORD *)(v9 + 4) = v10;
  *(_QWORD *)(v9 + 8) = 0;
  bzero((void *)(v9 + 16), v8);
  if (*(_BYTE *)(v6 + 755))
    __dmb(0xAu);
  if (*(_BYTE *)(a3 + 56))
  {
    v11 = *(WTF::StringImpl **)(a3 + 8);
    if (v11)
      *(_DWORD *)v11 += 2;
    v22 = v11;
    LOBYTE(v23) = 0;
    LOBYTE(v26) = 0;
    if (*(_BYTE *)(a3 + 32))
    {
      v24 = -1;
      v12 = *(unsigned int *)(a3 + 24);
      if ((_DWORD)v12 != -1)
      {
        ((void (*)(char *, unint64_t *, uint64_t))off_1E3330D90[v12])(&v28, &v23, a3 + 16);
        v24 = v12;
      }
      LOBYTE(v26) = 1;
    }
    v27 = *(_OWORD *)(a3 + 40);
    v14 = WebCore::convertDictionaryToJS(a1, a2, (uint64_t *)&v22);
    if ((_BYTE)v26)
    {
      if (v24 != -1)
        ((void (*)(char *, unint64_t *))off_1E3321198[v24])(&v28, &v23);
      v24 = -1;
    }
    v15 = v22;
    v22 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v13);
      else
        *(_DWORD *)v15 -= 2;
    }
    if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v16 = v22;
    v22 = 0;
    v23 = v9;
    v24 = -1;
    v25 = 0x1000000;
    v26 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v16, v14, 0, (uint64_t)&v22);
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v17);
      else
        *(_DWORD *)v16 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 1))
  {
    if (*(_BYTE *)a3)
      v18 = 7;
    else
      v18 = 6;
    if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v19 = v22;
    v22 = 0;
    v23 = v9;
    v24 = -1;
    v25 = 0x1000000;
    v26 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v19, v18, 0, (uint64_t)&v22);
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v20);
      else
        *(_DWORD *)v19 -= 2;
    }
  }
  return v9;
}

{
  uint64_t v5;
  unint64_t v6;
  size_t v7;
  unint64_t v8;
  int v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  __int128 v12;
  char v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  size_t v17;
  unint64_t v18;
  int v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  unint64_t v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  uint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  WTF::StringImpl *v39;
  WTF::StringImpl *v40;
  unint64_t v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  unint64_t v44;
  WTF::StringImpl *v45;
  WTF::StringImpl *v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;
  uint64_t v49;
  WTF::StringImpl *v50;
  WTF::StringImpl *v51;
  unsigned __int8 *v53;
  unsigned int v54;
  double v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  int v62;
  unsigned int v63;
  int v64;
  uint64_t v65;
  WTF::StringImpl *v66;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  _BYTE v71[52];
  uint64_t v72;

  v72 = *MEMORY[0x1E0C80C00];
  v5 = *(_QWORD *)(a1 + 56);
  v6 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v7 = 8 * *(unsigned __int8 *)(v6 + 14);
  v8 = JSC::allocateCell<JSC::JSFinalObject>(v5, v7 + 16);
  v9 = *(_DWORD *)(v6 + 8);
  *(_DWORD *)v8 = v6 >> 4;
  *(_DWORD *)(v8 + 4) = v9;
  *(_QWORD *)(v8 + 8) = 0;
  bzero((void *)(v8 + 16), v7);
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  if (!*(_BYTE *)(a3 + 144))
    goto LABEL_63;
  v65 = v5;
  v10 = *(WTF::StringImpl **)(a3 + 8);
  if (v10)
    *(_DWORD *)v10 += 2;
  v66 = v10;
  v59 = *(unsigned int *)(a3 + 16);
  v61 = *(unsigned int *)(a3 + 24);
  v11 = *(_QWORD *)(a3 + 32);
  v63 = *(_DWORD *)(a3 + 48);
  v64 = *(unsigned __int8 *)(a3 + 40);
  v12 = *(_OWORD *)(a3 + 68);
  *(_OWORD *)v71 = *(_OWORD *)(a3 + 52);
  *(_OWORD *)&v71[16] = v12;
  *(_OWORD *)&v71[32] = *(_OWORD *)(a3 + 84);
  *(_DWORD *)&v71[48] = *(_DWORD *)(a3 + 100);
  v60 = *(unsigned __int8 *)(a3 + 104);
  v13 = *(_BYTE *)(a3 + 112);
  v14 = *(unsigned __int8 *)(a3 + 113);
  v57 = *(_QWORD *)(a3 + 128);
  v58 = *(_QWORD *)(a3 + 120);
  v62 = *(unsigned __int8 *)(a3 + 136);
  v15 = *(_QWORD *)(a1 + 56);
  v16 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v17 = 8 * *(unsigned __int8 *)(v16 + 14);
  v18 = JSC::allocateCell<JSC::JSFinalObject>(v15, v17 + 16);
  v19 = *(_DWORD *)(v16 + 8);
  *(_DWORD *)v18 = v16 >> 4;
  *(_DWORD *)(v18 + 4) = v19;
  *(_QWORD *)(v18 + 8) = 0;
  bzero((void *)(v18 + 16), v17);
  if (*(_BYTE *)(v15 + 755))
  {
    __dmb(0xAu);
    if (!v14)
      goto LABEL_12;
  }
  else if (!v14)
  {
    goto LABEL_12;
  }
  LOBYTE(v68) = v13;
  v20 = WebCore::convertDictionaryToJS(a1, a2, (unsigned __int8 *)&v68);
  if (!*(_DWORD *)(v15 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v15) & 1) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v21 = (WTF::StringImpl *)v68;
    *(_QWORD *)&v68 = 0;
    *((_QWORD *)&v68 + 1) = v18;
    v69 = 0x1000000FFFFFFFFuLL;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v18, (JSC::VM *)v15, (unint64_t)v21, v20, 0, (uint64_t)&v68);
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v22);
      else
        *(_DWORD *)v21 -= 2;
    }
LABEL_12:
    v23 = v66;
    if (!v64)
      goto LABEL_20;
    if (HIDWORD(v11))
    {
      v55 = (double)v11;
    }
    else
    {
      if ((v11 & 0x80000000) == 0)
      {
        v24 = v11 | 0xFFFE000000000000;
        goto LABEL_16;
      }
      v55 = (double)v11;
    }
    v24 = *(_QWORD *)&v55 + 0x2000000000000;
LABEL_16:
    if (*(_DWORD *)(v15 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v15) & 1) != 0)
      goto LABEL_110;
    WTF::AtomStringImpl::addLiteral();
    v25 = (WTF::StringImpl *)v68;
    *(_QWORD *)&v68 = 0;
    *((_QWORD *)&v68 + 1) = v18;
    v69 = 0x1000000FFFFFFFFuLL;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v18, (JSC::VM *)v15, (unint64_t)v25, v24, 0, (uint64_t)&v68);
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, v26);
      else
        *(_DWORD *)v25 -= 2;
    }
LABEL_20:
    v27 = WebCore::convertEnumerationToJS<WebCore::BitrateMode>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)v63);
    if (*(_DWORD *)(v15 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v15) & 1) != 0)
      goto LABEL_110;
    WTF::AtomStringImpl::addLiteral();
    v28 = (WTF::StringImpl *)v68;
    *(_QWORD *)&v68 = 0;
    *((_QWORD *)&v68 + 1) = v18;
    v69 = 0x1000000FFFFFFFFuLL;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v18, (JSC::VM *)v15, (unint64_t)v28, v27, 0, (uint64_t)&v68);
    if (v28)
    {
      if (*(_DWORD *)v28 == 2)
        WTF::StringImpl::destroy(v28, v29);
      else
        *(_DWORD *)v28 -= 2;
    }
    v30 = *(_QWORD *)(a1 + 56);
    if (!v66 || (v31 = *((_DWORD *)v66 + 1)) == 0)
    {
      v32 = *(_QWORD *)(v30 + 41968);
      goto LABEL_30;
    }
    if (v31 != 1)
    {
LABEL_27:
      v32 = *(_QWORD *)(v30 + 64760);
      if (!v32 || v66 != *(WTF::StringImpl **)(v32 + 8))
        v32 = JSC::jsStringWithCacheSlowCase();
LABEL_30:
      if (*(_DWORD *)(v15 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v15) & 1) != 0)
        goto LABEL_110;
      WTF::AtomStringImpl::addLiteral();
      v33 = (WTF::StringImpl *)v68;
      *(_QWORD *)&v68 = 0;
      *((_QWORD *)&v68 + 1) = v18;
      v69 = 0x1000000FFFFFFFFuLL;
      JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v18, (JSC::VM *)v15, (unint64_t)v33, v32, 0, (uint64_t)&v68);
      if (v33)
      {
        if (*(_DWORD *)v33 == 2)
          WTF::StringImpl::destroy(v33, v34);
        else
          *(_DWORD *)v33 -= 2;
      }
      if (v62)
      {
        *(_QWORD *)&v68 = v58;
        *((_QWORD *)&v68 + 1) = v57;
        v35 = WebCore::convertDictionaryToJS(a1, a2, &v68);
        if (*(_DWORD *)(v15 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v15) & 1) != 0)
        {
LABEL_110:
          v18 = 0;
          v5 = v65;
          goto LABEL_56;
        }
        WTF::AtomStringImpl::addLiteral();
        v36 = (WTF::StringImpl *)v68;
        *(_QWORD *)&v68 = 0;
        *((_QWORD *)&v68 + 1) = v18;
        v69 = 0x1000000FFFFFFFFuLL;
        JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v18, (JSC::VM *)v15, (unint64_t)v36, v35, 0, (uint64_t)&v68);
        if (v36)
        {
          if (*(_DWORD *)v36 == 2)
            WTF::StringImpl::destroy(v36, v37);
          else
            *(_DWORD *)v36 -= 2;
        }
      }
      if ((v61 & 0x80000000) != 0)
        v38 = COERCE__INT64((double)v61) + 0x2000000000000;
      else
        v38 = v61 | 0xFFFE000000000000;
      if (*(_DWORD *)(v15 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v15) & 1) != 0)
        goto LABEL_110;
      WTF::AtomStringImpl::addLiteral();
      v39 = (WTF::StringImpl *)v68;
      *(_QWORD *)&v68 = 0;
      *((_QWORD *)&v68 + 1) = v18;
      v69 = 0x1000000FFFFFFFFuLL;
      JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v18, (JSC::VM *)v15, (unint64_t)v39, v38, 0, (uint64_t)&v68);
      if (v39)
      {
        if (*(_DWORD *)v39 == 2)
          WTF::StringImpl::destroy(v39, v40);
        else
          *(_DWORD *)v39 -= 2;
      }
      v5 = v65;
      if (v60)
      {
        v68 = *(_OWORD *)&v71[4];
        v69 = *(_OWORD *)&v71[20];
        v70 = *(_OWORD *)&v71[36];
        v41 = WebCore::convertDictionaryToJS(a1, a2, (unsigned __int8 *)&v68);
        if (*(_DWORD *)(v15 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v15) & 1) != 0)
        {
LABEL_112:
          v18 = 0;
          goto LABEL_56;
        }
        WTF::AtomStringImpl::addLiteral();
        v42 = (WTF::StringImpl *)v68;
        *(_QWORD *)&v68 = 0;
        *((_QWORD *)&v68 + 1) = v18;
        v69 = 0x1000000FFFFFFFFuLL;
        JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v18, (JSC::VM *)v15, (unint64_t)v42, v41, 0, (uint64_t)&v68);
        if (v42)
        {
          if (*(_DWORD *)v42 == 2)
            WTF::StringImpl::destroy(v42, v43);
          else
            *(_DWORD *)v42 -= 2;
        }
      }
      if ((v59 & 0x80000000) != 0)
        v44 = COERCE__INT64((double)v59) + 0x2000000000000;
      else
        v44 = v59 | 0xFFFE000000000000;
      if (!*(_DWORD *)(v15 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v15) & 1) == 0)
      {
        WTF::AtomStringImpl::addLiteral();
        v45 = (WTF::StringImpl *)v68;
        *(_QWORD *)&v68 = 0;
        *((_QWORD *)&v68 + 1) = v18;
        v69 = 0x1000000FFFFFFFFuLL;
        JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v18, (JSC::VM *)v15, (unint64_t)v45, v44, 0, (uint64_t)&v68);
        if (v45)
        {
          if (*(_DWORD *)v45 == 2)
            WTF::StringImpl::destroy(v45, v46);
          else
            *(_DWORD *)v45 -= 2;
        }
        goto LABEL_56;
      }
      goto LABEL_112;
    }
    v53 = (unsigned __int8 *)*((_QWORD *)v66 + 1);
    if ((*((_BYTE *)v66 + 16) & 4) != 0)
    {
      v54 = *v53;
    }
    else
    {
      v56 = *(unsigned __int16 *)v53;
      if (v56 > 0xFF)
        goto LABEL_27;
      v54 = v56;
    }
    v32 = *(_QWORD *)(v30 + 8 * v54 + 42216);
    goto LABEL_30;
  }
  v18 = 0;
  v5 = v65;
  v23 = v66;
LABEL_56:
  if (v23)
  {
    if (*(_DWORD *)v23 == 2)
      WTF::StringImpl::destroy(v23, v46);
    else
      *(_DWORD *)v23 -= 2;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v47 = *(WTF::StringImpl **)v71;
  *(_QWORD *)v71 = 0;
  *(_QWORD *)&v71[8] = v8;
  *(_OWORD *)&v71[16] = 0x1000000FFFFFFFFuLL;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v47, v18, 0, (uint64_t)v71);
  if (v47)
  {
    if (*(_DWORD *)v47 == 2)
      WTF::StringImpl::destroy(v47, v48);
    else
      *(_DWORD *)v47 -= 2;
  }
LABEL_63:
  if (*(_BYTE *)(a3 + 1))
  {
    if (*(_BYTE *)a3)
      v49 = 7;
    else
      v49 = 6;
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v50 = *(WTF::StringImpl **)v71;
    *(_QWORD *)v71 = 0;
    *(_QWORD *)&v71[8] = v8;
    *(_OWORD *)&v71[16] = 0x1000000FFFFFFFFuLL;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v50, v49, 0, (uint64_t)v71);
    if (v50)
    {
      if (*(_DWORD *)v50 == 2)
        WTF::StringImpl::destroy(v50, v51);
      else
        *(_DWORD *)v50 -= 2;
    }
  }
  return v8;
}

{
  uint64_t v6;
  unint64_t v7;
  size_t v8;
  unint64_t v9;
  int v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v24;
  unint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int16 v34;
  char v35;

  v6 = *(_QWORD *)(a1 + 56);
  v7 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v8 = 8 * *(unsigned __int8 *)(v7 + 14);
  v9 = JSC::allocateCell<JSC::JSFinalObject>(v6, v8 + 16);
  v10 = *(_DWORD *)(v7 + 8);
  *(_DWORD *)v9 = v7 >> 4;
  *(_DWORD *)(v9 + 4) = v10;
  *(_QWORD *)(v9 + 8) = 0;
  bzero((void *)(v9 + 16), v8);
  if (*(_BYTE *)(v6 + 755))
    __dmb(0xAu);
  if (*(_BYTE *)(a3 + 128))
  {
    v11 = *(WTF::StringImpl **)(a3 + 8);
    if (v11)
      *(_DWORD *)v11 += 2;
    v24 = v11;
    LOBYTE(v25) = 0;
    LOBYTE(v28) = 0;
    if (*(_BYTE *)(a3 + 32))
    {
      v26 = -1;
      v12 = *(unsigned int *)(a3 + 24);
      if ((_DWORD)v12 != -1)
      {
        ((void (*)(char *, unint64_t *, uint64_t))off_1E3330D90[v12])(&v35, &v25, a3 + 16);
        v26 = v12;
      }
      LOBYTE(v28) = 1;
    }
    v13 = *(_OWORD *)(a3 + 88);
    v31 = *(_OWORD *)(a3 + 72);
    v32 = v13;
    v33 = *(_OWORD *)(a3 + 104);
    v34 = *(_WORD *)(a3 + 120);
    v14 = *(_OWORD *)(a3 + 56);
    v29 = *(_OWORD *)(a3 + 40);
    v30 = v14;
    v16 = WebCore::convertDictionaryToJS(a1, a2, (uint64_t *)&v24);
    if ((_BYTE)v28)
    {
      if (v26 != -1)
        ((void (*)(char *, unint64_t *))off_1E3321198[v26])(&v35, &v25);
      v26 = -1;
    }
    v17 = v24;
    v24 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v15);
      else
        *(_DWORD *)v17 -= 2;
    }
    if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v18 = v24;
    v24 = 0;
    v25 = v9;
    v26 = -1;
    v27 = 0x1000000;
    v28 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v18, v16, 0, (uint64_t)&v24);
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v19);
      else
        *(_DWORD *)v18 -= 2;
    }
  }
  if (*(_BYTE *)(a3 + 1))
  {
    if (*(_BYTE *)a3)
      v20 = 7;
    else
      v20 = 6;
    if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v21 = v24;
    v24 = 0;
    v25 = v9;
    v26 = -1;
    v27 = 0x1000000;
    v28 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v21, v20, 0, (uint64_t)&v24);
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v22);
      else
        *(_DWORD *)v21 -= 2;
    }
  }
  return v9;
}

{
  uint64_t v6;
  unint64_t v7;
  size_t v8;
  unint64_t v9;
  int v10;
  _DWORD *v11;
  unint64_t v12;
  double v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  unint64_t v17;
  size_t v18;
  unint64_t v19;
  int v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int v25;
  int v26;
  _DWORD *v27;
  uint64_t v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  unint64_t v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  WTF::StringImpl *v35;
  WTF::StringImpl *v36;
  uint64_t v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  uint64_t v40;
  int v41;
  WTF::StringImpl *v42;
  uint64_t v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  unint64_t v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;
  unint64_t v49;
  WTF::StringImpl *v50;
  WTF::StringImpl *v51;
  uint64_t v52;
  unint64_t v53;
  WTF::StringImpl *v54;
  WTF::StringImpl *v55;
  uint64_t v56;
  WTF::StringImpl *v57;
  WTF::StringImpl *v58;
  uint64_t v59;
  WTF::StringImpl *v60;
  WTF::StringImpl *v61;
  uint64_t v62;
  WTF::StringImpl *v63;
  WTF::StringImpl *v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  WTF::StringImpl *v68;
  WTF::StringImpl *v69;
  unint64_t v70;
  WTF::StringImpl *v71;
  WTF::StringImpl *v72;
  WTF::StringImpl *v73;
  WTF::StringImpl *v74;
  uint64_t v75;
  WTF::StringImpl *v76;
  WTF::StringImpl *v77;
  unsigned __int8 *v79;
  unsigned int v80;
  unsigned __int8 *v81;
  unsigned int v82;
  double v83;
  unsigned __int8 *v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  unsigned int v93;
  uint64_t v94;
  unsigned int v95;
  int v96;
  int v97;
  int v98;
  unsigned int v99;
  int v100;
  int v101;
  unint64_t v102;
  uint64_t v103;
  WTF::StringImpl *v104;
  WTF::StringImpl *v105;
  unint64_t v106;
  int v107;
  int v108;
  uint64_t v109;

  v6 = *(_QWORD *)(a1 + 56);
  v7 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v8 = 8 * *(unsigned __int8 *)(v7 + 14);
  v9 = JSC::allocateCell<JSC::JSFinalObject>(v6, v8 + 16);
  v10 = *(_DWORD *)(v7 + 8);
  *(_DWORD *)v9 = v7 >> 4;
  *(_DWORD *)(v9 + 4) = v10;
  *(_QWORD *)(v9 + 8) = 0;
  bzero((void *)(v9 + 16), v8);
  if (*(_BYTE *)(v6 + 755))
    __dmb(0xAu);
  if (!*(_BYTE *)(a3 + 128))
    goto LABEL_116;
  v11 = *(_DWORD **)(a3 + 8);
  if (v11)
    *v11 += 2;
  v102 = v9;
  v103 = v6;
  v92 = *(unsigned int *)(a3 + 16);
  v94 = *(unsigned int *)(a3 + 24);
  v89 = *(unsigned int *)(a3 + 32);
  v90 = *(unsigned int *)(a3 + 48);
  v97 = *(unsigned __int8 *)(a3 + 40);
  v98 = *(unsigned __int8 *)(a3 + 56);
  v12 = *(_QWORD *)(a3 + 64);
  v100 = *(unsigned __int8 *)(a3 + 72);
  v13 = *(double *)(a3 + 80);
  v14 = *(int *)(a3 + 100);
  v95 = *(_DWORD *)(a3 + 96);
  v96 = *(unsigned __int8 *)(a3 + 88);
  v15 = *(WTF::StringImpl **)(a3 + 104);
  if (v15)
    *(_DWORD *)v15 += 2;
  v104 = v15;
  v99 = *(_DWORD *)(a3 + 112);
  v93 = *(_DWORD *)(a3 + 116);
  v91 = *(_DWORD *)(a3 + 120);
  v101 = *(unsigned __int8 *)(a3 + 124);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v18 = 8 * *(unsigned __int8 *)(v17 + 14);
  v19 = JSC::allocateCell<JSC::JSFinalObject>(v16, v18 + 16);
  v20 = *(_DWORD *)(v17 + 8);
  *(_DWORD *)v19 = v17 >> 4;
  *(_DWORD *)(v19 + 4) = v20;
  *(_QWORD *)(v19 + 8) = 0;
  bzero((void *)(v19 + 16), v18);
  if (*(_BYTE *)(v16 + 755))
    __dmb(0xAu);
  v22 = *(_QWORD *)(a1 + 56);
  v23 = (uint64_t *)(v22 + 41968);
  if ((byte_1EE336EC3 & 1) == 0)
  {
    dword_1ECE7A4D0 += 2;
    byte_1EE336EC3 = 1;
    qword_1EE337128 = (uint64_t)&dword_1ECE7A4D0;
    dword_1ECE7A4F0 += 2;
    qword_1EE337130 = (uint64_t)&dword_1ECE7A4F0;
  }
  v24 = *(_QWORD *)&_MergedGlobals_1290[8 * v14 + 616];
  if (!v24)
  {
    v28 = *v23;
    v27 = v11;
    goto LABEL_20;
  }
  v25 = *(_DWORD *)v24;
  v26 = *(_DWORD *)(v24 + 4);
  *(_DWORD *)v24 += 2;
  v27 = v11;
  if (v26)
  {
    if (v26 != 1)
    {
LABEL_15:
      v28 = *(_QWORD *)(v22 + 64760);
      if (!v28 || v24 != *(_QWORD *)(v28 + 8))
      {
        v28 = JSC::jsStringWithCacheSlowCase();
        v25 = *(_DWORD *)v24 - 2;
      }
      goto LABEL_18;
    }
    v79 = *(unsigned __int8 **)(v24 + 8);
    if ((*(_BYTE *)(v24 + 16) & 4) != 0)
    {
      v80 = *v79;
    }
    else
    {
      v86 = *(unsigned __int16 *)v79;
      if (v86 > 0xFF)
        goto LABEL_15;
      v80 = v86;
    }
    v28 = *(_QWORD *)(v22 + 8 * v80 + 42216);
  }
  else
  {
    v28 = *v23;
  }
LABEL_18:
  if (v25)
    *(_DWORD *)v24 = v25;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v24, v21);
LABEL_20:
  if (*(_DWORD *)(v16 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v16) & 1) != 0)
    goto LABEL_193;
  WTF::AtomStringImpl::addLiteral();
  v29 = v105;
  v105 = 0;
  v106 = v19;
  v107 = -1;
  v108 = 0x1000000;
  v109 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v19, (JSC::VM *)v16, (unint64_t)v29, v28, 0, (uint64_t)&v105);
  if (v29)
  {
    if (*(_DWORD *)v29 == 2)
      WTF::StringImpl::destroy(v29, v30);
    else
      *(_DWORD *)v29 -= 2;
  }
  if (v101)
  {
    LODWORD(v105) = v91;
    v31 = WebCore::convertDictionaryToJS(a1, a2, (int *)&v105);
    if (*(_DWORD *)(v16 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v16) & 1) != 0)
      goto LABEL_193;
    WTF::AtomStringImpl::addLiteral();
    v32 = v105;
    v105 = 0;
    v106 = v19;
    v107 = -1;
    v108 = 0x1000000;
    v109 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v19, (JSC::VM *)v16, (unint64_t)v32, v31, 0, (uint64_t)&v105);
    if (v32)
    {
      if (*(_DWORD *)v32 == 2)
        WTF::StringImpl::destroy(v32, v33);
      else
        *(_DWORD *)v32 -= 2;
    }
  }
  if (!v100)
    goto LABEL_37;
  if (HIDWORD(v12))
  {
    v83 = (double)v12;
  }
  else
  {
    if ((v12 & 0x80000000) == 0)
    {
      v34 = v12 | 0xFFFE000000000000;
      goto LABEL_33;
    }
    v83 = (double)v12;
  }
  v34 = *(_QWORD *)&v83 + 0x2000000000000;
LABEL_33:
  if (*(_DWORD *)(v16 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v16) & 1) != 0)
    goto LABEL_193;
  WTF::AtomStringImpl::addLiteral();
  v35 = v105;
  v105 = 0;
  v106 = v19;
  v107 = -1;
  v108 = 0x1000000;
  v109 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v19, (JSC::VM *)v16, (unint64_t)v35, v34, 0, (uint64_t)&v105);
  if (v35)
  {
    if (*(_DWORD *)v35 == 2)
      WTF::StringImpl::destroy(v35, v36);
    else
      *(_DWORD *)v35 -= 2;
  }
LABEL_37:
  v37 = WebCore::convertEnumerationToJS<WebCore::BitrateMode>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)v99);
  if (*(_DWORD *)(v16 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v16) & 1) != 0)
  {
LABEL_193:
    v19 = 0;
    v9 = v102;
    v6 = v103;
    v42 = v104;
    goto LABEL_106;
  }
  WTF::AtomStringImpl::addLiteral();
  v38 = v105;
  v105 = 0;
  v106 = v19;
  v107 = -1;
  v108 = 0x1000000;
  v109 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v19, (JSC::VM *)v16, (unint64_t)v38, v37, 0, (uint64_t)&v105);
  if (v38)
  {
    if (*(_DWORD *)v38 == 2)
      WTF::StringImpl::destroy(v38, v39);
    else
      *(_DWORD *)v38 -= 2;
  }
  v40 = *(_QWORD *)(a1 + 56);
  if (!v27 || (v41 = v27[1]) == 0)
  {
    v43 = *(_QWORD *)(v40 + 41968);
    v42 = v104;
    goto LABEL_47;
  }
  v42 = v104;
  if (v41 == 1)
  {
    v81 = (unsigned __int8 *)*((_QWORD *)v27 + 1);
    if ((v27[4] & 4) != 0)
    {
      v82 = *v81;
    }
    else
    {
      v87 = *(unsigned __int16 *)v81;
      if (v87 > 0xFF)
        goto LABEL_44;
      v82 = v87;
    }
    v43 = *(_QWORD *)(v40 + 8 * v82 + 42216);
    goto LABEL_47;
  }
LABEL_44:
  v43 = *(_QWORD *)(v40 + 64760);
  if (!v43 || v27 != *(_DWORD **)(v43 + 8))
    v43 = JSC::jsStringWithCacheSlowCase();
LABEL_47:
  if (*(_DWORD *)(v16 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v16) & 1) != 0)
  {
LABEL_182:
    v19 = 0;
    goto LABEL_183;
  }
  WTF::AtomStringImpl::addLiteral();
  v44 = v105;
  v105 = 0;
  v106 = v19;
  v107 = -1;
  v108 = 0x1000000;
  v109 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v19, (JSC::VM *)v16, (unint64_t)v44, v43, 0, (uint64_t)&v105);
  if (v44)
  {
    if (*(_DWORD *)v44 == 2)
      WTF::StringImpl::destroy(v44, v45);
    else
      *(_DWORD *)v44 -= 2;
  }
  if (v98)
  {
    if ((v90 & 0x80000000) != 0)
      v46 = COERCE__INT64((double)v90) + 0x2000000000000;
    else
      v46 = v90 | 0xFFFE000000000000;
    if (*(_DWORD *)(v16 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v16) & 1) != 0)
      goto LABEL_193;
    WTF::AtomStringImpl::addLiteral();
    v47 = v105;
    v105 = 0;
    v106 = v19;
    v107 = -1;
    v108 = 0x1000000;
    v109 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v19, (JSC::VM *)v16, (unint64_t)v47, v46, 0, (uint64_t)&v105);
    if (v47)
    {
      if (*(_DWORD *)v47 == 2)
        WTF::StringImpl::destroy(v47, v48);
      else
        *(_DWORD *)v47 -= 2;
    }
  }
  if (v97)
  {
    if ((v89 & 0x80000000) != 0)
      v49 = COERCE__INT64((double)v89) + 0x2000000000000;
    else
      v49 = v89 | 0xFFFE000000000000;
    if (*(_DWORD *)(v16 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v16) & 1) != 0)
      goto LABEL_193;
    WTF::AtomStringImpl::addLiteral();
    v50 = v105;
    v105 = 0;
    v106 = v19;
    v107 = -1;
    v108 = 0x1000000;
    v109 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v19, (JSC::VM *)v16, (unint64_t)v50, v49, 0, (uint64_t)&v105);
    if (v50)
    {
      if (*(_DWORD *)v50 == 2)
        WTF::StringImpl::destroy(v50, v51);
      else
        *(_DWORD *)v50 -= 2;
    }
  }
  if (v96)
  {
    if ((*(_QWORD *)&v13 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v52 = (int)v13, v13 == (double)(int)v52)
      && ((_DWORD)v52 || (*(_QWORD *)&v13 & 0x8000000000000000) == 0))
    {
      v53 = v52 | 0xFFFE000000000000;
    }
    else
    {
      v53 = *(_QWORD *)&v13 + 0x2000000000000;
    }
    if (*(_DWORD *)(v16 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v16) & 1) != 0)
      goto LABEL_193;
    WTF::AtomStringImpl::addLiteral();
    v54 = v105;
    v105 = 0;
    v106 = v19;
    v107 = -1;
    v108 = 0x1000000;
    v109 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v19, (JSC::VM *)v16, (unint64_t)v54, v53, 0, (uint64_t)&v105);
    if (v54)
    {
      if (*(_DWORD *)v54 == 2)
        WTF::StringImpl::destroy(v54, v55);
      else
        *(_DWORD *)v54 -= 2;
    }
  }
  v56 = WebCore::convertEnumerationToJS<WebCore::HardwareAcceleration>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)v95);
  if (*(_DWORD *)(v16 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v16) & 1) != 0)
    goto LABEL_193;
  WTF::AtomStringImpl::addLiteral();
  v57 = v105;
  v105 = 0;
  v106 = v19;
  v107 = -1;
  v108 = 0x1000000;
  v109 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v19, (JSC::VM *)v16, (unint64_t)v57, v56, 0, (uint64_t)&v105);
  if (v57)
  {
    if (*(_DWORD *)v57 == 2)
      WTF::StringImpl::destroy(v57, v58);
    else
      *(_DWORD *)v57 -= 2;
  }
  v59 = (v94 & 0x80000000) != 0
      ? COERCE__INT64((double)v94) + 0x2000000000000
      : v94 | 0xFFFE000000000000;
  if (*(_DWORD *)(v16 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v16) & 1) != 0)
    goto LABEL_193;
  WTF::AtomStringImpl::addLiteral();
  v60 = v105;
  v105 = 0;
  v106 = v19;
  v107 = -1;
  v108 = 0x1000000;
  v109 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v19, (JSC::VM *)v16, (unint64_t)v60, v59, 0, (uint64_t)&v105);
  if (v60)
  {
    if (*(_DWORD *)v60 == 2)
      WTF::StringImpl::destroy(v60, v61);
    else
      *(_DWORD *)v60 -= 2;
  }
  v62 = WebCore::convertEnumerationToJS<WebCore::LatencyMode>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)v93);
  if (*(_DWORD *)(v16 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v16) & 1) != 0)
      goto LABEL_193;
  }
  WTF::AtomStringImpl::addLiteral();
  v63 = v105;
  v105 = 0;
  v106 = v19;
  v107 = -1;
  v108 = 0x1000000;
  v109 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v19, (JSC::VM *)v16, (unint64_t)v63, v62, 0, (uint64_t)&v105);
  if (v63)
  {
    if (*(_DWORD *)v63 == 2)
      WTF::StringImpl::destroy(v63, v64);
    else
      *(_DWORD *)v63 -= 2;
  }
  v42 = v104;
  if (v104)
  {
    v65 = *(_QWORD *)(a1 + 56);
    v66 = *((_DWORD *)v104 + 1);
    if (v66)
    {
      if (v66 != 1)
      {
LABEL_93:
        v67 = *(_QWORD *)(v65 + 64760);
        if (!v67 || v104 != *(WTF::StringImpl **)(v67 + 8))
          v67 = JSC::jsStringWithCacheSlowCase();
        goto LABEL_96;
      }
      v84 = (unsigned __int8 *)*((_QWORD *)v104 + 1);
      if ((*((_BYTE *)v104 + 16) & 4) != 0)
      {
        v85 = *v84;
      }
      else
      {
        v88 = *(unsigned __int16 *)v84;
        if (v88 > 0xFF)
          goto LABEL_93;
        v85 = v88;
      }
      v67 = *(_QWORD *)(v65 + 8 * v85 + 42216);
    }
    else
    {
      v67 = *(_QWORD *)(v65 + 41968);
    }
LABEL_96:
    if (*(_DWORD *)(v16 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v16) & 1) != 0)
    {
      v19 = 0;
      v9 = v102;
      v6 = v103;
      goto LABEL_107;
    }
    WTF::AtomStringImpl::addLiteral();
    v68 = v105;
    v105 = 0;
    v106 = v19;
    v107 = -1;
    v108 = 0x1000000;
    v109 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v19, (JSC::VM *)v16, (unint64_t)v68, v67, 0, (uint64_t)&v105);
    if (v68)
    {
      if (*(_DWORD *)v68 == 2)
        WTF::StringImpl::destroy(v68, v69);
      else
        *(_DWORD *)v68 -= 2;
    }
  }
  if ((v92 & 0x80000000) != 0)
    v70 = COERCE__INT64((double)v92) + 0x2000000000000;
  else
    v70 = v92 | 0xFFFE000000000000;
  if (*(_DWORD *)(v16 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v16) & 1) != 0)
    goto LABEL_182;
  WTF::AtomStringImpl::addLiteral();
  v71 = v105;
  v105 = 0;
  v106 = v19;
  v107 = -1;
  v108 = 0x1000000;
  v109 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v19, (JSC::VM *)v16, (unint64_t)v71, v70, 0, (uint64_t)&v105);
  if (!v71)
  {
LABEL_183:
    v9 = v102;
    v6 = v103;
    goto LABEL_106;
  }
  v9 = v102;
  v6 = v103;
  if (*(_DWORD *)v71 == 2)
    WTF::StringImpl::destroy(v71, v72);
  else
    *(_DWORD *)v71 -= 2;
LABEL_106:
  if (!v42)
    goto LABEL_109;
LABEL_107:
  if (*(_DWORD *)v42 != 2)
  {
    *(_DWORD *)v42 -= 2;
LABEL_109:
    if (v27)
      goto LABEL_110;
    goto LABEL_112;
  }
  WTF::StringImpl::destroy(v42, v72);
  if (v27)
  {
LABEL_110:
    if (*v27 == 2)
      WTF::StringImpl::destroy((WTF::StringImpl *)v27, v72);
    else
      *v27 -= 2;
  }
LABEL_112:
  if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v73 = v105;
  v105 = 0;
  v106 = v9;
  v107 = -1;
  v108 = 0x1000000;
  v109 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v73, v19, 0, (uint64_t)&v105);
  if (v73)
  {
    if (*(_DWORD *)v73 == 2)
      WTF::StringImpl::destroy(v73, v74);
    else
      *(_DWORD *)v73 -= 2;
  }
LABEL_116:
  if (*(_BYTE *)(a3 + 1))
  {
    if (*(_BYTE *)a3)
      v75 = 7;
    else
      v75 = 6;
    if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v76 = v105;
    v105 = 0;
    v106 = v9;
    v107 = -1;
    v108 = 0x1000000;
    v109 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v76, v75, 0, (uint64_t)&v105);
    if (v76)
    {
      if (*(_DWORD *)v76 == 2)
        WTF::StringImpl::destroy(v76, v77);
      else
        *(_DWORD *)v76 -= 2;
    }
  }
  return v9;
}

{
  uint64_t v6;
  unint64_t v7;
  size_t v8;
  unint64_t v9;
  int v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unsigned __int8 *v13;
  JSC::VM *v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  objc_class **v18;
  uint64_t v19;
  int v20;
  int v21;
  objc_class *v22;
  int v23;
  unsigned __int8 *v24;
  unsigned int v25;
  unsigned int v26;
  JSValue v27;
  JSC::VM *v28;
  uint64_t *v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unsigned __int8 *v38;
  WTF *v39;
  int v40;
  WTF::StringImpl *v41;
  uint64_t v42;
  WTF *v43;
  _OWORD v44[4];
  uint64_t v45;
  JSC::VM *v46;

  v6 = *(_QWORD *)(a1 + 56);
  v7 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v8 = 8 * *(unsigned __int8 *)(v7 + 14);
  v9 = JSC::allocateCell<JSC::JSFinalObject>(v6, v8 + 16);
  v10 = *(_DWORD *)(v7 + 8);
  *(_DWORD *)v9 = v7 >> 4;
  *(_DWORD *)(v9 + 4) = v10;
  *(_QWORD *)(v9 + 8) = 0;
  bzero((void *)(v9 + 16), v8);
  if (*(_BYTE *)(v6 + 755))
    __dmb(0xAu);
  if (*(_BYTE *)(a3 + 16))
  {
    v12 = *(unsigned int *)(a3 + 12);
    if ((_DWORD)v12)
    {
      v13 = (unsigned __int8 *)WTF::fastMalloc((WTF *)*(unsigned int *)(a3 + 12));
      memcpy(v13, *(const void **)a3, *(unsigned int *)(a3 + 12));
    }
    else
    {
      v13 = 0;
    }
    v14 = *(JSC::VM **)(a1 + 56);
    v46 = v14;
    LOBYTE(v41) = 0;
    v42 = 0x800000000;
    v43 = (WTF *)((char *)v44 + 8);
    memset(v44, 0, sizeof(v44));
    v45 = 0;
    if (v12 >= 9)
    {
      v37 = v9;
      v38 = v13;
      v35 = a2;
      v36 = v6;
      LOBYTE(v41) = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v42) == 1;
      goto LABEL_10;
    }
    if ((_DWORD)v12)
    {
      v37 = v9;
      v38 = v13;
      v35 = a2;
      v36 = v6;
LABEL_10:
      v15 = v38;
      while (1)
      {
        v16 = *v15;
        if ((_MergedGlobals_204[0] & 1) == 0)
        {
          _MergedGlobals_31 += 2;
          dword_1ECE7A930 += 2;
          qword_1EE337648 = (uint64_t)&_MergedGlobals_31;
          unk_1EE337650 = &dword_1ECE7A930;
          dword_1ECE7A950 += 2;
          dword_1ECE7A970 += 2;
          qword_1EE337658 = (uint64_t)&dword_1ECE7A950;
          unk_1EE337660 = &dword_1ECE7A970;
          dword_1ECE7A990 += 2;
          qword_1EE337668 = (uint64_t)&dword_1ECE7A990;
          _MergedGlobals_204[0] = 1;
        }
        v17 = *(_QWORD *)(a1 + 56);
        v18 = (objc_class **)(v17 + 41968);
        v19 = *(_QWORD *)&_MergedGlobals_204[8 * v16 + 368];
        if (v19)
          break;
        v22 = *v18;
LABEL_21:
        if (*((_DWORD *)v14 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v14) & 1) != 0)
        {
          v33 = 0;
          v6 = v36;
          v9 = v37;
          v13 = v38;
          goto LABEL_43;
        }
        v23 = v42;
        if ((_DWORD)v42 == HIDWORD(v42) || v43 != (WTF *)((char *)v44 + 8) && v43)
        {
          v27.super.isa = v22;
          if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v42, v27) == 1)
            LOBYTE(v41) = 1;
        }
        else
        {
          *((_QWORD *)v43 + v42) = v22;
          LODWORD(v42) = v23 + 1;
        }
        ++v15;
        if (!--v12)
        {
          v6 = v36;
          v9 = v37;
          a2 = v35;
          v13 = v38;
          if (!(_BYTE)v41)
            goto LABEL_41;
          JSC::throwOutOfMemoryError();
LABEL_59:
          v33 = 0;
          goto LABEL_43;
        }
      }
      v20 = *(_DWORD *)v19;
      v21 = *(_DWORD *)(v19 + 4);
      *(_DWORD *)v19 += 2;
      if (v21)
      {
        if (v21 != 1)
        {
LABEL_16:
          v22 = *(objc_class **)(v17 + 64760);
          if (!v22 || v19 != *((_QWORD *)v22 + 1))
          {
            v22 = (objc_class *)JSC::jsStringWithCacheSlowCase();
            v20 = *(_DWORD *)v19 - 2;
          }
          goto LABEL_19;
        }
        v24 = *(unsigned __int8 **)(v19 + 8);
        if ((*(_BYTE *)(v19 + 16) & 4) != 0)
        {
          v25 = *v24;
        }
        else
        {
          v26 = *(unsigned __int16 *)v24;
          if (v26 > 0xFF)
            goto LABEL_16;
          v25 = v26;
        }
        v22 = *(objc_class **)(v17 + 8 * v25 + 42216);
      }
      else
      {
        v22 = *v18;
      }
LABEL_19:
      if (v20)
        *(_DWORD *)v19 = v20;
      else
        WTF::StringImpl::destroy((WTF::StringImpl *)v19, v11);
      goto LABEL_21;
    }
LABEL_41:
    v39 = v43;
    v40 = v42;
    v28 = *(JSC::VM **)(a2 + 56);
    if (*((_DWORD *)v28 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v28) & 1) != 0)
      goto LABEL_59;
    v33 = JSC::constructArray();
LABEL_43:
    v29 = *(uint64_t **)&v44[0];
    if (*(_QWORD *)&v44[0])
    {
      v39 = (WTF *)&v42;
      v34 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v44[0], (uint64_t *)&v39);
      WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v29, v34);
    }
    if (v43 != (WTF *)((char *)v44 + 8) && v43)
      WTF::fastFree(v43, v11);
    if (v13)
      WTF::fastFree((WTF *)v13, v11);
    if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
    {
      return 0;
    }
    else
    {
      WTF::AtomStringImpl::addLiteral();
      v30 = v41;
      v41 = 0;
      v42 = v9;
      v43 = (WTF *)0x1000000FFFFFFFFLL;
      *(_QWORD *)&v44[0] = 0;
      JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v30, v33, 0, (uint64_t)&v41);
      if (v30)
      {
        if (*(_DWORD *)v30 == 2)
          WTF::StringImpl::destroy(v30, v31);
        else
          *(_DWORD *)v30 -= 2;
      }
    }
  }
  return v9;
}

uint64_t WebCore::JSDeviceMotionEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDeviceMotionEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDeviceMotionEventPrototype::create(WebCore::JSDeviceMotionEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<6u>(this, (uint64_t)&WebCore::JSDeviceMotionEvent::s_info, &WebCore::JSDeviceMotionEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeviceMotionEvent>,(WebCore::DOMConstructorID)439>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  uint64_t v35;
  uint64_t v36;
  WTF::StringImpl *v37;
  int v38;
  WTF::StringImpl *v39;
  unint64_t v41;
  unint64_t v42;
  WTF::StringImpl *v43;
  unint64_t v44;
  int v45;
  int v46;
  uint64_t v47;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3512);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
  v7 = v6;
  LODWORD(v43) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v41 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v41);
    v5[2] = SlowCase + (int)v41;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v43, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeviceMotionEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v42 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v42);
    v10[2848] = v2 + (int)v42;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v43 = 0;
  v44 = v2;
  v45 = -1;
  v46 = 0x1000000;
  v47 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v43);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v43);
  v14 = v43;
  v43 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v43 = 0;
  v44 = v2;
  v45 = -1;
  v46 = 0x1000000;
  v47 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v43);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (!v18)
    goto LABEL_21;
  v19 = *(_DWORD *)(v18 - 8);
  v20 = ((unint64_t)&WebCore::JSDeviceMotionEvent::s_info + ~((_QWORD)&WebCore::JSDeviceMotionEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSDeviceMotionEvent::s_info + ~((_QWORD)&WebCore::JSDeviceMotionEvent::s_info << 32)) >> 22);
  v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
  v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
  v23 = v19 & ((v22 >> 31) ^ v22);
  v24 = *(char ***)(v18 + 16 * v23);
  if (v24 != &WebCore::JSDeviceMotionEvent::s_info)
  {
    v25 = 1;
    while (v24)
    {
      v23 = ((_DWORD)v23 + v25) & v19;
      v24 = *(char ***)(v18 + 16 * v23);
      ++v25;
      if (v24 == &WebCore::JSDeviceMotionEvent::s_info)
        goto LABEL_20;
    }
    goto LABEL_21;
  }
LABEL_20:
  v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
  if (!v26)
  {
LABEL_21:
    v27 = (JSC::JSCell *)WebCore::JSEvent::prototype((WebCore::JSEvent *)a1, (JSC::VM *)a2, v16);
    Structure = WebCore::JSDeviceMotionEventPrototype::createStructure((uint64_t *)a1, a2, v27);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v30 = (JSC::JSCell *)WebCore::JSDeviceMotionEventPrototype::create((WebCore::JSDeviceMotionEventPrototype *)a1, (JSC::VM *)a2, Structure, v29);
    v31 = WebCore::JSDeviceMotionEvent::createStructure((uint64_t *)a1, a2, v30);
    v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSDeviceMotionEvent::s_info);
  }
  v32 = *(_QWORD *)(v26 + 48);
  v43 = 0;
  v44 = v2;
  v45 = -1;
  v46 = 0x1000000;
  v47 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v43);
  if ((*(_BYTE *)((16 * *(unsigned int *)v2) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)v2, (JSC::VM *)a1);
  WTF::AtomStringImpl::addLiteral();
  v33 = v43;
  JSC::reifyStaticProperty((JSC::VM *)a1, (uint64_t)&WebCore::JSDeviceMotionEvent::s_info, (unint64_t *)&v43, (uint64_t)&WebCore::JSDeviceMotionEventConstructorTableValues, (unsigned __int8 *)v2);
  if (v33)
  {
    if (*(_DWORD *)v33 == 2)
      WTF::StringImpl::destroy(v33, v34);
    else
      *(_DWORD *)v33 -= 2;
  }
  v35 = WebCore::JSDOMGlobalObject::scriptExecutionContext((WebCore::JSDOMGlobalObject *)a2);
  if (v35 && *(_BYTE *)(v35 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194A47150);
  }
  v36 = v35 - 192;
  if (!v35)
    v36 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v36 + 680) + 704) & 0x4000000000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v37 = v43;
    v38 = *(_DWORD *)(a1 + 93124);
    *(_DWORD *)(a1 + 93124) = 1;
    LODWORD(v43) = -1;
    WORD2(v43) = 1;
    JSC::JSObject::deleteProperty();
    *(_DWORD *)(a1 + 93124) = v38;
    if (v37)
    {
      if (*(_DWORD *)v37 == 2)
        WTF::StringImpl::destroy(v37, v39);
      else
        *(_DWORD *)v37 -= 2;
    }
  }
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3512) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDeviceMotionEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDeviceMotionEventPrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeviceMotionEvent>,(WebCore::DOMConstructorID)439>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsDeviceMotionEvent_acceleration(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v13[3];

  v3 = *(_QWORD *)(*(_QWORD *)(a2[3] + 72) + 8);
  if (!v3)
    return 2;
  v4 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v5 = (*(_DWORD *)v3)++;
  v6 = *(_OWORD *)(v3 + 8);
  v7 = *(_OWORD *)(v3 + 24);
  v8 = *(_OWORD *)(v3 + 40);
  if (v5)
  {
    *(_DWORD *)v3 = v5;
  }
  else
  {
    v11 = *(_OWORD *)(v3 + 24);
    v12 = *(_OWORD *)(v3 + 8);
    v10 = *(_OWORD *)(v3 + 40);
    WTF::fastFree((WTF *)v3, a2);
    v8 = v10;
    v7 = v11;
    v6 = v12;
  }
  v13[0] = v6;
  v13[1] = v7;
  v13[2] = v8;
  return WebCore::convertDictionaryToJS(a1, *(_QWORD *)(v4 + 656), (uint64_t)v13);
}

unint64_t WebCore::jsDeviceMotionEvent_accelerationIncludingGravity(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v13[3];

  v3 = *(_QWORD *)(*(_QWORD *)(a2[3] + 72) + 16);
  if (!v3)
    return 2;
  v4 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v5 = (*(_DWORD *)v3)++;
  v6 = *(_OWORD *)(v3 + 8);
  v7 = *(_OWORD *)(v3 + 24);
  v8 = *(_OWORD *)(v3 + 40);
  if (v5)
  {
    *(_DWORD *)v3 = v5;
  }
  else
  {
    v11 = *(_OWORD *)(v3 + 24);
    v12 = *(_OWORD *)(v3 + 8);
    v10 = *(_OWORD *)(v3 + 40);
    WTF::fastFree((WTF *)v3, a2);
    v8 = v10;
    v7 = v11;
    v6 = v12;
  }
  v13[0] = v6;
  v13[1] = v7;
  v13[2] = v8;
  return WebCore::convertDictionaryToJS(a1, *(_QWORD *)(v4 + 656), (uint64_t)v13);
}

uint64_t WebCore::jsDeviceMotionEvent_rotationRate(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  int v4;
  double v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  size_t v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  unint64_t v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v29;
  unint64_t v30;
  int v31;
  int v32;
  uint64_t v33;

  v3 = *(_QWORD *)(*(_QWORD *)(a2[3] + 72) + 24);
  if (!v3)
    return 2;
  v4 = (*(_DWORD *)v3)++;
  v5 = *(double *)(v3 + 8);
  v6 = *(unsigned __int8 *)(v3 + 16);
  v7 = *(double *)(v3 + 24);
  v8 = *(unsigned __int8 *)(v3 + 32);
  v9 = *(double *)(v3 + 40);
  v10 = *(unsigned __int8 *)(v3 + 48);
  if (v4)
    *(_DWORD *)v3 = v4;
  else
    WTF::fastFree((WTF *)v3, a2);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v13 = 8 * *(unsigned __int8 *)(v12 + 14);
  v14 = JSC::allocateCell<JSC::JSFinalObject>(v11, v13 + 16);
  v15 = *(_DWORD *)(v12 + 8);
  *(_DWORD *)v14 = v12 >> 4;
  *(_DWORD *)(v14 + 4) = v15;
  *(_QWORD *)(v14 + 8) = 0;
  bzero((void *)(v14 + 16), v13);
  if (*(_BYTE *)(v11 + 755))
  {
    __dmb(0xAu);
    if (v6)
    {
LABEL_6:
      if ((*(_QWORD *)&v5 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
        && (v16 = (int)v5, v5 == (double)(int)v16)
        && ((*(_QWORD *)&v5 & 0x8000000000000000) == 0 || (_DWORD)v16))
      {
        v17 = v16 | 0xFFFE000000000000;
      }
      else
      {
        v17 = *(_QWORD *)&v5 + 0x2000000000000;
      }
      if (*(_DWORD *)(v11 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v11) & 1) != 0)
        return 0;
      WTF::AtomStringImpl::addLiteral();
      v18 = v29;
      v29 = 0;
      v30 = v14;
      v31 = -1;
      v32 = 0x1000000;
      v33 = 0;
      JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v11, (unint64_t)v18, v17, 0, (uint64_t)&v29);
      if (v18)
      {
        if (*(_DWORD *)v18 == 2)
          WTF::StringImpl::destroy(v18, v19);
        else
          *(_DWORD *)v18 -= 2;
      }
    }
  }
  else if (v6)
  {
    goto LABEL_6;
  }
  if (!v8)
    goto LABEL_27;
  if ((*(_QWORD *)&v7 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v20 = (int)v7, v7 == (double)(int)v20)
    && ((*(_QWORD *)&v7 & 0x8000000000000000) == 0 || (_DWORD)v20))
  {
    v21 = v20 | 0xFFFE000000000000;
  }
  else
  {
    v21 = *(_QWORD *)&v7 + 0x2000000000000;
  }
  if (*(_DWORD *)(v11 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v11) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v22 = v29;
  v29 = 0;
  v30 = v14;
  v31 = -1;
  v32 = 0x1000000;
  v33 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v11, (unint64_t)v22, v21, 0, (uint64_t)&v29);
  if (!v22)
  {
LABEL_27:
    if (!v10)
      return v14;
    goto LABEL_28;
  }
  if (*(_DWORD *)v22 != 2)
  {
    *(_DWORD *)v22 -= 2;
    goto LABEL_27;
  }
  WTF::StringImpl::destroy(v22, v23);
  if (!v10)
    return v14;
LABEL_28:
  if ((*(_QWORD *)&v9 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v24 = (int)v9, v9 == (double)(int)v24)
    && ((*(_QWORD *)&v9 & 0x8000000000000000) == 0 || (_DWORD)v24))
  {
    v25 = v24 | 0xFFFE000000000000;
  }
  else
  {
    v25 = *(_QWORD *)&v9 + 0x2000000000000;
  }
  if (*(_DWORD *)(v11 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v11) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v26 = v29;
  v29 = 0;
  v30 = v14;
  v31 = -1;
  v32 = 0x1000000;
  v33 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v11, (unint64_t)v26, v25, 0, (uint64_t)&v29);
  if (v26)
  {
    if (*(_DWORD *)v26 == 2)
      WTF::StringImpl::destroy(v26, v27);
    else
      *(_DWORD *)v26 -= 2;
  }
  return v14;
}

unint64_t WebCore::jsDeviceMotionEvent_interval(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 72);
  if (!*(_BYTE *)(v2 + 40))
    return 2;
  v3 = *(double *)(v2 + 32);
  if ((*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v4 = (int)v3, v3 == (double)(int)v4)
    && ((_DWORD)v4 || (*(_QWORD *)&v3 & 0x8000000000000000) == 0))
  {
    return v4 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

uint64_t WebCore::JSDeviceMotionEvent::subspaceForImpl(WebCore::JSDeviceMotionEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3592);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3592))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3592);
    *(_QWORD *)(v8 + 3592) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3592);
  *(_QWORD *)(v3 + 3592) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSDeviceOrientationEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDeviceOrientationEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDeviceOrientationEventPrototype::create(WebCore::JSDeviceOrientationEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<7u>(this, (uint64_t)&WebCore::JSDeviceOrientationEvent::s_info, &WebCore::JSDeviceOrientationEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeviceOrientationEvent>,(WebCore::DOMConstructorID)440>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  uint64_t v35;
  uint64_t v36;
  WTF::StringImpl *v37;
  int v38;
  WTF::StringImpl *v39;
  unint64_t v41;
  unint64_t v42;
  WTF::StringImpl *v43;
  unint64_t v44;
  int v45;
  int v46;
  uint64_t v47;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3520);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
  v7 = v6;
  LODWORD(v43) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v41 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v41);
    v5[2] = SlowCase + (int)v41;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v43, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeviceOrientationEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v42 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v42);
    v10[2848] = v2 + (int)v42;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v43 = 0;
  v44 = v2;
  v45 = -1;
  v46 = 0x1000000;
  v47 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v43);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v43);
  v14 = v43;
  v43 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v43 = 0;
  v44 = v2;
  v45 = -1;
  v46 = 0x1000000;
  v47 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v43);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (!v18)
    goto LABEL_21;
  v19 = *(_DWORD *)(v18 - 8);
  v20 = ((unint64_t)&WebCore::JSDeviceOrientationEvent::s_info
       + ~((_QWORD)&WebCore::JSDeviceOrientationEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSDeviceOrientationEvent::s_info
                                                                        + ~((_QWORD)&WebCore::JSDeviceOrientationEvent::s_info << 32)) >> 22);
  v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
  v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
  v23 = v19 & ((v22 >> 31) ^ v22);
  v24 = *(char ***)(v18 + 16 * v23);
  if (v24 != &WebCore::JSDeviceOrientationEvent::s_info)
  {
    v25 = 1;
    while (v24)
    {
      v23 = ((_DWORD)v23 + v25) & v19;
      v24 = *(char ***)(v18 + 16 * v23);
      ++v25;
      if (v24 == &WebCore::JSDeviceOrientationEvent::s_info)
        goto LABEL_20;
    }
    goto LABEL_21;
  }
LABEL_20:
  v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
  if (!v26)
  {
LABEL_21:
    v27 = (JSC::JSCell *)WebCore::JSEvent::prototype((WebCore::JSEvent *)a1, (JSC::VM *)a2, v16);
    Structure = WebCore::JSDeviceOrientationEventPrototype::createStructure((uint64_t *)a1, a2, v27);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v30 = (JSC::JSCell *)WebCore::JSDeviceOrientationEventPrototype::create((WebCore::JSDeviceOrientationEventPrototype *)a1, (JSC::VM *)a2, Structure, v29);
    v31 = WebCore::JSDeviceOrientationEvent::createStructure((uint64_t *)a1, a2, v30);
    v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSDeviceOrientationEvent::s_info);
  }
  v32 = *(_QWORD *)(v26 + 48);
  v43 = 0;
  v44 = v2;
  v45 = -1;
  v46 = 0x1000000;
  v47 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v43);
  if ((*(_BYTE *)((16 * *(unsigned int *)v2) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)v2, (JSC::VM *)a1);
  WTF::AtomStringImpl::addLiteral();
  v33 = v43;
  JSC::reifyStaticProperty((JSC::VM *)a1, (uint64_t)&WebCore::JSDeviceOrientationEvent::s_info, (unint64_t *)&v43, (uint64_t)&WebCore::JSDeviceOrientationEventConstructorTableValues, (unsigned __int8 *)v2);
  if (v33)
  {
    if (*(_DWORD *)v33 == 2)
      WTF::StringImpl::destroy(v33, v34);
    else
      *(_DWORD *)v33 -= 2;
  }
  v35 = WebCore::JSDOMGlobalObject::scriptExecutionContext((WebCore::JSDOMGlobalObject *)a2);
  if (v35 && *(_BYTE *)(v35 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194A48208);
  }
  v36 = v35 - 192;
  if (!v35)
    v36 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v36 + 680) + 704) & 0x4000000000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v37 = v43;
    v38 = *(_DWORD *)(a1 + 93124);
    *(_DWORD *)(a1 + 93124) = 1;
    LODWORD(v43) = -1;
    WORD2(v43) = 1;
    JSC::JSObject::deleteProperty();
    *(_DWORD *)(a1 + 93124) = v38;
    if (v37)
    {
      if (*(_DWORD *)v37 == 2)
        WTF::StringImpl::destroy(v37, v39);
      else
        *(_DWORD *)v37 -= 2;
    }
  }
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3520) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDeviceOrientationEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDeviceOrientationEventPrototype::s_info != (char **)(16
                                                                      * *(unsigned int *)(16
                                                                                        * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                        + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeviceOrientationEvent>,(WebCore::DOMConstructorID)440>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsDeviceOrientationEvent_alpha(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 72);
  if (!*(_BYTE *)(v2 + 16))
    return 2;
  v3 = *(double *)(v2 + 8);
  if ((*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v4 = (int)v3, v3 == (double)(int)v4)
    && ((_DWORD)v4 || (*(_QWORD *)&v3 & 0x8000000000000000) == 0))
  {
    return v4 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDeviceOrientationEvent_beta(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 72);
  if (!*(_BYTE *)(v2 + 32))
    return 2;
  v3 = *(double *)(v2 + 24);
  if ((*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v4 = (int)v3, v3 == (double)(int)v4)
    && ((_DWORD)v4 || (*(_QWORD *)&v3 & 0x8000000000000000) == 0))
  {
    return v4 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDeviceOrientationEvent_gamma(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 72);
  if (!*(_BYTE *)(v2 + 48))
    return 2;
  v3 = *(double *)(v2 + 40);
  if ((*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v4 = (int)v3, v3 == (double)(int)v4)
    && ((_DWORD)v4 || (*(_QWORD *)&v3 & 0x8000000000000000) == 0))
  {
    return v4 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDeviceOrientationEvent_webkitCompassHeading(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 72);
  if (!*(_BYTE *)(v2 + 64))
    return 2;
  v3 = *(double *)(v2 + 56);
  if ((*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v4 = (int)v3, v3 == (double)(int)v4)
    && ((_DWORD)v4 || (*(_QWORD *)&v3 & 0x8000000000000000) == 0))
  {
    return v4 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

unint64_t WebCore::jsDeviceOrientationEvent_webkitCompassAccuracy(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 72);
  if (!*(_BYTE *)(v2 + 80))
    return 2;
  v3 = *(double *)(v2 + 72);
  if ((*(_QWORD *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v4 = (int)v3, v3 == (double)(int)v4)
    && ((_DWORD)v4 || (*(_QWORD *)&v3 & 0x8000000000000000) == 0))
  {
    return v4 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v3 + 0x2000000000000;
  }
}

uint64_t WebCore::JSDeviceOrientationEvent::subspaceForImpl(WebCore::JSDeviceOrientationEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3600);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3600))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3600);
    *(_QWORD *)(v8 + 3600) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3600);
  *(_QWORD *)(v3 + 3600) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::convertEnumerationToJS<WebCore::DeviceOrientationOrMotionPermissionState>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)(a1 + 41968);
  {
    WebCore::convertEnumerationToString(WebCore::DeviceOrientationOrMotionPermissionState)::$_0::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::DeviceOrientationOrMotionPermissionState)::$_1::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::DeviceOrientationOrMotionPermissionState)::values[0] = (uint64_t)&WebCore::convertEnumerationToString(WebCore::DeviceOrientationOrMotionPermissionState)::$_0::operator() const(void)::impl;
    *(_QWORD *)algn_1EE2F4588 = &WebCore::convertEnumerationToString(WebCore::DeviceOrientationOrMotionPermissionState)::$_1::operator() const(void)::impl;
  }
  v3 = WebCore::convertEnumerationToString(WebCore::DeviceOrientationOrMotionPermissionState)::values[a2];
  if (!v3)
    return *v2;
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  *(_DWORD *)v3 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_6:
      v6 = *(_QWORD *)(a1 + 64760);
      if (!v6 || v3 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v3 - 2;
      }
      goto LABEL_9;
    }
    v8 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_6;
      v9 = v10;
    }
    v6 = *(_QWORD *)(a1 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *v2;
  }
LABEL_9:
  if (v4)
    *(_DWORD *)v3 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v3, a2);
  return v6;
}

uint64_t WebCore::JSDigitalCredential::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSBasicCredential::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSBasicCredential::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSBasicCredential::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDigitalCredentialPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDigitalCredentialPrototype::create(WebCore::JSDigitalCredentialPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSDigitalCredential::s_info, &WebCore::JSDigitalCredentialPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDigitalCredential>,(WebCore::DOMConstructorID)106>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 848);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSBasicCredential>,(WebCore::DOMConstructorID)73>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSDigitalCredential>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSDigitalCredential::s_info
         + ~((_QWORD)&WebCore::JSDigitalCredential::s_info << 32)) ^ (((unint64_t)&WebCore::JSDigitalCredential::s_info
                                                                     + ~((_QWORD)&WebCore::JSDigitalCredential::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSDigitalCredential::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSDigitalCredential::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSBasicCredential::prototype((WebCore::JSBasicCredential *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSDigitalCredentialPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSDigitalCredentialPrototype::create((WebCore::JSDigitalCredentialPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSDigitalCredential::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSDigitalCredential::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 848) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsDigitalCredentialConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDigitalCredentialPrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDigitalCredential>,(WebCore::DOMConstructorID)106>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsDigitalCredential_data(JSC::JSGlobalObject *a1, uint64_t a2)
{
  JSC::ArrayBufferView *v3;

  v3 = *(JSC::ArrayBufferView **)(*(_QWORD *)(a2 + 24) + 40);
  if (v3)
    return JSC::ArrayBufferView::wrap(v3, a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  else
    return 2;
}

uint64_t WebCore::jsDigitalCredential_protocol(uint64_t a1, uint64_t a2)
{
  return WebCore::convertEnumerationToJS<WebCore::IdentityCredentialProtocol>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*(unsigned __int8 *)(*(_QWORD *)(a2 + 24) + 32));
}

uint64_t WebCore::JSDigitalCredential::subspaceForImpl(WebCore::JSDigitalCredential *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 872);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 872))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 872);
    *(_QWORD *)(v8 + 872) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 872);
  *(_QWORD *)(v3 + 872) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::convertDictionary<WebCore::DigitalCredentialRequestOptions>@<X0>(JSC::JSCell *this@<X1>, JSC::VM **a2@<X0>, uint64_t a3@<X8>)
{
  uint64_t Object;
  JSC::Structure *v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  uint64_t result;
  JSC::VM *v10;
  JSValue v11;
  int i;
  unsigned int v13;
  JSC::JSCell *IndexQuickly;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  JSC::JSCell *v21;
  uint64_t v22;
  unint64_t v23;
  WTF *v24;
  uint64_t v25;
  void *v26;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  WTF::StringImpl *v35[2];
  int v36;
  JSC::VM *v37[2];
  WTF *v38;
  uint64_t v39;

  v37[0] = a2[7];
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
    goto LABEL_9;
  if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
  {
    result = JSC::throwTypeError();
    goto LABEL_10;
  }
  v6 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v8 = JSC::JSObject::get(v6, (JSC::JSGlobalObject *)a2, (unint64_t)v35[0]);
  if (v35[0])
  {
    if (*(_DWORD *)v35[0] == 2)
      WTF::StringImpl::destroy(v35[0], v7);
    else
      *(_DWORD *)v35[0] -= 2;
  }
  if (*((_DWORD *)v37[0] + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v37[0]);
    if ((_DWORD)result)
      goto LABEL_10;
  }
  if (v8 == 10)
  {
LABEL_9:
    result = (uint64_t)WebCore::throwRequiredMemberTypeError((int)a2, (int)v37, "providers", 10, "DigitalCredentialRequestOptions", 32, "sequence", 9);
LABEL_10:
    *(_DWORD *)(a3 + 16) = 1;
    return result;
  }
  v10 = a2[7];
  v37[1] = v10;
  if ((v8 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v8 + 5) <= 0x16u)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    JSC::throwTypeError();
    v16 = v35[0];
    v35[0] = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v15);
      else
        *(_DWORD *)v16 -= 2;
    }
    v17 = 1;
    v36 = 1;
    v18 = 1;
    goto LABEL_50;
  }
  v38 = 0;
  v39 = 0;
  if (JSC::getIterationMode() == 2)
  {
    for (i = 1; ; ++i)
    {
      v13 = (*(_BYTE *)(v8 + 4) & 0xE) != 0 ? *(_DWORD *)(*(_QWORD *)(v8 + 8) - 8) : 0;
      if (i - 1 >= v13)
        break;
      IndexQuickly = (JSC::JSCell *)JSC::JSObject::tryGetIndexQuickly((JSC::JSObject *)v8, i - 1, 0);
      if (!IndexQuickly)
        IndexQuickly = (JSC::JSCell *)JSC::JSObject::get((JSC::JSObject *)v8, (JSC::JSGlobalObject *)a2, (i - 1));
      if (*((_DWORD *)v10 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) != 0)
        break;
      WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::IdentityRequestProvider>>::convert(a2, IndexQuickly, (uint64_t)&v38);
      if (*((_QWORD *)v10 + 2))
      {
        v22 = JSC::JSArrayIterator::create();
        v23 = i | 0xFFFE000000000000;
        if (i < 0)
          v23 = COERCE__INT64((double)i) + 0x2000000000000;
        *(_QWORD *)(v22 + 16) = v23;
        goto LABEL_46;
      }
    }
  }
  else
  {
    JSC::iteratorForIterable((JSC *)a2, (JSC::JSGlobalObject *)v8, v11);
    if (!*((_DWORD *)v10 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) == 0)
    {
      while (1)
      {
        v19 = JSC::iteratorStep();
        if (*((_QWORD *)v10 + 2) || v19 == 6)
          break;
        v21 = (JSC::JSCell *)JSC::iteratorValue();
        if (*((_DWORD *)v10 + 20))
        {
          if ((JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) != 0)
            break;
        }
        WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::IdentityRequestProvider>>::convert(a2, v21, (uint64_t)&v38);
        if (*((_QWORD *)v10 + 2))
        {
LABEL_46:
          JSC::iteratorClose();
          break;
        }
      }
    }
  }
  if (*((_DWORD *)v10 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v10);
    v24 = v38;
    if (hasExceptionsAfterHandlingTraps)
    {
      v36 = 1;
      if (HIDWORD(v39))
      {
        v28 = 16 * HIDWORD(v39);
        v29 = (uint64_t *)((char *)v38 + 8);
        do
        {
          v30 = *v29;
          if (*v29)
          {
            v31 = (uint64_t *)(v30 - 16);
            v32 = *(_QWORD *)(((v30 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
            v33 = *(uint64_t **)(v30 - 8);
            if (v33)
            {
              v34 = *v31;
              *v33 = *v31;
              *(_QWORD *)(v34 + 8) = v33;
              *v31 = 0;
              v31[1] = 0;
            }
            *v31 = *(_QWORD *)(v32 + 40);
            *(_QWORD *)(v32 + 40) = v31;
            *v29 = 0;
          }
          v29 += 2;
          v28 -= 16;
        }
        while (v28);
      }
      if (v24)
        WTF::fastFree(v24, v26);
      v18 = 1;
      v17 = 1;
      goto LABEL_50;
    }
  }
  else
  {
    v24 = v38;
  }
  v17 = 0;
  v18 = 0;
  v36 = 0;
  v25 = v39;
  v35[0] = 0;
  v35[1] = 0;
  *(_QWORD *)a3 = v24;
  *(_QWORD *)(a3 + 8) = v25;
LABEL_50:
  *(_DWORD *)(a3 + 16) = v17;
  return ((uint64_t (*)(WTF **, WTF::StringImpl **))off_1E3266EB0[v18])(&v38, v35);
}

uint64_t WebCore::convertEnumerationToJS<WebCore::DistanceModelType>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)(a1 + 41968);
  {
    WebCore::convertEnumerationToString(WebCore::DistanceModelType)::$_0::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::DistanceModelType)::$_1::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::DistanceModelType)::values[0] = (uint64_t)&WebCore::convertEnumerationToString(WebCore::DistanceModelType)::$_0::operator() const(void)::impl;
    unk_1EE2F45A0 = &WebCore::convertEnumerationToString(WebCore::DistanceModelType)::$_1::operator() const(void)::impl;
    WebCore::convertEnumerationToString(WebCore::DistanceModelType)::$_2::operator() const(void)::impl += 2;
    qword_1EE2F45A8 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::DistanceModelType)::$_2::operator() const(void)::impl;
  }
  v3 = WebCore::convertEnumerationToString(WebCore::DistanceModelType)::values[(int)a2];
  if (!v3)
    return *v2;
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  *(_DWORD *)v3 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_6:
      v6 = *(_QWORD *)(a1 + 64760);
      if (!v6 || v3 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v3 - 2;
      }
      goto LABEL_9;
    }
    v8 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_6;
      v9 = v10;
    }
    v6 = *(_QWORD *)(a1 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *v2;
  }
LABEL_9:
  if (v4)
    *(_DWORD *)v3 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v3, a2);
  return v6;
}

uint64_t WebCore::parseEnumeration<WebCore::DistanceModelType>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  int v5;
  const char *v6;
  int v7;
  uint64_t v9;
  char **v12;
  uint16x8_t v13;
  uint16x8_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v21;
  unint64_t v22;

  v3 = a1;
  v22 = this;
  if ((this & 0xFFFE000000000002) == 0 && *(_BYTE *)(this + 5) == 2)
  {
    v4 = *(_QWORD *)(this + 8);
    if ((v4 & 1) != 0)
    {
      v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
      if (!v4)
      {
LABEL_6:
        if (v4)
          goto LABEL_7;
        return 0;
      }
    }
    else if (!v4)
    {
      goto LABEL_6;
    }
    *(_DWORD *)v4 += 2;
    goto LABEL_6;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v22, a1);
  v4 = v21;
  if (!v21)
    return 0;
LABEL_7:
  v5 = *(_DWORD *)(v4 + 16);
  v6 = *(const char **)(v4 + 8);
  v7 = *(_DWORD *)(v4 + 4);
  if (v6 != "exponential" && v7 == 11)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 101 || *(_QWORD *)(v6 + 1) != 0x69746E656E6F7078 || *(_QWORD *)(v6 + 3) != 0x6C6169746E656E6FLL)
        goto LABEL_16;
    }
    else
    {
      if (*(_WORD *)v6 != 101)
        goto LABEL_16;
      v13 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v6 + 2), (int16x8_t)xmmword_1968BD2C0);
      v13.i16[0] = vminvq_u16(v13);
      if (!v13.i32[0])
        goto LABEL_16;
      v14 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v6 + 6), (int16x8_t)xmmword_1968BD2D0);
      v14.i16[0] = vminvq_u16(v14);
      if (!v14.i32[0])
        goto LABEL_16;
    }
    goto LABEL_38;
  }
  if (v6 == "exponential" && v7 == 11)
  {
LABEL_38:
    v12 = &WebCore::parseEnumerationFromString<WebCore::DistanceModelType>(WTF::String const&)::mappings;
    goto LABEL_39;
  }
  if (v6 != "inverse" && v7 == 7)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 105 || *(_DWORD *)(v6 + 1) != 1919252078 || *(_DWORD *)(v6 + 3) != 1702064741)
        goto LABEL_16;
    }
    else
    {
      if (*(_WORD *)v6 != 105)
        goto LABEL_16;
      v16 = *(_QWORD *)(v6 + 2);
      v17 = *(_QWORD *)(v6 + 6);
      if (v16 != 0x7200650076006ELL || v17 != 0x65007300720065)
        goto LABEL_16;
    }
  }
  else if (v6 != "inverse" || v7 != 7)
  {
    if (v6 == "linear" || v7 != 6)
    {
      if (v7 == 6 && v6 == "linear")
        goto LABEL_59;
    }
    else if ((v5 & 4) != 0)
    {
      if (*v6 == 108 && *(_DWORD *)(v6 + 1) == 1634037353 && *(_DWORD *)(v6 + 2) == 1918985582)
      {
LABEL_59:
        v12 = &off_1E3259880;
        goto LABEL_39;
      }
    }
    else if (*(_WORD *)v6 == 108
           && *(_QWORD *)(v6 + 4) == 0x7200610065006ELL
           && *(_QWORD *)(v6 + 2) == 0x610065006E0069)
    {
      goto LABEL_59;
    }
LABEL_16:
    v9 = 0;
    goto LABEL_40;
  }
  v12 = &off_1E3259868;
LABEL_39:
  v9 = *((unsigned int *)v12 + 4) | 0x100000000;
LABEL_40:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v9;
}

uint64_t WebCore::JSDocument::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, uint64_t a2)
{
  WebCore::JSEventTarget::visitOutputConstraints<JSC::AbstractSlotVisitor>(a1, a2);
  WebCore::JSNode::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
  return WebCore::JSDocument::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSDocument>::construct(JSC *a1, uint64_t a2)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  JSCell *v8;
  JSC::JSCell *v9;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v11;
  JSC::JSGlobalObject *v12;
  WebCore::JSNode *v13;
  JSC::VM *FunctionRealm;
  JSC::JSObject *v15;
  JSC::Structure *v16;
  unint64_t SubclassStructure;
  WebCore::Node *v18;
  WebCore::Node *v20;
  JSC::VM *v21;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v21 = v4;
  v5 = *(_QWORD *)(a2 + 24);
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(v5 + 40));
  if (!v6)
    return (JSCell *)WebCore::throwConstructorScriptExecutionContextUnavailableError(a1, &v21, (uint64_t)"Document", 9);
  if (*(_BYTE *)(v6 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194A49BFCLL);
  }
  WebCore::Document::create((WebCore::Document *)(v6 - 192), (uint64_t)&v20);
  v8 = (JSCell *)WebCore::toJSNewlyCreated((uint64_t)a1, *(JSC::VM **)(v5 + 40), &v20);
  v9 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v9 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v9);
    if (Object)
    {
      v12 = Object;
      if (Object != *(JSC::JSGlobalObject **)(a2 + 24))
      {
        v13 = (WebCore::JSNode *)*((_QWORD *)a1 + 7);
        FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, Object, v11);
        if (!*((_DWORD *)v13 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v13) & 1) == 0)
        {
          v15 = (JSC::JSObject *)WebCore::getDOMStructure<WebCore::JSDocument>(v13, FunctionRealm);
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v12, v15, v16);
          if (!*((_DWORD *)v13 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v13) & 1) == 0)
            JSC::JSObject::setStructure(v8, v13, SubclassStructure);
        }
      }
    }
  }
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    v8 = 0;
  v18 = v20;
  v20 = 0;
  if (v18)
  {
    if (*((_DWORD *)v18 + 6) == 2)
    {
      if ((*((_WORD *)v18 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v18, v7);
    }
    else
    {
      *((_DWORD *)v18 + 6) -= 2;
    }
  }
  return v8;
}

uint64_t *WTF::Ref<WebCore::Document,WTF::RawPtrTraits<WebCore::Document>,WTF::DefaultRefDerefTraits<WebCore::Document>>::~Ref(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*(_DWORD *)(v2 + 24) == 2)
    {
      if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v2);
    }
    else
    {
      *(_DWORD *)(v2 + 24) -= 2;
    }
  }
  return a1;
}

uint64_t WebCore::JSDOMConstructor<WebCore::JSDocument>::initializeProperties(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  WebCore::JSDOMGlobalObject *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  int *v15;
  WTF::StringImpl *v16;
  int v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000000, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v19);
  v9 = v19;
  v19 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v12 = WebCore::JSDocument::prototype((WebCore::JSDocument *)a2, a3, v11);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, v12, 14);
  JSC::reifyStaticProperties<1u>((JSC::VM *)a2, (uint64_t)&WebCore::JSDocument::s_info, (uint64_t)&WebCore::JSDocumentConstructorTableValues, (JSC::JSObject *)a1);
  result = WebCore::JSDOMGlobalObject::scriptExecutionContext(a3);
  if (result && *(_BYTE *)(result + 274))
  {
    result = 105;
    __break(0xC471u);
  }
  else
  {
    v14 = result - 192;
    if (!result)
      v14 = 0;
    if ((*(_QWORD *)(*(_QWORD *)(v14 + 680) + 672) & 0x10000000000) == 0)
    {
      v15 = (int *)(a2 + 93124);
      WTF::AtomStringImpl::addLiteral();
      v16 = v19;
      v17 = *v15;
      *v15 = 1;
      LODWORD(v19) = -1;
      WORD2(v19) = 1;
      result = JSC::JSObject::deleteProperty();
      *v15 = v17;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          return WTF::StringImpl::destroy(v16, v18);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSDocument::visitChildren(WebCore::JSDocument *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    WebCore::JSNode::visitChildren(this, a2, a3);
    result = WebCore::JSDocument::visitAdditionalChildren<JSC::AbstractSlotVisitor>((uint64_t)this, (uint64_t)a2);
    if ((*((_QWORD *)this + 4) & 0xFFFE000000000002) == 0)
      result = (*(uint64_t (**)(JSC::JSCell *))(*(_QWORD *)a2 + 24))(a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSDocument::JSDocument(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

{
  uint64_t v4;
  uint64_t result;

  v4 = *a4;
  *a4 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(a1, a2);
  *(_QWORD *)(result + 24) = v4;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t WebCore::JSDocument::protectedWrapped@<X0>(uint64_t this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(this + 24);
  *(_DWORD *)(v2 + 24) += 2;
  *a2 = v2;
  return this;
}

unint64_t WebCore::JSDocument::createPrototype(WebCore::JSDocument *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  JSC::JSCell *v5;
  unint64_t Structure;
  JSC::Structure *v7;

  v5 = (JSC::JSCell *)WebCore::JSNode::prototype(this, a2, a3);
  Structure = WebCore::JSDocumentPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v5);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSDocumentPrototype::create(this, a2, Structure, v7);
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDocument>,(WebCore::DOMConstructorID)441>(uint64_t a1, uint64_t a2)
{
  unint64_t result;
  JSC::JSCell *v5;
  uint64_t Structure;
  JSC::Heap *v7;
  unint64_t v8;

  result = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3528);
  if (!result)
  {
    v5 = (JSC::JSCell *)WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNode>,(WebCore::DOMConstructorID)466>(a1, a2);
    Structure = WebCore::JSDOMConstructor<WebCore::JSDocument>::createStructure((uint64_t *)a1, a2, v5);
    result = WebCore::JSDOMConstructor<WebCore::JSDocument>::create(a1, Structure, (JSC::VM *)a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3528) = result;
    if (result)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
      {
        v7 = (JSC::Heap *)(a1 + 192);
        v8 = result;
        JSC::Heap::writeBarrierSlowPath(v7, (const JSCell *)a2);
        return v8;
      }
    }
  }
  return result;
}

unint64_t WebCore::jsDocumentConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSDocumentPrototype::s_info != (char **)(16
                                                        * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDocument>,(WebCore::DOMConstructorID)441>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsDocument_fragmentDirective(uint64_t a1, uint64_t a2)
{
  WTF *v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *(WTF **)(*(_QWORD *)(a2 + 24) + 3080);
  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  ++*((_DWORD *)v2 + 2);
  v4 = WebCore::wrap<WebCore::FragmentDirective>(a1, v3, v2);
  if (*((_DWORD *)v2 + 2) == 1)
    (*(void (**)(WTF *))(*(_QWORD *)v2 + 8))(v2);
  else
    --*((_DWORD *)v2 + 2);
  return v4;
}

uint64_t WebCore::jsDocument_implementation(uint64_t a1, JSC::JSGlobalObject **a2, WebCore::JSDocument *a3)
{
  return WebCore::jsDocument_implementationGetter((WebCore *)*(unsigned int *)a2, a2[3], a3);
}

unint64_t WebCore::jsDocument_URL(uint64_t a1, uint64_t a2)
{
  JSC::VM *v3;
  const WTF::String *v4;

  v3 = (JSC::VM *)WebCore::Document::urlForBindings(*(_QWORD *)(a2 + 24));
  return JSC::jsOwnedString(*(JSC **)(a1 + 56), v3, v4);
}

unint64_t WebCore::jsDocument_documentURI(uint64_t a1, uint64_t a2)
{
  JSC::VM *v3;
  const WTF::String *v4;

  v3 = (JSC::VM *)WebCore::Document::urlForBindings(*(_QWORD *)(a2 + 24));
  return JSC::jsOwnedString(*(JSC **)(a1 + 56), v3, v4);
}

uint64_t WebCore::jsDocument_characterSet(uint64_t a1, uint64_t *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  unsigned int v10;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;

  WebCore::Document::encoding(a2[3], a2, &v13);
  v4 = v13;
  if (v13)
  {
    v5 = *(_DWORD *)v13;
    *(_DWORD *)v13 += 2;
    v12 = v4;
    if (v5)
      *(_DWORD *)v4 = v5;
    else
      WTF::StringImpl::destroy(v4, v3);
    v6 = *(_QWORD *)(a1 + 56);
  }
  else
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v4 = v12;
    v6 = *(_QWORD *)(a1 + 56);
    if (!v12)
      goto LABEL_23;
  }
  v7 = *((_DWORD *)v4 + 1);
  if (!v7)
  {
LABEL_23:
    v8 = *(_QWORD *)(v6 + 41968);
LABEL_10:
    if (!v4)
      return v8;
    goto LABEL_16;
  }
  if (v7 == 1)
  {
    v9 = (unsigned __int8 *)*((_QWORD *)v4 + 1);
    if ((*((_BYTE *)v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_7;
      v10 = v10;
    }
    v8 = *(_QWORD *)(v6 + 8 * v10 + 42216);
    goto LABEL_16;
  }
LABEL_7:
  v8 = *(_QWORD *)(v6 + 64760);
  if (!v8 || v4 != *(WTF::StringImpl **)(v8 + 8))
  {
    v8 = JSC::jsStringWithCacheSlowCase();
    v4 = v12;
    goto LABEL_10;
  }
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v8;
}

uint64_t WebCore::jsDocument_charset(uint64_t a1, uint64_t *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  unsigned int v10;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;

  WebCore::Document::encoding(a2[3], a2, &v13);
  v4 = v13;
  if (v13)
  {
    v5 = *(_DWORD *)v13;
    *(_DWORD *)v13 += 2;
    v12 = v4;
    if (v5)
      *(_DWORD *)v4 = v5;
    else
      WTF::StringImpl::destroy(v4, v3);
    v6 = *(_QWORD *)(a1 + 56);
  }
  else
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v4 = v12;
    v6 = *(_QWORD *)(a1 + 56);
    if (!v12)
      goto LABEL_23;
  }
  v7 = *((_DWORD *)v4 + 1);
  if (!v7)
  {
LABEL_23:
    v8 = *(_QWORD *)(v6 + 41968);
LABEL_10:
    if (!v4)
      return v8;
    goto LABEL_16;
  }
  if (v7 == 1)
  {
    v9 = (unsigned __int8 *)*((_QWORD *)v4 + 1);
    if ((*((_BYTE *)v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_7;
      v10 = v10;
    }
    v8 = *(_QWORD *)(v6 + 8 * v10 + 42216);
    goto LABEL_16;
  }
LABEL_7:
  v8 = *(_QWORD *)(v6 + 64760);
  if (!v8 || v4 != *(WTF::StringImpl **)(v8 + 8))
  {
    v8 = JSC::jsStringWithCacheSlowCase();
    v4 = v12;
    goto LABEL_10;
  }
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v8;
}

uint64_t WebCore::jsDocument_inputEncoding(uint64_t a1, uint64_t *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  unsigned int v10;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;

  WebCore::Document::encoding(a2[3], a2, &v13);
  v4 = v13;
  if (v13)
  {
    v5 = *(_DWORD *)v13;
    *(_DWORD *)v13 += 2;
    v12 = v4;
    if (v5)
      *(_DWORD *)v4 = v5;
    else
      WTF::StringImpl::destroy(v4, v3);
    v6 = *(_QWORD *)(a1 + 56);
  }
  else
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v4 = v12;
    v6 = *(_QWORD *)(a1 + 56);
    if (!v12)
      goto LABEL_23;
  }
  v7 = *((_DWORD *)v4 + 1);
  if (!v7)
  {
LABEL_23:
    v8 = *(_QWORD *)(v6 + 41968);
LABEL_10:
    if (!v4)
      return v8;
    goto LABEL_16;
  }
  if (v7 == 1)
  {
    v9 = (unsigned __int8 *)*((_QWORD *)v4 + 1);
    if ((*((_BYTE *)v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_7;
      v10 = v10;
    }
    v8 = *(_QWORD *)(v6 + 8 * v10 + 42216);
    goto LABEL_16;
  }
LABEL_7:
  v8 = *(_QWORD *)(v6 + 64760);
  if (!v8 || v4 != *(WTF::StringImpl **)(v8 + 8))
  {
    v8 = JSC::jsStringWithCacheSlowCase();
    v4 = v12;
    goto LABEL_10;
  }
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v8;
}

uint64_t WebCore::jsDocument_contentType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::Document::contentType(*(_QWORD *)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

uint64_t WebCore::jsDocument_doctype(int a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 80);
  if (!v2)
    return 2;
  while ((*(_WORD *)(v2 + 28) & 0xF000) != 0xA000)
  {
    v2 = *(_QWORD *)(v2 + 56);
    if (!v2)
      return 2;
  }
  return WebCore::wrap<WebCore::DocumentType>(a1, *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v2);
}

unint64_t WebCore::jsDocument_documentElement(WebCore *a1, uint64_t a2, WebCore::Element *a3)
{
  WebCore::JSDOMGlobalObject *v4;

  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = *(WebCore::JSDOMGlobalObject **)(*(_QWORD *)(a2 + 24) + 1272);
  if (v4)
    return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v4, a3);
  else
    return 2;
}

uint64_t WebCore::jsDocument_xmlEncoding(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 1696);
  if (!v2)
    return 2;
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_DWORD *)v2;
  v5 = *(_DWORD *)(v2 + 4);
  *(_DWORD *)v2 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_4:
      v6 = *(_QWORD *)(v3 + 64760);
      if (!v6 || v2 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v2 - 2;
      }
      goto LABEL_7;
    }
    v8 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v6 = *(_QWORD *)(v3 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *(_QWORD *)(v3 + 41968);
  }
LABEL_7:
  if (v4)
    *(_DWORD *)v2 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v2, a2);
  return v6;
}

uint64_t WebCore::jsDocument_xmlVersion(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 1704);
  if (!v2)
    return 2;
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_DWORD *)v2;
  v5 = *(_DWORD *)(v2 + 4);
  *(_DWORD *)v2 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_4:
      v6 = *(_QWORD *)(v3 + 64760);
      if (!v6 || v2 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v2 - 2;
      }
      goto LABEL_7;
    }
    v8 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v6 = *(_QWORD *)(v3 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *(_QWORD *)(v3 + 41968);
  }
LABEL_7:
  if (v4)
    *(_DWORD *)v2 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v2, a2);
  return v6;
}

BOOL WebCore::setJSDocument_xmlVersion(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  const WTF::String *v3;
  _BOOL8 v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *v7;
  int v8;
  uint64_t v9;
  WTF::StringImpl *v10;

  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *((_QWORD *)a1 + 7);
  WebCore::Converter<WebCore::IDLNullable<WebCore::IDLDOMString>>::convert(a1, (unint64_t)this, (uint64_t)&v7);
  v4 = v8 == 0;
  if (!v8)
  {
    v5 = v7;
    v7 = 0;
    v10 = v5;
    WebCore::XMLDocumentParser::supportsXMLVersion((WebCore::XMLDocumentParser *)&v10, v3);
  }
  if (v8 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A258[v8])(&v10, &v7);
  return v4;
}

uint64_t WebCore::jsDocument_xmlStandalone(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(*(_QWORD *)(a2 + 24) + 3369) == 1)
    return 7;
  else
    return 6;
}

BOOL WebCore::setJSDocument_xmlStandalone(uint64_t a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  double v5;
  _BOOL4 v6;
  uint64_t v7;
  _BOOL8 result;
  char v9;
  BOOL v10;
  int v11;
  uint64_t v12;
  int *v13;
  int v14;

  v4 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v10 = (_DWORD)a3 == 0;
    goto LABEL_31;
  }
  *(_QWORD *)&v5 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v6 = a3 == 7;
      goto LABEL_7;
    }
    v11 = *(unsigned __int8 *)(a3 + 5);
    if (v11 == 3)
    {
      v14 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v11 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v6 = 1;
          goto LABEL_7;
        }
        v10 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_31;
      }
      v12 = *(_QWORD *)(a3 + 8);
      if ((v12 & 1) != 0)
        v13 = (int *)(a3 + 16);
      else
        v13 = (int *)(v12 + 4);
      v14 = *v13;
    }
    v10 = v14 == 0;
LABEL_31:
    v6 = !v10;
    goto LABEL_7;
  }
  v6 = v5 > 0.0 || v5 < 0.0;
LABEL_7:
  v7 = *(_QWORD *)(a2 + 24);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  result = 1;
  if (v6)
    v9 = 1;
  else
    v9 = 2;
  *(_BYTE *)(v7 + 3369) = v9;
  return result;
}

uint64_t WebCore::jsDocument_pictureInPictureEnabled()
{
  int v0;

  if (HIBYTE(WebCore::isPictureInPictureSupported))
    v0 = (_BYTE)WebCore::isPictureInPictureSupported != 0;
  else
    v0 = -[objc_class isPictureInPictureSupported](getAVPictureInPictureControllerClass(), "isPictureInPictureSupported");
  if (v0)
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsDocument_timeline(int a1, uint64_t a2)
{
  WebCore::Document *v3;
  JSC::VM *v4;
  uint64_t v5;
  _DWORD *v7;

  v3 = *(WebCore::Document **)(a2 + 24);
  v4 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v5 = *((_QWORD *)v3 + 366);
  if (!v5)
  {
    v5 = WTF::fastMalloc((WTF *)0xA0);
    WebCore::DocumentTimeline::DocumentTimeline(v5, v3, 0.0);
    v7 = (_DWORD *)*((_QWORD *)v3 + 366);
    *((_QWORD *)v3 + 366) = v5;
    if (v7)
    {
      if (v7[2] == 1)
      {
        (*(void (**)(_DWORD *))(*(_QWORD *)v7 + 8))(v7);
        v5 = *((_QWORD *)v3 + 366);
      }
      else
      {
        --v7[2];
      }
    }
  }
  return WebCore::wrap<WebCore::DocumentTimeline>(a1, v4, v5);
}

uint64_t WebCore::jsDocument_fonts(int a1, uint64_t a2)
{
  JSC::VM *v3;
  WebCore::FontFaceSet *v4;
  void *v5;
  uint64_t v6;
  bmalloc::api *v8;
  void *v9;
  WebCore::FontFaceSet *v10;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::Document::fonts(*(_QWORD *)(a2 + 24), &v10);
  v4 = v10;
  v6 = WebCore::wrap<WebCore::FontFaceSet>(a1, v3, (uint64_t)v10);
  if (*((_DWORD *)v4 + 4) == 1)
  {
    WebCore::FontFaceSet::~FontFaceSet(v4, v5);
    bmalloc::api::isoDeallocate(v8, v9);
  }
  else
  {
    --*((_DWORD *)v4 + 4);
  }
  return v6;
}

unint64_t WebCore::jsDocument_scrollingElement(WebCore *a1, uint64_t a2)
{
  JSC::JSGlobalObject *v3;
  WebCore::JSDOMGlobalObject *v4;
  WebCore::Element *v5;

  v3 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = (WebCore::JSDOMGlobalObject *)WebCore::Document::scrollingElementForAPI(*(WebCore::Document **)(a2 + 24));
  if (v4)
    return WebCore::toJS(a1, v3, v4, v5);
  else
    return 2;
}

uint64_t WebCore::jsDocument_fullscreenEnabled(uint64_t a1, WebCore::FullscreenManager ***a2)
{
  if (WebCore::DocumentFullscreen::fullscreenEnabled(a2[3], (WebCore::Document *)a2))
    return 7;
  else
    return 6;
}

BOOL WebCore::setJSDocument_fullscreenEnabled(uint64_t a1, uint64_t a2)
{
  return (a2 & 0xFFFE000000000002) == 0 && *(unsigned __int8 *)(a2 + 5) == 249
      || JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsDocument_fullscreen(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  void *v8;
  WebCore::FullscreenManager *v9;
  uint64_t v10;
  void *v11;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(v2 + 1992);
  if (!v3)
  {
    v5 = WTF::fastMalloc((WTF *)0x90);
    *(_QWORD *)v5 = 0;
    *(_DWORD *)(v5 + 8) = 0;
    v6 = (unsigned int *)WTF::WeakPtr<WebCore::LocalDOMWindow,WebCore::WeakPtrImplWithEventTargetData,WTF::RawPtrTraits<WebCore::WeakPtrImplWithEventTargetData>>::implForObject<WebCore::LocalDOMWindow>(v2);
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 + 1, v6));
    *(_QWORD *)(v5 + 24) = 0;
    *(_QWORD *)(v5 + 32) = 0;
    *(_QWORD *)(v5 + 16) = v6;
    *(_BYTE *)(v5 + 40) = 0;
    *(_OWORD *)(v5 + 48) = 0u;
    *(_OWORD *)(v5 + 64) = 0u;
    *(_OWORD *)(v5 + 80) = 0u;
    *(_OWORD *)(v5 + 96) = 0u;
    *(_OWORD *)(v5 + 112) = 0u;
    *(_DWORD *)(v5 + 127) = 0;
    *(_QWORD *)(v5 + 136) = WTF::cryptographicallyRandomNumber<unsigned long long>();
    v9 = *(WebCore::FullscreenManager **)(v2 + 1992);
    *(_QWORD *)(v2 + 1992) = v5;
    if (v9)
    {
      WebCore::FullscreenManager::~FullscreenManager(v9, v8);
      if (*(_DWORD *)(v10 + 8))
      {
        *(_OWORD *)(v10 + 112) = 0u;
        *(_OWORD *)(v10 + 128) = 0u;
        *(_OWORD *)(v10 + 80) = 0u;
        *(_OWORD *)(v10 + 96) = 0u;
        *(_OWORD *)(v10 + 48) = 0u;
        *(_OWORD *)(v10 + 64) = 0u;
        *(_OWORD *)(v10 + 16) = 0u;
        *(_OWORD *)(v10 + 32) = 0u;
        *(_OWORD *)v10 = 0u;
      }
      else
      {
        WTF::fastFree((WTF *)v10, v11);
      }
    }
    v3 = *(_QWORD *)(v2 + 1992);
  }
  if (*(_QWORD *)(v3 + 56))
    return 7;
  else
    return 6;
}

BOOL WebCore::setJSDocument_fullscreen(uint64_t a1, uint64_t a2)
{
  return (a2 & 0xFFFE000000000002) == 0 && *(unsigned __int8 *)(a2 + 5) == 249
      || JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsDocument_onfullscreenchange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 848), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onfullscreenchange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 848), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onfullscreenerror(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 856), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onfullscreenerror(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 856), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_webkitFullscreenEnabled(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  int isFeatureEnabled;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  void *v11;
  WebCore::FullscreenManager *v12;
  uint64_t v13;
  void *v14;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(v2 + 1992);
  if (!v3)
  {
    v8 = WTF::fastMalloc((WTF *)0x90);
    *(_QWORD *)v8 = 0;
    *(_DWORD *)(v8 + 8) = 0;
    v9 = (unsigned int *)WTF::WeakPtr<WebCore::LocalDOMWindow,WebCore::WeakPtrImplWithEventTargetData,WTF::RawPtrTraits<WebCore::WeakPtrImplWithEventTargetData>>::implForObject<WebCore::LocalDOMWindow>(v2);
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 + 1, v9));
    *(_QWORD *)(v8 + 24) = 0;
    *(_QWORD *)(v8 + 32) = 0;
    *(_QWORD *)(v8 + 16) = v9;
    *(_BYTE *)(v8 + 40) = 0;
    *(_OWORD *)(v8 + 48) = 0u;
    *(_OWORD *)(v8 + 64) = 0u;
    *(_OWORD *)(v8 + 80) = 0u;
    *(_OWORD *)(v8 + 96) = 0u;
    *(_OWORD *)(v8 + 112) = 0u;
    *(_DWORD *)(v8 + 127) = 0;
    *(_QWORD *)(v8 + 136) = WTF::cryptographicallyRandomNumber<unsigned long long>();
    v12 = *(WebCore::FullscreenManager **)(v2 + 1992);
    *(_QWORD *)(v2 + 1992) = v8;
    if (v12)
    {
      WebCore::FullscreenManager::~FullscreenManager(v12, v11);
      if (*(_DWORD *)(v13 + 8))
      {
        *(_OWORD *)(v13 + 112) = 0u;
        *(_OWORD *)(v13 + 128) = 0u;
        *(_OWORD *)(v13 + 80) = 0u;
        *(_OWORD *)(v13 + 96) = 0u;
        *(_OWORD *)(v13 + 48) = 0u;
        *(_OWORD *)(v13 + 64) = 0u;
        *(_OWORD *)(v13 + 16) = 0u;
        *(_OWORD *)(v13 + 32) = 0u;
        *(_OWORD *)v13 = 0u;
      }
      else
      {
        WTF::fastFree((WTF *)v13, v14);
      }
    }
    v3 = *(_QWORD *)(v2 + 1992);
  }
  v4 = *(_QWORD *)(*(_QWORD *)(v3 + 16) + 8);
  *(_DWORD *)(v4 + 24) += 2;
  isFeatureEnabled = WebCore::PermissionsPolicy::isFeatureEnabled(9u, (_QWORD *)v4, 1);
  if (*(_DWORD *)(v4 + 24) == 2)
  {
    if ((*(_WORD *)(v4 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v4, v5);
  }
  else
  {
    *(_DWORD *)(v4 + 24) -= 2;
  }
  if (isFeatureEnabled)
    return 7;
  else
    return 6;
}

unint64_t WebCore::jsDocument_webkitFullscreenElement(WebCore *a1, uint64_t a2)
{
  uint64_t v3;
  JSC::JSGlobalObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  WebCore::Element *v8;
  WebCore::Element *v9;
  WebCore::Element *v10;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  void *v15;
  WebCore::FullscreenManager *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v5 = *(_QWORD *)(v3 + 1992);
  if (!v5)
  {
    v12 = WTF::fastMalloc((WTF *)0x90);
    *(_QWORD *)v12 = 0;
    *(_DWORD *)(v12 + 8) = 0;
    v13 = (unsigned int *)WTF::WeakPtr<WebCore::LocalDOMWindow,WebCore::WeakPtrImplWithEventTargetData,WTF::RawPtrTraits<WebCore::WeakPtrImplWithEventTargetData>>::implForObject<WebCore::LocalDOMWindow>(v3);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 + 1, v13));
    *(_QWORD *)(v12 + 24) = 0;
    *(_QWORD *)(v12 + 32) = 0;
    *(_QWORD *)(v12 + 16) = v13;
    *(_BYTE *)(v12 + 40) = 0;
    *(_OWORD *)(v12 + 48) = 0u;
    *(_OWORD *)(v12 + 64) = 0u;
    *(_OWORD *)(v12 + 80) = 0u;
    *(_OWORD *)(v12 + 96) = 0u;
    *(_OWORD *)(v12 + 112) = 0u;
    *(_DWORD *)(v12 + 127) = 0;
    *(_QWORD *)(v12 + 136) = WTF::cryptographicallyRandomNumber<unsigned long long>();
    v16 = *(WebCore::FullscreenManager **)(v3 + 1992);
    *(_QWORD *)(v3 + 1992) = v12;
    if (v16)
    {
      WebCore::FullscreenManager::~FullscreenManager(v16, v15);
      if (*(_DWORD *)(v17 + 8))
      {
        *(_OWORD *)(v17 + 112) = 0u;
        *(_OWORD *)(v17 + 128) = 0u;
        *(_OWORD *)(v17 + 80) = 0u;
        *(_OWORD *)(v17 + 96) = 0u;
        *(_OWORD *)(v17 + 48) = 0u;
        *(_OWORD *)(v17 + 64) = 0u;
        *(_OWORD *)(v17 + 16) = 0u;
        *(_OWORD *)(v17 + 32) = 0u;
        *(_OWORD *)v17 = 0u;
      }
      else
      {
        WTF::fastFree((WTF *)v17, v18);
      }
    }
    v5 = *(_QWORD *)(v3 + 1992);
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8);
  v7 = *(_QWORD *)(v6 + 3096);
  if (v7)
  {
    v19 = 0;
    v20 = (uint64_t *)(v6 + 3104);
    do
    {
      if (v19)
        v21 = (uint64_t *)(v19 + 8);
      else
        v21 = v20;
      v19 = *v21;
      v8 = *(WebCore::Element **)v19;
      if ((*(_BYTE *)(*(_QWORD *)v19 + 54) & 0x40) != 0)
        break;
      v8 = 0;
    }
    while (v19 != v7);
  }
  else
  {
    v8 = 0;
  }
  v9 = WebCore::TreeScope::ancestorElementInThisScope((WebCore::TreeScope *)(v3 + 96), v8);
  if (v9)
    return WebCore::toJS(a1, v4, v9, v10);
  else
    return 2;
}

uint64_t WebCore::jsDocument_onwebkitfullscreenchange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2376), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onwebkitfullscreenchange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2376), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onwebkitfullscreenerror(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2384), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onwebkitfullscreenerror(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2384), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_webkitIsFullScreen(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  void *v8;
  WebCore::FullscreenManager *v9;
  uint64_t v10;
  void *v11;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(v2 + 1992);
  if (!v3)
  {
    v5 = WTF::fastMalloc((WTF *)0x90);
    *(_QWORD *)v5 = 0;
    *(_DWORD *)(v5 + 8) = 0;
    v6 = (unsigned int *)WTF::WeakPtr<WebCore::LocalDOMWindow,WebCore::WeakPtrImplWithEventTargetData,WTF::RawPtrTraits<WebCore::WeakPtrImplWithEventTargetData>>::implForObject<WebCore::LocalDOMWindow>(v2);
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 + 1, v6));
    *(_QWORD *)(v5 + 24) = 0;
    *(_QWORD *)(v5 + 32) = 0;
    *(_QWORD *)(v5 + 16) = v6;
    *(_BYTE *)(v5 + 40) = 0;
    *(_OWORD *)(v5 + 48) = 0u;
    *(_OWORD *)(v5 + 64) = 0u;
    *(_OWORD *)(v5 + 80) = 0u;
    *(_OWORD *)(v5 + 96) = 0u;
    *(_OWORD *)(v5 + 112) = 0u;
    *(_DWORD *)(v5 + 127) = 0;
    *(_QWORD *)(v5 + 136) = WTF::cryptographicallyRandomNumber<unsigned long long>();
    v9 = *(WebCore::FullscreenManager **)(v2 + 1992);
    *(_QWORD *)(v2 + 1992) = v5;
    if (v9)
    {
      WebCore::FullscreenManager::~FullscreenManager(v9, v8);
      if (*(_DWORD *)(v10 + 8))
      {
        *(_OWORD *)(v10 + 112) = 0u;
        *(_OWORD *)(v10 + 128) = 0u;
        *(_OWORD *)(v10 + 80) = 0u;
        *(_OWORD *)(v10 + 96) = 0u;
        *(_OWORD *)(v10 + 48) = 0u;
        *(_OWORD *)(v10 + 64) = 0u;
        *(_OWORD *)(v10 + 16) = 0u;
        *(_OWORD *)(v10 + 32) = 0u;
        *(_OWORD *)v10 = 0u;
      }
      else
      {
        WTF::fastFree((WTF *)v10, v11);
      }
    }
    v3 = *(_QWORD *)(v2 + 1992);
  }
  if (*(_QWORD *)(v3 + 56))
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsDocument_webkitFullScreenKeyboardInputAllowed(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  void *v8;
  WebCore::FullscreenManager *v9;
  uint64_t v10;
  void *v11;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(v2 + 1992);
  if (!v3)
  {
    v5 = WTF::fastMalloc((WTF *)0x90);
    *(_QWORD *)v5 = 0;
    *(_DWORD *)(v5 + 8) = 0;
    v6 = (unsigned int *)WTF::WeakPtr<WebCore::LocalDOMWindow,WebCore::WeakPtrImplWithEventTargetData,WTF::RawPtrTraits<WebCore::WeakPtrImplWithEventTargetData>>::implForObject<WebCore::LocalDOMWindow>(v2);
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 + 1, v6));
    *(_QWORD *)(v5 + 24) = 0;
    *(_QWORD *)(v5 + 32) = 0;
    *(_QWORD *)(v5 + 16) = v6;
    *(_BYTE *)(v5 + 40) = 0;
    *(_OWORD *)(v5 + 48) = 0u;
    *(_OWORD *)(v5 + 64) = 0u;
    *(_OWORD *)(v5 + 80) = 0u;
    *(_OWORD *)(v5 + 96) = 0u;
    *(_OWORD *)(v5 + 112) = 0u;
    *(_DWORD *)(v5 + 127) = 0;
    *(_QWORD *)(v5 + 136) = WTF::cryptographicallyRandomNumber<unsigned long long>();
    v9 = *(WebCore::FullscreenManager **)(v2 + 1992);
    *(_QWORD *)(v2 + 1992) = v5;
    if (v9)
    {
      WebCore::FullscreenManager::~FullscreenManager(v9, v8);
      if (*(_DWORD *)(v10 + 8))
      {
        *(_OWORD *)(v10 + 112) = 0u;
        *(_OWORD *)(v10 + 128) = 0u;
        *(_OWORD *)(v10 + 80) = 0u;
        *(_OWORD *)(v10 + 96) = 0u;
        *(_OWORD *)(v10 + 48) = 0u;
        *(_OWORD *)(v10 + 64) = 0u;
        *(_OWORD *)(v10 + 16) = 0u;
        *(_OWORD *)(v10 + 32) = 0u;
        *(_OWORD *)v10 = 0u;
      }
      else
      {
        WTF::fastFree((WTF *)v10, v11);
      }
    }
    v3 = *(_QWORD *)(v2 + 1992);
  }
  if (!*(_QWORD *)(v3 + 56))
    return 6;
  if (*(_BYTE *)(v3 + 129))
    return 7;
  return 6;
}

unint64_t WebCore::jsDocument_webkitCurrentFullScreenElement(WebCore *a1, uint64_t a2)
{
  uint64_t v3;
  JSC::JSGlobalObject *v4;
  uint64_t v5;
  WebCore::Element *v6;
  WebCore::Element *v7;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  void *v12;
  WebCore::FullscreenManager *v13;
  uint64_t v14;
  void *v15;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v5 = *(_QWORD *)(v3 + 1992);
  if (!v5)
  {
    v9 = WTF::fastMalloc((WTF *)0x90);
    *(_QWORD *)v9 = 0;
    *(_DWORD *)(v9 + 8) = 0;
    v10 = (unsigned int *)WTF::WeakPtr<WebCore::LocalDOMWindow,WebCore::WeakPtrImplWithEventTargetData,WTF::RawPtrTraits<WebCore::WeakPtrImplWithEventTargetData>>::implForObject<WebCore::LocalDOMWindow>(v3);
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 + 1, v10));
    *(_QWORD *)(v9 + 24) = 0;
    *(_QWORD *)(v9 + 32) = 0;
    *(_QWORD *)(v9 + 16) = v10;
    *(_BYTE *)(v9 + 40) = 0;
    *(_OWORD *)(v9 + 48) = 0u;
    *(_OWORD *)(v9 + 64) = 0u;
    *(_OWORD *)(v9 + 80) = 0u;
    *(_OWORD *)(v9 + 96) = 0u;
    *(_OWORD *)(v9 + 112) = 0u;
    *(_DWORD *)(v9 + 127) = 0;
    *(_QWORD *)(v9 + 136) = WTF::cryptographicallyRandomNumber<unsigned long long>();
    v13 = *(WebCore::FullscreenManager **)(v3 + 1992);
    *(_QWORD *)(v3 + 1992) = v9;
    if (v13)
    {
      WebCore::FullscreenManager::~FullscreenManager(v13, v12);
      if (*(_DWORD *)(v14 + 8))
      {
        *(_OWORD *)(v14 + 112) = 0u;
        *(_OWORD *)(v14 + 128) = 0u;
        *(_OWORD *)(v14 + 80) = 0u;
        *(_OWORD *)(v14 + 96) = 0u;
        *(_OWORD *)(v14 + 48) = 0u;
        *(_OWORD *)(v14 + 64) = 0u;
        *(_OWORD *)(v14 + 16) = 0u;
        *(_OWORD *)(v14 + 32) = 0u;
        *(_OWORD *)v14 = 0u;
      }
      else
      {
        WTF::fastFree((WTF *)v14, v15);
      }
    }
    v5 = *(_QWORD *)(v3 + 1992);
  }
  v6 = WebCore::TreeScope::ancestorElementInThisScope((WebCore::TreeScope *)(v3 + 96), *(WebCore::Element **)(v5 + 56));
  if (v6)
    return WebCore::toJS(a1, v4, v6, v7);
  else
    return 2;
}

unint64_t WebCore::jsDocument_location(uint64_t a1, uint64_t a2)
{
  WebCore::DOMWindow *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(WebCore::DOMWindow **)(*(_QWORD *)(a2 + 24) + 696);
  if (!v3)
    return 2;
  v4 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v5 = WebCore::DOMWindow::location(v3);
  return WebCore::wrap<WebCore::Location>(a1, v4, v5);
}

BOOL WebCore::setJSDocument_location(JSC::JSGlobalObject *a1, JSC::Structure *a2, uint64_t a3)
{
  JSC::VM *v4;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  unint64_t v13[2];
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (((unint64_t)a2 & 0xFFFE000000000002) != 0 || *((unsigned __int8 *)a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v17 = *((_QWORD *)a1 + 7);
  WTF::AtomStringImpl::addLiteral();
  v7 = (WTF::StringImpl *)v13[0];
  v8 = JSC::JSObject::get(a2, a1, v13[0]);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    goto LABEL_11;
  if ((v8 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v8 + 5) <= 0x16u)
  {
    JSC::throwTypeError();
LABEL_11:
    v11 = 0;
    goto LABEL_12;
  }
  WTF::AtomStringImpl::addLiteral();
  v9 = (WTF::StringImpl *)v13[0];
  v13[0] = 0;
  v13[1] = v8;
  v14 = -1;
  v15 = 0x1000000;
  v16 = 0;
  (*(void (**)(uint64_t, JSC::JSGlobalObject *, WTF::StringImpl *, uint64_t, unint64_t *))(16 * *(unsigned int *)(16 * (*(_DWORD *)v8 & 0xFFFFFFFE) + 0x4C) + 0x48))(v8, a1, v9, a3, v13);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
  {
    v11 = 0;
    if (!v9)
      goto LABEL_12;
  }
  else
  {
    v11 = 1;
    if (!v9)
      goto LABEL_12;
  }
  if (*(_DWORD *)v9 == 2)
    WTF::StringImpl::destroy(v9, v10);
  else
    *(_DWORD *)v9 -= 2;
LABEL_12:
  if (v7)
  {
    if (*(_DWORD *)v7 == 2)
      WTF::StringImpl::destroy(v7, v10);
    else
      *(_DWORD *)v7 -= 2;
  }
  return v11;
}

uint64_t WebCore::jsDocument_domain(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;

  WebCore::SecurityContext::securityOrigin((WebCore::SecurityContext *)(*((_QWORD *)a2 + 3) + 192), a2);
  v5 = *(_QWORD *)(v4 + 40);
  if (!v5)
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v6 = *(_DWORD *)v5;
  v7 = *(_DWORD *)(v5 + 4);
  *(_DWORD *)v5 += 2;
  v8 = *(_QWORD *)(a1 + 56);
  if (v7)
  {
    if (v7 != 1)
    {
LABEL_4:
      v9 = *(_QWORD *)(v8 + 64760);
      if (!v9 || v5 != *(_QWORD *)(v9 + 8))
      {
        v9 = JSC::jsStringWithCacheSlowCase();
        v6 = *(_DWORD *)v5 - 2;
      }
      goto LABEL_7;
    }
    v11 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v12 = *v11;
    }
    else
    {
      v13 = *(unsigned __int16 *)v11;
      if (v13 > 0xFF)
        goto LABEL_4;
      v12 = v13;
    }
    v9 = *(_QWORD *)(v8 + 8 * v12 + 42216);
  }
  else
  {
    v9 = *(_QWORD *)(v8 + 41968);
  }
LABEL_7:
  if (v6)
    *(_DWORD *)v5 = v6;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v5, v3);
  return v9;
}

BOOL WebCore::setJSDocument_domain(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  WebCore::Document *v5;
  int v6;
  _BOOL8 v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  int v15;
  JSC::VM *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  _BYTE v19[8];
  WTF::StringImpl *v20;
  char v21;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(WebCore::Document **)(a2 + 24);
  v16 = (JSC::VM *)*((_QWORD *)a1 + 7);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v14);
  v6 = v15;
  v7 = v15 == 0;
  if (!v15)
  {
    v8 = v14;
    v14 = 0;
    v17 = v8;
    WebCore::Document::setDomain(v5, (const WTF::String *)&v17, (uint64_t)v19);
    v10 = v17;
    v17 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
        WTF::StringImpl::destroy(v10, v9);
      else
        *(_DWORD *)v10 -= 2;
    }
    if (v21)
    {
      LOBYTE(v17) = v19[0];
      v12 = v20;
      v20 = 0;
      v18 = v12;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(a1, &v16, (unsigned __int8 *)&v17);
        v12 = v18;
      }
      v18 = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, v9);
        else
          *(_DWORD *)v12 -= 2;
      }
      if (v21)
      {
        v13 = v20;
        v20 = 0;
        if (v13)
        {
          if (*(_DWORD *)v13 == 2)
            WTF::StringImpl::destroy(v13, v9);
          else
            *(_DWORD *)v13 -= 2;
        }
      }
    }
    v6 = v15;
  }
  if (v6 != -1)
    ((void (*)(_BYTE *, WTF::StringImpl **))off_1E325A258[v6])(v19, &v14);
  return v7;
}

uint64_t WebCore::jsDocument_referrer(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::Document::referrerForBindings(*(WebCore::Document **)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

BOOL WebCore::setJSDocument_cookie(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  WebCore::Document *v5;
  int v6;
  _BOOL8 v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  int v15;
  JSC::VM *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  char v21;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(WebCore::Document **)(a2 + 24);
  v16 = (JSC::VM *)*((_QWORD *)a1 + 7);
  WebCore::valueToUSVString(a1, a3, (uint64_t)&v14);
  v6 = v15;
  v7 = v15 == 0;
  if (!v15)
  {
    v8 = v14;
    v14 = 0;
    v17 = v8;
    WebCore::Document::setCookie(v5, (const WTF::String *)&v17, &v19);
    v10 = v17;
    v17 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
        WTF::StringImpl::destroy(v10, v9);
      else
        *(_DWORD *)v10 -= 2;
    }
    if (v21)
    {
      LOBYTE(v17) = v19;
      v12 = v20;
      v20 = 0;
      v18 = v12;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(a1, &v16, (unsigned __int8 *)&v17);
        v12 = v18;
      }
      v18 = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, v9);
        else
          *(_DWORD *)v12 -= 2;
      }
      if (v21)
      {
        v13 = v20;
        v20 = 0;
        if (v13)
        {
          if (*(_DWORD *)v13 == 2)
            WTF::StringImpl::destroy(v13, v9);
          else
            *(_DWORD *)v13 -= 2;
        }
      }
    }
    v6 = v15;
  }
  if (v6 != -1)
    ((void (*)(uint64_t *, WTF::StringImpl **))off_1E325A258[v6])(&v19, &v14);
  return v7;
}

uint64_t WebCore::jsDocument_lastModified(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::Document::lastModified(*(WebCore::Document **)(a2 + 24), (uint64_t **)&v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

uint64_t WebCore::jsDocument_title(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 1448);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

BOOL WebCore::setJSDocument_title(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t this, uint64_t a4, WTF::StringBuilder *a5, __n128 a6)
{
  JSC::VM *v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  WTF *v15;
  WTF::StringImpl *v18;
  int hasExceptionsAfterHandlingTraps;
  WTF *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  WTF *v25;
  uint64_t v26;
  _BYTE v27[40];
  uint64_t v28;
  JSC::JSGlobalObject *v29;
  WTF::StringImpl *v30;
  uint64_t v31;

  v6 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(_QWORD *)(a2 + 24);
  v25 = (WTF *)v27;
  a6.n128_u64[0] = 4;
  v26 = 4;
  v27[32] = 0;
  v28 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v29 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v25;
  v31 = this;
  if ((this & 0xFFFE000000000002) != 0 || *(_BYTE *)(this + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v31, a1);
  }
  else
  {
    v8 = *(WTF::StringImpl **)(this + 8);
    if ((v8 & 1) != 0)
      v8 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, a1);
    if (v8)
      *(_DWORD *)v8 += 2;
    v30 = v8;
  }
  if (*((_DWORD *)v6 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v6);
    v9 = v30;
    if (hasExceptionsAfterHandlingTraps)
    {
      v24 = 1;
      v30 = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 2)
          WTF::StringImpl::destroy(v9, v18);
        else
          *(_DWORD *)v9 -= 2;
      }
      v13 = 0;
      v12 = 1;
      goto LABEL_16;
    }
  }
  else
  {
    v9 = v30;
  }
  v24 = 0;
  v23 = 0;
  v31 = (uint64_t)v9;
  WebCore::Document::setTitle(v7, (WTF::StringImpl *)&v31, a6, this, a4, a5);
  v11 = (WTF::StringImpl *)v31;
  v31 = 0;
  if (v11)
  {
    if (*(_DWORD *)v11 == 2)
      WTF::StringImpl::destroy(v11, v10);
    else
      *(_DWORD *)v11 -= 2;
  }
  v12 = 0;
  v13 = 1;
LABEL_16:
  ((void (*)(uint64_t *, uint64_t *))off_1E325A258[v12])(&v31, &v23);
  if (HIDWORD(v26))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v25, v29);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v28;
    if (HIDWORD(v26))
    {
      v20 = v25;
      v21 = 8 * HIDWORD(v26);
      do
      {
        v22 = *(_QWORD *)v20;
        *(_QWORD *)v20 = 0;
        if (v22)
        {
          if (*(_DWORD *)(v22 + 24) == 2)
          {
            if ((*(_WORD *)(v22 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v22, v14);
          }
          else
          {
            *(_DWORD *)(v22 + 24) -= 2;
          }
        }
        v20 = (WTF *)((char *)v20 + 8);
        v21 -= 8;
      }
      while (v21);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v28;
  }
  v15 = v25;
  if (v27 != (_BYTE *)v25 && v25 != 0)
  {
    v25 = 0;
    LODWORD(v26) = 0;
    WTF::fastFree(v15, v14);
  }
  return v13;
}

uint64_t WebCore::jsDocument_dir(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 1272);
  if (v3
    && (*(_WORD *)(v3 + 28) & 0x10) != 0
    && *(_QWORD *)(*(_QWORD *)(v3 + 96) + 24) == *(_QWORD *)(WebCore::HTMLNames::htmlTag + 24))
  {
    v4 = WebCore::HTMLElement::dir((WebCore::HTMLElement *)v3);
  }
  else
  {
    v4 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  }
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *v4;
  if (!*v4)
    return *(_QWORD *)(v5 + 41968);
  v7 = *(_DWORD *)(v6 + 4);
  if (!v7)
    return *(_QWORD *)(v5 + 41968);
  if (v7 == 1)
  {
    v10 = *(unsigned __int8 **)(v6 + 8);
    if ((*(_BYTE *)(v6 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v11 = *(unsigned __int16 *)v10;
      if (v11 > 0xFF)
        goto LABEL_9;
      v11 = v11;
    }
    return *(_QWORD *)(v5 + 8 * v11 + 42216);
  }
LABEL_9:
  v8 = *(_QWORD *)(v5 + 64760);
  if (!v8 || v6 != *(_QWORD *)(v8 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v8;
}

BOOL WebCore::setJSDocument_dir(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  unsigned int *v3;
  WTF::StringImpl *v4;
  int v5;
  _BOOL8 v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  WTF *v9;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  int v16;
  WTF *v17;
  uint64_t v18;
  _BYTE v19[40];
  uint64_t v20;
  JSC::JSGlobalObject *v21;
  WTF::StringImpl *v22;

  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int **)(a2 + 24);
  v17 = (WTF *)v19;
  v18 = 4;
  v19[32] = 0;
  v20 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v21 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v17;
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v15);
  v5 = v16;
  v6 = v16 == 0;
  if (!v16)
  {
    v7 = v15;
    v15 = 0;
    v22 = v7;
    WebCore::Document::setDir(v3, &v22);
    v8 = v22;
    v22 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 2)
        WTF::StringImpl::destroy(v8, v4);
      else
        *(_DWORD *)v8 -= 2;
    }
    v5 = v16;
  }
  if (v5 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A6F0[v5])(&v22, &v15);
  if (HIDWORD(v18))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v17, v21);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v20;
    if (HIDWORD(v18))
    {
      v12 = v17;
      v13 = 8 * HIDWORD(v18);
      do
      {
        v14 = *(_QWORD *)v12;
        *(_QWORD *)v12 = 0;
        if (v14)
        {
          if (*(_DWORD *)(v14 + 24) == 2)
          {
            if ((*(_WORD *)(v14 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v14, v4);
          }
          else
          {
            *(_DWORD *)(v14 + 24) -= 2;
          }
        }
        v12 = (WTF *)((char *)v12 + 8);
        v13 -= 8;
      }
      while (v13);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v20;
  }
  v9 = v17;
  if (v19 != (_BYTE *)v17 && v17 != 0)
  {
    v17 = 0;
    LODWORD(v18) = 0;
    WTF::fastFree(v9, v4);
  }
  return v6;
}

uint64_t WebCore::jsDocument_body(WebCore *a1, uint64_t a2, WebCore::HTMLElement *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 1272);
  if (!v4)
    return 2;
  if ((*(_WORD *)(v4 + 28) & 0x10) == 0)
    return 2;
  if (*(_QWORD *)(*(_QWORD *)(v4 + 96) + 24) != *(_QWORD *)(WebCore::HTMLNames::htmlTag + 24))
    return 2;
  v5 = *(_QWORD *)(v4 + 80);
  if (!v5)
    return 2;
  v6 = 2;
  while ((*(_WORD *)(v5 + 28) & 0x10) == 0)
  {
    v5 = *(_QWORD *)(v5 + 56);
    if (!v5)
      return v6;
  }
  v8 = *(_QWORD *)(WebCore::HTMLNames::bodyTag + 24);
  v9 = *(_QWORD *)(*(_QWORD *)(v5 + 96) + 24);
  if (v9 != v8)
  {
    v6 = 2;
LABEL_13:
    if (v9 != *(_QWORD *)(WebCore::HTMLNames::framesetTag + 24))
    {
      while (1)
      {
        v5 = *(_QWORD *)(v5 + 56);
        if (!v5)
          return v6;
        if ((*(_WORD *)(v5 + 28) & 0x10) != 0)
        {
          v9 = *(_QWORD *)(*(_QWORD *)(v5 + 96) + 24);
          if (v9 != v8)
            goto LABEL_13;
          return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), (WebCore::JSDOMGlobalObject *)v5, a3);
        }
      }
    }
  }
  return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), (WebCore::JSDOMGlobalObject *)v5, a3);
}

BOOL WebCore::setJSDocument_body(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  JSC::VM *v4;
  unsigned int *v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  char **v9;
  BOOL v10;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  WTF *v15;
  WTF *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  WTF *v23;
  uint64_t v24;
  _BYTE v25[40];
  uint64_t v26;
  JSC::JSGlobalObject *v27;
  JSC::VM *v28;
  uint64_t v29;
  WTF::StringImpl *v30;
  JSC::VM *v31;
  WTF::StringImpl *v32;
  char v33;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int **)(a2 + 24);
  v28 = v4;
  v23 = (WTF *)v25;
  v24 = 4;
  v25[32] = 0;
  v26 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v27 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v23;
  if ((a3 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v6 = 0;
LABEL_18:
    v29 = v6;
    WebCore::Document::setBodyOrFrameset(v5, &v29, (uint64_t)&v31);
    v13 = v29;
    v29 = 0;
    if (v13)
    {
      if (*(_DWORD *)(v13 + 24) == 2)
      {
        if ((*(_WORD *)(v13 + 30) & 0x400) == 0)
          WebCore::Node::removedLastRef((WebCore::Node *)v13, v12);
      }
      else
      {
        *(_DWORD *)(v13 + 24) -= 2;
      }
    }
    if (v33)
    {
      LOBYTE(v29) = (_BYTE)v31;
      v21 = v32;
      v32 = 0;
      v30 = v21;
      if (!*((_QWORD *)v4 + 2))
      {
        WebCore::propagateExceptionSlowPath(a1, &v28, (unsigned __int8 *)&v29);
        v21 = v30;
      }
      v30 = 0;
      if (v21)
      {
        if (*(_DWORD *)v21 == 2)
          WTF::StringImpl::destroy(v21, (WTF::StringImpl *)v12);
        else
          *(_DWORD *)v21 -= 2;
      }
      if (v33)
      {
        v22 = v32;
        v32 = 0;
        if (v22)
        {
          if (*(_DWORD *)v22 == 2)
            WTF::StringImpl::destroy(v22, (WTF::StringImpl *)v12);
          else
            *(_DWORD *)v22 -= 2;
        }
      }
    }
    v14 = 1;
    goto LABEL_23;
  }
  v31 = v4;
  if ((a3 & 0xFFFE000000000002) == 0)
  {
    v7 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
    v8 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
    v9 = (char **)(16 * v7);
    if ((_DWORD)v7)
      v10 = v9 == &WebCore::JSHTMLElement::s_info;
    else
      v10 = 1;
    if (!v10)
    {
      do
      {
        v9 = (char **)v9[2];
        v8 = v9 != 0;
      }
      while (v9 != &WebCore::JSHTMLElement::s_info && v9 != 0);
    }
    if (v8)
    {
      v6 = *(_QWORD *)(a3 + 24);
      if (v6)
      {
        *(_DWORD *)(v6 + 24) += 2;
        goto LABEL_18;
      }
    }
  }
  WebCore::throwAttributeTypeError((int)a1, (int)&v31, "Document", 9, "body", 5, "HTMLElement", 12);
  v14 = 0;
LABEL_23:
  if (HIDWORD(v24))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v23, v27);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v26;
    if (HIDWORD(v24))
    {
      v18 = v23;
      v19 = 8 * HIDWORD(v24);
      do
      {
        v20 = *(_QWORD *)v18;
        *(_QWORD *)v18 = 0;
        if (v20)
        {
          if (*(_DWORD *)(v20 + 24) == 2)
          {
            if ((*(_WORD *)(v20 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v20, v12);
          }
          else
          {
            *(_DWORD *)(v20 + 24) -= 2;
          }
        }
        v18 = (WTF *)((char *)v18 + 8);
        v19 -= 8;
      }
      while (v19);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v26;
  }
  v15 = v23;
  if (v25 != (_BYTE *)v23 && v23 != 0)
  {
    v23 = 0;
    LODWORD(v24) = 0;
    WTF::fastFree(v15, v12);
  }
  return v14;
}

uint64_t WebCore::jsDocument_head(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::HTMLElement *a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 1272);
  if (!v4)
    return 2;
  v5 = *(_QWORD *)(v4 + 80);
  if (!v5)
    return 2;
  while ((*(_WORD *)(v5 + 28) & 0x10) == 0
       || *(_QWORD *)(*(_QWORD *)(v5 + 96) + 24) != *(_QWORD *)(WebCore::HTMLNames::headTag + 24))
  {
    v5 = *(_QWORD *)(v5 + 56);
    if (!v5)
      return 2;
  }
  return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), (WebCore::JSDOMGlobalObject *)v5, a4);
}

unint64_t WebCore::jsDocument_images(int a1, WebCore::Node **a2)
{
  JSC::VM *v3;
  unint64_t v4;
  _DWORD *v5;
  _DWORD *v7;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::Document::ensureCachedCollection<(WebCore::CollectionType)0>(a2[3], (WTF::StringImpl *)a2, &v7);
  v4 = WebCore::wrap<WebCore::HTMLCollection>(a1, v3, (uint64_t)v7);
  v5 = v7;
  v7 = 0;
  if (v5)
  {
    if (v5[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v5 + 8))(v5);
    else
      --v5[4];
  }
  return v4;
}

unint64_t WebCore::jsDocument_embeds(int a1, WebCore::Node **a2)
{
  JSC::VM *v3;
  unint64_t v4;
  _DWORD *v5;
  _DWORD *v7;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::Document::ensureCachedCollection<(WebCore::CollectionType)1>(a2[3], (WTF::StringImpl *)a2, &v7);
  v4 = WebCore::wrap<WebCore::HTMLCollection>(a1, v3, (uint64_t)v7);
  v5 = v7;
  v7 = 0;
  if (v5)
  {
    if (v5[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v5 + 8))(v5);
    else
      --v5[4];
  }
  return v4;
}

unint64_t WebCore::jsDocument_links(int a1, WebCore::Node **a2)
{
  JSC::VM *v3;
  unint64_t v4;
  _DWORD *v5;
  _DWORD *v7;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::Document::ensureCachedCollection<(WebCore::CollectionType)4>(a2[3], (WTF::StringImpl *)a2, &v7);
  v4 = WebCore::wrap<WebCore::HTMLCollection>(a1, v3, (uint64_t)v7);
  v5 = v7;
  v7 = 0;
  if (v5)
  {
    if (v5[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v5 + 8))(v5);
    else
      --v5[4];
  }
  return v4;
}

unint64_t WebCore::jsDocument_forms(int a1, WebCore::Node **a2)
{
  JSC::VM *v3;
  unint64_t v4;
  _DWORD *v5;
  _DWORD *v7;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::Document::ensureCachedCollection<(WebCore::CollectionType)3>(a2[3], (WTF::StringImpl *)a2, &v7);
  v4 = WebCore::wrap<WebCore::HTMLCollection>(a1, v3, (uint64_t)v7);
  v5 = v7;
  v7 = 0;
  if (v5)
  {
    if (v5[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v5 + 8))(v5);
    else
      --v5[4];
  }
  return v4;
}

unint64_t WebCore::jsDocument_scripts(int a1, WebCore::Node **a2)
{
  JSC::VM *v3;
  unint64_t v4;
  _DWORD *v5;
  _DWORD *v7;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::Document::ensureCachedCollection<(WebCore::CollectionType)6>(a2[3], (WTF::StringImpl *)a2, &v7);
  v4 = WebCore::wrap<WebCore::HTMLCollection>(a1, v3, (uint64_t)v7);
  v5 = v7;
  v7 = 0;
  if (v5)
  {
    if (v5[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v5 + 8))(v5);
    else
      --v5[4];
  }
  return v4;
}

unint64_t WebCore::jsDocument_currentScript(WebCore *a1, WebCore::JSDocument **a2, uint64_t a3, WebCore::Element *a4)
{
  return WebCore::jsDocument_currentScriptGetter(a1, (JSC::JSGlobalObject *)*(unsigned int *)a2, a2[3], a4);
}

uint64_t WebCore::jsDocument_defaultView(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  WebCore::WindowProxy *v4;
  uint64_t result;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 528);
  if (!v2)
    return 2;
  v3 = *(_QWORD *)(v2 + 8);
  if (!v3)
    return 2;
  v4 = *(WebCore::WindowProxy **)(v3 + 112);
  if (!v4)
    return 2;
  result = (uint64_t)WebCore::WindowProxy::jsWindowProxy(v4, *(WebCore::DOMWrapperWorld **)(a1 + 3320));
  if (!result)
    return 2;
  return result;
}

uint64_t WebCore::jsDocument_designMode(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;

  if (*(_BYTE *)(*((_QWORD *)a2 + 3) + 3361))
    v2 = &WebCore::onAtomData;
  else
    v2 = &WebCore::offAtomData;
  v3 = *v2;
  if (!*v2)
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  *(_DWORD *)v3 += 2;
  v6 = *(_QWORD *)(a1 + 56);
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_7:
      v7 = *(_QWORD *)(v6 + 64760);
      if (!v7 || v3 != *(_QWORD *)(v7 + 8))
      {
        v7 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v3 - 2;
      }
      goto LABEL_10;
    }
    v9 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
        goto LABEL_7;
      v10 = v11;
    }
    v7 = *(_QWORD *)(v6 + 8 * v10 + 42216);
  }
  else
  {
    v7 = *(_QWORD *)(v6 + 41968);
  }
LABEL_10:
  if (v4)
    *(_DWORD *)v3 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v3, a2);
  return v7;
}

BOOL WebCore::setJSDocument_designMode(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t this)
{
  JSC::VM *v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  WTF *v12;
  WTF::StringImpl *v15;
  int hasExceptionsAfterHandlingTraps;
  WTF *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  WTF *v22;
  uint64_t v23;
  _BYTE v24[40];
  uint64_t v25;
  JSC::JSGlobalObject *v26;
  WTF::StringImpl *v27;
  unint64_t v28;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(WTF::StringImpl **)(a2 + 24);
  v22 = (WTF *)v24;
  v23 = 4;
  v24[32] = 0;
  v25 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v26 = a1;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v22;
  v28 = this;
  if ((this & 0xFFFE000000000002) == 0 && *(_BYTE *)(this + 5) == 2)
  {
    v5 = *(WTF::StringImpl **)(this + 8);
    if ((v5 & 1) != 0)
    {
      v5 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, a1);
      if (!v5)
        goto LABEL_8;
    }
    else if (!v5)
    {
LABEL_8:
      v27 = v5;
      goto LABEL_9;
    }
    *(_DWORD *)v5 += 2;
    goto LABEL_8;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v28, a1);
LABEL_9:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v6 = v27;
    if (hasExceptionsAfterHandlingTraps)
    {
      v21 = 1;
      v27 = 0;
      if (v6)
      {
        if (*(_DWORD *)v6 == 2)
          WTF::StringImpl::destroy(v6, v15);
        else
          *(_DWORD *)v6 -= 2;
      }
      v10 = 0;
      v9 = 1;
      goto LABEL_15;
    }
  }
  else
  {
    v6 = v27;
  }
  v21 = 0;
  v20 = 0;
  v28 = (unint64_t)v6;
  WebCore::Document::setDesignMode(v4, (const WTF::String *)&v28);
  v8 = (WTF::StringImpl *)v28;
  v28 = 0;
  if (v8)
  {
    if (*(_DWORD *)v8 == 2)
      WTF::StringImpl::destroy(v8, v7);
    else
      *(_DWORD *)v8 -= 2;
  }
  v9 = 0;
  v10 = 1;
LABEL_15:
  ((void (*)(unint64_t *, uint64_t *))off_1E325A258[v9])(&v28, &v20);
  if (HIDWORD(v23))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v22, v26);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v25;
    if (HIDWORD(v23))
    {
      v17 = v22;
      v18 = 8 * HIDWORD(v23);
      do
      {
        v19 = *(_QWORD *)v17;
        *(_QWORD *)v17 = 0;
        if (v19)
        {
          if (*(_DWORD *)(v19 + 24) == 2)
          {
            if ((*(_WORD *)(v19 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v19, v11);
          }
          else
          {
            *(_DWORD *)(v19 + 24) -= 2;
          }
        }
        v17 = (WTF *)((char *)v17 + 8);
        v18 -= 8;
      }
      while (v18);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v25;
  }
  v12 = v22;
  if (v24 != (_BYTE *)v22 && v22 != 0)
  {
    v22 = 0;
    LODWORD(v23) = 0;
    WTF::fastFree(v12, v11);
  }
  return v10;
}

uint64_t WebCore::jsDocument_onreadystatechange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return 10;
  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1632), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSDocument_onreadystatechange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return 0;
  v5 = *((_QWORD *)a1 + 7);
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1632), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v5 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v5 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_fgColor(uint64_t a1, WebCore::Document **a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;

  v3 = (uint64_t *)WebCore::Document::fgColor(a2[3], a2);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *v3;
  if (!*v3)
    return *(_QWORD *)(v4 + 41968);
  v6 = *(_DWORD *)(v5 + 4);
  if (!v6)
    return *(_QWORD *)(v4 + 41968);
  if (v6 == 1)
  {
    v9 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_4;
      v10 = v10;
    }
    return *(_QWORD *)(v4 + 8 * v10 + 42216);
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v5 != *(_QWORD *)(v7 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v7;
}

BOOL WebCore::setJSDocument_fgColor(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  unsigned int *v3;
  WTF::StringImpl *v4;
  int v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v10;
  int v11;
  WTF::StringImpl *v12;
  int v13;
  char v14;

  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int **)(a2 + 24);
  if (this == (JSC::JSRopeString *)2)
  {
    v4 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v4 += 2;
    v11 = 0;
    goto LABEL_12;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v12);
  LOBYTE(v10) = 0;
  v11 = -1;
  v5 = v13;
  if (v13 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E325BFE8[v13])(&v14, &v10, &v12);
  v11 = v5;
  if (v13 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E325A6F0[v13])(&v14, &v12);
    v5 = v11;
  }
  if (!v5)
  {
    v4 = v10;
LABEL_12:
    v10 = 0;
    v12 = v4;
    WebCore::Document::setFgColor(v3, &v12);
    v7 = v12;
    v12 = 0;
    if (v7)
    {
      if (*(_DWORD *)v7 == 2)
        WTF::StringImpl::destroy(v7, v6);
      else
        *(_DWORD *)v7 -= 2;
    }
    v8 = 1;
    v5 = v11;
    goto LABEL_16;
  }
  v8 = 0;
LABEL_16:
  if (v5 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A6F0[v5])(&v12, &v10);
  return v8;
}

uint64_t WebCore::jsDocument_linkColor(uint64_t a1, WebCore::Document **a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;

  v3 = (uint64_t *)WebCore::Document::linkColorForBindings(a2[3], a2);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *v3;
  if (!*v3)
    return *(_QWORD *)(v4 + 41968);
  v6 = *(_DWORD *)(v5 + 4);
  if (!v6)
    return *(_QWORD *)(v4 + 41968);
  if (v6 == 1)
  {
    v9 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_4;
      v10 = v10;
    }
    return *(_QWORD *)(v4 + 8 * v10 + 42216);
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v5 != *(_QWORD *)(v7 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v7;
}

BOOL WebCore::setJSDocument_linkColor(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  unsigned int *v3;
  WTF::StringImpl *v4;
  int v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v10;
  int v11;
  WTF::StringImpl *v12;
  int v13;
  char v14;

  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int **)(a2 + 24);
  if (this == (JSC::JSRopeString *)2)
  {
    v4 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v4 += 2;
    v11 = 0;
    goto LABEL_12;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v12);
  LOBYTE(v10) = 0;
  v11 = -1;
  v5 = v13;
  if (v13 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E325BFE8[v13])(&v14, &v10, &v12);
  v11 = v5;
  if (v13 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E325A6F0[v13])(&v14, &v12);
    v5 = v11;
  }
  if (!v5)
  {
    v4 = v10;
LABEL_12:
    v10 = 0;
    v12 = v4;
    WebCore::Document::setLinkColorForBindings(v3, &v12);
    v7 = v12;
    v12 = 0;
    if (v7)
    {
      if (*(_DWORD *)v7 == 2)
        WTF::StringImpl::destroy(v7, v6);
      else
        *(_DWORD *)v7 -= 2;
    }
    v8 = 1;
    v5 = v11;
    goto LABEL_16;
  }
  v8 = 0;
LABEL_16:
  if (v5 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A6F0[v5])(&v12, &v10);
  return v8;
}

uint64_t WebCore::jsDocument_vlinkColor(uint64_t a1, WebCore::Document **a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;

  v3 = (uint64_t *)WebCore::Document::vlinkColor(a2[3], a2);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *v3;
  if (!*v3)
    return *(_QWORD *)(v4 + 41968);
  v6 = *(_DWORD *)(v5 + 4);
  if (!v6)
    return *(_QWORD *)(v4 + 41968);
  if (v6 == 1)
  {
    v9 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_4;
      v10 = v10;
    }
    return *(_QWORD *)(v4 + 8 * v10 + 42216);
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v5 != *(_QWORD *)(v7 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v7;
}

BOOL WebCore::setJSDocument_vlinkColor(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  unsigned int *v3;
  WTF::StringImpl *v4;
  int v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v10;
  int v11;
  WTF::StringImpl *v12;
  int v13;
  char v14;

  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int **)(a2 + 24);
  if (this == (JSC::JSRopeString *)2)
  {
    v4 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v4 += 2;
    v11 = 0;
    goto LABEL_12;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v12);
  LOBYTE(v10) = 0;
  v11 = -1;
  v5 = v13;
  if (v13 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E325BFE8[v13])(&v14, &v10, &v12);
  v11 = v5;
  if (v13 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E325A6F0[v13])(&v14, &v12);
    v5 = v11;
  }
  if (!v5)
  {
    v4 = v10;
LABEL_12:
    v10 = 0;
    v12 = v4;
    WebCore::Document::setVlinkColor(v3, &v12);
    v7 = v12;
    v12 = 0;
    if (v7)
    {
      if (*(_DWORD *)v7 == 2)
        WTF::StringImpl::destroy(v7, v6);
      else
        *(_DWORD *)v7 -= 2;
    }
    v8 = 1;
    v5 = v11;
    goto LABEL_16;
  }
  v8 = 0;
LABEL_16:
  if (v5 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A6F0[v5])(&v12, &v10);
  return v8;
}

uint64_t WebCore::jsDocument_alinkColor(uint64_t a1, WebCore::Document **a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;

  v3 = (uint64_t *)WebCore::Document::alinkColor(a2[3], a2);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *v3;
  if (!*v3)
    return *(_QWORD *)(v4 + 41968);
  v6 = *(_DWORD *)(v5 + 4);
  if (!v6)
    return *(_QWORD *)(v4 + 41968);
  if (v6 == 1)
  {
    v9 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_4;
      v10 = v10;
    }
    return *(_QWORD *)(v4 + 8 * v10 + 42216);
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v5 != *(_QWORD *)(v7 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v7;
}

BOOL WebCore::setJSDocument_alinkColor(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  unsigned int *v3;
  WTF::StringImpl *v4;
  int v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v10;
  int v11;
  WTF::StringImpl *v12;
  int v13;
  char v14;

  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int **)(a2 + 24);
  if (this == (JSC::JSRopeString *)2)
  {
    v4 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v4 += 2;
    v11 = 0;
    goto LABEL_12;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v12);
  LOBYTE(v10) = 0;
  v11 = -1;
  v5 = v13;
  if (v13 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E325BFE8[v13])(&v14, &v10, &v12);
  v11 = v5;
  if (v13 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E325A6F0[v13])(&v14, &v12);
    v5 = v11;
  }
  if (!v5)
  {
    v4 = v10;
LABEL_12:
    v10 = 0;
    v12 = v4;
    WebCore::Document::setAlinkColor(v3, &v12);
    v7 = v12;
    v12 = 0;
    if (v7)
    {
      if (*(_DWORD *)v7 == 2)
        WTF::StringImpl::destroy(v7, v6);
      else
        *(_DWORD *)v7 -= 2;
    }
    v8 = 1;
    v5 = v11;
    goto LABEL_16;
  }
  v8 = 0;
LABEL_16:
  if (v5 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A6F0[v5])(&v12, &v10);
  return v8;
}

uint64_t WebCore::jsDocument_bgColor(uint64_t a1, WebCore::Document **a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;

  v3 = (uint64_t *)WebCore::Document::bgColor(a2[3], a2);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *v3;
  if (!*v3)
    return *(_QWORD *)(v4 + 41968);
  v6 = *(_DWORD *)(v5 + 4);
  if (!v6)
    return *(_QWORD *)(v4 + 41968);
  if (v6 == 1)
  {
    v9 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v10 = *(unsigned __int16 *)v9;
      if (v10 > 0xFF)
        goto LABEL_4;
      v10 = v10;
    }
    return *(_QWORD *)(v4 + 8 * v10 + 42216);
  }
LABEL_4:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v5 != *(_QWORD *)(v7 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v7;
}

BOOL WebCore::setJSDocument_bgColor(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  unsigned int *v3;
  WTF::StringImpl *v4;
  int v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v10;
  int v11;
  WTF::StringImpl *v12;
  int v13;
  char v14;

  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int **)(a2 + 24);
  if (this == (JSC::JSRopeString *)2)
  {
    v4 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v4 += 2;
    v11 = 0;
    goto LABEL_12;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, (unint64_t)this, (uint64_t)&v12);
  LOBYTE(v10) = 0;
  v11 = -1;
  v5 = v13;
  if (v13 == -1)
    return 0;
  ((void (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E325BFE8[v13])(&v14, &v10, &v12);
  v11 = v5;
  if (v13 != -1)
  {
    ((void (*)(char *, WTF::StringImpl **))off_1E325A6F0[v13])(&v14, &v12);
    v5 = v11;
  }
  if (!v5)
  {
    v4 = v10;
LABEL_12:
    v10 = 0;
    v12 = v4;
    WebCore::Document::setBgColor(v3, &v12);
    v7 = v12;
    v12 = 0;
    if (v7)
    {
      if (*(_DWORD *)v7 == 2)
        WTF::StringImpl::destroy(v7, v6);
      else
        *(_DWORD *)v7 -= 2;
    }
    v8 = 1;
    v5 = v11;
    goto LABEL_16;
  }
  v8 = 0;
LABEL_16:
  if (v5 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A6F0[v5])(&v12, &v10);
  return v8;
}

unint64_t WebCore::jsDocument_anchors(int a1, WebCore::Node **a2)
{
  JSC::VM *v3;
  unint64_t v4;
  _DWORD *v5;
  _DWORD *v7;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::Document::ensureCachedCollection<(WebCore::CollectionType)5>(a2[3], (WTF::StringImpl *)a2, &v7);
  v4 = WebCore::wrap<WebCore::HTMLCollection>(a1, v3, (uint64_t)v7);
  v5 = v7;
  v7 = 0;
  if (v5)
  {
    if (v5[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v5 + 8))(v5);
    else
      --v5[4];
  }
  return v4;
}

unint64_t WebCore::jsDocument_applets(int a1, WebCore::Document **a2)
{
  JSC::VM *v3;
  unint64_t v4;
  _DWORD *v5;
  _DWORD *v7;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::Document::applets(a2[3], (WTF::StringImpl *)a2, &v7);
  v4 = WebCore::wrap<WebCore::HTMLCollection>(a1, v3, (uint64_t)v7);
  v5 = v7;
  v7 = 0;
  if (v5)
  {
    if (v5[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v5 + 8))(v5);
    else
      --v5[4];
  }
  return v4;
}

unint64_t WebCore::jsDocument_all(WebCore *a1, WebCore::JSDocument **a2)
{
  return WebCore::jsDocument_allGetter(a1, (JSC::JSGlobalObject *)*(unsigned int *)a2, a2[3]);
}

uint64_t WebCore::jsDocument_visibilityState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = WebCore::Document::visibilityState(*(WebCore::Document **)(a2 + 24));
  return WebCore::convertEnumerationToJS<WebCore::VisibilityState>(*(_QWORD *)(a1 + 56), v3);
}

uint64_t WebCore::jsDocument_onvisibilitychange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2248), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onvisibilitychange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2248), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

unint64_t WebCore::jsDocument_undoManager(uint64_t a1, uint64_t a2)
{
  WebCore::Document *v3;
  uint64_t v4;
  WTF *v5;

  v3 = *(WebCore::Document **)(a2 + 24);
  v4 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v5 = (WTF *)*((_QWORD *)v3 + 381);
  if (!v5)
    v5 = (WTF *)WebCore::Document::ensureUndoManager(v3);
  return WebCore::wrap<WebCore::UndoManager>(a1, v4, v5);
}

uint64_t WebCore::jsDocument_onbeforecopy(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 224), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onbeforecopy(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 224), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onbeforecut(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 232), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onbeforecut(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 232), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onbeforeinput(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 240), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onbeforeinput(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 240), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onbeforepaste(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 256), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onbeforepaste(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 256), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_pictureInPictureElement(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::HTMLElement *a4)
{
  uint64_t v4;
  WebCore::JSDOMGlobalObject *v5;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 3032);
  if (v4 && (v5 = *(WebCore::JSDOMGlobalObject **)(v4 + 8)) != 0)
    return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v5, a4);
  else
    return 2;
}

unint64_t WebCore::jsDocument_styleSheets(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  WTF *v5;
  unsigned int *v6;
  void *v7;
  unsigned int v8;
  WebCore::StyleSheetList *v9;
  WTF *v11;
  void *v12;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v5 = *(WTF **)(v3 + 1344);
  if (!v5)
  {
    v5 = (WTF *)WTF::fastMalloc((WTF *)0x28);
    *(_DWORD *)v5 = 1;
    v6 = (unsigned int *)WTF::WeakPtr<WebCore::LocalDOMWindow,WebCore::WeakPtrImplWithEventTargetData,WTF::RawPtrTraits<WebCore::WeakPtrImplWithEventTargetData>>::implForObject<WebCore::LocalDOMWindow>(v3);
    if (v6)
    {
      do
        v8 = __ldaxr(v6);
      while (__stlxr(v8 + 1, v6));
    }
    *((_QWORD *)v5 + 1) = v6;
    *((_QWORD *)v5 + 2) = 0;
    *((_QWORD *)v5 + 3) = 0;
    *((_QWORD *)v5 + 4) = 0;
    v9 = *(WebCore::StyleSheetList **)(v3 + 1344);
    *(_QWORD *)(v3 + 1344) = v5;
    if (v9)
    {
      if (*(_DWORD *)v9 == 1)
      {
        WebCore::StyleSheetList::~StyleSheetList(v9, v7);
        WTF::fastFree(v11, v12);
        v5 = *(WTF **)(v3 + 1344);
      }
      else
      {
        --*(_DWORD *)v9;
      }
    }
  }
  return WebCore::wrap<WebCore::StyleSheetList>(a1, v4, v5);
}

unint64_t WebCore::jsDocument_adoptedStyleSheets(WebCore::JSDOMGlobalObject *a1, uint64_t a2)
{
  unint64_t v2;
  JSC::VM *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a2 + 32);
  if (!v2)
  {
    v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
    v2 = WebCore::TreeScope::adoptedStyleSheetWrapper((WebCore::TreeScope *)(*(_QWORD *)(a2 + 24) + 96), a1);
    if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    {
      return 0;
    }
    else
    {
      v6 = *((_QWORD *)a1 + 7);
      *(_QWORD *)(a2 + 32) = v2;
      if ((v2 & 0xFFFE000000000002) == 0 && v2 && *(_DWORD *)(v6 + 760) >= *(unsigned __int8 *)(a2 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v6 + 192), (const JSCell *)a2);
    }
  }
  return v2;
}

BOOL WebCore::setJSDocument_adoptedStyleSheets(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  WebCore::setAdoptedStyleSheetsOnTreeScope((uint64_t *)(*(_QWORD *)(a2 + 24) + 96), a1, a3);
  return 1;
}

unint64_t WebCore::jsDocument_fullscreenElement(WebCore *a1, WebCore::TreeScope *a2)
{
  JSC::JSGlobalObject *v3;
  WebCore::Element *v4;
  WebCore::Element *v5;

  v3 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = WebCore::DocumentOrShadowRootFullscreen::fullscreenElement((WebCore::DocumentOrShadowRootFullscreen *)(*((_QWORD *)a2 + 3) + 96), a2);
  if (v4)
    return WebCore::toJS(a1, v3, v4, v5);
  else
    return 2;
}

BOOL WebCore::setJSDocument_fullscreenElement(uint64_t a1, uint64_t a2)
{
  return (a2 & 0xFFFE000000000002) == 0 && *(unsigned __int8 *)(a2 + 5) == 249
      || JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsDocument_onabort(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 64), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onabort(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 64), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onbeforetoggle(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 272), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onbeforetoggle(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 272), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onblur(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 304), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onblur(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 304), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_oncancel(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 344), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_oncancel(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 344), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_oncanplay(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 352), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_oncanplay(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 352), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_oncanplaythrough(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 360), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_oncanplaythrough(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 360), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onchange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 368), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onchange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 368), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onclick(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 400), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onclick(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 400), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onclose(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 408), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onclose(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 408), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_oncontentvisibilityautostatechange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 488), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_oncontentvisibilityautostatechange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 488), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_oncontextmenu(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 496), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_oncontextmenu(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 496), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_oncopy(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 528), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_oncopy(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 528), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_oncuechange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 544), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_oncuechange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 544), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_oncut(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 560), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_oncut(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 560), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_ondblclick(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 584), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_ondblclick(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 584), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_ondrag(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 656), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_ondrag(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 656), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_ondragend(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 664), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_ondragend(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 664), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_ondragenter(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 672), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_ondragenter(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 672), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_ondragleave(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 680), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_ondragleave(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 680), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_ondragover(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 688), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_ondragover(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 688), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_ondragstart(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 696), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_ondragstart(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 696), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_ondrop(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 704), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_ondrop(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 704), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_ondurationchange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 712), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_ondurationchange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 712), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onemptied(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 720), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onemptied(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 720), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onended(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 752), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onended(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 752), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onerror(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 784), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onerror(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 784), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onfocus(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 816), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onfocus(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 816), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onformdata(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 840), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onformdata(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 840), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_oninput(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1008), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_oninput(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1008), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_oninvalid(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1032), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_oninvalid(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1032), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onkeydown(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1048), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::IDLAttribute<WebCore::JSDocument>::set<&WebCore::setJSDocument_onkeydownSetter,(WebCore::CastedThisErrorBehavior)0>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  WebCore::setJSDocument_onkeydownSetter(*(_DWORD **)(a1 + 56), a2, a3);
  return 1;
}

uint64_t WebCore::jsDocument_onkeypress(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1056), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onkeypress(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1056), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onkeyup(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1072), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onkeyup(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1072), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onload(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1104), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onload(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1104), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onloadeddata(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1112), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onloadeddata(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1112), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onloadedmetadata(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1120), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onloadedmetadata(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1120), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onloadstart(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1160), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onloadstart(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1160), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onmousedown(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1208), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onmousedown(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1208), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onmouseenter(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return 10;
  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1216), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSDocument_onmouseenter(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return 0;
  v5 = *((_QWORD *)a1 + 7);
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1216), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v5 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v5 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onmouseleave(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return 10;
  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1224), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

uint64_t WebCore::setJSDocument_onmouseleave(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return 0;
  v5 = *((_QWORD *)a1 + 7);
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1224), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v5 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v5 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onmousemove(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1232), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onmousemove(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1232), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onmouseout(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1240), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onmouseout(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1240), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onmouseover(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1248), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onmouseover(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1248), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onmouseup(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1256), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onmouseup(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1256), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onpaste(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1416), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onpaste(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1416), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onpause(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1424), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onpause(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1424), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onplay(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1464), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onplay(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1464), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onplaying(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1472), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onplaying(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1472), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onprogress(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1584), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onprogress(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1584), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onratechange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1624), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onratechange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1624), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onreset(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1688), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onreset(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1688), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onresize(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1696), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onresize(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1696), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onscroll(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1736), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onscroll(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1736), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onsecuritypolicyviolation(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1752), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onsecuritypolicyviolation(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1752), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onseeked(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1760), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onseeked(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1760), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onseeking(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1768), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onseeking(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1768), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onselect(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1776), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onselect(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1776), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onslotchange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1864), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onslotchange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1864), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onstalled(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1952), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onstalled(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1952), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onsubmit(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2008), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onsubmit(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2008), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onsuspend(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2024), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onsuspend(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2024), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_ontimeupdate(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2048), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_ontimeupdate(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2048), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_ontoggle(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2056), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_ontoggle(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2056), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onvolumechange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2264), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onvolumechange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2264), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onwaiting(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2272), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onwaiting(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2272), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onwebkitanimationend(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2312), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onwebkitanimationend(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2312), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onwebkitanimationiteration(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2320), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onwebkitanimationiteration(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2320), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onwebkitanimationstart(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2328), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onwebkitanimationstart(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2328), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onwebkittransitionend(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2344), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onwebkittransitionend(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2344), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onwheel(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2512), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onwheel(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2512), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onmousewheel(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1264), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onmousewheel(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1264), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onsearch(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1744), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onsearch(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1744), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_ontouchcancel(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2072), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_ontouchcancel(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2072), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_ontouchend(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2080), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_ontouchend(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2080), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_ontouchmove(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2096), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_ontouchmove(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2096), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_ontouchstart(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2104), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_ontouchstart(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2104), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_ontouchforcechange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2088), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_ontouchforcechange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2088), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onwebkitmouseforcechanged(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2416), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onwebkitmouseforcechanged(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2416), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onwebkitmouseforcedown(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2424), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onwebkitmouseforcedown(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2424), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onwebkitmouseforcewillbegin(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2440), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onwebkitmouseforcewillbegin(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2440), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onwebkitmouseforceup(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2432), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onwebkitmouseforceup(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2432), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onanimationstart(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 144), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onanimationstart(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 144), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onanimationiteration(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 136), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onanimationiteration(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 136), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onanimationend(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 128), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onanimationend(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 128), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onanimationcancel(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 120), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onanimationcancel(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 120), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_ontransitionrun(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2136), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_ontransitionrun(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2136), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_ontransitionstart(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2144), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_ontransitionstart(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2144), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_ontransitionend(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2128), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_ontransitionend(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2128), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_ontransitioncancel(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 2120), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_ontransitioncancel(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 2120), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_ongotpointercapture(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 952), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_ongotpointercapture(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 952), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onlostpointercapture(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1168), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onlostpointercapture(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1168), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onpointerdown(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1488), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onpointerdown(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1488), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onpointermove(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1528), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onpointermove(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1528), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onpointerup(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1552), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onpointerup(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1552), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onpointercancel(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1480), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onpointercancel(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1480), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onpointerover(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1544), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onpointerover(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1544), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onpointerout(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1536), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onpointerout(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1536), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onpointerenter(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1496), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onpointerenter(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1496), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onpointerleave(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1504), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onpointerleave(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1504), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onselectstart(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1808), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onselectstart(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1808), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsDocument_onselectionchange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v5 + 24) += 2;
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute((WebCore *)v5, (WebCore::EventTarget *)(v8 + 1800), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, v9);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  return v10;
}

BOOL WebCore::setJSDocument_onselectionchange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(v6 + 24) += 2;
  v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v7 || (v8 = *(_QWORD *)(v7 + 96)) == 0)
    v8 = WebCore::threadGlobalDataSlow(a1);
  v9 = *(_QWORD *)(v8 + 40);
  if (!v9)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
    v9 = *(_QWORD *)(v8 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)v6, (WTF::StringImpl **)(v9 + 1800), a3, (_DWORD *)a2);
  if (*(_DWORD *)(v6 + 24) == 2)
  {
    if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v6, v10);
  }
  else
  {
    *(_DWORD *)(v6 + 24) -= 2;
  }
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

unint64_t WebCore::jsDocument_children(int a1, WebCore::ContainerNode **a2)
{
  JSC::VM *v3;
  unint64_t v4;
  _DWORD *v5;
  _DWORD *v7;

  v3 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  WebCore::ContainerNode::children(a2[3], (WTF::StringImpl *)a2, &v7);
  v4 = WebCore::wrap<WebCore::HTMLCollection>(a1, v3, (uint64_t)v7);
  v5 = v7;
  v7 = 0;
  if (v5)
  {
    if (v5[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v5 + 8))(v5);
    else
      --v5[4];
  }
  return v4;
}

unint64_t WebCore::jsDocument_firstElementChild(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::Element *a4)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 80);
  if (!v4)
    return 2;
  while ((*(_WORD *)(v4 + 28) & 8) == 0)
  {
    v4 = *(_QWORD *)(v4 + 56);
    if (!v4)
      return 2;
  }
  return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), (WebCore::JSDOMGlobalObject *)v4, a4);
}

unint64_t WebCore::jsDocument_lastElementChild(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::Element *a4)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 88);
  if (!v4)
    return 2;
  while ((*(_WORD *)(v4 + 28) & 8) == 0)
  {
    v4 = *(_QWORD *)(v4 + 48) & 0xFFFFFFFFFFFFLL;
    if (!v4)
      return 2;
  }
  return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), (WebCore::JSDOMGlobalObject *)v4, a4);
}

uint64_t WebCore::jsDocument_childElementCount(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 80);
  if (!v2)
  {
LABEL_4:
    v3 = 0;
    return v3 | 0xFFFE000000000000;
  }
  while ((*(_WORD *)(v2 + 28) & 8) == 0)
  {
    v2 = *(_QWORD *)(v2 + 56);
    if (!v2)
      goto LABEL_4;
  }
  v3 = 0;
LABEL_6:
  ++v3;
  while (1)
  {
    v2 = *(_QWORD *)(v2 + 56);
    if (!v2)
      break;
    if ((*(_WORD *)(v2 + 28) & 8) != 0)
      goto LABEL_6;
  }
  if ((v3 & 0x80000000) == 0)
    return v3 | 0xFFFE000000000000;
  return COERCE__INT64((double)v3) + 0x2000000000000;
}

uint64_t WebCore::jsDocument_rootElement(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::Element *a4)
{
  uint64_t v4;
  JSC::JSGlobalObject *v5;
  void *v6;
  unint64_t v7;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 1272);
  if (!v4
    || (*(_WORD *)(v4 + 28) & 0x20) == 0
    || *(_QWORD *)(*(_QWORD *)(v4 + 96) + 24) != *(_QWORD *)(WebCore::SVGNames::svgTag + 24))
  {
    return 2;
  }
  v5 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  *(_DWORD *)(v4 + 24) += 2;
  v7 = WebCore::toJS(a1, v5, (WebCore::JSDOMGlobalObject *)v4, a4);
  if (*(_DWORD *)(v4 + 24) == 2)
  {
    if ((*(_WORD *)(v4 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v4, v6);
  }
  else
  {
    *(_DWORD *)(v4 + 24) -= 2;
  }
  return v7;
}

unint64_t jsDocumentPrototypeFunction_getElementByIdWithoutTypeCheck(JSC::JSGlobalObject *a1, WTF::StringImpl *a2, JSC::JSRopeString *this)
{
  uint64_t v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  unint64_t v8;
  unsigned int *v10;
  JSC::JSGlobalObject *v11;
  WebCore::Element *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *var38[8];

  v5 = *((_QWORD *)a1 + 7);
  *(WTF::StringImpl **)(v5 + 40) = var38[7];
  v6 = *((_QWORD *)a2 + 3);
  v7 = (WTF::StringImpl *)*((_QWORD *)this + 1);
  if ((v7 & 1) != 0)
  {
    JSC::JSRopeString::resolveRopeToExistingAtomString(this, a1);
  }
  else
  {
    if ((*((_BYTE *)v7 + 16) & 0x10) != 0)
    {
      *(_DWORD *)v7 += 2;
      goto LABEL_4;
    }
    WTF::AtomStringImpl::lookUpSlowCase(*((WTF::AtomStringImpl **)this + 1), a2);
  }
  v7 = var38[0];
LABEL_4:
  v14 = v7;
  if (*(_DWORD *)(v5 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5))
  {
    v8 = 0;
  }
  else if (v7
         && *((_DWORD *)v7 + 1)
         && (v10 = *(unsigned int **)(v6 + 120)) != 0
         && (v11 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28),
             WebCore::TreeScopeOrderedMap::getElementById(v10, (const WTF::AtomString *)&v14, (const WebCore::TreeScope *)(v6 + 96), (uint64_t *)var38), (v13 = var38[0]) != 0))
  {
    v8 = WebCore::toJS(a1, v11, var38[0], v12);
    if (*((_DWORD *)v13 + 6) == 2)
    {
      if ((*((_WORD *)v13 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v13, a2);
    }
    else
    {
      *((_DWORD *)v13 + 6) -= 2;
    }
  }
  else
  {
    v8 = 2;
  }
  if (v7)
  {
    if (*(_DWORD *)v7 == 2)
      WTF::StringImpl::destroy(v7, a2);
    else
      *(_DWORD *)v7 -= 2;
  }
  return v8;
}

uint64_t WebCore::JSDocument::subspaceForImpl(WebCore::JSDocument *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3608);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 3608);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 40, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 3608);
    *(_QWORD *)(v8 + 3608) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 3608);
  *(_QWORD *)(v3 + 3608) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSDocument::toWrapped(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return 0;
  else
    return *(_QWORD *)(a2 + 24);
}

void WebCore::JSCustomStateSetOwner::~JSCustomStateSetOwner(WebCore::JSCustomStateSetOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

BOOL WebCore::JSCustomXPathNSResolver::hasCallback(WebCore::JSCustomXPathNSResolver *this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *((_QWORD *)this + 4);
  return v1 && (v2 = *(_QWORD *)(v1 + 16)) != 0 && (*(_BYTE *)(v2 + 8) & 3) == 0 && *(_QWORD *)v2 != 0;
}

void WebCore::JSDOMApplicationCacheOwner::~JSDOMApplicationCacheOwner(WebCore::JSDOMApplicationCacheOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMAudioSessionOwner::~JSDOMAudioSessionOwner(WebCore::JSDOMAudioSessionOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMCacheOwner::~JSDOMCacheOwner(WebCore::JSDOMCacheOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMCacheStorageOwner::~JSDOMCacheStorageOwner(WebCore::JSDOMCacheStorageOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMExceptionOwner::~JSDOMExceptionOwner(WebCore::JSDOMExceptionOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMFileSystemOwner::~JSDOMFileSystemOwner(WebCore::JSDOMFileSystemOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMFormDataOwner::~JSDOMFormDataOwner(WebCore::JSDOMFormDataOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMImplementationOwner::~JSDOMImplementationOwner(WebCore::JSDOMImplementationOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMMatrixReadOnlyOwner::~JSDOMMatrixReadOnlyOwner(WebCore::JSDOMMatrixReadOnlyOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMMimeTypeOwner::~JSDOMMimeTypeOwner(WebCore::JSDOMMimeTypeOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMMimeTypeArrayOwner::~JSDOMMimeTypeArrayOwner(WebCore::JSDOMMimeTypeArrayOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMParserOwner::~JSDOMParserOwner(WebCore::JSDOMParserOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMPluginOwner::~JSDOMPluginOwner(WebCore::JSDOMPluginOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMPluginArrayOwner::~JSDOMPluginArrayOwner(WebCore::JSDOMPluginArrayOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMPointOwner::~JSDOMPointOwner(WebCore::JSDOMPointOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMPointReadOnlyOwner::~JSDOMPointReadOnlyOwner(WebCore::JSDOMPointReadOnlyOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMQuadOwner::~JSDOMQuadOwner(WebCore::JSDOMQuadOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMRectListOwner::~JSDOMRectListOwner(WebCore::JSDOMRectListOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMRectReadOnlyOwner::~JSDOMRectReadOnlyOwner(WebCore::JSDOMRectReadOnlyOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMSelectionOwner::~JSDOMSelectionOwner(WebCore::JSDOMSelectionOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMStringListOwner::~JSDOMStringListOwner(WebCore::JSDOMStringListOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMStringMapOwner::~JSDOMStringMapOwner(WebCore::JSDOMStringMapOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMTokenListOwner::~JSDOMTokenListOwner(WebCore::JSDOMTokenListOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDOMURLOwner::~JSDOMURLOwner(WebCore::JSDOMURLOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDataTransferOwner::~JSDataTransferOwner(WebCore::JSDataTransferOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDataTransferItemOwner::~JSDataTransferItemOwner(WebCore::JSDataTransferItemOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDataTransferItemListOwner::~JSDataTransferItemListOwner(WebCore::JSDataTransferItemListOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDatabaseOwner::~JSDatabaseOwner(WebCore::JSDatabaseOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

BOOL WebCore::JSDatabaseCallback::hasCallback(WebCore::JSDatabaseCallback *this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *((_QWORD *)this + 3);
  return v1 && (v2 = *(_QWORD *)(v1 + 16)) != 0 && (*(_BYTE *)(v2 + 8) & 3) == 0 && *(_QWORD *)v2 != 0;
}

void WebCore::JSDecompressionStreamDecoderOwner::~JSDecompressionStreamDecoderOwner(WebCore::JSDecompressionStreamDecoderOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDeprecatedCSSOMCounterOwner::~JSDeprecatedCSSOMCounterOwner(WebCore::JSDeprecatedCSSOMCounterOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDeprecatedCSSOMRGBColorOwner::~JSDeprecatedCSSOMRGBColorOwner(WebCore::JSDeprecatedCSSOMRGBColorOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSDeprecatedCSSOMRectOwner::~JSDeprecatedCSSOMRectOwner(WebCore::JSDeprecatedCSSOMRectOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

unint64_t JSC::allocateCell<JSC::JSString>(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t result;
  unint64_t v4;

  v2 = (_QWORD *)(a1 + 39696);
  result = *(_QWORD *)(a1 + 39696);
  if (result >= v2[1])
  {
    result = v2[2];
    if ((result & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      result = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_3;
    }
    v4 = *(_QWORD *)(result + 8) ^ v2[3];
    v2[1] = result + HIDWORD(v4);
    v2[2] = result + (int)v4;
  }
  *v2 = result + ((a2 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_3:
  *(_DWORD *)result = 0;
  return result;
}

_BYTE *WebCore::jsCustomStateSetPrototypeFunction_has(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  JSC::JSGlobalObject *v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  JSC::JSObject *v12;
  int v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  JSC::CallFrame *v16;
  const JSC::Identifier *v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  JSValue v23;
  JSC::VM *v24;
  WTF::StringImpl *v25;
  int v26;
  WTF::StringImpl *v27;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v24 = v4;
  v5 = (JSC::JSGlobalObject *)*((_QWORD *)a2 + 5);
  if (((unint64_t)v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "CustomStateSet", "has");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCustomStateSet::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCustomStateSet::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "CustomStateSet", "has");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v23.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v23);
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v25);
  v13 = v26;
  if (!v26)
  {
    v14 = v25;
    v25 = 0;
    WebCore::getBackingSet((unint64_t)this, v5, v12);
    v15 = (WTF::StringImpl *)MEMORY[0x1E0CBEBB0];
    *MEMORY[0x1E0CBEBB0] += 2;
    v27 = v15;
    v19 = WebCore::forwardFunctionCallToBackingSet((unint64_t)this, (JSCell *)a2, v16, (JSC::JSObject *)&v27, v17);
    v20 = v27;
    v27 = 0;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
      {
        WTF::StringImpl::destroy(v20, v18);
        if (v14)
        {
LABEL_18:
          if (*(_DWORD *)v14 == 2)
            WTF::StringImpl::destroy(v14, v18);
          else
            *(_DWORD *)v14 -= 2;
        }
LABEL_20:
        v13 = v26;
        goto LABEL_21;
      }
      *(_DWORD *)v20 -= 2;
    }
    if (v14)
      goto LABEL_18;
    goto LABEL_20;
  }
  v19 = 0;
LABEL_21:
  if (v13 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A6F0[v13])(&v27, &v25);
  return (_BYTE *)v19;
}

_BYTE *WebCore::jsCustomStateSetPrototypeFunction_entries(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::JSGlobalObject *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WTF::StringImpl *v11;
  JSC::CallFrame *v12;
  const JSC::Identifier *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  uint64_t v18;
  WTF::StringImpl *v19;

  v18 = *((_QWORD *)this + 7);
  v5 = (JSC::JSGlobalObject *)*((_QWORD *)a2 + 5);
  if (((unint64_t)v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v18, "CustomStateSet", "entries");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCustomStateSet::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCustomStateSet::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v18, "CustomStateSet", "entries");
  WebCore::getBackingSet((unint64_t)this, v5, a3);
  v11 = (WTF::StringImpl *)MEMORY[0x1E0CBEBF8];
  *MEMORY[0x1E0CBEBF8] += 2;
  v19 = v11;
  v15 = WebCore::forwardFunctionCallToBackingSet((unint64_t)this, (JSCell *)a2, v12, (JSC::JSObject *)&v19, v13);
  v16 = v19;
  v19 = 0;
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v14);
    else
      *(_DWORD *)v16 -= 2;
  }
  return (_BYTE *)v15;
}

_BYTE *WebCore::jsCustomStateSetPrototypeFunction_keys(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::JSGlobalObject *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WTF::StringImpl *v11;
  JSC::CallFrame *v12;
  const JSC::Identifier *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  uint64_t v18;
  WTF::StringImpl *v19;

  v18 = *((_QWORD *)this + 7);
  v5 = (JSC::JSGlobalObject *)*((_QWORD *)a2 + 5);
  if (((unint64_t)v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v18, "CustomStateSet", "keys");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCustomStateSet::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCustomStateSet::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v18, "CustomStateSet", "keys");
  WebCore::getBackingSet((unint64_t)this, v5, a3);
  v11 = (WTF::StringImpl *)MEMORY[0x1E0CBEBC0];
  *MEMORY[0x1E0CBEBC0] += 2;
  v19 = v11;
  v15 = WebCore::forwardFunctionCallToBackingSet((unint64_t)this, (JSCell *)a2, v12, (JSC::JSObject *)&v19, v13);
  v16 = v19;
  v19 = 0;
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v14);
    else
      *(_DWORD *)v16 -= 2;
  }
  return (_BYTE *)v15;
}

_BYTE *WebCore::jsCustomStateSetPrototypeFunction_values(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::JSGlobalObject *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WTF::StringImpl *v11;
  JSC::CallFrame *v12;
  const JSC::Identifier *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  uint64_t v18;
  WTF::StringImpl *v19;

  v18 = *((_QWORD *)this + 7);
  v5 = (JSC::JSGlobalObject *)*((_QWORD *)a2 + 5);
  if (((unint64_t)v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v18, "CustomStateSet", "values");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCustomStateSet::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCustomStateSet::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v18, "CustomStateSet", "values");
  WebCore::getBackingSet((unint64_t)this, v5, a3);
  v11 = (WTF::StringImpl *)MEMORY[0x1E0CBEBF0];
  *MEMORY[0x1E0CBEBF0] += 2;
  v19 = v11;
  v15 = WebCore::forwardFunctionCallToBackingSet((unint64_t)this, (JSCell *)a2, v12, (JSC::JSObject *)&v19, v13);
  v16 = v19;
  v19 = 0;
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v14);
    else
      *(_DWORD *)v16 -= 2;
  }
  return (_BYTE *)v15;
}

_BYTE *WebCore::jsCustomStateSetPrototypeFunction_forEach(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  JSC::CallFrame *v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  JSC::JSObject *v12;
  JSValue v14;
  JSC::VM *v15;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v15 = v4;
  v5 = (JSC::CallFrame *)*((_QWORD *)a2 + 5);
  if (((unint64_t)v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v15, "CustomStateSet", "forEach");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCustomStateSet::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCustomStateSet::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v15, "CustomStateSet", "forEach");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v14.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v14);
  }
  else
  {
    WebCore::getBackingSet((unint64_t)this, *((JSC::JSGlobalObject **)a2 + 5), a3);
    return (_BYTE *)WebCore::forwardForEachCallToBackingSet(this, a2, v5, v12);
  }
}

WebCore::CustomStateSet **WebCore::jsCustomStateSetPrototypeFunction_add(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  WebCore::CustomStateSet **v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  int v12;
  WTF::StringImpl *v13;
  JSC::JSObject *v14;
  WTF::StringImpl *v15;
  JSC::CallFrame *v16;
  const JSC::Identifier *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  JSValue v22;
  JSC::VM *v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  int v26;
  WTF::StringImpl *v27;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v23 = v4;
  v5 = (WebCore::CustomStateSet **)*((_QWORD *)a2 + 5);
  if (((unint64_t)v5 & 0xFFFE000000000002) != 0)
    return (WebCore::CustomStateSet **)WebCore::throwThisTypeError((int)this, (int)&v23, "CustomStateSet", "add");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCustomStateSet::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCustomStateSet::s_info && v9 != 0);
  }
  if (!v8)
    return (WebCore::CustomStateSet **)WebCore::throwThisTypeError((int)this, (int)&v23, "CustomStateSet", "add");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v22.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (WebCore::CustomStateSet **)JSC::VM::throwException(v4, this, v22);
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v25);
  v12 = v26;
  if (!v26)
  {
    v13 = v25;
    v24 = v25;
    v25 = 0;
    WebCore::CustomStateSet::addToSetLike(v5[3], &v24);
    WebCore::getBackingSet((unint64_t)this, (JSC::JSGlobalObject *)v5, v14);
    v15 = (WTF::StringImpl *)MEMORY[0x1E0CBEBA0];
    *MEMORY[0x1E0CBEBA0] += 2;
    v27 = v15;
    WebCore::forwardFunctionCallToBackingSet((unint64_t)this, (JSCell *)a2, v16, (JSC::JSObject *)&v27, v17);
    v19 = v27;
    v27 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
      {
        WTF::StringImpl::destroy(v19, v18);
        if (v13)
        {
LABEL_18:
          if (*(_DWORD *)v13 == 2)
            WTF::StringImpl::destroy(v13, v18);
          else
            *(_DWORD *)v13 -= 2;
        }
LABEL_20:
        v12 = v26;
        goto LABEL_21;
      }
      *(_DWORD *)v19 -= 2;
    }
    if (v13)
      goto LABEL_18;
    goto LABEL_20;
  }
  v5 = 0;
LABEL_21:
  if (v12 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A6F0[v12])(&v27, &v25);
  return v5;
}

_BYTE *WebCore::jsCustomStateSetPrototypeFunction_clear(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v4;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  JSC::JSObject *v11;
  WTF::StringImpl *v12;
  JSC::CallFrame *v13;
  const JSC::Identifier *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  uint64_t v19;
  WTF::StringImpl *v20;

  v19 = *((_QWORD *)this + 7);
  v4 = *((_QWORD *)a2 + 5);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v19, "CustomStateSet", "clear");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCustomStateSet::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCustomStateSet::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v19, "CustomStateSet", "clear");
  WebCore::CustomStateSet::clearFromSetLike(*(_QWORD **)(v4 + 24), a2);
  WebCore::getBackingSet((unint64_t)this, (JSC::JSGlobalObject *)v4, v11);
  v12 = (WTF::StringImpl *)MEMORY[0x1E0CBEBD8];
  *MEMORY[0x1E0CBEBD8] += 2;
  v20 = v12;
  v16 = WebCore::forwardFunctionCallToBackingSet((unint64_t)this, (JSCell *)a2, v13, (JSC::JSObject *)&v20, v14);
  v17 = v20;
  v20 = 0;
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v15);
    else
      *(_DWORD *)v17 -= 2;
  }
  return (_BYTE *)v16;
}

_BYTE *WebCore::jsCustomStateSetPrototypeFunction_delete(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  WebCore::CustomStateSet **v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  JSC::JSObject *v12;
  int v13;
  JSC::CallFrame *v14;
  JSC::CallFrame *v15;
  WTF::StringImpl *v16;
  const JSC::Identifier *v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  JSValue v24;
  JSC::VM *v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  int v28;
  WTF::StringImpl *v29;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v4;
  v5 = (WebCore::CustomStateSet **)*((_QWORD *)a2 + 5);
  if (((unint64_t)v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "CustomStateSet", "delete");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCustomStateSet::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCustomStateSet::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "CustomStateSet", "delete");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v24.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v24);
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v27);
  v13 = v28;
  if (v28)
  {
    v19 = 0;
  }
  else
  {
    v26 = v27;
    v27 = 0;
    WebCore::getBackingSet((unint64_t)this, (JSC::JSGlobalObject *)v5, v12);
    v15 = v14;
    WebCore::CustomStateSet::removeFromSetLike(v5[3], (const WTF::AtomString *)&v26);
    v16 = (WTF::StringImpl *)MEMORY[0x1E0CBEBE0];
    *MEMORY[0x1E0CBEBE0] += 2;
    v29 = v16;
    v19 = WebCore::forwardFunctionCallToBackingSet((unint64_t)this, (JSCell *)a2, v15, (JSC::JSObject *)&v29, v17);
    v20 = v29;
    v29 = 0;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
        WTF::StringImpl::destroy(v20, v18);
      else
        *(_DWORD *)v20 -= 2;
    }
    v21 = v26;
    v26 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v18);
      else
        *(_DWORD *)v21 -= 2;
    }
    v13 = v28;
  }
  if (v13 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A6F0[v13])(&v29, &v27);
  return (_BYTE *)v19;
}

uint64_t WebCore::jsDOMApplicationCachePrototypeFunction_update(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  JSValue v14;
  JSC::VM *v15;
  char v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  char v20;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v15 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v15, "ApplicationCache", "update");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMApplicationCache::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMApplicationCache::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v15, "ApplicationCache", "update");
  WebCore::DOMApplicationCache::update(*(WebCore::DOMApplicationCache **)(v4 + 24), &v18);
  if (!v20)
    return 10;
  v12 = (WTF::StringImpl *)v18;
  v16 = v18;
  v13 = v19;
  v17 = v19;
  if (!*((_QWORD *)v5 + 2))
  {
    v14.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v18, (JSC::JSGlobalObject *)&v17);
    JSC::VM::throwException(v5, this, v14);
    v13 = v17;
  }
  v17 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v12);
    else
      *(_DWORD *)v13 -= 2;
  }
  return 0;
}

uint64_t WebCore::jsDOMApplicationCachePrototypeFunction_swapCache(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WebCore::ApplicationCacheHost *v18;
  uint64_t result;
  JSValue v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  JSC::VM *v23;
  char v24;
  WTF::StringImpl *v25;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v23 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v23, "ApplicationCache", "swapCache");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMApplicationCache::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMApplicationCache::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v23, "ApplicationCache", "swapCache");
  v11 = *(_QWORD *)(*(_QWORD *)(v4 + 24) + 32);
  if (v11)
  {
    v12 = *(_QWORD *)(v11 + 8);
    if (v12)
    {
      v13 = *(_QWORD *)(v12 + 72);
      if (v13)
      {
        v14 = *(_QWORD *)(v13 + 8);
        if (v14)
        {
          if (*(_BYTE *)(v14 + 178))
          {
            result = 105;
            __break(0xC471u);
            return result;
          }
          v15 = *(_QWORD *)(v14 + 240);
          if (v15)
          {
            v16 = *(_QWORD *)(v15 + 8);
            if (v16)
            {
              v17 = *(_QWORD *)(*(_QWORD *)(v16 + 280) + 88);
              if (v17)
              {
                v18 = *(WebCore::ApplicationCacheHost **)(v17 + 2872);
                if (v18)
                {
                  if ((WebCore::ApplicationCacheHost::swapCache(v18, a2) & 1) != 0)
                    return 10;
                }
              }
            }
          }
        }
      }
    }
  }
  v24 = 8;
  v25 = 0;
  if (!*((_QWORD *)v5 + 2))
  {
    v20.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)8, (JSC::JSGlobalObject *)&v25);
    JSC::VM::throwException(v5, this, v20);
    v22 = v25;
    v25 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, v21);
      else
        *(_DWORD *)v22 -= 2;
    }
  }
  return 0;
}

uint64_t WebCore::jsDOMApplicationCachePrototypeFunction_abort(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "ApplicationCache", "abort");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDOMApplicationCache::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDOMApplicationCache::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "ApplicationCache", "abort");
  WebCore::DOMApplicationCache::abort(*(uint64_t **)(v3 + 24));
  return 10;
}

uint64_t WTF::StringImpl::operator[](uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t result;

  if (*(_DWORD *)(a1 + 4) <= a2)
  {
    result = 1161;
    __break(0xC471u);
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 8);
    if ((*(_BYTE *)(a1 + 16) & 4) != 0)
      return *(unsigned __int8 *)(v2 + a2);
    else
      return *(unsigned __int16 *)(v2 + 2 * a2);
  }
  return result;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_supports(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  uint64_t v7;
  const WTF::String *v8;
  uint64_t v9;
  uint64_t v10;
  JSC::VM *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  JSValue v18;
  uint64_t v19;
  const WTF::String *v20;
  uint64_t v21;
  uint64_t v22;
  JSC::VM *v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  JSC::VM *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  WTF::StringImpl *v35;
  int v36;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  int v40;
  WTF::StringImpl *v41;
  int v42;
  WTF::StringImpl *v43;
  int v44;
  WTF::StringImpl *v45;
  WTF::StringImpl *v46;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v5 = *((int *)a2 + 8) - 1;
  if (v5 >= 2)
    v5 = 2;
  if (!v5)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v18);
  }
  if (v5 == 2)
  {
    v19 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if (!v19)
      return 10;
    v21 = v19;
    if (*(_BYTE *)(v19 + 274))
    {
      __break(0xC471u);
      JUMPOUT(0x194A5C75CLL);
    }
    v22 = *((_QWORD *)a2 + 6);
    v41 = (WTF::StringImpl *)v22;
    v23 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((v22 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v22 + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v41, this);
LABEL_32:
      if (*((_DWORD *)v23 + 20))
      {
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v23);
        v25 = v46;
        if (hasExceptionsAfterHandlingTraps)
        {
          v44 = 1;
          v46 = 0;
          if (v25)
          {
            if (*(_DWORD *)v25 == 2)
              WTF::StringImpl::destroy(v25, v38);
            else
              *(_DWORD *)v25 -= 2;
          }
          v15 = 0;
          v17 = 1;
          goto LABEL_22;
        }
      }
      else
      {
        v25 = v46;
      }
      v43 = v25;
      v44 = 0;
      v26 = *((_QWORD *)a2 + 7);
      v46 = (WTF::StringImpl *)v26;
      v27 = (JSC::VM *)*((_QWORD *)this + 7);
      if ((v26 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v26 + 5) != 2)
      {
        JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v46, this);
LABEL_40:
        if (*((_DWORD *)v27 + 20))
        {
          v40 = JSC::VM::hasExceptionsAfterHandlingTraps(v27);
          v29 = v45;
          if (v40)
          {
            v42 = 1;
            v45 = 0;
            if (v29)
            {
              if (*(_DWORD *)v29 == 2)
                WTF::StringImpl::destroy(v29, v39);
              else
                *(_DWORD *)v29 -= 2;
            }
            v15 = 0;
            v33 = 1;
            goto LABEL_52;
          }
        }
        else
        {
          v29 = v45;
        }
        v42 = 0;
        v43 = 0;
        v45 = v29;
        v46 = v25;
        v41 = 0;
        if (WebCore::DOMCSSNamespace::supports((WebCore::DOMCSSNamespace *)(v21 - 192), (WebCore::Document *)&v46, (const WTF::String *)&v45, v20))
        {
          v15 = 7;
        }
        else
        {
          v15 = 6;
        }
        v31 = v45;
        v45 = 0;
        if (v31)
        {
          if (*(_DWORD *)v31 == 2)
            WTF::StringImpl::destroy(v31, v30);
          else
            *(_DWORD *)v31 -= 2;
        }
        v32 = v46;
        v46 = 0;
        if (v32)
        {
          if (*(_DWORD *)v32 == 2)
            WTF::StringImpl::destroy(v32, v30);
          else
            *(_DWORD *)v32 -= 2;
        }
        v33 = 0;
LABEL_52:
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A258[v33])(&v46, &v41);
        v17 = 0;
        goto LABEL_22;
      }
      v28 = *(WTF::StringImpl **)(v26 + 8);
      if ((v28 & 1) != 0)
      {
        v28 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v26, this);
        if (!v28)
          goto LABEL_39;
      }
      else if (!v28)
      {
LABEL_39:
        v45 = v28;
        goto LABEL_40;
      }
      *(_DWORD *)v28 += 2;
      goto LABEL_39;
    }
    v24 = *(WTF::StringImpl **)(v22 + 8);
    if ((v24 & 1) != 0)
    {
      v24 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v22, this);
      if (!v24)
        goto LABEL_31;
    }
    else if (!v24)
    {
LABEL_31:
      v46 = v24;
      goto LABEL_32;
    }
    *(_DWORD *)v24 += 2;
    goto LABEL_31;
  }
  v7 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v7)
    return 10;
  v9 = v7;
  if (*(_BYTE *)(v7 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194A5C73CLL);
  }
  v10 = *((_QWORD *)a2 + 6);
  v41 = (WTF::StringImpl *)v10;
  v11 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v10 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v10 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v41, this);
    goto LABEL_13;
  }
  v12 = *(WTF::StringImpl **)(v10 + 8);
  if ((v12 & 1) != 0)
  {
    v12 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v10, this);
    if (!v12)
      goto LABEL_12;
    goto LABEL_11;
  }
  if (v12)
LABEL_11:
    *(_DWORD *)v12 += 2;
LABEL_12:
  v46 = v12;
LABEL_13:
  if (*((_DWORD *)v11 + 20))
  {
    v36 = JSC::VM::hasExceptionsAfterHandlingTraps(v11);
    v13 = v46;
    if (v36)
    {
      v44 = 1;
      v46 = 0;
      if (v13)
      {
        if (*(_DWORD *)v13 == 2)
          WTF::StringImpl::destroy(v13, v35);
        else
          *(_DWORD *)v13 -= 2;
      }
      v15 = 0;
      v17 = 1;
      goto LABEL_22;
    }
  }
  else
  {
    v13 = v46;
  }
  v44 = 0;
  v43 = 0;
  v41 = v13;
  if (WebCore::DOMCSSNamespace::supports((WebCore::DOMCSSNamespace *)(v9 - 192), (WebCore::Document *)&v41, v8))
    v15 = 7;
  else
    v15 = 6;
  v16 = v41;
  v41 = 0;
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v14);
    else
      *(_DWORD *)v16 -= 2;
  }
  v17 = 0;
LABEL_22:
  ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A258[v17])(&v41, &v43);
  return v15;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_escape(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  uint64_t *v10;
  WTF::StringImpl *v11;
  int v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  unsigned __int8 *v17;
  unsigned int v18;
  unsigned int v19;
  JSValue v20;
  WTF::StringImpl *v21;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v23;
  int v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v20);
  }
  v5 = *((_QWORD *)a2 + 6);
  v26 = (WTF::StringImpl *)v5;
  if ((v5 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v5 + 5) == 2)
  {
    v6 = *(WTF::StringImpl **)(v5 + 8);
    if ((v6 & 1) != 0)
    {
      v6 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v5, this);
      if (!v6)
        goto LABEL_7;
    }
    else if (!v6)
    {
LABEL_7:
      v25 = v6;
      goto LABEL_8;
    }
    *(_DWORD *)v6 += 2;
    goto LABEL_7;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v26, this);
LABEL_8:
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v7 = v25;
    if (hasExceptionsAfterHandlingTraps)
    {
      v24 = 1;
      v25 = 0;
      if (v7)
      {
        if (*(_DWORD *)v7 == 2)
          WTF::StringImpl::destroy(v7, v21);
        else
          *(_DWORD *)v7 -= 2;
      }
      v13 = 0;
      v15 = 1;
      goto LABEL_22;
    }
  }
  else
  {
    v7 = v25;
  }
  v24 = 0;
  v23 = 0;
  v25 = v7;
  WebCore::DOMCSSNamespace::escape((WebCore::DOMCSSNamespace *)&v25, &v26);
  v9 = *((_QWORD *)this + 7);
  v10 = (uint64_t *)(v9 + 41968);
  v11 = v26;
  if (v26)
  {
    v12 = *((_DWORD *)v26 + 1);
    if (v12)
    {
      if (v12 != 1)
      {
LABEL_13:
        v13 = *(_QWORD *)(v9 + 64760);
        if (!v13 || v26 != *(WTF::StringImpl **)(v13 + 8))
          v13 = JSC::jsStringWithCacheSlowCase();
        goto LABEL_16;
      }
      v17 = (unsigned __int8 *)*((_QWORD *)v26 + 1);
      if ((*((_BYTE *)v26 + 16) & 4) != 0)
      {
        v18 = *v17;
      }
      else
      {
        v19 = *(unsigned __int16 *)v17;
        if (v19 > 0xFF)
          goto LABEL_13;
        v18 = v19;
      }
      v13 = *(_QWORD *)(v9 + 8 * v18 + 42216);
    }
    else
    {
      v13 = *v10;
    }
LABEL_16:
    if (*(_DWORD *)v11 == 2)
      WTF::StringImpl::destroy(v11, v8);
    else
      *(_DWORD *)v11 -= 2;
    goto LABEL_18;
  }
  v13 = *v10;
LABEL_18:
  v14 = v25;
  v25 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v8);
    else
      *(_DWORD *)v14 -= 2;
  }
  v15 = 0;
LABEL_22:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E325A258[v15])(&v26, &v23);
  return v13;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_number(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(1u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 1;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_percent(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(3u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 3;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_cap(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x43u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 67;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_ch(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x45u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 69;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_em(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(4u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 4;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_ex(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(5u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 5;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_ic(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x47u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 71;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_lh(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x3Du, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 61;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_rcap(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x44u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 68;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_rch(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x46u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 70;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_rem(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x41u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 65;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_rex(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x42u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 66;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_ric(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x48u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 72;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_rlh(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x3Eu, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 62;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_vw(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x19u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 25;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_vh(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x1Au, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 26;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_vi(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x1Eu, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 30;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_vb(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x1Du, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 29;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_vmin(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x1Bu, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 27;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_vmax(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x1Cu, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 28;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_svw(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x1Fu, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 31;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_svh(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x20u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 32;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_svi(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x24u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 36;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_svb(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x23u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 35;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_svmin(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x21u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 33;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_svmax(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x22u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 34;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_lvw(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x25u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 37;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_lvh(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x26u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 38;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_lvi(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x2Au, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 42;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_lvb(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x29u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 41;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_lvmin(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x27u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 39;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_lvmax(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x28u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 40;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_dvw(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x2Bu, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 43;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_dvh(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x2Cu, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 44;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_dvi(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x30u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 48;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_dvb(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x2Fu, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 47;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_dvmin(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x2Du, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 45;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_dvmax(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x2Eu, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 46;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_cqw(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x31u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 49;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_cqh(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x32u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 50;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_cqi(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x33u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 51;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_cqb(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x34u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 52;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_cqmin(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x35u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 53;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_cqmax(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x36u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 54;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_cm(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(7u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 7;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_mm(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(8u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 8;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_Q(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x3Cu, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 60;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_in(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(9u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 9;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_pt(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0xAu, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 10;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_pc(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0xBu, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 11;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_px(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(6u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 6;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_deg(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0xCu, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 12;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_grad(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0xEu, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 14;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_rad(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0xDu, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 13;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_turn(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x40u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 64;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_s(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x10u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 16;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_ms(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0xFu, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 15;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_Hz(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x11u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 17;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_kHz(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x12u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 18;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_dpi(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x39u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 57;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_dpcm(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x3Au, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 58;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_dppx(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x37u, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 55;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_fr(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  unint64_t v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  JSValue v13;
  double v14;
  _OWORD v15[2];
  _QWORD v16[4];
  char v17;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v5 = *((_QWORD *)a2 + 6);
    v16[0] = v5;
    *(_QWORD *)&v15[0] = v4;
    if (v5 >= 0xFFFE000000000000)
    {
      v6 = (double)(int)v5;
    }
    else if (v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v16, this);
      v6 = v14;
    }
    else
    {
      *(_QWORD *)&v6 = v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    if ((*(_QWORD *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      JSC::throwTypeError();
      return 0;
    }
    v7 = bmalloc::api::isoAllocate();
    WebCore::CSSNumericType::create(0x3Bu, 1, (uint64_t)v16);
    *(_QWORD *)&v8 = 0x8000000080000000;
    *((_QWORD *)&v8 + 1) = 0x8000000080000000;
    v15[0] = v8;
    v15[1] = xmmword_1968BD2E0;
    v9 = v15;
    if (v17)
      v9 = v16;
    *(_DWORD *)(v7 + 8) = 1;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    v10 = v9[1];
    *(_OWORD *)(v7 + 40) = *v9;
    *(_QWORD *)(v7 + 32) = 0;
    *(_OWORD *)(v7 + 56) = v10;
    *(_QWORD *)v7 = &off_1E339F080;
    *(double *)(v7 + 72) = v6;
    *(_BYTE *)(v7 + 80) = 59;
    v11 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, this, v7);
    if (*(_DWORD *)(v7 + 8) == 1)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    else
      --*(_DWORD *)(v7 + 8);
  }
  return v11;
}

uint64_t WebCore::jsDOMCSSNamespaceConstructorFunction_registerProperty(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v6;
  uint64_t v7;
  JSC::JSCell *v8;
  WTF::StringImpl *v9;
  uint64_t Object;
  JSC::Structure *v11;
  WTF::StringImpl *v12;
  unint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  JSC::VM *v16;
  double v17;
  BOOL v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  JSC::VM *v22;
  WTF::StringImpl *v23;
  int v24;
  int v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  unint64_t v28;
  int v29;
  WTF::StringImpl *v30;
  uint64_t v31;
  WTF::StringImpl *v32;
  JSC::VM *v33;
  WTF::StringImpl *v34;
  int v35;
  uint64_t v36;
  __int128 v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  uint64_t v43;
  uint64_t result;
  JSValue v45;
  WTF::StringImpl *v46;
  WTF::StringImpl *v47;
  JSValue v48;
  WTF::StringImpl *v49;
  char hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v51;
  int v52;
  BOOL v53;
  int v54;
  uint64_t v55;
  int *v56;
  int v57;
  JSC::VM *v58;
  __int128 v59;
  BOOL v60;
  WTF::StringImpl *v61;
  unsigned int v62;
  WTF::StringImpl *v63;
  WTF::StringImpl *v64;
  char v65;
  WTF::StringImpl *v66[2];
  BOOL v67;
  WTF::StringImpl *v68;
  JSC::VM *v69;
  WTF::StringImpl *v70;
  _QWORD v71[2];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v45.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v45);
  }
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v6)
    return 10;
  v7 = v6;
  if (*(_BYTE *)(v6 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194A63E40);
  }
  v8 = (JSC::JSCell *)*((_QWORD *)a2 + 6);
  v69 = (JSC::VM *)*((_QWORD *)this + 7);
  if (((unint64_t)v8 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v9 = (WTF::StringImpl *)v59;
    goto LABEL_13;
  }
  if (((unint64_t)v8 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v8)) == 0)
  {
    JSC::throwTypeError();
    v62 = 1;
    goto LABEL_78;
  }
  v11 = (JSC::Structure *)Object;
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v9 = (WTF::StringImpl *)v59;
  WTF::AtomStringImpl::addLiteral();
  v13 = JSC::JSObject::get(v11, this, v59);
  if ((_QWORD)v59)
  {
    if (*(_DWORD *)v59 == 2)
      WTF::StringImpl::destroy((WTF::StringImpl *)v59, v12);
    else
      *(_DWORD *)v59 -= 2;
  }
  if (*((_DWORD *)v69 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v69))
    goto LABEL_14;
  if (v13 == 10)
  {
LABEL_13:
    WebCore::throwRequiredMemberTypeError((int)this, (int)&v69, "inherits", 9, "DOMCSSCustomPropertyDescriptor", 31, "BOOLean", 8);
LABEL_14:
    v15 = 0;
    v62 = 1;
    goto LABEL_72;
  }
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  v58 = v4;
  if (v13 >= 0xFFFE000000000000)
  {
    v53 = (_DWORD)v13 == 0;
    goto LABEL_166;
  }
  *(_QWORD *)&v17 = v13 - 0x2000000000000;
  if (v13 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
  {
    if (v17 <= 0.0)
    {
      v18 = v17 < 0.0;
      goto LABEL_19;
    }
  }
  else
  {
    if ((v13 & 0xFFFE000000000002) != 0)
    {
      v18 = v13 == 7;
      goto LABEL_19;
    }
    v54 = *(unsigned __int8 *)(v13 + 5);
    if (v54 == 3)
    {
      v57 = *(_DWORD *)(v13 + 8);
LABEL_165:
      v53 = v57 == 0;
      goto LABEL_166;
    }
    if (v54 == 2)
    {
      v55 = *(_QWORD *)(v13 + 8);
      if ((v55 & 1) != 0)
        v56 = (int *)(v13 + 16);
      else
        v56 = (int *)(v55 + 4);
      v57 = *v56;
      goto LABEL_165;
    }
    if ((*(_BYTE *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0xA) & 1) != 0)
    {
      v53 = *(_QWORD *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_166:
      v18 = !v53;
      goto LABEL_19;
    }
  }
  v18 = 1;
LABEL_19:
  if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
    goto LABEL_130;
  WTF::AtomStringImpl::addLiteral();
  v20 = JSC::JSObject::get(v11, this, v59);
  if ((_QWORD)v59)
  {
    if (*(_DWORD *)v59 == 2)
      WTF::StringImpl::destroy((WTF::StringImpl *)v59, v19);
    else
      *(_DWORD *)v59 -= 2;
  }
  if (*((_DWORD *)v69 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v69))
  {
LABEL_130:
    v15 = 0;
    v62 = 1;
LABEL_131:
    v4 = v58;
    goto LABEL_72;
  }
  if (v20 == 10)
  {
    v21 = 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v59 = v20;
  v22 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v20 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v20 + 5) == 2)
  {
    v23 = *(WTF::StringImpl **)(v20 + 8);
    if ((v23 & 1) != 0)
    {
      v23 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v20, this);
      if (!v23)
        goto LABEL_31;
    }
    else if (!v23)
    {
LABEL_31:
      v63 = v23;
      goto LABEL_32;
    }
    *(_DWORD *)v23 += 2;
    goto LABEL_31;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v59, this);
LABEL_32:
  if (!*((_DWORD *)v22 + 20))
  {
    v21 = v63;
LABEL_34:
    LODWORD(v66[1]) = 0;
LABEL_35:
    v24 = 0;
    v66[0] = 0;
    v25 = 1;
    goto LABEL_36;
  }
  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v22);
  v21 = v63;
  if ((hasExceptionsAfterHandlingTraps & 1) == 0)
    goto LABEL_34;
  v24 = 1;
  LODWORD(v66[1]) = 1;
  v63 = 0;
  if (!v21)
    goto LABEL_138;
  if (*(_DWORD *)v21 != 2)
  {
    *(_DWORD *)v21 -= 2;
LABEL_138:
    v21 = 0;
    v25 = 0;
    v62 = 1;
    goto LABEL_36;
  }
  WTF::StringImpl::destroy(v21, v51);
  v24 = (int)v66[1];
  if (!LODWORD(v66[1]))
  {
    v21 = v66[0];
    goto LABEL_35;
  }
  v62 = 1;
  if (LODWORD(v66[1]) == -1)
  {
    v15 = 0;
    goto LABEL_131;
  }
  v21 = 0;
  v25 = 0;
LABEL_36:
  ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A258[v24])(&v63, v66);
  if (!v25)
  {
    v15 = 0;
    goto LABEL_52;
  }
LABEL_37:
  WTF::AtomStringImpl::addLiteral();
  v26 = v66[0];
  v28 = JSC::JSObject::get(v11, this, (unint64_t)v66[0]);
  if (v26)
  {
    if (*(_DWORD *)v26 == 2)
      WTF::StringImpl::destroy(v26, v27);
    else
      *(_DWORD *)v26 -= 2;
  }
  if (*((_DWORD *)v69 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v69))
    goto LABEL_43;
  if (v28 != 10)
  {
    WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, v28, (uint64_t)v66);
    v29 = (int)v66[1];
    if (LODWORD(v66[1]))
    {
      v15 = 0;
      v62 = 1;
      v4 = v58;
LABEL_67:
      if (v29 != -1)
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A6F0[v29])(&v63, v66);
      goto LABEL_69;
    }
    v15 = v66[0];
    v66[0] = 0;
    WTF::AtomStringImpl::addLiteral();
    v30 = v63;
    v31 = JSC::JSObject::get(v11, this, (unint64_t)v63);
    if (v30)
    {
      if (*(_DWORD *)v30 == 2)
        WTF::StringImpl::destroy(v30, v14);
      else
        *(_DWORD *)v30 -= 2;
    }
    if (*((_DWORD *)v69 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v69))
    {
      v62 = 1;
      goto LABEL_66;
    }
    if (v31 == 10)
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v32 = v63;
      goto LABEL_61;
    }
    v71[0] = v31;
    v33 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((v31 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v31 + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v71, this);
LABEL_59:
      if (*((_DWORD *)v33 + 20))
      {
        v52 = JSC::VM::hasExceptionsAfterHandlingTraps(v33);
        v32 = v70;
        if (v52)
        {
          LODWORD(v64) = 1;
          v70 = 0;
          if (v32)
          {
            if (*(_DWORD *)v32 == 2)
              WTF::StringImpl::destroy(v32, v14);
            else
              *(_DWORD *)v32 -= 2;
          }
          v35 = 1;
          goto LABEL_65;
        }
      }
      else
      {
        v32 = v70;
      }
LABEL_61:
      LODWORD(v64) = 0;
      v63 = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 2)
          WTF::StringImpl::destroy(v9, v14);
        else
          *(_DWORD *)v9 -= 2;
      }
      v35 = 0;
      v9 = 0;
      *(_QWORD *)&v59 = v15;
      *((_QWORD *)&v59 + 1) = v32;
      v60 = v18;
      v61 = v21;
      v15 = 0;
      v21 = 0;
LABEL_65:
      v62 = v35;
      ((void (*)(_QWORD *, WTF::StringImpl **))off_1E325A258[v35])(v71, &v63);
LABEL_66:
      v4 = v58;
      v29 = (int)v66[1];
      goto LABEL_67;
    }
    v34 = *(WTF::StringImpl **)(v31 + 8);
    if ((v34 & 1) != 0)
    {
      v34 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v31, this);
      if (!v34)
        goto LABEL_58;
    }
    else if (!v34)
    {
LABEL_58:
      v70 = v34;
      goto LABEL_59;
    }
    *(_DWORD *)v34 += 2;
    goto LABEL_58;
  }
  WebCore::throwRequiredMemberTypeError((int)this, (int)&v69, "name", 5, "DOMCSSCustomPropertyDescriptor", 31, "DOMString", 10);
LABEL_43:
  v15 = 0;
  v62 = 1;
LABEL_52:
  v4 = v58;
LABEL_69:
  if (v21)
  {
    if (*(_DWORD *)v21 == 2)
      WTF::StringImpl::destroy(v21, v14);
    else
      *(_DWORD *)v21 -= 2;
  }
LABEL_72:
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
    {
      WTF::StringImpl::destroy(v9, v14);
      if (!v15)
        goto LABEL_78;
      goto LABEL_76;
    }
    *(_DWORD *)v9 -= 2;
  }
  if (!v15)
    goto LABEL_78;
LABEL_76:
  if (*(_DWORD *)v15 == 2)
    WTF::StringImpl::destroy(v15, v14);
  else
    *(_DWORD *)v15 -= 2;
LABEL_78:
  v36 = v62;
  if (!v62)
  {
    v37 = v59;
    v59 = 0uLL;
    *(_OWORD *)v66 = v37;
    v67 = v60;
    v38 = v61;
    v61 = 0;
    v68 = v38;
    WebCore::DOMCSSRegisterCustomProperty::registerProperty(v7 - 192, (uint64_t)v66, (uint64_t)&v63);
    v40 = v68;
    v68 = 0;
    if (v40)
    {
      if (*(_DWORD *)v40 == 2)
        WTF::StringImpl::destroy(v40, v39);
      else
        *(_DWORD *)v40 -= 2;
    }
    v41 = v66[1];
    v66[1] = 0;
    if (v41)
    {
      if (*(_DWORD *)v41 == 2)
        WTF::StringImpl::destroy(v41, v39);
      else
        *(_DWORD *)v41 -= 2;
    }
    v42 = v66[0];
    v66[0] = 0;
    if (v42)
    {
      if (*(_DWORD *)v42 == 2)
        WTF::StringImpl::destroy(v42, v39);
      else
        *(_DWORD *)v42 -= 2;
    }
    if (!v65)
    {
      v43 = 10;
LABEL_90:
      ((void (*)(WTF::StringImpl **, __int128 *))off_1E325B1A0[v36])(v66, &v59);
      return v43;
    }
    v46 = (WTF::StringImpl *)v63;
    LOBYTE(v66[0]) = (_BYTE)v63;
    v47 = v64;
    v64 = 0;
    v66[1] = v47;
    if (!*((_QWORD *)v4 + 2))
    {
      v48.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v63, (JSC::JSGlobalObject *)&v66[1]);
      JSC::VM::throwException(v4, this, v48);
      v47 = v66[1];
    }
    v66[1] = 0;
    if (v47)
    {
      if (*(_DWORD *)v47 == 2)
        WTF::StringImpl::destroy(v47, v46);
      else
        *(_DWORD *)v47 -= 2;
    }
    if (v65)
    {
      v49 = v64;
      v64 = 0;
      if (v49)
      {
        if (*(_DWORD *)v49 != 2)
        {
          v43 = 0;
          *(_DWORD *)v49 -= 2;
          goto LABEL_90;
        }
        WTF::StringImpl::destroy(v49, v46);
      }
    }
    v43 = 0;
    goto LABEL_90;
  }
  v43 = 0;
  result = 0;
  if (v62 != -1)
    goto LABEL_90;
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore30DOMCSSCustomPropertyDescriptorENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *result;

  v3 = (WTF::StringImpl *)*((_QWORD *)a2 + 3);
  *((_QWORD *)a2 + 3) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  v4 = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (v4)
  {
    if (*(_DWORD *)v4 == 2)
      WTF::StringImpl::destroy(v4, a2);
    else
      *(_DWORD *)v4 -= 2;
  }
  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

unint64_t WebCore::jsDOMCachePrototypeFunction_match(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  _QWORD *v28;
  uint64_t v29;
  objc_class *v31;
  WebCore::DOMGuardedObject *v32;
  JSC::VM *v33;
  JSValue v34;
  __int16 v35;
  char v36;
  int v37;
  __int16 v38;
  char v39;
  char v40[8];
  int v41;
  _QWORD *v42;
  WebCore::DOMGuardedObject *v43;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194A64470);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_49;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSDOMCache::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSDOMCache::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_49:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Cache", "match", v17);
    goto LABEL_43;
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v33 = (JSC::VM *)*((_QWORD *)this + 7);
    v34.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v33, this, v34);
LABEL_43:
    if (*((_DWORD *)v14 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
    else
      --*((_DWORD *)v14 + 4);
    goto LABEL_45;
  }
  v24 = *(_QWORD *)(v18 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::FetchRequest>,WebCore::IDLUSVString>>::convert((uint64_t *)this, *((_QWORD *)a2 + 6), (uint64_t)&v43);
  v25 = v46;
  if (!v46)
  {
    if ((unint64_t)(*((int *)a2 + 8) - 3) > 0xFFFFFFFFFFFFFFFDLL)
      v26 = 10;
    else
      v26 = *((_QWORD *)a2 + 7);
    WebCore::convertDictionary<WebCore::CacheQueryOptions>((JSC::JSCell *)v26, (unint64_t)this, (uint64_t)&v35);
    if (!v37)
    {
      if (v46
        || (v40[0] = 0, v41 = -1, v27 = v45, v45 != -1)
        && (((void (*)(_QWORD **, char *, uint64_t *))off_1E325B300[v45])(&v42, v40, &v44), v41 = v27, v37))
      {
        std::__throw_bad_variant_access[abi:sn180100]();
      }
      v39 = v36;
      v38 = v35;
      ++*(_DWORD *)(v24 + 24);
      v28 = (_QWORD *)WTF::fastMalloc((WTF *)0x20);
      *v28 = &off_1E33536B8;
      v28[1] = v24;
      v28[2] = v24;
      v28[3] = v14;
      v42 = v28;
      WebCore::DOMCache::doMatch(v24, (uint64_t)v40, (char *)&v38, (uint64_t *)&v42);
      if (v42)
        (*(void (**)(_QWORD *))(*v42 + 8))(v42);
      if (v41 != -1)
        ((void (*)(_QWORD **, char *))off_1E325B2F0[v41])(&v42, v40);
      v14 = 0;
    }
    v25 = v46;
  }
  if (v25 != -1)
    ((void (*)(char *, uint64_t *))off_1E325B310[v25])(v40, &v44);
  if (v14)
    goto LABEL_43;
LABEL_45:
  v29 = *(_QWORD *)(v10 + 16);
  if (v29)
  {
    if (*(_QWORD *)(v10 + 24) != v29)
    {
      v31 = *(objc_class **)(v29 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v43);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v43, v31, 0);
      v32 = v43;
      v43 = 0;
      if (v32)
      {
        if (*((_DWORD *)v32 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v32 + 16))(v32);
        else
          --*((_DWORD *)v32 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsDOMCachePrototypeFunction_matchAll(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  int v27;
  WebCore::DOMGuardedObject *v28;
  uint64_t v29;
  objc_class *v31;
  WebCore::DOMGuardedObject *v32;
  __int16 v33;
  char v34;
  int v35;
  WebCore::DOMGuardedObject *v36;
  __int16 v37;
  char v38;
  WebCore::DOMGuardedObject *v39;
  char v40[8];
  int v41;
  char v42;
  int v43;
  char v44[8];
  int v45;
  char v46;
  int v47;
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194A648D0);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_60;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSDOMCache::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSDOMCache::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_60:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Cache", "matchAll", v16);
LABEL_53:
    if (*((_DWORD *)v14 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
    else
      --*((_DWORD *)v14 + 4);
    goto LABEL_55;
  }
  v23 = *(_QWORD *)(v17 + 24);
  v24 = *((_DWORD *)a2 + 8);
  if (v24 == 1 || *((_QWORD *)a2 + 6) == 10)
  {
    v40[0] = 0;
    v42 = 0;
    v43 = 0;
LABEL_32:
    if ((unint64_t)(v24 - 3) > 0xFFFFFFFFFFFFFFFDLL)
      v26 = 10;
    else
      v26 = *((_QWORD *)a2 + 7);
    WebCore::convertDictionary<WebCore::CacheQueryOptions>((JSC::JSCell *)v26, (unint64_t)this, (uint64_t)&v33);
    if (v35)
    {
LABEL_49:
      v25 = v43;
      goto LABEL_50;
    }
    if (v43)
      goto LABEL_40;
    v44[0] = 0;
    v46 = 0;
    if (v42)
    {
      v45 = -1;
      v27 = v41;
      if (v41 == -1)
      {
LABEL_41:
        v46 = 1;
        goto LABEL_42;
      }
      ((void (*)(WebCore::DOMGuardedObject **, char *, char *))off_1E325B300[v41])(&v36, v44, v40);
      v45 = v27;
      v46 = 1;
      if (v35)
      {
LABEL_40:
        std::__throw_bad_variant_access[abi:sn180100]();
        goto LABEL_41;
      }
    }
LABEL_42:
    v38 = v34;
    v37 = v33;
    v36 = v14;
    WebCore::DOMCache::matchAll(v23, (uint64_t)v44, (char *)&v37, (uint64_t *)&v36);
    v28 = v36;
    v36 = 0;
    if (v28)
    {
      if (*((_DWORD *)v28 + 4) == 1)
        (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v28 + 16))(v28);
      else
        --*((_DWORD *)v28 + 4);
    }
    if (v46 && v45 != -1)
      ((void (*)(WebCore::DOMGuardedObject **, char *))off_1E325B2F0[v45])(&v36, v44);
    v14 = 0;
    goto LABEL_49;
  }
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::FetchRequest>,WebCore::IDLUSVString>>::convert((uint64_t *)this, *((_QWORD *)a2 + 6), (uint64_t)v44);
  WebCore::Detail::ConversionResultStorage<std::optional<std::variant<WTF::RefPtr<WebCore::FetchRequest,WTF::RawPtrTraits<WebCore::FetchRequest>,WTF::DefaultRefDerefTraits<WebCore::FetchRequest>>,WTF::String>>>::ConversionResultStorage<std::variant<WTF::RefPtr<WebCore::FetchRequest,WTF::RawPtrTraits<WebCore::FetchRequest>,WTF::DefaultRefDerefTraits<WebCore::FetchRequest>>,WTF::String>>((uint64_t)&v39, (uint64_t)v44);
  if (v47 != -1)
    ((void (*)(WebCore::DOMGuardedObject **, int *))off_1E325B310[v47])(&v36, &v45);
  v25 = v43;
  if (!v43)
  {
    v24 = *((_DWORD *)a2 + 8);
    goto LABEL_32;
  }
LABEL_50:
  if (v25 != -1)
    ((void (*)(char *, char *))off_1E325B320[v25])(v44, v40);
  if (v14)
    goto LABEL_53;
LABEL_55:
  v29 = *(_QWORD *)(v10 + 16);
  if (v29)
  {
    if (*(_QWORD *)(v10 + 24) != v29)
    {
      v31 = *(objc_class **)(v29 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v39);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v39, v31, 0);
      v32 = v39;
      v39 = 0;
      if (v32)
      {
        if (*((_DWORD *)v32 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v32 + 16))(v32);
        else
          --*((_DWORD *)v32 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsDOMCachePrototypeFunction_add(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  WebCore::FetchTasksHandler *v24;
  int v25;
  int v26;
  uint64_t v27;
  objc_class *v29;
  WebCore::DOMGuardedObject *v30;
  JSC::VM *v31;
  JSValue v32;
  WebCore::DOMGuardedObject *v33;
  char v34[8];
  int v35;
  WebCore::DOMGuardedObject *v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194A64C2CLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_45;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSDOMCache::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSDOMCache::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_45:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Cache", "add", v17);
    goto LABEL_38;
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v31 = (JSC::VM *)*((_QWORD *)this + 7);
    v32.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v31, this, v32);
LABEL_38:
    if (*((_DWORD *)v14 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
    else
      --*((_DWORD *)v14 + 4);
    goto LABEL_40;
  }
  v24 = *(WebCore::FetchTasksHandler **)(v18 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::FetchRequest>,WebCore::IDLUSVString>>::convert((uint64_t *)this, *((_QWORD *)a2 + 6), (uint64_t)&v36);
  v25 = v39;
  if (!v39)
  {
    v34[0] = 0;
    v35 = -1;
    v26 = v38;
    if (v38 != -1)
    {
      ((void (*)(WebCore::DOMGuardedObject **, char *, uint64_t *))off_1E325B300[v38])(&v33, v34, &v37);
      v35 = v26;
    }
    v33 = v14;
    WebCore::DOMCache::add(v24, (uint64_t)v34, (uint64_t *)&v33);
    if (v33)
    {
      if (*((_DWORD *)v33 + 4) == 1)
        (*(void (**)(void))(*(_QWORD *)v33 + 16))();
      else
        --*((_DWORD *)v33 + 4);
    }
    if (v35 != -1)
      ((void (*)(WebCore::DOMGuardedObject **, char *))off_1E325B2F0[v35])(&v33, v34);
    v14 = 0;
    v25 = v39;
  }
  if (v25 != -1)
    ((void (*)(char *, uint64_t *))off_1E325B310[v25])(v34, &v37);
  if (v14)
    goto LABEL_38;
LABEL_40:
  v27 = *(_QWORD *)(v10 + 16);
  if (v27)
  {
    if (*(_QWORD *)(v10 + 24) != v27)
    {
      v29 = *(objc_class **)(v27 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v36);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v36, v29, 0);
      v30 = v36;
      v36 = 0;
      if (v30)
      {
        if (*((_DWORD *)v30 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v30 + 16))(v30);
        else
          --*((_DWORD *)v30 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsDOMCachePrototypeFunction_addAll(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  WebCore::FetchTasksHandler *v25;
  uint64_t v26;
  JSValue v27;
  int i;
  unsigned int v29;
  uint64_t IndexQuickly;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char hasExceptionsAfterHandlingTraps;
  uint64_t v39;
  unint64_t v40;
  unsigned int *v41;
  void *v42;
  WebCore::DOMGuardedObject *v43;
  unsigned int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  objc_class *v49;
  WTF::StringImpl *v50;
  JSValue v51;
  int v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  WTF::StringImpl *v56[2];
  int v57;
  WebCore::DOMGuardedObject *v58;
  WTF *v59;
  uint64_t v60;
  char v61;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194A65190);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_82;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSDOMCache::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSDOMCache::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_82:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Cache", "addAll", v17);
  }
  else
  {
    v24 = *((_QWORD *)this + 7);
    if (*((_DWORD *)a2 + 8) != 1)
    {
      v25 = *(WebCore::FetchTasksHandler **)(v18 + 24);
      v26 = *((_QWORD *)a2 + 6);
      v58 = (WebCore::DOMGuardedObject *)*((_QWORD *)this + 7);
      if ((v26 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v26 + 5) <= 0x16u)
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        JSC::throwTypeError();
        v32 = v56[0];
        v56[0] = 0;
        if (v32)
        {
          if (*(_DWORD *)v32 == 2)
            WTF::StringImpl::destroy(v32, v31);
          else
            *(_DWORD *)v32 -= 2;
        }
        v33 = 1;
        v57 = 1;
      }
      else
      {
        v59 = 0;
        v60 = 0;
        if (JSC::getIterationMode() == 2)
        {
          for (i = 1; ; ++i)
          {
            v29 = (*(_BYTE *)(v26 + 4) & 0xE) != 0 ? *(_DWORD *)(*(_QWORD *)(v26 + 8) - 8) : 0;
            if (i - 1 >= v29)
              break;
            IndexQuickly = JSC::JSObject::tryGetIndexQuickly((JSC::JSObject *)v26, i - 1, 0);
            if (!IndexQuickly)
              IndexQuickly = JSC::JSObject::get((JSC::JSObject *)v26, this, (i - 1));
            if (*(_DWORD *)(v24 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v24) & 1) != 0)
              break;
            v56[0] = (WTF::StringImpl *)v24;
            WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::FetchRequest>,WebCore::IDLUSVString>>::convert((uint64_t)v56, (uint64_t *)this, IndexQuickly, (uint64_t)&v59);
            if (*(_QWORD *)(v24 + 16))
            {
              v39 = JSC::JSArrayIterator::create();
              v40 = i | 0xFFFE000000000000;
              if (i < 0)
                v40 = COERCE__INT64((double)i) + 0x2000000000000;
              *(_QWORD *)(v39 + 16) = v40;
              goto LABEL_59;
            }
          }
        }
        else
        {
          JSC::iteratorForIterable(this, (JSC::JSGlobalObject *)v26, v27);
          if (!*(_DWORD *)(v24 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v24) & 1) == 0)
          {
            while (1)
            {
              v34 = JSC::iteratorStep();
              if (*(_QWORD *)(v24 + 16) || v34 == 6)
                break;
              v36 = JSC::iteratorValue();
              if (*(_DWORD *)(v24 + 80))
              {
                v37 = v36;
                hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v24);
                v36 = v37;
                if ((hasExceptionsAfterHandlingTraps & 1) != 0)
                  break;
              }
              v56[0] = (WTF::StringImpl *)v24;
              WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::FetchRequest>,WebCore::IDLUSVString>>::convert((uint64_t)v56, (uint64_t *)this, v36, (uint64_t)&v59);
              if (*(_QWORD *)(v24 + 16))
              {
LABEL_59:
                JSC::iteratorClose();
                break;
              }
            }
          }
        }
        if (!*(_DWORD *)(v24 + 80))
        {
          v41 = (unsigned int *)v59;
LABEL_62:
          v57 = 0;
          v56[0] = 0;
          v56[1] = 0;
          v58 = v14;
          v59 = (WTF *)v41;
          WebCore::DOMCache::addAll(v25, (uint64_t)&v59, (uint64_t *)&v58);
          v43 = v58;
          v58 = 0;
          if (v43)
          {
            if (*((_DWORD *)v43 + 4) == 1)
              (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v43 + 16))(v43);
            else
              --*((_DWORD *)v43 + 4);
          }
          v44 = (unsigned int *)v59;
          if (HIDWORD(v60))
          {
            v45 = 16 * HIDWORD(v60);
            do
            {
              v46 = v44[2];
              if ((_DWORD)v46 != -1)
                ((void (*)(WebCore::DOMGuardedObject **, unsigned int *))off_1E325B2F0[v46])(&v58, v44);
              v44[2] = -1;
              v44 += 4;
              v45 -= 16;
            }
            while (v45);
            v44 = (unsigned int *)v59;
          }
          if (v44)
          {
            v59 = 0;
            LODWORD(v60) = 0;
            WTF::fastFree((WTF *)v44, v42);
          }
          v14 = 0;
          v33 = 0;
          goto LABEL_74;
        }
        v52 = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v24);
        v41 = (unsigned int *)v59;
        if (!v52)
          goto LABEL_62;
        v57 = 1;
        if (HIDWORD(v60))
        {
          v54 = 16 * HIDWORD(v60);
          do
          {
            v55 = v41[2];
            if ((_DWORD)v55 != -1)
              ((void (*)(char *, unsigned int *))off_1E325B2F0[v55])(&v61, v41);
            v41[2] = -1;
            v41 += 4;
            v54 -= 16;
          }
          while (v54);
          v41 = (unsigned int *)v59;
        }
        if (v41)
        {
          v59 = 0;
          LODWORD(v60) = 0;
          WTF::fastFree((WTF *)v41, v53);
        }
        v33 = 1;
      }
LABEL_74:
      ((void (*)(WTF **, WTF::StringImpl **))off_1E325B330[v33])(&v59, v56);
      if (!v14)
        goto LABEL_77;
      goto LABEL_75;
    }
    v51.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException((JSC::VM *)v24, this, v51);
  }
LABEL_75:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_77:
  v47 = *(_QWORD *)(v10 + 16);
  if (v47)
  {
    if (*(_QWORD *)(v10 + 24) != v47)
    {
      v49 = *(objc_class **)(v47 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, v56);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v56[0], v49, 0);
      v50 = v56[0];
      v56[0] = 0;
      if (v50)
      {
        if (*((_DWORD *)v50 + 4) == 1)
          (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v50 + 16))(v50);
        else
          --*((_DWORD *)v50 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsDOMCachePrototypeFunction_put(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  int v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  WebCore::FetchBodyOwner *v29;
  int v30;
  WebCore::DOMGuardedObject *v31;
  WebCore::FetchBodyOwner *v32;
  uint64_t v33;
  objc_class *v35;
  WebCore::DOMGuardedObject *v36;
  JSC::VM *v37;
  JSValue v38;
  WebCore *v39;
  JSC::JSGlobalObject *v40;
  JSC::CallFrame *v41;
  WebCore::DOMGuardedObject *v42;
  WebCore::FetchBodyOwner *v43;
  uint64_t v44;
  int v45;
  WebCore::DOMGuardedObject *v46;
  uint64_t v47;
  int v48;
  int v49;
  uint64_t v50;

  v50 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194A65658);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_54;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSDOMCache::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSDOMCache::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_54:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Cache", "put", v17);
    goto LABEL_46;
  }
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v37 = (JSC::VM *)*((_QWORD *)this + 7);
    v38.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v37, this, v38);
LABEL_46:
    if (*((_DWORD *)v14 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
    else
      --*((_DWORD *)v14 + 4);
    goto LABEL_48;
  }
  v24 = *(_QWORD *)(v18 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::FetchRequest>,WebCore::IDLUSVString>>::convert((uint64_t *)this, *((_QWORD *)a2 + 6), (uint64_t)&v46);
  v25 = v49;
  if (!v49)
  {
    v26 = *((_QWORD *)a2 + 7);
    v44 = *((_QWORD *)this + 7);
    v27 = JSC::jsDynamicCast<WebCore::JSFetchResponse *>(v26);
    if (v27 && (v29 = *(WebCore::FetchBodyOwner **)(v27 + 24)) != 0)
    {
      if (v49)
      {
        v39 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
        return WebCore::jsDOMCachePrototypeFunction_delete(v39, v40, v41);
      }
      LOBYTE(v44) = 0;
      v45 = -1;
      v30 = v48;
      if (v48 != -1)
      {
        ((void (*)(WebCore::FetchBodyOwner **, uint64_t *, uint64_t *))off_1E325B300[v48])(&v43, &v44, &v47);
        v45 = v30;
      }
      ++*((_DWORD *)v29 + 6);
      v42 = v14;
      v43 = v29;
      WebCore::DOMCache::put(v24, (uint64_t)&v44, &v43, (uint64_t *)&v42);
      v31 = v42;
      v42 = 0;
      if (v31)
      {
        if (*((_DWORD *)v31 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v31 + 16))(v31);
        else
          --*((_DWORD *)v31 + 4);
      }
      v32 = v43;
      v43 = 0;
      if (v32)
      {
        if (*((_DWORD *)v32 + 6) == 1)
          (*(void (**)(WebCore::FetchBodyOwner *))(*(_QWORD *)v32 + 16))(v32);
        else
          --*((_DWORD *)v32 + 6);
      }
      if (v45 != -1)
        ((void (*)(WebCore::FetchBodyOwner **, uint64_t *))off_1E325B2F0[v45])(&v43, &v44);
      v14 = 0;
    }
    else
    {
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v44, 1, "response", 9, "Cache", 6, v28, "put", 4, "FetchResponse", 14);
    }
    v25 = v49;
  }
  if (v25 != -1)
    ((void (*)(uint64_t *, uint64_t *))off_1E325B310[v25])(&v44, &v47);
  if (v14)
    goto LABEL_46;
LABEL_48:
  v33 = *(_QWORD *)(v10 + 16);
  if (v33)
  {
    if (*(_QWORD *)(v10 + 24) != v33)
    {
      v35 = *(objc_class **)(v33 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v46);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v46, v35, 0);
      v36 = v46;
      v46 = 0;
      if (v36)
      {
        if (*((_DWORD *)v36 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v36 + 16))(v36);
        else
          --*((_DWORD *)v36 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
      return 10;
  }
  return v13;
}

unint64_t WebCore::jsDOMCachePrototypeFunction_delete(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  objc_class *v30;
  WebCore::DOMGuardedObject *v31;
  JSC::VM *v32;
  JSValue v33;
  __int16 v34;
  char v35;
  int v36;
  WebCore::DOMGuardedObject *v37;
  __int16 v38;
  char v39;
  char v40[8];
  int v41;
  WebCore::DOMGuardedObject *v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194A65A38);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_51;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSDOMCache::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSDOMCache::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_51:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Cache", "delete", v17);
    goto LABEL_44;
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v32 = (JSC::VM *)*((_QWORD *)this + 7);
    v33.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v32, this, v33);
LABEL_44:
    if (*((_DWORD *)v14 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
    else
      --*((_DWORD *)v14 + 4);
    goto LABEL_46;
  }
  v24 = *(_QWORD *)(v18 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::FetchRequest>,WebCore::IDLUSVString>>::convert((uint64_t *)this, *((_QWORD *)a2 + 6), (uint64_t)&v42);
  v25 = v45;
  if (!v45)
  {
    if ((unint64_t)(*((int *)a2 + 8) - 3) > 0xFFFFFFFFFFFFFFFDLL)
      v26 = 10;
    else
      v26 = *((_QWORD *)a2 + 7);
    WebCore::convertDictionary<WebCore::CacheQueryOptions>((JSC::JSCell *)v26, (unint64_t)this, (uint64_t)&v34);
    if (!v36)
    {
      if (v45
        || (v40[0] = 0, v41 = -1, v27 = v44, v44 != -1)
        && (((void (*)(WebCore::DOMGuardedObject **, char *, uint64_t *))off_1E325B300[v44])(&v37, v40, &v43),
            v41 = v27,
            v36))
      {
        std::__throw_bad_variant_access[abi:sn180100]();
      }
      v39 = v35;
      v38 = v34;
      v37 = v14;
      WebCore::DOMCache::remove(v24, (uint64_t)v40, (uint64_t)&v38, (uint64_t *)&v37);
      if (v37)
      {
        if (*((_DWORD *)v37 + 4) == 1)
          (*(void (**)(void))(*(_QWORD *)v37 + 16))();
        else
          --*((_DWORD *)v37 + 4);
      }
      if (v41 != -1)
        ((void (*)(WebCore::DOMGuardedObject **, char *))off_1E325B2F0[v41])(&v37, v40);
      v14 = 0;
    }
    v25 = v45;
  }
  if (v25 != -1)
    ((void (*)(char *, uint64_t *))off_1E325B310[v25])(v40, &v43);
  if (v14)
    goto LABEL_44;
LABEL_46:
  v28 = *(_QWORD *)(v10 + 16);
  if (v28)
  {
    if (*(_QWORD *)(v10 + 24) != v28)
    {
      v30 = *(objc_class **)(v28 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v42);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v42, v30, 0);
      v31 = v42;
      v42 = 0;
      if (v31)
      {
        if (*((_DWORD *)v31 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v31 + 16))(v31);
        else
          --*((_DWORD *)v31 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsDOMCachePrototypeFunction_keys(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  int v27;
  WebCore::DOMGuardedObject *v28;
  uint64_t v29;
  objc_class *v31;
  WebCore::DOMGuardedObject *v32;
  __int16 v33;
  char v34;
  int v35;
  WebCore::DOMGuardedObject *v36;
  __int16 v37;
  char v38;
  WebCore::DOMGuardedObject *v39;
  char v40[8];
  int v41;
  char v42;
  int v43;
  char v44[8];
  int v45;
  char v46;
  int v47;
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194A65E98);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_60;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSDOMCache::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSDOMCache::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_60:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Cache", "keys", v16);
LABEL_53:
    if (*((_DWORD *)v14 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
    else
      --*((_DWORD *)v14 + 4);
    goto LABEL_55;
  }
  v23 = *(_QWORD *)(v17 + 24);
  v24 = *((_DWORD *)a2 + 8);
  if (v24 == 1 || *((_QWORD *)a2 + 6) == 10)
  {
    v40[0] = 0;
    v42 = 0;
    v43 = 0;
LABEL_32:
    if ((unint64_t)(v24 - 3) > 0xFFFFFFFFFFFFFFFDLL)
      v26 = 10;
    else
      v26 = *((_QWORD *)a2 + 7);
    WebCore::convertDictionary<WebCore::CacheQueryOptions>((JSC::JSCell *)v26, (unint64_t)this, (uint64_t)&v33);
    if (v35)
    {
LABEL_49:
      v25 = v43;
      goto LABEL_50;
    }
    if (v43)
      goto LABEL_40;
    v44[0] = 0;
    v46 = 0;
    if (v42)
    {
      v45 = -1;
      v27 = v41;
      if (v41 == -1)
      {
LABEL_41:
        v46 = 1;
        goto LABEL_42;
      }
      ((void (*)(WebCore::DOMGuardedObject **, char *, char *))off_1E325B300[v41])(&v36, v44, v40);
      v45 = v27;
      v46 = 1;
      if (v35)
      {
LABEL_40:
        std::__throw_bad_variant_access[abi:sn180100]();
        goto LABEL_41;
      }
    }
LABEL_42:
    v38 = v34;
    v37 = v33;
    v36 = v14;
    WebCore::DOMCache::keys(v23, (uint64_t)v44, (char *)&v37, (uint64_t *)&v36);
    v28 = v36;
    v36 = 0;
    if (v28)
    {
      if (*((_DWORD *)v28 + 4) == 1)
        (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v28 + 16))(v28);
      else
        --*((_DWORD *)v28 + 4);
    }
    if (v46 && v45 != -1)
      ((void (*)(WebCore::DOMGuardedObject **, char *))off_1E325B2F0[v45])(&v36, v44);
    v14 = 0;
    goto LABEL_49;
  }
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::FetchRequest>,WebCore::IDLUSVString>>::convert((uint64_t *)this, *((_QWORD *)a2 + 6), (uint64_t)v44);
  WebCore::Detail::ConversionResultStorage<std::optional<std::variant<WTF::RefPtr<WebCore::FetchRequest,WTF::RawPtrTraits<WebCore::FetchRequest>,WTF::DefaultRefDerefTraits<WebCore::FetchRequest>>,WTF::String>>>::ConversionResultStorage<std::variant<WTF::RefPtr<WebCore::FetchRequest,WTF::RawPtrTraits<WebCore::FetchRequest>,WTF::DefaultRefDerefTraits<WebCore::FetchRequest>>,WTF::String>>((uint64_t)&v39, (uint64_t)v44);
  if (v47 != -1)
    ((void (*)(WebCore::DOMGuardedObject **, int *))off_1E325B310[v47])(&v36, &v45);
  v25 = v43;
  if (!v43)
  {
    v24 = *((_DWORD *)a2 + 8);
    goto LABEL_32;
  }
LABEL_50:
  if (v25 != -1)
    ((void (*)(char *, char *))off_1E325B320[v25])(v44, v40);
  if (v14)
    goto LABEL_53;
LABEL_55:
  v29 = *(_QWORD *)(v10 + 16);
  if (v29)
  {
    if (*(_QWORD *)(v10 + 24) != v29)
    {
      v31 = *(objc_class **)(v29 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v39);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v39, v31, 0);
      v32 = v39;
      v39 = 0;
      if (v32)
      {
        if (*((_DWORD *)v32 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v32 + 16))(v32);
        else
          --*((_DWORD *)v32 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t JSC::JSObject::getDirectIndex(JSC::JSObject *this, JSC::JSGlobalObject *a2, uint64_t a3)
{
  unint64_t result;
  int v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  _QWORD v11[7];
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;

  result = JSC::JSObject::tryGetIndexQuickly(this, a3, 0);
  if (!result)
  {
    v11[2] = 0xFFFFFFFF00000000;
    LOBYTE(v12) = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    memset(&v11[4], 0, 21);
    v11[3] = this;
    v10 = 0;
    if ((*(unsigned int (**)(JSC::JSObject *, JSC::JSGlobalObject *, uint64_t, _QWORD *))(16 * *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) + 0x70))(this, a2, a3, v11))
    {
      if (BYTE1(v11[6]) == 2)
      {
        v10 = JSC::PropertySlot::functionGetter((JSC::PropertySlot *)v11, a2);
      }
      else if (BYTE1(v11[6]) == 1)
      {
        v10 = v11[0];
      }
      else
      {
        JSC::Identifier::from();
        v10 = JSC::PropertySlot::customGetter();
        v9 = v16;
        v16 = 0;
        if (v9)
        {
          if (*(_DWORD *)v9 == 2)
            WTF::StringImpl::destroy(v9, v8);
          else
            *(_DWORD *)v9 -= 2;
        }
      }
    }
    if (!v13)
      return v10;
    v7 = *(_DWORD *)(v12 + 4);
    if (v7)
    {
      *(_DWORD *)(v12 + 4) = v7 - 1;
      return v10;
    }
    result = 57;
    __break(0xC471u);
  }
  return result;
}

unint64_t WebCore::jsDOMCacheStoragePrototypeFunction_match(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  int v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  uint64_t v32;
  objc_class *v34;
  WebCore::DOMGuardedObject *v35;
  JSC::VM *v36;
  JSValue v37;
  WebCore::DOMGuardedObject *v38;
  __int16 v39;
  char v40;
  WTF::StringImpl *v41;
  int v42;
  __int16 v43;
  char v44;
  WTF::StringImpl *v45;
  char v46[8];
  int v47;
  WebCore::DOMGuardedObject *v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194A663E0);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v38 = v15;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_53;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSDOMCacheStorage::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSDOMCacheStorage::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_53:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"CacheStorage", "match", v17);
LABEL_62:
    v38 = 0;
LABEL_46:
    if (*((_DWORD *)v14 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
    else
      --*((_DWORD *)v14 + 4);
    goto LABEL_48;
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v36 = (JSC::VM *)*((_QWORD *)this + 7);
    v37.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v36, this, v37);
    goto LABEL_62;
  }
  v24 = *(_QWORD *)(v18 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::FetchRequest>,WebCore::IDLUSVString>>::convert((uint64_t *)this, *((_QWORD *)a2 + 6), (uint64_t)&v48);
  v25 = v51;
  if (!v51)
  {
    if ((unint64_t)(*((int *)a2 + 8) - 3) > 0xFFFFFFFFFFFFFFFDLL)
      v26 = 10;
    else
      v26 = *((_QWORD *)a2 + 7);
    WebCore::convertDictionary<WebCore::MultiCacheQueryOptions>((JSC::JSCell *)v26, this, (uint64_t)&v39);
    v27 = v42;
    if (!v42)
    {
      if (v51
        || (v46[0] = 0, v47 = -1, v28 = v50, v50 != -1)
        && (((void (*)(__int16 *, char *, uint64_t *))off_1E325B300[v50])(&v43, v46, &v49), v47 = v28, v42))
      {
        std::__throw_bad_variant_access[abi:sn180100]();
      }
      v43 = v39;
      v44 = v40;
      v29 = v41;
      v41 = 0;
      v45 = v29;
      WebCore::DOMCacheStorage::match(v24, (uint64_t)v46, &v43, &v38);
      v31 = v45;
      v45 = 0;
      if (v31)
      {
        if (*(_DWORD *)v31 == 2)
          WTF::StringImpl::destroy(v31, v30);
        else
          *(_DWORD *)v31 -= 2;
      }
      if (v47 != -1)
        ((void (*)(__int16 *, char *))off_1E325B2F0[v47])(&v43, v46);
      v27 = v42;
    }
    if (v27 != -1)
      ((void (*)(char *, __int16 *))off_1E325B430[v27])(v46, &v39);
    v25 = v51;
  }
  if (v25 != -1)
    ((void (*)(__int16 *, uint64_t *))off_1E325B310[v25])(&v39, &v49);
  v14 = v38;
  v38 = 0;
  if (v14)
    goto LABEL_46;
LABEL_48:
  v32 = *(_QWORD *)(v10 + 16);
  if (v32)
  {
    if (*(_QWORD *)(v10 + 24) != v32)
    {
      v34 = *(objc_class **)(v32 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v48);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v48, v34, 0);
      v35 = v48;
      v48 = 0;
      if (v35)
      {
        if (*((_DWORD *)v35 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v35 + 16))(v35);
        else
          --*((_DWORD *)v35 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsDOMCacheStoragePrototypeFunction_has(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  JSC::VM *v24;
  uint64_t v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  _QWORD *v29;
  WTF::StringImpl *v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  JSValue v36;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v38;
  objc_class *v39;
  WebCore::DOMGuardedObject *v40;
  WebCore::DOMGuardedObject *v41;
  int v42;
  WTF::StringImpl *v43;
  _QWORD *v44;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194A66798);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_56;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSDOMCacheStorage::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSDOMCacheStorage::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_56:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"CacheStorage", "has", v17);
  }
  else
  {
    v24 = (JSC::VM *)*((_QWORD *)this + 7);
    if (*((_DWORD *)a2 + 8) != 1)
    {
      v25 = *(_QWORD *)(v18 + 24);
      v26 = *((_QWORD *)a2 + 6);
      v44 = (_QWORD *)v26;
      if ((v26 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v26 + 5) != 2)
      {
        JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v44, this);
LABEL_32:
        if (*((_DWORD *)v24 + 20))
        {
          hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v24);
          v28 = v43;
          if (hasExceptionsAfterHandlingTraps)
          {
            v42 = 1;
            v43 = 0;
            if (v28)
            {
              if (*(_DWORD *)v28 == 2)
                WTF::StringImpl::destroy(v28, v38);
              else
                *(_DWORD *)v28 -= 2;
            }
            v33 = 1;
            goto LABEL_43;
          }
        }
        else
        {
          v28 = v43;
        }
        v42 = 0;
        v41 = 0;
        if (v28)
        {
          *(_DWORD *)v28 += 2;
          v29 = (_QWORD *)WTF::fastMalloc((WTF *)0x20);
          *v29 = &off_1E3353DA8;
          v29[1] = v25;
          *(_DWORD *)v28 += 2;
        }
        else
        {
          v29 = (_QWORD *)WTF::fastMalloc((WTF *)0x20);
          *v29 = &off_1E3353DA8;
          v29[1] = v25;
        }
        v29[2] = v28;
        v29[3] = v14;
        v44 = v29;
        WebCore::DOMCacheStorage::retrieveCaches(v25, (uint64_t *)&v44);
        if (v44)
          (*(void (**)(_QWORD *))(*v44 + 8))(v44);
        if (v28)
        {
          v31 = *(_DWORD *)v28 - 2;
          if (*(_DWORD *)v28 == 2)
          {
            WTF::StringImpl::destroy(v28, v30);
            v31 = *(_DWORD *)v28;
          }
          else
          {
            *(_DWORD *)v28 = v31;
          }
          v32 = v31 - 2;
          if (v31 != 2)
          {
            v14 = 0;
            v33 = 0;
            *(_DWORD *)v28 = v32;
            goto LABEL_43;
          }
          WTF::StringImpl::destroy(v28, v30);
        }
        v14 = 0;
        v33 = 0;
LABEL_43:
        ((void (*)(_QWORD **, WebCore::DOMGuardedObject **))off_1E325A258[v33])(&v44, &v41);
        if (!v14)
          goto LABEL_46;
        goto LABEL_44;
      }
      v27 = *(WTF::StringImpl **)(v26 + 8);
      if ((v27 & 1) != 0)
      {
        v27 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v26, this);
        if (!v27)
          goto LABEL_31;
      }
      else if (!v27)
      {
LABEL_31:
        v43 = v27;
        goto LABEL_32;
      }
      *(_DWORD *)v27 += 2;
      goto LABEL_31;
    }
    v36.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v24, this, v36);
  }
LABEL_44:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_46:
  v34 = *(_QWORD *)(v10 + 16);
  if (v34)
  {
    if (*(_QWORD *)(v10 + 24) != v34)
    {
      v39 = *(objc_class **)(v34 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v41);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v41, v39, 0);
      v40 = v41;
      v41 = 0;
      if (v40)
      {
        if (*((_DWORD *)v40 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v40 + 16))(v40);
        else
          --*((_DWORD *)v40 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsDOMCacheStoragePrototypeFunction_open(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  JSC::VM *v24;
  uint64_t v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  _QWORD *v29;
  WTF::StringImpl *v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  JSValue v36;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v38;
  objc_class *v39;
  WebCore::DOMGuardedObject *v40;
  WebCore::DOMGuardedObject *v41;
  int v42;
  WTF::StringImpl *v43;
  _QWORD *v44;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194A66B9CLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_56;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSDOMCacheStorage::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSDOMCacheStorage::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_56:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"CacheStorage", "open", v17);
  }
  else
  {
    v24 = (JSC::VM *)*((_QWORD *)this + 7);
    if (*((_DWORD *)a2 + 8) != 1)
    {
      v25 = *(_QWORD *)(v18 + 24);
      v26 = *((_QWORD *)a2 + 6);
      v44 = (_QWORD *)v26;
      if ((v26 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v26 + 5) != 2)
      {
        JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v44, this);
LABEL_32:
        if (*((_DWORD *)v24 + 20))
        {
          hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v24);
          v28 = v43;
          if (hasExceptionsAfterHandlingTraps)
          {
            v42 = 1;
            v43 = 0;
            if (v28)
            {
              if (*(_DWORD *)v28 == 2)
                WTF::StringImpl::destroy(v28, v38);
              else
                *(_DWORD *)v28 -= 2;
            }
            v33 = 1;
            goto LABEL_43;
          }
        }
        else
        {
          v28 = v43;
        }
        v42 = 0;
        v41 = 0;
        if (v28)
        {
          *(_DWORD *)v28 += 2;
          v29 = (_QWORD *)WTF::fastMalloc((WTF *)0x20);
          *v29 = &off_1E3353EF0;
          v29[1] = v25;
          *(_DWORD *)v28 += 2;
        }
        else
        {
          v29 = (_QWORD *)WTF::fastMalloc((WTF *)0x20);
          *v29 = &off_1E3353EF0;
          v29[1] = v25;
        }
        v29[2] = v28;
        v29[3] = v14;
        v44 = v29;
        WebCore::DOMCacheStorage::retrieveCaches(v25, (uint64_t *)&v44);
        if (v44)
          (*(void (**)(_QWORD *))(*v44 + 8))(v44);
        if (v28)
        {
          v31 = *(_DWORD *)v28 - 2;
          if (*(_DWORD *)v28 == 2)
          {
            WTF::StringImpl::destroy(v28, v30);
            v31 = *(_DWORD *)v28;
          }
          else
          {
            *(_DWORD *)v28 = v31;
          }
          v32 = v31 - 2;
          if (v31 != 2)
          {
            v14 = 0;
            v33 = 0;
            *(_DWORD *)v28 = v32;
            goto LABEL_43;
          }
          WTF::StringImpl::destroy(v28, v30);
        }
        v14 = 0;
        v33 = 0;
LABEL_43:
        ((void (*)(_QWORD **, WebCore::DOMGuardedObject **))off_1E325A258[v33])(&v44, &v41);
        if (!v14)
          goto LABEL_46;
        goto LABEL_44;
      }
      v27 = *(WTF::StringImpl **)(v26 + 8);
      if ((v27 & 1) != 0)
      {
        v27 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v26, this);
        if (!v27)
          goto LABEL_31;
      }
      else if (!v27)
      {
LABEL_31:
        v43 = v27;
        goto LABEL_32;
      }
      *(_DWORD *)v27 += 2;
      goto LABEL_31;
    }
    v36.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v24, this, v36);
  }
LABEL_44:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_46:
  v34 = *(_QWORD *)(v10 + 16);
  if (v34)
  {
    if (*(_QWORD *)(v10 + 24) != v34)
    {
      v39 = *(objc_class **)(v34 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v41);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v41, v39, 0);
      v40 = v41;
      v41 = 0;
      if (v40)
      {
        if (*((_DWORD *)v40 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v40 + 16))(v40);
        else
          --*((_DWORD *)v40 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsDOMCacheStoragePrototypeFunction_delete(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  JSC::VM *v24;
  uint64_t v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  _QWORD *v29;
  WTF::StringImpl *v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  JSValue v36;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v38;
  objc_class *v39;
  WebCore::DOMGuardedObject *v40;
  WebCore::DOMGuardedObject *v41;
  int v42;
  WTF::StringImpl *v43;
  _QWORD *v44;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194A66FA0);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_56;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSDOMCacheStorage::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSDOMCacheStorage::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_56:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"CacheStorage", "delete", v17);
  }
  else
  {
    v24 = (JSC::VM *)*((_QWORD *)this + 7);
    if (*((_DWORD *)a2 + 8) != 1)
    {
      v25 = *(_QWORD *)(v18 + 24);
      v26 = *((_QWORD *)a2 + 6);
      v44 = (_QWORD *)v26;
      if ((v26 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v26 + 5) != 2)
      {
        JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v44, this);
LABEL_32:
        if (*((_DWORD *)v24 + 20))
        {
          hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v24);
          v28 = v43;
          if (hasExceptionsAfterHandlingTraps)
          {
            v42 = 1;
            v43 = 0;
            if (v28)
            {
              if (*(_DWORD *)v28 == 2)
                WTF::StringImpl::destroy(v28, v38);
              else
                *(_DWORD *)v28 -= 2;
            }
            v33 = 1;
            goto LABEL_43;
          }
        }
        else
        {
          v28 = v43;
        }
        v42 = 0;
        v41 = 0;
        if (v28)
        {
          *(_DWORD *)v28 += 2;
          v29 = (_QWORD *)WTF::fastMalloc((WTF *)0x20);
          *v29 = &off_1E3353FC8;
          v29[1] = v25;
          *(_DWORD *)v28 += 2;
        }
        else
        {
          v29 = (_QWORD *)WTF::fastMalloc((WTF *)0x20);
          *v29 = &off_1E3353FC8;
          v29[1] = v25;
        }
        v29[2] = v28;
        v29[3] = v14;
        v44 = v29;
        WebCore::DOMCacheStorage::retrieveCaches(v25, (uint64_t *)&v44);
        if (v44)
          (*(void (**)(_QWORD *))(*v44 + 8))(v44);
        if (v28)
        {
          v31 = *(_DWORD *)v28 - 2;
          if (*(_DWORD *)v28 == 2)
          {
            WTF::StringImpl::destroy(v28, v30);
            v31 = *(_DWORD *)v28;
          }
          else
          {
            *(_DWORD *)v28 = v31;
          }
          v32 = v31 - 2;
          if (v31 != 2)
          {
            v14 = 0;
            v33 = 0;
            *(_DWORD *)v28 = v32;
            goto LABEL_43;
          }
          WTF::StringImpl::destroy(v28, v30);
        }
        v14 = 0;
        v33 = 0;
LABEL_43:
        ((void (*)(_QWORD **, WebCore::DOMGuardedObject **))off_1E325A258[v33])(&v44, &v41);
        if (!v14)
          goto LABEL_46;
        goto LABEL_44;
      }
      v27 = *(WTF::StringImpl **)(v26 + 8);
      if ((v27 & 1) != 0)
      {
        v27 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v26, this);
        if (!v27)
          goto LABEL_31;
      }
      else if (!v27)
      {
LABEL_31:
        v43 = v27;
        goto LABEL_32;
      }
      *(_DWORD *)v27 += 2;
      goto LABEL_31;
    }
    v36.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
    JSC::VM::throwException(v24, this, v36);
  }
LABEL_44:
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_46:
  v34 = *(_QWORD *)(v10 + 16);
  if (v34)
  {
    if (*(_QWORD *)(v10 + 24) != v34)
    {
      v39 = *(objc_class **)(v34 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v41);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v41, v39, 0);
      v40 = v41;
      v41 = 0;
      if (v40)
      {
        if (*((_DWORD *)v40 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v40 + 16))(v40);
        else
          --*((_DWORD *)v40 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsDOMCacheStoragePrototypeFunction_keys(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  WebCore::DOMGuardedObject *v24;
  void (*v25)(void);
  uint64_t v26;
  objc_class *v28;
  WebCore::DOMGuardedObject *v29;
  WebCore::DOMGuardedObject *v30;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194A6726CLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_31;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSDOMCacheStorage::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSDOMCacheStorage::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_31:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"CacheStorage", "keys", v16);
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_28;
    }
    v25 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_27;
  }
  v23 = *(_QWORD *)(v17 + 24);
  v24 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x18);
  *(_QWORD *)v24 = &off_1E33540A0;
  *((_QWORD *)v24 + 1) = v23;
  *((_QWORD *)v24 + 2) = v14;
  v30 = v24;
  WebCore::DOMCacheStorage::retrieveCaches(v23, (uint64_t *)&v30);
  if (v30)
  {
    v25 = *(void (**)(void))(*(_QWORD *)v30 + 8);
LABEL_27:
    v25();
  }
LABEL_28:
  v26 = *(_QWORD *)(v10 + 16);
  if (v26)
  {
    if (*(_QWORD *)(v10 + 24) != v26)
    {
      v28 = *(objc_class **)(v26 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v30);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v30, v28, 0);
      v29 = v30;
      v30 = 0;
      if (v29)
      {
        if (*((_DWORD *)v29 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v29 + 16))(v29);
        else
          --*((_DWORD *)v29 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore22MultiCacheQueryOptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11DOMFormDataENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11DOMFormDataENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_BYTE *WebCore::jsDOMFormDataPrototypeFunction_append(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v5;
  JSC::JSGlobalObject *v6;
  WebCore::JSDOMFormData *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  JSC::VM *v17;
  JSValue v18;
  uint64_t v20;
  WebCore::DOMFormData *v21;
  int v22;
  int v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  WebCore *v29;
  JSC::JSGlobalObject *v30;
  JSC::CallFrame *v31;
  uint64_t v32;
  WTF::StringImpl *v33;
  int v34;
  WTF::StringImpl *v35;
  int v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;

  v32 = *((_QWORD *)this + 7);
  v5 = JSC::jsDynamicCast<WebCore::JSDOMFormData *>(*((_QWORD *)a2 + 5));
  if (!v5)
    return WebCore::throwThisTypeError((int)this, (int)&v32, "FormData", "append");
  v8 = *((int *)a2 + 8) - 1;
  if (v8 >= 3)
    v8 = 3;
  if (v8 == 3)
    return (_BYTE *)WebCore::jsDOMFormDataPrototypeFunction_append2Body((WTF::StringImpl **)this, a2, *(JSC::CallFrame **)(v5 + 24), v7);
  if (v8 != 2)
  {
    v17 = (JSC::VM *)*((_QWORD *)this + 7);
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v6);
    return (_BYTE *)JSC::VM::throwException(v17, this, v18);
  }
  v9 = *((_QWORD *)a2 + 7);
  if ((v9 & 0xFFFE000000000002) == 0 && *(unsigned __int8 *)(v9 + 5) >= 0x17u)
  {
    v10 = 16 * (*(_DWORD *)v9 & 0xFFFFFFFE);
    v11 = *(unsigned int *)(v10 + 76);
    v12 = *(_DWORD *)(v10 + 76) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSBlob::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSBlob::s_info && v13 != 0);
    }
    if (v12)
      return (_BYTE *)WebCore::jsDOMFormDataPrototypeFunction_append2Body((WTF::StringImpl **)this, a2, *(JSC::CallFrame **)(v5 + 24), v7);
  }
  v21 = *(WebCore::DOMFormData **)(v5 + 24);
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v35);
  v22 = v36;
  if (v36)
  {
    v20 = 0;
LABEL_34:
    if (v22 != -1)
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A258[v22])(&v33, &v35);
    return (_BYTE *)v20;
  }
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 7), (uint64_t)&v33);
  v23 = v34;
  if (v34)
  {
    v20 = 0;
LABEL_31:
    if (v23 != -1)
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A258[v23])(&v38, &v33);
    v22 = v36;
    goto LABEL_34;
  }
  if (!v36)
  {
    v24 = v35;
    v35 = 0;
    v38 = v24;
    v25 = v33;
    v33 = 0;
    v37 = v25;
    WebCore::DOMFormData::append(v21, &v38, &v37);
    v27 = v37;
    v37 = 0;
    if (v27)
    {
      if (*(_DWORD *)v27 == 2)
        WTF::StringImpl::destroy(v27, v26);
      else
        *(_DWORD *)v27 -= 2;
    }
    v28 = v38;
    v38 = 0;
    if (v28)
    {
      if (*(_DWORD *)v28 == 2)
        WTF::StringImpl::destroy(v28, v26);
      else
        *(_DWORD *)v28 -= 2;
    }
    v23 = v34;
    v20 = 10;
    goto LABEL_31;
  }
  v29 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDOMFormDataPrototypeFunction_delete(v29, v30, v31);
}

_BYTE *WebCore::jsDOMFormDataPrototypeFunction_delete(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v5;
  JSC::JSGlobalObject *v6;
  WTF *v7;
  const WTF::StringImpl *v8;
  int v9;
  const WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  JSC::VM *v15;
  JSValue v16;
  uint64_t v17;
  const WTF::StringImpl *v18;
  int v19;
  const WTF::StringImpl *v20;

  v17 = *((_QWORD *)this + 7);
  v5 = JSC::jsDynamicCast<WebCore::JSDOMFormData *>(*((_QWORD *)a2 + 5));
  if (!v5)
    return WebCore::throwThisTypeError((int)this, (int)&v17, "FormData", "delete");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v15 = (JSC::VM *)*((_QWORD *)this + 7);
    v16.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v6);
    return (_BYTE *)JSC::VM::throwException(v15, this, v16);
  }
  v7 = *(WTF **)(v5 + 24);
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v18);
  v9 = v19;
  if (v19)
  {
    v12 = 0;
  }
  else
  {
    v10 = v18;
    v18 = 0;
    v20 = v10;
    WebCore::DOMFormData::remove(v7, &v20, v8);
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
        WTF::StringImpl::destroy(v10, v11);
      else
        *(_DWORD *)v10 -= 2;
    }
    v9 = v19;
    v12 = 10;
  }
  if (v9 != -1)
    ((void (*)(const WTF::StringImpl **, const WTF::StringImpl **))off_1E325A258[v9])(&v20, &v18);
  return (_BYTE *)v12;
}

_BYTE *WebCore::jsDOMFormDataPrototypeFunction_get(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v5;
  JSC::JSGlobalObject *v6;
  _DWORD *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  const WTF::StringImpl *v10;
  int v11;
  uint64_t *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  JSC::VM *v22;
  JSValue v23;
  WebCore *v24;
  JSC::JSGlobalObject *v25;
  JSC::CallFrame *v26;
  uint64_t v27;
  _BYTE v28[8];
  unsigned int v29;
  char v30;
  WTF::StringImpl *v31;
  int v32;
  _BYTE v33[8];
  int v34;
  _BYTE v35[40];
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t *v39[5];

  v27 = *((_QWORD *)this + 7);
  v5 = JSC::jsDynamicCast<WebCore::JSDOMFormData *>(*((_QWORD *)a2 + 5));
  if (!v5)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "FormData", "get");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v22 = (JSC::VM *)*((_QWORD *)this + 7);
    v23.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v6);
    return (_BYTE *)JSC::VM::throwException(v22, this, v23);
  }
  v7 = (_DWORD *)v5;
  v8 = *(_QWORD *)(v5 + 24);
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v31);
  v11 = v32;
  if (v32)
  {
    v17 = 0;
LABEL_25:
    if (v11 != -1)
      ((void (*)(uint64_t **, WTF::StringImpl **))off_1E325A258[v11])(v39, &v31);
    return (_BYTE *)v17;
  }
  v12 = *(uint64_t **)(16 * (*v7 & 0xFFFFFFFE) + 0x28);
  v13 = v31;
  v31 = 0;
  v14 = *(unsigned int *)(v8 + 68);
  if (!(_DWORD)v14)
  {
LABEL_8:
    v28[0] = 0;
    v30 = 0;
    v17 = 2;
LABEL_21:
    if (v13)
    {
      if (*(_DWORD *)v13 == 2)
        WTF::StringImpl::destroy(v13, v9);
      else
        *(_DWORD *)v13 -= 2;
    }
    v11 = v32;
    goto LABEL_25;
  }
  v15 = *(_QWORD *)(v8 + 56) + 8;
  v16 = 24 * v14;
  while (!WTF::equal(*(WTF **)(v15 - 8), v13, v10))
  {
    v15 += 24;
    v16 -= 24;
    if (!v16)
      goto LABEL_8;
  }
  v28[0] = 0;
  v29 = -1;
  v18 = *(unsigned int *)(v15 + 8);
  if ((_DWORD)v18 != -1)
  {
    ((void (*)(uint64_t **, _BYTE *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base14__visit_alt_atB8sn180100IZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4FileENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS6_6StringEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISG_LNS0_6_TraitE1EEEEEvRSH_OT_EUlRSP_OT0_E_JSO_SN_EEEDcmSQ_DpOT0____fdiagonal[v18])(v39, v28, v15);
    v29 = v18;
  }
  v30 = 1;
  v33[0] = 0;
  v34 = -1;
  v19 = v29;
  if (v29 == -1)
  {
    v19 = -1;
  }
  else
  {
    ((void (*)(uint64_t **, _BYTE *, _BYTE *))off_1E325BF00[v29])(v39, v33, v28);
    v34 = v19;
  }
  LOBYTE(v36) = 0;
  v37 = 0;
  v38 = v19;
  v39[0] = &v38;
  v39[1] = &v36;
  v39[2] = (uint64_t *)this;
  v39[3] = v12;
  v39[4] = (uint64_t *)v33;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_4FileEEENS_12IDLUSVStringEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSH_12RawPtrTraitsIS5_EENSH_21DefaultRefDerefTraitsIS5_EEEENSH_6StringEEEEEUlTyvE_JNSF_17integral_constantIlLl0EEENST_IlLl1EEEEEET_SW_((uint64_t)v35, v39);
  if (v37)
  {
    v17 = v36;
    if (v34 != -1)
      ((void (*)(uint64_t **, _BYTE *))off_1E325BEF0[v34])(v39, v33);
    if (v30)
    {
      if (v29 != -1)
        ((void (*)(uint64_t **, _BYTE *))off_1E325BEF0[v29])(v39, v28);
      v29 = -1;
    }
    goto LABEL_21;
  }
  v24 = (WebCore *)std::__throw_bad_optional_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDOMFormDataPrototypeFunction_getAll(v24, v25, v26);
}

_BYTE *WebCore::jsDOMFormDataPrototypeFunction_getAll(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v5;
  JSC::JSGlobalObject *v6;
  _DWORD *v7;
  uint64_t v8;
  const WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  const WTF::StringImpl *v12;
  JSC::VM *v13;
  unsigned int v14;
  WTF *v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  int v19;
  JSValue v20;
  void *v21;
  JSC::VM *v22;
  uint64_t v23;
  uint64_t *v24;
  unsigned int *v25;
  uint64_t v26;
  uint64_t v27;
  JSC::VM *v30;
  JSValue v31;
  _QWORD *v32;
  WebCore *v33;
  JSC::JSGlobalObject *v34;
  JSC::CallFrame *v35;
  uint64_t v36;
  const WTF::StringImpl *v37;
  WTF *v38;
  int v39;
  _DWORD v40[3];
  int v41;
  BOOL v42[8];
  uint64_t v43;
  WTF *v44;
  _OWORD v45[4];
  uint64_t v46;
  JSC::VM *v47;
  char v48[40];
  objc_class *v49;
  char v50;
  uint64_t v51;
  WTF *v52;
  objc_class **v53;
  WebCore *v54;
  uint64_t v55;
  WTF *v56;

  v36 = *((_QWORD *)this + 7);
  v5 = JSC::jsDynamicCast<WebCore::JSDOMFormData *>(*((_QWORD *)a2 + 5));
  if (!v5)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "FormData", "getAll");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v30 = (JSC::VM *)*((_QWORD *)this + 7);
    v31.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v6);
    return (_BYTE *)JSC::VM::throwException(v30, this, v31);
  }
  v7 = (_DWORD *)v5;
  v8 = *(_QWORD *)(v5 + 24);
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v40[1]);
  v10 = v41;
  if (v41)
  {
    v23 = 0;
LABEL_40:
    if (v10 != -1)
      ((void (*)(BOOL *, _DWORD *))off_1E325A258[v10])(v42, &v40[1]);
    return (_BYTE *)v23;
  }
  v11 = *(_QWORD *)(16 * (*v7 & 0xFFFFFFFE) + 0x28);
  v12 = *(const WTF::StringImpl **)&v40[1];
  *(_QWORD *)&v40[1] = 0;
  v37 = v12;
  WebCore::DOMFormData::getAll(v8, &v37, v9, (uint64_t)&v38);
  v13 = (JSC::VM *)*((_QWORD *)this + 7);
  v46 = 0;
  v47 = v13;
  v42[0] = 0;
  v43 = 0x800000000;
  v44 = (WTF *)((char *)v45 + 8);
  memset(v45, 0, sizeof(v45));
  v14 = v40[0];
  if (v40[0] < 9u)
  {
    if (v40[0])
      goto LABEL_6;
LABEL_22:
    if (v42[0])
    {
      JSC::throwOutOfMemoryError();
    }
    else
    {
      v52 = v44;
      LODWORD(v53) = v43;
      v22 = *(JSC::VM **)(v11 + 56);
      if (!*((_DWORD *)v22 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v22) & 1) == 0)
      {
        v23 = JSC::constructArray();
LABEL_25:
        v24 = *(uint64_t **)&v45[0];
        if (*(_QWORD *)&v45[0])
        {
          v52 = (WTF *)&v43;
          v32 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v45[0], (uint64_t *)&v52);
          WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v24, v32);
        }
        if (v44 != (WTF *)((char *)v45 + 8) && v44)
          WTF::fastFree(v44, v21);
        v25 = (unsigned int *)v38;
        if (v40[0])
        {
          v26 = 16 * v40[0];
          do
          {
            v27 = v25[2];
            if ((_DWORD)v27 != -1)
              ((void (*)(BOOL *, unsigned int *))off_1E325BEF0[v27])(v42, v25);
            v25[2] = -1;
            v25 += 4;
            v26 -= 16;
          }
          while (v26);
          v25 = (unsigned int *)v38;
        }
        if (v25)
        {
          v38 = 0;
          v39 = 0;
          WTF::fastFree((WTF *)v25, v21);
        }
        if (v12)
        {
          if (*(_DWORD *)v12 == 2)
            WTF::StringImpl::destroy(v12, (WTF::StringImpl *)v21);
          else
            *(_DWORD *)v12 -= 2;
        }
        v10 = v41;
        goto LABEL_40;
      }
    }
LABEL_52:
    v23 = 0;
    goto LABEL_25;
  }
  v42[0] = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v43) == 1;
  v14 = v40[0];
  if (!v40[0])
    goto LABEL_22;
LABEL_6:
  v15 = v38;
  v16 = 16 * v14;
  while (1)
  {
    v17 = *((unsigned int *)v15 + 2);
    if ((_DWORD)v17 == -1)
      v17 = -1;
    v51 = v17;
    v52 = (WTF *)&v51;
    LOBYTE(v49) = 0;
    v50 = 0;
    v53 = &v49;
    v54 = this;
    v55 = v11;
    v56 = v15;
    _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_4FileEEENS_12IDLUSVStringEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSH_12RawPtrTraitsIS5_EENSH_21DefaultRefDerefTraitsIS5_EEEENSH_6StringEEEEEUlTyvE_JNSF_17integral_constantIlLl0EEENST_IlLl1EEEEEET_SW_((uint64_t)v48, (uint64_t **)&v52);
    if (!v50)
      break;
    v18 = v49;
    if (*((_DWORD *)v13 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v13) & 1) != 0)
      goto LABEL_52;
    v19 = v43;
    if ((_DWORD)v43 == HIDWORD(v43) || v44 != (WTF *)((char *)v45 + 8) && v44)
    {
      v20.super.isa = v18;
      if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v43, v20) == 1)
        v42[0] = 1;
    }
    else
    {
      *((_QWORD *)v44 + v43) = v18;
      LODWORD(v43) = v19 + 1;
    }
    v15 = (WTF *)((char *)v15 + 16);
    v16 -= 16;
    if (!v16)
      goto LABEL_22;
  }
  v33 = (WebCore *)std::__throw_bad_optional_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDOMFormDataPrototypeFunction_has(v33, v34, v35);
}

_BYTE *WebCore::jsDOMFormDataPrototypeFunction_has(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v5;
  JSC::JSGlobalObject *v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  const WTF::StringImpl *v9;
  int v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF **v13;
  uint64_t v14;
  uint64_t v15;
  JSC::VM *v18;
  JSValue v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  int v22;
  char v23;

  v20 = *((_QWORD *)this + 7);
  v5 = JSC::jsDynamicCast<WebCore::JSDOMFormData *>(*((_QWORD *)a2 + 5));
  if (!v5)
    return WebCore::throwThisTypeError((int)this, (int)&v20, "FormData", "has");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v18 = (JSC::VM *)*((_QWORD *)this + 7);
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v6);
    return (_BYTE *)JSC::VM::throwException(v18, this, v19);
  }
  v7 = *(_QWORD *)(v5 + 24);
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v21);
  v10 = v22;
  if (!v22)
  {
    v11 = v21;
    v21 = 0;
    v12 = *(unsigned int *)(v7 + 68);
    if ((_DWORD)v12)
    {
      v13 = *(WTF ***)(v7 + 56);
      v14 = 24 * v12;
      v15 = 6;
      while (!WTF::equal(*v13, v11, v9))
      {
        v13 += 3;
        v14 -= 24;
        if (!v14)
          goto LABEL_10;
      }
      v15 = 7;
      if (!v11)
        goto LABEL_15;
    }
    else
    {
      v15 = 6;
LABEL_10:
      if (!v11)
        goto LABEL_15;
    }
    if (*(_DWORD *)v11 == 2)
      WTF::StringImpl::destroy(v11, v8);
    else
      *(_DWORD *)v11 -= 2;
LABEL_15:
    v10 = v22;
    goto LABEL_16;
  }
  v15 = 0;
LABEL_16:
  if (v10 != -1)
    ((void (*)(char *, WTF::StringImpl **))off_1E325A258[v10])(&v23, &v21);
  return (_BYTE *)v15;
}

_BYTE *WebCore::jsDOMFormDataPrototypeFunction_set(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v5;
  JSC::JSGlobalObject *v6;
  WebCore::JSDOMFormData *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  JSC::VM *v17;
  JSValue v18;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  WTF *v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  WebCore *v28;
  JSC::JSGlobalObject *v29;
  JSC::CallFrame *v30;
  uint64_t v31;
  WTF::StringImpl *v32;
  int v33;
  WTF *v34;
  int v35;
  WTF *v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  int v39;
  char v40;

  v31 = *((_QWORD *)this + 7);
  v5 = JSC::jsDynamicCast<WebCore::JSDOMFormData *>(*((_QWORD *)a2 + 5));
  if (!v5)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "FormData", "set");
  v8 = *((int *)a2 + 8) - 1;
  if (v8 >= 3)
    v8 = 3;
  if (v8 == 3)
    return (_BYTE *)WebCore::jsDOMFormDataPrototypeFunction_set2Body((WTF::StringImpl **)this, a2, *(JSC::CallFrame **)(v5 + 24), v7);
  if (v8 != 2)
  {
    v17 = (JSC::VM *)*((_QWORD *)this + 7);
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v6);
    return (_BYTE *)JSC::VM::throwException(v17, this, v18);
  }
  v9 = *((_QWORD *)a2 + 7);
  if ((v9 & 0xFFFE000000000002) == 0 && *(unsigned __int8 *)(v9 + 5) >= 0x17u)
  {
    v10 = 16 * (*(_DWORD *)v9 & 0xFFFFFFFE);
    v11 = *(unsigned int *)(v10 + 76);
    v12 = *(_DWORD *)(v10 + 76) != 0;
    v13 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v14 = v13 == &WebCore::JSBlob::s_info;
    else
      v14 = 1;
    if (!v14)
    {
      do
      {
        v13 = (char **)v13[2];
        v12 = v13 != 0;
      }
      while (v13 != &WebCore::JSBlob::s_info && v13 != 0);
    }
    if (v12)
      return (_BYTE *)WebCore::jsDOMFormDataPrototypeFunction_set2Body((WTF::StringImpl **)this, a2, *(JSC::CallFrame **)(v5 + 24), v7);
  }
  v21 = *(_QWORD *)(v5 + 24);
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v34);
  v22 = v35;
  if (v35)
  {
    v20 = 0;
LABEL_43:
    if (v22 != -1)
      ((void (*)(WTF::StringImpl **, WTF **))off_1E325A258[v22])(&v37, &v34);
    return (_BYTE *)v20;
  }
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 7), (uint64_t)&v32);
  v23 = v33;
  if (v33)
  {
    v20 = 0;
LABEL_40:
    if (v23 != -1)
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A258[v23])(&v37, &v32);
    v22 = v35;
    goto LABEL_43;
  }
  if (!v35)
  {
    v24 = v34;
    v34 = 0;
    v36 = v24;
    v25 = v32;
    v32 = 0;
    if (v24)
      *(_DWORD *)v24 += 2;
    v37 = v24;
    if (v25)
      *(_DWORD *)v25 += 2;
    v38 = v25;
    v39 = 1;
    WebCore::DOMFormData::set(v21, &v36, (unsigned int *)&v37);
    if (v39 != -1)
      ((void (*)(char *, WTF::StringImpl **))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4FileENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS6_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSI_EEEDcOSJ_DpOT0____fmatrix[v39])(&v40, &v38);
    v39 = -1;
    v27 = v37;
    v37 = 0;
    if (v27)
    {
      if (*(_DWORD *)v27 == 2)
      {
        WTF::StringImpl::destroy(v27, v26);
        if (v25)
        {
LABEL_34:
          if (*(_DWORD *)v25 == 2)
            WTF::StringImpl::destroy(v25, v26);
          else
            *(_DWORD *)v25 -= 2;
        }
LABEL_36:
        if (v24)
        {
          if (*(_DWORD *)v24 == 2)
            WTF::StringImpl::destroy(v24, v26);
          else
            *(_DWORD *)v24 -= 2;
        }
        v23 = v33;
        v20 = 10;
        goto LABEL_40;
      }
      *(_DWORD *)v27 -= 2;
    }
    if (v25)
      goto LABEL_34;
    goto LABEL_36;
  }
  v28 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDOMFormDataPrototypeFunction_entries(v28, v29, v30);
}

_BYTE *WebCore::jsDOMFormDataPrototypeFunction_entries(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;

  v4 = *((_QWORD *)a2 + 5);
  v7 = *((_QWORD *)this + 7);
  v5 = JSC::jsDynamicCast<WebCore::JSDOMFormData *>(v4);
  if (v5)
    return (_BYTE *)WebCore::iteratorCreate<WebCore::DOMFormDataIterator>(v5, 2);
  else
    return WebCore::throwThisTypeError((int)this, (int)&v7, "FormData", "entries");
}

_BYTE *WebCore::jsDOMFormDataPrototypeFunction_keys(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;

  v4 = *((_QWORD *)a2 + 5);
  v7 = *((_QWORD *)this + 7);
  v5 = JSC::jsDynamicCast<WebCore::JSDOMFormData *>(v4);
  if (v5)
    return (_BYTE *)WebCore::iteratorCreate<WebCore::DOMFormDataIterator>(v5, 0);
  else
    return WebCore::throwThisTypeError((int)this, (int)&v7, "FormData", "keys");
}

_BYTE *WebCore::jsDOMFormDataPrototypeFunction_values(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;

  v4 = *((_QWORD *)a2 + 5);
  v7 = *((_QWORD *)this + 7);
  v5 = JSC::jsDynamicCast<WebCore::JSDOMFormData *>(v4);
  if (v5)
    return (_BYTE *)WebCore::iteratorCreate<WebCore::DOMFormDataIterator>(v5, 1);
  else
    return WebCore::throwThisTypeError((int)this, (int)&v7, "FormData", "values");
}

_BYTE *WebCore::jsDOMFormDataPrototypeFunction_forEach(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v5;
  JSCell *v6;
  objc_class *v7;
  JSC::JSFunction *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  JSValue v12;
  int v13;
  uint64_t v14;
  int v15;
  WTF::StringImpl **v16;
  int v17;
  int v18;
  void *v19;
  int v20;
  uint64_t *v21;
  WTF::StringImpl *v22;
  unsigned __int8 *v23;
  unsigned int v24;
  unsigned int v25;
  JSValue v26;
  JSValue v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v32;
  char v33[8];
  uint64_t v34;
  WTF *v35;
  uint64_t *v36[9];
  WTF::StringImpl *v37;
  uint64_t v38;
  unsigned int v39;
  char v40;
  _QWORD v41[2];
  _QWORD v42[3];
  uint64_t v43;
  _BYTE v44[40];
  objc_class *v45;
  char v46;
  uint64_t v47;
  WTF *v48;
  objc_class **v49;
  WebCore *v50;
  uint64_t v51;
  uint64_t *v52;

  v32 = *((_QWORD *)this + 7);
  v5 = JSC::jsDynamicCast<WebCore::JSDOMFormData *>(*((_QWORD *)a2 + 5));
  if (!v5)
    return WebCore::throwThisTypeError((int)this, (int)&v32, "FormData", "forEach");
  v43 = *((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
    goto LABEL_65;
  v7 = (objc_class *)v5;
  v8 = (JSC::JSFunction *)*((_QWORD *)a2 + 6);
LABEL_4:
  if (((unint64_t)v8 & 0xFFFE000000000002) != 0)
  {
LABEL_65:
    LOBYTE(v42[0]) = 0;
    return (_BYTE *)JSC::throwTypeError();
  }
  if (*((_BYTE *)v8 + 5) == 26)
    JSC::JSFunction::getCallData(v8, v6);
  else
    (*(void (**)(_QWORD *__return_ptr, JSC::JSFunction *))(16
                                                                    * *(unsigned int *)(16
                                                                                      * (*(_DWORD *)v8 & 0xFFFFFFFE)
                                                                                      + 0x4C)
                                                                    + 0x38))(v42, v8);
  if (!LOBYTE(v42[0]))
    return (_BYTE *)JSC::throwTypeError();
  v9 = *((_QWORD *)v7 + 3);
  WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  ++*(_DWORD *)(v9 + 16);
  v41[0] = v9;
  v41[1] = 0;
  do
  {
    while (1)
    {
      WebCore::DOMFormData::Iterator::next(v41, (uint64_t)&v37);
      if (!v40)
        goto LABEL_69;
      v33[0] = 0;
      v34 = 0x800000000;
      v35 = (WTF *)&v36[1];
      memset(v36, 0, sizeof(v36));
      v10 = *(_QWORD *)(16 * (*(_DWORD *)v7 & 0xFFFFFFFE) + 0x28);
      if (v39 == -1)
        v11 = -1;
      else
        v11 = v39;
      LOBYTE(v45) = 0;
      v46 = 0;
      v47 = v11;
      v48 = (WTF *)&v47;
      v49 = &v45;
      v50 = this;
      v51 = v10;
      v52 = &v38;
      _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_4FileEEENS_12IDLUSVStringEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSH_12RawPtrTraitsIS5_EENSH_21DefaultRefDerefTraitsIS5_EEEENSH_6StringEEEEEUlTyvE_JNSF_17integral_constantIlLl0EEENST_IlLl1EEEEEET_SW_((uint64_t)v44, (uint64_t **)&v48);
      if (!v46)
      {
        std::__throw_bad_optional_access[abi:sn180100]();
        goto LABEL_4;
      }
      v12.super.isa = v45;
      v13 = v34;
      if ((_DWORD)v34 == HIDWORD(v34) || v35 != (WTF *)&v36[1] && v35)
      {
        if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v34, v12) == 1)
          v33[0] = 1;
      }
      else
      {
        *((_QWORD *)v35 + v34) = v45;
        LODWORD(v34) = v13 + 1;
      }
      if (!v40)
      {
        __break(1u);
        return WebCore::throwThisTypeError((int)this, (int)&v32, "FormData", "forEach");
      }
      v14 = *((_QWORD *)this + 7);
      if (v37 && (v15 = *((_DWORD *)v37 + 1)) != 0)
      {
        if (v15 == 1)
        {
          v23 = (unsigned __int8 *)*((_QWORD *)v37 + 1);
          if ((*((_BYTE *)v37 + 16) & 4) != 0)
          {
            v24 = *v23;
LABEL_50:
            v16 = *(WTF::StringImpl ***)(v14 + 8 * v24 + 42216);
            goto LABEL_24;
          }
          v25 = *(unsigned __int16 *)v23;
          if (v25 <= 0xFF)
          {
            v24 = v25;
            goto LABEL_50;
          }
        }
        v16 = *(WTF::StringImpl ***)(v14 + 64760);
        if (!v16 || v37 != v16[1])
          v16 = (WTF::StringImpl **)JSC::jsStringWithCacheSlowCase();
      }
      else
      {
        v16 = *(WTF::StringImpl ***)(v14 + 41968);
      }
LABEL_24:
      v17 = v34;
      if ((_DWORD)v34 == HIDWORD(v34) || v35 != (WTF *)&v36[1] && v35)
      {
        v26.super.isa = (Class)v16;
        if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v34, v26) == 1)
          v33[0] = 1;
      }
      else
      {
        *((_QWORD *)v35 + v34) = v16;
        LODWORD(v34) = v17 + 1;
      }
      v18 = v34;
      if ((_DWORD)v34 == HIDWORD(v34) || v35 != (WTF *)&v36[1] && v35)
      {
        v27.super.isa = v7;
        if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v34, v27) == 1)
        {
          v33[0] = 1;
LABEL_64:
          JSC::throwOutOfMemoryError();
          v20 = 1;
          goto LABEL_34;
        }
      }
      else
      {
        *((_QWORD *)v35 + v34) = v7;
        LODWORD(v34) = v18 + 1;
      }
      if (v33[0])
        goto LABEL_64;
      v48 = v35;
      LODWORD(v49) = v34;
      JSC::call();
      v20 = *(_QWORD *)(v43 + 16) ? 3 : 0;
LABEL_34:
      v21 = v36[0];
      if (v36[0])
      {
        v48 = (WTF *)&v34;
        v28 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(v36[0], (uint64_t *)&v48);
        WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v21, v28);
      }
      if (v35 != (WTF *)&v36[1] && v35)
        WTF::fastFree(v35, v19);
      if (!v40)
        goto LABEL_43;
      if (v39 != -1)
        ((void (*)(char *, uint64_t *))off_1E325BEF0[v39])(v33, &v38);
      v39 = -1;
      v22 = v37;
      v37 = 0;
      if (!v22)
        goto LABEL_43;
      if (*(_DWORD *)v22 == 2)
        break;
      *(_DWORD *)v22 -= 2;
LABEL_43:
      if (v20)
        goto LABEL_68;
    }
    WTF::StringImpl::destroy(v22, (WTF::StringImpl *)v19);
  }
  while (!v20);
LABEL_68:
  if (v20 == 3)
  {
LABEL_69:
    v30 = 10;
    goto LABEL_71;
  }
  v30 = 0;
LABEL_71:
  if (v41[0])
  {
    if (*(_DWORD *)(v41[0] + 16) == 1)
      (*(void (**)(void))(*(_QWORD *)v41[0] + 16))();
    else
      --*(_DWORD *)(v41[0] + 16);
  }
  return (_BYTE *)v30;
}

uint64_t WebCore::jsDOMFormDataPrototypeFunction_append2Body(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSDOMFormData *a4)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  uint64_t v15;
  WebCore::Blob *v16;
  uint64_t v17;
  int v18;
  const WTF::String *v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  uint64_t v24;
  WTF::StringImpl *v25;
  int v26;
  const WTF::String *v27;
  int v28;
  WTF::StringImpl *v29;
  const WTF::String *v30;

  WebCore::valueToUSVString((JSC::JSGlobalObject *)this, *((_QWORD *)a2 + 6), (uint64_t)&v27);
  v8 = v28;
  if (v28)
  {
    v15 = 0;
    goto LABEL_30;
  }
  v9 = *((_QWORD *)a2 + 7);
  v25 = this[7];
  if ((v9 & 0xFFFE000000000002) == 0)
  {
    v10 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
    v11 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
    v12 = (char **)(16 * v10);
    if ((_DWORD)v10)
      v13 = v12 == &WebCore::JSBlob::s_info;
    else
      v13 = 1;
    if (!v13)
    {
      do
      {
        v12 = (char **)v12[2];
        v11 = v12 != 0;
      }
      while (v12 != &WebCore::JSBlob::s_info && v12 != 0);
    }
    if (v11)
    {
      v16 = *(WebCore::Blob **)(v9 + 24);
      if (v16)
      {
        if ((unint64_t)(*((int *)a2 + 8) - 4) >= 0xFFFFFFFFFFFFFFFDLL
          || (v17 = *((_QWORD *)a2 + 8), v17 == 10))
        {
          v25 = 0;
          v26 = 0;
        }
        else
        {
          WebCore::valueToUSVString((JSC::JSGlobalObject *)this, v17, (uint64_t)&v25);
          v18 = v26;
          if (v26)
          {
            v15 = 0;
LABEL_27:
            if (v18 != -1)
              ((void (*)(const WTF::String **, WTF::StringImpl **))off_1E325A258[v18])(&v30, &v25);
            goto LABEL_29;
          }
          if (v28)
          {
            v24 = std::__throw_bad_variant_access[abi:sn180100]();
            return _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_4FileEEENS_12IDLUSVStringEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSH_12RawPtrTraitsIS5_EENSH_21DefaultRefDerefTraitsIS5_EEEENSH_6StringEEEEEUlTyvE_JNSF_17integral_constantIlLl0EEENST_IlLl1EEEEEET_SW_(v24);
          }
        }
        v19 = v27;
        v27 = 0;
        v20 = v25;
        v25 = 0;
        v29 = v20;
        v30 = v19;
        WebCore::DOMFormData::append(a3, &v30, v16, (const WTF::String *)&v29);
        v22 = v29;
        v29 = 0;
        if (v22)
        {
          if (*(_DWORD *)v22 == 2)
          {
            WTF::StringImpl::destroy(v22, v21);
            if (v19)
            {
LABEL_24:
              if (*(_DWORD *)v19 == 2)
                WTF::StringImpl::destroy(v19, v21);
              else
                *(_DWORD *)v19 -= 2;
            }
LABEL_26:
            v18 = v26;
            v15 = 10;
            goto LABEL_27;
          }
          *(_DWORD *)v22 -= 2;
        }
        if (v19)
          goto LABEL_24;
        goto LABEL_26;
      }
    }
  }
  WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v25, 1, "blobValue", 10, "FormData", 9, v7, "append", 7, "Blob", 5);
  v15 = 0;
LABEL_29:
  v8 = v28;
LABEL_30:
  if (v8 != -1)
    ((void (*)(WTF::StringImpl **, const WTF::String **))off_1E325A258[v8])(&v25, &v27);
  return v15;
}

uint64_t _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_4FileEEENS_12IDLUSVStringEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSH_12RawPtrTraitsIS5_EENSH_21DefaultRefDerefTraitsIS5_EEEENSH_6StringEEEEEUlTyvE_JNSF_17integral_constantIlLl0EEENST_IlLl1EEEEEET_SW_(uint64_t result, uint64_t **a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t *v11;
  __int128 v12;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  _DWORD **v17;

  v3 = result;
  v4 = **a2;
  if (!v4)
  {
    v5 = a2[4];
    if (*((_DWORD *)v5 + 2))
      goto LABEL_27;
    if (*v5)
      result = WebCore::wrap<WebCore::File>((uint64_t)a2[2], (uint64_t)a2[3], *v5);
    else
      result = 2;
    v6 = a2[1];
    if (!*((_BYTE *)v6 + 8))
      *((_BYTE *)v6 + 8) = 1;
    *v6 = result;
    v4 = **a2;
  }
  if (v4 != 1)
  {
LABEL_20:
    v12 = *((_OWORD *)a2 + 1);
    *(_OWORD *)v3 = *(_OWORD *)a2;
    *(_OWORD *)(v3 + 16) = v12;
    *(_QWORD *)(v3 + 32) = a2[4];
    return result;
  }
  v7 = a2[4];
  if (*((_DWORD *)v7 + 2) == 1)
  {
    result = a2[2][7];
    v8 = *v7;
    if (*v7 && (v9 = *(_DWORD *)(v8 + 4)) != 0)
    {
      if (v9 != 1)
      {
LABEL_14:
        v10 = *(_QWORD *)(result + 64760);
        if (!v10 || v8 != *(_QWORD *)(v10 + 8))
        {
          result = JSC::jsStringWithCacheSlowCase();
          v10 = result;
        }
        goto LABEL_17;
      }
      v13 = *(unsigned __int8 **)(v8 + 8);
      if ((*(_BYTE *)(v8 + 16) & 4) != 0)
      {
        v14 = *v13;
      }
      else
      {
        v15 = *(unsigned __int16 *)v13;
        if (v15 > 0xFF)
          goto LABEL_14;
        v14 = v15;
      }
      v10 = *(_QWORD *)(result + 8 * v14 + 42216);
    }
    else
    {
      v10 = *(_QWORD *)(result + 41968);
    }
LABEL_17:
    v11 = a2[1];
    if (!*((_BYTE *)v11 + 8))
      *((_BYTE *)v11 + 8) = 1;
    *v11 = v10;
    goto LABEL_20;
  }
LABEL_27:
  v16 = std::__throw_bad_variant_access[abi:sn180100]();
  return (uint64_t)_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4FileENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(v16, v17);
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4FileENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[4];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4FileENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4FileENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISI_LNS0_6_TraitE1EEEEEvRSJ_OT_EUlRSR_OT0_E_JRNS0_6__baseILSM_1EJSG_SH_EEERKSZ_EEEDcSR_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  if (*a3)
    ++*(_DWORD *)(v3 + 16);
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4FileENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISI_LNS0_6_TraitE1EEEEEvRSJ_OT_EUlRSR_OT0_E_JRNS0_6__baseILSM_1EJSG_SH_EEERKSZ_EEEDcSR_DpT0_(uint64_t a1, _QWORD *a2, _DWORD **a3)
{
  _DWORD *v3;

  v3 = *a3;
  if (*a3)
    *v3 += 2;
  *a2 = v3;
}

uint64_t WebCore::jsDOMFormDataPrototypeFunction_set2Body(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSDOMFormData *a4)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;
  uint64_t v15;
  WebCore::Blob *v16;
  uint64_t v17;
  int v18;
  WTF::String *v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v25;
  WTF::StringImpl *v26;
  int v27;
  WTF::String *v28;
  int v29;
  WTF::StringImpl *v30;
  WTF *v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  int v34;
  char v35;

  WebCore::valueToUSVString((JSC::JSGlobalObject *)this, *((_QWORD *)a2 + 6), (uint64_t)&v28);
  v8 = v29;
  if (v29)
  {
    v15 = 0;
    goto LABEL_35;
  }
  v9 = *((_QWORD *)a2 + 7);
  v32 = this[7];
  if ((v9 & 0xFFFE000000000002) == 0)
  {
    v10 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
    v11 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
    v12 = (char **)(16 * v10);
    if ((_DWORD)v10)
      v13 = v12 == &WebCore::JSBlob::s_info;
    else
      v13 = 1;
    if (!v13)
    {
      do
      {
        v12 = (char **)v12[2];
        v11 = v12 != 0;
      }
      while (v12 != &WebCore::JSBlob::s_info && v12 != 0);
    }
    if (v11)
    {
      v16 = *(WebCore::Blob **)(v9 + 24);
      if (v16)
      {
        if ((unint64_t)(*((int *)a2 + 8) - 4) >= 0xFFFFFFFFFFFFFFFDLL
          || (v17 = *((_QWORD *)a2 + 8), v17 == 10))
        {
          v26 = 0;
          v27 = 0;
        }
        else
        {
          WebCore::valueToUSVString((JSC::JSGlobalObject *)this, v17, (uint64_t)&v26);
          v18 = v27;
          if (v27)
          {
            v15 = 0;
LABEL_32:
            if (v18 != -1)
              ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A258[v18])(&v32, &v26);
            goto LABEL_34;
          }
          if (v29)
          {
            v25 = std::__throw_bad_variant_access[abi:sn180100]();
            return WebCore::iteratorCreate<WebCore::DOMFormDataIterator>(v25);
          }
        }
        v19 = v28;
        v28 = 0;
        v20 = v26;
        v26 = 0;
        v30 = v20;
        v31 = v19;
        WebCore::createFileEntry((WebCore *)&v32, v19, v16, (const WTF::String *)&v30);
        WebCore::DOMFormData::set((uint64_t)a3, &v31, (unsigned int *)&v32);
        if (v34 != -1)
          ((void (*)(char *, uint64_t *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4FileENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS6_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSI_EEEDcOSJ_DpOT0____fmatrix[v34])(&v35, &v33);
        v34 = -1;
        v22 = v32;
        v32 = 0;
        if (v22)
        {
          if (*(_DWORD *)v22 == 2)
            WTF::StringImpl::destroy(v22, v21);
          else
            *(_DWORD *)v22 -= 2;
        }
        v23 = v30;
        v30 = 0;
        if (v23)
        {
          if (*(_DWORD *)v23 == 2)
          {
            WTF::StringImpl::destroy(v23, v21);
            if (v19)
            {
LABEL_29:
              if (*(_DWORD *)v19 == 2)
                WTF::StringImpl::destroy(v19, v21);
              else
                *(_DWORD *)v19 -= 2;
            }
LABEL_31:
            v18 = v27;
            v15 = 10;
            goto LABEL_32;
          }
          *(_DWORD *)v23 -= 2;
        }
        if (v19)
          goto LABEL_29;
        goto LABEL_31;
      }
    }
  }
  WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v32, 1, "blobValue", 10, "FormData", 9, v7, "set", 4, "Blob", 5);
  v15 = 0;
LABEL_34:
  v8 = v29;
LABEL_35:
  if (v8 != -1)
    ((void (*)(WTF::StringImpl **, WTF::String **))off_1E325A258[v8])(&v32, &v28);
  return v15;
}

unint64_t WebCore::iteratorCreate<WebCore::DOMFormDataIterator>(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char **v13;
  int v14;
  unint64_t v15;
  JSC::JSCell *v16;
  JSC::JSObject *Object;
  uint64_t *v18;
  unint64_t SlowCase;
  uint64_t v20;
  int v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  unint64_t v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  JSC::Structure *v28;
  int v29;
  JSC::JSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  JSC::Structure *v40;
  WTF *v41;
  uint64_t v42;
  uint64_t v43;
  WTF *v44;
  void *v45;
  int v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  WTF::StringImpl *v54[6];
  int v55;
  int v56;
  int v57;
  JSC::Structure *v58;

  v4 = *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28);
  v5 = *(_QWORD *)(v4 + 56);
  v6 = (unint64_t *)(v5 + 40136);
  v7 = *(_QWORD *)(v4 + 3296);
  if (v7)
  {
    v8 = *(_DWORD *)(v7 - 8);
    v9 = ((unint64_t)&WebCore::DOMFormDataIterator::s_info
        + ~((_QWORD)&WebCore::DOMFormDataIterator::s_info << 32)) ^ (((unint64_t)&WebCore::DOMFormDataIterator::s_info
                                                                    + ~((_QWORD)&WebCore::DOMFormDataIterator::s_info << 32)) >> 22);
    v10 = 9 * ((v9 + ~(v9 << 13)) ^ ((v9 + ~(v9 << 13)) >> 8));
    v11 = (v10 ^ (v10 >> 15)) + ~((v10 ^ (v10 >> 15)) << 27);
    v12 = v8 & ((v11 >> 31) ^ v11);
    v13 = *(char ***)(v7 + 16 * v12);
    if (v13 == &WebCore::DOMFormDataIterator::s_info)
    {
LABEL_6:
      v15 = *(_QWORD *)(v7 + 16 * v12 + 8);
      if (v15)
        goto LABEL_32;
    }
    else
    {
      v14 = 1;
      while (v13)
      {
        v12 = ((_DWORD)v12 + v14) & v8;
        v13 = *(char ***)(v7 + 16 * v12);
        ++v14;
        if (v13 == &WebCore::DOMFormDataIterator::s_info)
          goto LABEL_6;
      }
    }
  }
  v16 = *(JSC::JSCell **)(v4 + 696);
  LODWORD(v54[0]) = 23;
  if (((unint64_t)v16 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v16);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)v5);
  }
  v18 = (uint64_t *)(v5 + 38904);
  SlowCase = *v6;
  if (*v6 < *(_QWORD *)(v5 + 40144))
    goto LABEL_11;
  SlowCase = *(_QWORD *)(v5 + 40152);
  if ((SlowCase & 1) == 0)
  {
    v51 = *(_QWORD *)(SlowCase + 8) ^ *(_QWORD *)(v5 + 40160);
    *(_QWORD *)(v5 + 40144) = SlowCase + HIDWORD(v51);
    *(_QWORD *)(v5 + 40152) = SlowCase + (int)v51;
LABEL_11:
    *v6 = SlowCase + 128;
    goto LABEL_12;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_12:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, v5, v4, v16, v54, &WebCore::JSDOMIteratorPrototype<WebCore::JSDOMFormData,WebCore::DOMFormDataIteratorTraits>::s_info, 0, 0);
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v20 = *v18;
  if (*(_QWORD *)(v5 + 38904) < *(_QWORD *)(v5 + 38912))
    goto LABEL_15;
  v20 = *(_QWORD *)(v5 + 38920);
  if ((v20 & 1) == 0)
  {
    v52 = *(_QWORD *)(v20 + 8) ^ *(_QWORD *)(v5 + 38928);
    *(_QWORD *)(v5 + 38912) = v20 + HIDWORD(v52);
    *(_QWORD *)(v5 + 38920) = v20 + (int)v52;
LABEL_15:
    *v18 = v20 + 16;
    goto LABEL_16;
  }
  JSC::sanitizeStackForVM();
  v20 = JSC::LocalAllocator::allocateSlowCase();
LABEL_16:
  *(_DWORD *)v20 = 0;
  v21 = *(_DWORD *)(SlowCase + 8);
  *(_DWORD *)v20 = SlowCase >> 4;
  *(_DWORD *)(v20 + 4) = v21;
  *(_QWORD *)(v20 + 8) = 0;
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v22 = *(WTF::StringImpl **)(*(_QWORD *)(v5 + 41952) + 2000);
  if (v22)
  {
    *(_DWORD *)v22 += 2;
    v54[0] = v22;
    JSC::JSObject::putDirectNativeFunctionWithoutTransition();
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v23);
    else
      *(_DWORD *)v22 -= 2;
  }
  else
  {
    v54[0] = 0;
    JSC::JSObject::putDirectNativeFunctionWithoutTransition();
  }
  v24 = *(_QWORD *)(*(_QWORD *)(v5 + 41952) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v26 = JSC::JSString::create(v5, v54);
  v27 = v54[0];
  v54[0] = 0;
  if (v27)
  {
    if (*(_DWORD *)v27 == 2)
      WTF::StringImpl::destroy(v27, v25);
    else
      *(_DWORD *)v27 -= 2;
  }
  v28 = (JSC::Structure *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE));
  v57 = *(_DWORD *)v20;
  v58 = v28;
  v29 = JSC::Structure::outOfLineCapacity(v28);
  v55 = 0;
  v56 = v29;
  v54[0] = (WTF::StringImpl *)&v56;
  v54[1] = (WTF::StringImpl *)v20;
  v54[2] = (WTF::StringImpl *)v5;
  v54[3] = (WTF::StringImpl *)&v57;
  v54[4] = (WTF::StringImpl *)&v58;
  v54[5] = (WTF::StringImpl *)&v55;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v28, (JSC::VM *)v5, v24, 6, (uint64_t)v54);
  if ((*(_BYTE *)((16 * *(unsigned int *)v20) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(v20, v5, v55, v26);
  *((_DWORD *)v28 + 4) |= 0x10u;
  LODWORD(v54[0]) = 23;
  if ((v20 & 0xFFFE000000000002) == 0)
  {
    v30 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v20);
    if (v30)
      JSC::JSObject::didBecomePrototype(v30, (JSC::VM *)v5);
  }
  v31 = *v6;
  if (*v6 >= *(_QWORD *)(v5 + 40144))
  {
    v31 = *(_QWORD *)(v5 + 40152);
    if ((v31 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v31 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_29;
    }
    v53 = *(_QWORD *)(v31 + 8) ^ *(_QWORD *)(v5 + 40160);
    *(_QWORD *)(v5 + 40144) = v31 + HIDWORD(v53);
    *(_QWORD *)(v5 + 40152) = v31 + (int)v53;
  }
  *v6 = v31 + 128;
LABEL_29:
  *(_DWORD *)v31 = 0;
  MEMORY[0x19AEA4278](v31, v5, v4, v20, v54, &WebCore::DOMFormDataIterator::s_info, 0, 0, 0);
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v15 = WebCore::cacheDOMStructure((JSCell *)v4, v31, (uint64_t)&WebCore::DOMFormDataIterator::s_info);
LABEL_32:
  v32 = *(_QWORD *)(v5 + 41456);
  v33 = *(_QWORD *)(v32 + 23536);
  v34 = *(_QWORD **)(v33 + 4128);
  if (v34)
    goto LABEL_52;
  v35 = *(_QWORD *)(v32 + 22648);
  if (__ldaxr((unsigned __int8 *)v35))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v35))
  {
    goto LABEL_37;
  }
  MEMORY[0x19AEA534C](v35);
LABEL_37:
  v37 = *(_QWORD *)(v35 + 2824);
  if (!*(_QWORD *)(v37 + 4128))
  {
    v38 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)v54, "IsoSpace T");
    v58 = 0;
    MEMORY[0x19AEA3204](v38, v54, v5 + 192, v5 + 1872, 56, 8, &v58);
    v40 = v58;
    v58 = 0;
    if (v40)
      (*(void (**)(JSC::Structure *))(*(_QWORD *)v40 + 8))(v40);
    v41 = v54[0];
    v54[0] = 0;
    if (v41)
    {
      if (*(_DWORD *)v41 == 1)
        WTF::fastFree(v41, v39);
      else
        --*(_DWORD *)v41;
    }
    v42 = *(_QWORD *)(v37 + 4128);
    *(_QWORD *)(v37 + 4128) = v38;
    if (v42)
      (*(void (**)(uint64_t))(*(_QWORD *)v42 + 8))(v42);
  }
  v34 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v43 = *(_QWORD *)(v33 + 4128);
  *(_QWORD *)(v33 + 4128) = v34;
  if (v43)
  {
    v44 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v44, v45);
  }
  v46 = __ldxr((unsigned __int8 *)v35);
  if (v46 != 1)
  {
    __clrex();
    goto LABEL_51;
  }
  if (__stlxr(0, (unsigned __int8 *)v35))
LABEL_51:
    WTF::Lock::unlockSlow((WTF::Lock *)v35);
LABEL_52:
  v47 = v34[3];
  if (v47 < v34[4])
  {
LABEL_53:
    v34[3] = v47 + 64;
    goto LABEL_54;
  }
  v47 = v34[5];
  if ((v47 & 1) == 0)
  {
    v50 = *(_QWORD *)(v47 + 8) ^ v34[6];
    v34[4] = v47 + HIDWORD(v50);
    v34[5] = v47 + (int)v50;
    goto LABEL_53;
  }
  JSC::sanitizeStackForVM();
  v47 = JSC::LocalAllocator::allocateSlowCase();
LABEL_54:
  *(_DWORD *)v47 = 0;
  WebCore::JSDOMObject::JSDOMObject(v47, v15);
  v48 = *(_QWORD *)(a1 + 24);
  WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                    * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                    + 0x28));
  ++*(_DWORD *)(v48 + 16);
  *(_QWORD *)(v47 + 24) = v48;
  *(_QWORD *)(v47 + 32) = 0;
  *(_BYTE *)(v47 + 40) = 1;
  *(_DWORD *)(v47 + 48) = a2;
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  return v47;
}

_DWORD **WebCore::JSDOMIteratorPrototype<WebCore::JSDOMFormData,WebCore::DOMFormDataIteratorTraits>::next(JSC *this, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  _DWORD **IteratorResultObject;
  WTF::StringImpl *v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  WTF::StringImpl **v16;
  _DWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  JSC::VM *v25;
  void *v26;
  uint64_t *v27;
  JSValue v28;
  WTF::StringImpl *v29;
  JSValue v30;
  unsigned __int8 *v32;
  unsigned int v33;
  unsigned __int8 *v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  _QWORD *v38;
  WebCore *v39;
  JSC::JSGlobalObject *v40;
  JSC::CallFrame *v41;
  WTF::StringImpl *v42;
  uint64_t v43;
  unsigned int v44;
  unsigned __int8 v45;
  uint64_t *v46;
  int v47;
  WTF::StringImpl **v48;
  char v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  WTF *v53;
  uint64_t *v54;
  uint64_t *v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;

  v3 = *(_QWORD *)(a2 + 40);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (_DWORD **)JSC::throwTypeError();
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDOMIteratorBase<WebCore::JSDOMFormData,WebCore::DOMFormDataIteratorTraits>::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDOMIteratorBase<WebCore::JSDOMFormData,WebCore::DOMFormDataIteratorTraits>::s_info
         && v6 != 0);
  }
  if (!v5)
    return (_DWORD **)JSC::throwTypeError();
  if (!*(_BYTE *)(v3 + 40))
    goto LABEL_59;
  IteratorResultObject = (_DWORD **)(v3 + 24);
  WebCore::DOMFormData::Iterator::next((_QWORD *)(v3 + 24), (uint64_t)&v42);
  v12 = v45;
  if (!v45)
  {
    if (!*(_BYTE *)(v3 + 40))
      goto LABEL_59;
    v17 = *IteratorResultObject;
    *IteratorResultObject = 0;
    if (v17)
    {
      if (v17[4] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v17 + 16))(v17);
      else
        --v17[4];
    }
    *(_BYTE *)(v3 + 40) = 0;
    goto LABEL_52;
  }
  v13 = *(_DWORD *)(v3 + 48);
  if (v13 == 2)
  {
    v20 = *(uint64_t **)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28);
    v21 = *((_QWORD *)this + 7);
    if (!v42 || (v22 = *((_DWORD *)v42 + 1)) == 0)
    {
      v23 = *(_QWORD *)(v21 + 41968);
      goto LABEL_39;
    }
    if (v22 != 1)
      goto LABEL_36;
    v34 = (unsigned __int8 *)*((_QWORD *)v42 + 1);
    if ((*((_BYTE *)v42 + 16) & 4) != 0)
    {
      v35 = *v34;
    }
    else
    {
      v37 = *(unsigned __int16 *)v34;
      if (v37 > 0xFF)
      {
LABEL_36:
        v23 = *(_QWORD *)(v21 + 64760);
        if (!v23 || v42 != *(WTF::StringImpl **)(v23 + 8))
          v23 = JSC::jsStringWithCacheSlowCase();
LABEL_39:
        if (v44 == -1)
          v24 = -1;
        else
          v24 = v44;
        LOBYTE(v48) = 0;
        v49 = 0;
        v50 = v24;
        v51 = &v50;
        v52 = (uint64_t)&v48;
        v53 = this;
        v54 = v20;
        v55 = &v43;
        _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_4FileEEENS_12IDLUSVStringEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSH_12RawPtrTraitsIS5_EENSH_21DefaultRefDerefTraitsIS5_EEEENSH_6StringEEEEEUlTyvE_JNSF_17integral_constantIlLl0EEENST_IlLl1EEEEEET_SW_((uint64_t)&v46, &v51);
        if (v49)
        {
          LOBYTE(v51) = 0;
          v54 = 0;
          v56 = 0u;
          v57 = 0u;
          v58 = 0u;
          v53 = (WTF *)&v55;
          v55 = (uint64_t *)v23;
          *(_QWORD *)&v56 = v48;
          v59 = 0;
          v52 = 0x800000002;
          v25 = (JSC::VM *)v20[7];
          v46 = (uint64_t *)&v55;
          v47 = 2;
          if (*((_DWORD *)v25 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v25) & 1) != 0)
            v16 = 0;
          else
            v16 = (WTF::StringImpl **)JSC::constructArray();
          v27 = v54;
          if (v54)
          {
            v46 = &v52;
            v38 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(v54, (uint64_t *)&v46);
            WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v27, v38);
          }
          if (v53 != (WTF *)&v55 && v53)
            WTF::fastFree(v53, v26);
          goto LABEL_51;
        }
        goto LABEL_79;
      }
      v35 = v37;
    }
    v23 = *(_QWORD *)(v21 + 8 * v35 + 42216);
    goto LABEL_39;
  }
  if (v13 != 1)
  {
    if (v13)
    {
      v16 = 0;
    }
    else
    {
      v14 = *((_QWORD *)this + 7);
      if (v42 && (v15 = *((_DWORD *)v42 + 1)) != 0)
      {
        if (v15 != 1)
        {
LABEL_21:
          v16 = *(WTF::StringImpl ***)(v14 + 64760);
          if (!v16 || v42 != v16[1])
            v16 = (WTF::StringImpl **)JSC::jsStringWithCacheSlowCase();
          goto LABEL_51;
        }
        v32 = (unsigned __int8 *)*((_QWORD *)v42 + 1);
        if ((*((_BYTE *)v42 + 16) & 4) != 0)
        {
          v33 = *v32;
        }
        else
        {
          v36 = *(unsigned __int16 *)v32;
          if (v36 > 0xFF)
            goto LABEL_21;
          v33 = v36;
        }
        v16 = *(WTF::StringImpl ***)(v14 + 8 * v33 + 42216);
      }
      else
      {
        v16 = *(WTF::StringImpl ***)(v14 + 41968);
      }
    }
LABEL_51:
    v28.super.isa = 0;
    IteratorResultObject = (_DWORD **)JSC::createIteratorResultObject(this, (JSC::JSGlobalObject *)v16, v28);
LABEL_52:
    if (!v45)
      goto LABEL_58;
    if (v44 != -1)
      ((void (*)(uint64_t **, uint64_t *))off_1E325BEF0[v44])(&v51, &v43);
    v44 = -1;
    v29 = v42;
    v42 = 0;
    if (!v29)
    {
LABEL_58:
      if (v12)
        return IteratorResultObject;
      goto LABEL_59;
    }
    if (*(_DWORD *)v29 != 2)
    {
      *(_DWORD *)v29 -= 2;
      goto LABEL_58;
    }
    WTF::StringImpl::destroy(v29, v11);
    if (v12)
      return IteratorResultObject;
LABEL_59:
    v30.super.isa = (Class)1;
    return (_DWORD **)JSC::createIteratorResultObject(this, (JSC::JSGlobalObject *)0xA, v30);
  }
  v18 = *(uint64_t **)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28);
  v19 = v44;
  if (v44 == -1)
    v19 = -1;
  v50 = v19;
  LOBYTE(v48) = 0;
  v49 = 0;
  v51 = &v50;
  v52 = (uint64_t)&v48;
  v53 = this;
  v54 = v18;
  v55 = &v43;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_4FileEEENS_12IDLUSVStringEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSH_12RawPtrTraitsIS5_EENSH_21DefaultRefDerefTraitsIS5_EEEENSH_6StringEEEEEUlTyvE_JNSF_17integral_constantIlLl0EEENST_IlLl1EEEEEET_SW_((uint64_t)&v46, &v51);
  if (v49)
  {
    v16 = v48;
    goto LABEL_51;
  }
LABEL_79:
  v39 = (WebCore *)std::__throw_bad_optional_access[abi:sn180100]();
  return (_DWORD **)WebCore::jsDOMImplementationPrototypeFunction_createDocumentType(v39, v40, v41);
}

_BYTE *WebCore::jsDOMImplementationPrototypeFunction_createDocumentType(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  _DWORD *v8;
  WebCore::DOMImplementation *v9;
  int32x4_t v10;
  int v11;
  uint64_t v12;
  JSC::VM *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  JSC::VM *v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  JSC::VM *v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  uint64_t v31;
  uint64_t v32;
  JSValue v35;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  int v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  JSValue v42;
  WebCore *v43;
  JSC::JSGlobalObject *v44;
  JSC::CallFrame *v45;
  JSC::VM *v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  int v50[2];
  WTF::StringImpl *v51;
  unsigned int v52;
  uint64_t v53;
  int v54;
  WTF::StringImpl *v55;
  int v56;
  WTF::StringImpl *v57;
  int v58;
  WTF::StringImpl *v59;
  WTF::StringImpl *v60;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v46 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSDOMImplementation *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v46, "DOMImplementation", "createDocumentType");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v35.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
    return (_BYTE *)JSC::VM::throwException(v5, this, v35);
  }
  v8 = (_DWORD *)v6;
  v9 = *(WebCore::DOMImplementation **)(v6 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v57);
  v11 = v58;
  if (v58)
  {
    v25 = 0;
LABEL_35:
    if (v11 != -1)
      ((void (*)(int *, WTF::StringImpl **))off_1E325A6F0[v11])(v50, &v57);
    return (_BYTE *)v25;
  }
  v12 = *((_QWORD *)a2 + 7);
  *(_QWORD *)v50 = v12;
  v13 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v12 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v12 + 5) == 2)
  {
    v14 = *(_QWORD *)(v12 + 8);
    if ((v14 & 1) != 0)
    {
      v14 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
      if (!v14)
        goto LABEL_9;
    }
    else if (!v14)
    {
LABEL_9:
      v59 = (WTF::StringImpl *)v14;
      goto LABEL_10;
    }
    *(_DWORD *)v14 += 2;
    goto LABEL_9;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v50, this);
LABEL_10:
  if (*((_DWORD *)v13 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v13);
    v15 = v59;
    if (hasExceptionsAfterHandlingTraps)
    {
      v56 = 1;
      v59 = 0;
      if (v15)
      {
        if (*(_DWORD *)v15 == 2)
          WTF::StringImpl::destroy(v15, v37);
        else
          *(_DWORD *)v15 -= 2;
      }
      v25 = 0;
      v32 = 1;
      goto LABEL_34;
    }
  }
  else
  {
    v15 = v59;
  }
  v55 = v15;
  v56 = 0;
  v16 = *((_QWORD *)a2 + 8);
  *(_QWORD *)v50 = v16;
  v17 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v16 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v16 + 5) == 2)
  {
    v18 = *(_QWORD *)(v16 + 8);
    if ((v18 & 1) != 0)
    {
      v18 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v16, this);
      if (!v18)
        goto LABEL_17;
    }
    else if (!v18)
    {
LABEL_17:
      v59 = (WTF::StringImpl *)v18;
      goto LABEL_18;
    }
    *(_DWORD *)v18 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v50, this);
LABEL_18:
  if (*((_DWORD *)v17 + 20))
  {
    v39 = JSC::VM::hasExceptionsAfterHandlingTraps(v17);
    v19 = v59;
    if (v39)
    {
      v54 = 1;
      v59 = 0;
      if (v19)
      {
        if (*(_DWORD *)v19 == 2)
          WTF::StringImpl::destroy(v19, v38);
        else
          *(_DWORD *)v19 -= 2;
      }
      v25 = 0;
      v31 = 1;
      goto LABEL_33;
    }
  }
  else
  {
    v19 = v59;
  }
  v54 = 0;
  if (!v58)
  {
    v20 = *(JSC::VM **)(16 * (*v8 & 0xFFFFFFFE) + 0x28);
    v21 = v57;
    v57 = 0;
    v48 = v15;
    v49 = v21;
    v55 = 0;
    v53 = 0;
    v47 = v19;
    WebCore::DOMImplementation::createDocumentType(v9, (const WTF::AtomString *)&v49, (const WTF::String *)&v48, (const WTF::String *)&v47, (uint64_t)v50, v10);
    v22 = v52;
    if (!v52)
    {
      v23 = *(_QWORD *)v50;
      *(_QWORD *)v50 = 0;
      v59 = (WTF::StringImpl *)v23;
      v25 = WebCore::toJSNewlyCreated((int)this, v20, (uint64_t *)&v59);
      v26 = (uint64_t)v59;
      v59 = 0;
      if (v26)
      {
        if (*(_DWORD *)(v26 + 24) == 2)
        {
          if ((*(_WORD *)(v26 + 30) & 0x400) == 0)
            WebCore::Node::removedLastRef((WebCore::Node *)v26, v24);
        }
        else
        {
          *(_DWORD *)(v26 + 24) -= 2;
        }
      }
LABEL_23:
      ((void (*)(WTF::StringImpl **, int *))off_1E325BFD8[v22])(&v59, v50);
      v52 = -1;
      v28 = v47;
      v47 = 0;
      if (v28)
      {
        if (*(_DWORD *)v28 == 2)
          WTF::StringImpl::destroy(v28, v27);
        else
          *(_DWORD *)v28 -= 2;
      }
      v29 = v48;
      v48 = 0;
      if (v29)
      {
        if (*(_DWORD *)v29 == 2)
          WTF::StringImpl::destroy(v29, v27);
        else
          *(_DWORD *)v29 -= 2;
      }
      v30 = v49;
      v49 = 0;
      if (v30)
      {
        if (*(_DWORD *)v30 == 2)
          WTF::StringImpl::destroy(v30, v27);
        else
          *(_DWORD *)v30 -= 2;
      }
      v31 = 0;
LABEL_33:
      ((void (*)(int *, uint64_t *))off_1E325A258[v31])(v50, &v53);
      v32 = 0;
LABEL_34:
      ((void (*)(int *, WTF::StringImpl **))off_1E325A258[v32])(v50, &v55);
      v11 = v58;
      goto LABEL_35;
    }
    if (v52 == 1)
    {
      v40 = (WTF::StringImpl *)LOBYTE(v50[0]);
      LOBYTE(v59) = v50[0];
      v41 = v51;
      v51 = 0;
      v60 = v41;
      if (!*((_QWORD *)v5 + 2))
      {
        v42.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v50[0]), (JSC::JSGlobalObject *)&v60);
        JSC::VM::throwException(v5, this, v42);
        v41 = v60;
      }
      v60 = 0;
      if (v41)
      {
        if (*(_DWORD *)v41 == 2)
          WTF::StringImpl::destroy(v41, v40);
        else
          *(_DWORD *)v41 -= 2;
      }
      v25 = 0;
      goto LABEL_23;
    }
  }
  v43 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDOMImplementationPrototypeFunction_createDocument(v43, v44, v45);
}

_BYTE *WebCore::jsDOMImplementationPrototypeFunction_createDocument(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  _DWORD *v9;
  WebCore::DOMImplementation *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  WebCore::DocumentType *v16;
  uint64_t v17;
  _BOOL4 v18;
  char **v19;
  BOOL v20;
  JSC::VM *v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  void *v25;
  JSC::JSGlobalObject *v26;
  JSC::JSGlobalObject *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  JSValue v32;
  WTF::StringImpl *v33;
  JSC::VM *v34;
  WTF::StringImpl *v35;
  WTF::StringImpl *v36;
  JSC::JSGlobalObject *v37;
  WTF::StringImpl *v38;
  int v39;
  WTF::StringImpl *v40;
  int v41;
  WTF::StringImpl *v42;
  int v43;
  JSC::VM *v44;
  JSC::JSGlobalObject *v45;
  WTF::StringImpl *v46;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v34 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSDOMImplementation *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v34, "DOMImplementation", "createDocument");
  v44 = v5;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v32.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
    return (_BYTE *)JSC::VM::throwException(v5, this, v32);
  }
  v9 = (_DWORD *)v6;
  v10 = *(WebCore::DOMImplementation **)(v6 + 24);
  if ((*((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v42 = 0;
    v43 = 0;
  }
  else
  {
    WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v37);
    LOBYTE(v42) = 0;
    v43 = -1;
    LODWORD(v11) = (_DWORD)v38;
    if ((_DWORD)v38 == -1)
      return 0;
    ((void (*)(JSC::JSGlobalObject **, WTF::StringImpl **, JSC::JSGlobalObject **))off_1E325BFE8[v38])(&v45, &v42, &v37);
    v43 = v11;
    if ((_DWORD)v38 != -1)
    {
      ((void (*)(JSC::JSGlobalObject **, JSC::JSGlobalObject **))off_1E325A6F0[v38])(&v45, &v37);
      LODWORD(v11) = v43;
    }
    if ((_DWORD)v11)
      goto LABEL_72;
  }
  v11 = *((_QWORD *)a2 + 7);
  if (v11 == 2)
  {
    v12 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v12 += 2;
    v40 = v12;
    v41 = 0;
  }
  else
  {
    WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 7), (uint64_t)&v37);
    LOBYTE(v40) = 0;
    v41 = -1;
    v14 = (int)v38;
    if ((_DWORD)v38 == -1)
    {
      v13 = 0;
LABEL_51:
      LODWORD(v11) = v43;
      goto LABEL_52;
    }
    ((void (*)(JSC::JSGlobalObject **, WTF::StringImpl **, JSC::JSGlobalObject **))off_1E325BFE8[v38])(&v45, &v40, &v37);
    v41 = v14;
    if ((_DWORD)v38 != -1)
    {
      ((void (*)(JSC::JSGlobalObject **, JSC::JSGlobalObject **))off_1E325A6F0[v38])(&v45, &v37);
      v14 = v41;
    }
    if (v14)
    {
      v13 = 0;
LABEL_49:
      if (v14 != -1)
        ((void (*)(JSC::JSGlobalObject **, WTF::StringImpl **))off_1E325A6F0[v14])(&v37, &v40);
      goto LABEL_51;
    }
  }
  if ((unint64_t)(*((int *)a2 + 8) - 4) > 0xFFFFFFFFFFFFFFFCLL)
  {
    v16 = 0;
  }
  else
  {
    v15 = *((_QWORD *)a2 + 8);
    if ((v15 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v16 = 0;
    }
    else
    {
      v37 = (JSC::JSGlobalObject *)*((_QWORD *)this + 7);
      if ((v15 & 0xFFFE000000000002) != 0)
        goto LABEL_32;
      v17 = *(unsigned int *)(16 * (*(_DWORD *)v15 & 0xFFFFFFFE) + 0x4C);
      v18 = *(_DWORD *)(16 * (*(_DWORD *)v15 & 0xFFFFFFFE) + 0x4C) != 0;
      v19 = (char **)(16 * v17);
      if ((_DWORD)v17)
        v20 = v19 == &WebCore::JSDocumentType::s_info;
      else
        v20 = 1;
      if (!v20)
      {
        do
        {
          v19 = (char **)v19[2];
          v18 = v19 != 0;
        }
        while (v19 != &WebCore::JSDocumentType::s_info && v19 != 0);
      }
      if (!v18 || (v16 = *(WebCore::DocumentType **)(v15 + 24)) == 0)
      {
LABEL_32:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v37, 2, "doctype", 8, "DOMImplementation", 18, v8, "createDocument", 15, "DocumentType", 13);
        v13 = 0;
LABEL_48:
        v14 = v41;
        goto LABEL_49;
      }
    }
  }
  if (!v43)
  {
    v22 = *(JSC::VM **)(16 * (*v9 & 0xFFFFFFFE) + 0x28);
    v23 = v42;
    v42 = 0;
    v24 = v40;
    v40 = 0;
    v35 = v24;
    v36 = v23;
    WebCore::DOMImplementation::createDocument(v10, &v36, (const WTF::AtomString *)&v35, v16, (uint64_t)&v37);
    if (!v39)
    {
      v26 = v37;
      v37 = 0;
      v45 = v26;
      v13 = WebCore::toJSNewlyCreated((uint64_t)this, v22, &v45);
      v27 = v45;
      v45 = 0;
      if (v27)
      {
        if (*((_DWORD *)v27 + 6) == 2)
        {
          if ((*((_WORD *)v27 + 15) & 0x400) == 0)
            WebCore::Node::removedLastRef(v27, v25);
        }
        else
        {
          *((_DWORD *)v27 + 6) -= 2;
        }
      }
LABEL_40:
      if (v39 != -1)
        ((void (*)(JSC::JSGlobalObject **, JSC::JSGlobalObject **))off_1E325BFF8[v39])(&v45, &v37);
      v39 = -1;
      v28 = v35;
      v35 = 0;
      if (v28)
      {
        if (*(_DWORD *)v28 == 2)
          WTF::StringImpl::destroy(v28, (WTF::StringImpl *)v25);
        else
          *(_DWORD *)v28 -= 2;
      }
      v29 = v36;
      v36 = 0;
      if (v29)
      {
        if (*(_DWORD *)v29 == 2)
          WTF::StringImpl::destroy(v29, (WTF::StringImpl *)v25);
        else
          *(_DWORD *)v29 -= 2;
      }
      goto LABEL_48;
    }
    if (v39 == 1)
    {
      LOBYTE(v45) = (_BYTE)v37;
      v33 = v38;
      v38 = 0;
      v46 = v33;
      if (!*((_QWORD *)v5 + 2))
      {
        WebCore::propagateExceptionSlowPath(this, &v44, (unsigned __int8 *)&v45);
        v33 = v46;
      }
      v46 = 0;
      if (v33)
      {
        if (*(_DWORD *)v33 == 2)
          WTF::StringImpl::destroy(v33, (WTF::StringImpl *)v25);
        else
          *(_DWORD *)v33 -= 2;
      }
      v13 = 0;
      goto LABEL_40;
    }
  }
  std::__throw_bad_variant_access[abi:sn180100]();
LABEL_72:
  v13 = 0;
LABEL_52:
  if ((_DWORD)v11 != -1)
    ((void (*)(JSC::JSGlobalObject **, WTF::StringImpl **))off_1E325A6F0[v11])(&v37, &v42);
  return (_BYTE *)v13;
}

uint64_t WebCore::jsDOMImplementationPrototypeFunction_hasFeature(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v4;
  uint64_t v6;

  v4 = *((_QWORD *)a2 + 5);
  v6 = *((_QWORD *)this + 7);
  if (JSC::jsDynamicCast<WebCore::JSDOMImplementation *>(v4))
    return 7;
  else
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v6, "DOMImplementation", "hasFeature");
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore12DocumentTypeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore12DocumentTypeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF10AtomStringEN7WebCore25ConversionResultExceptionEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISC_LNS0_6_TraitE1EEEEEvRSD_OT_EUlRSJ_OT0_E_JRNS0_6__baseILSG_1EJS9_SB_EEEOSR_EEEDcSJ_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11XMLDocumentENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11XMLDocumentENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_BYTE *WebCore::IDLOperation<WebCore::JSDOMImplementation>::call<&WebCore::jsDOMImplementationPrototypeFunction_createHTMLDocumentBody,(WebCore::CastedThisErrorBehavior)0>(WebCore *a1, unint64_t *a2)
{
  JSC::CallFrame *v4;
  WebCore::JSDOMImplementation *v5;
  uint64_t v7;

  v7 = *((_QWORD *)a1 + 7);
  v4 = (JSC::CallFrame *)JSC::jsDynamicCast<WebCore::JSDOMImplementation *>(a2[5]);
  if (v4)
    return (_BYTE *)WebCore::jsDOMImplementationPrototypeFunction_createHTMLDocumentBody(a1, (JSC::JSGlobalObject *)a2, v4, v5);
  else
    return WebCore::throwThisTypeError((int)a1, (int)&v7, "DOMImplementation", "createHTMLDocument");
}

unint64_t WebCore::jsDOMImplementationPrototypeFunction_createHTMLDocumentBody(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSDOMImplementation *a4)
{
  uint64_t v6;
  int v7;
  WTF::StringImpl *v8;
  JSC::VM *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  int v17;

  v6 = *((_QWORD *)a3 + 3);
  if (*((_DWORD *)a2 + 8) == 1 || *((_QWORD *)a2 + 6) == 10)
  {
    v8 = 0;
    v17 = 0;
  }
  else
  {
    WebCore::Converter<WebCore::IDLDOMString>::convert(this, *((_QWORD *)a2 + 6), (uint64_t)&v16);
    v7 = v17;
    if (v17)
    {
      v10 = 0;
      goto LABEL_9;
    }
    v8 = v16;
  }
  v9 = *(JSC::VM **)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28);
  v16 = 0;
  v14 = v8;
  WebCore::DOMImplementation::createHTMLDocument(v6, (_DWORD **)&v14, &v15);
  v10 = WebCore::toJSNewlyCreated((uint64_t)this, v9, &v15);
  WTF::Ref<WebCore::HTMLDocument,WTF::RawPtrTraits<WebCore::HTMLDocument>,WTF::DefaultRefDerefTraits<WebCore::HTMLDocument>>::~Ref(&v15);
  v12 = v14;
  v14 = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v11);
    else
      *(_DWORD *)v12 -= 2;
  }
  v7 = v17;
LABEL_9:
  if (v7 != -1)
    ((void (*)(uint64_t *, WTF::StringImpl **))off_1E325A258[v7])(&v15, &v16);
  return v10;
}

_QWORD *WTF::Ref<WebCore::HTMLDocument,WTF::RawPtrTraits<WebCore::HTMLDocument>,WTF::DefaultRefDerefTraits<WebCore::HTMLDocument>>::~Ref(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;

  v1 = a1;
  v2 = *a1;
  *v1 = 0;
  if (v2)
  {
    v4 = v1;
    if (*(_DWORD *)(v2 + 24) == 2)
    {
      if ((*(_WORD *)(v2 + 30) & 0x400) != 0)
        return v1;
      WebCore::Node::removedLastRef((WebCore::Node *)v2);
    }
    else
    {
      *(_DWORD *)(v2 + 24) -= 2;
    }
    return v4;
  }
  return v1;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringENS8_6VectorIdLm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSF_1EJS9_SD_EEEEEEDcSH_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringENS8_6VectorIdLm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSF_1EJS9_SD_EEEEEEDcSH_DpT0_(uint64_t a1, WTF **a2)
{
  WTF *result;

  result = *a2;
  if (*a2)
  {
    *a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6StringENS8_6VectorIdLm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISE_LNS0_6_TraitE1EEEEEvRSF_OT_EUlRSL_OT0_E_JRNS0_6__baseILSI_1EJS9_SD_EEEOST_EEEDcSL_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6StringENS8_6VectorIdLm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISE_LNS0_6_TraitE1EEEEEvRSF_OT_EUlRSL_OT0_E_JRNS0_6__baseILSI_1EJS9_SD_EEEOST_EEEDcSL_DpT0_(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  v3 = *a3;
  *a3 = 0;
  *(_QWORD *)a2 = v3;
  LODWORD(v3) = *((_DWORD *)a3 + 2);
  *((_DWORD *)a3 + 2) = 0;
  *(_DWORD *)(a2 + 8) = v3;
  LODWORD(v3) = *((_DWORD *)a3 + 3);
  *((_DWORD *)a3 + 3) = 0;
  *(_DWORD *)(a2 + 12) = v3;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_8optionalINS_7variantIJN3WTF6StringENSA_6VectorIdLm0ENSA_15CrashOnOverflowELm16ENSA_10FastMallocEEEEEEEEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSL_1EJSH_SJ_EEEEEEDcSN_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  if (*(_BYTE *)(a2 + 24))
  {
    v3 = *(unsigned int *)(a2 + 16);
    if ((_DWORD)v3 != -1)
      result = ((uint64_t (*)(char *, uint64_t))off_1E325C008[v3])(&v5, a2);
    *(_DWORD *)(a2 + 16) = -1;
  }
  return result;
}

uint64_t WebCore::jsDOMMatrixConstructorFunction_fromMatrix(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE __dst[280];
  unsigned __int8 v8[16];
  int v9;
  uint64_t v10;
  char v11;
  _BYTE v12[8];
  _BYTE v13[280];
  int v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v10 = *((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
    v4 = 10;
  else
    v4 = *((_QWORD *)a2 + 6);
  WebCore::convertDictionary<WebCore::DOMMatrixInit>((uint64_t)v12, this, (JSC::JSCell *)v4);
  if (v14)
    return 0;
  memcpy(__dst, v13, sizeof(__dst));
  WebCore::DOMMatrixReadOnly::fromMatrixHelper<WebCore::DOMMatrix>((uint64_t)__dst, (uint64_t)v8);
  v5 = WebCore::toJSNewlyCreated<WebCore::IDLInterface<WebCore::DOMMatrix>,WebCore::ExceptionOr<WTF::Ref<WebCore::DOMMatrix,WTF::RawPtrTraits<WebCore::DOMMatrix>,WTF::DefaultRefDerefTraits<WebCore::DOMMatrix>>>>(this, this, (WebCore::JSDOMGlobalObject *)&v10, v8);
  if (v9 != -1)
    ((void (*)(char *, unsigned __int8 *))off_1E325C028[v9])(&v11, v8);
  return v5;
}

uint64_t WebCore::jsDOMMatrixConstructorFunction_fromFloat32Array(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)();
  uint64_t v16;
  uint64_t v17;
  JSC::VM *v19;
  JSValue v20;
  unsigned __int8 v21[16];
  int v22;
  uint64_t v23;
  int v24;
  JSC::VM *v25;
  JSC::VM *v26;
  char v27;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v9;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v20);
  }
  v10 = *((_QWORD *)a2 + 6);
  v26 = v9;
  if ((v10 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v10 + 5) == 46)
  {
    JSC::JSGenericTypedArrayView<JSC::Float32Adaptor>::possiblySharedTypedImpl(v10, v21);
    v11 = *(_DWORD **)v21;
    if (*(_QWORD *)v21)
    {
      v12 = *(_QWORD *)(*(_QWORD *)v21 + 32);
      if (v12
        && (v13 = *(_QWORD *)(v12 + 16)) != 0
        && ((v14 = *(_QWORD *)(MEMORY[0x1E0CC10F8] + 56)) == 0
         || !*(_BYTE *)(MEMORY[0x1E0CC10F8] + 34) && *MEMORY[0x1E0CC10F0]
         || (v13 & 0x3FFFFFFFFLL) + v14)
        && (*(_QWORD *)(v12 + 32)
          ? (v15 = WTF::RefPtr<JSC::SharedArrayBufferContents,WTF::RawPtrTraits<JSC::SharedArrayBufferContents>,WTF::DefaultRefDerefTraits<JSC::SharedArrayBufferContents>>::unspecifiedBoolTypeInstance)
          : (v15 = 0),
            v15))
      {
        *(_QWORD *)v21 = 0;
      }
      else if ((*(_BYTE *)(*(_QWORD *)v21 + 6) & 3) == 0)
      {
        v24 = 0;
        v23 = 0;
        v26 = *(JSC::VM **)v21;
        WebCore::DOMMatrix::fromFloat32Array((uint64_t)&v26, (uint64_t)v21);
        v16 = WebCore::toJSNewlyCreated<WebCore::IDLInterface<WebCore::DOMMatrix>,WebCore::ExceptionOr<WTF::Ref<WebCore::DOMMatrix,WTF::RawPtrTraits<WebCore::DOMMatrix>,WTF::DefaultRefDerefTraits<WebCore::DOMMatrix>>>>(this, this, (WebCore::JSDOMGlobalObject *)&v25, v21);
        if (v22 != -1)
          ((void (*)(char *, unsigned __int8 *))off_1E325C028[v22])(&v27, v21);
        v22 = -1;
        v19 = v26;
        v26 = 0;
        if (v19)
        {
          if (*(_DWORD *)v19 == 1)
            JSC::ArrayBufferView::operator delete();
          else
            --*(_DWORD *)v19;
        }
        v17 = 0;
        goto LABEL_19;
      }
      if (*v11 == 1)
        JSC::ArrayBufferView::operator delete();
      else
        --*v11;
    }
  }
  WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v26, 0, "array32", 8, "DOMMatrix", 10, a8, "fromFloat32Array", 17, "Float32Array", 13);
  v16 = 0;
  v17 = 1;
  v24 = 1;
LABEL_19:
  ((void (*)(unsigned __int8 *, uint64_t *))off_1E325C0C0[v17])(v21, &v23);
  return v16;
}

uint64_t WebCore::jsDOMMatrixConstructorFunction_fromFloat64Array(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  JSC::JSArrayBufferView *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)();
  uint64_t v15;
  uint64_t v16;
  JSC::VM *v18;
  JSValue v19;
  unsigned __int8 v20[16];
  int v21;
  uint64_t v22;
  int v23;
  JSC::VM *v24;
  JSC::VM *v25;
  char v26;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v24 = v9;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v19);
  }
  v10 = (JSC::JSArrayBufferView *)*((_QWORD *)a2 + 6);
  v25 = v9;
  if (((unint64_t)v10 & 0xFFFE000000000002) == 0 && *((_BYTE *)v10 + 5) == 47)
  {
    JSC::JSGenericTypedArrayView<JSC::Float64Adaptor>::possiblySharedTypedImpl(v20, v10);
    if (*(_QWORD *)v20)
    {
      v11 = *(_QWORD *)(*(_QWORD *)v20 + 32);
      if (!v11
        || (v12 = *(_QWORD *)(v11 + 16)) == 0
        || (v13 = *(_QWORD *)(MEMORY[0x1E0CC10F8] + 56)) != 0
        && (*(_BYTE *)(MEMORY[0x1E0CC10F8] + 34) || !*MEMORY[0x1E0CC10F0])
        && !((v12 & 0x3FFFFFFFFLL) + v13)
        || (*(_QWORD *)(v11 + 32)
          ? (v14 = WTF::RefPtr<JSC::SharedArrayBufferContents,WTF::RawPtrTraits<JSC::SharedArrayBufferContents>,WTF::DefaultRefDerefTraits<JSC::SharedArrayBufferContents>>::unspecifiedBoolTypeInstance)
          : (v14 = 0),
            !v14))
      {
        if ((*(_BYTE *)(*(_QWORD *)v20 + 6) & 3) == 0)
        {
          v23 = 0;
          v22 = 0;
          v25 = *(JSC::VM **)v20;
          WebCore::DOMMatrix::fromFloat64Array((uint64_t)&v25, (uint64_t)v20);
          v15 = WebCore::toJSNewlyCreated<WebCore::IDLInterface<WebCore::DOMMatrix>,WebCore::ExceptionOr<WTF::Ref<WebCore::DOMMatrix,WTF::RawPtrTraits<WebCore::DOMMatrix>,WTF::DefaultRefDerefTraits<WebCore::DOMMatrix>>>>(this, this, (WebCore::JSDOMGlobalObject *)&v24, v20);
          if (v21 != -1)
            ((void (*)(char *, unsigned __int8 *))off_1E325C028[v21])(&v26, v20);
          v21 = -1;
          v18 = v25;
          v25 = 0;
          if (v18)
          {
            if (*(_DWORD *)v18 == 1)
              JSC::ArrayBufferView::operator delete();
            else
              --*(_DWORD *)v18;
          }
          v16 = 0;
          goto LABEL_18;
        }
      }
      if (**(_DWORD **)v20 == 1)
        JSC::ArrayBufferView::operator delete();
      else
        --**(_DWORD **)v20;
    }
  }
  WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v25, 0, "array64", 8, "DOMMatrix", 10, a8, "fromFloat64Array", 17, "Float64Array", 13);
  v15 = 0;
  v16 = 1;
  v23 = 1;
LABEL_18:
  ((void (*)(unsigned __int8 *, uint64_t *))off_1E325C0D0[v16])(v20, &v22);
  return v15;
}

_QWORD *JSC::JSGenericTypedArrayView<JSC::Float64Adaptor>::possiblySharedTypedImpl(_QWORD *result, JSC::JSArrayBufferView *this)
{
  _QWORD *v3;
  int v4;
  char v5;
  uint64_t v6;
  char v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  unint64_t v13;
  _BOOL4 v14;
  BOOL v15;
  uint64_t v16;
  void *v17;
  WTF *v18;
  WTF *v19;
  uint64_t v20;

  v3 = result;
  v4 = *((unsigned __int8 *)this + 40);
  v5 = v4 - 88;
  if ((v4 - 88) <= 0x35)
  {
    if (((1 << v5) & 0x3D) != 0)
    {
      v6 = *(_QWORD *)(*((_QWORD *)this + 1) - 8);
      if (!v6)
        goto LABEL_29;
      goto LABEL_11;
    }
    if (((1 << v5) & 0x3D000000000000) != 0)
    {
      v6 = *((_QWORD *)this + 6);
      if (!v6)
        goto LABEL_29;
LABEL_11:
      v7 = 0;
      *(_DWORD *)v6 += 2;
      goto LABEL_12;
    }
  }
  if (v4 == 16 || v4 == 48)
  {
    result = (_QWORD *)JSC::JSArrayBufferView::slowDownAndWasteMemory(this);
    v6 = (uint64_t)result;
    if (result)
      goto LABEL_11;
  }
  else
  {
    v6 = 0;
  }
LABEL_29:
  v7 = 1;
LABEL_12:
  v8 = *((unsigned __int8 *)this + 40);
  if ((v8 & 1) != 0)
  {
    v9 = 0;
    if ((v7 & 1) == 0)
      goto LABEL_14;
LABEL_22:
    result = 0;
LABEL_23:
    *v3 = result;
    if (!v6)
      return result;
    goto LABEL_26;
  }
  v9 = *((_QWORD *)this + 3);
  if ((v7 & 1) != 0)
    goto LABEL_22;
LABEL_14:
  v10 = *((_QWORD *)this + 4);
  if (*(_BYTE *)(v6 + 64) && (v20 = *(_QWORD *)(v6 + 32)) != 0)
    v11 = *(_QWORD *)(v20 + 32);
  else
    v11 = *(_QWORD *)(v6 + 48);
  v12 = v11 >= v10;
  v13 = v11 - v10;
  if (v12)
  {
    v14 = v9 <= v13 >> 3;
    if ((v10 & 7) == 0 && ((v8 | v14) & 1) != 0)
    {
      WTF::fastMalloc((WTF *)0x28);
      result = (_QWORD *)JSC::ArrayBufferView::ArrayBufferView();
      goto LABEL_23;
    }
  }
  *v3 = 0;
LABEL_26:
  v15 = *(_DWORD *)v6 == 2;
  *(_DWORD *)v6 -= 2;
  if (v15)
  {
    v16 = *(_QWORD *)(v6 + 80);
    if (v16)
    {
      *(_QWORD *)(v16 + 8) = 3;
      *(_QWORD *)(v6 + 80) = 0;
    }
    if ((*(_BYTE *)(v6 + 72) & 1) == 0)
      JSC::InlineWatchpointSet::freeFat((JSC::InlineWatchpointSet *)(v6 + 72));
    JSC::ArrayBufferContents::~ArrayBufferContents((JSC::ArrayBufferContents *)(v6 + 16));
    v18 = *(WTF **)(v6 + 8);
    if ((v18 & 1) == 0 && v18)
    {
      v19 = *(WTF **)v18;
      if (*(_QWORD *)v18)
      {
        *(_QWORD *)v18 = 0;
        *((_DWORD *)v18 + 2) = 0;
        WTF::fastFree(v19, v17);
      }
      WTF::fastFree(v18, v17);
    }
    return (_QWORD *)WTF::fastFree((WTF *)v6, v17);
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN3JSC21GenericTypedArrayViewINSA_14Float64AdaptorEEENS8_12RawPtrTraitsISD_EENS8_21DefaultRefDerefTraitsISD_EEEEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSI_SK_EEEEEEDcSO_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*result == 1)
      return (_DWORD *)JSC::ArrayBufferView::operator delete();
    else
      --*result;
  }
  return result;
}

_BYTE *WebCore::jsDOMMatrixPrototypeFunction_multiplySelf(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  JSC::VM *v13;
  uint64_t v14;
  bmalloc::api *v15;
  void *v16;
  uint64_t v17;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  JSValue v21;
  WebCore *v22;
  JSC::JSGlobalObject *v23;
  JSC::CallFrame *v24;
  JSC::VM *v25;
  _BYTE __dst[280];
  int v27[2];
  WTF::StringImpl *v28;
  unsigned int v29;
  _BYTE v30[8];
  WTF::StringImpl *v31;
  _BYTE v32[8];
  _BYTE v33[280];
  int v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "DOMMatrix", "multiplySelf");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMMatrix::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMMatrix::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "DOMMatrix", "multiplySelf");
  if (*((_DWORD *)a2 + 8) == 1)
    v11 = 10;
  else
    v11 = *((_QWORD *)a2 + 6);
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::convertDictionary<WebCore::DOMMatrixInit>((uint64_t)v32, this, (JSC::JSCell *)v11);
  if (v34)
    return 0;
  v13 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  memcpy(__dst, v33, sizeof(__dst));
  WebCore::DOMMatrix::multiplySelf(v12, (uint64_t)__dst, (uint64_t)v27);
  v14 = v29;
  if (!v29)
  {
    v15 = *(bmalloc::api **)v27;
    *(_QWORD *)v27 = 0;
    v17 = WebCore::wrap<WebCore::DOMMatrix>((int)this, v13, v15);
    if (*((_DWORD *)v15 + 2) == 1)
    {
      if (*(_QWORD *)v15)
      {
        *(_QWORD *)(*(_QWORD *)v15 + 8) = 3;
        *(_QWORD *)v15 = 0;
      }
      bmalloc::api::isoDeallocate(v15, v16);
    }
    else
    {
      --*((_DWORD *)v15 + 2);
    }
LABEL_19:
    ((void (*)(_BYTE *, int *))off_1E325C028[v14])(v30, v27);
    return (_BYTE *)v17;
  }
  if (v29 == 1)
  {
    v19 = (WTF::StringImpl *)LOBYTE(v27[0]);
    v30[0] = v27[0];
    v20 = v28;
    v28 = 0;
    v31 = v20;
    if (!*((_QWORD *)v4 + 2))
    {
      v21.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v27[0]), (JSC::JSGlobalObject *)&v31);
      JSC::VM::throwException(v4, this, v21);
      v20 = v31;
    }
    v31 = 0;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
        WTF::StringImpl::destroy(v20, v19);
      else
        *(_DWORD *)v20 -= 2;
    }
    v17 = 0;
    goto LABEL_19;
  }
  v22 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDOMMatrixPrototypeFunction_preMultiplySelf(v22, v23, v24);
}

_BYTE *WebCore::jsDOMMatrixPrototypeFunction_preMultiplySelf(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  JSC::VM *v13;
  uint64_t v14;
  bmalloc::api *v15;
  void *v16;
  uint64_t v17;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  JSValue v21;
  WebCore *v22;
  JSC::JSGlobalObject *v23;
  JSC::CallFrame *v24;
  JSC::VM *v25;
  _BYTE __dst[280];
  int v27[2];
  WTF::StringImpl *v28;
  unsigned int v29;
  _BYTE v30[8];
  WTF::StringImpl *v31;
  _BYTE v32[8];
  _BYTE v33[280];
  int v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "DOMMatrix", "preMultiplySelf");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMMatrix::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMMatrix::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "DOMMatrix", "preMultiplySelf");
  if (*((_DWORD *)a2 + 8) == 1)
    v11 = 10;
  else
    v11 = *((_QWORD *)a2 + 6);
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::convertDictionary<WebCore::DOMMatrixInit>((uint64_t)v32, this, (JSC::JSCell *)v11);
  if (v34)
    return 0;
  v13 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  memcpy(__dst, v33, sizeof(__dst));
  WebCore::DOMMatrix::preMultiplySelf(v12, (uint64_t)__dst, (uint64_t)v27);
  v14 = v29;
  if (!v29)
  {
    v15 = *(bmalloc::api **)v27;
    *(_QWORD *)v27 = 0;
    v17 = WebCore::wrap<WebCore::DOMMatrix>((int)this, v13, v15);
    if (*((_DWORD *)v15 + 2) == 1)
    {
      if (*(_QWORD *)v15)
      {
        *(_QWORD *)(*(_QWORD *)v15 + 8) = 3;
        *(_QWORD *)v15 = 0;
      }
      bmalloc::api::isoDeallocate(v15, v16);
    }
    else
    {
      --*((_DWORD *)v15 + 2);
    }
LABEL_19:
    ((void (*)(_BYTE *, int *))off_1E325C028[v14])(v30, v27);
    return (_BYTE *)v17;
  }
  if (v29 == 1)
  {
    v19 = (WTF::StringImpl *)LOBYTE(v27[0]);
    v30[0] = v27[0];
    v20 = v28;
    v28 = 0;
    v31 = v20;
    if (!*((_QWORD *)v4 + 2))
    {
      v21.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v27[0]), (JSC::JSGlobalObject *)&v31);
      JSC::VM::throwException(v4, this, v21);
      v20 = v31;
    }
    v31 = 0;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
        WTF::StringImpl::destroy(v20, v19);
      else
        *(_DWORD *)v20 -= 2;
    }
    v17 = 0;
    goto LABEL_19;
  }
  v22 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDOMMatrixPrototypeFunction_translateSelf(v22, v23, v24);
}

_BYTE *WebCore::jsDOMMatrixPrototypeFunction_translateSelf(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  double v15;
  double v16;
  unint64_t v17;
  JSC::VM *v18;
  double v19;
  unint64_t v20;
  JSC::VM *v21;
  char v22;
  uint64_t v23;
  JSC::VM *v24;
  float64x2_t v25;
  void *v26;
  char hasExceptionsAfterHandlingTraps;
  char v29;
  JSC::VM *v30;
  double v31;
  JSC::VM *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  JSC::VM *v43;
  uint64_t v44;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v43 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v43, "DOMMatrix", "translateSelf");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMMatrix::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMMatrix::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v43, "DOMMatrix", "translateSelf");
  v12 = *(_QWORD *)(v5 + 24);
  LODWORD(v13) = *((_DWORD *)a2 + 8);
  if ((_DWORD)v13 == 1)
  {
    v15 = 0.0;
    v16 = 0.0;
    v19 = 0.0;
  }
  else
  {
    v14 = *((_QWORD *)a2 + 6);
    v15 = 0.0;
    v16 = 0.0;
    if (v14 != 10)
    {
      v44 = *((_QWORD *)a2 + 6);
      if (v14 >= 0xFFFE000000000000)
      {
        v16 = (double)(int)v14;
      }
      else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v30 = v4;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v44, this);
        v15 = 0.0;
        v4 = v30;
        v16 = v31;
      }
      else
      {
        *(_QWORD *)&v16 = v14 - 0x2000000000000;
      }
      if (*((_DWORD *)v4 + 20))
      {
        v39 = v16;
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
        v16 = v39;
        v15 = 0.0;
        if ((hasExceptionsAfterHandlingTraps & 1) != 0)
          return 0;
      }
      LODWORD(v13) = *((_DWORD *)a2 + 8);
    }
    v13 = (int)v13;
    if ((unint64_t)((int)v13 - 3) <= 0xFFFFFFFFFFFFFFFDLL)
    {
      v17 = *((_QWORD *)a2 + 7);
      if (v17 != 10)
      {
        v44 = *((_QWORD *)a2 + 7);
        v18 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v17 >= 0xFFFE000000000000)
        {
          v15 = (double)(int)v17;
        }
        else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v32 = (JSC::VM *)*((_QWORD *)this + 7);
          v41 = v16;
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v44, this);
          v16 = v41;
          v18 = v32;
          v15 = v33;
        }
        else
        {
          *(_QWORD *)&v15 = v17 - 0x2000000000000;
        }
        if (*((_DWORD *)v18 + 20))
        {
          v36 = v15;
          v40 = v16;
          v29 = JSC::VM::hasExceptionsAfterHandlingTraps(v18);
          v15 = v36;
          v16 = v40;
          if ((v29 & 1) != 0)
            return 0;
        }
        v13 = *((int *)a2 + 8);
      }
    }
    v19 = 0.0;
    if ((unint64_t)(v13 - 4) <= 0xFFFFFFFFFFFFFFFCLL)
    {
      v20 = *((_QWORD *)a2 + 8);
      if (v20 != 10)
      {
        v44 = *((_QWORD *)a2 + 8);
        v21 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v20 >= 0xFFFE000000000000)
        {
          v19 = (double)(int)v20;
        }
        else if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v37 = v15;
          v42 = v16;
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v44, this);
          v15 = v37;
          v16 = v42;
        }
        else
        {
          *(_QWORD *)&v19 = v20 - 0x2000000000000;
        }
        if (*((_DWORD *)v21 + 20))
        {
          v35 = v15;
          v38 = v16;
          v34 = v19;
          v22 = JSC::VM::hasExceptionsAfterHandlingTraps(v21);
          v19 = v34;
          v15 = v35;
          v16 = v38;
          if ((v22 & 1) != 0)
            return 0;
        }
      }
    }
  }
  v24 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v25 = vaddq_f64(*(float64x2_t *)(v12 + 128), vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(*(float64x2_t *)(v12 + 64), v15), *(float64x2_t *)(v12 + 32), v16), *(float64x2_t *)(v12 + 96), v19));
  *(float64x2_t *)(v12 + 112) = vaddq_f64(*(float64x2_t *)(v12 + 112), vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(*(float64x2_t *)(v12 + 48), v15), *(float64x2_t *)(v12 + 16), v16), *(float64x2_t *)(v12 + 80), v19));
  *(float64x2_t *)(v12 + 128) = v25;
  if (v19 != 0.0)
    *(_BYTE *)(v12 + 144) = 0;
  ++*(_DWORD *)(v12 + 8);
  v23 = WebCore::wrap<WebCore::DOMMatrix>((int)this, v24, (bmalloc::api *)v12);
  if (*(_DWORD *)(v12 + 8) == 1)
  {
    if (*(_QWORD *)v12)
    {
      *(_QWORD *)(*(_QWORD *)v12 + 8) = 3;
      *(_QWORD *)v12 = 0;
    }
    bmalloc::api::isoDeallocate((bmalloc::api *)v12, v26);
  }
  else
  {
    --*(_DWORD *)(v12 + 8);
  }
  return (_BYTE *)v23;
}

_BYTE *WebCore::jsDOMMatrixPrototypeFunction_scaleSelf(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  double v15;
  char v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  unint64_t v22;
  unint64_t v23;
  JSC::VM *v24;
  unint64_t v25;
  JSC::VM *v26;
  unint64_t v27;
  JSC::VM *v28;
  unint64_t v29;
  JSC::VM *v30;
  JSC::VM *v31;
  bmalloc::api *v32;
  void *v33;
  uint64_t v34;
  JSC::VM *v36;
  uint64_t v37;
  char hasExceptionsAfterHandlingTraps;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  JSC::VM *v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  double v49;
  JSC::VM *v50;
  uint64_t v51;
  double v52;
  JSC::VM *v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  double v57;
  double v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  double v62;
  double v63;
  JSC::VM *v64;
  uint64_t v65;
  JSC::VM *v66;
  bmalloc::api *v67;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v66 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v66, "DOMMatrix", "scaleSelf");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMMatrix::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMMatrix::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v66, "DOMMatrix", "scaleSelf");
  v12 = *(_QWORD *)(v5 + 24);
  LODWORD(v13) = *((_DWORD *)a2 + 8);
  if ((_DWORD)v13 == 1)
  {
    v16 = 0;
    v17 = 1.0;
    v18 = 0.0;
    v15 = 1.0;
    v19 = 0.0;
    v20 = 0.0;
    v21 = 0.0;
  }
  else
  {
    v14 = *((_QWORD *)a2 + 6);
    if (v14 == 10)
    {
      v15 = 1.0;
    }
    else
    {
      v67 = (bmalloc::api *)*((_QWORD *)a2 + 6);
      if (v14 >= 0xFFFE000000000000)
      {
        v15 = (double)(int)v14;
      }
      else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v48 = v12;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v67, this);
        v12 = v48;
        v15 = v49;
      }
      else
      {
        *(_QWORD *)&v15 = v14 - 0x2000000000000;
      }
      if (*((_DWORD *)v4 + 20))
      {
        v37 = v12;
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
        v12 = v37;
        if ((hasExceptionsAfterHandlingTraps & 1) != 0)
          return 0;
      }
      LODWORD(v13) = *((_DWORD *)a2 + 8);
    }
    v13 = (int)v13;
    v19 = 0.0;
    if ((unint64_t)((int)v13 - 3) > 0xFFFFFFFFFFFFFFFDLL)
    {
      v16 = 0;
    }
    else
    {
      v22 = *((_QWORD *)a2 + 7);
      if (v22 == 10)
      {
        v16 = 0;
      }
      else
      {
        v67 = (bmalloc::api *)*((_QWORD *)a2 + 7);
        v36 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v22 >= 0xFFFE000000000000)
        {
          v19 = (double)(int)v22;
        }
        else if (v22 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v61 = v12;
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v67, this);
          v12 = v61;
          v19 = v62;
        }
        else
        {
          *(_QWORD *)&v19 = v22 - 0x2000000000000;
        }
        if (*((_DWORD *)v36 + 20))
        {
          v59 = v12;
          v60 = JSC::VM::hasExceptionsAfterHandlingTraps(v36);
          v12 = v59;
          if ((v60 & 1) != 0)
            return 0;
        }
        v13 = *((int *)a2 + 8);
        v16 = 1;
      }
    }
    v17 = 1.0;
    if ((unint64_t)(v13 - 4) <= 0xFFFFFFFFFFFFFFFCLL)
    {
      v23 = *((_QWORD *)a2 + 8);
      if (v23 != 10)
      {
        v67 = (bmalloc::api *)*((_QWORD *)a2 + 8);
        v24 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v23 >= 0xFFFE000000000000)
        {
          v17 = (double)(int)v23;
        }
        else if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v50 = (JSC::VM *)*((_QWORD *)this + 7);
          v51 = v12;
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v67, this);
          v12 = v51;
          v24 = v50;
          v17 = v52;
        }
        else
        {
          *(_QWORD *)&v17 = v23 - 0x2000000000000;
        }
        if (*((_DWORD *)v24 + 20))
        {
          v39 = v12;
          v40 = JSC::VM::hasExceptionsAfterHandlingTraps(v24);
          v12 = v39;
          if ((v40 & 1) != 0)
            return 0;
        }
        v13 = *((int *)a2 + 8);
      }
    }
    v18 = 0.0;
    if ((unint64_t)(v13 - 5) > 0xFFFFFFFFFFFFFFFBLL || (v25 = *((_QWORD *)a2 + 9), v25 == 10))
    {
      v20 = 0.0;
    }
    else
    {
      v67 = (bmalloc::api *)*((_QWORD *)a2 + 9);
      v26 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v25 >= 0xFFFE000000000000)
      {
        v20 = (double)(int)v25;
      }
      else if (v25 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v53 = (JSC::VM *)*((_QWORD *)this + 7);
        v54 = v12;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v67, this);
        v12 = v54;
        v26 = v53;
        v20 = v55;
      }
      else
      {
        *(_QWORD *)&v20 = v25 - 0x2000000000000;
      }
      if (*((_DWORD *)v26 + 20))
      {
        v41 = v12;
        v42 = JSC::VM::hasExceptionsAfterHandlingTraps(v26);
        v12 = v41;
        if ((v42 & 1) != 0)
          return 0;
      }
      v13 = *((int *)a2 + 8);
    }
    if ((unint64_t)(v13 - 6) <= 0xFFFFFFFFFFFFFFFALL)
    {
      v27 = *((_QWORD *)a2 + 10);
      if (v27 != 10)
      {
        v67 = (bmalloc::api *)*((_QWORD *)a2 + 10);
        v28 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v27 >= 0xFFFE000000000000)
        {
          v18 = (double)(int)v27;
        }
        else if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v64 = (JSC::VM *)*((_QWORD *)this + 7);
          v56 = v12;
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v67, this);
          v12 = v56;
          v28 = v64;
          v18 = v57;
        }
        else
        {
          *(_QWORD *)&v18 = v27 - 0x2000000000000;
        }
        if (*((_DWORD *)v28 + 20))
        {
          v43 = v12;
          v44 = JSC::VM::hasExceptionsAfterHandlingTraps(v28);
          v12 = v43;
          if ((v44 & 1) != 0)
            return 0;
        }
        v13 = *((int *)a2 + 8);
      }
    }
    v21 = 0.0;
    if ((unint64_t)(v13 - 7) <= 0xFFFFFFFFFFFFFFF9)
    {
      v29 = *((_QWORD *)a2 + 11);
      if (v29 != 10)
      {
        v67 = (bmalloc::api *)*((_QWORD *)a2 + 11);
        v30 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v29 >= 0xFFFE000000000000)
        {
          v21 = (double)(int)v29;
        }
        else if (v29 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v65 = v12;
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v67, this);
          v12 = v65;
          v21 = v58;
        }
        else
        {
          *(_QWORD *)&v21 = v29 - 0x2000000000000;
        }
        if (*((_DWORD *)v30 + 20))
        {
          v45 = v30;
          v63 = v21;
          v46 = v12;
          v47 = JSC::VM::hasExceptionsAfterHandlingTraps(v45);
          v12 = v46;
          v21 = v63;
          if ((v47 & 1) != 0)
            return 0;
        }
      }
    }
  }
  v31 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  WebCore::DOMMatrix::scaleSelf(v12, v19, v16, &v67, v15, v17, v20, v18, v21);
  v32 = v67;
  v34 = WebCore::wrap<WebCore::DOMMatrix>((int)this, v31, v67);
  if (*((_DWORD *)v32 + 2) == 1)
  {
    if (*(_QWORD *)v32)
    {
      *(_QWORD *)(*(_QWORD *)v32 + 8) = 3;
      *(_QWORD *)v32 = 0;
    }
    bmalloc::api::isoDeallocate(v32, v33);
  }
  else
  {
    --*((_DWORD *)v32 + 2);
  }
  return (_BYTE *)v34;
}

_BYTE *WebCore::jsDOMMatrixPrototypeFunction_scale3dSelf(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  unint64_t v19;
  JSC::VM *v20;
  unint64_t v21;
  JSC::VM *v22;
  unint64_t v23;
  JSC::VM *v24;
  JSC::VM *v25;
  bmalloc::api *v26;
  void *v27;
  uint64_t v28;
  char hasExceptionsAfterHandlingTraps;
  JSC::VM *v31;
  double v32;
  JSC::VM *v33;
  double v34;
  JSC::VM *v35;
  double v36;
  double v37;
  double v38;
  JSC::VM *v39;
  bmalloc::api *v40;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v39 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v39, "DOMMatrix", "scale3dSelf");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMMatrix::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMMatrix::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v39, "DOMMatrix", "scale3dSelf");
  v12 = *(_QWORD *)(v5 + 24);
  LODWORD(v13) = *((_DWORD *)a2 + 8);
  if ((_DWORD)v13 == 1)
  {
    v15 = 1.0;
    v16 = 0.0;
    v17 = 0.0;
    v18 = 0.0;
  }
  else
  {
    v14 = *((_QWORD *)a2 + 6);
    if (v14 == 10)
    {
      v15 = 1.0;
    }
    else
    {
      v40 = (bmalloc::api *)*((_QWORD *)a2 + 6);
      if (v14 >= 0xFFFE000000000000)
      {
        v15 = (double)(int)v14;
      }
      else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v31 = v4;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v40, this);
        v4 = v31;
        v15 = v32;
      }
      else
      {
        *(_QWORD *)&v15 = v14 - 0x2000000000000;
      }
      if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
        return 0;
      LODWORD(v13) = *((_DWORD *)a2 + 8);
    }
    v13 = (int)v13;
    v16 = 0.0;
    if ((unint64_t)((int)v13 - 3) > 0xFFFFFFFFFFFFFFFDLL || (v19 = *((_QWORD *)a2 + 7), v19 == 10))
    {
      v17 = 0.0;
    }
    else
    {
      v40 = (bmalloc::api *)*((_QWORD *)a2 + 7);
      v20 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v19 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v19;
      }
      else if (v19 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v33 = (JSC::VM *)*((_QWORD *)this + 7);
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v40, this);
        v20 = v33;
        v17 = v34;
      }
      else
      {
        *(_QWORD *)&v17 = v19 - 0x2000000000000;
      }
      if (*((_DWORD *)v20 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v20) & 1) != 0)
        return 0;
      v13 = *((int *)a2 + 8);
    }
    if ((unint64_t)(v13 - 4) <= 0xFFFFFFFFFFFFFFFCLL)
    {
      v21 = *((_QWORD *)a2 + 8);
      if (v21 != 10)
      {
        v40 = (bmalloc::api *)*((_QWORD *)a2 + 8);
        v22 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v21 >= 0xFFFE000000000000)
        {
          v16 = (double)(int)v21;
        }
        else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v35 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v40, this);
          v22 = v35;
          v16 = v36;
        }
        else
        {
          *(_QWORD *)&v16 = v21 - 0x2000000000000;
        }
        if (*((_DWORD *)v22 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v22) & 1) != 0)
          return 0;
        v13 = *((int *)a2 + 8);
      }
    }
    v18 = 0.0;
    if ((unint64_t)(v13 - 5) <= 0xFFFFFFFFFFFFFFFBLL)
    {
      v23 = *((_QWORD *)a2 + 9);
      if (v23 != 10)
      {
        v40 = (bmalloc::api *)*((_QWORD *)a2 + 9);
        v24 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v23 >= 0xFFFE000000000000)
        {
          v18 = (double)(int)v23;
        }
        else if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v40, this);
          v18 = v37;
        }
        else
        {
          *(_QWORD *)&v18 = v23 - 0x2000000000000;
        }
        if (*((_DWORD *)v24 + 20))
        {
          v38 = v18;
          hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v24);
          v18 = v38;
          if ((hasExceptionsAfterHandlingTraps & 1) != 0)
            return 0;
        }
      }
    }
  }
  v25 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  WebCore::DOMMatrix::scale3dSelf(v12, v15, v17, v16, v18, &v40);
  v26 = v40;
  v28 = WebCore::wrap<WebCore::DOMMatrix>((int)this, v25, v40);
  if (*((_DWORD *)v26 + 2) == 1)
  {
    if (*(_QWORD *)v26)
    {
      *(_QWORD *)(*(_QWORD *)v26 + 8) = 3;
      *(_QWORD *)v26 = 0;
    }
    bmalloc::api::isoDeallocate(v26, v27);
  }
  else
  {
    --*((_DWORD *)v26 + 2);
  }
  return (_BYTE *)v28;
}

_BYTE *WebCore::jsDOMMatrixPrototypeFunction_rotateSelf(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  double v15;
  double v16;
  unint64_t v17;
  int v18;
  double v19;
  unint64_t v20;
  int v21;
  JSC::VM *v22;
  double v23;
  void *v24;
  uint64_t v25;
  JSC::VM *v27;
  JSC::VM *v28;
  JSC::VM *v29;
  double v30;
  char hasExceptionsAfterHandlingTraps;
  JSC::VM *v32;
  double v33;
  double v34;
  double v35;
  JSC::VM *v36;
  uint64_t v37;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v36 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "DOMMatrix", "rotateSelf");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMMatrix::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMMatrix::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "DOMMatrix", "rotateSelf");
  v12 = *(_QWORD *)(v5 + 24);
  LODWORD(v13) = *((_DWORD *)a2 + 8);
  if ((_DWORD)v13 == 1)
  {
    v22 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
    v16 = 0.0;
  }
  else
  {
    v14 = *((_QWORD *)a2 + 6);
    v15 = 0.0;
    v16 = 0.0;
    if (v14 != 10)
    {
      v37 = *((_QWORD *)a2 + 6);
      if (v14 >= 0xFFFE000000000000)
      {
        v16 = (double)(int)v14;
      }
      else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v29 = v4;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v37, this);
        v4 = v29;
        v16 = v30;
      }
      else
      {
        *(_QWORD *)&v16 = v14 - 0x2000000000000;
      }
      if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
        return 0;
      LODWORD(v13) = *((_DWORD *)a2 + 8);
    }
    v13 = (int)v13;
    if ((unint64_t)((int)v13 - 3) > 0xFFFFFFFFFFFFFFFDLL)
    {
      v18 = 1;
    }
    else
    {
      v17 = *((_QWORD *)a2 + 7);
      if (v17 == 10)
      {
        v18 = 1;
      }
      else
      {
        v37 = *((_QWORD *)a2 + 7);
        v27 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v17 >= 0xFFFE000000000000)
        {
          v15 = (double)(int)v17;
        }
        else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v32 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v37, this);
          v27 = v32;
          v15 = v33;
        }
        else
        {
          *(_QWORD *)&v15 = v17 - 0x2000000000000;
        }
        if (*((_DWORD *)v27 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v27) & 1) != 0)
          return 0;
        v18 = 0;
        v13 = *((int *)a2 + 8);
      }
    }
    v19 = 0.0;
    if ((unint64_t)(v13 - 4) > 0xFFFFFFFFFFFFFFFCLL)
    {
      v21 = 1;
    }
    else
    {
      v20 = *((_QWORD *)a2 + 8);
      if (v20 == 10)
      {
        v21 = 1;
      }
      else
      {
        v37 = *((_QWORD *)a2 + 8);
        v28 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v20 >= 0xFFFE000000000000)
        {
          v19 = (double)(int)v20;
        }
        else if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v37, this);
          v19 = v34;
        }
        else
        {
          *(_QWORD *)&v19 = v20 - 0x2000000000000;
        }
        if (*((_DWORD *)v28 + 20))
        {
          v35 = v19;
          hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v28);
          v19 = v35;
          if ((hasExceptionsAfterHandlingTraps & 1) != 0)
            return 0;
        }
        v21 = 0;
      }
    }
    v22 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
    if (!v18)
    {
      if (v21)
        v19 = 0.0;
      v23 = v15;
      goto LABEL_33;
    }
    v23 = 0.0;
    if (!v21)
    {
LABEL_33:
      WebCore::TransformationMatrix::rotate3d((float64x2_t *)(v12 + 16), 1, v16, v23, v19);
      if (v16 != 0.0 || ((v15 != 0.0) & ~v18) != 0)
        *(_BYTE *)(v12 + 144) = 0;
      goto LABEL_36;
    }
  }
  WebCore::TransformationMatrix::rotate3d((float64x2_t *)(v12 + 16), 1, 0.0, 0.0, v16);
LABEL_36:
  ++*(_DWORD *)(v12 + 8);
  v25 = WebCore::wrap<WebCore::DOMMatrix>((int)this, v22, (bmalloc::api *)v12);
  if (*(_DWORD *)(v12 + 8) == 1)
  {
    if (*(_QWORD *)v12)
    {
      *(_QWORD *)(*(_QWORD *)v12 + 8) = 3;
      *(_QWORD *)v12 = 0;
    }
    bmalloc::api::isoDeallocate((bmalloc::api *)v12, v24);
  }
  else
  {
    --*(_DWORD *)(v12 + 8);
  }
  return (_BYTE *)v25;
}

_BYTE *WebCore::jsDOMMatrixPrototypeFunction_rotateFromVectorSelf(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  int v13;
  unint64_t v14;
  double v15;
  double v16;
  unint64_t v17;
  JSC::VM *v18;
  uint64_t v19;
  JSC::VM *v20;
  long double v21;
  void *v22;
  JSC::VM *v24;
  double v25;
  double v26;
  JSC::VM *v27;
  uint64_t v28;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v27 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "DOMMatrix", "rotateFromVectorSelf");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMMatrix::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMMatrix::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "DOMMatrix", "rotateFromVectorSelf");
  v12 = *(_QWORD *)(v5 + 24);
  v13 = *((_DWORD *)a2 + 8);
  if (v13 == 1)
  {
    v16 = 0.0;
    v15 = 0.0;
  }
  else
  {
    v14 = *((_QWORD *)a2 + 6);
    v15 = 0.0;
    v16 = 0.0;
    if (v14 != 10)
    {
      v28 = *((_QWORD *)a2 + 6);
      if (v14 >= 0xFFFE000000000000)
      {
        v16 = (double)(int)v14;
      }
      else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v24 = v4;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v28, this);
        v4 = v24;
        v16 = v25;
      }
      else
      {
        *(_QWORD *)&v16 = v14 - 0x2000000000000;
      }
      if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
        return 0;
      v13 = *((_DWORD *)a2 + 8);
    }
    if ((unint64_t)(v13 - 3) <= 0xFFFFFFFFFFFFFFFDLL)
    {
      v17 = *((_QWORD *)a2 + 7);
      if (v17 != 10)
      {
        v28 = *((_QWORD *)a2 + 7);
        v18 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v17 >= 0xFFFE000000000000)
        {
          v15 = (double)(int)v17;
        }
        else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v28, this);
          v15 = v26;
        }
        else
        {
          *(_QWORD *)&v15 = v17 - 0x2000000000000;
        }
        if (*((_DWORD *)v18 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v18) & 1) != 0)
          return 0;
      }
    }
  }
  v20 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v21 = atan2(v15, v16);
  WebCore::TransformationMatrix::rotateRadians((float64x2_t *)(v12 + 16), 1, v21);
  ++*(_DWORD *)(v12 + 8);
  v19 = WebCore::wrap<WebCore::DOMMatrix>((int)this, v20, (bmalloc::api *)v12);
  if (*(_DWORD *)(v12 + 8) == 1)
  {
    if (*(_QWORD *)v12)
    {
      *(_QWORD *)(*(_QWORD *)v12 + 8) = 3;
      *(_QWORD *)v12 = 0;
    }
    bmalloc::api::isoDeallocate((bmalloc::api *)v12, v22);
  }
  else
  {
    --*(_DWORD *)(v12 + 8);
  }
  return (_BYTE *)v19;
}

_BYTE *WebCore::jsDOMMatrixPrototypeFunction_rotateAxisAngleSelf(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  double v15;
  double v16;
  unint64_t v17;
  JSC::VM *v18;
  double v19;
  unint64_t v20;
  double v21;
  JSC::VM *v22;
  unint64_t v23;
  JSC::VM *v24;
  JSC::VM *v25;
  void *v26;
  uint64_t v27;
  JSC::VM *v29;
  double v30;
  JSC::VM *v31;
  double v32;
  JSC::VM *v33;
  double v34;
  double v35;
  JSC::VM *v36;
  uint64_t v37;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v36 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "DOMMatrix", "rotateAxisAngleSelf");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMMatrix::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMMatrix::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "DOMMatrix", "rotateAxisAngleSelf");
  v12 = *(_QWORD *)(v5 + 24);
  LODWORD(v13) = *((_DWORD *)a2 + 8);
  if ((_DWORD)v13 == 1)
  {
    v21 = 0.0;
    v16 = 0.0;
    v15 = 0.0;
    v19 = 0.0;
  }
  else
  {
    v14 = *((_QWORD *)a2 + 6);
    v15 = 0.0;
    v16 = 0.0;
    if (v14 != 10)
    {
      v37 = *((_QWORD *)a2 + 6);
      if (v14 >= 0xFFFE000000000000)
      {
        v16 = (double)(int)v14;
      }
      else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v29 = v4;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v37, this);
        v4 = v29;
        v16 = v30;
      }
      else
      {
        *(_QWORD *)&v16 = v14 - 0x2000000000000;
      }
      if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
        return 0;
      LODWORD(v13) = *((_DWORD *)a2 + 8);
    }
    v13 = (int)v13;
    if ((unint64_t)((int)v13 - 3) <= 0xFFFFFFFFFFFFFFFDLL)
    {
      v17 = *((_QWORD *)a2 + 7);
      if (v17 != 10)
      {
        v37 = *((_QWORD *)a2 + 7);
        v18 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v17 >= 0xFFFE000000000000)
        {
          v15 = (double)(int)v17;
        }
        else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v31 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v37, this);
          v18 = v31;
          v15 = v32;
        }
        else
        {
          *(_QWORD *)&v15 = v17 - 0x2000000000000;
        }
        if (*((_DWORD *)v18 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v18) & 1) != 0)
          return 0;
        v13 = *((int *)a2 + 8);
      }
    }
    v19 = 0.0;
    if ((unint64_t)(v13 - 4) > 0xFFFFFFFFFFFFFFFCLL || (v20 = *((_QWORD *)a2 + 8), v20 == 10))
    {
      v21 = 0.0;
    }
    else
    {
      v37 = *((_QWORD *)a2 + 8);
      v22 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v20 >= 0xFFFE000000000000)
      {
        v21 = (double)(int)v20;
      }
      else if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v33 = (JSC::VM *)*((_QWORD *)this + 7);
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v37, this);
        v22 = v33;
        v21 = v34;
      }
      else
      {
        *(_QWORD *)&v21 = v20 - 0x2000000000000;
      }
      if (*((_DWORD *)v22 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v22) & 1) != 0)
        return 0;
      v13 = *((int *)a2 + 8);
    }
    if ((unint64_t)(v13 - 5) <= 0xFFFFFFFFFFFFFFFBLL)
    {
      v23 = *((_QWORD *)a2 + 9);
      if (v23 != 10)
      {
        v37 = *((_QWORD *)a2 + 9);
        v24 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v23 >= 0xFFFE000000000000)
        {
          v19 = (double)(int)v23;
        }
        else if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v37, this);
          v19 = v35;
        }
        else
        {
          *(_QWORD *)&v19 = v23 - 0x2000000000000;
        }
        if (*((_DWORD *)v24 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v24) & 1) != 0)
          return 0;
      }
    }
  }
  v25 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  WebCore::TransformationMatrix::rotate3d((float64x2_t *)(v12 + 16), 1, v16, v15, v21, v19);
  if (v16 != 0.0 || v15 != 0.0)
    *(_BYTE *)(v12 + 144) = 0;
  ++*(_DWORD *)(v12 + 8);
  v27 = WebCore::wrap<WebCore::DOMMatrix>((int)this, v25, (bmalloc::api *)v12);
  if (*(_DWORD *)(v12 + 8) == 1)
  {
    if (*(_QWORD *)v12)
    {
      *(_QWORD *)(*(_QWORD *)v12 + 8) = 3;
      *(_QWORD *)v12 = 0;
    }
    bmalloc::api::isoDeallocate((bmalloc::api *)v12, v26);
  }
  else
  {
    --*(_DWORD *)(v12 + 8);
  }
  return (_BYTE *)v27;
}

_BYTE *WebCore::jsDOMMatrixPrototypeFunction_skewXSelf(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  double v13;
  unint64_t v14;
  JSC::VM *v15;
  void *v16;
  uint64_t v17;
  char hasExceptionsAfterHandlingTraps;
  double v20;
  JSC::VM *v21;
  JSC::VM *v22;
  uint64_t v23;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v22 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v22, "DOMMatrix", "skewXSelf");
  v6 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
  v7 = *(unsigned int *)(v6 + 0x4C);
  v8 = *(_DWORD *)(v6 + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMMatrix::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMMatrix::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v22, "DOMMatrix", "skewXSelf");
  v12 = *(_QWORD *)(v5 + 24);
  v13 = 0.0;
  if (*((_DWORD *)a2 + 8) != 1)
  {
    v14 = *((_QWORD *)a2 + 6);
    if (v14 != 10)
    {
      v23 = *((_QWORD *)a2 + 6);
      if (v14 >= 0xFFFE000000000000)
      {
        v13 = (double)(int)v14;
      }
      else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v21 = v4;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v23, this);
        v4 = v21;
      }
      else
      {
        *(_QWORD *)&v13 = v14 - 0x2000000000000;
      }
      if (*((_DWORD *)v4 + 20))
      {
        v20 = v13;
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
        v13 = v20;
        if ((hasExceptionsAfterHandlingTraps & 1) != 0)
          return 0;
      }
      v6 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
    }
  }
  v15 = *(JSC::VM **)(v6 + 40);
  WebCore::TransformationMatrix::skew((float64x2_t *)(v12 + 16), v13, 0.0);
  ++*(_DWORD *)(v12 + 8);
  v17 = WebCore::wrap<WebCore::DOMMatrix>((int)this, v15, (bmalloc::api *)v12);
  if (*(_DWORD *)(v12 + 8) == 1)
  {
    if (*(_QWORD *)v12)
    {
      *(_QWORD *)(*(_QWORD *)v12 + 8) = 3;
      *(_QWORD *)v12 = 0;
    }
    bmalloc::api::isoDeallocate((bmalloc::api *)v12, v16);
  }
  else
  {
    --*(_DWORD *)(v12 + 8);
  }
  return (_BYTE *)v17;
}

_BYTE *WebCore::jsDOMMatrixPrototypeFunction_skewYSelf(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  double v13;
  unint64_t v14;
  JSC::VM *v15;
  void *v16;
  uint64_t v17;
  char hasExceptionsAfterHandlingTraps;
  double v20;
  double v21;
  JSC::VM *v22;
  JSC::VM *v23;
  uint64_t v24;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v23 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v23, "DOMMatrix", "skewYSelf");
  v6 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
  v7 = *(unsigned int *)(v6 + 0x4C);
  v8 = *(_DWORD *)(v6 + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMMatrix::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMMatrix::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v23, "DOMMatrix", "skewYSelf");
  v12 = *(_QWORD *)(v5 + 24);
  v13 = 0.0;
  if (*((_DWORD *)a2 + 8) != 1)
  {
    v14 = *((_QWORD *)a2 + 6);
    if (v14 != 10)
    {
      v24 = *((_QWORD *)a2 + 6);
      if (v14 >= 0xFFFE000000000000)
      {
        v13 = (double)(int)v14;
      }
      else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v22 = v4;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v24, this);
        v4 = v22;
        v13 = v20;
      }
      else
      {
        *(_QWORD *)&v13 = v14 - 0x2000000000000;
      }
      if (*((_DWORD *)v4 + 20))
      {
        v21 = v13;
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
        v13 = v21;
        if ((hasExceptionsAfterHandlingTraps & 1) != 0)
          return 0;
      }
      v6 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
    }
  }
  v15 = *(JSC::VM **)(v6 + 40);
  WebCore::TransformationMatrix::skew((float64x2_t *)(v12 + 16), 0.0, v13);
  ++*(_DWORD *)(v12 + 8);
  v17 = WebCore::wrap<WebCore::DOMMatrix>((int)this, v15, (bmalloc::api *)v12);
  if (*(_DWORD *)(v12 + 8) == 1)
  {
    if (*(_QWORD *)v12)
    {
      *(_QWORD *)(*(_QWORD *)v12 + 8) = 3;
      *(_QWORD *)v12 = 0;
    }
    bmalloc::api::isoDeallocate((bmalloc::api *)v12, v16);
  }
  else
  {
    --*(_DWORD *)(v12 + 8);
  }
  return (_BYTE *)v17;
}

_BYTE *WebCore::jsDOMMatrixPrototypeFunction_invertSelf(WebCore *this, JSC::JSGlobalObject *a2, double (*a3)[4][4])
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  JSC::VM *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  int64x2_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v22;
  _OWORD v23[8];
  char v24;

  v3 = (int)this;
  v4 = *((_QWORD *)a2 + 5);
  v22 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v22, "DOMMatrix", "invertSelf");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMMatrix::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMMatrix::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v22, "DOMMatrix", "invertSelf");
  v10 = *(_QWORD *)(v4 + 24);
  v11 = *(JSC::VM **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  WebCore::TransformationMatrix::inverse((double *)(v10 + 16), a3, (uint64_t)v23);
  if (v24)
  {
    v12 = v23[7];
    v13 = v23[6];
    v14 = v23[5];
    *(_OWORD *)(v10 + 80) = v23[4];
    *(_OWORD *)(v10 + 96) = v14;
    *(_OWORD *)(v10 + 112) = v13;
    *(_OWORD *)(v10 + 128) = v12;
    v15 = v23[3];
    v16 = v23[2];
    v17 = v23[1];
    *(_OWORD *)(v10 + 16) = v23[0];
    *(_OWORD *)(v10 + 32) = v17;
    *(_OWORD *)(v10 + 48) = v16;
    *(_OWORD *)(v10 + 64) = v15;
  }
  else
  {
    v18 = vdupq_n_s64(0x7FF8000000000000uLL);
    *(int64x2_t *)(v10 + 16) = v18;
    *(int64x2_t *)(v10 + 32) = v18;
    *(int64x2_t *)(v10 + 48) = v18;
    *(int64x2_t *)(v10 + 64) = v18;
    *(int64x2_t *)(v10 + 80) = v18;
    *(int64x2_t *)(v10 + 96) = v18;
    *(int64x2_t *)(v10 + 112) = v18;
    *(int64x2_t *)(v10 + 128) = v18;
    *(_BYTE *)(v10 + 144) = 0;
  }
  ++*(_DWORD *)(v10 + 8);
  v20 = WebCore::wrap<WebCore::DOMMatrix>(v3, v11, (bmalloc::api *)v10);
  if (*(_DWORD *)(v10 + 8) == 1)
  {
    if (*(_QWORD *)v10)
    {
      *(_QWORD *)(*(_QWORD *)v10 + 8) = 3;
      *(_QWORD *)v10 = 0;
    }
    bmalloc::api::isoDeallocate((bmalloc::api *)v10, v19);
  }
  else
  {
    --*(_DWORD *)(v10 + 8);
  }
  return (_BYTE *)v20;
}

_BYTE *WebCore::jsDOMMatrixPrototypeFunction_setMatrixValue(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  JSC::VM *v15;
  JSC::JSGlobalObject *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  JSValue v19;
  uint64_t v20;
  int v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  void *v28;
  int v29;
  int v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  JSValue v36;
  WTF::StringImpl *v37;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v39;
  uint64_t v40;
  WTF::StringImpl *v41;
  uint64_t v42;
  int v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  char v54;
  int v55;
  uint64_t v56;

  v56 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)this + 7);
  v40 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v40, "DOMMatrix", "setMatrixValue");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMMatrix::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMMatrix::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v40, "DOMMatrix", "setMatrixValue");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v36.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException((JSC::VM *)v4, this, v36);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  *(_QWORD *)&v46 = v12;
  if ((v12 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v12 + 5) == 2)
  {
    v13 = *(WTF::StringImpl **)(v12 + 8);
    if ((v13 & 1) != 0)
    {
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
      if (!v13)
        goto LABEL_18;
    }
    else if (!v13)
    {
LABEL_18:
      v44 = v13;
      goto LABEL_19;
    }
    *(_DWORD *)v13 += 2;
    goto LABEL_18;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v46, this);
LABEL_19:
  if (*(_DWORD *)(v4 + 80))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
    v14 = v44;
    if (hasExceptionsAfterHandlingTraps)
    {
      v43 = 1;
      v44 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v37);
        else
          *(_DWORD *)v14 -= 2;
      }
      v20 = 0;
      v33 = 1;
      goto LABEL_36;
    }
  }
  else
  {
    v14 = v44;
  }
  v43 = 0;
  v15 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v41 = v14;
  v42 = 0;
  WebCore::DOMMatrixReadOnly::parseStringIntoAbstractMatrix((uint64_t)&v41, (uint64_t)&v46);
  if (!v55)
  {
    *(_BYTE *)(v11 + 144) = v54;
    v22 = v49;
    v23 = v48;
    v24 = v47;
    *(_OWORD *)(v11 + 16) = v46;
    *(_OWORD *)(v11 + 32) = v24;
    *(_OWORD *)(v11 + 48) = v23;
    v25 = v53;
    v26 = v52;
    v27 = v50;
    *(_OWORD *)(v11 + 96) = v51;
    *(_OWORD *)(v11 + 112) = v26;
    *(_OWORD *)(v11 + 128) = v25;
    *(_OWORD *)(v11 + 64) = v22;
    *(_OWORD *)(v11 + 80) = v27;
    _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore17DOMMatrixReadOnly14AbstractMatrixENS8_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(&v44, &v46);
    ++*(_DWORD *)(v11 + 8);
    LODWORD(v47) = 0;
    *(_QWORD *)&v46 = 0;
    v20 = WebCore::wrap<WebCore::DOMMatrix>((int)this, v15, (bmalloc::api *)v11);
    v29 = *(_DWORD *)(v11 + 8);
    v30 = v29 - 1;
    if (v29 == 1)
    {
      if (*(_QWORD *)v11)
      {
        *(_QWORD *)(*(_QWORD *)v11 + 8) = 3;
        *(_QWORD *)v11 = 0;
      }
      bmalloc::api::isoDeallocate((bmalloc::api *)v11, v28);
      v21 = 0;
    }
    else
    {
      v21 = 0;
      *(_DWORD *)(v11 + 8) = v30;
    }
    goto LABEL_31;
  }
  if (v55 == 1)
  {
    v16 = (JSC::JSGlobalObject *)v46;
    v17 = (WTF::StringImpl *)*((_QWORD *)&v46 + 1);
    *((_QWORD *)&v46 + 1) = 0;
    _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore17DOMMatrixReadOnly14AbstractMatrixENS8_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_((uint64_t)&v44, (WTF::StringImpl *)&v46);
    LOBYTE(v46) = (_BYTE)v16;
    LODWORD(v47) = 1;
    LOBYTE(v44) = (_BYTE)v16;
    *((_QWORD *)&v46 + 1) = 0;
    v45 = v17;
    if (!*(_QWORD *)(v4 + 16))
    {
      v19.super.isa = (Class)WebCore::createDOMException(this, v16, (JSC::JSGlobalObject *)&v45);
      JSC::VM::throwException((JSC::VM *)v4, this, v19);
      v17 = v45;
    }
    v45 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
      {
        WTF::StringImpl::destroy(v17, v18);
        v20 = 0;
        v21 = v47;
        if ((_DWORD)v47 == -1)
          goto LABEL_32;
        goto LABEL_31;
      }
      *(_DWORD *)v17 -= 2;
    }
    v20 = 0;
    v21 = 1;
LABEL_31:
    ((void (*)(WTF::StringImpl **, __int128 *))off_1E325C028[v21])(&v44, &v46);
LABEL_32:
    LODWORD(v47) = -1;
    v32 = v41;
    v41 = 0;
    if (v32)
    {
      if (*(_DWORD *)v32 == 2)
        WTF::StringImpl::destroy(v32, v31);
      else
        *(_DWORD *)v32 -= 2;
    }
    v33 = 0;
LABEL_36:
    ((void (*)(__int128 *, uint64_t *))off_1E325A258[v33])(&v46, &v42);
    return (_BYTE *)v20;
  }
  v39 = std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore17DOMMatrixReadOnlyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(v39);
}

bmalloc::api *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore17DOMMatrixReadOnlyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, bmalloc::api **a2)
{
  bmalloc::api *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*((_DWORD *)result + 2) == 1)
    {
      if (*(_QWORD *)result)
      {
        *(_QWORD *)(*(_QWORD *)result + 8) = 3;
        *(_QWORD *)result = 0;
      }
      return (bmalloc::api *)bmalloc::api::isoDeallocate(result, a2);
    }
    else
    {
      --*((_DWORD *)result + 2);
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore17DOMMatrixReadOnlyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::jsDOMMatrixReadOnlyConstructorFunction_fromMatrix(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  bmalloc::api *v7;
  void *v8;
  uint64_t v9;
  bmalloc::api *v10;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  JSValue v14;
  WebCore *v15;
  JSC::JSGlobalObject *v16;
  JSC::CallFrame *v17;
  _BYTE __dst[280];
  int v19[2];
  WTF::StringImpl *v20;
  int v21;
  bmalloc::api *v22;
  WTF::StringImpl *v23;
  _BYTE v24[8];
  _BYTE v25[280];
  int v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  if (*((_DWORD *)a2 + 8) == 1)
    v4 = 10;
  else
    v4 = *((_QWORD *)a2 + 6);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  WebCore::convertDictionary<WebCore::DOMMatrixInit>((uint64_t)v24, this, (JSC::JSCell *)v4);
  if (v26)
    return 0;
  memcpy(__dst, v25, sizeof(__dst));
  v6 = WebCore::DOMMatrixReadOnly::fromMatrixHelper<WebCore::DOMMatrix>((uint64_t)__dst, (uint64_t)v19);
  if (!v21)
  {
    v7 = *(bmalloc::api **)v19;
    *(_QWORD *)v19 = 0;
    v22 = v7;
    v9 = WebCore::toJSNewlyCreated(v6, (uint64_t)this, (uint64_t *)&v22);
    v10 = v22;
    v22 = 0;
    if (v10)
    {
      if (*((_DWORD *)v10 + 2) == 1)
      {
        if (*(_QWORD *)v10)
        {
          *(_QWORD *)(*(_QWORD *)v10 + 8) = 3;
          *(_QWORD *)v10 = 0;
        }
        bmalloc::api::isoDeallocate(v10, v8);
      }
      else
      {
        --*((_DWORD *)v10 + 2);
      }
    }
LABEL_9:
    if (v21 != -1)
      ((void (*)(bmalloc::api **, int *))off_1E325C658[v21])(&v22, v19);
    return v9;
  }
  if (v21 == 1)
  {
    v12 = (WTF::StringImpl *)LOBYTE(v19[0]);
    LOBYTE(v22) = v19[0];
    v13 = v20;
    v20 = 0;
    v23 = v13;
    if (!*((_QWORD *)v5 + 2))
    {
      v14.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v19[0]), (JSC::JSGlobalObject *)&v23);
      JSC::VM::throwException(v5, this, v14);
      v13 = v23;
    }
    v23 = 0;
    if (v13)
    {
      if (*(_DWORD *)v13 == 2)
        WTF::StringImpl::destroy(v13, v12);
      else
        *(_DWORD *)v13 -= 2;
    }
    v9 = 0;
    goto LABEL_9;
  }
  v15 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsDOMMatrixReadOnlyConstructorFunction_fromFloat32Array(v15, v16, v17);
}

uint64_t WebCore::jsDOMMatrixReadOnlyConstructorFunction_fromFloat32Array(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  bmalloc::api *v22;
  _DWORD *v23;
  JSValue v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  JSValue v27;
  WebCore *v28;
  JSC::JSGlobalObject *v29;
  JSC::CallFrame *v30;
  _DWORD *v31;
  int v32[2];
  WTF::StringImpl *v33;
  int v34;
  uint64_t v35;
  int v36;
  bmalloc::api *v37;
  WTF::StringImpl *v38;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v24.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v24);
  }
  v10 = *((_QWORD *)a2 + 6);
  v37 = (bmalloc::api *)*((_QWORD *)this + 7);
  if ((v10 & 0xFFFE000000000002) != 0)
    goto LABEL_18;
  if (*(_BYTE *)(v10 + 5) != 46)
    goto LABEL_18;
  JSC::JSGenericTypedArrayView<JSC::Float32Adaptor>::possiblySharedTypedImpl(v10, v32);
  v11 = *(_DWORD **)v32;
  if (!*(_QWORD *)v32)
    goto LABEL_18;
  v12 = *(_QWORD *)(*(_QWORD *)v32 + 32);
  if (v12)
  {
    v13 = *(_QWORD *)(v12 + 16);
    if (v13)
    {
      if ((v14 = *(_QWORD *)(MEMORY[0x1E0CC10F8] + 56)) == 0
        || !*(_BYTE *)(MEMORY[0x1E0CC10F8] + 34) && *MEMORY[0x1E0CC10F0]
        || (v13 & 0x3FFFFFFFFLL) + v14)
      {
        if (*(_QWORD *)(v12 + 32)
           ? WTF::RefPtr<JSC::SharedArrayBufferContents,WTF::RawPtrTraits<JSC::SharedArrayBufferContents>,WTF::DefaultRefDerefTraits<JSC::SharedArrayBufferContents>>::unspecifiedBoolTypeInstance
           : 0)
        {
          *(_QWORD *)v32 = 0;
          goto LABEL_16;
        }
      }
    }
  }
  if ((*(_BYTE *)(*(_QWORD *)v32 + 6) & 3) != 0)
  {
LABEL_16:
    if (*v11 == 1)
      JSC::ArrayBufferView::operator delete();
    else
      --*v11;
LABEL_18:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v37, 0, "array32", 8, "DOMMatrixReadOnly", 18, a8, "fromFloat32Array", 17, "Float32Array", 13);
    v16 = 0;
    v17 = 1;
    v36 = 1;
LABEL_19:
    ((void (*)(int *, uint64_t *))off_1E325C0C0[v17])(v32, &v35);
    return v16;
  }
  v36 = 0;
  v35 = 0;
  v31 = *(_DWORD **)v32;
  v19 = WebCore::DOMMatrix::fromFloat32Array((uint64_t)&v31, (uint64_t)v32);
  if (!v34)
  {
    v20 = *(_QWORD *)v32;
    *(_QWORD *)v32 = 0;
    v37 = (bmalloc::api *)v20;
    v16 = WebCore::toJSNewlyCreated(v19, (uint64_t)this, (uint64_t *)&v37);
    v22 = v37;
    v37 = 0;
    if (v22)
    {
      if (*((_DWORD *)v22 + 2) == 1)
      {
        if (*(_QWORD *)v22)
        {
          *(_QWORD *)(*(_QWORD *)v22 + 8) = 3;
          *(_QWORD *)v22 = 0;
        }
        bmalloc::api::isoDeallocate(v22, v21);
      }
      else
      {
        --*((_DWORD *)v22 + 2);
      }
    }
LABEL_25:
    if (v34 != -1)
      ((void (*)(bmalloc::api **, int *))off_1E325C658[v34])(&v37, v32);
    v34 = -1;
    v23 = v31;
    v31 = 0;
    if (v23)
    {
      if (*v23 == 1)
        JSC::ArrayBufferView::operator delete();
      else
        --*v23;
    }
    v17 = 0;
    goto LABEL_19;
  }
  if (v34 == 1)
  {
    v25 = (WTF::StringImpl *)LOBYTE(v32[0]);
    LOBYTE(v37) = v32[0];
    v26 = v33;
    v33 = 0;
    v38 = v26;
    if (!*((_QWORD *)v9 + 2))
    {
      v27.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v32[0]), (JSC::JSGlobalObject *)&v38);
      JSC::VM::throwException(v9, this, v27);
      v26 = v38;
    }
    v38 = 0;
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
        WTF::StringImpl::destroy(v26, v25);
      else
        *(_DWORD *)v26 -= 2;
    }
    v16 = 0;
    goto LABEL_25;
  }
  v28 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsDOMMatrixReadOnlyConstructorFunction_fromFloat64Array(v28, v29, v30);
}

uint64_t WebCore::jsDOMMatrixReadOnlyConstructorFunction_fromFloat64Array(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)();
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  bmalloc::api *v21;
  _DWORD *v22;
  JSValue v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  JSValue v26;
  WebCore *v27;
  JSC::JSGlobalObject *v28;
  JSC::CallFrame *v29;
  _DWORD *v30;
  int v31[2];
  WTF::StringImpl *v32;
  int v33;
  uint64_t v34;
  int v35;
  bmalloc::api *v36;
  WTF::StringImpl *v37;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v23.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v23);
  }
  v10 = *((_QWORD *)a2 + 6);
  v36 = (bmalloc::api *)*((_QWORD *)this + 7);
  if ((v10 & 0xFFFE000000000002) != 0)
    goto LABEL_17;
  if (*(_BYTE *)(v10 + 5) != 47)
    goto LABEL_17;
  JSC::JSGenericTypedArrayView<JSC::Float64Adaptor>::possiblySharedTypedImpl(v31, (JSC::JSArrayBufferView *)v10);
  if (!*(_QWORD *)v31)
    goto LABEL_17;
  v11 = *(_QWORD *)(*(_QWORD *)v31 + 32);
  if (v11
    && (v12 = *(_QWORD *)(v11 + 16)) != 0
    && ((v13 = *(_QWORD *)(MEMORY[0x1E0CC10F8] + 56)) == 0
     || !*(_BYTE *)(MEMORY[0x1E0CC10F8] + 34) && *MEMORY[0x1E0CC10F0]
     || (v12 & 0x3FFFFFFFFLL) + v13)
    && (*(_QWORD *)(v11 + 32)
      ? (v14 = WTF::RefPtr<JSC::SharedArrayBufferContents,WTF::RawPtrTraits<JSC::SharedArrayBufferContents>,WTF::DefaultRefDerefTraits<JSC::SharedArrayBufferContents>>::unspecifiedBoolTypeInstance)
      : (v14 = 0),
        v14)
    || (*(_BYTE *)(*(_QWORD *)v31 + 6) & 3) != 0)
  {
    if (**(_DWORD **)v31 == 1)
      JSC::ArrayBufferView::operator delete();
    else
      --**(_DWORD **)v31;
LABEL_17:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v36, 0, "array64", 8, "DOMMatrixReadOnly", 18, a8, "fromFloat64Array", 17, "Float64Array", 13);
    v15 = 0;
    v16 = 1;
    v35 = 1;
LABEL_18:
    ((void (*)(int *, uint64_t *))off_1E325C0D0[v16])(v31, &v34);
    return v15;
  }
  v35 = 0;
  v34 = 0;
  v30 = *(_DWORD **)v31;
  v18 = WebCore::DOMMatrix::fromFloat64Array((uint64_t)&v30, (uint64_t)v31);
  if (!v33)
  {
    v19 = *(_QWORD *)v31;
    *(_QWORD *)v31 = 0;
    v36 = (bmalloc::api *)v19;
    v15 = WebCore::toJSNewlyCreated(v18, (uint64_t)this, (uint64_t *)&v36);
    v21 = v36;
    v36 = 0;
    if (v21)
    {
      if (*((_DWORD *)v21 + 2) == 1)
      {
        if (*(_QWORD *)v21)
        {
          *(_QWORD *)(*(_QWORD *)v21 + 8) = 3;
          *(_QWORD *)v21 = 0;
        }
        bmalloc::api::isoDeallocate(v21, v20);
      }
      else
      {
        --*((_DWORD *)v21 + 2);
      }
    }
LABEL_24:
    if (v33 != -1)
      ((void (*)(bmalloc::api **, int *))off_1E325C658[v33])(&v36, v31);
    v33 = -1;
    v22 = v30;
    v30 = 0;
    if (v22)
    {
      if (*v22 == 1)
        JSC::ArrayBufferView::operator delete();
      else
        --*v22;
    }
    v16 = 0;
    goto LABEL_18;
  }
  if (v33 == 1)
  {
    v24 = (WTF::StringImpl *)LOBYTE(v31[0]);
    LOBYTE(v36) = v31[0];
    v25 = v32;
    v32 = 0;
    v37 = v25;
    if (!*((_QWORD *)v9 + 2))
    {
      v26.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v31[0]), (JSC::JSGlobalObject *)&v37);
      JSC::VM::throwException(v9, this, v26);
      v25 = v37;
    }
    v37 = 0;
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, v24);
      else
        *(_DWORD *)v25 -= 2;
    }
    v15 = 0;
    goto LABEL_24;
  }
  v27 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsDOMMatrixReadOnlyPrototypeFunction_translate(v27, v28, v29);
}

_BYTE *WebCore::jsDOMMatrixReadOnlyPrototypeFunction_translate(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  double v15;
  double v16;
  unint64_t v17;
  JSC::VM *v18;
  unint64_t v19;
  JSC::VM *v20;
  double v21;
  JSC::VM *v22;
  char v23;
  uint64_t v24;
  WebCore::JSDOMGlobalObject *v25;
  uint64_t *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  float64x2_t v33;
  float64x2_t v34;
  float64x2_t v35;
  float64x2_t v36;
  float64x2_t v37;
  uint64_t v38;
  unsigned int v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char **v44;
  int v45;
  unint64_t v46;
  WebCore::JSDOMMatrix *v47;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v50;
  void *v51;
  bmalloc::api *v52;
  char hasExceptionsAfterHandlingTraps;
  char v55;
  JSC::VM *v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  JSC::VM *v64;
  bmalloc::api *v65;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v64 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v64, "DOMMatrixReadOnly", "translate");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMMatrixReadOnly::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMMatrixReadOnly::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v64, "DOMMatrixReadOnly", "translate");
  v12 = *(_QWORD *)(v5 + 24);
  LODWORD(v13) = *((_DWORD *)a2 + 8);
  if ((_DWORD)v13 == 1)
  {
    v60 = 0.0;
    v62 = 0.0;
    v59 = 0.0;
  }
  else
  {
    v14 = *((_QWORD *)a2 + 6);
    v15 = 0.0;
    v16 = 0.0;
    if (v14 != 10)
    {
      v65 = (bmalloc::api *)*((_QWORD *)a2 + 6);
      if (v14 >= 0xFFFE000000000000)
      {
        v16 = (double)(int)v14;
      }
      else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v56 = v4;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v65, this);
        v4 = v56;
        v16 = v57;
        v15 = 0.0;
      }
      else
      {
        *(_QWORD *)&v16 = v14 - 0x2000000000000;
      }
      if (*((_DWORD *)v4 + 20))
      {
        v63 = v16;
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
        v16 = v63;
        v15 = 0.0;
        if ((hasExceptionsAfterHandlingTraps & 1) != 0)
          return 0;
      }
      LODWORD(v13) = *((_DWORD *)a2 + 8);
    }
    v13 = (int)v13;
    v62 = v16;
    if ((unint64_t)((int)v13 - 3) <= 0xFFFFFFFFFFFFFFFDLL)
    {
      v17 = *((_QWORD *)a2 + 7);
      if (v17 != 10)
      {
        v65 = (bmalloc::api *)*((_QWORD *)a2 + 7);
        v18 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v17 >= 0xFFFE000000000000)
        {
          v15 = (double)(int)v17;
        }
        else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v65, this);
        }
        else
        {
          *(_QWORD *)&v15 = v17 - 0x2000000000000;
        }
        if (*((_DWORD *)v18 + 20))
        {
          v61 = v15;
          v55 = JSC::VM::hasExceptionsAfterHandlingTraps(v18);
          v15 = v61;
          if ((v55 & 1) != 0)
            return 0;
        }
        v13 = *((int *)a2 + 8);
      }
    }
    v60 = v15;
    if ((unint64_t)(v13 - 4) > 0xFFFFFFFFFFFFFFFCLL || (v19 = *((_QWORD *)a2 + 8), v19 == 10))
    {
      v59 = 0.0;
    }
    else
    {
      v65 = (bmalloc::api *)*((_QWORD *)a2 + 8);
      v20 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v19 >= 0xFFFE000000000000)
      {
        v21 = (double)(int)v19;
      }
      else if (v19 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v65, this);
        v21 = v58;
      }
      else
      {
        *(_QWORD *)&v21 = v19 - 0x2000000000000;
      }
      v59 = v21;
      if (*((_DWORD *)v20 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v20) & 1) != 0)
        return 0;
    }
  }
  v22 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v23 = *(_BYTE *)(v12 + 144);
  v24 = bmalloc::api::isoAllocate();
  v26 = (uint64_t *)v24;
  *(_QWORD *)v24 = 0;
  *(_DWORD *)(v24 + 8) = 1;
  v27 = *(_OWORD *)(v12 + 64);
  v29 = *(_OWORD *)(v12 + 16);
  v28 = *(_OWORD *)(v12 + 32);
  *(_OWORD *)(v24 + 48) = *(_OWORD *)(v12 + 48);
  *(_OWORD *)(v24 + 64) = v27;
  *(_OWORD *)(v24 + 16) = v29;
  *(_OWORD *)(v24 + 32) = v28;
  v30 = *(_OWORD *)(v12 + 80);
  v31 = *(_OWORD *)(v12 + 96);
  v32 = *(_OWORD *)(v12 + 128);
  *(_OWORD *)(v24 + 112) = *(_OWORD *)(v12 + 112);
  *(_OWORD *)(v24 + 128) = v32;
  *(_OWORD *)(v24 + 80) = v30;
  *(_OWORD *)(v24 + 96) = v31;
  v33 = *(float64x2_t *)(v24 + 32);
  v34 = *(float64x2_t *)(v24 + 96);
  v35 = *(float64x2_t *)(v24 + 128);
  v36 = vaddq_f64(*(float64x2_t *)(v24 + 112), vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(*(float64x2_t *)(v24 + 48), v60), *(float64x2_t *)(v24 + 16), v62), *(float64x2_t *)(v24 + 80), v59));
  v37 = vmulq_n_f64(*(float64x2_t *)(v24 + 64), v60);
  *(_BYTE *)(v24 + 144) = v23;
  *(float64x2_t *)(v24 + 112) = v36;
  *(float64x2_t *)(v24 + 128) = vaddq_f64(v35, vmlaq_n_f64(vmlaq_n_f64(v37, v33, v62), v34, v59));
  if (v59 != 0.0)
    *(_BYTE *)(v24 + 144) = 0;
  v65 = (bmalloc::api *)v24;
  *(_DWORD *)(v24 + 8) = 1;
  v38 = *((_QWORD *)v22 + 412);
  if (v38)
  {
    v39 = *(_DWORD *)(v38 - 8);
    v40 = ((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) >> 22);
    v41 = 9 * ((v40 + ~(v40 << 13)) ^ ((v40 + ~(v40 << 13)) >> 8));
    v42 = (v41 ^ (v41 >> 15)) + ~((v41 ^ (v41 >> 15)) << 27);
    v43 = v39 & ((v42 >> 31) ^ v42);
    v44 = *(char ***)(v38 + 16 * v43);
    if (v44 == &WebCore::JSDOMMatrix::s_info)
    {
LABEL_41:
      v46 = *(_QWORD *)(v38 + 16 * v43 + 8);
      if (v46)
        goto LABEL_43;
    }
    else
    {
      v45 = 1;
      while (v44)
      {
        v43 = ((_DWORD)v43 + v45) & v39;
        v44 = *(char ***)(v38 + 16 * v43);
        ++v45;
        if (v44 == &WebCore::JSDOMMatrix::s_info)
          goto LABEL_41;
      }
    }
  }
  v47 = (WebCore::JSDOMMatrix *)*((_QWORD *)v22 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSDOMMatrix::createPrototype(v47, v22, v25);
  Structure = WebCore::JSDOMMatrix::createStructure((uint64_t *)v47, (uint64_t)v22, Prototype);
  v46 = WebCore::cacheDOMStructure((JSCell *)v22, Structure, (uint64_t)&WebCore::JSDOMMatrix::s_info);
LABEL_43:
  v50 = WebCore::JSDOMMatrix::create(v46, v22, (uint64_t *)&v65);
  WebCore::cacheWrapper<WebCore::DOMMatrix,WebCore::JSDOMMatrix>(*((_QWORD *)v22 + 415), v26, v50);
  v52 = v65;
  v65 = 0;
  if (v52)
  {
    if (*((_DWORD *)v52 + 2) == 1)
    {
      if (*(_QWORD *)v52)
      {
        *(_QWORD *)(*(_QWORD *)v52 + 8) = 3;
        *(_QWORD *)v52 = 0;
      }
      bmalloc::api::isoDeallocate(v52, v51);
    }
    else
    {
      --*((_DWORD *)v52 + 2);
    }
  }
  return (_BYTE *)v50;
}

_BYTE *WebCore::jsDOMMatrixReadOnlyPrototypeFunction_scale(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  double v15;
  char v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  unint64_t v22;
  unint64_t v23;
  JSC::VM *v24;
  unint64_t v25;
  JSC::VM *v26;
  unint64_t v27;
  JSC::VM *v28;
  unint64_t v29;
  JSC::VM *v30;
  JSC::VM *v31;
  WebCore::JSDOMGlobalObject *v32;
  uint64_t *v33;
  uint64_t v34;
  unsigned int v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char **v40;
  int v41;
  unint64_t v42;
  WebCore::JSDOMMatrix *v43;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v46;
  void *v47;
  bmalloc::api *v48;
  JSC::VM *v50;
  char hasExceptionsAfterHandlingTraps;
  double v52;
  JSC::VM *v53;
  double v54;
  JSC::VM *v55;
  double v56;
  JSC::VM *v57;
  double v58;
  double v59;
  double v60;
  double v61;
  JSC::VM *v62;
  bmalloc::api *v63;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v62 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v62, "DOMMatrixReadOnly", "scale");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMMatrixReadOnly::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMMatrixReadOnly::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v62, "DOMMatrixReadOnly", "scale");
  v12 = *(_QWORD *)(v5 + 24);
  LODWORD(v13) = *((_DWORD *)a2 + 8);
  if ((_DWORD)v13 == 1)
  {
    v16 = 0;
    v17 = 1.0;
    v18 = 0.0;
    v15 = 1.0;
    v19 = 0.0;
    v20 = 0.0;
    v21 = 0.0;
  }
  else
  {
    v14 = *((_QWORD *)a2 + 6);
    if (v14 == 10)
    {
      v15 = 1.0;
    }
    else
    {
      v63 = (bmalloc::api *)*((_QWORD *)a2 + 6);
      if (v14 >= 0xFFFE000000000000)
      {
        v15 = (double)(int)v14;
      }
      else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v63, this);
        v15 = v52;
      }
      else
      {
        *(_QWORD *)&v15 = v14 - 0x2000000000000;
      }
      if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
        return 0;
      LODWORD(v13) = *((_DWORD *)a2 + 8);
    }
    v13 = (int)v13;
    v19 = 0.0;
    if ((unint64_t)((int)v13 - 3) > 0xFFFFFFFFFFFFFFFDLL)
    {
      v16 = 0;
    }
    else
    {
      v22 = *((_QWORD *)a2 + 7);
      if (v22 == 10)
      {
        v16 = 0;
      }
      else
      {
        v63 = (bmalloc::api *)*((_QWORD *)a2 + 7);
        v50 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v22 >= 0xFFFE000000000000)
        {
          v19 = (double)(int)v22;
        }
        else if (v22 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v63, this);
          v19 = v60;
        }
        else
        {
          *(_QWORD *)&v19 = v22 - 0x2000000000000;
        }
        if (*((_DWORD *)v50 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v50) & 1) != 0)
          return 0;
        v13 = *((int *)a2 + 8);
        v16 = 1;
      }
    }
    v17 = 1.0;
    if ((unint64_t)(v13 - 4) <= 0xFFFFFFFFFFFFFFFCLL)
    {
      v23 = *((_QWORD *)a2 + 8);
      if (v23 != 10)
      {
        v63 = (bmalloc::api *)*((_QWORD *)a2 + 8);
        v24 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v23 >= 0xFFFE000000000000)
        {
          v17 = (double)(int)v23;
        }
        else if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v53 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v63, this);
          v24 = v53;
          v17 = v54;
        }
        else
        {
          *(_QWORD *)&v17 = v23 - 0x2000000000000;
        }
        if (*((_DWORD *)v24 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v24) & 1) != 0)
          return 0;
        v13 = *((int *)a2 + 8);
      }
    }
    v18 = 0.0;
    if ((unint64_t)(v13 - 5) > 0xFFFFFFFFFFFFFFFBLL || (v25 = *((_QWORD *)a2 + 9), v25 == 10))
    {
      v20 = 0.0;
    }
    else
    {
      v63 = (bmalloc::api *)*((_QWORD *)a2 + 9);
      v26 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v25 >= 0xFFFE000000000000)
      {
        v20 = (double)(int)v25;
      }
      else if (v25 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v55 = (JSC::VM *)*((_QWORD *)this + 7);
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v63, this);
        v26 = v55;
        v20 = v56;
      }
      else
      {
        *(_QWORD *)&v20 = v25 - 0x2000000000000;
      }
      if (*((_DWORD *)v26 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v26) & 1) != 0)
        return 0;
      v13 = *((int *)a2 + 8);
    }
    if ((unint64_t)(v13 - 6) <= 0xFFFFFFFFFFFFFFFALL)
    {
      v27 = *((_QWORD *)a2 + 10);
      if (v27 != 10)
      {
        v63 = (bmalloc::api *)*((_QWORD *)a2 + 10);
        v28 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v27 >= 0xFFFE000000000000)
        {
          v18 = (double)(int)v27;
        }
        else if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v57 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v63, this);
          v28 = v57;
          v18 = v58;
        }
        else
        {
          *(_QWORD *)&v18 = v27 - 0x2000000000000;
        }
        if (*((_DWORD *)v28 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v28) & 1) != 0)
          return 0;
        v13 = *((int *)a2 + 8);
      }
    }
    v21 = 0.0;
    if ((unint64_t)(v13 - 7) <= 0xFFFFFFFFFFFFFFF9)
    {
      v29 = *((_QWORD *)a2 + 11);
      if (v29 != 10)
      {
        v63 = (bmalloc::api *)*((_QWORD *)a2 + 11);
        v30 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v29 >= 0xFFFE000000000000)
        {
          v21 = (double)(int)v29;
        }
        else if (v29 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v63, this);
          v21 = v59;
        }
        else
        {
          *(_QWORD *)&v21 = v29 - 0x2000000000000;
        }
        if (*((_DWORD *)v30 + 20))
        {
          v61 = v21;
          hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v30);
          v21 = v61;
          if ((hasExceptionsAfterHandlingTraps & 1) != 0)
            return 0;
        }
      }
    }
  }
  v31 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  WebCore::DOMMatrixReadOnly::scale(v12, v19, v16, (uint64_t *)&v63, v15, v17, v20, v18, v21);
  v33 = (uint64_t *)v63;
  v34 = *((_QWORD *)v31 + 412);
  if (v34)
  {
    v35 = *(_DWORD *)(v34 - 8);
    v36 = ((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) >> 22);
    v37 = 9 * ((v36 + ~(v36 << 13)) ^ ((v36 + ~(v36 << 13)) >> 8));
    v38 = (v37 ^ (v37 >> 15)) + ~((v37 ^ (v37 >> 15)) << 27);
    v39 = v35 & ((v38 >> 31) ^ v38);
    v40 = *(char ***)(v34 + 16 * v39);
    if (v40 == &WebCore::JSDOMMatrix::s_info)
    {
LABEL_58:
      v42 = *(_QWORD *)(v34 + 16 * v39 + 8);
      if (v42)
        goto LABEL_60;
    }
    else
    {
      v41 = 1;
      while (v40)
      {
        v39 = ((_DWORD)v39 + v41) & v35;
        v40 = *(char ***)(v34 + 16 * v39);
        ++v41;
        if (v40 == &WebCore::JSDOMMatrix::s_info)
          goto LABEL_58;
      }
    }
  }
  v43 = (WebCore::JSDOMMatrix *)*((_QWORD *)v31 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSDOMMatrix::createPrototype(v43, v31, v32);
  Structure = WebCore::JSDOMMatrix::createStructure((uint64_t *)v43, (uint64_t)v31, Prototype);
  v42 = WebCore::cacheDOMStructure((JSCell *)v31, Structure, (uint64_t)&WebCore::JSDOMMatrix::s_info);
LABEL_60:
  v46 = WebCore::JSDOMMatrix::create(v42, v31, (uint64_t *)&v63);
  WebCore::cacheWrapper<WebCore::DOMMatrix,WebCore::JSDOMMatrix>(*((_QWORD *)v31 + 415), v33, v46);
  v48 = v63;
  v63 = 0;
  if (v48)
  {
    if (*((_DWORD *)v48 + 2) == 1)
    {
      if (*(_QWORD *)v48)
      {
        *(_QWORD *)(*(_QWORD *)v48 + 8) = 3;
        *(_QWORD *)v48 = 0;
      }
      bmalloc::api::isoDeallocate(v48, v47);
    }
    else
    {
      --*((_DWORD *)v48 + 2);
    }
  }
  return (_BYTE *)v46;
}

_BYTE *WebCore::jsDOMMatrixReadOnlyPrototypeFunction_scale3d(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::DOMMatrixReadOnly *v12;
  uint64_t v13;
  unint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  unint64_t v19;
  JSC::VM *v20;
  unint64_t v21;
  JSC::VM *v22;
  unint64_t v23;
  JSC::VM *v24;
  JSC::VM *v25;
  WebCore::JSDOMGlobalObject *v26;
  uint64_t *v27;
  uint64_t v28;
  unsigned int v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char **v34;
  int v35;
  unint64_t v36;
  WebCore::JSDOMMatrix *v37;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v40;
  void *v41;
  bmalloc::api *v42;
  char hasExceptionsAfterHandlingTraps;
  JSC::VM *v45;
  double v46;
  JSC::VM *v47;
  double v48;
  JSC::VM *v49;
  double v50;
  double v51;
  double v52;
  JSC::VM *v53;
  bmalloc::api *v54;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v53 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v53, "DOMMatrixReadOnly", "scale3d");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMMatrixReadOnly::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMMatrixReadOnly::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v53, "DOMMatrixReadOnly", "scale3d");
  v12 = *(WebCore::DOMMatrixReadOnly **)(v5 + 24);
  LODWORD(v13) = *((_DWORD *)a2 + 8);
  if ((_DWORD)v13 == 1)
  {
    v15 = 1.0;
    v16 = 0.0;
    v17 = 0.0;
    v18 = 0.0;
  }
  else
  {
    v14 = *((_QWORD *)a2 + 6);
    if (v14 == 10)
    {
      v15 = 1.0;
    }
    else
    {
      v54 = (bmalloc::api *)*((_QWORD *)a2 + 6);
      if (v14 >= 0xFFFE000000000000)
      {
        v15 = (double)(int)v14;
      }
      else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v45 = v4;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v54, this);
        v4 = v45;
        v15 = v46;
      }
      else
      {
        *(_QWORD *)&v15 = v14 - 0x2000000000000;
      }
      if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
        return 0;
      LODWORD(v13) = *((_DWORD *)a2 + 8);
    }
    v13 = (int)v13;
    v16 = 0.0;
    if ((unint64_t)((int)v13 - 3) > 0xFFFFFFFFFFFFFFFDLL || (v19 = *((_QWORD *)a2 + 7), v19 == 10))
    {
      v17 = 0.0;
    }
    else
    {
      v54 = (bmalloc::api *)*((_QWORD *)a2 + 7);
      v20 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v19 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v19;
      }
      else if (v19 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v47 = (JSC::VM *)*((_QWORD *)this + 7);
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v54, this);
        v20 = v47;
        v17 = v48;
      }
      else
      {
        *(_QWORD *)&v17 = v19 - 0x2000000000000;
      }
      if (*((_DWORD *)v20 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v20) & 1) != 0)
        return 0;
      v13 = *((int *)a2 + 8);
    }
    if ((unint64_t)(v13 - 4) <= 0xFFFFFFFFFFFFFFFCLL)
    {
      v21 = *((_QWORD *)a2 + 8);
      if (v21 != 10)
      {
        v54 = (bmalloc::api *)*((_QWORD *)a2 + 8);
        v22 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v21 >= 0xFFFE000000000000)
        {
          v16 = (double)(int)v21;
        }
        else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v49 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v54, this);
          v22 = v49;
          v16 = v50;
        }
        else
        {
          *(_QWORD *)&v16 = v21 - 0x2000000000000;
        }
        if (*((_DWORD *)v22 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v22) & 1) != 0)
          return 0;
        v13 = *((int *)a2 + 8);
      }
    }
    v18 = 0.0;
    if ((unint64_t)(v13 - 5) <= 0xFFFFFFFFFFFFFFFBLL)
    {
      v23 = *((_QWORD *)a2 + 9);
      if (v23 != 10)
      {
        v54 = (bmalloc::api *)*((_QWORD *)a2 + 9);
        v24 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v23 >= 0xFFFE000000000000)
        {
          v18 = (double)(int)v23;
        }
        else if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v54, this);
          v18 = v51;
        }
        else
        {
          *(_QWORD *)&v18 = v23 - 0x2000000000000;
        }
        if (*((_DWORD *)v24 + 20))
        {
          v52 = v18;
          hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v24);
          v18 = v52;
          if ((hasExceptionsAfterHandlingTraps & 1) != 0)
            return 0;
        }
      }
    }
  }
  v25 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  WebCore::DOMMatrixReadOnly::scale3d(v12, v15, v17, v16, v18, &v54);
  v27 = (uint64_t *)v54;
  v28 = *((_QWORD *)v25 + 412);
  if (v28)
  {
    v29 = *(_DWORD *)(v28 - 8);
    v30 = ((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) >> 22);
    v31 = 9 * ((v30 + ~(v30 << 13)) ^ ((v30 + ~(v30 << 13)) >> 8));
    v32 = (v31 ^ (v31 >> 15)) + ~((v31 ^ (v31 >> 15)) << 27);
    v33 = v29 & ((v32 >> 31) ^ v32);
    v34 = *(char ***)(v28 + 16 * v33);
    if (v34 == &WebCore::JSDOMMatrix::s_info)
    {
LABEL_48:
      v36 = *(_QWORD *)(v28 + 16 * v33 + 8);
      if (v36)
        goto LABEL_50;
    }
    else
    {
      v35 = 1;
      while (v34)
      {
        v33 = ((_DWORD)v33 + v35) & v29;
        v34 = *(char ***)(v28 + 16 * v33);
        ++v35;
        if (v34 == &WebCore::JSDOMMatrix::s_info)
          goto LABEL_48;
      }
    }
  }
  v37 = (WebCore::JSDOMMatrix *)*((_QWORD *)v25 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSDOMMatrix::createPrototype(v37, v25, v26);
  Structure = WebCore::JSDOMMatrix::createStructure((uint64_t *)v37, (uint64_t)v25, Prototype);
  v36 = WebCore::cacheDOMStructure((JSCell *)v25, Structure, (uint64_t)&WebCore::JSDOMMatrix::s_info);
LABEL_50:
  v40 = WebCore::JSDOMMatrix::create(v36, v25, (uint64_t *)&v54);
  WebCore::cacheWrapper<WebCore::DOMMatrix,WebCore::JSDOMMatrix>(*((_QWORD *)v25 + 415), v27, v40);
  v42 = v54;
  v54 = 0;
  if (v42)
  {
    if (*((_DWORD *)v42 + 2) == 1)
    {
      if (*(_QWORD *)v42)
      {
        *(_QWORD *)(*(_QWORD *)v42 + 8) = 3;
        *(_QWORD *)v42 = 0;
      }
      bmalloc::api::isoDeallocate(v42, v41);
    }
    else
    {
      --*((_DWORD *)v42 + 2);
    }
  }
  return (_BYTE *)v40;
}

_BYTE *WebCore::jsDOMMatrixReadOnlyPrototypeFunction_scaleNonUniform(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  int v13;
  unint64_t v14;
  double v15;
  unint64_t v16;
  JSC::VM *v17;
  double v18;
  JSC::VM *v19;
  char v20;
  WebCore::JSDOMGlobalObject *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  float64x2_t v29;
  float64x2_t v30;
  float64x2_t v31;
  float64x2_t v32;
  float64x2_t v33;
  float64x2_t v34;
  float64x2_t v35;
  float64x2_t v36;
  float64x2_t v37;
  float64x2_t v38;
  float64x2_t v39;
  float64x2_t v40;
  float64x2_t v41;
  uint64_t v42;
  unsigned int v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char **v48;
  int v49;
  unint64_t v50;
  WebCore::JSDOMMatrix *v51;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v54;
  void *v55;
  bmalloc::api *v56;
  char hasExceptionsAfterHandlingTraps;
  JSC::VM *v59;
  double v60;
  double v61;
  double v62;
  double v63;
  JSC::VM *v64;
  bmalloc::api *v65;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v64 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v64, "DOMMatrixReadOnly", "scaleNonUniform");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMMatrixReadOnly::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMMatrixReadOnly::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v64, "DOMMatrixReadOnly", "scaleNonUniform");
  v12 = *(_QWORD *)(v5 + 24);
  v13 = *((_DWORD *)a2 + 8);
  if (v13 == 1)
  {
    v62 = 1.0;
    v61 = 1.0;
    goto LABEL_28;
  }
  v14 = *((_QWORD *)a2 + 6);
  v15 = 1.0;
  if (v14 != 10)
  {
    v65 = (bmalloc::api *)*((_QWORD *)a2 + 6);
    if (v14 >= 0xFFFE000000000000)
    {
      v15 = (double)(int)v14;
    }
    else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v59 = v4;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v65, this);
      v4 = v59;
    }
    else
    {
      *(_QWORD *)&v15 = v14 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20))
    {
      v63 = v15;
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
      v15 = v63;
      if ((hasExceptionsAfterHandlingTraps & 1) != 0)
        return 0;
    }
    v13 = *((_DWORD *)a2 + 8);
  }
  v62 = v15;
  if ((unint64_t)(v13 - 3) > 0xFFFFFFFFFFFFFFFDLL || (v16 = *((_QWORD *)a2 + 7), v16 == 10))
  {
    v61 = 1.0;
    goto LABEL_28;
  }
  v65 = (bmalloc::api *)*((_QWORD *)a2 + 7);
  v17 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v16 >= 0xFFFE000000000000)
  {
    v18 = (double)(int)v16;
  }
  else
  {
    if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v65, this);
      v61 = v60;
      goto LABEL_27;
    }
    *(_QWORD *)&v18 = v16 - 0x2000000000000;
  }
  v61 = v18;
LABEL_27:
  if (*((_DWORD *)v17 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) != 0)
    return 0;
LABEL_28:
  v19 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v20 = *(_BYTE *)(v12 + 144);
  v22 = bmalloc::api::isoAllocate();
  *(_QWORD *)v22 = 0;
  *(_DWORD *)(v22 + 8) = 1;
  v23 = *(_OWORD *)(v12 + 64);
  v25 = *(_OWORD *)(v12 + 16);
  v24 = *(_OWORD *)(v12 + 32);
  *(_OWORD *)(v22 + 48) = *(_OWORD *)(v12 + 48);
  *(_OWORD *)(v22 + 64) = v23;
  *(_OWORD *)(v22 + 16) = v25;
  *(_OWORD *)(v22 + 32) = v24;
  v26 = *(_OWORD *)(v12 + 80);
  v27 = *(_OWORD *)(v12 + 96);
  v28 = *(_OWORD *)(v12 + 128);
  *(_OWORD *)(v22 + 112) = *(_OWORD *)(v12 + 112);
  *(_OWORD *)(v22 + 128) = v28;
  *(_OWORD *)(v22 + 80) = v26;
  *(_OWORD *)(v22 + 96) = v27;
  v29 = *(float64x2_t *)(v22 + 48);
  v30 = *(float64x2_t *)(v22 + 64);
  v31 = *(float64x2_t *)(v22 + 16);
  v32 = *(float64x2_t *)(v22 + 32);
  v33 = *(float64x2_t *)(v22 + 80);
  v34 = *(float64x2_t *)(v22 + 96);
  v35 = vaddq_f64(*(float64x2_t *)(v22 + 112), vmlaq_f64(vmlaq_f64(vmulq_f64(v29, (float64x2_t)0), (float64x2_t)0, v31), (float64x2_t)0, v33));
  v36 = vmulq_n_f64(v31, v62);
  v37 = vmulq_n_f64(v29, v61);
  v38 = (float64x2_t)vdupq_n_s64(0x8000000000000000);
  v39 = vaddq_f64(*(float64x2_t *)(v22 + 128), vmlaq_f64(vmlaq_f64(vmulq_f64(v30, (float64x2_t)0), (float64x2_t)0, v32), (float64x2_t)0, v34));
  v40 = vmulq_n_f64(v32, v62);
  *(_BYTE *)(v22 + 144) = v20;
  *(float64x2_t *)(v22 + 16) = v36;
  *(float64x2_t *)(v22 + 32) = v40;
  v41 = vmulq_n_f64(v30, v61);
  *(float64x2_t *)(v22 + 48) = v37;
  *(float64x2_t *)(v22 + 64) = v41;
  *(float64x2_t *)(v22 + 112) = vaddq_f64(v35, vmlaq_f64(vmlaq_f64(vmulq_f64(v37, v38), v38, v36), v38, v33));
  *(float64x2_t *)(v22 + 128) = vaddq_f64(v39, vmlaq_f64(vmlaq_f64(vmulq_f64(v41, v38), v38, v40), v38, v34));
  v65 = (bmalloc::api *)v22;
  *(_DWORD *)(v22 + 8) = 1;
  v42 = *((_QWORD *)v19 + 412);
  if (v42)
  {
    v43 = *(_DWORD *)(v42 - 8);
    v44 = ((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) >> 22);
    v45 = 9 * ((v44 + ~(v44 << 13)) ^ ((v44 + ~(v44 << 13)) >> 8));
    v46 = (v45 ^ (v45 >> 15)) + ~((v45 ^ (v45 >> 15)) << 27);
    v47 = v43 & ((v46 >> 31) ^ v46);
    v48 = *(char ***)(v42 + 16 * v47);
    if (v48 == &WebCore::JSDOMMatrix::s_info)
    {
LABEL_33:
      v50 = *(_QWORD *)(v42 + 16 * v47 + 8);
      if (v50)
        goto LABEL_35;
    }
    else
    {
      v49 = 1;
      while (v48)
      {
        v47 = ((_DWORD)v47 + v49) & v43;
        v48 = *(char ***)(v42 + 16 * v47);
        ++v49;
        if (v48 == &WebCore::JSDOMMatrix::s_info)
          goto LABEL_33;
      }
    }
  }
  v51 = (WebCore::JSDOMMatrix *)*((_QWORD *)v19 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSDOMMatrix::createPrototype(v51, v19, v21);
  Structure = WebCore::JSDOMMatrix::createStructure((uint64_t *)v51, (uint64_t)v19, Prototype);
  v50 = WebCore::cacheDOMStructure((JSCell *)v19, Structure, (uint64_t)&WebCore::JSDOMMatrix::s_info);
LABEL_35:
  v54 = WebCore::JSDOMMatrix::create(v50, v19, (uint64_t *)&v65);
  WebCore::cacheWrapper<WebCore::DOMMatrix,WebCore::JSDOMMatrix>(*((_QWORD *)v19 + 415), (uint64_t *)v22, v54);
  v56 = v65;
  v65 = 0;
  if (v56)
  {
    if (*((_DWORD *)v56 + 2) == 1)
    {
      if (*(_QWORD *)v56)
      {
        *(_QWORD *)(*(_QWORD *)v56 + 8) = 3;
        *(_QWORD *)v56 = 0;
      }
      bmalloc::api::isoDeallocate(v56, v55);
    }
    else
    {
      --*((_DWORD *)v56 + 2);
    }
  }
  return (_BYTE *)v54;
}

_BYTE *WebCore::jsDOMMatrixReadOnlyPrototypeFunction_rotate(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  double v15;
  double v16;
  unint64_t v17;
  char v18;
  double v19;
  unint64_t v20;
  char v21;
  JSC::VM *v22;
  WebCore::JSDOMGlobalObject *v23;
  uint64_t *v24;
  uint64_t v25;
  unsigned int v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char **v31;
  int v32;
  unint64_t v33;
  WebCore::JSDOMMatrix *v34;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v37;
  void *v38;
  bmalloc::api *v39;
  JSC::VM *v41;
  JSC::VM *v42;
  JSC::VM *v43;
  double v44;
  char v45;
  char hasExceptionsAfterHandlingTraps;
  JSC::VM *v47;
  double v48;
  JSC::JSGlobalObject *v49;
  char v50;
  double v51;
  JSC::VM *v52;
  bmalloc::api *v53;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v52 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v52, "DOMMatrixReadOnly", "rotate");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMMatrixReadOnly::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMMatrixReadOnly::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v52, "DOMMatrixReadOnly", "rotate");
  v12 = *(_QWORD *)(v5 + 24);
  LODWORD(v13) = *((_DWORD *)a2 + 8);
  if ((_DWORD)v13 == 1)
  {
    v18 = 0;
    v21 = 0;
    v15 = 0.0;
    v16 = 0.0;
    v19 = 0.0;
  }
  else
  {
    v14 = *((_QWORD *)a2 + 6);
    v15 = 0.0;
    v16 = 0.0;
    if (v14 != 10)
    {
      v53 = (bmalloc::api *)*((_QWORD *)a2 + 6);
      if (v14 >= 0xFFFE000000000000)
      {
        v16 = (double)(int)v14;
      }
      else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v43 = v4;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v53, this);
        v4 = v43;
        v16 = v44;
      }
      else
      {
        *(_QWORD *)&v16 = v14 - 0x2000000000000;
      }
      if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
        return 0;
      LODWORD(v13) = *((_DWORD *)a2 + 8);
    }
    v13 = (int)v13;
    if ((unint64_t)((int)v13 - 3) > 0xFFFFFFFFFFFFFFFDLL)
    {
      v18 = 0;
    }
    else
    {
      v17 = *((_QWORD *)a2 + 7);
      if (v17 == 10)
      {
        v18 = 0;
      }
      else
      {
        v53 = (bmalloc::api *)*((_QWORD *)a2 + 7);
        v41 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v17 >= 0xFFFE000000000000)
        {
          v15 = (double)(int)v17;
        }
        else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v47 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v53, this);
          v41 = v47;
          v15 = v48;
        }
        else
        {
          *(_QWORD *)&v15 = v17 - 0x2000000000000;
        }
        if (*((_DWORD *)v41 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v41) & 1) != 0)
          return 0;
        v13 = *((int *)a2 + 8);
        v18 = 1;
      }
    }
    v19 = 0.0;
    if ((unint64_t)(v13 - 4) > 0xFFFFFFFFFFFFFFFCLL)
    {
      v21 = 0;
    }
    else
    {
      v20 = *((_QWORD *)a2 + 8);
      if (v20 == 10)
      {
        v21 = 0;
      }
      else
      {
        v53 = (bmalloc::api *)*((_QWORD *)a2 + 8);
        v42 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v20 >= 0xFFFE000000000000)
        {
          v19 = (double)(int)v20;
        }
        else if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v49 = this;
          v50 = v18;
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v53, v49);
          v18 = v50;
        }
        else
        {
          *(_QWORD *)&v19 = v20 - 0x2000000000000;
        }
        if (*((_DWORD *)v42 + 20))
        {
          v45 = v18;
          v51 = v19;
          hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v42);
          v19 = v51;
          v18 = v45;
          if ((hasExceptionsAfterHandlingTraps & 1) != 0)
            return 0;
        }
        v21 = 1;
      }
    }
  }
  v22 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  WebCore::DOMMatrixReadOnly::rotate(v12, v15, v18, v19, v21, &v53, v16);
  v24 = (uint64_t *)v53;
  v25 = *((_QWORD *)v22 + 412);
  if (v25)
  {
    v26 = *(_DWORD *)(v25 - 8);
    v27 = ((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) >> 22);
    v28 = 9 * ((v27 + ~(v27 << 13)) ^ ((v27 + ~(v27 << 13)) >> 8));
    v29 = (v28 ^ (v28 >> 15)) + ~((v28 ^ (v28 >> 15)) << 27);
    v30 = v26 & ((v29 >> 31) ^ v29);
    v31 = *(char ***)(v25 + 16 * v30);
    if (v31 == &WebCore::JSDOMMatrix::s_info)
    {
LABEL_31:
      v33 = *(_QWORD *)(v25 + 16 * v30 + 8);
      if (v33)
        goto LABEL_33;
    }
    else
    {
      v32 = 1;
      while (v31)
      {
        v30 = ((_DWORD)v30 + v32) & v26;
        v31 = *(char ***)(v25 + 16 * v30);
        ++v32;
        if (v31 == &WebCore::JSDOMMatrix::s_info)
          goto LABEL_31;
      }
    }
  }
  v34 = (WebCore::JSDOMMatrix *)*((_QWORD *)v22 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSDOMMatrix::createPrototype(v34, v22, v23);
  Structure = WebCore::JSDOMMatrix::createStructure((uint64_t *)v34, (uint64_t)v22, Prototype);
  v33 = WebCore::cacheDOMStructure((JSCell *)v22, Structure, (uint64_t)&WebCore::JSDOMMatrix::s_info);
LABEL_33:
  v37 = WebCore::JSDOMMatrix::create(v33, v22, (uint64_t *)&v53);
  WebCore::cacheWrapper<WebCore::DOMMatrix,WebCore::JSDOMMatrix>(*((_QWORD *)v22 + 415), v24, v37);
  v39 = v53;
  v53 = 0;
  if (v39)
  {
    if (*((_DWORD *)v39 + 2) == 1)
    {
      if (*(_QWORD *)v39)
      {
        *(_QWORD *)(*(_QWORD *)v39 + 8) = 3;
        *(_QWORD *)v39 = 0;
      }
      bmalloc::api::isoDeallocate(v39, v38);
    }
    else
    {
      --*((_DWORD *)v39 + 2);
    }
  }
  return (_BYTE *)v37;
}

_BYTE *WebCore::jsDOMMatrixReadOnlyPrototypeFunction_rotateFromVector(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  int v13;
  unint64_t v14;
  double v15;
  double v16;
  unint64_t v17;
  JSC::VM *v18;
  uint64_t v19;
  JSC::VM *v20;
  char v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  long double v29;
  void *v30;
  WebCore::JSDOMGlobalObject *v31;
  int v32;
  uint64_t v33;
  unsigned int v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char **v39;
  int v40;
  unint64_t v41;
  WebCore::JSDOMMatrix *v42;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  void *v45;
  bmalloc::api *v46;
  JSC::VM *v48;
  double v49;
  double v50;
  JSC::VM *v51;
  bmalloc::api *v52;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v51 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v51, "DOMMatrixReadOnly", "rotateFromVector");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMMatrixReadOnly::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMMatrixReadOnly::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v51, "DOMMatrixReadOnly", "rotateFromVector");
  v12 = *(_QWORD *)(v5 + 24);
  v13 = *((_DWORD *)a2 + 8);
  if (v13 == 1)
  {
    v16 = 0.0;
    v15 = 0.0;
  }
  else
  {
    v14 = *((_QWORD *)a2 + 6);
    v15 = 0.0;
    v16 = 0.0;
    if (v14 != 10)
    {
      v52 = (bmalloc::api *)*((_QWORD *)a2 + 6);
      if (v14 >= 0xFFFE000000000000)
      {
        v16 = (double)(int)v14;
      }
      else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v48 = v4;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v52, this);
        v4 = v48;
        v16 = v49;
      }
      else
      {
        *(_QWORD *)&v16 = v14 - 0x2000000000000;
      }
      if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
        return 0;
      v13 = *((_DWORD *)a2 + 8);
    }
    if ((unint64_t)(v13 - 3) <= 0xFFFFFFFFFFFFFFFDLL)
    {
      v17 = *((_QWORD *)a2 + 7);
      if (v17 != 10)
      {
        v52 = (bmalloc::api *)*((_QWORD *)a2 + 7);
        v18 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v17 >= 0xFFFE000000000000)
        {
          v15 = (double)(int)v17;
        }
        else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v52, this);
          v15 = v50;
        }
        else
        {
          *(_QWORD *)&v15 = v17 - 0x2000000000000;
        }
        if (*((_DWORD *)v18 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v18) & 1) != 0)
          return 0;
      }
    }
  }
  v20 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v21 = *(_BYTE *)(v12 + 144);
  v22 = bmalloc::api::isoAllocate();
  *(_QWORD *)v22 = 0;
  *(_DWORD *)(v22 + 8) = 1;
  v23 = *(_OWORD *)(v12 + 64);
  v25 = *(_OWORD *)(v12 + 16);
  v24 = *(_OWORD *)(v12 + 32);
  *(_OWORD *)(v22 + 48) = *(_OWORD *)(v12 + 48);
  *(_OWORD *)(v22 + 64) = v23;
  *(_OWORD *)(v22 + 16) = v25;
  *(_OWORD *)(v22 + 32) = v24;
  v26 = *(_OWORD *)(v12 + 80);
  v27 = *(_OWORD *)(v12 + 96);
  v28 = *(_OWORD *)(v12 + 128);
  *(_OWORD *)(v22 + 112) = *(_OWORD *)(v12 + 112);
  *(_OWORD *)(v22 + 128) = v28;
  *(_OWORD *)(v22 + 80) = v26;
  *(_OWORD *)(v22 + 96) = v27;
  *(_BYTE *)(v22 + 144) = v21;
  v29 = atan2(v15, v16);
  WebCore::TransformationMatrix::rotateRadians((float64x2_t *)(v22 + 16), 1, v29);
  v32 = *(_DWORD *)(v22 + 8);
  *(_DWORD *)(v22 + 8) = v32 + 1;
  v52 = (bmalloc::api *)v22;
  if (v32)
  {
    *(_DWORD *)(v22 + 8) = v32;
  }
  else
  {
    if (*(_QWORD *)v22)
    {
      *(_QWORD *)(*(_QWORD *)v22 + 8) = 3;
      *(_QWORD *)v22 = 0;
    }
    bmalloc::api::isoDeallocate((bmalloc::api *)v22, v30);
  }
  v33 = *((_QWORD *)v20 + 412);
  if (v33)
  {
    v34 = *(_DWORD *)(v33 - 8);
    v35 = ((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) >> 22);
    v36 = 9 * ((v35 + ~(v35 << 13)) ^ ((v35 + ~(v35 << 13)) >> 8));
    v37 = (v36 ^ (v36 >> 15)) + ~((v36 ^ (v36 >> 15)) << 27);
    v38 = v34 & ((v37 >> 31) ^ v37);
    v39 = *(char ***)(v33 + 16 * v38);
    if (v39 == &WebCore::JSDOMMatrix::s_info)
    {
LABEL_35:
      v41 = *(_QWORD *)(v33 + 16 * v38 + 8);
      if (v41)
        goto LABEL_37;
    }
    else
    {
      v40 = 1;
      while (v39)
      {
        v38 = ((_DWORD)v38 + v40) & v34;
        v39 = *(char ***)(v33 + 16 * v38);
        ++v40;
        if (v39 == &WebCore::JSDOMMatrix::s_info)
          goto LABEL_35;
      }
    }
  }
  v42 = (WebCore::JSDOMMatrix *)*((_QWORD *)v20 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSDOMMatrix::createPrototype(v42, v20, v31);
  Structure = WebCore::JSDOMMatrix::createStructure((uint64_t *)v42, (uint64_t)v20, Prototype);
  v41 = WebCore::cacheDOMStructure((JSCell *)v20, Structure, (uint64_t)&WebCore::JSDOMMatrix::s_info);
LABEL_37:
  v19 = WebCore::JSDOMMatrix::create(v41, v20, (uint64_t *)&v52);
  WebCore::cacheWrapper<WebCore::DOMMatrix,WebCore::JSDOMMatrix>(*((_QWORD *)v20 + 415), (uint64_t *)v22, v19);
  v46 = v52;
  v52 = 0;
  if (v46)
  {
    if (*((_DWORD *)v46 + 2) == 1)
    {
      if (*(_QWORD *)v46)
      {
        *(_QWORD *)(*(_QWORD *)v46 + 8) = 3;
        *(_QWORD *)v46 = 0;
      }
      bmalloc::api::isoDeallocate(v46, v45);
    }
    else
    {
      --*((_DWORD *)v46 + 2);
    }
  }
  return (_BYTE *)v19;
}

_BYTE *WebCore::jsDOMMatrixReadOnlyPrototypeFunction_rotateAxisAngle(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  double v15;
  double v16;
  unint64_t v17;
  JSC::VM *v18;
  double v19;
  unint64_t v20;
  double v21;
  JSC::VM *v22;
  unint64_t v23;
  JSC::VM *v24;
  JSC::VM *v25;
  char v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  void *v34;
  WebCore::JSDOMGlobalObject *v35;
  int v36;
  uint64_t v37;
  unsigned int v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char **v43;
  int v44;
  unint64_t v45;
  WebCore::JSDOMMatrix *v46;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v49;
  void *v50;
  bmalloc::api *v51;
  JSC::VM *v53;
  double v54;
  double v55;
  double v56;
  double v57;
  JSC::VM *v58;
  bmalloc::api *v59;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v58 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v58, "DOMMatrixReadOnly", "rotateAxisAngle");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMMatrixReadOnly::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMMatrixReadOnly::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v58, "DOMMatrixReadOnly", "rotateAxisAngle");
  v12 = *(_QWORD *)(v5 + 24);
  LODWORD(v13) = *((_DWORD *)a2 + 8);
  if ((_DWORD)v13 == 1)
  {
    v21 = 0.0;
    v16 = 0.0;
    v15 = 0.0;
    v19 = 0.0;
  }
  else
  {
    v14 = *((_QWORD *)a2 + 6);
    v15 = 0.0;
    v16 = 0.0;
    if (v14 != 10)
    {
      v59 = (bmalloc::api *)*((_QWORD *)a2 + 6);
      if (v14 >= 0xFFFE000000000000)
      {
        v16 = (double)(int)v14;
      }
      else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v53 = v4;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v59, this);
        v4 = v53;
        v16 = v54;
      }
      else
      {
        *(_QWORD *)&v16 = v14 - 0x2000000000000;
      }
      if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
        return 0;
      LODWORD(v13) = *((_DWORD *)a2 + 8);
    }
    v13 = (int)v13;
    if ((unint64_t)((int)v13 - 3) <= 0xFFFFFFFFFFFFFFFDLL)
    {
      v17 = *((_QWORD *)a2 + 7);
      if (v17 != 10)
      {
        v59 = (bmalloc::api *)*((_QWORD *)a2 + 7);
        v18 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v17 >= 0xFFFE000000000000)
        {
          v15 = (double)(int)v17;
        }
        else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v59, this);
          v15 = v55;
        }
        else
        {
          *(_QWORD *)&v15 = v17 - 0x2000000000000;
        }
        if (*((_DWORD *)v18 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v18) & 1) != 0)
          return 0;
        v13 = *((int *)a2 + 8);
      }
    }
    v19 = 0.0;
    if ((unint64_t)(v13 - 4) > 0xFFFFFFFFFFFFFFFCLL || (v20 = *((_QWORD *)a2 + 8), v20 == 10))
    {
      v21 = 0.0;
    }
    else
    {
      v59 = (bmalloc::api *)*((_QWORD *)a2 + 8);
      v22 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v20 >= 0xFFFE000000000000)
      {
        v21 = (double)(int)v20;
      }
      else if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v59, this);
        v21 = v56;
      }
      else
      {
        *(_QWORD *)&v21 = v20 - 0x2000000000000;
      }
      if (*((_DWORD *)v22 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v22) & 1) != 0)
        return 0;
      v13 = *((int *)a2 + 8);
    }
    if ((unint64_t)(v13 - 5) <= 0xFFFFFFFFFFFFFFFBLL)
    {
      v23 = *((_QWORD *)a2 + 9);
      if (v23 != 10)
      {
        v59 = (bmalloc::api *)*((_QWORD *)a2 + 9);
        v24 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v23 >= 0xFFFE000000000000)
        {
          v19 = (double)(int)v23;
        }
        else if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v59, this);
          v19 = v57;
        }
        else
        {
          *(_QWORD *)&v19 = v23 - 0x2000000000000;
        }
        if (*((_DWORD *)v24 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v24) & 1) != 0)
          return 0;
      }
    }
  }
  v25 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v26 = *(_BYTE *)(v12 + 144);
  v27 = bmalloc::api::isoAllocate();
  *(_QWORD *)v27 = 0;
  *(_DWORD *)(v27 + 8) = 1;
  v28 = *(_OWORD *)(v12 + 64);
  v30 = *(_OWORD *)(v12 + 16);
  v29 = *(_OWORD *)(v12 + 32);
  *(_OWORD *)(v27 + 48) = *(_OWORD *)(v12 + 48);
  *(_OWORD *)(v27 + 64) = v28;
  *(_OWORD *)(v27 + 16) = v30;
  *(_OWORD *)(v27 + 32) = v29;
  v31 = *(_OWORD *)(v12 + 80);
  v32 = *(_OWORD *)(v12 + 96);
  v33 = *(_OWORD *)(v12 + 128);
  *(_OWORD *)(v27 + 112) = *(_OWORD *)(v12 + 112);
  *(_OWORD *)(v27 + 128) = v33;
  *(_OWORD *)(v27 + 80) = v31;
  *(_OWORD *)(v27 + 96) = v32;
  *(_BYTE *)(v27 + 144) = v26;
  WebCore::TransformationMatrix::rotate3d((float64x2_t *)(v27 + 16), 1, v16, v15, v21, v19);
  if (v16 != 0.0 || v15 != 0.0)
    *(_BYTE *)(v27 + 144) = 0;
  v36 = *(_DWORD *)(v27 + 8);
  *(_DWORD *)(v27 + 8) = v36 + 1;
  v59 = (bmalloc::api *)v27;
  if (v36)
  {
    *(_DWORD *)(v27 + 8) = v36;
  }
  else
  {
    if (*(_QWORD *)v27)
    {
      *(_QWORD *)(*(_QWORD *)v27 + 8) = 3;
      *(_QWORD *)v27 = 0;
    }
    bmalloc::api::isoDeallocate((bmalloc::api *)v27, v34);
  }
  v37 = *((_QWORD *)v25 + 412);
  if (v37)
  {
    v38 = *(_DWORD *)(v37 - 8);
    v39 = ((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) >> 22);
    v40 = 9 * ((v39 + ~(v39 << 13)) ^ ((v39 + ~(v39 << 13)) >> 8));
    v41 = (v40 ^ (v40 >> 15)) + ~((v40 ^ (v40 >> 15)) << 27);
    v42 = v38 & ((v41 >> 31) ^ v41);
    v43 = *(char ***)(v37 + 16 * v42);
    if (v43 == &WebCore::JSDOMMatrix::s_info)
    {
LABEL_52:
      v45 = *(_QWORD *)(v37 + 16 * v42 + 8);
      if (v45)
        goto LABEL_54;
    }
    else
    {
      v44 = 1;
      while (v43)
      {
        v42 = ((_DWORD)v42 + v44) & v38;
        v43 = *(char ***)(v37 + 16 * v42);
        ++v44;
        if (v43 == &WebCore::JSDOMMatrix::s_info)
          goto LABEL_52;
      }
    }
  }
  v46 = (WebCore::JSDOMMatrix *)*((_QWORD *)v25 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSDOMMatrix::createPrototype(v46, v25, v35);
  Structure = WebCore::JSDOMMatrix::createStructure((uint64_t *)v46, (uint64_t)v25, Prototype);
  v45 = WebCore::cacheDOMStructure((JSCell *)v25, Structure, (uint64_t)&WebCore::JSDOMMatrix::s_info);
LABEL_54:
  v49 = WebCore::JSDOMMatrix::create(v45, v25, (uint64_t *)&v59);
  WebCore::cacheWrapper<WebCore::DOMMatrix,WebCore::JSDOMMatrix>(*((_QWORD *)v25 + 415), (uint64_t *)v27, v49);
  v51 = v59;
  v59 = 0;
  if (v51)
  {
    if (*((_DWORD *)v51 + 2) == 1)
    {
      if (*(_QWORD *)v51)
      {
        *(_QWORD *)(*(_QWORD *)v51 + 8) = 3;
        *(_QWORD *)v51 = 0;
      }
      bmalloc::api::isoDeallocate(v51, v50);
    }
    else
    {
      --*((_DWORD *)v51 + 2);
    }
  }
  return (_BYTE *)v49;
}

_BYTE *WebCore::jsDOMMatrixReadOnlyPrototypeFunction_skewX(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  double v12;
  unint64_t v13;
  JSC::VM *v14;
  char v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  void *v23;
  WebCore::JSDOMGlobalObject *v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char **v32;
  int v33;
  unint64_t v34;
  WebCore::JSDOMMatrix *v35;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v38;
  void *v39;
  bmalloc::api *v40;
  double v42;
  JSC::VM *v43;
  bmalloc::api *v44;

  v3 = (JSC::VM *)*((_QWORD *)this + 7);
  v43 = v3;
  v4 = *((_QWORD *)a2 + 5);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v43, "DOMMatrixReadOnly", "skewX");
  v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v6 = *(unsigned int *)(v5 + 0x4C);
  v7 = *(_DWORD *)(v5 + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMMatrixReadOnly::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMMatrixReadOnly::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v43, "DOMMatrixReadOnly", "skewX");
  v11 = *(_QWORD *)(v4 + 24);
  v12 = 0.0;
  if (*((_DWORD *)a2 + 8) != 1)
  {
    v13 = *((_QWORD *)a2 + 6);
    if (v13 != 10)
    {
      v44 = (bmalloc::api *)*((_QWORD *)a2 + 6);
      if (v13 >= 0xFFFE000000000000)
      {
        v12 = (double)(int)v13;
      }
      else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v44, this);
        v12 = v42;
      }
      else
      {
        *(_QWORD *)&v12 = v13 - 0x2000000000000;
      }
      if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
        return 0;
      v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
    }
  }
  v14 = *(JSC::VM **)(v5 + 40);
  v15 = *(_BYTE *)(v11 + 144);
  v16 = bmalloc::api::isoAllocate();
  *(_QWORD *)v16 = 0;
  *(_DWORD *)(v16 + 8) = 1;
  v17 = *(_OWORD *)(v11 + 64);
  v19 = *(_OWORD *)(v11 + 16);
  v18 = *(_OWORD *)(v11 + 32);
  *(_OWORD *)(v16 + 48) = *(_OWORD *)(v11 + 48);
  *(_OWORD *)(v16 + 64) = v17;
  *(_OWORD *)(v16 + 16) = v19;
  *(_OWORD *)(v16 + 32) = v18;
  v20 = *(_OWORD *)(v11 + 80);
  v21 = *(_OWORD *)(v11 + 96);
  v22 = *(_OWORD *)(v11 + 128);
  *(_OWORD *)(v16 + 112) = *(_OWORD *)(v11 + 112);
  *(_OWORD *)(v16 + 128) = v22;
  *(_OWORD *)(v16 + 80) = v20;
  *(_OWORD *)(v16 + 96) = v21;
  *(_BYTE *)(v16 + 144) = v15;
  WebCore::TransformationMatrix::skew((float64x2_t *)(v16 + 16), v12, 0.0);
  v25 = *(_DWORD *)(v16 + 8);
  *(_DWORD *)(v16 + 8) = v25 + 1;
  v44 = (bmalloc::api *)v16;
  if (v25)
  {
    *(_DWORD *)(v16 + 8) = v25;
  }
  else
  {
    if (*(_QWORD *)v16)
    {
      *(_QWORD *)(*(_QWORD *)v16 + 8) = 3;
      *(_QWORD *)v16 = 0;
    }
    bmalloc::api::isoDeallocate((bmalloc::api *)v16, v23);
  }
  v26 = *((_QWORD *)v14 + 412);
  if (v26)
  {
    v27 = *(_DWORD *)(v26 - 8);
    v28 = ((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) >> 22);
    v29 = 9 * ((v28 + ~(v28 << 13)) ^ ((v28 + ~(v28 << 13)) >> 8));
    v30 = (v29 ^ (v29 >> 15)) + ~((v29 ^ (v29 >> 15)) << 27);
    v31 = v27 & ((v30 >> 31) ^ v30);
    v32 = *(char ***)(v26 + 16 * v31);
    if (v32 == &WebCore::JSDOMMatrix::s_info)
    {
LABEL_26:
      v34 = *(_QWORD *)(v26 + 16 * v31 + 8);
      if (v34)
        goto LABEL_28;
    }
    else
    {
      v33 = 1;
      while (v32)
      {
        v31 = ((_DWORD)v31 + v33) & v27;
        v32 = *(char ***)(v26 + 16 * v31);
        ++v33;
        if (v32 == &WebCore::JSDOMMatrix::s_info)
          goto LABEL_26;
      }
    }
  }
  v35 = (WebCore::JSDOMMatrix *)*((_QWORD *)v14 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSDOMMatrix::createPrototype(v35, v14, v24);
  Structure = WebCore::JSDOMMatrix::createStructure((uint64_t *)v35, (uint64_t)v14, Prototype);
  v34 = WebCore::cacheDOMStructure((JSCell *)v14, Structure, (uint64_t)&WebCore::JSDOMMatrix::s_info);
LABEL_28:
  v38 = WebCore::JSDOMMatrix::create(v34, v14, (uint64_t *)&v44);
  WebCore::cacheWrapper<WebCore::DOMMatrix,WebCore::JSDOMMatrix>(*((_QWORD *)v14 + 415), (uint64_t *)v16, v38);
  v40 = v44;
  v44 = 0;
  if (v40)
  {
    if (*((_DWORD *)v40 + 2) == 1)
    {
      if (*(_QWORD *)v40)
      {
        *(_QWORD *)(*(_QWORD *)v40 + 8) = 3;
        *(_QWORD *)v40 = 0;
      }
      bmalloc::api::isoDeallocate(v40, v39);
    }
    else
    {
      --*((_DWORD *)v40 + 2);
    }
  }
  return (_BYTE *)v38;
}

_BYTE *WebCore::jsDOMMatrixReadOnlyPrototypeFunction_skewY(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  double v12;
  unint64_t v13;
  JSC::VM *v14;
  char v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  void *v23;
  WebCore::JSDOMGlobalObject *v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char **v32;
  int v33;
  unint64_t v34;
  WebCore::JSDOMMatrix *v35;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v38;
  void *v39;
  bmalloc::api *v40;
  double v42;
  JSC::VM *v43;
  bmalloc::api *v44;

  v3 = (JSC::VM *)*((_QWORD *)this + 7);
  v43 = v3;
  v4 = *((_QWORD *)a2 + 5);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v43, "DOMMatrixReadOnly", "skewY");
  v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v6 = *(unsigned int *)(v5 + 0x4C);
  v7 = *(_DWORD *)(v5 + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMMatrixReadOnly::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMMatrixReadOnly::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v43, "DOMMatrixReadOnly", "skewY");
  v11 = *(_QWORD *)(v4 + 24);
  v12 = 0.0;
  if (*((_DWORD *)a2 + 8) != 1)
  {
    v13 = *((_QWORD *)a2 + 6);
    if (v13 != 10)
    {
      v44 = (bmalloc::api *)*((_QWORD *)a2 + 6);
      if (v13 >= 0xFFFE000000000000)
      {
        v12 = (double)(int)v13;
      }
      else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v44, this);
        v12 = v42;
      }
      else
      {
        *(_QWORD *)&v12 = v13 - 0x2000000000000;
      }
      if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
        return 0;
      v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
    }
  }
  v14 = *(JSC::VM **)(v5 + 40);
  v15 = *(_BYTE *)(v11 + 144);
  v16 = bmalloc::api::isoAllocate();
  *(_QWORD *)v16 = 0;
  *(_DWORD *)(v16 + 8) = 1;
  v17 = *(_OWORD *)(v11 + 64);
  v19 = *(_OWORD *)(v11 + 16);
  v18 = *(_OWORD *)(v11 + 32);
  *(_OWORD *)(v16 + 48) = *(_OWORD *)(v11 + 48);
  *(_OWORD *)(v16 + 64) = v17;
  *(_OWORD *)(v16 + 16) = v19;
  *(_OWORD *)(v16 + 32) = v18;
  v20 = *(_OWORD *)(v11 + 80);
  v21 = *(_OWORD *)(v11 + 96);
  v22 = *(_OWORD *)(v11 + 128);
  *(_OWORD *)(v16 + 112) = *(_OWORD *)(v11 + 112);
  *(_OWORD *)(v16 + 128) = v22;
  *(_OWORD *)(v16 + 80) = v20;
  *(_OWORD *)(v16 + 96) = v21;
  *(_BYTE *)(v16 + 144) = v15;
  WebCore::TransformationMatrix::skew((float64x2_t *)(v16 + 16), 0.0, v12);
  v25 = *(_DWORD *)(v16 + 8);
  *(_DWORD *)(v16 + 8) = v25 + 1;
  v44 = (bmalloc::api *)v16;
  if (v25)
  {
    *(_DWORD *)(v16 + 8) = v25;
  }
  else
  {
    if (*(_QWORD *)v16)
    {
      *(_QWORD *)(*(_QWORD *)v16 + 8) = 3;
      *(_QWORD *)v16 = 0;
    }
    bmalloc::api::isoDeallocate((bmalloc::api *)v16, v23);
  }
  v26 = *((_QWORD *)v14 + 412);
  if (v26)
  {
    v27 = *(_DWORD *)(v26 - 8);
    v28 = ((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) >> 22);
    v29 = 9 * ((v28 + ~(v28 << 13)) ^ ((v28 + ~(v28 << 13)) >> 8));
    v30 = (v29 ^ (v29 >> 15)) + ~((v29 ^ (v29 >> 15)) << 27);
    v31 = v27 & ((v30 >> 31) ^ v30);
    v32 = *(char ***)(v26 + 16 * v31);
    if (v32 == &WebCore::JSDOMMatrix::s_info)
    {
LABEL_26:
      v34 = *(_QWORD *)(v26 + 16 * v31 + 8);
      if (v34)
        goto LABEL_28;
    }
    else
    {
      v33 = 1;
      while (v32)
      {
        v31 = ((_DWORD)v31 + v33) & v27;
        v32 = *(char ***)(v26 + 16 * v31);
        ++v33;
        if (v32 == &WebCore::JSDOMMatrix::s_info)
          goto LABEL_26;
      }
    }
  }
  v35 = (WebCore::JSDOMMatrix *)*((_QWORD *)v14 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSDOMMatrix::createPrototype(v35, v14, v24);
  Structure = WebCore::JSDOMMatrix::createStructure((uint64_t *)v35, (uint64_t)v14, Prototype);
  v34 = WebCore::cacheDOMStructure((JSCell *)v14, Structure, (uint64_t)&WebCore::JSDOMMatrix::s_info);
LABEL_28:
  v38 = WebCore::JSDOMMatrix::create(v34, v14, (uint64_t *)&v44);
  WebCore::cacheWrapper<WebCore::DOMMatrix,WebCore::JSDOMMatrix>(*((_QWORD *)v14 + 415), (uint64_t *)v16, v38);
  v40 = v44;
  v44 = 0;
  if (v40)
  {
    if (*((_DWORD *)v40 + 2) == 1)
    {
      if (*(_QWORD *)v40)
      {
        *(_QWORD *)(*(_QWORD *)v40 + 8) = 3;
        *(_QWORD *)v40 = 0;
      }
      bmalloc::api::isoDeallocate(v40, v39);
    }
    else
    {
      --*((_DWORD *)v40 + 2);
    }
  }
  return (_BYTE *)v38;
}

_BYTE *WebCore::jsDOMMatrixReadOnlyPrototypeFunction_multiply(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  JSC::VM *v13;
  char v14;
  _DWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  void *v22;
  uint64_t v23;
  uint64_t v25;
  _BYTE __dst[280];
  unsigned __int8 v27[16];
  int v28;
  uint64_t v29;
  char v30;
  _BYTE v31[8];
  _BYTE v32[280];
  int v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)this + 7);
  v25 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "DOMMatrixReadOnly", "multiply");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMMatrixReadOnly::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMMatrixReadOnly::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "DOMMatrixReadOnly", "multiply");
  v29 = v4;
  if (*((_DWORD *)a2 + 8) == 1)
    v11 = 10;
  else
    v11 = *((_QWORD *)a2 + 6);
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::convertDictionary<WebCore::DOMMatrixInit>((uint64_t)v31, this, (JSC::JSCell *)v11);
  if (v33)
    return 0;
  v13 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  memcpy(__dst, v32, sizeof(__dst));
  v14 = *(_BYTE *)(v12 + 144);
  v15 = (_DWORD *)bmalloc::api::isoAllocate();
  *(_QWORD *)v15 = 0;
  v15[2] = 1;
  v16 = *(_OWORD *)(v12 + 64);
  v18 = *(_OWORD *)(v12 + 16);
  v17 = *(_OWORD *)(v12 + 32);
  *((_OWORD *)v15 + 3) = *(_OWORD *)(v12 + 48);
  *((_OWORD *)v15 + 4) = v16;
  *((_OWORD *)v15 + 1) = v18;
  *((_OWORD *)v15 + 2) = v17;
  v19 = *(_OWORD *)(v12 + 80);
  v20 = *(_OWORD *)(v12 + 96);
  v21 = *(_OWORD *)(v12 + 128);
  *((_OWORD *)v15 + 7) = *(_OWORD *)(v12 + 112);
  *((_OWORD *)v15 + 8) = v21;
  *((_OWORD *)v15 + 5) = v19;
  *((_OWORD *)v15 + 6) = v20;
  *((_BYTE *)v15 + 144) = v14;
  WebCore::DOMMatrix::multiplySelf((uint64_t)v15, (uint64_t)__dst, (uint64_t)v27);
  if (v15[2] == 1)
  {
    if (*(_QWORD *)v15)
    {
      *(_QWORD *)(*(_QWORD *)v15 + 8) = 3;
      *(_QWORD *)v15 = 0;
    }
    bmalloc::api::isoDeallocate((bmalloc::api *)v15, v22);
  }
  else
  {
    --v15[2];
  }
  v23 = WebCore::toJSNewlyCreated<WebCore::IDLInterface<WebCore::DOMMatrix>,WebCore::ExceptionOr<WTF::Ref<WebCore::DOMMatrix,WTF::RawPtrTraits<WebCore::DOMMatrix>,WTF::DefaultRefDerefTraits<WebCore::DOMMatrix>>>>(this, v13, (WebCore::JSDOMGlobalObject *)&v29, v27);
  if (v28 != -1)
    ((void (*)(char *, unsigned __int8 *))off_1E325C028[v28])(&v30, v27);
  return (_BYTE *)v23;
}

_BYTE *WebCore::jsDOMMatrixReadOnlyPrototypeFunction_flipX(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  JSC::VM *v10;
  char v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  WebCore::JSDOMGlobalObject *v19;
  uint64_t v20;
  unsigned int v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char **v26;
  int v27;
  unint64_t v28;
  WebCore::JSDOMMatrix *v29;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v32;
  void *v33;
  bmalloc::api *v34;
  uint64_t v36;
  bmalloc::api *v37;

  v3 = *((_QWORD *)a2 + 5);
  v36 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "DOMMatrixReadOnly", "flipX");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDOMMatrixReadOnly::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDOMMatrixReadOnly::s_info && v6 != 0);
  }
  if (!v5)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "DOMMatrixReadOnly", "flipX");
  v9 = *(_QWORD *)(v3 + 24);
  v10 = *(JSC::VM **)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28);
  v11 = *(_BYTE *)(v9 + 144);
  v12 = bmalloc::api::isoAllocate();
  *(_QWORD *)v12 = 0;
  *(_DWORD *)(v12 + 8) = 1;
  v13 = *(_OWORD *)(v9 + 64);
  v15 = *(_OWORD *)(v9 + 16);
  v14 = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v12 + 48) = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v12 + 64) = v13;
  *(_OWORD *)(v12 + 16) = v15;
  *(_OWORD *)(v12 + 32) = v14;
  v16 = *(_OWORD *)(v9 + 80);
  v17 = *(_OWORD *)(v9 + 96);
  v18 = *(_OWORD *)(v9 + 128);
  *(_OWORD *)(v12 + 112) = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(v12 + 128) = v18;
  *(_OWORD *)(v12 + 80) = v16;
  *(_OWORD *)(v12 + 96) = v17;
  *(_BYTE *)(v12 + 144) = v11;
  v37 = (bmalloc::api *)v12;
  WebCore::TransformationMatrix::scaleNonUniform((float64x2_t *)(v12 + 16), -1.0, 1.0);
  v20 = *((_QWORD *)v10 + 412);
  if (v20)
  {
    v21 = *(_DWORD *)(v20 - 8);
    v22 = ((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) >> 22);
    v23 = 9 * ((v22 + ~(v22 << 13)) ^ ((v22 + ~(v22 << 13)) >> 8));
    v24 = (v23 ^ (v23 >> 15)) + ~((v23 ^ (v23 >> 15)) << 27);
    v25 = v21 & ((v24 >> 31) ^ v24);
    v26 = *(char ***)(v20 + 16 * v25);
    if (v26 == &WebCore::JSDOMMatrix::s_info)
    {
LABEL_17:
      v28 = *(_QWORD *)(v20 + 16 * v25 + 8);
      if (v28)
        goto LABEL_19;
    }
    else
    {
      v27 = 1;
      while (v26)
      {
        v25 = ((_DWORD)v25 + v27) & v21;
        v26 = *(char ***)(v20 + 16 * v25);
        ++v27;
        if (v26 == &WebCore::JSDOMMatrix::s_info)
          goto LABEL_17;
      }
    }
  }
  v29 = (WebCore::JSDOMMatrix *)*((_QWORD *)v10 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSDOMMatrix::createPrototype(v29, v10, v19);
  Structure = WebCore::JSDOMMatrix::createStructure((uint64_t *)v29, (uint64_t)v10, Prototype);
  v28 = WebCore::cacheDOMStructure((JSCell *)v10, Structure, (uint64_t)&WebCore::JSDOMMatrix::s_info);
LABEL_19:
  v32 = WebCore::JSDOMMatrix::create(v28, v10, (uint64_t *)&v37);
  WebCore::cacheWrapper<WebCore::DOMMatrix,WebCore::JSDOMMatrix>(*((_QWORD *)v10 + 415), (uint64_t *)v12, v32);
  v34 = v37;
  v37 = 0;
  if (v34)
  {
    if (*((_DWORD *)v34 + 2) == 1)
    {
      if (*(_QWORD *)v34)
      {
        *(_QWORD *)(*(_QWORD *)v34 + 8) = 3;
        *(_QWORD *)v34 = 0;
      }
      bmalloc::api::isoDeallocate(v34, v33);
    }
    else
    {
      --*((_DWORD *)v34 + 2);
    }
  }
  return (_BYTE *)v32;
}

_BYTE *WebCore::jsDOMMatrixReadOnlyPrototypeFunction_flipY(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  JSC::VM *v10;
  char v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  WebCore::JSDOMGlobalObject *v19;
  uint64_t v20;
  unsigned int v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char **v26;
  int v27;
  unint64_t v28;
  WebCore::JSDOMMatrix *v29;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v32;
  void *v33;
  bmalloc::api *v34;
  uint64_t v36;
  bmalloc::api *v37;

  v3 = *((_QWORD *)a2 + 5);
  v36 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "DOMMatrixReadOnly", "flipY");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDOMMatrixReadOnly::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDOMMatrixReadOnly::s_info && v6 != 0);
  }
  if (!v5)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "DOMMatrixReadOnly", "flipY");
  v9 = *(_QWORD *)(v3 + 24);
  v10 = *(JSC::VM **)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28);
  v11 = *(_BYTE *)(v9 + 144);
  v12 = bmalloc::api::isoAllocate();
  *(_QWORD *)v12 = 0;
  *(_DWORD *)(v12 + 8) = 1;
  v13 = *(_OWORD *)(v9 + 64);
  v15 = *(_OWORD *)(v9 + 16);
  v14 = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v12 + 48) = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v12 + 64) = v13;
  *(_OWORD *)(v12 + 16) = v15;
  *(_OWORD *)(v12 + 32) = v14;
  v16 = *(_OWORD *)(v9 + 80);
  v17 = *(_OWORD *)(v9 + 96);
  v18 = *(_OWORD *)(v9 + 128);
  *(_OWORD *)(v12 + 112) = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(v12 + 128) = v18;
  *(_OWORD *)(v12 + 80) = v16;
  *(_OWORD *)(v12 + 96) = v17;
  *(_BYTE *)(v12 + 144) = v11;
  v37 = (bmalloc::api *)v12;
  WebCore::TransformationMatrix::scaleNonUniform((float64x2_t *)(v12 + 16), 1.0, -1.0);
  v20 = *((_QWORD *)v10 + 412);
  if (v20)
  {
    v21 = *(_DWORD *)(v20 - 8);
    v22 = ((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) >> 22);
    v23 = 9 * ((v22 + ~(v22 << 13)) ^ ((v22 + ~(v22 << 13)) >> 8));
    v24 = (v23 ^ (v23 >> 15)) + ~((v23 ^ (v23 >> 15)) << 27);
    v25 = v21 & ((v24 >> 31) ^ v24);
    v26 = *(char ***)(v20 + 16 * v25);
    if (v26 == &WebCore::JSDOMMatrix::s_info)
    {
LABEL_17:
      v28 = *(_QWORD *)(v20 + 16 * v25 + 8);
      if (v28)
        goto LABEL_19;
    }
    else
    {
      v27 = 1;
      while (v26)
      {
        v25 = ((_DWORD)v25 + v27) & v21;
        v26 = *(char ***)(v20 + 16 * v25);
        ++v27;
        if (v26 == &WebCore::JSDOMMatrix::s_info)
          goto LABEL_17;
      }
    }
  }
  v29 = (WebCore::JSDOMMatrix *)*((_QWORD *)v10 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSDOMMatrix::createPrototype(v29, v10, v19);
  Structure = WebCore::JSDOMMatrix::createStructure((uint64_t *)v29, (uint64_t)v10, Prototype);
  v28 = WebCore::cacheDOMStructure((JSCell *)v10, Structure, (uint64_t)&WebCore::JSDOMMatrix::s_info);
LABEL_19:
  v32 = WebCore::JSDOMMatrix::create(v28, v10, (uint64_t *)&v37);
  WebCore::cacheWrapper<WebCore::DOMMatrix,WebCore::JSDOMMatrix>(*((_QWORD *)v10 + 415), (uint64_t *)v12, v32);
  v34 = v37;
  v37 = 0;
  if (v34)
  {
    if (*((_DWORD *)v34 + 2) == 1)
    {
      if (*(_QWORD *)v34)
      {
        *(_QWORD *)(*(_QWORD *)v34 + 8) = 3;
        *(_QWORD *)v34 = 0;
      }
      bmalloc::api::isoDeallocate(v34, v33);
    }
    else
    {
      --*((_DWORD *)v34 + 2);
    }
  }
  return (_BYTE *)v32;
}

_BYTE *WebCore::jsDOMMatrixReadOnlyPrototypeFunction_inverse(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  JSC::VM *v9;
  WebCore::JSDOMGlobalObject *v10;
  uint64_t *v11;
  uint64_t v12;
  unsigned int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char **v18;
  int v19;
  unint64_t v20;
  WebCore::JSDOMMatrix *v21;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v24;
  void *v25;
  bmalloc::api *v26;
  uint64_t v28;
  bmalloc::api *v29;

  v3 = *((_QWORD *)a2 + 5);
  v28 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "DOMMatrixReadOnly", "inverse");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDOMMatrixReadOnly::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDOMMatrixReadOnly::s_info && v6 != 0);
  }
  if (!v5)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "DOMMatrixReadOnly", "inverse");
  v9 = *(JSC::VM **)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28);
  WebCore::DOMMatrixReadOnly::inverse(*(WebCore::DOMMatrixReadOnly **)(v3 + 24), &v29);
  v11 = (uint64_t *)v29;
  v12 = *((_QWORD *)v9 + 412);
  if (v12)
  {
    v13 = *(_DWORD *)(v12 - 8);
    v14 = ((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMMatrix::s_info + ~((_QWORD)&WebCore::JSDOMMatrix::s_info << 32)) >> 22);
    v15 = 9 * ((v14 + ~(v14 << 13)) ^ ((v14 + ~(v14 << 13)) >> 8));
    v16 = (v15 ^ (v15 >> 15)) + ~((v15 ^ (v15 >> 15)) << 27);
    v17 = v13 & ((v16 >> 31) ^ v16);
    v18 = *(char ***)(v12 + 16 * v17);
    if (v18 == &WebCore::JSDOMMatrix::s_info)
    {
LABEL_17:
      v20 = *(_QWORD *)(v12 + 16 * v17 + 8);
      if (v20)
        goto LABEL_19;
    }
    else
    {
      v19 = 1;
      while (v18)
      {
        v17 = ((_DWORD)v17 + v19) & v13;
        v18 = *(char ***)(v12 + 16 * v17);
        ++v19;
        if (v18 == &WebCore::JSDOMMatrix::s_info)
          goto LABEL_17;
      }
    }
  }
  v21 = (WebCore::JSDOMMatrix *)*((_QWORD *)v9 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSDOMMatrix::createPrototype(v21, v9, v10);
  Structure = WebCore::JSDOMMatrix::createStructure((uint64_t *)v21, (uint64_t)v9, Prototype);
  v20 = WebCore::cacheDOMStructure((JSCell *)v9, Structure, (uint64_t)&WebCore::JSDOMMatrix::s_info);
LABEL_19:
  v24 = WebCore::JSDOMMatrix::create(v20, v9, (uint64_t *)&v29);
  WebCore::cacheWrapper<WebCore::DOMMatrix,WebCore::JSDOMMatrix>(*((_QWORD *)v9 + 415), v11, v24);
  v26 = v29;
  v29 = 0;
  if (v26)
  {
    if (*((_DWORD *)v26 + 2) == 1)
    {
      if (*(_QWORD *)v26)
      {
        *(_QWORD *)(*(_QWORD *)v26 + 8) = 3;
        *(_QWORD *)v26 = 0;
      }
      bmalloc::api::isoDeallocate(v26, v25);
    }
    else
    {
      --*((_DWORD *)v26 + 2);
    }
  }
  return (_BYTE *)v24;
}

_BYTE *WebCore::jsDOMMatrixReadOnlyPrototypeFunction_transformPoint(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  JSC::VM *v11;
  __int128 v12;
  WebCore::JSDOMGlobalObject *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  WebCore::JSDOMPoint *v24;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v27;
  void *v28;
  bmalloc::api *v29;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  double v34[3];
  bmalloc::api *v35;
  _OWORD v36[2];
  int v37;

  v32 = *((_QWORD *)this + 7);
  v3 = *((_QWORD *)a2 + 5);
  if ((v3 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v32, "DOMMatrixReadOnly", "transformPoint");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDOMMatrixReadOnly::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDOMMatrixReadOnly::s_info && v6 != 0);
  }
  if (!v5)
    return WebCore::throwThisTypeError((int)this, (int)&v32, "DOMMatrixReadOnly", "transformPoint");
  if (*((_DWORD *)a2 + 8) == 1)
    v9 = 10;
  else
    v9 = *((_QWORD *)a2 + 6);
  v10 = *(_QWORD *)(v3 + 24);
  WebCore::convertDictionary<WebCore::DOMPointInit>((JSC::JSCell *)v9, (uint64_t)this, (uint64_t)v36);
  if (v37)
    return 0;
  v11 = *(JSC::VM **)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28);
  v33 = v36[0];
  *(_OWORD *)v34 = v36[1];
  WebCore::TransformationMatrix::map4ComponentPoint((WebCore::TransformationMatrix *)(v10 + 16), (double *)&v33, (double *)&v33 + 1, v34, &v34[1]);
  v31 = v33;
  v12 = *(_OWORD *)v34;
  v14 = bmalloc::api::isoAllocate();
  *(_QWORD *)v14 = 0;
  *(_DWORD *)(v14 + 8) = 1;
  *(_OWORD *)(v14 + 16) = v31;
  *(_OWORD *)(v14 + 32) = v12;
  v35 = (bmalloc::api *)v14;
  v15 = *((_QWORD *)v11 + 412);
  if (v15)
  {
    v16 = *(_DWORD *)(v15 - 8);
    v17 = ((unint64_t)&WebCore::JSDOMPoint::s_info + ~((_QWORD)&WebCore::JSDOMPoint::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMPoint::s_info + ~((_QWORD)&WebCore::JSDOMPoint::s_info << 32)) >> 22);
    v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
    v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
    v20 = v16 & ((v19 >> 31) ^ v19);
    v21 = *(char ***)(v15 + 16 * v20);
    if (v21 == &WebCore::JSDOMPoint::s_info)
    {
LABEL_21:
      v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
      if (v23)
        goto LABEL_23;
    }
    else
    {
      v22 = 1;
      while (v21)
      {
        v20 = ((_DWORD)v20 + v22) & v16;
        v21 = *(char ***)(v15 + 16 * v20);
        ++v22;
        if (v21 == &WebCore::JSDOMPoint::s_info)
          goto LABEL_21;
      }
    }
  }
  v24 = (WebCore::JSDOMPoint *)*((_QWORD *)v11 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSDOMPoint::createPrototype(v24, v11, v13);
  Structure = WebCore::JSDOMPoint::createStructure((uint64_t *)v24, (uint64_t)v11, Prototype);
  v23 = WebCore::cacheDOMStructure((JSCell *)v11, Structure, (uint64_t)&WebCore::JSDOMPoint::s_info);
LABEL_23:
  v27 = WebCore::JSDOMPoint::create(v23, (uint64_t)v11, (uint64_t *)&v35);
  WebCore::cacheWrapper<WebCore::DOMPoint,WebCore::JSDOMPoint>(*((_QWORD *)v11 + 415), (uint64_t *)v14, v27);
  v29 = v35;
  v35 = 0;
  if (v29)
  {
    if (*((_DWORD *)v29 + 2) == 1)
    {
      if (*(_QWORD *)v29)
      {
        *(_QWORD *)(*(_QWORD *)v29 + 8) = 3;
        *(_QWORD *)v29 = 0;
      }
      bmalloc::api::isoDeallocate(v29, v28);
    }
    else
    {
      --*((_DWORD *)v29 + 2);
    }
  }
  return (_BYTE *)v27;
}

_BYTE *WebCore::jsDOMMatrixReadOnlyPrototypeFunction_toFloat32Array(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  JSC::JSGlobalObject *v11;
  JSC::ArrayBufferView *v12;
  uint64_t v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  WebCore *v18;
  JSC::JSGlobalObject *v19;
  JSC::CallFrame *v20;
  JSC::VM *v21;
  JSC::ArrayBufferView *v22;
  WTF::StringImpl *v23;
  int v24;
  _BYTE v25[8];
  WTF::StringImpl *v26;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v21 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "DOMMatrixReadOnly", "toFloat32Array");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMMatrixReadOnly::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMMatrixReadOnly::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "DOMMatrixReadOnly", "toFloat32Array");
  v11 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  WebCore::DOMMatrixReadOnly::toFloat32Array(*(float64x2_t **)(v4 + 24), (uint64_t)&v22);
  if (!v24)
  {
    v12 = v22;
    v22 = 0;
    v13 = JSC::ArrayBufferView::wrap(v12, this, v11);
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        JSC::ArrayBufferView::operator delete();
      else
        --*(_DWORD *)v12;
    }
LABEL_16:
    if (v24 != -1)
      ((void (*)(_BYTE *, JSC::ArrayBufferView **))off_1E325CD98[v24])(v25, &v22);
    return (_BYTE *)v13;
  }
  if (v24 == 1)
  {
    v15 = (WTF::StringImpl *)v22;
    v25[0] = (_BYTE)v22;
    v16 = v23;
    v23 = 0;
    v26 = v16;
    if (!*((_QWORD *)v5 + 2))
    {
      v17.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v22, (JSC::JSGlobalObject *)&v26);
      JSC::VM::throwException(v5, this, v17);
      v16 = v26;
    }
    v26 = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v15);
      else
        *(_DWORD *)v16 -= 2;
    }
    v13 = 0;
    goto LABEL_16;
  }
  v18 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDOMMatrixReadOnlyPrototypeFunction_toFloat64Array(v18, v19, v20);
}

_BYTE *WebCore::jsDOMMatrixReadOnlyPrototypeFunction_toFloat64Array(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  JSC::JSGlobalObject *v11;
  JSC::ArrayBufferView *v12;
  uint64_t v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  WebCore *v18;
  JSC::JSGlobalObject *v19;
  JSC::CallFrame *v20;
  JSC::VM *v21;
  JSC::ArrayBufferView *v22;
  WTF::StringImpl *v23;
  int v24;
  _BYTE v25[8];
  WTF::StringImpl *v26;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v21 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "DOMMatrixReadOnly", "toFloat64Array");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMMatrixReadOnly::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMMatrixReadOnly::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "DOMMatrixReadOnly", "toFloat64Array");
  v11 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  WebCore::DOMMatrixReadOnly::toFloat64Array(*(WebCore::DOMMatrixReadOnly **)(v4 + 24), (uint64_t)&v22);
  if (!v24)
  {
    v12 = v22;
    v22 = 0;
    v13 = JSC::ArrayBufferView::wrap(v12, this, v11);
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        JSC::ArrayBufferView::operator delete();
      else
        --*(_DWORD *)v12;
    }
LABEL_16:
    if (v24 != -1)
      ((void (*)(_BYTE *, JSC::ArrayBufferView **))off_1E325CDA8[v24])(v25, &v22);
    return (_BYTE *)v13;
  }
  if (v24 == 1)
  {
    v15 = (WTF::StringImpl *)v22;
    v25[0] = (_BYTE)v22;
    v16 = v23;
    v23 = 0;
    v26 = v16;
    if (!*((_QWORD *)v5 + 2))
    {
      v17.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v22, (JSC::JSGlobalObject *)&v26);
      JSC::VM::throwException(v5, this, v17);
      v16 = v26;
    }
    v26 = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v15);
      else
        *(_DWORD *)v16 -= 2;
    }
    v13 = 0;
    goto LABEL_16;
  }
  v18 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDOMMatrixReadOnlyPrototypeFunction_toJSON(v18, v19, v20);
}

_BYTE *WebCore::jsDOMMatrixReadOnlyPrototypeFunction_toJSON(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  double v15;
  uint64_t v16;
  unint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  double v20;
  uint64_t v21;
  unint64_t v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  double v25;
  uint64_t v26;
  unint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  double v30;
  uint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  double v35;
  uint64_t v36;
  unint64_t v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  double v40;
  uint64_t v41;
  unint64_t v42;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44;
  double v45;
  uint64_t v46;
  unint64_t v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  double v50;
  uint64_t v51;
  unint64_t v52;
  WTF::StringImpl *v53;
  WTF::StringImpl *v54;
  double v55;
  uint64_t v56;
  unint64_t v57;
  WTF::StringImpl *v58;
  WTF::StringImpl *v59;
  double v60;
  uint64_t v61;
  unint64_t v62;
  WTF::StringImpl *v63;
  WTF::StringImpl *v64;
  double v65;
  uint64_t v66;
  unint64_t v67;
  WTF::StringImpl *v68;
  WTF::StringImpl *v69;
  double v70;
  uint64_t v71;
  unint64_t v72;
  WTF::StringImpl *v73;
  WTF::StringImpl *v74;
  double v75;
  uint64_t v76;
  unint64_t v77;
  WTF::StringImpl *v78;
  WTF::StringImpl *v79;
  double v80;
  uint64_t v81;
  unint64_t v82;
  WTF::StringImpl *v83;
  WTF::StringImpl *v84;
  double v85;
  uint64_t v86;
  unint64_t v87;
  WTF::StringImpl *v88;
  WTF::StringImpl *v89;
  double v90;
  uint64_t v91;
  unint64_t v92;
  WTF::StringImpl *v93;
  WTF::StringImpl *v94;
  double v95;
  uint64_t v96;
  unint64_t v97;
  WTF::StringImpl *v98;
  WTF::StringImpl *v99;
  double v100;
  uint64_t v101;
  unint64_t v102;
  WTF::StringImpl *v103;
  WTF::StringImpl *v104;
  double v105;
  uint64_t v106;
  unint64_t v107;
  WTF::StringImpl *v108;
  WTF::StringImpl *v109;
  double v110;
  uint64_t v111;
  unint64_t v112;
  WTF::StringImpl *v113;
  WTF::StringImpl *v114;
  double v115;
  uint64_t v116;
  unint64_t v117;
  WTF::StringImpl *v118;
  WTF::StringImpl *v119;
  double v120;
  uint64_t v121;
  unint64_t v122;
  WTF::StringImpl *v123;
  WTF::StringImpl *v124;
  uint64_t v125;
  WTF::StringImpl *v126;
  WTF::StringImpl *v127;
  uint64_t v128;
  WTF::StringImpl *v129;
  WTF::StringImpl *v130;
  unint64_t v132;
  uint64_t Slow;
  uint64_t v134;
  WTF::StringImpl *v135;
  unint64_t v136;
  int v137;
  int v138;
  uint64_t v139;

  v4 = *((_QWORD *)a2 + 5);
  v5 = *((_QWORD *)this + 7);
  v134 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v134, "DOMMatrixReadOnly", "toJSON");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMMatrixReadOnly::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMMatrixReadOnly::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v134, "DOMMatrixReadOnly", "toJSON");
  v11 = *(_QWORD *)(v4 + 24);
  v12 = *(_QWORD *)(v5 + 15056);
  if (!v12)
  {
    Slow = JSC::CompleteSubspace::allocateSlow();
    goto LABEL_344;
  }
  v13 = *(unsigned int *)(v12 + 60);
  v14 = *(_QWORD *)(v12 + 24);
  if (v14 >= *(_QWORD *)(v12 + 32))
  {
    v14 = *(_QWORD *)(v12 + 40);
    if ((v14 & 1) == 0)
    {
      v132 = *(_QWORD *)(v14 + 8) ^ *(_QWORD *)(v12 + 48);
      *(_QWORD *)(v12 + 32) = v14 + HIDWORD(v132);
      *(_QWORD *)(v12 + 40) = v14 + (int)v132;
      goto LABEL_14;
    }
    JSC::sanitizeStackForVM();
    Slow = JSC::LocalAllocator::allocateSlowCase();
LABEL_344:
    v14 = Slow;
    goto LABEL_15;
  }
LABEL_14:
  *(_QWORD *)(v12 + 24) = v14 + v13;
LABEL_15:
  *(_DWORD *)v14 = 0;
  *(_DWORD *)v14 = *((_DWORD *)this + 212);
  *(_DWORD *)(v14 + 4) = 16783360;
  *(_OWORD *)(v14 + 8) = 0u;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  *(_QWORD *)(v14 + 56) = 0;
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v15 = *(double *)(v11 + 16);
  if ((*(_QWORD *)&v15 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v16 = (int)v15, v15 == (double)(int)v16)
    && ((_DWORD)v16 || (*(_QWORD *)&v15 & 0x8000000000000000) == 0))
  {
    v17 = v16 | 0xFFFE000000000000;
  }
  else
  {
    v17 = *(_QWORD *)&v15 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v5 + 41968));
  v18 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v18, v17, 0, (uint64_t)&v135);
  if (v18)
  {
    if (*(_DWORD *)v18 == 2)
      WTF::StringImpl::destroy(v18, v19);
    else
      *(_DWORD *)v18 -= 2;
  }
  v20 = *(double *)(v11 + 24);
  if ((*(_QWORD *)&v20 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v21 = (int)v20, v20 == (double)(int)v21)
    && ((_DWORD)v21 || (*(_QWORD *)&v20 & 0x8000000000000000) == 0))
  {
    v22 = v21 | 0xFFFE000000000000;
  }
  else
  {
    v22 = *(_QWORD *)&v20 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v5 + 41968));
  v23 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v23, v22, 0, (uint64_t)&v135);
  if (v23)
  {
    if (*(_DWORD *)v23 == 2)
      WTF::StringImpl::destroy(v23, v24);
    else
      *(_DWORD *)v23 -= 2;
  }
  v25 = *(double *)(v11 + 48);
  if ((*(_QWORD *)&v25 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v26 = (int)v25, v25 == (double)(int)v26)
    && ((_DWORD)v26 || (*(_QWORD *)&v25 & 0x8000000000000000) == 0))
  {
    v27 = v26 | 0xFFFE000000000000;
  }
  else
  {
    v27 = *(_QWORD *)&v25 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v5 + 41968));
  v28 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v28, v27, 0, (uint64_t)&v135);
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v29);
    else
      *(_DWORD *)v28 -= 2;
  }
  v30 = *(double *)(v11 + 56);
  if ((*(_QWORD *)&v30 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v31 = (int)v30, v30 == (double)(int)v31)
    && ((_DWORD)v31 || (*(_QWORD *)&v30 & 0x8000000000000000) == 0))
  {
    v32 = v31 | 0xFFFE000000000000;
  }
  else
  {
    v32 = *(_QWORD *)&v30 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v5 + 41968));
  v33 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v33, v32, 0, (uint64_t)&v135);
  if (v33)
  {
    if (*(_DWORD *)v33 == 2)
      WTF::StringImpl::destroy(v33, v34);
    else
      *(_DWORD *)v33 -= 2;
  }
  v35 = *(double *)(v11 + 112);
  if ((*(_QWORD *)&v35 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v36 = (int)v35, v35 == (double)(int)v36)
    && ((_DWORD)v36 || (*(_QWORD *)&v35 & 0x8000000000000000) == 0))
  {
    v37 = v36 | 0xFFFE000000000000;
  }
  else
  {
    v37 = *(_QWORD *)&v35 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v5 + 41968));
  v38 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v38, v37, 0, (uint64_t)&v135);
  if (v38)
  {
    if (*(_DWORD *)v38 == 2)
      WTF::StringImpl::destroy(v38, v39);
    else
      *(_DWORD *)v38 -= 2;
  }
  v40 = *(double *)(v11 + 120);
  if ((*(_QWORD *)&v40 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v41 = (int)v40, v40 == (double)(int)v41)
    && ((_DWORD)v41 || (*(_QWORD *)&v40 & 0x8000000000000000) == 0))
  {
    v42 = v41 | 0xFFFE000000000000;
  }
  else
  {
    v42 = *(_QWORD *)&v40 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v5 + 41968));
  v43 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v43, v42, 0, (uint64_t)&v135);
  if (v43)
  {
    if (*(_DWORD *)v43 == 2)
      WTF::StringImpl::destroy(v43, v44);
    else
      *(_DWORD *)v43 -= 2;
  }
  v45 = *(double *)(v11 + 16);
  if ((*(_QWORD *)&v45 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v46 = (int)v45, v45 == (double)(int)v46)
    && ((_DWORD)v46 || (*(_QWORD *)&v45 & 0x8000000000000000) == 0))
  {
    v47 = v46 | 0xFFFE000000000000;
  }
  else
  {
    v47 = *(_QWORD *)&v45 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v48 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v48, v47, 0, (uint64_t)&v135);
  if (v48)
  {
    if (*(_DWORD *)v48 == 2)
      WTF::StringImpl::destroy(v48, v49);
    else
      *(_DWORD *)v48 -= 2;
  }
  v50 = *(double *)(v11 + 24);
  if ((*(_QWORD *)&v50 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v51 = (int)v50, v50 == (double)(int)v51)
    && ((_DWORD)v51 || (*(_QWORD *)&v50 & 0x8000000000000000) == 0))
  {
    v52 = v51 | 0xFFFE000000000000;
  }
  else
  {
    v52 = *(_QWORD *)&v50 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v53 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v53, v52, 0, (uint64_t)&v135);
  if (v53)
  {
    if (*(_DWORD *)v53 == 2)
      WTF::StringImpl::destroy(v53, v54);
    else
      *(_DWORD *)v53 -= 2;
  }
  v55 = *(double *)(v11 + 32);
  if ((*(_QWORD *)&v55 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v56 = (int)v55, v55 == (double)(int)v56)
    && ((_DWORD)v56 || (*(_QWORD *)&v55 & 0x8000000000000000) == 0))
  {
    v57 = v56 | 0xFFFE000000000000;
  }
  else
  {
    v57 = *(_QWORD *)&v55 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v58 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v58, v57, 0, (uint64_t)&v135);
  if (v58)
  {
    if (*(_DWORD *)v58 == 2)
      WTF::StringImpl::destroy(v58, v59);
    else
      *(_DWORD *)v58 -= 2;
  }
  v60 = *(double *)(v11 + 40);
  if ((*(_QWORD *)&v60 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v61 = (int)v60, v60 == (double)(int)v61)
    && ((_DWORD)v61 || (*(_QWORD *)&v60 & 0x8000000000000000) == 0))
  {
    v62 = v61 | 0xFFFE000000000000;
  }
  else
  {
    v62 = *(_QWORD *)&v60 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v63 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v63, v62, 0, (uint64_t)&v135);
  if (v63)
  {
    if (*(_DWORD *)v63 == 2)
      WTF::StringImpl::destroy(v63, v64);
    else
      *(_DWORD *)v63 -= 2;
  }
  v65 = *(double *)(v11 + 48);
  if ((*(_QWORD *)&v65 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v66 = (int)v65, v65 == (double)(int)v66)
    && ((_DWORD)v66 || (*(_QWORD *)&v65 & 0x8000000000000000) == 0))
  {
    v67 = v66 | 0xFFFE000000000000;
  }
  else
  {
    v67 = *(_QWORD *)&v65 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v68 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v68, v67, 0, (uint64_t)&v135);
  if (v68)
  {
    if (*(_DWORD *)v68 == 2)
      WTF::StringImpl::destroy(v68, v69);
    else
      *(_DWORD *)v68 -= 2;
  }
  v70 = *(double *)(v11 + 56);
  if ((*(_QWORD *)&v70 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v71 = (int)v70, v70 == (double)(int)v71)
    && ((_DWORD)v71 || (*(_QWORD *)&v70 & 0x8000000000000000) == 0))
  {
    v72 = v71 | 0xFFFE000000000000;
  }
  else
  {
    v72 = *(_QWORD *)&v70 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v73 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v73, v72, 0, (uint64_t)&v135);
  if (v73)
  {
    if (*(_DWORD *)v73 == 2)
      WTF::StringImpl::destroy(v73, v74);
    else
      *(_DWORD *)v73 -= 2;
  }
  v75 = *(double *)(v11 + 64);
  if ((*(_QWORD *)&v75 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v76 = (int)v75, v75 == (double)(int)v76)
    && ((_DWORD)v76 || (*(_QWORD *)&v75 & 0x8000000000000000) == 0))
  {
    v77 = v76 | 0xFFFE000000000000;
  }
  else
  {
    v77 = *(_QWORD *)&v75 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v78 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v78, v77, 0, (uint64_t)&v135);
  if (v78)
  {
    if (*(_DWORD *)v78 == 2)
      WTF::StringImpl::destroy(v78, v79);
    else
      *(_DWORD *)v78 -= 2;
  }
  v80 = *(double *)(v11 + 72);
  if ((*(_QWORD *)&v80 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v81 = (int)v80, v80 == (double)(int)v81)
    && ((_DWORD)v81 || (*(_QWORD *)&v80 & 0x8000000000000000) == 0))
  {
    v82 = v81 | 0xFFFE000000000000;
  }
  else
  {
    v82 = *(_QWORD *)&v80 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v83 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v83, v82, 0, (uint64_t)&v135);
  if (v83)
  {
    if (*(_DWORD *)v83 == 2)
      WTF::StringImpl::destroy(v83, v84);
    else
      *(_DWORD *)v83 -= 2;
  }
  v85 = *(double *)(v11 + 80);
  if ((*(_QWORD *)&v85 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v86 = (int)v85, v85 == (double)(int)v86)
    && ((_DWORD)v86 || (*(_QWORD *)&v85 & 0x8000000000000000) == 0))
  {
    v87 = v86 | 0xFFFE000000000000;
  }
  else
  {
    v87 = *(_QWORD *)&v85 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v88 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v88, v87, 0, (uint64_t)&v135);
  if (v88)
  {
    if (*(_DWORD *)v88 == 2)
      WTF::StringImpl::destroy(v88, v89);
    else
      *(_DWORD *)v88 -= 2;
  }
  v90 = *(double *)(v11 + 88);
  if ((*(_QWORD *)&v90 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v91 = (int)v90, v90 == (double)(int)v91)
    && ((_DWORD)v91 || (*(_QWORD *)&v90 & 0x8000000000000000) == 0))
  {
    v92 = v91 | 0xFFFE000000000000;
  }
  else
  {
    v92 = *(_QWORD *)&v90 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v93 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v93, v92, 0, (uint64_t)&v135);
  if (v93)
  {
    if (*(_DWORD *)v93 == 2)
      WTF::StringImpl::destroy(v93, v94);
    else
      *(_DWORD *)v93 -= 2;
  }
  v95 = *(double *)(v11 + 96);
  if ((*(_QWORD *)&v95 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v96 = (int)v95, v95 == (double)(int)v96)
    && ((_DWORD)v96 || (*(_QWORD *)&v95 & 0x8000000000000000) == 0))
  {
    v97 = v96 | 0xFFFE000000000000;
  }
  else
  {
    v97 = *(_QWORD *)&v95 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v98 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v98, v97, 0, (uint64_t)&v135);
  if (v98)
  {
    if (*(_DWORD *)v98 == 2)
      WTF::StringImpl::destroy(v98, v99);
    else
      *(_DWORD *)v98 -= 2;
  }
  v100 = *(double *)(v11 + 104);
  if ((*(_QWORD *)&v100 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v101 = (int)v100, v100 == (double)(int)v101)
    && ((_DWORD)v101 || (*(_QWORD *)&v100 & 0x8000000000000000) == 0))
  {
    v102 = v101 | 0xFFFE000000000000;
  }
  else
  {
    v102 = *(_QWORD *)&v100 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v103 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v103, v102, 0, (uint64_t)&v135);
  if (v103)
  {
    if (*(_DWORD *)v103 == 2)
      WTF::StringImpl::destroy(v103, v104);
    else
      *(_DWORD *)v103 -= 2;
  }
  v105 = *(double *)(v11 + 112);
  if ((*(_QWORD *)&v105 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v106 = (int)v105, v105 == (double)(int)v106)
    && ((_DWORD)v106 || (*(_QWORD *)&v105 & 0x8000000000000000) == 0))
  {
    v107 = v106 | 0xFFFE000000000000;
  }
  else
  {
    v107 = *(_QWORD *)&v105 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v108 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v108, v107, 0, (uint64_t)&v135);
  if (v108)
  {
    if (*(_DWORD *)v108 == 2)
      WTF::StringImpl::destroy(v108, v109);
    else
      *(_DWORD *)v108 -= 2;
  }
  v110 = *(double *)(v11 + 120);
  if ((*(_QWORD *)&v110 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v111 = (int)v110, v110 == (double)(int)v111)
    && ((_DWORD)v111 || (*(_QWORD *)&v110 & 0x8000000000000000) == 0))
  {
    v112 = v111 | 0xFFFE000000000000;
  }
  else
  {
    v112 = *(_QWORD *)&v110 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v113 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v113, v112, 0, (uint64_t)&v135);
  if (v113)
  {
    if (*(_DWORD *)v113 == 2)
      WTF::StringImpl::destroy(v113, v114);
    else
      *(_DWORD *)v113 -= 2;
  }
  v115 = *(double *)(v11 + 128);
  if ((*(_QWORD *)&v115 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v116 = (int)v115, v115 == (double)(int)v116)
    && ((_DWORD)v116 || (*(_QWORD *)&v115 & 0x8000000000000000) == 0))
  {
    v117 = v116 | 0xFFFE000000000000;
  }
  else
  {
    v117 = *(_QWORD *)&v115 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v118 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v118, v117, 0, (uint64_t)&v135);
  if (v118)
  {
    if (*(_DWORD *)v118 == 2)
      WTF::StringImpl::destroy(v118, v119);
    else
      *(_DWORD *)v118 -= 2;
  }
  v120 = *(double *)(v11 + 136);
  if ((*(_QWORD *)&v120 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v121 = (int)v120, v120 == (double)(int)v121)
    && ((_DWORD)v121 || (*(_QWORD *)&v120 & 0x8000000000000000) == 0))
  {
    v122 = v121 | 0xFFFE000000000000;
  }
  else
  {
    v122 = *(_QWORD *)&v120 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v123 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v123, v122, 0, (uint64_t)&v135);
  if (v123)
  {
    if (*(_DWORD *)v123 == 2)
      WTF::StringImpl::destroy(v123, v124);
    else
      *(_DWORD *)v123 -= 2;
  }
  v125 = *(_BYTE *)(v11 + 144) ? 7 : 6;
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v126 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v126, v125, 0, (uint64_t)&v135);
  if (v126)
  {
    if (*(_DWORD *)v126 == 2)
      WTF::StringImpl::destroy(v126, v127);
    else
      *(_DWORD *)v126 -= 2;
  }
  if (*(double *)(v11 + 16) == 1.0
    && *(double *)(v11 + 24) == 0.0
    && *(double *)(v11 + 32) == 0.0
    && *(double *)(v11 + 40) == 0.0
    && *(double *)(v11 + 48) == 0.0
    && *(double *)(v11 + 56) == 1.0
    && *(double *)(v11 + 64) == 0.0
    && *(double *)(v11 + 72) == 0.0
    && *(double *)(v11 + 80) == 0.0
    && *(double *)(v11 + 88) == 0.0
    && *(double *)(v11 + 96) == 1.0
    && *(double *)(v11 + 104) == 0.0
    && *(double *)(v11 + 112) == 0.0
    && *(double *)(v11 + 120) == 0.0
    && *(double *)(v11 + 128) == 0.0)
  {
    v128 = *(double *)(v11 + 136) == 1.0 ? 7 : 6;
  }
  else
  {
    v128 = 6;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v129 = v135;
  v135 = 0;
  v136 = v14;
  v137 = -1;
  v138 = 0x1000000;
  v139 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v129, v128, 0, (uint64_t)&v135);
  if (v129)
  {
    if (*(_DWORD *)v129 == 2)
      WTF::StringImpl::destroy(v129, v130);
    else
      *(_DWORD *)v129 -= 2;
  }
  return (_BYTE *)v14;
}

_BYTE *WebCore::jsDOMMatrixReadOnlyPrototypeFunction_toString(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  JSValue v18;
  uint64_t v19;
  JSC::VM *v20;
  int v21[2];
  WTF::StringImpl *v22;
  int v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v20 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v20, "DOMMatrixReadOnly", "toString");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMMatrixReadOnly::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMMatrixReadOnly::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v20, "DOMMatrixReadOnly", "toString");
  WebCore::DOMMatrixReadOnly::toString(*(WebCore::DOMMatrixReadOnly **)(v4 + 24), (uint64_t)a2);
  if (!v23)
  {
    v11 = *(WTF::StringImpl **)v21;
    *(_QWORD *)v21 = 0;
    v24 = v11;
    v13 = WebCore::toJS<WebCore::IDLUSVString,WTF::String>((uint64_t)this, (uint64_t *)&v24);
    v14 = v24;
    v24 = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v12);
      else
        *(_DWORD *)v14 -= 2;
    }
LABEL_16:
    if (v23 != -1)
      ((void (*)(WTF::StringImpl **, int *))off_1E325CDB8[v23])(&v24, v21);
    return (_BYTE *)v13;
  }
  if (v23 == 1)
  {
    v16 = (WTF::StringImpl *)LOBYTE(v21[0]);
    LOBYTE(v24) = v21[0];
    v17 = v22;
    v22 = 0;
    v25 = v17;
    if (!*((_QWORD *)v5 + 2))
    {
      v18.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v21[0]), (JSC::JSGlobalObject *)&v25);
      JSC::VM::throwException(v5, this, v18);
      v17 = v25;
    }
    v25 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v16);
      else
        *(_DWORD *)v17 -= 2;
    }
    v13 = 0;
    goto LABEL_16;
  }
  v19 = std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN3JSC21GenericTypedArrayViewINSA_14Float32AdaptorEEENS8_12RawPtrTraitsISD_EENS8_21DefaultRefDerefTraitsISD_EEEEN7WebCore9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSI_SK_EEEEEEDcSO_DpT0_(v19);
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN3JSC21GenericTypedArrayViewINSA_14Float32AdaptorEEENS8_12RawPtrTraitsISD_EENS8_21DefaultRefDerefTraitsISD_EEEEN7WebCore9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSI_SK_EEEEEEDcSO_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*result == 1)
      return (_DWORD *)JSC::ArrayBufferView::operator delete();
    else
      --*result;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN3JSC21GenericTypedArrayViewINSA_14Float32AdaptorEEENS8_12RawPtrTraitsISD_EENS8_21DefaultRefDerefTraitsISD_EEEEN7WebCore9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSI_SK_EEEEEEDcSO_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN3JSC21GenericTypedArrayViewINSA_14Float64AdaptorEEENS8_12RawPtrTraitsISD_EENS8_21DefaultRefDerefTraitsISD_EEEEN7WebCore9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSI_SK_EEEEEEDcSO_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*result == 1)
      return (_DWORD *)JSC::ArrayBufferView::operator delete();
    else
      --*result;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN3JSC21GenericTypedArrayViewINSA_14Float64AdaptorEEENS8_12RawPtrTraitsISD_EENS8_21DefaultRefDerefTraitsISD_EEEEN7WebCore9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSI_SK_EEEEEEDcSO_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

unint64_t WebCore::jsDOMMimeTypeArrayPrototypeFunction_item(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::JSDOMGlobalObject *v12;
  WebCore::DOMMimeType *v13;
  WebCore *v14;
  JSC::JSGlobalObject *v15;
  unint64_t v16;
  JSValue v19;
  JSC::VM *v20;
  _DWORD v21[2];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v20 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "MimeTypeArray", "item");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMMimeTypeArray::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMMimeTypeArray::s_info && v8 != 0);
  }
  if (!v7)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "MimeTypeArray", "item");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v19);
  }
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v21);
  if (v21[1])
    return 0;
  if (*(_DWORD *)(v11 + 36) <= v21[0])
    return 2;
  v14 = *(WebCore **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v15 = *(JSC::JSGlobalObject **)(*(_QWORD *)(v11 + 24) + 8 * v21[0]);
  ++*(_DWORD *)v15;
  v16 = WebCore::toJS(v14, v15, v12, v13);
  WTF::RefCounted<WebCore::DOMMimeType>::deref(v15);
  return v16;
}

_BYTE *WebCore::jsDOMMimeTypeArrayPrototypeFunction_namedItem(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WTF::StringImpl *v12;
  WebCore::JSDOMGlobalObject *v13;
  WebCore::DOMMimeType *v14;
  int v15;
  WebCore *v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  JSC::JSGlobalObject **v19;
  uint64_t v20;
  unint64_t v21;
  JSC::JSGlobalObject *v22;
  WTF::StringImpl *v23;
  int v24;
  uint64_t v26;
  WTF::StringImpl *v27;
  int v28;
  JSValue v30;
  JSC::VM *v31;
  WTF::StringImpl *v32;
  int v33;
  char v34;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v31 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "MimeTypeArray", "namedItem");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMMimeTypeArray::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMMimeTypeArray::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "MimeTypeArray", "namedItem");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v30.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v30);
  }
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v32);
  v15 = v33;
  if (v33)
  {
    v21 = 0;
  }
  else
  {
    v16 = *(WebCore **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
    v17 = v32;
    v32 = 0;
    v18 = *(unsigned int *)(v11 + 36);
    if ((_DWORD)v18)
    {
      v19 = *(JSC::JSGlobalObject ***)(v11 + 24);
      if (v17)
      {
        v20 = 8 * v18;
        v21 = 2;
        while (1)
        {
          v22 = *v19;
          v23 = (WTF::StringImpl *)*((_QWORD *)*v19 + 2);
          if (v23)
          {
            v24 = *(_DWORD *)v23;
            *(_DWORD *)v23 += 2;
            if (v24)
            {
              *(_DWORD *)v23 = v24;
              if (v23 == v17)
                goto LABEL_24;
            }
            else
            {
              WTF::StringImpl::destroy(v23, v12);
              if (v23 == v17)
              {
                v22 = *v19;
                goto LABEL_24;
              }
            }
          }
          ++v19;
          v20 -= 8;
          if (!v20)
            goto LABEL_26;
        }
      }
      v26 = 8 * v18;
      v21 = 2;
      while (1)
      {
        v22 = *v19;
        v27 = (WTF::StringImpl *)*((_QWORD *)*v19 + 2);
        if (!v27)
          break;
        v28 = *(_DWORD *)v27;
        *(_DWORD *)v27 += 2;
        if (v28)
          *(_DWORD *)v27 = v28;
        else
          WTF::StringImpl::destroy(v27, v12);
        ++v19;
        v26 -= 8;
        if (!v26)
          goto LABEL_26;
      }
LABEL_24:
      ++*(_DWORD *)v22;
      v21 = WebCore::toJS(v16, v22, v13, v14);
      WTF::RefCounted<WebCore::DOMMimeType>::deref(v22);
    }
    else
    {
      v21 = 2;
    }
LABEL_26:
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v12);
      else
        *(_DWORD *)v17 -= 2;
    }
    v15 = v33;
  }
  if (v15 != -1)
    ((void (*)(char *, WTF::StringImpl **))off_1E325A6F0[v15])(&v34, &v32);
  return (_BYTE *)v21;
}

_BYTE *WebCore::jsDOMParserPrototypeFunction_parseFromString(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v11;
  int v12;
  int v13;
  JSC::VM *v14;
  int v15;
  WTF::StringImpl *v16;
  void *v17;
  WebCore::Node *v18;
  unint64_t v19;
  WebCore::Node *v20;
  WTF::StringImpl *v21;
  JSValue v25;
  WTF::StringImpl *v26;
  JSC::VM *v27;
  WTF::StringImpl *v28;
  char v29[8];
  int v30;
  WebCore::Node *v31;
  WTF::StringImpl *v32;
  int v33;
  WTF::StringImpl *v34;
  int v35;
  JSC::VM *v36;
  WebCore::Node *v37;
  WTF::StringImpl *v38;
  char v39[8];
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v27 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "DOMParser", "parseFromString");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMParser::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMParser::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "DOMParser", "parseFromString");
  v36 = v4;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v25);
  }
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::TrustedHTML>,WebCore::IDLDOMString>>::convert((JSC::VM **)this, *((_QWORD *)a2 + 6), (uint64_t)v39);
  v12 = v42;
  if (!v42)
  {
    WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 7), (uint64_t)&v34);
    v13 = v35;
    if (v35)
    {
      v19 = 0;
LABEL_26:
      if (v13 != -1)
        ((void (*)(WebCore::Node **, WTF::StringImpl **))off_1E325A6F0[v13])(&v31, &v34);
      v12 = v42;
      goto LABEL_29;
    }
    if (!v42)
    {
      v14 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
      v29[0] = 0;
      v30 = -1;
      v15 = v41;
      if (v41 == -1
        || (((void (*)(WebCore::Node **, char *, uint64_t *))off_1E325CFA0[v41])(&v31, v29, &v40),
            v30 = v15,
            !v35))
      {
        v16 = v34;
        v34 = 0;
        v28 = v16;
        WebCore::DOMParser::parseFromString(v11, (uint64_t)v29, (const WTF::String *)&v28, (uint64_t)&v31);
        if (!v33)
        {
          v18 = v31;
          v31 = 0;
          v37 = v18;
          v19 = WebCore::toJSNewlyCreated((uint64_t)this, v14, &v37);
          v20 = v37;
          v37 = 0;
          if (v20)
          {
            if (*((_DWORD *)v20 + 6) == 2)
            {
              if ((*((_WORD *)v20 + 15) & 0x400) == 0)
                WebCore::Node::removedLastRef(v20, v17);
            }
            else
            {
              *((_DWORD *)v20 + 6) -= 2;
            }
          }
LABEL_18:
          if (v33 != -1)
            ((void (*)(WebCore::Node **, WebCore::Node **))off_1E325CFB0[v33])(&v37, &v31);
          v33 = -1;
          v21 = v28;
          v28 = 0;
          if (v21)
          {
            if (*(_DWORD *)v21 == 2)
              WTF::StringImpl::destroy(v21, (WTF::StringImpl *)v17);
            else
              *(_DWORD *)v21 -= 2;
          }
          if (v30 != -1)
            ((void (*)(WebCore::Node **, char *))off_1E325CF80[v30])(&v37, v29);
          v13 = v35;
          goto LABEL_26;
        }
        if (v33 == 1)
        {
          LOBYTE(v37) = (_BYTE)v31;
          v26 = v32;
          v32 = 0;
          v38 = v26;
          if (!*((_QWORD *)v4 + 2))
          {
            WebCore::propagateExceptionSlowPath(this, &v36, (unsigned __int8 *)&v37);
            v26 = v38;
          }
          v38 = 0;
          if (v26)
          {
            if (*(_DWORD *)v26 == 2)
              WTF::StringImpl::destroy(v26, (WTF::StringImpl *)v17);
            else
              *(_DWORD *)v26 -= 2;
          }
          v19 = 0;
          goto LABEL_18;
        }
      }
    }
    std::__throw_bad_variant_access[abi:sn180100]();
  }
  v19 = 0;
LABEL_29:
  if (v12 != -1)
    ((void (*)(WebCore::Node **, uint64_t *))off_1E325CFC0[v12])(&v31, &v40);
  return (_BYTE *)v19;
}

uint64_t WebCore::ConversionResult<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::TrustedHTML>,WebCore::IDLDOMString>>::releaseReturnValue(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  JSC::VM **v4;
  unint64_t v5;
  uint64_t v6;
  char v7;

  if (*(_DWORD *)(a2 + 24))
  {
    v4 = (JSC::VM **)std::__throw_bad_variant_access[abi:sn180100]();
    return WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::TrustedHTML>,WebCore::IDLDOMString>>::convert(v4, v5, v6);
  }
  else
  {
    v2 = result;
    *(_BYTE *)result = 0;
    *(_DWORD *)(result + 8) = -1;
    v3 = *(unsigned int *)(a2 + 16);
    if ((_DWORD)v3 != -1)
    {
      result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_1E325CFA0[v3])(&v7, result, a2 + 8);
      *(_DWORD *)(v2 + 8) = v3;
    }
  }
  return result;
}

uint64_t WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::TrustedHTML>,WebCore::IDLDOMString>>::convert@<X0>(JSC::VM **a1@<X0>, unint64_t this@<X1>, uint64_t a3@<X8>)
{
  JSC::JSGlobalObject *v4;
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  JSC::VM *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  int v13;
  uint64_t v14;
  uint64_t result;
  WTF::StringImpl *v17;
  int hasExceptionsAfterHandlingTraps;
  unint64_t v19;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  unsigned __int8 v25;
  unint64_t v26;
  int v27;
  WTF::StringImpl *v28;

  v4 = (JSC::JSGlobalObject *)a1;
  LOBYTE(v23) = 0;
  v25 = 0;
  if ((this & 0xFFFE000000000002) != 0)
  {
    v26 = this;
    v10 = a1[7];
    goto LABEL_25;
  }
  v6 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSTrustedHTML::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSTrustedHTML::s_info && v8 != 0);
  }
  if (!v7)
    goto LABEL_8;
  v19 = *(_QWORD *)(this + 24);
  if (!v19)
    goto LABEL_8;
  ++*(_DWORD *)(v19 + 8);
  v26 = v19;
  v27 = 0;
  result = std::optional<std::variant<WTF::RefPtr<WebCore::TrustedHTML,WTF::RawPtrTraits<WebCore::TrustedHTML>,WTF::DefaultRefDerefTraits<WebCore::TrustedHTML>>,WTF::String>>::operator=[abi:sn180100]<std::variant<WTF::RefPtr<WebCore::TrustedHTML,WTF::RawPtrTraits<WebCore::TrustedHTML>,WTF::DefaultRefDerefTraits<WebCore::TrustedHTML>>,WTF::String>,void>((uint64_t)&v23, (uint64_t)&v26);
  if (v27 != -1)
    result = ((uint64_t (*)(WTF::StringImpl **, unint64_t *))off_1E325CF80[v27])(&v28, &v26);
  v4 = (JSC::JSGlobalObject *)a1;
  if (!v25)
  {
LABEL_8:
    v26 = this;
    v10 = (JSC::VM *)*((_QWORD *)v4 + 7);
    if (*(_BYTE *)(this + 5) == 2)
    {
      v11 = *(WTF::StringImpl **)(this + 8);
      if ((v11 & 1) != 0)
        v11 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v4);
      if (v11)
        *(_DWORD *)v11 += 2;
      v28 = v11;
LABEL_14:
      if (*((_DWORD *)v10 + 20))
      {
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v10);
        v12 = v28;
        if (hasExceptionsAfterHandlingTraps)
        {
          v24 = 1;
          v28 = 0;
          if (v12)
          {
            if (*(_DWORD *)v12 == 2)
              WTF::StringImpl::destroy(v12, v17);
            else
              *(_DWORD *)v12 -= 2;
          }
          v13 = 1;
          v14 = 1;
          goto LABEL_17;
        }
      }
      else
      {
        v12 = v28;
      }
      v13 = 0;
      v14 = 0;
      v24 = 0;
      v23 = 0;
      *(_QWORD *)(a3 + 8) = v12;
      *(_DWORD *)(a3 + 16) = 1;
LABEL_17:
      *(_DWORD *)(a3 + 24) = v13;
      return ((uint64_t (*)(unint64_t *, uint64_t *))off_1E325A258[v14])(&v26, &v23);
    }
LABEL_25:
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v26, v4);
    goto LABEL_14;
  }
  *(_BYTE *)(a3 + 8) = 0;
  *(_DWORD *)(a3 + 16) = -1;
  v21 = v24;
  if (v24 == -1)
  {
    *(_DWORD *)(a3 + 24) = 0;
  }
  else
  {
    result = ((uint64_t (*)(unint64_t *))off_1E325CFA0[v24])(&v26);
    *(_DWORD *)(a3 + 16) = v21;
    v22 = v25;
    *(_DWORD *)(a3 + 24) = 0;
    if (v22 && v24 != -1)
      return ((uint64_t (*)(unint64_t *, uint64_t *))off_1E325CF80[v24])(&v26, &v23);
  }
  return result;
}

uint64_t std::optional<std::variant<WTF::RefPtr<WebCore::TrustedHTML,WTF::RawPtrTraits<WebCore::TrustedHTML>,WTF::DefaultRefDerefTraits<WebCore::TrustedHTML>>,WTF::String>>::operator=[abi:sn180100]<std::variant<WTF::RefPtr<WebCore::TrustedHTML,WTF::RawPtrTraits<WebCore::TrustedHTML>,WTF::DefaultRefDerefTraits<WebCore::TrustedHTML>>,WTF::String>,void>(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  char v9;

  if (*(_BYTE *)(a1 + 16))
  {
    v3 = *(unsigned int *)(a1 + 8);
    v4 = *(unsigned int *)(a2 + 8);
    if ((_DWORD)v3 == -1)
    {
      if ((_DWORD)v4 == -1)
        return a1;
    }
    else if ((_DWORD)v4 == -1)
    {
      ((void (*)(char *, uint64_t, uint64_t))off_1E325CF80[v3])(&v8, a1, a2);
      *(_DWORD *)(a1 + 8) = -1;
      return a1;
    }
    v7 = a1;
    ((void (*)(uint64_t *, uint64_t, uint64_t))off_1E325CF90[v4])(&v7, a1, a2);
    return a1;
  }
  *(_BYTE *)a1 = 0;
  *(_DWORD *)(a1 + 8) = -1;
  v5 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v5 != -1)
  {
    ((void (*)(char *, uint64_t, uint64_t))off_1E325CFA0[v5])(&v9, a1, a2);
    *(_DWORD *)(a1 + 8) = v5;
  }
  *(_BYTE *)(a1 + 16) = 1;
  return a1;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11TrustedHTMLENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  _DWORD *v2;
  WTF::StringImpl *v3;

  v2 = *(_DWORD **)a2;
  *(_QWORD *)a2 = 0;
  if (v2)
  {
    if (v2[2] == 1)
    {
      v3 = (WTF::StringImpl *)*((_QWORD *)v2 + 2);
      *((_QWORD *)v2 + 2) = 0;
      if (v3)
      {
        if (*(_DWORD *)v3 == 2)
          WTF::StringImpl::destroy(v3, a2);
        else
          *(_DWORD *)v3 -= 2;
      }
      if (*(_QWORD *)v2)
      {
        *(_QWORD *)(*(_QWORD *)v2 + 8) = 3;
        *(_QWORD *)v2 = 0;
      }
      bmalloc::api::isoDeallocate((bmalloc::api *)v2, a2);
    }
    else
    {
      --v2[2];
    }
  }
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11TrustedHTMLENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11TrustedHTMLENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISI_LNS0_6_TraitE1EEEEEvOT_EUlRSO_OT0_E_JRNS0_6__baseILSM_1EJSG_SH_EEEOSW_EEEDcSO_DpT0_(uint64_t result, WTF::StringImpl *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  char v10;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5)
  {
    result = ((uint64_t (*)(char *, uint64_t))off_1E325CF80[v5])(&v10, v4);
LABEL_7:
    v8 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v8;
    *(_DWORD *)(v4 + 8) = 0;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  v7 = *(_DWORD **)a2;
  *(_QWORD *)a2 = v6;
  if (v7)
  {
    if (v7[2] == 1)
    {
      v9 = (WTF::StringImpl *)*((_QWORD *)v7 + 2);
      *((_QWORD *)v7 + 2) = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 2)
          WTF::StringImpl::destroy(v9, a2);
        else
          *(_DWORD *)v9 -= 2;
      }
      if (*(_QWORD *)v7)
      {
        *(_QWORD *)(*(_QWORD *)v7 + 8) = 3;
        *(_QWORD *)v7 = 0;
      }
      return bmalloc::api::isoDeallocate((bmalloc::api *)v7, a2);
    }
    else
    {
      --v7[2];
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11TrustedHTMLENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISI_LNS0_6_TraitE1EEEEEvOT_EUlRSO_OT0_E_JRNS0_6__baseILSM_1EJSG_SH_EEEOSW_EEEDcSO_DpT0_(WTF::StringImpl *result, WTF::StringImpl *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5 != 1)
  {
    result = (WTF::StringImpl *)((uint64_t (*)(char *, uint64_t))off_1E325CF80[v5])(&v8, v4);
LABEL_7:
    v7 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v7;
    *(_DWORD *)(v4 + 8) = 1;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = v6;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11TrustedHTMLENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISI_LNS0_6_TraitE1EEEEEvRSJ_OT_EUlRSP_OT0_E_JRNS0_6__baseILSM_1EJSG_SH_EEEOSX_EEEDcSP_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11TrustedHTMLENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISI_LNS0_6_TraitE1EEEEEvRSJ_OT_EUlRSP_OT0_E_JRNS0_6__baseILSM_1EJSG_SH_EEEOSX_EEEDcSP_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore8DocumentENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore8DocumentENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6RefPtrIN7WebCore11TrustedHTMLENS9_12RawPtrTraitsISC_EENS9_21DefaultRefDerefTraitsISC_EEEENS9_6StringEEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSJ_SK_EEEEEEDcSO_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E325CF80[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

unint64_t WebCore::jsDOMPluginPrototypeFunction_item(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::JSDOMGlobalObject *v12;
  WebCore::DOMMimeType *v13;
  WebCore *v14;
  JSC::JSGlobalObject *v15;
  unint64_t v16;
  JSValue v19;
  JSC::VM *v20;
  _DWORD v21[2];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v20 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "Plugin", "item");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMPlugin::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMPlugin::s_info && v8 != 0);
  }
  if (!v7)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "Plugin", "item");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v19);
  }
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v21);
  if (v21[1])
    return 0;
  if (*(_DWORD *)(v11 + 100) <= v21[0])
    return 2;
  v14 = *(WebCore **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v15 = *(JSC::JSGlobalObject **)(*(_QWORD *)(v11 + 88) + 8 * v21[0]);
  ++*(_DWORD *)v15;
  v16 = WebCore::toJS(v14, v15, v12, v13);
  WTF::RefCounted<WebCore::DOMMimeType>::deref(v15);
  return v16;
}

_BYTE *WebCore::jsDOMPluginPrototypeFunction_namedItem(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WTF::StringImpl *v12;
  WebCore::JSDOMGlobalObject *v13;
  WebCore::DOMMimeType *v14;
  int v15;
  WebCore *v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  JSC::JSGlobalObject **v19;
  uint64_t v20;
  unint64_t v21;
  JSC::JSGlobalObject *v22;
  WTF::StringImpl *v23;
  int v24;
  uint64_t v26;
  WTF::StringImpl *v27;
  int v28;
  JSValue v30;
  JSC::VM *v31;
  WTF::StringImpl *v32;
  int v33;
  char v34;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v31 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "Plugin", "namedItem");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMPlugin::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMPlugin::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "Plugin", "namedItem");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v30.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v30);
  }
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v32);
  v15 = v33;
  if (v33)
  {
    v21 = 0;
  }
  else
  {
    v16 = *(WebCore **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
    v17 = v32;
    v32 = 0;
    v18 = *(unsigned int *)(v11 + 100);
    if ((_DWORD)v18)
    {
      v19 = *(JSC::JSGlobalObject ***)(v11 + 88);
      if (v17)
      {
        v20 = 8 * v18;
        v21 = 2;
        while (1)
        {
          v22 = *v19;
          v23 = (WTF::StringImpl *)*((_QWORD *)*v19 + 2);
          if (v23)
          {
            v24 = *(_DWORD *)v23;
            *(_DWORD *)v23 += 2;
            if (v24)
            {
              *(_DWORD *)v23 = v24;
              if (v23 == v17)
                goto LABEL_24;
            }
            else
            {
              WTF::StringImpl::destroy(v23, v12);
              if (v23 == v17)
              {
                v22 = *v19;
                goto LABEL_24;
              }
            }
          }
          ++v19;
          v20 -= 8;
          if (!v20)
            goto LABEL_26;
        }
      }
      v26 = 8 * v18;
      v21 = 2;
      while (1)
      {
        v22 = *v19;
        v27 = (WTF::StringImpl *)*((_QWORD *)*v19 + 2);
        if (!v27)
          break;
        v28 = *(_DWORD *)v27;
        *(_DWORD *)v27 += 2;
        if (v28)
          *(_DWORD *)v27 = v28;
        else
          WTF::StringImpl::destroy(v27, v12);
        ++v19;
        v26 -= 8;
        if (!v26)
          goto LABEL_26;
      }
LABEL_24:
      ++*(_DWORD *)v22;
      v21 = WebCore::toJS(v16, v22, v13, v14);
      WTF::RefCounted<WebCore::DOMMimeType>::deref(v22);
    }
    else
    {
      v21 = 2;
    }
LABEL_26:
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v12);
      else
        *(_DWORD *)v17 -= 2;
    }
    v15 = v33;
  }
  if (v15 != -1)
    ((void (*)(char *, WTF::StringImpl **))off_1E325A6F0[v15])(&v34, &v32);
  return (_BYTE *)v21;
}

unint64_t WebCore::jsDOMPluginArrayPrototypeFunction_item(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  _DWORD *v14;
  unint64_t v15;
  JSValue v18;
  JSC::VM *v19;
  _DWORD v20[2];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v19 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v19, "PluginArray", "item");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMPluginArray::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMPluginArray::s_info && v8 != 0);
  }
  if (!v7)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v19, "PluginArray", "item");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v18);
  }
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v20);
  if (v20[1])
    return 0;
  if (*(_DWORD *)(v11 + 36) <= v20[0])
    return 2;
  v12 = *(_DWORD **)(*(_QWORD *)(v11 + 24) + 8 * v20[0]);
  v13 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v14 = v12 + 2;
  ++v12[2];
  v15 = WebCore::wrap<WebCore::DOMPlugin>(v13, (WTF *)v12);
  WTF::RefCounted<WebCore::DOMPlugin>::deref(v14);
  return v15;
}

_BYTE *WebCore::jsDOMPluginArrayPrototypeFunction_namedItem(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  const WTF::StringImpl *v12;
  int v13;
  uint64_t v14;
  const WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  WTF *v17;
  unint64_t v18;
  JSValue v21;
  JSC::VM *v22;
  const WTF::StringImpl *v23;
  WTF *v24;
  const WTF::StringImpl *v25;
  int v26;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v22 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v22, "PluginArray", "namedItem");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMPluginArray::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMPluginArray::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v22, "PluginArray", "namedItem");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v21);
  }
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v25);
  v13 = v26;
  if (!v26)
  {
    v14 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
    v15 = v25;
    v25 = 0;
    v23 = v15;
    WebCore::DOMPluginArray::namedItem(v11, &v23, v12, &v24);
    v17 = v24;
    if (v24)
    {
      v18 = WebCore::wrap<WebCore::DOMPlugin>(v14, v24);
      WTF::RefCounted<WebCore::DOMPlugin>::deref((_DWORD *)v17 + 2);
      if (!v15)
        goto LABEL_20;
    }
    else
    {
      v18 = 2;
      if (!v15)
      {
LABEL_20:
        v13 = v26;
        goto LABEL_21;
      }
    }
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v16);
    else
      *(_DWORD *)v15 -= 2;
    goto LABEL_20;
  }
  v18 = 0;
LABEL_21:
  if (v13 != -1)
    ((void (*)(WTF **, const WTF::StringImpl **))off_1E325A6F0[v13])(&v24, &v25);
  return (_BYTE *)v18;
}

uint64_t WebCore::jsDOMPluginArrayPrototypeFunction_refresh(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  unint64_t v12;
  double v13;
  int v14;
  uint64_t v15;
  int *v16;
  int v17;
  _BOOL8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v29;
  JSC::VM *v30;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v30 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v30, "PluginArray", "refresh");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMPluginArray::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMPluginArray::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v30, "PluginArray", "refresh");
  v11 = *(_QWORD *)(v5 + 24);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v12 = 10;
    goto LABEL_23;
  }
  v12 = *((_QWORD *)a2 + 6);
  if (v12 >= 0xFFFE000000000000)
  {
    v29 = (_DWORD)v12 == 0;
    goto LABEL_51;
  }
  *(_QWORD *)&v13 = v12 - 0x2000000000000;
  if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v12 & 0xFFFE000000000002) == 0)
    {
      v14 = *(unsigned __int8 *)(v12 + 5);
      if (v14 == 3)
      {
        v17 = *(_DWORD *)(v12 + 8);
      }
      else
      {
        if (v14 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
            v18 = 1;
            goto LABEL_24;
          }
          v29 = *(_QWORD *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
          goto LABEL_51;
        }
        v15 = *(_QWORD *)(v12 + 8);
        if ((v15 & 1) != 0)
          v16 = (int *)(v12 + 16);
        else
          v16 = (int *)(v15 + 4);
        v17 = *v16;
      }
      v29 = v17 == 0;
LABEL_51:
      v18 = !v29;
      goto LABEL_24;
    }
LABEL_23:
    v18 = v12 == 7;
    goto LABEL_24;
  }
  v18 = v13 > 0.0 || v13 < 0.0;
LABEL_24:
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  v19 = *(_QWORD *)(v11 + 16);
  if (v19)
  {
    v20 = *(_QWORD *)(v19 + 8);
    if (v20)
    {
      v21 = *(_QWORD *)(v20 + 64);
      if (v21)
      {
        v22 = *(_QWORD *)(v21 + 8);
        if (v22)
        {
          v23 = *(_QWORD *)(v22 + 72);
          if (v23)
          {
            v24 = *(_QWORD *)(v23 + 8);
            if (v24)
            {
              if (*(_BYTE *)(v24 + 178))
              {
                __break(0xC471u);
                JUMPOUT(0x194A73D74);
              }
              v25 = *(_QWORD *)(v24 + 240);
              if (v25)
              {
                v26 = *(_QWORD *)(v25 + 8);
                if (v26)
                {
                  v27 = *(_QWORD *)(v26 + 24);
                  if (v27)
                  {
                    if (*(_QWORD *)(v27 + 8))
                      WebCore::Page::refreshPlugins((unsigned int *)v18, a2);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return 10;
}

JSCell *WebCore::setSubclassStructureIfNeeded<WebCore::DOMPoint>(JSC *a1, uint64_t a2, JSCell *a3)
{
  JSCell *result;
  JSC::JSObject *v7;
  JSC::JSGlobalObject *v9;
  JSC::VM *v10;
  uint64_t FunctionRealm;
  JSC::JSObject *v12;
  JSC::Structure *v13;
  JSC::VM *v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  unint64_t SubclassStructure;

  result = *(JSCell **)(a2 + 40);
  if (((unint64_t)result & 0xFFFE000000000002) == 0)
  {
    result = (JSCell *)JSC::JSCell::getObject((JSC::JSCell *)result);
    if (result && result != *(JSCell **)(a2 + 24))
    {
      v9 = (JSC::JSGlobalObject *)result;
      v10 = (JSC::VM *)*((_QWORD *)a1 + 7);
      FunctionRealm = JSC::getFunctionRealm(a1, (JSC::JSGlobalObject *)result, v7);
      v14 = (JSC::VM *)FunctionRealm;
      if (!*((_DWORD *)v10 + 20)
        || (result = (JSCell *)JSC::VM::hasExceptionsAfterHandlingTraps(v10), (result & 1) == 0))
      {
        v15 = *((_QWORD *)v14 + 412);
        if (v15)
        {
          v16 = *(_DWORD *)(v15 - 8);
          v17 = ((unint64_t)&WebCore::JSDOMPoint::s_info + ~((_QWORD)&WebCore::JSDOMPoint::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMPoint::s_info + ~((_QWORD)&WebCore::JSDOMPoint::s_info << 32)) >> 22);
          v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
          v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
          v20 = v16 & ((v19 >> 31) ^ v19);
          v21 = *(char ***)(v15 + 16 * v20);
          if (v21 == &WebCore::JSDOMPoint::s_info)
          {
LABEL_14:
            v12 = *(JSC::JSObject **)(v15 + 16 * v20 + 8);
            if (v12)
            {
LABEL_16:
              SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v9, v12, v13);
              if (!*((_DWORD *)v10 + 20))
                return JSC::JSObject::setStructure(a3, v10, SubclassStructure);
              result = (JSCell *)JSC::VM::hasExceptionsAfterHandlingTraps(v10);
              if ((result & 1) == 0)
                return JSC::JSObject::setStructure(a3, v10, SubclassStructure);
              return result;
            }
          }
          else
          {
            v22 = 1;
            while (v21)
            {
              v20 = ((_DWORD)v20 + v22) & v16;
              v21 = *(char ***)(v15 + 16 * v20);
              ++v22;
              if (v21 == &WebCore::JSDOMPoint::s_info)
                goto LABEL_14;
            }
          }
        }
        Prototype = (JSC::JSCell *)WebCore::JSDOMPoint::createPrototype(v10, v14, v12);
        Structure = WebCore::JSDOMPoint::createStructure((uint64_t *)v10, (uint64_t)v14, Prototype);
        v12 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)v14, Structure, (uint64_t)&WebCore::JSDOMPoint::s_info);
        goto LABEL_16;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSDOMPoint::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::jsDOMPointConstructorFunction_fromPoint(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  WebCore::JSDOMGlobalObject *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char **v15;
  int v16;
  unint64_t v17;
  WebCore::JSDOMPoint *v18;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v21;
  void *v22;
  bmalloc::api *v23;
  __int128 v25;
  bmalloc::api *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  int v30;

  if (*((_DWORD *)a2 + 8) == 1)
    v4 = 10;
  else
    v4 = *((_QWORD *)a2 + 6);
  WebCore::convertDictionary<WebCore::DOMPointInit>((JSC::JSCell *)v4, (uint64_t)this, (uint64_t)&v27);
  if (v30)
    return 0;
  v25 = v27;
  v5 = v28;
  v6 = v29;
  v8 = bmalloc::api::isoAllocate();
  *(_QWORD *)v8 = 0;
  *(_DWORD *)(v8 + 8) = 1;
  *(_OWORD *)(v8 + 16) = v25;
  *(_QWORD *)(v8 + 32) = v5;
  *(_QWORD *)(v8 + 40) = v6;
  v26 = (bmalloc::api *)v8;
  v9 = *((_QWORD *)this + 412);
  if (v9)
  {
    v10 = *(_DWORD *)(v9 - 8);
    v11 = ((unint64_t)&WebCore::JSDOMPoint::s_info + ~((_QWORD)&WebCore::JSDOMPoint::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMPoint::s_info + ~((_QWORD)&WebCore::JSDOMPoint::s_info << 32)) >> 22);
    v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
    v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
    v14 = v10 & ((v13 >> 31) ^ v13);
    v15 = *(char ***)(v9 + 16 * v14);
    if (v15 == &WebCore::JSDOMPoint::s_info)
    {
LABEL_10:
      v17 = *(_QWORD *)(v9 + 16 * v14 + 8);
      if (v17)
        goto LABEL_12;
    }
    else
    {
      v16 = 1;
      while (v15)
      {
        v14 = ((_DWORD)v14 + v16) & v10;
        v15 = *(char ***)(v9 + 16 * v14);
        ++v16;
        if (v15 == &WebCore::JSDOMPoint::s_info)
          goto LABEL_10;
      }
    }
  }
  v18 = (WebCore::JSDOMPoint *)*((_QWORD *)this + 7);
  Prototype = (JSC::JSCell *)WebCore::JSDOMPoint::createPrototype(v18, this, v7);
  Structure = WebCore::JSDOMPoint::createStructure((uint64_t *)v18, (uint64_t)this, Prototype);
  v17 = WebCore::cacheDOMStructure((JSCell *)this, Structure, (uint64_t)&WebCore::JSDOMPoint::s_info);
LABEL_12:
  v21 = WebCore::JSDOMPoint::create(v17, (uint64_t)this, (uint64_t *)&v26);
  WebCore::cacheWrapper<WebCore::DOMPoint,WebCore::JSDOMPoint>(*((_QWORD *)this + 415), (uint64_t *)v8, v21);
  v23 = v26;
  v26 = 0;
  if (v23)
  {
    if (*((_DWORD *)v23 + 2) == 1)
    {
      if (*(_QWORD *)v23)
      {
        *(_QWORD *)(*(_QWORD *)v23 + 8) = 3;
        *(_QWORD *)v23 = 0;
      }
      bmalloc::api::isoDeallocate(v23, v22);
    }
    else
    {
      --*((_DWORD *)v23 + 2);
    }
  }
  return v21;
}

JSCell *WebCore::setSubclassStructureIfNeeded<WebCore::DOMPointReadOnly>(JSC *a1, uint64_t a2, JSCell *a3)
{
  JSCell *result;
  JSC::JSObject *v7;
  JSC::JSGlobalObject *v9;
  JSC::VM *v10;
  uint64_t FunctionRealm;
  JSC::Structure *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char **v20;
  int v21;
  JSC::JSObject *v22;
  unint64_t Structure;
  JSC::Structure *v24;
  JSC::JSCell *v25;
  uint64_t v26;
  unint64_t SubclassStructure;

  result = *(JSCell **)(a2 + 40);
  if (((unint64_t)result & 0xFFFE000000000002) == 0)
  {
    result = (JSCell *)JSC::JSCell::getObject((JSC::JSCell *)result);
    if (result && result != *(JSCell **)(a2 + 24))
    {
      v9 = (JSC::JSGlobalObject *)result;
      v10 = (JSC::VM *)*((_QWORD *)a1 + 7);
      FunctionRealm = JSC::getFunctionRealm(a1, (JSC::JSGlobalObject *)result, v7);
      v13 = FunctionRealm;
      if (!*((_DWORD *)v10 + 20)
        || (result = (JSCell *)JSC::VM::hasExceptionsAfterHandlingTraps(v10), (result & 1) == 0))
      {
        v14 = *(_QWORD *)(v13 + 3296);
        if (v14)
        {
          v15 = *(_DWORD *)(v14 - 8);
          v16 = ((unint64_t)&WebCore::JSDOMPointReadOnly::s_info
               + ~((_QWORD)&WebCore::JSDOMPointReadOnly::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMPointReadOnly::s_info
                                                                          + ~((_QWORD)&WebCore::JSDOMPointReadOnly::s_info << 32)) >> 22);
          v17 = 9 * ((v16 + ~(v16 << 13)) ^ ((v16 + ~(v16 << 13)) >> 8));
          v18 = (v17 ^ (v17 >> 15)) + ~((v17 ^ (v17 >> 15)) << 27);
          v19 = v15 & ((v18 >> 31) ^ v18);
          v20 = *(char ***)(v14 + 16 * v19);
          if (v20 == &WebCore::JSDOMPointReadOnly::s_info)
          {
LABEL_14:
            v22 = *(JSC::JSObject **)(v14 + 16 * v19 + 8);
            if (v22)
            {
LABEL_16:
              SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v9, v22, v12);
              if (!*((_DWORD *)v10 + 20))
                return JSC::JSObject::setStructure(a3, v10, SubclassStructure);
              result = (JSCell *)JSC::VM::hasExceptionsAfterHandlingTraps(v10);
              if ((result & 1) == 0)
                return JSC::JSObject::setStructure(a3, v10, SubclassStructure);
              return result;
            }
          }
          else
          {
            v21 = 1;
            while (v20)
            {
              v19 = ((_DWORD)v19 + v21) & v15;
              v20 = *(char ***)(v14 + 16 * v19);
              ++v21;
              if (v20 == &WebCore::JSDOMPointReadOnly::s_info)
                goto LABEL_14;
            }
          }
        }
        Structure = WebCore::JSDOMPointReadOnlyPrototype::createStructure((uint64_t *)v10, v13, *(JSC::JSCell **)(v13 + 656));
        *(_DWORD *)(Structure + 16) |= 0x80000u;
        v25 = (JSC::JSCell *)WebCore::JSDOMPointReadOnlyPrototype::create(v10, (JSC::VM *)v13, Structure, v24);
        v26 = WebCore::JSDOMPointReadOnly::createStructure((uint64_t *)v10, v13, v25);
        v22 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)v13, v26, (uint64_t)&WebCore::JSDOMPointReadOnly::s_info);
        goto LABEL_16;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSDOMPointReadOnly::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::jsDOMPointReadOnlyConstructorFunction_fromPoint(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  bmalloc::api *v10;
  __int128 v12;
  bmalloc::api *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  int v17;

  if (*((_DWORD *)a2 + 8) == 1)
    v4 = 10;
  else
    v4 = *((_QWORD *)a2 + 6);
  WebCore::convertDictionary<WebCore::DOMPointInit>((JSC::JSCell *)v4, (uint64_t)this, (uint64_t)&v14);
  if (v17)
    return 0;
  v12 = v14;
  v5 = v15;
  v6 = v16;
  v7 = bmalloc::api::isoAllocate();
  *(_QWORD *)v7 = 0;
  *(_DWORD *)(v7 + 8) = 1;
  *(_OWORD *)(v7 + 16) = v12;
  *(_QWORD *)(v7 + 32) = v5;
  *(_QWORD *)(v7 + 40) = v6;
  v13 = (bmalloc::api *)v7;
  v9 = WebCore::toJSNewlyCreated(v7, (uint64_t)this, (uint64_t *)&v13);
  v10 = v13;
  v13 = 0;
  if (v10)
  {
    if (*((_DWORD *)v10 + 2) == 1)
    {
      if (*(_QWORD *)v10)
      {
        *(_QWORD *)(*(_QWORD *)v10 + 8) = 3;
        *(_QWORD *)v10 = 0;
      }
      bmalloc::api::isoDeallocate(v10, v8);
    }
    else
    {
      --*((_DWORD *)v10 + 2);
    }
  }
  return v9;
}

_BYTE *WebCore::jsDOMPointReadOnlyPrototypeFunction_matrixTransform(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  double *v12;
  JSC::VM *v13;
  WebCore::JSDOMGlobalObject *v14;
  uint64_t v15;
  bmalloc::api *v16;
  void *v17;
  uint64_t v18;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  JSValue v22;
  WebCore *v23;
  JSC::JSGlobalObject *v24;
  JSC::CallFrame *v25;
  JSC::VM *v26;
  _BYTE __dst[280];
  int v28[2];
  WTF::StringImpl *v29;
  unsigned int v30;
  _BYTE v31[8];
  WTF::StringImpl *v32;
  _BYTE v33[8];
  _BYTE v34[280];
  int v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "DOMPointReadOnly", "matrixTransform");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMPointReadOnly::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMPointReadOnly::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "DOMPointReadOnly", "matrixTransform");
  if (*((_DWORD *)a2 + 8) == 1)
    v11 = 10;
  else
    v11 = *((_QWORD *)a2 + 6);
  v12 = *(double **)(v5 + 24);
  WebCore::convertDictionary<WebCore::DOMMatrixInit>((uint64_t)v33, this, (JSC::JSCell *)v11);
  if (v35)
    return 0;
  v13 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  memcpy(__dst, v34, sizeof(__dst));
  WebCore::DOMPointReadOnly::matrixTransform(v12, (uint64_t)__dst, (uint64_t)v28);
  v15 = v30;
  if (!v30)
  {
    v16 = *(bmalloc::api **)v28;
    *(_QWORD *)v28 = 0;
    v18 = WebCore::wrap<WebCore::DOMPoint>(v13, v16, v14);
    if (*((_DWORD *)v16 + 2) == 1)
    {
      if (*(_QWORD *)v16)
      {
        *(_QWORD *)(*(_QWORD *)v16 + 8) = 3;
        *(_QWORD *)v16 = 0;
      }
      bmalloc::api::isoDeallocate(v16, v17);
    }
    else
    {
      --*((_DWORD *)v16 + 2);
    }
LABEL_19:
    ((void (*)(_BYTE *, int *))off_1E325D3E0[v15])(v31, v28);
    return (_BYTE *)v18;
  }
  if (v30 == 1)
  {
    v20 = (WTF::StringImpl *)LOBYTE(v28[0]);
    v31[0] = v28[0];
    v21 = v29;
    v29 = 0;
    v32 = v21;
    if (!*((_QWORD *)v4 + 2))
    {
      v22.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v28[0]), (JSC::JSGlobalObject *)&v32);
      JSC::VM::throwException(v4, this, v22);
      v21 = v32;
    }
    v32 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v20);
      else
        *(_DWORD *)v21 -= 2;
    }
    v18 = 0;
    goto LABEL_19;
  }
  v23 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDOMPointReadOnlyPrototypeFunction_toJSON(v23, v24, v25);
}

_BYTE *WebCore::jsDOMPointReadOnlyPrototypeFunction_toJSON(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  double *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  double v15;
  uint64_t v16;
  unint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  double v20;
  uint64_t v21;
  unint64_t v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  double v25;
  uint64_t v26;
  unint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  double v30;
  uint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  unint64_t v36;
  uint64_t Slow;
  uint64_t v38;
  WTF::StringImpl *v39;
  unint64_t v40;
  int v41;
  int v42;
  uint64_t v43;

  v4 = *((_QWORD *)a2 + 5);
  v5 = *((_QWORD *)this + 7);
  v38 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v38, "DOMPointReadOnly", "toJSON");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMPointReadOnly::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMPointReadOnly::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v38, "DOMPointReadOnly", "toJSON");
  v11 = *(double **)(v4 + 24);
  v12 = *(_QWORD *)(v5 + 15056);
  if (!v12)
  {
    Slow = JSC::CompleteSubspace::allocateSlow();
    goto LABEL_74;
  }
  v13 = *(unsigned int *)(v12 + 60);
  v14 = *(_QWORD *)(v12 + 24);
  if (v14 >= *(_QWORD *)(v12 + 32))
  {
    v14 = *(_QWORD *)(v12 + 40);
    if ((v14 & 1) == 0)
    {
      v36 = *(_QWORD *)(v14 + 8) ^ *(_QWORD *)(v12 + 48);
      *(_QWORD *)(v12 + 32) = v14 + HIDWORD(v36);
      *(_QWORD *)(v12 + 40) = v14 + (int)v36;
      goto LABEL_14;
    }
    JSC::sanitizeStackForVM();
    Slow = JSC::LocalAllocator::allocateSlowCase();
LABEL_74:
    v14 = Slow;
    goto LABEL_15;
  }
LABEL_14:
  *(_QWORD *)(v12 + 24) = v14 + v13;
LABEL_15:
  *(_DWORD *)v14 = 0;
  *(_DWORD *)v14 = *((_DWORD *)this + 212);
  *(_DWORD *)(v14 + 4) = 16783360;
  *(_OWORD *)(v14 + 8) = 0u;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  *(_QWORD *)(v14 + 56) = 0;
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v15 = v11[2];
  if ((*(_QWORD *)&v15 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v16 = (int)v15, v15 == (double)(int)v16)
    && ((_DWORD)v16 || (*(_QWORD *)&v15 & 0x8000000000000000) == 0))
  {
    v17 = v16 | 0xFFFE000000000000;
  }
  else
  {
    v17 = *(_QWORD *)&v15 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v5 + 41968));
  v18 = v39;
  v39 = 0;
  v40 = v14;
  v41 = -1;
  v42 = 0x1000000;
  v43 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v18, v17, 0, (uint64_t)&v39);
  if (v18)
  {
    if (*(_DWORD *)v18 == 2)
      WTF::StringImpl::destroy(v18, v19);
    else
      *(_DWORD *)v18 -= 2;
  }
  v20 = v11[3];
  if ((*(_QWORD *)&v20 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v21 = (int)v20, v20 == (double)(int)v21)
    && ((_DWORD)v21 || (*(_QWORD *)&v20 & 0x8000000000000000) == 0))
  {
    v22 = v21 | 0xFFFE000000000000;
  }
  else
  {
    v22 = *(_QWORD *)&v20 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v5 + 41968));
  v23 = v39;
  v39 = 0;
  v40 = v14;
  v41 = -1;
  v42 = 0x1000000;
  v43 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v23, v22, 0, (uint64_t)&v39);
  if (v23)
  {
    if (*(_DWORD *)v23 == 2)
      WTF::StringImpl::destroy(v23, v24);
    else
      *(_DWORD *)v23 -= 2;
  }
  v25 = v11[4];
  if ((*(_QWORD *)&v25 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v26 = (int)v25, v25 == (double)(int)v26)
    && ((_DWORD)v26 || (*(_QWORD *)&v25 & 0x8000000000000000) == 0))
  {
    v27 = v26 | 0xFFFE000000000000;
  }
  else
  {
    v27 = *(_QWORD *)&v25 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v5 + 41968));
  v28 = v39;
  v39 = 0;
  v40 = v14;
  v41 = -1;
  v42 = 0x1000000;
  v43 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v28, v27, 0, (uint64_t)&v39);
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v29);
    else
      *(_DWORD *)v28 -= 2;
  }
  v30 = v11[5];
  if ((*(_QWORD *)&v30 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v31 = (int)v30, v30 == (double)(int)v31)
    && ((_DWORD)v31 || (*(_QWORD *)&v30 & 0x8000000000000000) == 0))
  {
    v32 = v31 | 0xFFFE000000000000;
  }
  else
  {
    v32 = *(_QWORD *)&v30 + 0x2000000000000;
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v5 + 41968));
  v33 = v39;
  v39 = 0;
  v40 = v14;
  v41 = -1;
  v42 = 0x1000000;
  v43 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v33, v32, 0, (uint64_t)&v39);
  if (v33)
  {
    if (*(_DWORD *)v33 == 2)
      WTF::StringImpl::destroy(v33, v34);
    else
      *(_DWORD *)v33 -= 2;
  }
  return (_BYTE *)v14;
}

bmalloc::api *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore8DOMPointENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, bmalloc::api **a2)
{
  bmalloc::api *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*((_DWORD *)result + 2) == 1)
    {
      if (*(_QWORD *)result)
      {
        *(_QWORD *)(*(_QWORD *)result + 8) = 3;
        *(_QWORD *)result = 0;
      }
      return (bmalloc::api *)bmalloc::api::isoDeallocate(result, a2);
    }
    else
    {
      --*((_DWORD *)result + 2);
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore8DOMPointENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::jsDOMQuadConstructorFunction_fromRect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  WebCore::DOMQuad *v18;
  bmalloc::api *v20;
  void *v21;
  WebCore::DOMQuad *v22;
  _QWORD v23[4];
  int v24;

  if (*((_DWORD *)a2 + 8) == 1)
    v4 = 10;
  else
    v4 = *((_QWORD *)a2 + 6);
  WebCore::convertDictionary<WebCore::DOMRectInit>((JSC::JSCell *)v4, (uint64_t)this, (uint64_t)v23);
  if (v24)
    return 0;
  v5 = *(double *)v23;
  v6 = *(double *)&v23[1];
  v7 = *(double *)&v23[2];
  v8 = *(double *)&v23[3];
  v9 = bmalloc::api::isoAllocate();
  *(_QWORD *)v9 = 0;
  *(_DWORD *)(v9 + 8) = 1;
  v10 = bmalloc::api::isoAllocate();
  *(_QWORD *)v10 = 0;
  *(_DWORD *)(v10 + 8) = 1;
  *(double *)(v10 + 16) = v5;
  *(double *)(v10 + 24) = v6;
  *(_OWORD *)(v10 + 32) = xmmword_1968A14C0;
  *(_QWORD *)(v9 + 16) = v10;
  v11 = v5 + v7;
  v12 = bmalloc::api::isoAllocate();
  *(_QWORD *)v12 = 0;
  *(_DWORD *)(v12 + 8) = 1;
  *(double *)(v12 + 16) = v11;
  *(double *)(v12 + 24) = v6;
  *(_OWORD *)(v12 + 32) = xmmword_1968A14C0;
  v13 = v6 + v8;
  *(_QWORD *)(v9 + 24) = v12;
  v14 = bmalloc::api::isoAllocate();
  *(_QWORD *)v14 = 0;
  *(_DWORD *)(v14 + 8) = 1;
  *(double *)(v14 + 16) = v11;
  *(double *)(v14 + 24) = v13;
  *(_OWORD *)(v14 + 32) = xmmword_1968A14C0;
  *(_QWORD *)(v9 + 32) = v14;
  v15 = bmalloc::api::isoAllocate();
  *(_QWORD *)v15 = 0;
  *(_DWORD *)(v15 + 8) = 1;
  *(double *)(v15 + 16) = v5;
  *(double *)(v15 + 24) = v13;
  *(_OWORD *)(v15 + 32) = xmmword_1968A14C0;
  *(_QWORD *)(v9 + 40) = v15;
  v22 = (WebCore::DOMQuad *)v9;
  v17 = WebCore::toJSNewlyCreated(v15, (uint64_t)this, (uint64_t *)&v22);
  v18 = v22;
  v22 = 0;
  if (v18)
  {
    if (*((_DWORD *)v18 + 2) == 1)
    {
      WebCore::DOMQuad::~DOMQuad(v18, v16);
      bmalloc::api::isoDeallocate(v20, v21);
    }
    else
    {
      --*((_DWORD *)v18 + 2);
    }
  }
  return v17;
}

uint64_t WebCore::jsDOMQuadConstructorFunction_fromQuad(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::JSCell *v4;
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  WebCore::DOMQuad *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t Object;
  JSC::Structure *v15;
  WTF::StringImpl *v16;
  JSC::JSCell *v17;
  double v18;
  WebCore::DOMQuad *v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  JSC::JSCell *v22;
  uint64_t v23;
  WebCore::DOMQuad *v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  JSC::JSCell *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  WebCore::DOMQuad *v38;
  bmalloc::api *v40;
  void *v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  WebCore::DOMQuad *v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  WebCore::DOMQuad *v49;
  uint64_t v50;
  WebCore::DOMQuad *v51;
  WebCore::DOMQuad *v52;
  double v53;
  WebCore::DOMQuad *v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  int v58;
  JSC::VM *v59;

  if (*((_DWORD *)a2 + 8) == 1)
  {
    v52 = 0;
    v53 = 1.0;
    goto LABEL_5;
  }
  v4 = (JSC::JSCell *)*((_QWORD *)a2 + 6);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v59 = v5;
  if (((unint64_t)v4 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v52 = 0;
    v53 = 1.0;
LABEL_5:
    v6 = 0;
    v7 = 0;
    v50 = 0;
    v51 = 0;
    v8 = 0;
    v9 = 1.0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 1.0;
    v49 = 0;
    v46 = 0;
    v47 = 0;
    v48 = 1.0;
    goto LABEL_41;
  }
  if (((unint64_t)v4 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v4)) == 0)
  {
    JSC::throwTypeError();
    return 0;
  }
  v15 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v17 = (JSC::JSCell *)JSC::JSObject::get(v15, this, (unint64_t)v54);
  if (v54)
  {
    if (*(_DWORD *)v54 == 2)
      WTF::StringImpl::destroy(v54, v16);
    else
      *(_DWORD *)v54 -= 2;
  }
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  if (v17 == (JSC::JSCell *)10)
  {
    v7 = 0;
    v18 = 1.0;
    v6 = 0;
    v19 = 0;
  }
  else
  {
    WebCore::convertDictionary<WebCore::DOMPointInit>(v17, (uint64_t)this, (uint64_t)&v54);
    if (v58)
      return 0;
    v19 = v54;
    v6 = v55;
    v7 = v56;
    v18 = v57;
  }
  WTF::AtomStringImpl::addLiteral();
  v20 = v54;
  v22 = (JSC::JSCell *)JSC::JSObject::get(v15, this, (unint64_t)v54);
  if (v20)
  {
    if (*(_DWORD *)v20 == 2)
      WTF::StringImpl::destroy(v20, v21);
    else
      *(_DWORD *)v20 -= 2;
  }
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  if (v22 == (JSC::JSCell *)10)
  {
    v9 = 1.0;
    v23 = 0;
    v8 = 0;
    v24 = 0;
  }
  else
  {
    WebCore::convertDictionary<WebCore::DOMPointInit>(v22, (uint64_t)this, (uint64_t)&v54);
    if (v58)
      return 0;
    v24 = v54;
    v23 = v55;
    v8 = v56;
    v9 = v57;
  }
  WTF::AtomStringImpl::addLiteral();
  v25 = v54;
  v27 = (JSC::JSCell *)JSC::JSObject::get(v15, this, (unint64_t)v54);
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v26);
    else
      *(_DWORD *)v25 -= 2;
  }
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  if (v27 == (JSC::JSCell *)10)
  {
    v45 = 0;
    v43 = 1.0;
    v44 = 0;
    v42 = 0;
  }
  else
  {
    WebCore::convertDictionary<WebCore::DOMPointInit>(v27, (uint64_t)this, (uint64_t)&v54);
    if (v58)
      return 0;
    v44 = v55;
    v45 = v54;
    v42 = v56;
    v43 = v57;
  }
  WTF::AtomStringImpl::addLiteral();
  v28 = v54;
  v30 = (JSC::JSCell *)JSC::JSObject::get(v15, this, (unint64_t)v54);
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v29);
    else
      *(_DWORD *)v28 -= 2;
  }
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  v52 = v19;
  v53 = v18;
  v50 = v23;
  v51 = v24;
  if (v30 != (JSC::JSCell *)10)
  {
    WebCore::convertDictionary<WebCore::DOMPointInit>(v30, (uint64_t)this, (uint64_t)&v54);
    if (!v58)
    {
      v46 = v56;
      v47 = v55;
      v48 = v57;
      v49 = v54;
      goto LABEL_40;
    }
    return 0;
  }
  v48 = 1.0;
  v49 = 0;
  v46 = 0;
  v47 = 0;
LABEL_40:
  v11 = v44;
  v10 = v45;
  v12 = v42;
  v13 = v43;
LABEL_41:
  v31 = bmalloc::api::isoAllocate();
  *(_QWORD *)v31 = 0;
  *(_DWORD *)(v31 + 8) = 1;
  v32 = bmalloc::api::isoAllocate();
  *(_QWORD *)v32 = 0;
  *(_DWORD *)(v32 + 8) = 1;
  *(_QWORD *)(v32 + 16) = v52;
  *(_QWORD *)(v32 + 24) = v6;
  *(_QWORD *)(v32 + 32) = v7;
  *(double *)(v32 + 40) = v53;
  *(_QWORD *)(v31 + 16) = v32;
  v33 = bmalloc::api::isoAllocate();
  *(_QWORD *)v33 = 0;
  *(_DWORD *)(v33 + 8) = 1;
  *(_QWORD *)(v33 + 16) = v51;
  *(_QWORD *)(v33 + 24) = v50;
  *(_QWORD *)(v33 + 32) = v8;
  *(double *)(v33 + 40) = v9;
  *(_QWORD *)(v31 + 24) = v33;
  v34 = bmalloc::api::isoAllocate();
  *(_QWORD *)v34 = 0;
  *(_DWORD *)(v34 + 8) = 1;
  *(_QWORD *)(v34 + 16) = v10;
  *(_QWORD *)(v34 + 24) = v11;
  *(_QWORD *)(v34 + 32) = v12;
  *(double *)(v34 + 40) = v13;
  *(_QWORD *)(v31 + 32) = v34;
  v35 = bmalloc::api::isoAllocate();
  *(_QWORD *)v35 = 0;
  *(_DWORD *)(v35 + 8) = 1;
  *(_QWORD *)(v35 + 16) = v49;
  *(_QWORD *)(v35 + 24) = v47;
  *(_QWORD *)(v35 + 32) = v46;
  *(double *)(v35 + 40) = v48;
  *(_QWORD *)(v31 + 40) = v35;
  v54 = (WebCore::DOMQuad *)v31;
  v37 = WebCore::toJSNewlyCreated(v35, (uint64_t)this, (uint64_t *)&v54);
  v38 = v54;
  v54 = 0;
  if (v38)
  {
    if (*((_DWORD *)v38 + 2) == 1)
    {
      WebCore::DOMQuad::~DOMQuad(v38, v36);
      bmalloc::api::isoDeallocate(v40, v41);
    }
    else
    {
      --*((_DWORD *)v38 + 2);
    }
  }
  return v37;
}

_BYTE *WebCore::jsDOMQuadPrototypeFunction_getBounds(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  _QWORD *v10;
  JSC::VM *v11;
  float64x2_t v12;
  float64x2_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16_t v16;
  float64x2_t v17;
  float64x2_t v18;
  float64x2_t v19;
  float64x2_t v20;
  float64x2_t v21;
  int8x16_t v22;
  float64x2_t v23;
  int8x16_t v24;
  WebCore::JSDOMGlobalObject *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char **v33;
  int v34;
  unint64_t v35;
  WebCore::JSDOMRect *v36;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v39;
  void *v40;
  bmalloc::api *v41;
  float64x2_t v43;
  float64x2_t v44;
  uint64_t v45;
  bmalloc::api *v46;

  v3 = *((_QWORD *)a2 + 5);
  v45 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v45, "DOMQuad", "getBounds");
  v4 = 16 * (*(_DWORD *)v3 & 0xFFFFFFFE);
  v5 = *(unsigned int *)(v4 + 0x4C);
  v6 = *(_DWORD *)(v4 + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMQuad::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMQuad::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v45, "DOMQuad", "getBounds");
  v10 = *(_QWORD **)(v3 + 24);
  v11 = *(JSC::VM **)(v4 + 40);
  v12 = *(float64x2_t *)(v10[2] + 16);
  v13 = *(float64x2_t *)(v10[3] + 16);
  v14 = (int8x16_t)vcgtq_f64(v13, v12);
  v15 = vorrq_s8(v14, (int8x16_t)vcgeq_f64(v12, v13));
  v16 = (int8x16_t)vdupq_n_s64(0x7FF8000000000000uLL);
  v17 = (float64x2_t)vbslq_s8(v15, vbslq_s8((int8x16_t)vcgtq_f64(v12, v13), (int8x16_t)v13, (int8x16_t)v12), v16);
  v18 = *(float64x2_t *)(v10[4] + 16);
  v19 = (float64x2_t)vbslq_s8(vorrq_s8((int8x16_t)vcgtq_f64(v18, v17), (int8x16_t)vcgeq_f64(v17, v18)), vbslq_s8((int8x16_t)vcgtq_f64(v17, v18), (int8x16_t)v18, (int8x16_t)v17), v16);
  v20 = *(float64x2_t *)(v10[5] + 16);
  v21 = (float64x2_t)vbslq_s8(v15, vbslq_s8(v14, (int8x16_t)v13, (int8x16_t)v12), v16);
  v22 = (int8x16_t)vcgtq_f64(v18, v21);
  v23 = (float64x2_t)vbslq_s8(vorrq_s8(v22, (int8x16_t)vcgeq_f64(v21, v18)), vbslq_s8(v22, (int8x16_t)v18, (int8x16_t)v21), v16);
  v24 = (int8x16_t)vcgtq_f64(v20, v23);
  v43 = (float64x2_t)vbslq_s8(vorrq_s8((int8x16_t)vcgtq_f64(v20, v19), (int8x16_t)vcgeq_f64(v19, v20)), vbslq_s8((int8x16_t)vcgtq_f64(v19, v20), (int8x16_t)v20, (int8x16_t)v19), v16);
  v44 = vsubq_f64((float64x2_t)vbslq_s8(vorrq_s8(v24, (int8x16_t)vcgeq_f64(v23, v20)), vbslq_s8(v24, (int8x16_t)v20, (int8x16_t)v23), v16), v43);
  v26 = bmalloc::api::isoAllocate();
  *(_QWORD *)v26 = 0;
  *(_DWORD *)(v26 + 8) = 1;
  *(float64x2_t *)(v26 + 16) = v43;
  *(float64x2_t *)(v26 + 32) = v44;
  v46 = (bmalloc::api *)v26;
  v27 = *((_QWORD *)v11 + 412);
  if (v27)
  {
    v28 = *(_DWORD *)(v27 - 8);
    v29 = ((unint64_t)&WebCore::JSDOMRect::s_info + ~((_QWORD)&WebCore::JSDOMRect::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMRect::s_info + ~((_QWORD)&WebCore::JSDOMRect::s_info << 32)) >> 22);
    v30 = 9 * ((v29 + ~(v29 << 13)) ^ ((v29 + ~(v29 << 13)) >> 8));
    v31 = (v30 ^ (v30 >> 15)) + ~((v30 ^ (v30 >> 15)) << 27);
    v32 = v28 & ((v31 >> 31) ^ v31);
    v33 = *(char ***)(v27 + 16 * v32);
    if (v33 == &WebCore::JSDOMRect::s_info)
    {
LABEL_17:
      v35 = *(_QWORD *)(v27 + 16 * v32 + 8);
      if (v35)
        goto LABEL_19;
    }
    else
    {
      v34 = 1;
      while (v33)
      {
        v32 = ((_DWORD)v32 + v34) & v28;
        v33 = *(char ***)(v27 + 16 * v32);
        ++v34;
        if (v33 == &WebCore::JSDOMRect::s_info)
          goto LABEL_17;
      }
    }
  }
  v36 = (WebCore::JSDOMRect *)*((_QWORD *)v11 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSDOMRect::createPrototype(v36, v11, v25);
  Structure = WebCore::JSDOMRect::createStructure((uint64_t *)v36, (uint64_t)v11, Prototype);
  v35 = WebCore::cacheDOMStructure((JSCell *)v11, Structure, (uint64_t)&WebCore::JSDOMRect::s_info);
LABEL_19:
  v39 = WebCore::JSDOMRect::create(v35, v11, (uint64_t *)&v46);
  WebCore::cacheWrapper<WebCore::DOMRect,WebCore::JSDOMRect>(*((_QWORD *)v11 + 415), (uint64_t *)v26, v39);
  v41 = v46;
  v46 = 0;
  if (v41)
  {
    if (*((_DWORD *)v41 + 2) == 1)
    {
      if (*(_QWORD *)v41)
      {
        *(_QWORD *)(*(_QWORD *)v41 + 8) = 3;
        *(_QWORD *)v41 = 0;
      }
      bmalloc::api::isoDeallocate(v41, v40);
    }
    else
    {
      --*((_DWORD *)v41 + 2);
    }
  }
  return (_BYTE *)v39;
}

_BYTE *WebCore::jsDOMQuadPrototypeFunction_toJSON(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  bmalloc::api **v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t Slow;
  uint64_t v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  WebCore::JSDOMGlobalObject *v21;
  uint64_t v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  WebCore::JSDOMGlobalObject *v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  unint64_t v30;
  WebCore *v31;
  WebCore *v32;
  uint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v3 = *((_QWORD *)a2 + 5);
  v4 = *((_QWORD *)this + 7);
  v33 = v4;
  if ((v3 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v33, "DOMQuad", "toJSON");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMQuad::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMQuad::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v33, "DOMQuad", "toJSON");
  v10 = *(bmalloc::api ***)(v3 + 24);
  v11 = *(_QWORD *)(v4 + 15056);
  if (!v11)
  {
    v31 = this;
    Slow = JSC::CompleteSubspace::allocateSlow();
    this = v31;
    goto LABEL_15;
  }
  v12 = *(unsigned int *)(v11 + 60);
  Slow = *(_QWORD *)(v11 + 24);
  if (Slow >= *(_QWORD *)(v11 + 32))
  {
    Slow = *(_QWORD *)(v11 + 40);
    if ((Slow & 1) != 0)
    {
      v32 = this;
      JSC::sanitizeStackForVM();
      Slow = JSC::LocalAllocator::allocateSlowCase();
      this = v32;
      goto LABEL_15;
    }
    v30 = *(_QWORD *)(Slow + 8) ^ *(_QWORD *)(v11 + 48);
    *(_QWORD *)(v11 + 32) = Slow + HIDWORD(v30);
    *(_QWORD *)(v11 + 40) = Slow + (int)v30;
  }
  *(_QWORD *)(v11 + 24) = Slow + v12;
LABEL_15:
  *(_DWORD *)Slow = 0;
  *(_DWORD *)Slow = *((_DWORD *)this + 212);
  *(_DWORD *)(Slow + 4) = 16783360;
  *(_OWORD *)(Slow + 8) = 0u;
  *(_OWORD *)(Slow + 24) = 0u;
  *(_OWORD *)(Slow + 40) = 0u;
  *(_QWORD *)(Slow + 56) = 0;
  if (*(_BYTE *)(v4 + 755))
    __dmb(0xAu);
  v14 = WebCore::wrap<WebCore::DOMPoint>(*(JSC::VM **)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28), v10[2], a3);
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v15 = v34;
  v34 = 0;
  v35 = Slow;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)Slow, (JSC::VM *)v4, (unint64_t)v15, v14, 0, (uint64_t)&v34);
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v16);
    else
      *(_DWORD *)v15 -= 2;
  }
  v18 = WebCore::wrap<WebCore::DOMPoint>(*(JSC::VM **)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28), v10[3], v17);
  if (*(_DWORD *)(v4 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v19 = v34;
  v34 = 0;
  v35 = Slow;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)Slow, (JSC::VM *)v4, (unint64_t)v19, v18, 0, (uint64_t)&v34);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v22 = WebCore::wrap<WebCore::DOMPoint>(*(JSC::VM **)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28), v10[4], v21);
  if (*(_DWORD *)(v4 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v23 = v34;
  v34 = 0;
  v35 = Slow;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)Slow, (JSC::VM *)v4, (unint64_t)v23, v22, 0, (uint64_t)&v34);
  if (v23)
  {
    if (*(_DWORD *)v23 == 2)
      WTF::StringImpl::destroy(v23, v24);
    else
      *(_DWORD *)v23 -= 2;
  }
  v26 = WebCore::wrap<WebCore::DOMPoint>(*(JSC::VM **)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28), v10[5], v25);
  if (*(_DWORD *)(v4 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v27 = v34;
  v34 = 0;
  v35 = Slow;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)Slow, (JSC::VM *)v4, (unint64_t)v27, v26, 0, (uint64_t)&v34);
  if (v27)
  {
    if (*(_DWORD *)v27 == 2)
      WTF::StringImpl::destroy(v27, v28);
    else
      *(_DWORD *)v27 -= 2;
  }
  return (_BYTE *)Slow;
}

void WebCore::DOMQuad::~DOMQuad(WebCore::DOMQuad *this, void *a2)
{
  bmalloc::api *v3;
  bmalloc::api *v4;
  bmalloc::api *v5;
  bmalloc::api *v6;

  v3 = (bmalloc::api *)*((_QWORD *)this + 5);
  *((_QWORD *)this + 5) = 0;
  if (v3)
  {
    if (*((_DWORD *)v3 + 2) == 1)
    {
      if (*(_QWORD *)v3)
      {
        *(_QWORD *)(*(_QWORD *)v3 + 8) = 3;
        *(_QWORD *)v3 = 0;
      }
      bmalloc::api::isoDeallocate(v3, a2);
    }
    else
    {
      --*((_DWORD *)v3 + 2);
    }
  }
  v4 = (bmalloc::api *)*((_QWORD *)this + 4);
  *((_QWORD *)this + 4) = 0;
  if (v4)
  {
    if (*((_DWORD *)v4 + 2) == 1)
    {
      if (*(_QWORD *)v4)
      {
        *(_QWORD *)(*(_QWORD *)v4 + 8) = 3;
        *(_QWORD *)v4 = 0;
      }
      bmalloc::api::isoDeallocate(v4, a2);
    }
    else
    {
      --*((_DWORD *)v4 + 2);
    }
  }
  v5 = (bmalloc::api *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (v5)
  {
    if (*((_DWORD *)v5 + 2) == 1)
    {
      if (*(_QWORD *)v5)
      {
        *(_QWORD *)(*(_QWORD *)v5 + 8) = 3;
        *(_QWORD *)v5 = 0;
      }
      bmalloc::api::isoDeallocate(v5, a2);
    }
    else
    {
      --*((_DWORD *)v5 + 2);
    }
  }
  v6 = (bmalloc::api *)*((_QWORD *)this + 2);
  *((_QWORD *)this + 2) = 0;
  if (v6)
  {
    if (*((_DWORD *)v6 + 2) == 1)
    {
      if (*(_QWORD *)v6)
      {
        *(_QWORD *)(*(_QWORD *)v6 + 8) = 3;
        *(_QWORD *)v6 = 0;
      }
      bmalloc::api::isoDeallocate(v6, a2);
    }
    else
    {
      --*((_DWORD *)v6 + 2);
    }
  }
  if (*(_QWORD *)this)
  {
    *(_QWORD *)(*(_QWORD *)this + 8) = 3;
    *(_QWORD *)this = 0;
  }
}

uint64_t WebCore::jsDOMRectConstructorFunction_fromRect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  WebCore::JSDOMGlobalObject *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char **v15;
  int v16;
  unint64_t v17;
  WebCore::JSDOMRect *v18;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v21;
  void *v22;
  bmalloc::api *v23;
  __int128 v25;
  bmalloc::api *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  int v30;

  if (*((_DWORD *)a2 + 8) == 1)
    v4 = 10;
  else
    v4 = *((_QWORD *)a2 + 6);
  WebCore::convertDictionary<WebCore::DOMRectInit>((JSC::JSCell *)v4, (uint64_t)this, (uint64_t)&v27);
  if (v30)
    return 0;
  v25 = v27;
  v5 = v28;
  v6 = v29;
  v8 = bmalloc::api::isoAllocate();
  *(_QWORD *)v8 = 0;
  *(_DWORD *)(v8 + 8) = 1;
  *(_OWORD *)(v8 + 16) = v25;
  *(_QWORD *)(v8 + 32) = v5;
  *(_QWORD *)(v8 + 40) = v6;
  v26 = (bmalloc::api *)v8;
  v9 = *((_QWORD *)this + 412);
  if (v9)
  {
    v10 = *(_DWORD *)(v9 - 8);
    v11 = ((unint64_t)&WebCore::JSDOMRect::s_info + ~((_QWORD)&WebCore::JSDOMRect::s_info << 32)) ^ (((unint64_t)&WebCore::JSDOMRect::s_info + ~((_QWORD)&WebCore::JSDOMRect::s_info << 32)) >> 22);
    v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
    v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
    v14 = v10 & ((v13 >> 31) ^ v13);
    v15 = *(char ***)(v9 + 16 * v14);
    if (v15 == &WebCore::JSDOMRect::s_info)
    {
LABEL_10:
      v17 = *(_QWORD *)(v9 + 16 * v14 + 8);
      if (v17)
        goto LABEL_12;
    }
    else
    {
      v16 = 1;
      while (v15)
      {
        v14 = ((_DWORD)v14 + v16) & v10;
        v15 = *(char ***)(v9 + 16 * v14);
        ++v16;
        if (v15 == &WebCore::JSDOMRect::s_info)
          goto LABEL_10;
      }
    }
  }
  v18 = (WebCore::JSDOMRect *)*((_QWORD *)this + 7);
  Prototype = (JSC::JSCell *)WebCore::JSDOMRect::createPrototype(v18, this, v7);
  Structure = WebCore::JSDOMRect::createStructure((uint64_t *)v18, (uint64_t)this, Prototype);
  v17 = WebCore::cacheDOMStructure((JSCell *)this, Structure, (uint64_t)&WebCore::JSDOMRect::s_info);
LABEL_12:
  v21 = WebCore::JSDOMRect::create(v17, this, (uint64_t *)&v26);
  WebCore::cacheWrapper<WebCore::DOMRect,WebCore::JSDOMRect>(*((_QWORD *)this + 415), (uint64_t *)v8, v21);
  v23 = v26;
  v26 = 0;
  if (v23)
  {
    if (*((_DWORD *)v23 + 2) == 1)
    {
      if (*(_QWORD *)v23)
      {
        *(_QWORD *)(*(_QWORD *)v23 + 8) = 3;
        *(_QWORD *)v23 = 0;
      }
      bmalloc::api::isoDeallocate(v23, v22);
    }
    else
    {
      --*((_DWORD *)v23 + 2);
    }
  }
  return v21;
}

uint64_t WebCore::jsDOMRectListPrototypeFunction_item(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore *v12;
  DOMRect *v13;
  WebCore::JSDOMGlobalObject *v14;
  JSValue v16;
  JSC::VM *v17;
  _DWORD v18[2];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v17 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "DOMRectList", "item");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMRectList::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMRectList::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "DOMRectList", "item");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v16.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v16);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    v12 = (WebCore *)WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v18);
    if (v18[1])
    {
      return 0;
    }
    else if (*(_DWORD *)(v11 + 20) > v18[0]
           && (v14 = *(WebCore::JSDOMGlobalObject **)(*(_QWORD *)(v11 + 8) + 8 * v18[0])) != 0)
    {
      return WebCore::toJS(v12, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28), v14, v13);
    }
    else
    {
      return 2;
    }
  }
}

uint64_t WebCore::jsDOMRectReadOnlyConstructorFunction_fromRect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  bmalloc::api *v10;
  __int128 v12;
  bmalloc::api *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  int v17;

  if (*((_DWORD *)a2 + 8) == 1)
    v4 = 10;
  else
    v4 = *((_QWORD *)a2 + 6);
  WebCore::convertDictionary<WebCore::DOMRectInit>((JSC::JSCell *)v4, (uint64_t)this, (uint64_t)&v14);
  if (v17)
    return 0;
  v12 = v14;
  v5 = v15;
  v6 = v16;
  v7 = bmalloc::api::isoAllocate();
  *(_QWORD *)v7 = 0;
  *(_DWORD *)(v7 + 8) = 1;
  *(_OWORD *)(v7 + 16) = v12;
  *(_QWORD *)(v7 + 32) = v5;
  *(_QWORD *)(v7 + 40) = v6;
  v13 = (bmalloc::api *)v7;
  v9 = WebCore::createWrapper<WebCore::DOMRectReadOnly,WebCore::DOMRectReadOnly>((uint64_t)this, (uint64_t *)&v13);
  v10 = v13;
  v13 = 0;
  if (v10)
  {
    if (*((_DWORD *)v10 + 2) == 1)
    {
      if (*(_QWORD *)v10)
      {
        *(_QWORD *)(*(_QWORD *)v10 + 8) = 3;
        *(_QWORD *)v10 = 0;
      }
      bmalloc::api::isoDeallocate(v10, v8);
    }
    else
    {
      --*((_DWORD *)v10 + 2);
    }
  }
  return v9;
}

_BYTE *WebCore::jsDOMRectReadOnlyPrototypeFunction_toJSON(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  double *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t Slow;
  double v14;
  uint64_t v15;
  unint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  double v19;
  uint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  double v24;
  uint64_t v25;
  unint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  double v29;
  uint64_t v30;
  unint64_t v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  double v34;
  double v35;
  uint64_t v36;
  unint64_t v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  double v40;
  uint64_t v41;
  unint64_t v42;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44;
  double v45;
  uint64_t v46;
  unint64_t v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  double v50;
  double v51;
  uint64_t v52;
  unint64_t v53;
  WTF::StringImpl *v54;
  WTF::StringImpl *v55;
  unint64_t v57;
  WebCore *v58;
  WebCore *v59;
  uint64_t v60;
  WTF::StringImpl *v61;
  unint64_t v62;
  int v63;
  int v64;
  uint64_t v65;

  v3 = *((_QWORD *)a2 + 5);
  v4 = *((_QWORD *)this + 7);
  v60 = v4;
  if ((v3 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v60, "DOMRectReadOnly", "toJSON");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMRectReadOnly::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMRectReadOnly::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v60, "DOMRectReadOnly", "toJSON");
  v10 = *(double **)(v3 + 24);
  v11 = *(_QWORD *)(v4 + 15056);
  if (!v11)
  {
    v59 = this;
    Slow = JSC::CompleteSubspace::allocateSlow();
    this = v59;
    goto LABEL_15;
  }
  v12 = *(unsigned int *)(v11 + 60);
  Slow = *(_QWORD *)(v11 + 24);
  if (Slow >= *(_QWORD *)(v11 + 32))
  {
    Slow = *(_QWORD *)(v11 + 40);
    if ((Slow & 1) != 0)
    {
      v58 = this;
      JSC::sanitizeStackForVM();
      Slow = JSC::LocalAllocator::allocateSlowCase();
      this = v58;
      goto LABEL_15;
    }
    v57 = *(_QWORD *)(Slow + 8) ^ *(_QWORD *)(v11 + 48);
    *(_QWORD *)(v11 + 32) = Slow + HIDWORD(v57);
    *(_QWORD *)(v11 + 40) = Slow + (int)v57;
  }
  *(_QWORD *)(v11 + 24) = Slow + v12;
LABEL_15:
  *(_DWORD *)Slow = 0;
  *(_DWORD *)Slow = *((_DWORD *)this + 212);
  *(_DWORD *)(Slow + 4) = 16783360;
  *(_OWORD *)(Slow + 8) = 0u;
  *(_OWORD *)(Slow + 24) = 0u;
  *(_OWORD *)(Slow + 40) = 0u;
  *(_QWORD *)(Slow + 56) = 0;
  if (*(_BYTE *)(v4 + 755))
    __dmb(0xAu);
  v14 = v10[2];
  if ((*(_QWORD *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v15 = (int)v14, v14 == (double)(int)v15)
    && ((_DWORD)v15 || (*(_QWORD *)&v14 & 0x8000000000000000) == 0))
  {
    v16 = v15 | 0xFFFE000000000000;
  }
  else
  {
    v16 = *(_QWORD *)&v14 + 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 41968));
  v17 = v61;
  v61 = 0;
  v62 = Slow;
  v63 = -1;
  v64 = 0x1000000;
  v65 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)Slow, (JSC::VM *)v4, (unint64_t)v17, v16, 0, (uint64_t)&v61);
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v18);
    else
      *(_DWORD *)v17 -= 2;
  }
  v19 = v10[3];
  if ((*(_QWORD *)&v19 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v20 = (int)v19, v19 == (double)(int)v20)
    && ((_DWORD)v20 || (*(_QWORD *)&v19 & 0x8000000000000000) == 0))
  {
    v21 = v20 | 0xFFFE000000000000;
  }
  else
  {
    v21 = *(_QWORD *)&v19 + 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  JSC::SmallStrings::singleCharacterStringRep((JSC::SmallStrings *)(v4 + 41968));
  v22 = v61;
  v61 = 0;
  v62 = Slow;
  v63 = -1;
  v64 = 0x1000000;
  v65 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)Slow, (JSC::VM *)v4, (unint64_t)v22, v21, 0, (uint64_t)&v61);
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v23);
    else
      *(_DWORD *)v22 -= 2;
  }
  v24 = v10[4];
  if ((*(_QWORD *)&v24 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v25 = (int)v24, v24 == (double)(int)v25)
    && ((_DWORD)v25 || (*(_QWORD *)&v24 & 0x8000000000000000) == 0))
  {
    v26 = v25 | 0xFFFE000000000000;
  }
  else
  {
    v26 = *(_QWORD *)&v24 + 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v27 = v61;
  v61 = 0;
  v62 = Slow;
  v63 = -1;
  v64 = 0x1000000;
  v65 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)Slow, (JSC::VM *)v4, (unint64_t)v27, v26, 0, (uint64_t)&v61);
  if (v27)
  {
    if (*(_DWORD *)v27 == 2)
      WTF::StringImpl::destroy(v27, v28);
    else
      *(_DWORD *)v27 -= 2;
  }
  v29 = v10[5];
  if ((*(_QWORD *)&v29 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v30 = (int)v29, v29 == (double)(int)v30)
    && ((_DWORD)v30 || (*(_QWORD *)&v29 & 0x8000000000000000) == 0))
  {
    v31 = v30 | 0xFFFE000000000000;
  }
  else
  {
    v31 = *(_QWORD *)&v29 + 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v32 = v61;
  v61 = 0;
  v62 = Slow;
  v63 = -1;
  v64 = 0x1000000;
  v65 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)Slow, (JSC::VM *)v4, (unint64_t)v32, v31, 0, (uint64_t)&v61);
  if (v32)
  {
    if (*(_DWORD *)v32 == 2)
      WTF::StringImpl::destroy(v32, v33);
    else
      *(_DWORD *)v32 -= 2;
  }
  v34 = v10[3];
  v35 = v34 + v10[5] >= v34 ? v10[3] : v34 + v10[5];
  if ((*(_QWORD *)&v35 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v36 = (int)v35, v35 == (double)(int)v36)
    && ((_DWORD)v36 || (*(_QWORD *)&v35 & 0x8000000000000000) == 0))
  {
    v37 = v36 | 0xFFFE000000000000;
  }
  else
  {
    v37 = *(_QWORD *)&v35 + 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v38 = v61;
  v61 = 0;
  v62 = Slow;
  v63 = -1;
  v64 = 0x1000000;
  v65 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)Slow, (JSC::VM *)v4, (unint64_t)v38, v37, 0, (uint64_t)&v61);
  if (v38)
  {
    if (*(_DWORD *)v38 == 2)
      WTF::StringImpl::destroy(v38, v39);
    else
      *(_DWORD *)v38 -= 2;
  }
  v40 = v10[2];
  if (v40 < v40 + v10[4])
    v40 = v40 + v10[4];
  if ((*(_QWORD *)&v40 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v41 = (int)v40, v40 == (double)(int)v41)
    && ((_DWORD)v41 || (*(_QWORD *)&v40 & 0x8000000000000000) == 0))
  {
    v42 = v41 | 0xFFFE000000000000;
  }
  else
  {
    v42 = *(_QWORD *)&v40 + 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v43 = v61;
  v61 = 0;
  v62 = Slow;
  v63 = -1;
  v64 = 0x1000000;
  v65 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)Slow, (JSC::VM *)v4, (unint64_t)v43, v42, 0, (uint64_t)&v61);
  if (v43)
  {
    if (*(_DWORD *)v43 == 2)
      WTF::StringImpl::destroy(v43, v44);
    else
      *(_DWORD *)v43 -= 2;
  }
  v45 = v10[3];
  if (v45 < v45 + v10[5])
    v45 = v45 + v10[5];
  if ((*(_QWORD *)&v45 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v46 = (int)v45, v45 == (double)(int)v46)
    && ((_DWORD)v46 || (*(_QWORD *)&v45 & 0x8000000000000000) == 0))
  {
    v47 = v46 | 0xFFFE000000000000;
  }
  else
  {
    v47 = *(_QWORD *)&v45 + 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v48 = v61;
  v61 = 0;
  v62 = Slow;
  v63 = -1;
  v64 = 0x1000000;
  v65 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)Slow, (JSC::VM *)v4, (unint64_t)v48, v47, 0, (uint64_t)&v61);
  if (v48)
  {
    if (*(_DWORD *)v48 == 2)
      WTF::StringImpl::destroy(v48, v49);
    else
      *(_DWORD *)v48 -= 2;
  }
  v50 = v10[2];
  v51 = v50 + v10[4] >= v50 ? v10[2] : v50 + v10[4];
  if ((*(_QWORD *)&v51 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v52 = (int)v51, v51 == (double)(int)v52)
    && ((_DWORD)v52 || (*(_QWORD *)&v51 & 0x8000000000000000) == 0))
  {
    v53 = v52 | 0xFFFE000000000000;
  }
  else
  {
    v53 = *(_QWORD *)&v51 + 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v54 = v61;
  v61 = 0;
  v62 = Slow;
  v63 = -1;
  v64 = 0x1000000;
  v65 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)Slow, (JSC::VM *)v4, (unint64_t)v54, v53, 0, (uint64_t)&v61);
  if (v54)
  {
    if (*(_DWORD *)v54 == 2)
      WTF::StringImpl::destroy(v54, v55);
    else
      *(_DWORD *)v54 -= 2;
  }
  return (_BYTE *)Slow;
}

_BYTE *WebCore::jsDOMSelectionPrototypeFunction_getRangeAt(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  _DWORD *v8;
  WebCore::DOMSelection *v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  JSValue v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  JSValue v18;
  WebCore *v19;
  JSC::JSGlobalObject *v20;
  JSC::CallFrame *v21;
  JSC::VM *v22;
  int v23[2];
  WTF::StringImpl *v24;
  int v25;
  unsigned int v26[2];
  _BYTE v27[8];
  WTF::StringImpl *v28;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v22 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSDOMSelection *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v22, "Selection", "getRangeAt");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v15.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
    return (_BYTE *)JSC::VM::throwException(v5, this, v15);
  }
  v8 = (_DWORD *)v6;
  v9 = *(WebCore::DOMSelection **)(v6 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v26);
  if (v26[1])
    return 0;
  v10 = *(_QWORD *)(16 * (*v8 & 0xFFFFFFFE) + 0x28);
  WebCore::DOMSelection::getRangeAt(v9, v26[0], (uint64_t)v23);
  if (!v25)
  {
    v11 = *(_DWORD **)v23;
    *(_QWORD *)v23 = 0;
    v12 = WebCore::wrap<WebCore::Range>((uint64_t)this, v10, (uint64_t)v11);
    if (v11[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v11 + 8))(v11);
    else
      --v11[2];
LABEL_7:
    if (v25 != -1)
      ((void (*)(_BYTE *, int *))off_1E325DD28[v25])(v27, v23);
    return (_BYTE *)v12;
  }
  if (v25 == 1)
  {
    v16 = (WTF::StringImpl *)LOBYTE(v23[0]);
    v27[0] = v23[0];
    v17 = v24;
    v24 = 0;
    v28 = v17;
    if (!*((_QWORD *)v5 + 2))
    {
      v18.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v23[0]), (JSC::JSGlobalObject *)&v28);
      JSC::VM::throwException(v5, this, v18);
      v17 = v28;
    }
    v28 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v16);
      else
        *(_DWORD *)v17 -= 2;
    }
    v12 = 0;
    goto LABEL_7;
  }
  v19 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDOMSelectionPrototypeFunction_addRange(v19, v20, v21);
}

uint64_t WebCore::jsDOMSelectionPrototypeFunction_addRange(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  WebCore::DOMSelection *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WebCore::Range *v12;
  JSValue v14;
  JSC::VM *v15;
  JSC::VM *v16;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v15 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSDOMSelection *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v15, "Selection", "addRange");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v14.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
    return JSC::VM::throwException(v5, this, v14);
  }
  else
  {
    v8 = *(WebCore::DOMSelection **)(v6 + 24);
    v9 = *((_QWORD *)a2 + 6);
    v16 = v5;
    v10 = JSC::jsDynamicCast<WebCore::JSRange *>(v9);
    if (v10 && (v12 = *(WebCore::Range **)(v10 + 24)) != 0)
    {
      WebCore::DOMSelection::addRange(v8, v12);
      return 10;
    }
    else
    {
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v16, 0, "range", 6, "Selection", 10, v11, "addRange", 9, "Range", 6);
      return 0;
    }
  }
}

uint64_t WebCore::jsDOMSelectionPrototypeFunction_removeRange(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  WebCore::DOMSelection *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WebCore::Range *v12;
  JSValue v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  JSC::VM *v18;
  char v19;
  WTF::StringImpl *v20;
  JSC::VM *v21;
  WTF::StringImpl *v22;
  char v23;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v18 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSDOMSelection *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v18, "Selection", "removeRange");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v14.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
    return JSC::VM::throwException(v5, this, v14);
  }
  else
  {
    v8 = *(WebCore::DOMSelection **)(v6 + 24);
    v9 = *((_QWORD *)a2 + 6);
    v21 = v5;
    v10 = JSC::jsDynamicCast<WebCore::JSRange *>(v9);
    if (v10 && (v12 = *(WebCore::Range **)(v10 + 24)) != 0)
    {
      WebCore::DOMSelection::removeRange(v8, v12, &v21);
      if (!v23)
        return 10;
      v15 = (WTF::StringImpl *)v21;
      v19 = (char)v21;
      v16 = v22;
      v20 = v22;
      if (!*((_QWORD *)v5 + 2))
      {
        v17.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v21, (JSC::JSGlobalObject *)&v20);
        JSC::VM::throwException(v5, this, v17);
        v16 = v20;
      }
      v20 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
    else
    {
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v21, 0, "range", 6, "Selection", 10, v11, "removeRange", 12, "Range", 6);
    }
    return 0;
  }
}

uint64_t WebCore::jsDOMSelectionPrototypeFunction_removeAllRanges(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;

  v4 = *((_QWORD *)a2 + 5);
  v7 = *((_QWORD *)this + 7);
  v5 = JSC::jsDynamicCast<WebCore::JSDOMSelection *>(v4);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v7, "Selection", "removeAllRanges");
  WebCore::DOMSelection::removeAllRanges(*(WebCore::DOMSelection **)(v5 + 24));
  return 10;
}

_BYTE *WebCore::jsDOMSelectionPrototypeFunction_getComposedRanges(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  _DWORD *v7;
  WebCore::Node *v8;
  uint64_t v9;
  int v10;
  void *v11;
  WTF *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  JSC::VM *v19;
  unsigned int v20;
  uint64_t *v21;
  uint64_t v22;
  objc_class *v23;
  int v24;
  BOOL v25;
  JSValue v26;
  void *v27;
  JSC::VM *v28;
  uint64_t v29;
  uint64_t *v30;
  WTF *v31;
  uint64_t v32;
  _DWORD *v33;
  WTF *v34;
  WTF *v35;
  void *v37;
  _QWORD *v38;
  WebCore::Node *v39;
  JSC::VM *v40;
  WTF *v41;
  int v42;
  _DWORD v43[3];
  WTF *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  WTF *v48;
  _OWORD v49[4];
  uint64_t v50;
  JSC::VM *v51;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v40 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSDOMSelection *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v40, "Selection", "getComposedRanges");
  v7 = (_DWORD *)v6;
  v8 = *(WebCore::Node **)(v6 + 24);
  v9 = *((int *)a2 + 8);
  v10 = v9 - 1;
  if (v9 == 1)
  {
    *(_QWORD *)&v43[1] = 0;
  }
  else
  {
    v12 = (WTF *)WTF::fastMalloc((WTF *)(8 * (v9 - 1) + 8));
    *(_DWORD *)v12 = v10;
    if (v10)
    {
      v39 = v8;
      v13 = 0;
      v14 = 0x600000000;
      while (1)
      {
        v15 = *(_QWORD *)((char *)a2 + (v14 >> 29));
        v46 = *((_QWORD *)this + 7);
        v16 = JSC::jsDynamicCast<WebCore::JSShadowRoot *>(v15);
        if (!v16)
          break;
        v17 = *(_QWORD *)(v16 + 24);
        if (!v17)
          break;
        if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
          goto LABEL_16;
        *((_QWORD *)v12 + ++v13) = v17;
        v14 += 0x100000000;
        if (v13 >= *(unsigned int *)v12)
        {
          LODWORD(v13) = *(_DWORD *)v12;
          goto LABEL_17;
        }
      }
      JSC::throwTypeError();
      if (*((_DWORD *)v5 + 20))
        JSC::VM::hasExceptionsAfterHandlingTraps(v5);
LABEL_16:
      *(_DWORD *)v12 = v13;
LABEL_17:
      v8 = v39;
    }
    else
    {
      LODWORD(v13) = 0;
    }
    if ((_DWORD)v13 != v10)
    {
      WTF::fastFree(v12, v11);
      v12 = 0;
    }
    if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    {
      *(_QWORD *)&v43[1] = 0;
      if (v12)
        WTF::fastFree(v12, v37);
    }
    else
    {
      *(_QWORD *)&v43[1] = v12;
    }
  }
  if (!*((_DWORD *)v5 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) == 0)
  {
    v18 = *(_QWORD *)(16 * (*v7 & 0xFFFFFFFE) + 0x28);
    WebCore::DOMSelection::getComposedRanges(v8, (unsigned int **)&v43[1], &v41);
    v19 = (JSC::VM *)*((_QWORD *)this + 7);
    v51 = v19;
    LOBYTE(v46) = 0;
    v47 = 0x800000000;
    v48 = (WTF *)((char *)v49 + 8);
    memset(v49, 0, sizeof(v49));
    v50 = 0;
    v20 = v43[0];
    if (v43[0] >= 9u)
    {
      LOBYTE(v46) = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v47) == 1;
      v20 = v43[0];
      if (v43[0])
      {
LABEL_25:
        v21 = (uint64_t *)v41;
        v22 = 8 * v20;
        do
        {
          v23 = (objc_class *)WebCore::wrap<WebCore::StaticRange>((uint64_t)this, v18, *v21);
          if (*((_DWORD *)v19 + 20))
          {
            if ((JSC::VM::hasExceptionsAfterHandlingTraps(v19) & 1) != 0)
              goto LABEL_67;
          }
          v24 = v47;
          if ((_DWORD)v47 != HIDWORD(v47) && (v48 != (WTF *)((char *)v49 + 8) ? (v25 = v48 == 0) : (v25 = 1), v25))
          {
            *((_QWORD *)v48 + v47) = v23;
            LODWORD(v47) = v24 + 1;
          }
          else
          {
            v26.super.isa = v23;
            if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v47, v26) == 1)
              LOBYTE(v46) = 1;
          }
          ++v21;
          v22 -= 8;
        }
        while (v22);
      }
    }
    else if (v43[0])
    {
      goto LABEL_25;
    }
    if ((_BYTE)v46)
    {
      JSC::throwOutOfMemoryError();
    }
    else
    {
      v44 = v48;
      v45 = v47;
      v28 = *(JSC::VM **)(v18 + 56);
      if (!*((_DWORD *)v28 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v28) & 1) == 0)
      {
        v29 = JSC::constructArray();
LABEL_44:
        v30 = *(uint64_t **)&v49[0];
        if (*(_QWORD *)&v49[0])
        {
          v44 = (WTF *)&v47;
          v38 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v49[0], (uint64_t *)&v44);
          WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v30, v38);
        }
        if (v48 != (WTF *)((char *)v49 + 8) && v48)
          WTF::fastFree(v48, v27);
        if (v43[0])
        {
          v31 = v41;
          v32 = 8 * v43[0];
          do
          {
            v33 = *(_DWORD **)v31;
            *(_QWORD *)v31 = 0;
            if (v33)
            {
              if (v33[2] == 1)
                (*(void (**)(_DWORD *))(*(_QWORD *)v33 + 8))(v33);
              else
                --v33[2];
            }
            v31 = (WTF *)((char *)v31 + 8);
            v32 -= 8;
          }
          while (v32);
        }
        v34 = v41;
        if (v41)
        {
          v41 = 0;
          v42 = 0;
          WTF::fastFree(v34, v27);
        }
        goto LABEL_57;
      }
    }
LABEL_67:
    v29 = 0;
    goto LABEL_44;
  }
  v29 = 0;
LABEL_57:
  v35 = *(WTF **)&v43[1];
  *(_QWORD *)&v43[1] = 0;
  if (v35)
    WTF::fastFree(v35, v27);
  return (_BYTE *)v29;
}

uint64_t WebCore::jsDOMSelectionPrototypeFunction_empty(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;

  v4 = *((_QWORD *)a2 + 5);
  v7 = *((_QWORD *)this + 7);
  v5 = JSC::jsDynamicCast<WebCore::JSDOMSelection *>(v4);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v7, "Selection", "empty");
  WebCore::DOMSelection::removeAllRanges(*(WebCore::DOMSelection **)(v5 + 24));
  return 10;
}

uint64_t WebCore::jsDOMSelectionPrototypeFunction_setPosition(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  uint64_t v9;
  WebCore::DOMSelection *v10;
  uint64_t v11;
  WebCore::Node *v12;
  unint64_t v13;
  uint64_t result;
  JSValue v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  JSValue v18;
  WTF::StringImpl *v19;
  JSC::VM *v20;
  unsigned int v21[2];
  char v22;
  WTF::StringImpl *v23;
  JSC::VM *v24;
  WTF::StringImpl *v25;
  char v26;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v20 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSDOMSelection *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "Selection", "setPosition");
  v9 = *((int *)a2 + 8);
  if ((_DWORD)v9 == 1)
  {
    v15.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
    return JSC::VM::throwException(v5, this, v15);
  }
  v10 = *(WebCore::DOMSelection **)(v6 + 24);
  v11 = *((_QWORD *)a2 + 6);
  if ((v11 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v12 = 0;
  }
  else
  {
    v24 = v5;
    if ((v11 & 0xFFFE000000000002) != 0
      || *(unsigned __int8 *)(v11 + 5) < 0xF0u
      || (v12 = *(WebCore::Node **)(v11 + 24)) == 0)
    {
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v24, 0, "node", 5, "Selection", 10, v8, "setPosition", 12, "Node", 5);
      return 0;
    }
  }
  if ((unint64_t)(v9 - 3) > 0xFFFFFFFFFFFFFFFDLL)
    v13 = 10;
  else
    v13 = *((_QWORD *)a2 + 7);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, v13, v21);
  if (!v21[1])
  {
    WebCore::DOMSelection::collapse(v10, v12, (WebCore::Node *)v21[0], &v24);
    if (!v26)
      return 10;
    v16 = (WTF::StringImpl *)v24;
    v22 = (char)v24;
    v17 = v25;
    v25 = 0;
    v23 = v17;
    if (!*((_QWORD *)v5 + 2))
    {
      v18.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v24, (JSC::JSGlobalObject *)&v23);
      JSC::VM::throwException(v5, this, v18);
      v17 = v23;
    }
    v23 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v16);
      else
        *(_DWORD *)v17 -= 2;
    }
    if (v26)
    {
      v19 = v25;
      v25 = 0;
      if (v19)
      {
        if (*(_DWORD *)v19 != 2)
        {
          result = 0;
          *(_DWORD *)v19 -= 2;
          return result;
        }
        WTF::StringImpl::destroy(v19, v16);
      }
    }
  }
  return 0;
}

uint64_t WebCore::jsDOMSelectionPrototypeFunction_collapseToStart(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v4;
  JSC::VM *v5;
  unint64_t v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  JSValue v10;
  JSC::VM *v11;
  char v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  char v16;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v11 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSDOMSelection *>(v4);
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v11, "Selection", "collapseToStart");
  WebCore::DOMSelection::collapseToStart(*(WebCore::DOMSelection **)(v6 + 24), &v14);
  if (!v16)
    return 10;
  v8 = (WTF::StringImpl *)v14;
  v12 = v14;
  v9 = v15;
  v13 = v15;
  if (!*((_QWORD *)v5 + 2))
  {
    v10.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v14, (JSC::JSGlobalObject *)&v13);
    JSC::VM::throwException(v5, this, v10);
    v9 = v13;
  }
  v13 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v8);
    else
      *(_DWORD *)v9 -= 2;
  }
  return 0;
}

uint64_t WebCore::jsDOMSelectionPrototypeFunction_collapseToEnd(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v4;
  JSC::VM *v5;
  unint64_t v6;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  JSValue v10;
  JSC::VM *v11;
  char v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  char v16;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v11 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSDOMSelection *>(v4);
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v11, "Selection", "collapseToEnd");
  WebCore::DOMSelection::collapseToEnd(*(WebCore::DOMSelection **)(v6 + 24), &v14);
  if (!v16)
    return 10;
  v8 = (WTF::StringImpl *)v14;
  v12 = v14;
  v9 = v15;
  v13 = v15;
  if (!*((_QWORD *)v5 + 2))
  {
    v10.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v14, (JSC::JSGlobalObject *)&v13);
    JSC::VM::throwException(v5, this, v10);
    v9 = v13;
  }
  v13 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v8);
    else
      *(_DWORD *)v9 -= 2;
  }
  return 0;
}

uint64_t WebCore::jsDOMSelectionPrototypeFunction_extend(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  uint64_t v9;
  WebCore::DOMSelection *v10;
  uint64_t v11;
  WebCore::Node *v12;
  unint64_t v13;
  uint64_t result;
  JSValue v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  JSValue v18;
  WTF::StringImpl *v19;
  JSC::VM *v20;
  unsigned int v21[2];
  char v22;
  WTF::StringImpl *v23;
  JSC::VM *v24;
  WTF::StringImpl *v25;
  char v26;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v20 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSDOMSelection *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "Selection", "extend");
  v9 = *((int *)a2 + 8);
  if ((_DWORD)v9 == 1)
  {
    v15.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
    return JSC::VM::throwException(v5, this, v15);
  }
  v10 = *(WebCore::DOMSelection **)(v6 + 24);
  v11 = *((_QWORD *)a2 + 6);
  v24 = v5;
  if ((v11 & 0xFFFE000000000002) != 0
    || *(unsigned __int8 *)(v11 + 5) < 0xF0u
    || (v12 = *(WebCore::Node **)(v11 + 24)) == 0)
  {
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v24, 0, "node", 5, "Selection", 10, v8, "extend", 7, "Node", 5);
    return 0;
  }
  if ((unint64_t)(v9 - 3) > 0xFFFFFFFFFFFFFFFDLL)
    v13 = 10;
  else
    v13 = *((_QWORD *)a2 + 7);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, v13, v21);
  if (!v21[1])
  {
    WebCore::DOMSelection::extend(v10, v12, (WebCore::Node *)v21[0], &v24);
    if (!v26)
      return 10;
    v16 = (WTF::StringImpl *)v24;
    v22 = (char)v24;
    v17 = v25;
    v25 = 0;
    v23 = v17;
    if (!*((_QWORD *)v5 + 2))
    {
      v18.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v24, (JSC::JSGlobalObject *)&v23);
      JSC::VM::throwException(v5, this, v18);
      v17 = v23;
    }
    v23 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v16);
      else
        *(_DWORD *)v17 -= 2;
    }
    if (v26)
    {
      v19 = v25;
      v25 = 0;
      if (v19)
      {
        if (*(_DWORD *)v19 != 2)
        {
          result = 0;
          *(_DWORD *)v19 -= 2;
          return result;
        }
        WTF::StringImpl::destroy(v19, v16);
      }
    }
  }
  return 0;
}

uint64_t WebCore::jsDOMSelectionPrototypeFunction_setBaseAndExtent(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  WebCore::DOMSelection *v9;
  uint64_t v10;
  WebCore::Node *v11;
  uint64_t v12;
  uint64_t v13;
  WebCore::Node *v14;
  uint64_t result;
  JSValue v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  JSValue v19;
  WTF::StringImpl *v20;
  JSC::VM *v21;
  unsigned int v22[2];
  WebCore::Node *v23;
  char v24;
  WTF::StringImpl *v25;
  int v26[2];
  WTF::StringImpl *v27;
  char v28;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v21 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSDOMSelection *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v21, "Selection", "setBaseAndExtent");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v16.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
    return JSC::VM::throwException(v5, this, v16);
  }
  v9 = *(WebCore::DOMSelection **)(v6 + 24);
  v10 = *((_QWORD *)a2 + 6);
  if ((v10 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v11 = 0;
  }
  else
  {
    *(_QWORD *)v26 = v5;
    if ((v10 & 0xFFFE000000000002) != 0
      || *(unsigned __int8 *)(v10 + 5) < 0xF0u
      || (v11 = *(WebCore::Node **)(v10 + 24)) == 0)
    {
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v26, 0, "baseNode", 9, "Selection", 10, v8, "setBaseAndExtent", 17, "Node", 5);
      return 0;
    }
  }
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), &v23);
  if (HIDWORD(v23))
    return 0;
  v13 = *((_QWORD *)a2 + 8);
  if ((v13 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v14 = 0;
  }
  else
  {
    *(_QWORD *)v26 = *((_QWORD *)this + 7);
    if ((v13 & 0xFFFE000000000002) != 0
      || *(unsigned __int8 *)(v13 + 5) < 0xF0u
      || (v14 = *(WebCore::Node **)(v13 + 24)) == 0)
    {
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v26, 2, "extentNode", 11, "Selection", 10, v12, "setBaseAndExtent", 17, "Node", 5);
      return 0;
    }
  }
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 9), v22);
  if (!v22[1])
  {
    WebCore::DOMSelection::setBaseAndExtent(v9, v11, (WebCore::Node *)v23, v14, (WebCore::Node *)v22[0], v26);
    if (!v28)
      return 10;
    v17 = (WTF::StringImpl *)LOBYTE(v26[0]);
    v24 = v26[0];
    v18 = v27;
    v27 = 0;
    v25 = v18;
    if (!*((_QWORD *)v5 + 2))
    {
      v19.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v26[0]), (JSC::JSGlobalObject *)&v25);
      JSC::VM::throwException(v5, this, v19);
      v18 = v25;
    }
    v25 = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v17);
      else
        *(_DWORD *)v18 -= 2;
    }
    if (v28)
    {
      v20 = v27;
      v27 = 0;
      if (v20)
      {
        if (*(_DWORD *)v20 != 2)
        {
          result = 0;
          *(_DWORD *)v20 -= 2;
          return result;
        }
        WTF::StringImpl::destroy(v20, v17);
      }
    }
  }
  return 0;
}

uint64_t WebCore::jsDOMSelectionPrototypeFunction_selectAllChildren(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  WebCore::DOMSelection *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  WebCore::Node *v13;
  uint64_t result;
  JSValue v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  JSValue v18;
  WTF::StringImpl *v19;
  JSC::VM *v20;
  char v21;
  WTF::StringImpl *v22;
  JSC::VM *v23;
  WTF::StringImpl *v24;
  char v25;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v20 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSDOMSelection *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "Selection", "selectAllChildren");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v15.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
    return JSC::VM::throwException(v5, this, v15);
  }
  v9 = *(WebCore::DOMSelection **)(v6 + 24);
  v10 = *((_QWORD *)a2 + 6);
  v23 = v5;
  if ((v10 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v10 + 5) < 0xF0u || (v11 = *(_QWORD *)(v10 + 24)) == 0)
  {
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v23, 0, "node", 5, "Selection", 10, v8, "selectAllChildren", 18, "Node", 5);
    return 0;
  }
  if ((*(_WORD *)(v11 + 28) & 4) != 0 && (v12 = *(_QWORD *)(v11 + 80)) != 0)
  {
    LODWORD(v13) = 0;
    do
    {
      v13 = (WebCore::Node *)((_DWORD)v13 + 1);
      v12 = *(_QWORD *)(v12 + 56);
    }
    while (v12);
  }
  else
  {
    v13 = 0;
  }
  WebCore::DOMSelection::setBaseAndExtent(v9, (WebCore::Node *)v11, 0, *(WebCore::Node **)(v10 + 24), v13, &v23);
  if (!v25)
    return 10;
  v16 = (WTF::StringImpl *)v23;
  v21 = (char)v23;
  v17 = v24;
  v24 = 0;
  v22 = v17;
  if (!*((_QWORD *)v5 + 2))
  {
    v18.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v23, (JSC::JSGlobalObject *)&v22);
    JSC::VM::throwException(v5, this, v18);
    v17 = v22;
  }
  v22 = 0;
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v16);
    else
      *(_DWORD *)v17 -= 2;
  }
  if (!v25)
    return 0;
  v19 = v24;
  v24 = 0;
  if (!v19)
    return 0;
  if (*(_DWORD *)v19 == 2)
  {
    WTF::StringImpl::destroy(v19, v16);
    return 0;
  }
  result = 0;
  *(_DWORD *)v19 -= 2;
  return result;
}

uint64_t WebCore::jsDOMSelectionPrototypeFunction_deleteFromDocument(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v4;
  unint64_t v5;
  WebCore::DOMSelection *v6;
  void *v7;
  WTF *v8;
  WTF *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WTF *v15;
  uint64_t v16;
  _BYTE v17[40];
  uint64_t v18;
  JSC::JSGlobalObject *v19;

  v4 = *((_QWORD *)a2 + 5);
  v14 = *((_QWORD *)this + 7);
  v5 = JSC::jsDynamicCast<WebCore::JSDOMSelection *>(v4);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v14, "Selection", "deleteFromDocument");
  v6 = *(WebCore::DOMSelection **)(v5 + 24);
  v15 = (WTF *)v17;
  v16 = 4;
  v17[32] = 0;
  v18 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v19 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v15;
  WebCore::DOMSelection::deleteFromDocument(v6);
  if (HIDWORD(v16))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v15, v19);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v18;
    if (HIDWORD(v16))
    {
      v11 = v15;
      v12 = 8 * HIDWORD(v16);
      do
      {
        v13 = *(_QWORD *)v11;
        *(_QWORD *)v11 = 0;
        if (v13)
        {
          if (*(_DWORD *)(v13 + 24) == 2)
          {
            if ((*(_WORD *)(v13 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v13, v7);
          }
          else
          {
            *(_DWORD *)(v13 + 24) -= 2;
          }
        }
        v11 = (WTF *)((char *)v11 + 8);
        v12 -= 8;
      }
      while (v12);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v18;
  }
  v8 = v15;
  if (v17 != (_BYTE *)v15 && v15 != 0)
  {
    v15 = 0;
    LODWORD(v16) = 0;
    WTF::fastFree(v8, v7);
  }
  return 10;
}

uint64_t WebCore::jsDOMSelectionPrototypeFunction_containsNode(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  uint64_t v9;
  WebCore::DOMSelection *v10;
  uint64_t v11;
  WebCore::Node *v12;
  unint64_t v13;
  double v14;
  int v15;
  uint64_t v16;
  int *v17;
  int v18;
  _BOOL4 v19;
  JSValue v21;
  BOOL v22;
  BOOL v23;
  _BOOL4 v24;
  JSC::VM *v25;
  JSC::VM *v26;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSDOMSelection *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "Selection", "containsNode");
  v9 = *((int *)a2 + 8);
  if ((_DWORD)v9 == 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
    return JSC::VM::throwException(v5, this, v21);
  }
  v10 = *(WebCore::DOMSelection **)(v6 + 24);
  v11 = *((_QWORD *)a2 + 6);
  v26 = v5;
  if ((v11 & 0xFFFE000000000002) != 0
    || *(unsigned __int8 *)(v11 + 5) < 0xF0u
    || (v12 = *(WebCore::Node **)(v11 + 24)) == 0)
  {
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v26, 0, "node", 5, "Selection", 10, v8, "containsNode", 13, "Node", 5);
    return 0;
  }
  if ((unint64_t)(v9 - 3) > 0xFFFFFFFFFFFFFFFDLL)
  {
    v13 = 10;
    goto LABEL_17;
  }
  v13 = *((_QWORD *)a2 + 7);
  if (v13 >= 0xFFFE000000000000)
  {
    v22 = (_DWORD)v13 == 0;
    goto LABEL_36;
  }
  *(_QWORD *)&v14 = v13 - 0x2000000000000;
  if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v13 & 0xFFFE000000000002) == 0)
    {
      v15 = *(unsigned __int8 *)(v13 + 5);
      if (v15 == 3)
      {
        v18 = *(_DWORD *)(v13 + 8);
      }
      else
      {
        if (v15 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
            v19 = 1;
            goto LABEL_18;
          }
          v22 = *(_QWORD *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
          goto LABEL_36;
        }
        v16 = *(_QWORD *)(v13 + 8);
        if ((v16 & 1) != 0)
          v17 = (int *)(v13 + 16);
        else
          v17 = (int *)(v16 + 4);
        v18 = *v17;
      }
      v22 = v18 == 0;
LABEL_36:
      v19 = !v22;
      goto LABEL_18;
    }
LABEL_17:
    v19 = v13 == 7;
    goto LABEL_18;
  }
  v23 = v14 <= 0.0;
  v24 = v14 < 0.0;
  v19 = !v23 || v24;
LABEL_18:
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  if (WebCore::DOMSelection::containsNode(v10, v12, v19))
    return 7;
  return 6;
}

_BYTE *WebCore::jsDOMSelectionPrototypeFunction_toString(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v13;
  uint64_t v14;
  WTF::StringImpl *v15;

  v4 = *((_QWORD *)a2 + 5);
  v14 = *((_QWORD *)this + 7);
  v5 = JSC::jsDynamicCast<WebCore::JSDOMSelection *>(v4);
  if (!v5)
    return WebCore::throwThisTypeError((int)this, (int)&v14, "Selection", "toString");
  WebCore::DOMSelection::toString(*(WebCore::Node **)(v5 + 24), (const WTF::String *)&v15);
  v6 = *((_QWORD *)this + 7);
  v7 = v15;
  if (!v15 || (v8 = *((_DWORD *)v15 + 1)) == 0)
  {
    v9 = *(_QWORD *)(v6 + 41968);
LABEL_8:
    v15 = 0;
    if (!v7)
      return (_BYTE *)v9;
    goto LABEL_15;
  }
  if (v8 != 1)
    goto LABEL_5;
  v10 = (unsigned __int8 *)*((_QWORD *)v15 + 1);
  if ((*((_BYTE *)v15 + 16) & 4) != 0)
  {
    v11 = *v10;
LABEL_13:
    v9 = *(_QWORD *)(v6 + 8 * v11 + 42216);
    goto LABEL_14;
  }
  v13 = *(unsigned __int16 *)v10;
  if (v13 <= 0xFF)
  {
    v11 = v13;
    goto LABEL_13;
  }
LABEL_5:
  v9 = *(_QWORD *)(v6 + 64760);
  if (!v9 || v15 != *(WTF::StringImpl **)(v9 + 8))
  {
    v9 = JSC::jsStringWithCacheSlowCase();
    v7 = v15;
    goto LABEL_8;
  }
LABEL_14:
  v15 = 0;
LABEL_15:
  if (*(_DWORD *)v7 == 2)
    WTF::StringImpl::destroy(v7, v7);
  else
    *(_DWORD *)v7 -= 2;
  return (_BYTE *)v9;
}

_BYTE *WebCore::jsDOMSelectionPrototypeFunction_modify(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  JSC::VM *v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  JSC::VM *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  WTF::StringImpl *v29;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  int v33;
  JSC::VM *v34;
  WTF::StringImpl *v35;
  int v36;
  WTF::StringImpl *v37;
  int v38;
  WTF::StringImpl *v39;
  int v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v34 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSDOMSelection *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v34, "Selection", "modify");
  v7 = *(_QWORD *)(v6 + 24);
  LODWORD(v8) = *((_DWORD *)a2 + 8);
  if ((_DWORD)v8 == 1 || (v9 = *((_QWORD *)a2 + 6), v9 == 10))
  {
    v10 = 0;
    v39 = 0;
    v40 = 0;
    goto LABEL_14;
  }
  v37 = (WTF::StringImpl *)*((_QWORD *)a2 + 6);
  if ((v9 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v9 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v37, this);
    goto LABEL_11;
  }
  v11 = *(WTF::StringImpl **)(v9 + 8);
  if ((v11 & 1) != 0)
  {
    v11 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v9, this);
    if (!v11)
      goto LABEL_10;
    goto LABEL_9;
  }
  if (v11)
LABEL_9:
    *(_DWORD *)v11 += 2;
LABEL_10:
  v35 = v11;
LABEL_11:
  if (*((_DWORD *)v5 + 20))
  {
    v10 = v35;
    if (JSC::VM::hasExceptionsAfterHandlingTraps(v5))
    {
      v40 = 1;
      v35 = 0;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, v29);
        else
          *(_DWORD *)v10 -= 2;
      }
      v25 = 0;
      v27 = 1;
      goto LABEL_50;
    }
  }
  else
  {
    v10 = v35;
  }
  v39 = v10;
  v40 = 0;
  LODWORD(v8) = *((_DWORD *)a2 + 8);
LABEL_14:
  v8 = (int)v8;
  if ((unint64_t)((int)v8 - 3) >= 0xFFFFFFFFFFFFFFFELL || (v12 = *((_QWORD *)a2 + 7), v12 == 10))
  {
    v13 = 0;
    v37 = 0;
    v38 = 0;
    goto LABEL_26;
  }
  v35 = (WTF::StringImpl *)*((_QWORD *)a2 + 7);
  v14 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v12 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v12 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v35, this);
    goto LABEL_23;
  }
  v15 = *(WTF::StringImpl **)(v12 + 8);
  if ((v15 & 1) != 0)
  {
    v15 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
    if (!v15)
      goto LABEL_22;
    goto LABEL_21;
  }
  if (v15)
LABEL_21:
    *(_DWORD *)v15 += 2;
LABEL_22:
  v43 = v15;
LABEL_23:
  if (*((_DWORD *)v14 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v14);
    v13 = v43;
    if (hasExceptionsAfterHandlingTraps)
    {
      v38 = 1;
      v43 = 0;
      if (v13)
      {
        if (*(_DWORD *)v13 == 2)
          WTF::StringImpl::destroy(v13, v31);
        else
          *(_DWORD *)v13 -= 2;
      }
      v25 = 0;
      v26 = 1;
      goto LABEL_49;
    }
  }
  else
  {
    v13 = v43;
  }
  v37 = v13;
  v38 = 0;
  v8 = *((int *)a2 + 8);
LABEL_26:
  if ((unint64_t)(v8 - 4) >= 0xFFFFFFFFFFFFFFFDLL || (v16 = *((_QWORD *)a2 + 8), v16 == 10))
  {
    v17 = 0;
    v36 = 0;
    goto LABEL_38;
  }
  v43 = (WTF::StringImpl *)v16;
  v18 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v16 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v16 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v43, this);
    goto LABEL_35;
  }
  v19 = *(WTF::StringImpl **)(v16 + 8);
  if ((v19 & 1) != 0)
  {
    v19 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v16, this);
    if (!v19)
      goto LABEL_34;
    goto LABEL_33;
  }
  if (v19)
LABEL_33:
    *(_DWORD *)v19 += 2;
LABEL_34:
  v42 = v19;
LABEL_35:
  if (*((_DWORD *)v18 + 20))
  {
    v33 = JSC::VM::hasExceptionsAfterHandlingTraps(v18);
    v17 = v42;
    if (v33)
    {
      v36 = 1;
      v42 = 0;
      if (v17)
      {
        if (*(_DWORD *)v17 == 2)
          WTF::StringImpl::destroy(v17, v32);
        else
          *(_DWORD *)v17 -= 2;
      }
      v25 = 0;
      v24 = 1;
      goto LABEL_48;
    }
  }
  else
  {
    v17 = v42;
  }
  v36 = 0;
LABEL_38:
  v39 = 0;
  v42 = v13;
  v43 = v10;
  v37 = 0;
  v35 = 0;
  v41 = v17;
  WebCore::DOMSelection::modify(v7, (const WTF::String *)&v43, (const WTF::String *)&v42, (const WTF::String *)&v41);
  v21 = v41;
  v41 = 0;
  if (v21)
  {
    if (*(_DWORD *)v21 == 2)
      WTF::StringImpl::destroy(v21, v20);
    else
      *(_DWORD *)v21 -= 2;
  }
  v22 = v42;
  v42 = 0;
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v20);
    else
      *(_DWORD *)v22 -= 2;
  }
  v23 = v43;
  v43 = 0;
  if (v23)
  {
    if (*(_DWORD *)v23 == 2)
      WTF::StringImpl::destroy(v23, v20);
    else
      *(_DWORD *)v23 -= 2;
  }
  v24 = 0;
  v25 = 10;
LABEL_48:
  ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A258[v24])(&v43, &v35);
  v26 = 0;
LABEL_49:
  ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A258[v26])(&v35, &v37);
  v27 = 0;
LABEL_50:
  ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A258[v27])(&v37, &v39);
  return (_BYTE *)v25;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore5RangeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore5RangeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_BYTE *WebCore::IDLOperation<WebCore::JSDOMSelection>::call<&WebCore::jsDOMSelectionPrototypeFunction_collapseBody,(WebCore::CastedThisErrorBehavior)0>(WebCore *a1, unint64_t *a2)
{
  unint64_t v4;
  WebCore::JSDOMSelection *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v11 = *((_QWORD *)a1 + 7);
  v4 = JSC::jsDynamicCast<WebCore::JSDOMSelection *>(a2[5]);
  if (v4)
    return (_BYTE *)WebCore::jsDOMSelectionPrototypeFunction_collapseBody(a1, (JSC::JSGlobalObject *)a2, *(JSC::CallFrame **)(v4 + 24), v5, v6, v7, v8, v9);
  else
    return WebCore::throwThisTypeError((int)a1, (int)&v11, "Selection", "collapse");
}

uint64_t WebCore::jsDOMSelectionPrototypeFunction_collapseBody(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSDOMSelection *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  int v10;
  uint64_t v13;
  unint64_t v14;
  JSValue v16;
  _QWORD v17[3];
  _DWORD v18[2];
  uint64_t v19;
  int v20;
  JSC::VM *v21;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v21 = v9;
  v10 = *((_DWORD *)a2 + 8);
  if (v10 == 1)
  {
    v16.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v16);
  }
  v13 = *((_QWORD *)a2 + 6);
  if ((v13 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v19 = 0;
    v20 = 0;
  }
  else
  {
    WebCore::Converter<WebCore::IDLInterface<WebCore::Node>>::convert<WebCore::jsDOMSelectionPrototypeFunction_collapseBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSDOMSelection *)::{lambda(JSC::JSGlobalObject&,JSC::ThrowScope &)#1}>((char *)&v19, (uint64_t)this, v13, (uint64_t)a4, a5, a6, a7, a8);
    if (v20)
      return 0;
    v10 = *((_DWORD *)a2 + 8);
  }
  if ((unint64_t)(v10 - 3) > 0xFFFFFFFFFFFFFFFDLL)
    v14 = 10;
  else
    v14 = *((_QWORD *)a2 + 7);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, v14, v18);
  if (v18[1])
    return 0;
  v17[0] = a3;
  v17[1] = &v19;
  v17[2] = v18;
  return WebCore::toJS<WebCore::IDLUndefined,WebCore::jsDOMSelectionPrototypeFunction_collapseBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSDOMSelection *)::{lambda(void)#1}>(this, &v21, (uint64_t)v17);
}

uint64_t WebCore::toJS<WebCore::IDLUndefined,WebCore::jsDOMSelectionPrototypeFunction_collapseBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSDOMSelection *)::{lambda(void)#1}>(JSC *a1, JSC::VM **a2, uint64_t a3)
{
  WTF::StringImpl *v5;
  uint64_t v6;
  WTF::StringImpl *v8;
  unsigned __int8 v9[8];
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  char v13;

  WebCore::jsDOMSelectionPrototypeFunction_collapseBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSDOMSelection *)::{lambda(void)#1}::operator()(&v11, a3);
  if (v13)
  {
    v9[0] = v11;
    v8 = v12;
    v12 = 0;
    v10 = v8;
    if (!*((_QWORD *)*a2 + 2))
    {
      WebCore::propagateExceptionSlowPath(a1, a2, v9);
      v8 = v10;
    }
    v10 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 2)
        WTF::StringImpl::destroy(v8, v5);
      else
        *(_DWORD *)v8 -= 2;
    }
    v6 = 0;
  }
  else
  {
    v6 = 10;
  }
  WebCore::ExceptionOr<void>::~ExceptionOr((uint64_t)&v11, v5);
  return v6;
}

char *WebCore::Converter<WebCore::IDLInterface<WebCore::Node>>::convert<WebCore::jsDOMSelectionPrototypeFunction_collapseBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSDOMSelection *)::{lambda(JSC::JSGlobalObject&,JSC::ThrowScope &)#1}>(char *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  v8 = result;
  v11 = *(_QWORD *)(a2 + 56);
  if ((a3 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a3 + 5) < 0xF0u || (v9 = *(_QWORD *)(a3 + 24)) == 0)
  {
    result = WebCore::throwArgumentTypeError(a2, (uint64_t)&v11, 0, "node", 5, "Selection", 10, a8, "collapse", 9, "Node", 5);
    v10 = 1;
  }
  else
  {
    v10 = 0;
    *(_QWORD *)result = v9;
  }
  *((_DWORD *)v8 + 2) = v10;
  return result;
}

unsigned int *WebCore::jsDOMSelectionPrototypeFunction_collapseBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSDOMSelection *)::{lambda(void)#1}::operator()(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int *v3;
  WebCore *v5;
  JSC::JSGlobalObject *v6;
  JSC::CallFrame *v7;

  v2 = *(_QWORD *)(a2 + 8);
  if (!*(_DWORD *)(v2 + 8))
  {
    v3 = *(unsigned int **)(a2 + 16);
    if (!v3[1])
      return WebCore::DOMSelection::collapse(*(WebCore::DOMSelection **)a2, *(WebCore::Node **)v2, (WebCore::Node *)*v3, a1);
  }
  v5 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (unsigned int *)WebCore::jsDOMStringListPrototypeFunction_item(v5, v6, v7);
}

uint64_t WebCore::jsDOMStringListPrototypeFunction_item(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unsigned __int8 *v20;
  unsigned int v21;
  unsigned int v22;
  JSValue v24;
  JSC::VM *v25;
  _DWORD v26[2];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "DOMStringList", "item");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMStringList::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMStringList::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "DOMStringList", "item");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v24.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v24);
  }
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v26);
  if (v26[1])
    return 0;
  if (*(_DWORD *)(v11 + 20) <= v26[0])
    return 2;
  v13 = *(_QWORD *)(*(_QWORD *)(v11 + 8) + 8 * v26[0]);
  if (!v13)
    return 2;
  v14 = *(_DWORD *)v13;
  v15 = *(_DWORD *)(v13 + 4);
  *(_DWORD *)v13 += 2;
  v16 = *((_QWORD *)this + 7);
  v17 = (uint64_t *)(v16 + 41968);
  if (v15)
  {
    if (v15 != 1)
    {
LABEL_18:
      v18 = *(_QWORD *)(v16 + 64760);
      if (!v18 || v13 != *(_QWORD *)(v18 + 8))
      {
        v18 = JSC::jsStringWithCacheSlowCase();
        v14 = *(_DWORD *)v13 - 2;
      }
      if (v14)
        goto LABEL_22;
LABEL_29:
      WTF::StringImpl::destroy((WTF::StringImpl *)v13, v12);
      return v18;
    }
    v20 = *(unsigned __int8 **)(v13 + 8);
    if ((*(_BYTE *)(v13 + 16) & 4) != 0)
    {
      v21 = *v20;
    }
    else
    {
      v22 = *(unsigned __int16 *)v20;
      if (v22 > 0xFF)
        goto LABEL_18;
      v21 = v22;
    }
    v17 = (uint64_t *)(v16 + 8 * v21 + 42216);
  }
  v18 = *v17;
  if (!v14)
    goto LABEL_29;
LABEL_22:
  *(_DWORD *)v13 = v14;
  return v18;
}

_BYTE *WebCore::jsDOMStringListPrototypeFunction_contains(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  JSValue v22;
  JSC::VM *v23;
  uint64_t v24;
  int v25;
  WTF::StringImpl *v26;
  uint64_t v27;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v23 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v23, "DOMStringList", "contains");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMStringList::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMStringList::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v23, "DOMStringList", "contains");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v22.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v22);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v27 = v12;
  if ((v12 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v12 + 5) == 2)
  {
    v13 = *(WTF::StringImpl **)(v12 + 8);
    if ((v13 & 1) != 0)
    {
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
      if (!v13)
        goto LABEL_18;
    }
    else if (!v13)
    {
LABEL_18:
      v26 = v13;
      goto LABEL_19;
    }
    *(_DWORD *)v13 += 2;
    goto LABEL_18;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v27, this);
LABEL_19:
  if (*((_DWORD *)v4 + 20))
  {
    v14 = v26;
    if (JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      v25 = 1;
      v26 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, a2);
        else
          *(_DWORD *)v14 -= 2;
      }
      v18 = 0;
      v19 = 1;
      goto LABEL_32;
    }
  }
  else
  {
    v14 = v26;
  }
  v25 = 0;
  v24 = 0;
  v15 = *(unsigned int *)(v11 + 20);
  if ((_DWORD)v15)
  {
    v16 = *(WTF ***)(v11 + 8);
    v17 = 8 * v15;
    v18 = 6;
    while (!WTF::equal(*v16, v14, a3))
    {
      ++v16;
      v17 -= 8;
      if (!v17)
        goto LABEL_27;
    }
    v18 = 7;
    if (!v14)
      goto LABEL_37;
  }
  else
  {
    v18 = 6;
LABEL_27:
    if (!v14)
      goto LABEL_37;
  }
  if (*(_DWORD *)v14 == 2)
  {
    WTF::StringImpl::destroy(v14, a2);
LABEL_37:
    v19 = 0;
    goto LABEL_32;
  }
  v19 = 0;
  *(_DWORD *)v14 -= 2;
LABEL_32:
  ((void (*)(uint64_t *, uint64_t *))off_1E325A258[v19])(&v27, &v24);
  return (_BYTE *)v18;
}

uint64_t WebCore::jsDOMTokenListPrototypeFunction_item(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  WebCore::Element **v8;
  uint64_t v9;
  WebCore::Element **v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  unsigned __int8 *v17;
  unsigned int v18;
  unsigned int v19;
  JSValue v21;
  JSC::VM *v22;
  _DWORD v23[2];

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v22 = v5;
  v6 = WebCore::IDLOperation<WebCore::JSDOMTokenList>::cast(*((_QWORD *)a2 + 5));
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v22, "DOMTokenList", "item");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
    return JSC::VM::throwException(v5, this, v21);
  }
  v8 = *(WebCore::Element ***)(v6 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v23);
  if (v23[1])
    return 0;
  v9 = v23[0];
  v10 = WebCore::DOMTokenList::tokens(v8);
  if (*((_DWORD *)v10 + 3) <= v9)
    v11 = (uint64_t *)MEMORY[0x1E0CBF2F8];
  else
    v11 = (uint64_t *)((char *)*v10 + 8 * v9);
  v12 = *v11;
  if (!*v11)
    return 2;
  v13 = *((_QWORD *)this + 7);
  v14 = *(_DWORD *)(v12 + 4);
  if (!v14)
    return *(_QWORD *)(v13 + 41968);
  if (v14 == 1)
  {
    v17 = *(unsigned __int8 **)(v12 + 8);
    if ((*(_BYTE *)(v12 + 16) & 4) != 0)
    {
      v18 = *v17;
    }
    else
    {
      v19 = *(unsigned __int16 *)v17;
      if (v19 > 0xFF)
        goto LABEL_10;
      v18 = v19;
    }
    return *(_QWORD *)(v13 + 8 * v18 + 42216);
  }
LABEL_10:
  v15 = *(_QWORD *)(v13 + 64760);
  if (!v15 || v12 != *(_QWORD *)(v15 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v15;
}

_BYTE *WebCore::jsDOMTokenListPrototypeFunction_add(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WTF *v10;
  WTF::String *v11;
  __n128 v12;
  WTF *v13;
  uint64_t *v14;
  unint64_t v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  uint64_t v18;
  WTF::StringImpl **v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  WTF *v22;
  WTF *v26;
  uint64_t v27;
  uint64_t v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  uint64_t v31;
  uint64_t *v32;
  WTF *v33;
  uint64_t v34;
  _BYTE v35[40];
  uint64_t v36;
  JSC::JSGlobalObject *v37;
  JSC::VM *v38;
  unsigned __int8 v39[8];
  WTF::StringImpl *v40;
  uint64_t v41;
  WTF::StringImpl *v42;
  char v43;

  v4 = *((_QWORD *)this + 7);
  v31 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "DOMTokenList", "add");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMTokenList::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMTokenList::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "DOMTokenList", "add");
  v10 = *(WTF **)(v5 + 24);
  v38 = (JSC::VM *)v4;
  v33 = (WTF *)v35;
  v34 = 4;
  v35[32] = 0;
  v36 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v37 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v33;
  WebCore::convertVariadicArguments<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>((uint64_t)&v32, this, (uint64_t)a2);
  if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
  {
    v17 = 0;
    v13 = (WTF *)v32;
  }
  else
  {
    v13 = (WTF *)v32;
    if (v32)
    {
      v14 = v32 + 1;
      v15 = *(unsigned int *)v32;
    }
    else
    {
      v14 = 0;
      v15 = 0;
    }
    WebCore::DOMTokenList::addInternal(v10, v14, v15, v11, &v41, v12);
    if (v43)
    {
      v39[0] = v41;
      v29 = v42;
      v42 = 0;
      v40 = v29;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(this, &v38, v39);
        v29 = v40;
      }
      v40 = 0;
      if (v29)
      {
        if (*(_DWORD *)v29 == 2)
          WTF::StringImpl::destroy(v29, v16);
        else
          *(_DWORD *)v29 -= 2;
      }
      if (v43)
      {
        v30 = v42;
        v42 = 0;
        if (v30)
        {
          if (*(_DWORD *)v30 != 2)
          {
            v17 = 0;
            *(_DWORD *)v30 -= 2;
            goto LABEL_13;
          }
          WTF::StringImpl::destroy(v30, v16);
        }
      }
      v17 = 0;
      goto LABEL_13;
    }
    v17 = 10;
  }
LABEL_13:
  v32 = 0;
  if (v13)
  {
    v19 = (WTF::StringImpl **)((char *)v13 + 8);
    v18 = *(unsigned int *)v13;
    if ((_DWORD)v18)
    {
      v20 = 8 * v18;
      do
      {
        v21 = *v19;
        *v19 = 0;
        if (v21)
        {
          if (*(_DWORD *)v21 == 2)
            WTF::StringImpl::destroy(v21, v16);
          else
            *(_DWORD *)v21 -= 2;
        }
        ++v19;
        v20 -= 8;
      }
      while (v20);
    }
    WTF::fastFree(v13, v16);
  }
  if (HIDWORD(v34))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v33, v37);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v36;
    if (HIDWORD(v34))
    {
      v26 = v33;
      v27 = 8 * HIDWORD(v34);
      do
      {
        v28 = *(_QWORD *)v26;
        *(_QWORD *)v26 = 0;
        if (v28)
        {
          if (*(_DWORD *)(v28 + 24) == 2)
          {
            if ((*(_WORD *)(v28 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v28, v16);
          }
          else
          {
            *(_DWORD *)(v28 + 24) -= 2;
          }
        }
        v26 = (WTF *)((char *)v26 + 8);
        v27 -= 8;
      }
      while (v27);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v36;
  }
  v22 = v33;
  if (v35 != (_BYTE *)v33 && v33 != 0)
  {
    v33 = 0;
    LODWORD(v34) = 0;
    WTF::fastFree(v22, v16);
  }
  return (_BYTE *)v17;
}

_BYTE *WebCore::jsDOMTokenListPrototypeFunction_remove(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v10;
  WTF::String *v11;
  __n128 v12;
  WTF *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  uint64_t v18;
  WTF::StringImpl **v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  WTF *v22;
  WTF *v26;
  uint64_t v27;
  uint64_t v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  uint64_t v31;
  unsigned int *v32;
  WTF *v33;
  uint64_t v34;
  _BYTE v35[40];
  uint64_t v36;
  JSC::JSGlobalObject *v37;
  JSC::VM *v38;
  unsigned __int8 v39[8];
  WTF::StringImpl *v40;
  unsigned __int8 v41[8];
  WTF::StringImpl *v42;
  char v43;

  v4 = *((_QWORD *)this + 7);
  v31 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "DOMTokenList", "remove");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMTokenList::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMTokenList::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "DOMTokenList", "remove");
  v10 = *(_QWORD *)(v5 + 24);
  v38 = (JSC::VM *)v4;
  v33 = (WTF *)v35;
  v34 = 4;
  v35[32] = 0;
  v36 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v37 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v33;
  WebCore::convertVariadicArguments<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>((uint64_t)&v32, this, (uint64_t)a2);
  if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
  {
    v17 = 0;
    v13 = (WTF *)v32;
  }
  else
  {
    v13 = (WTF *)v32;
    if (v32)
    {
      v14 = (WTF::StringImpl *)(v32 + 2);
      v15 = *v32;
    }
    else
    {
      v14 = 0;
      v15 = 0;
    }
    WebCore::DOMTokenList::removeInternal(v10, v14, v15, v11, (uint64_t)v41, v12);
    if (v43)
    {
      v39[0] = v41[0];
      v29 = v42;
      v42 = 0;
      v40 = v29;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(this, &v38, v39);
        v29 = v40;
      }
      v40 = 0;
      if (v29)
      {
        if (*(_DWORD *)v29 == 2)
          WTF::StringImpl::destroy(v29, v16);
        else
          *(_DWORD *)v29 -= 2;
      }
      if (v43)
      {
        v30 = v42;
        v42 = 0;
        if (v30)
        {
          if (*(_DWORD *)v30 != 2)
          {
            v17 = 0;
            *(_DWORD *)v30 -= 2;
            goto LABEL_13;
          }
          WTF::StringImpl::destroy(v30, v16);
        }
      }
      v17 = 0;
      goto LABEL_13;
    }
    v17 = 10;
  }
LABEL_13:
  v32 = 0;
  if (v13)
  {
    v19 = (WTF::StringImpl **)((char *)v13 + 8);
    v18 = *(unsigned int *)v13;
    if ((_DWORD)v18)
    {
      v20 = 8 * v18;
      do
      {
        v21 = *v19;
        *v19 = 0;
        if (v21)
        {
          if (*(_DWORD *)v21 == 2)
            WTF::StringImpl::destroy(v21, v16);
          else
            *(_DWORD *)v21 -= 2;
        }
        ++v19;
        v20 -= 8;
      }
      while (v20);
    }
    WTF::fastFree(v13, v16);
  }
  if (HIDWORD(v34))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v33, v37);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v36;
    if (HIDWORD(v34))
    {
      v26 = v33;
      v27 = 8 * HIDWORD(v34);
      do
      {
        v28 = *(_QWORD *)v26;
        *(_QWORD *)v26 = 0;
        if (v28)
        {
          if (*(_DWORD *)(v28 + 24) == 2)
          {
            if ((*(_WORD *)(v28 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v28, v16);
          }
          else
          {
            *(_DWORD *)(v28 + 24) -= 2;
          }
        }
        v26 = (WTF *)((char *)v26 + 8);
        v27 -= 8;
      }
      while (v27);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v36;
  }
  v22 = v33;
  if (v35 != (_BYTE *)v33 && v33 != 0)
  {
    v33 = 0;
    LODWORD(v34) = 0;
    WTF::fastFree(v22, v16);
  }
  return (_BYTE *)v17;
}

WebCore *WebCore::jsDOMTokenListPrototypeFunction_toggle(JSC::VM **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WebCore *v3;
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  WTF::String *v13;
  __n128 v14;
  int v15;
  unint64_t v16;
  JSC::VM *v17;
  double v18;
  unsigned int v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  int v22;
  uint64_t v23;
  WTF::StringImpl *v24;
  WTF *v25;
  JSValue v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  WTF::StringImpl *v33;
  JSC::VM *v34;
  JSC::VM *v35;
  WTF::StringImpl *v36;
  char v37[8];
  WTF::StringImpl *v38;
  int v39;
  WTF::StringImpl *v40;
  int v41;
  uint64_t *v42;
  uint64_t v43;
  _BYTE v44[40];
  uint64_t v45;
  JSC::JSGlobalObject *v46;
  JSC::VM *v47;
  unsigned __int8 v48[8];
  WTF::StringImpl *v49;

  v3 = (WebCore *)this;
  v4 = this[7];
  v35 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (WebCore *)WebCore::throwThisTypeError((int)this, (int)&v35, "DOMTokenList", "toggle");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMTokenList::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMTokenList::s_info && v9 != 0);
  }
  if (!v8)
    return (WebCore *)WebCore::throwThisTypeError((int)this, (int)&v35, "DOMTokenList", "toggle");
  v11 = *(_QWORD *)(v5 + 24);
  v47 = v4;
  v42 = (uint64_t *)v44;
  v43 = 4;
  v44[32] = 0;
  v45 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v46 = (JSC::JSGlobalObject *)this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v42;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v29.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, a2);
    v3 = (WebCore *)JSC::VM::throwException(v4, v3, v29);
    goto LABEL_30;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>((JSC::JSGlobalObject *)this, *((_QWORD *)a2 + 6), (uint64_t)&v40);
  v15 = v41;
  if (!v41)
  {
    if ((unint64_t)(*((int *)a2 + 8) - 3) > 0xFFFFFFFFFFFFFFFDLL || (v16 = *((_QWORD *)a2 + 7), v16 == 10))
    {
      v20 = 0;
    }
    else
    {
      v17 = (JSC::VM *)*((_QWORD *)v3 + 7);
      if (v16 >= 0xFFFE000000000000)
      {
        v19 = v16 != 0;
      }
      else
      {
        *(_QWORD *)&v18 = v16 - 0x2000000000000;
        if (v16 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
        {
          v14.n128_u64[0] = v16 - 0x2000000000000;
          v19 = v18 > 0.0 || v18 < 0.0;
        }
        else if ((v16 & 0xFFFE000000000002) != 0)
        {
          v19 = v16 == 7;
        }
        else
        {
          v34 = (JSC::VM *)*((_QWORD *)v3 + 7);
          v19 = JSC::JSCell::toBoolean(v16, (uint64_t)v3);
          v17 = v34;
        }
      }
      if (*((_DWORD *)v17 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) != 0)
      {
        v3 = 0;
LABEL_27:
        v15 = v41;
        goto LABEL_28;
      }
      if (v41)
        goto LABEL_66;
      v20 = v19 | 0x100;
    }
    v21 = v40;
    v40 = 0;
    v36 = v21;
    WebCore::DOMTokenList::toggle(v11, (WTF::StringImpl *)&v36, v20, v13, (uint64_t)v37, v14);
    v22 = v39;
    if (!v39)
    {
      if (v37[0])
        v23 = 7;
      else
        v23 = 6;
LABEL_23:
      off_1E325DFB8[v22](v48, v37);
      v3 = (WebCore *)v23;
LABEL_24:
      v39 = -1;
      v24 = v36;
      v36 = 0;
      if (v24)
      {
        if (*(_DWORD *)v24 == 2)
          WTF::StringImpl::destroy(v24, v12);
        else
          *(_DWORD *)v24 -= 2;
      }
      goto LABEL_27;
    }
    if (v39 == 1)
    {
      v48[0] = v37[0];
      v33 = v38;
      v38 = 0;
      v49 = v33;
      if (!*((_QWORD *)v4 + 2))
      {
        WebCore::propagateExceptionSlowPath(v3, &v47, v48);
        v33 = v49;
      }
      v49 = 0;
      if (v33)
      {
        if (*(_DWORD *)v33 == 2)
          WTF::StringImpl::destroy(v33, v12);
        else
          *(_DWORD *)v33 -= 2;
      }
      v23 = 0;
      v3 = 0;
      v22 = v39;
      if (v39 == -1)
        goto LABEL_24;
      goto LABEL_23;
    }
LABEL_66:
    v25 = (WTF *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_67:
    v42 = 0;
    LODWORD(v43) = 0;
    WTF::fastFree(v25, v12);
    return v3;
  }
  v3 = 0;
LABEL_28:
  if (v15 != -1)
    ((void (*)(char *, WTF::StringImpl **))off_1E325A6F0[v15])(v37, &v40);
LABEL_30:
  if (HIDWORD(v43))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v42, v46);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v45;
    if (HIDWORD(v43))
    {
      v30 = v42;
      v31 = 8 * HIDWORD(v43);
      do
      {
        v32 = *v30;
        *v30 = 0;
        if (v32)
        {
          if (*(_DWORD *)(v32 + 24) == 2)
          {
            if ((*(_WORD *)(v32 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v32, v12);
          }
          else
          {
            *(_DWORD *)(v32 + 24) -= 2;
          }
        }
        ++v30;
        v31 -= 8;
      }
      while (v31);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v45;
  }
  v25 = (WTF *)v42;
  if (v44 != (_BYTE *)v42 && v42 != 0)
    goto LABEL_67;
  return v3;
}

JSC::JSGlobalObject *WebCore::jsDOMTokenListPrototypeFunction_replace(JSC::VM **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::JSGlobalObject *v3;
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  WTF::StringImpl *v13;
  int v14;
  int v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  int v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  WTF *v22;
  JSValue v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  WTF::StringImpl *v29;
  JSValue v30;
  JSC::VM *v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  int v34;
  WTF::StringImpl *v35;
  int v36;
  WTF::StringImpl *v37;
  int v38;
  WTF::StringImpl *v39;
  int v40;
  uint64_t *v41;
  uint64_t v42;
  _BYTE v43[40];
  uint64_t v44;
  JSC::JSGlobalObject *v45;
  char v46[8];
  WTF::StringImpl *v47;

  v3 = (JSC::JSGlobalObject *)this;
  v4 = this[7];
  v31 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (JSC::JSGlobalObject *)WebCore::throwThisTypeError((int)this, (int)&v31, "DOMTokenList", "replace");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMTokenList::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMTokenList::s_info && v9 != 0);
  }
  if (!v8)
    return (JSC::JSGlobalObject *)WebCore::throwThisTypeError((int)this, (int)&v31, "DOMTokenList", "replace");
  v12 = *(_QWORD *)(v5 + 24);
  v41 = (uint64_t *)v43;
  v42 = 4;
  v43[32] = 0;
  v44 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v45 = (JSC::JSGlobalObject *)this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v41;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, a2);
    v3 = (JSC::JSGlobalObject *)JSC::VM::throwException(v4, v3, v25);
    goto LABEL_33;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>((JSC::JSGlobalObject *)this, *((_QWORD *)a2 + 6), (uint64_t)&v39);
  v14 = v40;
  if (!v40)
  {
    WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(v3, *((_QWORD *)a2 + 7), (uint64_t)&v37);
    v15 = v38;
    if (v38)
    {
      v3 = 0;
LABEL_28:
      if (v15 != -1)
        ((void (*)(int *, WTF::StringImpl **))off_1E325A6F0[v15])(&v34, &v37);
      v14 = v40;
      goto LABEL_31;
    }
    if (!v40)
    {
      v16 = v39;
      v39 = 0;
      v17 = v37;
      v37 = 0;
      v32 = v17;
      v33 = v16;
      WebCore::DOMTokenList::replace(v12, (const WTF::AtomString *)&v33, (unsigned __int16 ***)&v32, (uint64_t)&v34);
      v18 = v36;
      if (!v36)
      {
        if ((_BYTE)v34)
          v19 = 7;
        else
          v19 = 6;
LABEL_20:
        off_1E325DFB8[v18]((unsigned __int8 *)v46, (char *)&v34);
        v3 = (JSC::JSGlobalObject *)v19;
LABEL_21:
        v36 = -1;
        v20 = v32;
        v32 = 0;
        if (v20)
        {
          if (*(_DWORD *)v20 == 2)
            WTF::StringImpl::destroy(v20, v13);
          else
            *(_DWORD *)v20 -= 2;
        }
        v21 = v33;
        v33 = 0;
        if (v21)
        {
          if (*(_DWORD *)v21 == 2)
            WTF::StringImpl::destroy(v21, v13);
          else
            *(_DWORD *)v21 -= 2;
        }
        v15 = v38;
        goto LABEL_28;
      }
      if (v36 == 1)
      {
        v13 = (WTF::StringImpl *)v34;
        v46[0] = v34;
        v29 = v35;
        v35 = 0;
        v47 = v29;
        if (!*((_QWORD *)v4 + 2))
        {
          v30.super.isa = (Class)WebCore::createDOMException(v3, (JSC::JSGlobalObject *)v34, (JSC::JSGlobalObject *)&v47);
          JSC::VM::throwException(v4, v3, v30);
          v29 = v47;
        }
        v47 = 0;
        if (v29)
        {
          if (*(_DWORD *)v29 == 2)
            WTF::StringImpl::destroy(v29, v13);
          else
            *(_DWORD *)v29 -= 2;
        }
        v19 = 0;
        v3 = 0;
        v18 = v36;
        if (v36 == -1)
          goto LABEL_21;
        goto LABEL_20;
      }
    }
    v22 = (WTF *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_66:
    v41 = 0;
    LODWORD(v42) = 0;
    WTF::fastFree(v22, v13);
    return v3;
  }
  v3 = 0;
LABEL_31:
  if (v14 != -1)
    ((void (*)(int *, WTF::StringImpl **))off_1E325A6F0[v14])(&v34, &v39);
LABEL_33:
  if (HIDWORD(v42))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v41, v45);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v44;
    if (HIDWORD(v42))
    {
      v26 = v41;
      v27 = 8 * HIDWORD(v42);
      do
      {
        v28 = *v26;
        *v26 = 0;
        if (v28)
        {
          if (*(_DWORD *)(v28 + 24) == 2)
          {
            if ((*(_WORD *)(v28 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v28, v13);
          }
          else
          {
            *(_DWORD *)(v28 + 24) -= 2;
          }
        }
        ++v26;
        v27 -= 8;
      }
      while (v27);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v44;
  }
  v22 = (WTF *)v41;
  if (v43 != (_BYTE *)v41 && v41 != 0)
    goto LABEL_66;
  return v3;
}

_BYTE *WebCore::jsDOMTokenListPrototypeFunction_toString(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WTF::String *a4, __n128 a5)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t *Attribute;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;

  v6 = *((_QWORD *)a2 + 5);
  v21 = *((_QWORD *)this + 7);
  if ((v6 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "DOMTokenList", "toString");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDOMTokenList::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDOMTokenList::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "DOMTokenList", "toString");
  Attribute = (uint64_t *)WebCore::Element::getAttribute(**(WebCore::Element ***)(v6 + 24), *(const WebCore::QualifiedName **)(*(_QWORD *)(v6 + 24) + 8), (uint64_t)a3, a4, a5);
  v13 = *((_QWORD *)this + 7);
  v14 = *Attribute;
  if (!*Attribute)
    return *(_BYTE **)(v13 + 41968);
  v15 = *(_DWORD *)(v14 + 4);
  if (!v15)
    return *(_BYTE **)(v13 + 41968);
  if (v15 == 1)
  {
    v19 = *(unsigned __int8 **)(v14 + 8);
    if ((*(_BYTE *)(v14 + 16) & 4) != 0)
    {
      v20 = *v19;
    }
    else
    {
      v20 = *(unsigned __int16 *)v19;
      if (v20 > 0xFF)
        goto LABEL_15;
      v20 = v20;
    }
    return *(_BYTE **)(v13 + 8 * v20 + 42216);
  }
LABEL_15:
  v16 = *(_QWORD *)(v13 + 64760);
  if (!v16 || v14 != *(_QWORD *)(v16 + 8))
    return (_BYTE *)JSC::jsStringWithCacheSlowCase();
  return (_BYTE *)v16;
}

unint64_t WebCore::IDLOperation<WebCore::JSDOMTokenList>::cast(unint64_t result)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((result & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSDOMTokenList::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSDOMTokenList::s_info && v3 != 0);
  }
  if (!v2)
    return 0;
  return result;
}

_BYTE *WebCore::IDLOperation<WebCore::JSDOMTokenList>::call<&WebCore::jsDOMTokenListPrototypeFunction_containsBody,(WebCore::CastedThisErrorBehavior)0>(WebCore *a1, unint64_t *a2)
{
  unint64_t v4;
  WebCore::JSDOMTokenList *v5;
  uint64_t v7;

  v7 = *((_QWORD *)a1 + 7);
  v4 = WebCore::IDLOperation<WebCore::JSDOMTokenList>::cast(a2[5]);
  if (v4)
    return (_BYTE *)WebCore::jsDOMTokenListPrototypeFunction_containsBody(a1, (JSC::JSGlobalObject *)a2, *(WebCore::Element ***)(v4 + 24), v5);
  else
    return WebCore::throwThisTypeError((int)a1, (int)&v7, "DOMTokenList", "contains");
}

uint64_t WebCore::jsDOMTokenListPrototypeFunction_containsBody(WebCore *this, JSC::JSGlobalObject *a2, WebCore::Element **a3, WebCore::JSDOMTokenList *a4)
{
  uint64_t v6;
  WTF::String *v7;
  __n128 v8;
  int v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::VM *v14;
  JSValue v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  int v18;

  if (*((_DWORD *)a2 + 8) == 1)
  {
    v14 = (JSC::VM *)*((_QWORD *)this + 7);
    v15.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v14, this, v15);
  }
  else
  {
    WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v17);
    v9 = v18;
    if (v18)
    {
      v11 = 0;
    }
    else
    {
      v16 = v17;
      v17 = 0;
      if (WebCore::DOMTokenList::contains(a3, (const WTF::AtomString *)&v16, v6, v7, v8))
        v11 = 7;
      else
        v11 = 6;
      v12 = v16;
      v16 = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, v10);
        else
          *(_DWORD *)v12 -= 2;
      }
      v9 = v18;
    }
    if (v9 != -1)
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A6F0[v9])(&v16, &v17);
  }
  return v11;
}

uint64_t WebCore::convertVariadicArguments<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(uint64_t result, JSC::JSGlobalObject *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  int v5;
  JSC::VM *v8;
  WTF *v9;
  unint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  int v14;
  int v15;
  WTF::StringImpl *v16;
  unint64_t v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  WTF::StringImpl **v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  uint64_t v23;
  WTF::StringImpl *v24;
  WTF::StringImpl **v25;
  _QWORD *v26;
  JSC::VM *v27;
  WTF::StringImpl *v28;
  int v29;
  char v30;

  v3 = (_QWORD *)result;
  v4 = *(int *)(a3 + 32);
  v5 = v4 - 1;
  if (v4 == 1)
  {
    *(_QWORD *)result = 0;
    return result;
  }
  v8 = (JSC::VM *)*((_QWORD *)a2 + 7);
  result = WTF::fastMalloc((WTF *)(8 * (v4 - 1) + 8));
  v9 = (WTF *)result;
  *(_DWORD *)result = v5;
  if (!v5)
    goto LABEL_12;
  v10 = 0;
  v25 = (WTF::StringImpl **)(result + 8);
  v26 = v3;
  v11 = 0x600000000;
  v27 = v8;
  while (1)
  {
    result = (uint64_t)WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a2, *(_QWORD *)(a3 + (v11 >> 29)), (uint64_t)&v28);
    if (v29)
    {
      v14 = 0;
      v13 = 0;
      v15 = 0;
      v16 = 0;
      if (v29 == -1)
        goto LABEL_7;
    }
    else
    {
      v13 = v28;
      v28 = 0;
      v14 = 1;
    }
    result = ((uint64_t (*)(char *, WTF::StringImpl **))off_1E325A6F0[v29])(&v30, &v28);
    v15 = v14;
    v16 = v13;
LABEL_7:
    v8 = v27;
    if (*((_DWORD *)v27 + 20))
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v27);
      if ((result & 1) != 0)
        break;
    }
    if (!v15)
      goto LABEL_33;
    *((_QWORD *)v9 + ++v10) = v16;
    v17 = *(unsigned int *)v9;
    v11 += 0x100000000;
    if (v10 >= v17)
      goto LABEL_10;
  }
  if (v15 && v16)
  {
    if (*(_DWORD *)v16 == 2)
      result = WTF::StringImpl::destroy(v16, v12);
    else
      *(_DWORD *)v16 -= 2;
    v8 = v27;
  }
LABEL_33:
  *(_DWORD *)v9 = v10;
  LODWORD(v17) = v10;
LABEL_10:
  if ((_DWORD)v17 == v5)
  {
    v3 = v26;
  }
  else
  {
    if ((_DWORD)v17)
    {
      v23 = 8 * v17;
      do
      {
        v24 = *v25;
        *v25 = 0;
        if (v24)
        {
          if (*(_DWORD *)v24 == 2)
            WTF::StringImpl::destroy(v24, v12);
          else
            *(_DWORD *)v24 -= 2;
        }
        ++v25;
        v23 -= 8;
      }
      while (v23);
    }
    result = WTF::fastFree(v9, v12);
    v9 = 0;
    v3 = v26;
    v8 = v27;
  }
LABEL_12:
  if (*((_DWORD *)v8 + 20) && (result = JSC::VM::hasExceptionsAfterHandlingTraps(v8), (result & 1) != 0))
  {
    *v3 = 0;
    if (v9)
    {
      v20 = (WTF::StringImpl **)((char *)v9 + 8);
      v19 = *(unsigned int *)v9;
      if ((_DWORD)v19)
      {
        v21 = 8 * v19;
        do
        {
          v22 = *v20;
          *v20 = 0;
          if (v22)
          {
            if (*(_DWORD *)v22 == 2)
              WTF::StringImpl::destroy(v22, v18);
            else
              *(_DWORD *)v22 -= 2;
          }
          ++v20;
          v21 -= 8;
        }
        while (v21);
      }
      return WTF::fastFree(v9, v18);
    }
  }
  else
  {
    *v3 = v9;
  }
  return result;
}

uint64_t WebCore::toJS<WebCore::IDLBoolean,WebCore::ExceptionOr<BOOL>>(JSC *this, JSC::VM **a2, unsigned __int8 *a3)
{
  int v3;
  JSC::JSGlobalObject *v7;
  WTF::StringImpl *v8;
  JSValue v9;
  uint64_t v10;
  WTF::StringImpl *v11;

  v3 = *((_DWORD *)a3 + 4);
  if (v3)
  {
    if (v3 == 1)
    {
      v7 = (JSC::JSGlobalObject *)*a3;
      v8 = (WTF::StringImpl *)*((_QWORD *)a3 + 1);
      *((_QWORD *)a3 + 1) = 0;
      v11 = v8;
      if (!*((_QWORD *)*a2 + 2))
      {
        v9.super.isa = (Class)WebCore::createDOMException(this, v7, (JSC::JSGlobalObject *)&v11);
        JSC::VM::throwException(*a2, this, v9);
        v8 = v11;
      }
      v11 = 0;
      if (v8)
      {
        if (*(_DWORD *)v8 == 2)
          WTF::StringImpl::destroy(v8, v7);
        else
          *(_DWORD *)v8 -= 2;
      }
      return 0;
    }
    else
    {
      v10 = std::__throw_bad_variant_access[abi:sn180100]();
      return _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJbN7WebCore9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSB_1EJbS9_EEEEEEDcSD_DpT0_(v10);
    }
  }
  else if (*a3)
  {
    return 7;
  }
  else
  {
    return 6;
  }
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJbN7WebCore9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSB_1EJbS9_EEEEEEDcSD_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_BYTE *WebCore::IDLOperation<WebCore::JSDOMTokenList>::call<&WebCore::jsDOMTokenListPrototypeFunction_supportsBody,(WebCore::CastedThisErrorBehavior)0>(JSC::JSGlobalObject *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v6;

  v6 = *((_QWORD *)a1 + 7);
  v4 = WebCore::IDLOperation<WebCore::JSDOMTokenList>::cast(*(_QWORD *)(a2 + 40));
  if (v4)
    return (_BYTE *)WebCore::jsDOMTokenListPrototypeFunction_supportsBody(a1, a2, *(_QWORD **)(v4 + 24));
  else
    return WebCore::throwThisTypeError((int)a1, (int)&v6, "DOMTokenList", "supports");
}

uint64_t WebCore::jsDOMTokenListPrototypeFunction_supportsBody(JSC::JSGlobalObject *a1, uint64_t a2, _QWORD *a3)
{
  JSC::VM *v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  JSValue v13;
  unsigned __int8 v14[16];
  int v15;
  uint64_t v16;
  int v17;
  JSC::VM *v18;
  char v19;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v18 = v4;
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return JSC::VM::throwException(v4, a1, v13);
  }
  else
  {
    WebCore::Converter<WebCore::IDLDOMString>::convert(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v16);
    v6 = v17;
    if (v17)
    {
      v11 = 0;
    }
    else
    {
      v7 = v16;
      v16 = 0;
      if (v7)
      {
        v8 = *(_QWORD *)(v7 + 8);
        v9 = *(unsigned int *)(v7 + 4) | ((unint64_t)((*(_DWORD *)(v7 + 16) >> 2) & 1) << 32);
      }
      else
      {
        v8 = 0;
        v9 = 0x100000000;
      }
      WebCore::DOMTokenList::supports(a3, v8, v9, (uint64_t)v14);
      v11 = WebCore::toJS<WebCore::IDLBoolean,WebCore::ExceptionOr<BOOL>>(a1, &v18, v14);
      if (v15 != -1)
        off_1E325DFB8[v15]((unsigned __int8 *)&v19, (char *)v14);
      v15 = -1;
      if (v7)
      {
        if (*(_DWORD *)v7 == 2)
          WTF::StringImpl::destroy((WTF::StringImpl *)v7, v10);
        else
          *(_DWORD *)v7 -= 2;
      }
      v6 = v17;
    }
    if (v6 != -1)
      ((void (*)(unsigned __int8 *, uint64_t *))off_1E325A258[v6])(v14, &v16);
  }
  return v11;
}

WebCore::DOMURL *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore6DOMURLENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WebCore::DOMURL *result;
  WTF *v3;
  void *v4;

  result = *(WebCore::DOMURL **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*((_DWORD *)result + 2) == 1)
    {
      WebCore::DOMURL::~DOMURL(result, a2);
      return (WebCore::DOMURL *)WTF::fastFree(v3, v4);
    }
    else
    {
      --*((_DWORD *)result + 2);
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore6DOMURLENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

unint64_t WebCore::jsDOMURLConstructorFunction_parse(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  int v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WebCore::DOMURL *v11;
  unint64_t v12;
  WTF::StringImpl *v13;
  WTF *v15;
  void *v16;
  JSC::VM *v17;
  JSValue v18;
  WebCore *v19;
  JSC::JSGlobalObject *v20;
  JSC::CallFrame *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  WebCore::DOMURL *v24;
  WTF::StringImpl *v25;
  int v26;
  WTF::StringImpl *v27;
  int v28;

  if (*((_DWORD *)a2 + 8) == 1)
  {
    v17 = (JSC::VM *)*((_QWORD *)this + 7);
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v17, this, v18);
  }
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v27);
  v5 = v28;
  if (v28)
  {
    v12 = 0;
LABEL_23:
    if (v5 != -1)
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A258[v5])(&v25, &v27);
    return v12;
  }
  if ((unint64_t)(*((int *)a2 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL || (v6 = *((_QWORD *)a2 + 7), v6 == 10))
  {
    v7 = 0;
    v26 = 0;
    goto LABEL_9;
  }
  WebCore::valueToUSVString(this, v6, (uint64_t)&v25);
  v8 = v26;
  if (v26)
  {
    v12 = 0;
LABEL_20:
    if (v8 != -1)
      ((void (*)(WebCore::DOMURL **, WTF::StringImpl **))off_1E325A258[v8])(&v24, &v25);
    v5 = v28;
    goto LABEL_23;
  }
  if (!v28)
  {
    v7 = v25;
LABEL_9:
    v9 = v27;
    v27 = 0;
    v22 = v7;
    v23 = v9;
    v25 = 0;
    WebCore::DOMURL::parse((WebCore::DOMURL *)&v23, &v22, &v24);
    v11 = v24;
    if (v24)
    {
      v12 = WebCore::wrap<WebCore::DOMURL>((uint64_t)this, v24);
      if (*((_DWORD *)v11 + 2) == 1)
      {
        WebCore::DOMURL::~DOMURL(v11, v10);
        WTF::fastFree(v15, v16);
        if (!v7)
          goto LABEL_16;
      }
      else
      {
        --*((_DWORD *)v11 + 2);
        if (!v7)
          goto LABEL_16;
      }
    }
    else
    {
      v12 = 2;
      if (!v7)
      {
LABEL_16:
        v13 = v23;
        v23 = 0;
        if (v13)
        {
          if (*(_DWORD *)v13 == 2)
            WTF::StringImpl::destroy(v13, v10);
          else
            *(_DWORD *)v13 -= 2;
        }
        v8 = v26;
        goto LABEL_20;
      }
    }
    if (*(_DWORD *)v7 == 2)
      WTF::StringImpl::destroy(v7, v10);
    else
      *(_DWORD *)v7 -= 2;
    goto LABEL_16;
  }
  v19 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsDOMURLConstructorFunction_canParse(v19, v20, v21);
}

uint64_t WebCore::jsDOMURLConstructorFunction_canParse(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  int v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  char v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  JSC::VM *v16;
  JSValue v17;
  WebCore *v18;
  JSC::JSGlobalObject *v19;
  JSC::CallFrame *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  int v24;
  WTF::StringImpl *v25;
  int v26;
  WTF::StringImpl *v27;
  int v28;

  if (*((_DWORD *)a2 + 8) == 1)
  {
    v16 = (JSC::VM *)*((_QWORD *)this + 7);
    v17.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v16, this, v17);
  }
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v25);
  v5 = v26;
  if (v26)
  {
    v13 = 0;
LABEL_25:
    if (v5 != -1)
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A258[v5])(&v27, &v25);
    return v13;
  }
  if ((unint64_t)(*((int *)a2 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL || (v6 = *((_QWORD *)a2 + 7), v6 == 10))
  {
    v7 = 0;
    v24 = 0;
LABEL_9:
    v9 = v25;
    v25 = 0;
    v22 = v9;
    v23 = 0;
    v21 = v7;
    WebCore::parseInternal((WebCore *)&v27, (const WTF::String *)&v22, &v21);
    v11 = v28;
    v12 = v27;
    v27 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 2)
        WTF::StringImpl::destroy(v12, v10);
      else
        *(_DWORD *)v12 -= 2;
    }
    if ((v11 & 1) != 0)
      v13 = 7;
    else
      v13 = 6;
    if (v7)
    {
      if (*(_DWORD *)v7 == 2)
        WTF::StringImpl::destroy(v7, v10);
      else
        *(_DWORD *)v7 -= 2;
    }
    v14 = v22;
    v22 = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v10);
      else
        *(_DWORD *)v14 -= 2;
    }
    v8 = v24;
    goto LABEL_22;
  }
  WebCore::valueToUSVString(this, v6, (uint64_t)&v23);
  v8 = v24;
  if (v24)
  {
    v13 = 0;
LABEL_22:
    if (v8 != -1)
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A258[v8])(&v27, &v23);
    v5 = v26;
    goto LABEL_25;
  }
  if (!v26)
  {
    v7 = v23;
    goto LABEL_9;
  }
  v18 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsDOMURLConstructorFunction_createObjectURL(v18, v19, v20);
}

uint64_t WebCore::jsDOMURLConstructorFunction_createObjectURL(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v6;
  uint64_t v7;
  char **v8;
  BOOL v9;
  WebCore::ActiveDOMObject **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  char **v15;
  BOOL v16;
  uint64_t v17;
  WebCore::ScriptExecutionContext *v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  uint64_t *v23;
  WTF::StringImpl *v24;
  int v25;
  uint64_t v26;
  unsigned __int8 *v30;
  unsigned int v31;
  JSValue v32;
  unsigned int v33;
  WTF::StringImpl *v34;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v32.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v32);
  }
  v6 = *((_QWORD *)a2 + 6);
  if ((v6 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v6 + 5) < 0x17u)
    return JSC::throwTypeError();
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v8 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v9 = v8 == &WebCore::JSBlob::s_info;
  else
    v9 = 1;
  if (v9)
  {
    if ((_DWORD)v7)
      goto LABEL_10;
    return JSC::throwTypeError();
  }
  v26 = 16 * v7;
  do
    v26 = *(_QWORD *)(v26 + 16);
  while ((char **)v26 != &WebCore::JSBlob::s_info && v26 != 0);
  if (v26)
  {
LABEL_10:
    v10 = (WebCore::ActiveDOMObject **)WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if (!v10)
      return 10;
    v12 = *((_QWORD *)a2 + 6);
    v34 = (WTF::StringImpl *)*((_QWORD *)this + 7);
    if ((v12 & 0xFFFE000000000002) != 0)
      goto LABEL_18;
    v13 = *(unsigned int *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x4C);
    v14 = *(_DWORD *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x4C) != 0;
    v15 = (char **)(16 * v13);
    if ((_DWORD)v13)
      v16 = v15 == &WebCore::JSBlob::s_info;
    else
      v16 = 1;
    if (!v16)
    {
      do
      {
        v15 = (char **)v15[2];
        v14 = v15 != 0;
      }
      while (v15 != &WebCore::JSBlob::s_info && v15 != 0);
    }
    if (!v14 || (v20 = *(WebCore::ScriptExecutionContext **)(v12 + 24)) == 0)
    {
LABEL_18:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v34, 0, "blob", 5, "URL", 4, v11, "createObjectURL", 16, "Blob", 5);
      return 0;
    }
    WebCore::DOMURL::createPublicURL(v10, v20, &v34);
    v22 = *((_QWORD *)this + 7);
    v23 = (uint64_t *)(v22 + 41968);
    v24 = v34;
    if (!v34)
      return *v23;
    v25 = *((_DWORD *)v34 + 1);
    if (v25)
    {
      if (v25 != 1)
      {
LABEL_29:
        v17 = *(_QWORD *)(v22 + 64760);
        if (!v17 || v34 != *(WTF::StringImpl **)(v17 + 8))
          v17 = JSC::jsStringWithCacheSlowCase();
        goto LABEL_32;
      }
      v30 = (unsigned __int8 *)*((_QWORD *)v34 + 1);
      if ((*((_BYTE *)v34 + 16) & 4) != 0)
      {
        v31 = *v30;
      }
      else
      {
        v33 = *(unsigned __int16 *)v30;
        if (v33 > 0xFF)
          goto LABEL_29;
        v31 = v33;
      }
      v17 = *(_QWORD *)(v22 + 8 * v31 + 42216);
    }
    else
    {
      v17 = *v23;
    }
LABEL_32:
    if (*(_DWORD *)v24 == 2)
      WTF::StringImpl::destroy(v24, v21);
    else
      *(_DWORD *)v24 -= 2;
    return v17;
  }
  if (v8 != &WebCore::JSMediaSource::s_info)
  {
    do
      v8 = (char **)v8[2];
    while (v8 != &WebCore::JSMediaSource::s_info && v8 != 0);
    if (!v8)
      return JSC::throwTypeError();
  }
  return WebCore::jsDOMURLConstructorFunction_createObjectURL2Body(this, a2, a3);
}

uint64_t WebCore::jsDOMURLConstructorFunction_revokeObjectURL(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  const WTF::String *v6;
  WebCore::DOMURL *v7;
  uint64_t v8;
  JSC::VM *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  uint64_t v14;
  JSC::VM *v16;
  JSValue v17;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v19;
  uint64_t v20;
  int v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;

  if (*((_DWORD *)a2 + 8) == 1)
  {
    v16 = (JSC::VM *)*((_QWORD *)this + 7);
    v17.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v16, this, v17);
  }
  v5 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v5)
    return 10;
  v7 = (WebCore::DOMURL *)v5;
  v8 = *((_QWORD *)a2 + 6);
  v23 = (WTF::StringImpl *)v8;
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v8 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v8 + 5) == 2)
  {
    v10 = *(WTF::StringImpl **)(v8 + 8);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v8, this);
      if (!v10)
        goto LABEL_8;
    }
    else if (!v10)
    {
LABEL_8:
      v22 = v10;
      goto LABEL_9;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_8;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v23, this);
LABEL_9:
  if (*((_DWORD *)v9 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v9);
    v11 = v22;
    if (hasExceptionsAfterHandlingTraps)
    {
      v21 = 1;
      v22 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v19);
        else
          *(_DWORD *)v11 -= 2;
      }
      v14 = 0;
      v13 = 1;
      goto LABEL_15;
    }
  }
  else
  {
    v11 = v22;
  }
  v21 = 0;
  v20 = 0;
  v23 = v11;
  WebCore::DOMURL::revokeObjectURL(v7, &v23, v6);
  if (v11)
  {
    if (*(_DWORD *)v11 == 2)
      WTF::StringImpl::destroy(v11, v12);
    else
      *(_DWORD *)v11 -= 2;
  }
  v13 = 0;
  v14 = 10;
LABEL_15:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E325A258[v13])(&v23, &v20);
  return v14;
}

uint64_t WebCore::jsDOMURLConstructorFunction_createObjectURL2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  WTF::StringImpl *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char **v11;
  BOOL v12;
  uint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  uint64_t *v17;
  int v18;
  unsigned __int8 *v20;
  unsigned int v21;
  unsigned int v22;
  WTF::StringImpl *v23;

  v5 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v5)
    return 10;
  v8 = *((_QWORD *)a2 + 6);
  v23 = (WTF::StringImpl *)*((_QWORD *)this + 7);
  if ((v8 & 0xFFFE000000000002) != 0)
    goto LABEL_13;
  v9 = *(unsigned int *)(16 * (*(_DWORD *)v8 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)v8 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSMediaSource::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSMediaSource::s_info && v11 != 0);
  }
  if (!v10)
  {
LABEL_13:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v23, 0, "source", 7, "URL", 4, v7, "createObjectURL", 16, "MediaSource", 12);
    return 0;
  }
  if (*(_BYTE *)(v5 + 274))
  {
    v15 = (WTF::StringImpl *)*MEMORY[0x1E0CBF6F0];
    if (*MEMORY[0x1E0CBF6F0])
      *(_DWORD *)v15 += 2;
  }
  else
  {
    WebCore::DOMURL::createPublicURL((WebCore::ActiveDOMObject **)v5, (WebCore::ScriptExecutionContext *)(*(_QWORD *)(v8 + 24) + 24), &v23);
    v15 = v23;
  }
  v16 = *((_QWORD *)this + 7);
  v17 = (uint64_t *)(v16 + 41968);
  if (!v15)
    return *v17;
  v18 = *((_DWORD *)v15 + 1);
  if (v18)
  {
    if (v18 != 1)
    {
LABEL_21:
      v14 = *(_QWORD *)(v16 + 64760);
      if (!v14 || v15 != *(WTF::StringImpl **)(v14 + 8))
        v14 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_24;
    }
    v20 = (unsigned __int8 *)*((_QWORD *)v15 + 1);
    if ((*((_BYTE *)v15 + 16) & 4) != 0)
    {
      v21 = *v20;
    }
    else
    {
      v22 = *(unsigned __int16 *)v20;
      if (v22 > 0xFF)
        goto LABEL_21;
      v21 = v22;
    }
    v14 = *(_QWORD *)(v16 + 8 * v21 + 42216);
  }
  else
  {
    v14 = *v17;
  }
LABEL_24:
  if (*(_DWORD *)v15 == 2)
    WTF::StringImpl::destroy(v15, v6);
  else
    *(_DWORD *)v15 -= 2;
  return v14;
}

_BYTE *WebCore::jsDOMURLPrototypeFunction_toJSON(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unsigned __int8 *v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;

  v3 = (int)this;
  v4 = *((_QWORD *)a2 + 5);
  v5 = *((_QWORD *)this + 7);
  v19 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError(v3, (int)&v19, "URL", "toJSON");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMURL::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMURL::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError(v3, (int)&v19, "URL", "toJSON");
  v11 = *(_QWORD *)(*(_QWORD *)(v4 + 24) + 24);
  if (!v11)
    return *(_BYTE **)(v5 + 41968);
  v12 = *(_DWORD *)(v11 + 4);
  if (!v12)
    return *(_BYTE **)(v5 + 41968);
  if (v12 == 1)
  {
    v16 = *(unsigned __int8 **)(v11 + 8);
    if ((*(_BYTE *)(v11 + 16) & 4) != 0)
    {
      v17 = *v16;
    }
    else
    {
      v18 = *(unsigned __int16 *)v16;
      if (v18 > 0xFF)
        goto LABEL_15;
      v17 = v18;
    }
    return *(_BYTE **)(v5 + 8 * v17 + 42216);
  }
LABEL_15:
  v13 = *(_QWORD *)(v5 + 64760);
  if (!v13 || v11 != *(_QWORD *)(v13 + 8))
    return (_BYTE *)JSC::jsStringWithCacheSlowCase();
  return (_BYTE *)v13;
}

_BYTE *WebCore::jsDOMURLPrototypeFunction_toString(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  JSC *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  JSC *v11;

  v3 = *((_QWORD *)a2 + 5);
  v4 = (JSC *)*((_QWORD *)this + 7);
  v11 = v4;
  if ((v3 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v11, "URL", "toString");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMURL::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMURL::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v11, "URL", "toString");
  else
    return (_BYTE *)JSC::jsOwnedString(v4, (JSC::VM *)(*(_QWORD *)(v3 + 24) + 24), a3);
}

unint64_t JSC::jsOwnedString(JSC *this, JSC::VM *a2, const WTF::String *a3)
{
  uint64_t v3;
  int v4;
  WTF::StringImpl *v5;
  unint64_t HasOtherOwner;
  WTF::StringImpl *v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;
  WTF::StringImpl *v12;

  v3 = *(_QWORD *)a2;
  if (!*(_QWORD *)a2)
    return *((_QWORD *)this + 5246);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *((_QWORD *)this + 5246);
  if (v4 == 1)
  {
    v9 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
        goto LABEL_4;
      v10 = v11;
    }
    return *((_QWORD *)this + v10 + 5277);
  }
LABEL_4:
  *(_DWORD *)v3 += 2;
  v12 = (WTF::StringImpl *)v3;
  HasOtherOwner = JSC::JSString::createHasOtherOwner((uint64_t)this, (uint64_t *)&v12);
  v7 = v12;
  v12 = 0;
  if (v7)
  {
    if (*(_DWORD *)v7 == 2)
      WTF::StringImpl::destroy(v7, v5);
    else
      *(_DWORD *)v7 -= 2;
  }
  return HasOtherOwner;
}

unint64_t JSC::JSString::createHasOtherOwner(uint64_t a1, uint64_t *a2)
{
  unint64_t result;
  uint64_t v5;

  result = JSC::allocateCell<JSC::JSString>(a1, 16);
  *(_DWORD *)result = *(_QWORD *)(a1 + 41512) >> 4;
  *(_DWORD *)(result + 4) = 17302016;
  v5 = *a2;
  *a2 = 0;
  *(_QWORD *)(result + 8) = v5;
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_close(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  JSC::CallFrame *v6;
  WebCore::DOMWindow *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v11 = *((_QWORD *)this + 7);
  v5 = WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v11, "Window", "close");
  v7 = *(WebCore::DOMWindow **)(v5 + 3408);
  v8 = *(_QWORD *)(WebCore::incumbentDOMWindow(this, a2, v6) + 72);
  if (v8)
  {
    v9 = *(_QWORD *)(v8 + 8);
    if (v9)
    {
      if (*(_BYTE *)(v9 + 178))
      {
        result = 105;
        __break(0xC471u);
        return result;
      }
      WebCore::DOMWindow::close(v7, (WebCore::Document *)(v9 - 288));
    }
  }
  return 10;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_focus(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  JSC::CallFrame *v6;
  uint64_t v7;
  WebCore::LocalDOMWindow *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v12 = *((_QWORD *)this + 7);
  v5 = WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v12, "Window", "focus");
  v7 = *(_QWORD *)(v5 + 3408);
  v8 = (WebCore::LocalDOMWindow *)WebCore::incumbentDOMWindow(this, a2, v6);
  if (*(_BYTE *)(v7 + 56))
  {
    v9 = *(_QWORD *)(v7 + 64);
    if (v9)
    {
      v10 = *(_QWORD *)(v9 + 8);
      if (v10)
      {
        if (*(_QWORD *)(*(_QWORD *)(v10 + 128) + 8) == v10)
          (*(void (**)(_QWORD))(**(_QWORD **)(v10 + 264) + 96))(*(_QWORD *)(v10 + 264));
      }
    }
  }
  else
  {
    WebCore::LocalDOMWindow::focus((WebCore::LocalDOMWindow *)v7, v8);
  }
  return 10;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_blur(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = (int)this;
  v9 = *((_QWORD *)this + 7);
  v4 = WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v4)
    return (uint64_t)WebCore::throwThisTypeError(v3, (int)&v9, "Window", "blur");
  v5 = *(_QWORD *)(v4 + 3408);
  if (*(_BYTE *)(v5 + 56))
  {
    v6 = *(_QWORD *)(v5 + 64);
    if (v6)
    {
      v7 = *(_QWORD *)(v6 + 8);
      if (v7)
      {
        if (*(_QWORD *)(*(_QWORD *)(v7 + 128) + 8) == v7)
          (*(void (**)(_QWORD))(**(_QWORD **)(v7 + 264) + 104))(*(_QWORD *)(v7 + 264));
      }
    }
  }
  else
  {
    WebCore::LocalDOMWindow::blur(v5);
  }
  return 10;
}

_BYTE *WebCore::jsDOMWindowInstanceFunction_postMessage(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  int v4;
  unint64_t v5;
  uint64_t v7;

  v4 = (int)this;
  v7 = *((_QWORD *)this + 7);
  if (WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2))
  {
    v5 = *((int *)a2 + 8) - 1;
    if (v5 >= 3)
      v5 = 3;
    __asm { BR              X10 }
  }
  return WebCore::throwThisTypeError(v4, (int)&v7, "Window", "postMessage");
}

uint64_t WebCore::jsDOMWindowInstanceFunction_stop(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v4;
  WTF::StringImpl **v5;
  JSC::VM *v6;
  WebCore::LocalDOMWindow *v7;
  BOOL v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v12;
  JSC::VM *v13;
  unsigned __int8 v14[8];
  WTF::StringImpl *v15;

  v12 = this[7];
  v4 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v4)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v12, "Window", "stop");
  v5 = v4;
  v6 = this[7];
  v13 = v6;
  if (v4 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v4[426], 2))
  {
    return 10;
  }
  v7 = v5[426];
  if (v7)
    v8 = *((_BYTE *)v7 + 56) == 0;
  else
    v8 = 0;
  if (v8)
  {
    WebCore::LocalDOMWindow::stop(v7);
    return 10;
  }
  v14[0] = 14;
  v15 = 0;
  if (!*((_QWORD *)v6 + 2))
  {
    WebCore::propagateExceptionSlowPath((JSC *)this, &v13, v14);
    v10 = v15;
    v15 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
        WTF::StringImpl::destroy(v10, v9);
      else
        *(_DWORD *)v10 -= 2;
    }
  }
  return 0;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_open(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  WTF::StringImpl **v6;
  JSC::VM *v7;
  WTF::StringImpl *v8;
  WTF::StringImpl **v9;
  WTF::StringImpl *v10;
  int v11;
  int v12;
  unint64_t v13;
  WTF::StringImpl *v14;
  int v15;
  WebCore::LocalDOMWindow *active;
  JSC::JSGlobalObject *v17;
  WebCore::LocalDOMWindow *DOMWindow;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  WebCore::WindowProxy *v23;
  WebCore::JSWindowProxy *v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  uint64_t *v30;
  unsigned int *v31;
  unsigned int v32;
  unsigned int v33;
  WTF::StringImpl *v34;
  WebCore *v35;
  JSC::JSGlobalObject *v36;
  JSC::CallFrame *v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  WebCore::WindowProxy *v42;
  WTF::StringImpl *v43;
  int v44;
  WTF::StringImpl *v45;
  int v46;
  WebCore::WindowProxy *v47;
  int v48;
  WTF::StringImpl *v49;
  int v50;
  JSC::VM *v51;
  unsigned __int8 v52[8];
  WTF::StringImpl *v53;

  v38 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v38, "Window", "open");
  v6 = v5;
  v7 = this[7];
  v51 = v7;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  v8 = v6[426];
  v9 = (WTF::StringImpl **)MEMORY[0x1E0CBF738];
  if (*((_DWORD *)a2 + 8) == 1 || *((_QWORD *)a2 + 6) == 10)
  {
    v10 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v10 += 2;
    v49 = v10;
    v50 = 0;
  }
  else
  {
    WebCore::valueToUSVString((JSC::JSGlobalObject *)this, *((_QWORD *)a2 + 6), (uint64_t)&v49);
    v11 = v50;
    if (v50)
    {
      v25 = 0;
LABEL_50:
      if (v11 != -1)
        ((void (*)(WebCore::WindowProxy **, WTF::StringImpl **))off_1E325A258[v11])(&v42, &v49);
      return v25;
    }
  }
  if ((unint64_t)(*((int *)a2 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL || *((_QWORD *)a2 + 7) == 10)
  {
    WTF::AtomStringImpl::add();
    v47 = v42;
    v48 = 0;
  }
  else
  {
    WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>((JSC::JSGlobalObject *)this, *((_QWORD *)a2 + 7), (uint64_t)&v47);
    v12 = v48;
    if (v48)
    {
      v25 = 0;
LABEL_47:
      if (v12 != -1)
        ((void (*)(WebCore::WindowProxy **, WebCore::WindowProxy **))off_1E325A6F0[v12])(&v42, &v47);
      v11 = v50;
      goto LABEL_50;
    }
  }
  if ((unint64_t)(*((int *)a2 + 8) - 4) >= 0xFFFFFFFFFFFFFFFDLL || (v13 = *((_QWORD *)a2 + 8), v13 == 10))
  {
    v14 = *v9;
    if (*v9)
      *(_DWORD *)v14 += 2;
    v45 = v14;
    v46 = 0;
  }
  else
  {
    WebCore::Converter<WebCore::IDLLegacyNullToEmptyStringAdaptor<WebCore::IDLDOMString>>::convert((JSC::JSGlobalObject *)this, v13, (uint64_t)&v45);
    v15 = v46;
    if (v46)
    {
      v25 = 0;
LABEL_44:
      if (v15 != -1)
        ((void (*)(WebCore::WindowProxy **, WTF::StringImpl **))off_1E325A258[v15])(&v42, &v45);
      v12 = v48;
      goto LABEL_47;
    }
  }
  active = (WebCore::LocalDOMWindow *)WebCore::activeDOMWindow((uint64_t)this);
  DOMWindow = (WebCore::LocalDOMWindow *)WebCore::firstDOMWindow(this, v17);
  if (!v50)
  {
    v20 = v49;
    v49 = 0;
    v41 = v20;
    if (!v48)
    {
      v21 = v47;
      v47 = 0;
      v40 = v21;
      if (!v46)
      {
        v22 = v45;
        v45 = 0;
        v39 = v22;
        if (!v8 || *((_BYTE *)v8 + 56))
        {
          v44 = 0;
          v42 = 0;
          goto LABEL_31;
        }
        WebCore::LocalDOMWindow::open((unsigned int *)v8, active, DOMWindow, (const WTF::String *)&v41, (const WTF::AtomString *)&v40, (const WTF::String *)&v39, (uint64_t)&v42);
        if (!v44)
        {
          v23 = v42;
          v42 = 0;
          if (v23)
          {
            v24 = WebCore::WindowProxy::jsWindowProxy(v23, this[415]);
            if (v24)
              v25 = (uint64_t)v24;
            else
              v25 = 2;
            if (*(_DWORD *)v23 == 1)
            {
              v30 = (uint64_t *)*((_QWORD *)v23 + 2);
              *((_QWORD *)v23 + 2) = 0;
              if (v30)
              {
                if (*v30)
                  WTF::HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>>::deallocateTable(*v30, v19);
                WTF::fastFree((WTF *)v30, v19);
              }
              v31 = (unsigned int *)*((_QWORD *)v23 + 1);
              *((_QWORD *)v23 + 1) = 0;
              if (v31)
              {
                do
                {
                  v32 = __ldaxr(v31);
                  v33 = v32 - 1;
                }
                while (__stlxr(v33, v31));
                if (!v33)
                {
                  atomic_store(1u, v31);
                  WTF::fastFree((WTF *)v31, v19);
                }
              }
              WTF::fastFree(v23, v19);
            }
            else
            {
              --*(_DWORD *)v23;
            }
            goto LABEL_32;
          }
LABEL_31:
          v25 = 2;
LABEL_32:
          if (v44 != -1)
            ((void (*)(unsigned __int8 *, WebCore::WindowProxy **))off_1E3264D28[v44])(v52, &v42);
          v44 = -1;
          v26 = v39;
          v39 = 0;
          if (v26)
          {
            if (*(_DWORD *)v26 == 2)
              WTF::StringImpl::destroy(v26, v19);
            else
              *(_DWORD *)v26 -= 2;
          }
          v27 = v40;
          v40 = 0;
          if (v27)
          {
            if (*(_DWORD *)v27 == 2)
              WTF::StringImpl::destroy(v27, v19);
            else
              *(_DWORD *)v27 -= 2;
          }
          v28 = v41;
          v41 = 0;
          if (v28)
          {
            if (*(_DWORD *)v28 == 2)
              WTF::StringImpl::destroy(v28, v19);
            else
              *(_DWORD *)v28 -= 2;
          }
          v15 = v46;
          goto LABEL_44;
        }
        if (v44 == 1)
        {
          v52[0] = v42;
          v34 = v43;
          v43 = 0;
          v53 = v34;
          if (!*((_QWORD *)v7 + 2))
          {
            WebCore::propagateExceptionSlowPath((JSC *)this, &v51, v52);
            v34 = v53;
          }
          v53 = 0;
          if (v34)
          {
            if (*(_DWORD *)v34 == 2)
              WTF::StringImpl::destroy(v34, v19);
            else
              *(_DWORD *)v34 -= 2;
          }
          v25 = 0;
          goto LABEL_32;
        }
      }
    }
  }
  v35 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsDOMWindowInstanceFunction_alert(v35, v36, v37);
}

uint64_t WebCore::jsDOMWindowInstanceFunction_alert(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  WTF::StringImpl *v6;
  WTF::StringImpl **v7;
  WTF::StringImpl *v8;
  WebCore::LocalDOMWindow *v9;
  uint64_t v10;
  WebCore::LocalDOMWindow *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  BOOL v15;
  char v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  char v19;
  uint64_t v20;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v25;
  JSC::VM *v26;
  int v27;
  JSC::VM *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;

  v25 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "Window", "alert");
  v7 = v5;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  v8 = this[7];
  if (*((_DWORD *)a2 + 8) != 1)
  {
    v28 = this[7];
    v11 = v7[426];
    v12 = (WTF::StringImpl *)*((_QWORD *)a2 + 6);
    v30 = v12;
    if (((unint64_t)v12 & 0xFFFE000000000002) != 0 || *((_BYTE *)v12 + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v30, (JSC::JSGlobalObject *)this);
LABEL_14:
      if (*((_DWORD *)v8 + 20))
      {
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v8);
        v14 = v29;
        if (hasExceptionsAfterHandlingTraps)
        {
          v27 = 1;
          v29 = 0;
          if (v14)
          {
            if (*(_DWORD *)v14 == 2)
              WTF::StringImpl::destroy(v14, v6);
            else
              *(_DWORD *)v14 -= 2;
          }
          v10 = 0;
          v20 = 1;
          goto LABEL_35;
        }
      }
      else
      {
        v14 = v29;
      }
      v27 = 0;
      v26 = 0;
      v30 = v14;
      if (v11)
        v15 = *((_BYTE *)v11 + 56) == 0;
      else
        v15 = 0;
      v16 = v15;
      if (v15)
      {
        WebCore::LocalDOMWindow::alert(v11, (const char **)&v30);
        v19 = 0;
        v14 = v30;
      }
      else
      {
        v19 = 14;
      }
      v30 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
        {
          WTF::StringImpl::destroy(v14, v6);
          if ((v16 & 1) != 0)
            goto LABEL_34;
          goto LABEL_40;
        }
        *(_DWORD *)v14 -= 2;
      }
      if ((v16 & 1) != 0)
      {
LABEL_34:
        v20 = 0;
        v10 = 10;
LABEL_35:
        ((void (*)(WTF::StringImpl **, JSC::VM **))off_1E325A258[v20])(&v30, &v26);
        return v10;
      }
LABEL_40:
      LOBYTE(v30) = v19;
      v31 = 0;
      if (!*((_QWORD *)v8 + 2))
      {
        WebCore::propagateExceptionSlowPath((JSC *)this, &v28, (unsigned __int8 *)&v30);
        v23 = v31;
        v31 = 0;
        if (v23)
        {
          if (*(_DWORD *)v23 == 2)
            WTF::StringImpl::destroy(v23, v22);
          else
            *(_DWORD *)v23 -= 2;
        }
      }
      v20 = 0;
      v10 = 0;
      goto LABEL_35;
    }
    v13 = (WTF::StringImpl *)*((_QWORD *)v12 + 1);
    if ((v13 & 1) != 0)
    {
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope(v12, (JSC::JSGlobalObject *)this);
      if (!v13)
        goto LABEL_13;
    }
    else if (!v13)
    {
LABEL_13:
      v29 = v13;
      goto LABEL_14;
    }
    *(_DWORD *)v13 += 2;
    goto LABEL_13;
  }
  v26 = this[7];
  v9 = v7[426];
  if (v9 && !*((_BYTE *)v9 + 56))
  {
    WebCore::LocalDOMWindow::alert(v9, MEMORY[0x1E0CBF738]);
    return 10;
  }
  LOBYTE(v30) = 14;
  v31 = 0;
  if (!*((_QWORD *)v8 + 2))
  {
    WebCore::propagateExceptionSlowPath((JSC *)this, &v26, (unsigned __int8 *)&v30);
    v18 = v31;
    v31 = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v17);
      else
        *(_DWORD *)v18 -= 2;
    }
  }
  return 0;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_confirm(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  WTF::StringImpl **v6;
  JSC::VM *v7;
  WebCore::LocalDOMWindow *v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  JSC::VM *v11;
  WTF::StringImpl *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  WTF::StringImpl *v22;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  _QWORD v26[2];
  int v27;
  uint64_t v28;
  int v29;
  JSC::VM *v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;

  v24 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v24, "Window", "confirm");
  v6 = v5;
  v7 = this[7];
  v30 = v7;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  v8 = v6[426];
  if (*((_DWORD *)a2 + 8) == 1 || (v9 = *((_QWORD *)a2 + 6), v9 == 10))
  {
    v10 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v10 += 2;
    v29 = 0;
    goto LABEL_17;
  }
  v26[0] = v9;
  v11 = this[7];
  if ((v9 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v9 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v26, (JSC::JSGlobalObject *)this);
    goto LABEL_14;
  }
  v12 = *(WTF::StringImpl **)(v9 + 8);
  if ((v12 & 1) != 0)
  {
    v12 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v9, (JSC::JSGlobalObject *)this);
    if (!v12)
      goto LABEL_13;
    goto LABEL_12;
  }
  if (v12)
LABEL_12:
    *(_DWORD *)v12 += 2;
LABEL_13:
  v31 = v12;
LABEL_14:
  if (*((_DWORD *)v11 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v11);
    v10 = v31;
    if (hasExceptionsAfterHandlingTraps)
    {
      v29 = 1;
      v31 = 0;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, v22);
        else
          *(_DWORD *)v10 -= 2;
      }
      v15 = 0;
      v20 = 1;
      goto LABEL_31;
    }
  }
  else
  {
    v10 = v31;
  }
  v29 = 0;
LABEL_17:
  v28 = 0;
  v25 = v10;
  if (!v8 || *((_BYTE *)v8 + 56))
  {
    LOBYTE(v26[0]) = 14;
    v27 = 1;
    LOBYTE(v31) = 14;
    v26[1] = 0;
    v32 = 0;
    if (!*((_QWORD *)v7 + 2))
    {
      WebCore::propagateExceptionSlowPath((JSC *)this, &v30, (unsigned __int8 *)&v31);
      v17 = v32;
      v32 = 0;
      if (v17)
      {
        if (*(_DWORD *)v17 == 2)
          WTF::StringImpl::destroy(v17, v16);
        else
          *(_DWORD *)v17 -= 2;
      }
    }
    v15 = 0;
    v14 = 1;
  }
  else
  {
    v13 = WebCore::LocalDOMWindow::confirmForBindings(v8, (const WTF::String *)&v25);
    v14 = 0;
    LOBYTE(v26[0]) = v13;
    v27 = 0;
    if (v13)
      v15 = 7;
    else
      v15 = 6;
  }
  off_1E325DFB8[v14]((unsigned __int8 *)&v31, (char *)v26);
  v27 = -1;
  v19 = v25;
  v25 = 0;
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v18);
    else
      *(_DWORD *)v19 -= 2;
  }
  v20 = 0;
LABEL_31:
  ((void (*)(_QWORD *, uint64_t *))off_1E325A258[v20])(v26, &v28);
  return v15;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_prompt(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  WTF::StringImpl *v6;
  WTF::StringImpl **v7;
  JSC::VM *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl **v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::VM *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  JSC::VM *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  uint64_t v25;
  int hasExceptionsAfterHandlingTraps;
  int v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32[2];
  int v33;
  uint64_t v34;
  int v35;
  WTF::StringImpl *v36;
  int v37;
  JSC::VM *v38;
  WTF::StringImpl *v39;
  WTF::StringImpl *v40;

  v29 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v29, "Window", "prompt");
  v7 = v5;
  v8 = this[7];
  v38 = v8;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  v9 = v7[426];
  v10 = (WTF::StringImpl **)MEMORY[0x1E0CBF738];
  if (*((_DWORD *)a2 + 8) == 1 || (v11 = *((_QWORD *)a2 + 6), v11 == 10))
  {
    v12 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v12 += 2;
    v36 = v12;
    v37 = 0;
    goto LABEL_17;
  }
  v32[0] = *((WTF::StringImpl **)a2 + 6);
  v13 = this[7];
  if ((v11 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v11 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v32, (JSC::JSGlobalObject *)this);
    goto LABEL_14;
  }
  v14 = *(WTF::StringImpl **)(v11 + 8);
  if ((v14 & 1) != 0)
  {
    v14 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v11, (JSC::JSGlobalObject *)this);
    if (!v14)
      goto LABEL_13;
    goto LABEL_12;
  }
  if (v14)
LABEL_12:
    *(_DWORD *)v14 += 2;
LABEL_13:
  v39 = v14;
LABEL_14:
  if (*((_DWORD *)v13 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v13);
    v12 = v39;
    if (hasExceptionsAfterHandlingTraps)
    {
      v37 = 1;
      v39 = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, v6);
        else
          *(_DWORD *)v12 -= 2;
      }
      v20 = 0;
      v25 = 1;
      goto LABEL_52;
    }
  }
  else
  {
    v12 = v39;
  }
  v36 = v12;
  v37 = 0;
LABEL_17:
  if ((unint64_t)(*((int *)a2 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL || (v15 = *((_QWORD *)a2 + 7), v15 == 10))
  {
    v16 = *v10;
    if (*v10)
      *(_DWORD *)v16 += 2;
    v35 = 0;
    goto LABEL_31;
  }
  v32[0] = (WTF::StringImpl *)v15;
  v17 = this[7];
  if ((v15 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v15 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v32, (JSC::JSGlobalObject *)this);
    goto LABEL_28;
  }
  v18 = *(WTF::StringImpl **)(v15 + 8);
  if ((v18 & 1) != 0)
  {
    v18 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v15, (JSC::JSGlobalObject *)this);
    if (!v18)
      goto LABEL_27;
    goto LABEL_26;
  }
  if (v18)
LABEL_26:
    *(_DWORD *)v18 += 2;
LABEL_27:
  v39 = v18;
LABEL_28:
  if (*((_DWORD *)v17 + 20))
  {
    v28 = JSC::VM::hasExceptionsAfterHandlingTraps(v17);
    v16 = v39;
    if (v28)
    {
      v35 = 1;
      v39 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v6);
        else
          *(_DWORD *)v16 -= 2;
      }
      v20 = 0;
      v24 = 1;
      goto LABEL_51;
    }
  }
  else
  {
    v16 = v39;
  }
  v35 = 0;
LABEL_31:
  v36 = 0;
  v30 = v16;
  v31 = v12;
  v34 = 0;
  if (!v9 || *((_BYTE *)v9 + 56))
  {
    LOBYTE(v32[0]) = 14;
    v32[1] = 0;
    v33 = 1;
    LOBYTE(v39) = 14;
    v40 = 0;
    if (*((_QWORD *)v8 + 2))
    {
      v21 = 0;
    }
    else
    {
      WebCore::propagateExceptionSlowPath((JSC *)this, &v38, (unsigned __int8 *)&v39);
      v21 = v40;
    }
    v40 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v6);
      else
        *(_DWORD *)v21 -= 2;
    }
    v20 = 0;
  }
  else
  {
    WebCore::LocalDOMWindow::prompt(v9, (const WTF::String *)&v31, (const char **)&v30, v32);
    v33 = 0;
    v19 = v32[0];
    v32[0] = 0;
    v20 = WebCore::toJS<WebCore::IDLNullable<WebCore::IDLDOMString>,WTF::AtomString>((uint64_t)this[7], (uint64_t)v19);
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v6);
      else
        *(_DWORD *)v19 -= 2;
    }
  }
  if (v33 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325CDB8[v33])(&v39, v32);
  v33 = -1;
  v22 = v30;
  v30 = 0;
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v6);
    else
      *(_DWORD *)v22 -= 2;
  }
  v23 = v31;
  v31 = 0;
  if (v23)
  {
    if (*(_DWORD *)v23 == 2)
      WTF::StringImpl::destroy(v23, v6);
    else
      *(_DWORD *)v23 -= 2;
  }
  v24 = 0;
LABEL_51:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E325A258[v24])(v32, &v34);
  v25 = 0;
LABEL_52:
  ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A258[v25])(v32, &v36);
  return v20;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_print(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v4;
  WTF::StringImpl **v5;
  JSC::VM *v6;
  WTF::StringImpl *v7;
  BOOL v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v12;
  JSC::VM *v13;
  unsigned __int8 v14[8];
  WTF::StringImpl *v15;

  v12 = this[7];
  v4 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v4)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v12, "Window", "print");
  v5 = v4;
  v6 = this[7];
  v13 = v6;
  if (v4 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v4[426], 2))
  {
    return 10;
  }
  v7 = v5[426];
  if (v7)
    v8 = *((_BYTE *)v7 + 56) == 0;
  else
    v8 = 0;
  if (v8)
  {
    WebCore::LocalDOMWindow::print(v7);
    return 10;
  }
  v14[0] = 14;
  v15 = 0;
  if (!*((_QWORD *)v6 + 2))
  {
    WebCore::propagateExceptionSlowPath((JSC *)this, &v13, v14);
    v10 = v15;
    v15 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
        WTF::StringImpl::destroy(v10, v9);
      else
        *(_DWORD *)v10 -= 2;
    }
  }
  return 0;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_captureEvents(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v4;
  WTF::StringImpl **v5;
  JSC::VM *v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v12;
  JSC::VM *v13;
  unsigned __int8 v14[8];
  WTF::StringImpl *v15;

  v12 = this[7];
  v4 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v4)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v12, "Window", "captureEvents");
  v5 = v4;
  v6 = this[7];
  v13 = v6;
  if (v4 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v4[426], 2))
  {
    return 10;
  }
  v7 = v5[426];
  if (v7 && *((_BYTE *)v7 + 56) == 0)
    return 10;
  v14[0] = 14;
  v15 = 0;
  if (!*((_QWORD *)v6 + 2))
  {
    WebCore::propagateExceptionSlowPath((JSC *)this, &v13, v14);
    v10 = v15;
    v15 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
        WTF::StringImpl::destroy(v10, v9);
      else
        *(_DWORD *)v10 -= 2;
    }
  }
  return 0;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_releaseEvents(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v4;
  WTF::StringImpl **v5;
  JSC::VM *v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v12;
  JSC::VM *v13;
  unsigned __int8 v14[8];
  WTF::StringImpl *v15;

  v12 = this[7];
  v4 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v4)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v12, "Window", "releaseEvents");
  v5 = v4;
  v6 = this[7];
  v13 = v6;
  if (v4 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v4[426], 2))
  {
    return 10;
  }
  v7 = v5[426];
  if (v7 && *((_BYTE *)v7 + 56) == 0)
    return 10;
  v14[0] = 14;
  v15 = 0;
  if (!*((_QWORD *)v6 + 2))
  {
    WebCore::propagateExceptionSlowPath((JSC *)this, &v13, v14);
    v10 = v15;
    v15 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
        WTF::StringImpl::destroy(v10, v9);
      else
        *(_DWORD *)v10 -= 2;
    }
  }
  return 0;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_find(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  WTF::StringImpl **v5;
  WTF::StringImpl *v6;
  WTF::StringImpl **v7;
  unint64_t v8;
  WebCore::LocalDOMWindow *v9;
  uint64_t v10;
  uint64_t v11;
  JSC::VM *v12;
  WTF::StringImpl *v13;
  WebCore::LocalDOMWindow *v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  JSC::VM *v17;
  double v18;
  int v19;
  uint64_t v20;
  int *v21;
  int v22;
  __int16 i;
  unint64_t v24;
  JSC::VM *v25;
  int v26;
  uint64_t v27;
  int *v28;
  int v29;
  _BOOL4 v30;
  unint64_t v31;
  JSC::VM *v32;
  double v33;
  int v34;
  uint64_t v35;
  int *v36;
  int v37;
  _BOOL4 v38;
  unint64_t v39;
  JSC::VM *v40;
  unint64_t v41;
  JSC::VM *v42;
  unint64_t v43;
  JSC::VM *v44;
  double v45;
  int v46;
  uint64_t v47;
  int *v48;
  int v49;
  WTF::StringImpl *v50;
  _BOOL4 v51;
  uint64_t v52;
  uint64_t v53;
  WTF::StringImpl *v54;
  WTF::StringImpl *v55;
  WTF::StringImpl *v56;
  int v57;
  WebCore::LocalDOMWindow *v59;
  WTF::StringImpl **v60;
  __int16 v61;
  WebCore::LocalDOMWindow *v62;
  _BOOL4 v63;
  __int16 v64;
  WebCore::LocalDOMWindow *v65;
  _BOOL4 v66;
  _BOOL4 v67;
  __int16 v68;
  WebCore::LocalDOMWindow *v69;
  _BOOL4 v70;
  __int16 v71;
  WebCore::LocalDOMWindow *v72;
  WebCore::LocalDOMWindow *v73;
  char v74;
  int hasExceptionsAfterHandlingTraps;
  BOOL v76;
  BOOL v77;
  BOOL v78;
  BOOL v79;
  WebCore::LocalDOMWindow *v80;
  _BOOL4 v81;
  _BOOL4 v82;
  __int16 v83;
  __int16 v84;
  _BOOL4 v85;
  _BOOL4 v86;
  _BOOL4 v87;
  WTF::StringImpl *v88;
  WTF::StringImpl *v89;
  _QWORD v90[2];
  int v91;
  WTF::StringImpl *v92;
  int v93;
  JSC::VM *v94;
  WTF::StringImpl *v95;
  WTF::StringImpl *v96;

  v3 = (uint64_t)a2;
  v88 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v88, "Window", "find");
  v7 = v5;
  v94 = this[7];
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  v8 = 0xFFFE000000000002;
  v9 = v7[426];
  LODWORD(v10) = *(_DWORD *)(v3 + 32);
  if ((_DWORD)v10 == 1 || (v11 = *(_QWORD *)(v3 + 48), v11 == 10))
  {
    v92 = 0;
    v93 = 0;
  }
  else
  {
    v90[0] = *(_QWORD *)(v3 + 48);
    v12 = this[7];
    if ((v11 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v11 + 5) != 2)
    {
      v14 = v9;
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v90, (JSC::JSGlobalObject *)this);
      v8 = 0xFFFE000000000002;
    }
    else
    {
      v13 = *(WTF::StringImpl **)(v11 + 8);
      if ((v13 & 1) != 0)
      {
        v59 = v9;
        v60 = (WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v11, (JSC::JSGlobalObject *)this);
        v8 = 0xFFFE000000000002;
        v9 = v59;
        v13 = *v60;
      }
      v14 = v9;
      if (v13)
        *(_DWORD *)v13 += 2;
      v95 = v13;
    }
    if (*((_DWORD *)v12 + 20))
    {
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v12);
      v15 = v95;
      if (hasExceptionsAfterHandlingTraps)
      {
        v93 = 1;
        v95 = 0;
        if (v15)
        {
          if (*(_DWORD *)v15 == 2)
            WTF::StringImpl::destroy(v15, v6);
          else
            *(_DWORD *)v15 -= 2;
        }
        v53 = 0;
        v57 = 1;
        goto LABEL_98;
      }
      v8 = 0xFFFE000000000002;
    }
    else
    {
      v15 = v95;
    }
    v92 = v15;
    v93 = 0;
    LODWORD(v10) = *(_DWORD *)(v3 + 32);
    v9 = v14;
  }
  v10 = (int)v10;
  if ((unint64_t)((int)v10 - 3) >= 0xFFFFFFFFFFFFFFFELL)
  {
    v17 = this[7];
    v16 = 10;
    goto LABEL_27;
  }
  v16 = *(_QWORD *)(v3 + 56);
  v17 = this[7];
  if (v16 >= 0xFFFE000000000000)
    goto LABEL_132;
  *(_QWORD *)&v18 = v16 - 0x2000000000000;
  if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v16 & 0xFFFE000000000002) == 0)
    {
      v19 = *(unsigned __int8 *)(v16 + 5);
      if (v19 == 3)
      {
        v22 = *(_DWORD *)(v16 + 8);
      }
      else
      {
        if (v19 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
            i = 1;
LABEL_174:
            v8 = 0xFFFE000000000002;
            goto LABEL_28;
          }
          v77 = *(_QWORD *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_171:
          i = !v77;
          goto LABEL_174;
        }
        v20 = *(_QWORD *)(v16 + 8);
        if ((v20 & 1) != 0)
          v21 = (int *)(v16 + 16);
        else
          v21 = (int *)(v20 + 4);
        v22 = *v21;
      }
      v77 = v22 == 0;
      goto LABEL_171;
    }
LABEL_27:
    i = v16 == 7;
    goto LABEL_28;
  }
  for (i = v18 > 0.0 || v18 < 0.0; ; i = (_DWORD)v16 != 0)
  {
LABEL_28:
    if (*((_DWORD *)v17 + 20))
    {
      v61 = i;
      v62 = v9;
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) != 0)
      {
        v53 = 0;
        goto LABEL_97;
      }
      v10 = *(int *)(v3 + 32);
      v9 = v62;
      v8 = 0xFFFE000000000002;
      i = v61;
    }
    if ((unint64_t)(v10 - 4) >= 0xFFFFFFFFFFFFFFFDLL)
    {
      v25 = this[7];
      v24 = 10;
LABEL_40:
      v30 = v24 == 7;
      goto LABEL_41;
    }
    v24 = *(_QWORD *)(v3 + 64);
    v25 = this[7];
    if (v24 >= 0xFFFE000000000000)
    {
      v30 = v24 != 0;
      goto LABEL_41;
    }
    if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      if ((v24 & v8) != 0)
        goto LABEL_40;
      v26 = *(unsigned __int8 *)(v24 + 5);
      if (v26 == 3)
      {
        v29 = *(_DWORD *)(v24 + 8);
      }
      else
      {
        if (v26 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
            v30 = 1;
LABEL_179:
            v8 = 0xFFFE000000000002;
            goto LABEL_41;
          }
          v78 = *(_QWORD *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_176:
          v30 = !v78;
          goto LABEL_179;
        }
        v27 = *(_QWORD *)(v24 + 8);
        if ((v27 & 1) != 0)
          v28 = (int *)(v24 + 16);
        else
          v28 = (int *)(v27 + 4);
        v29 = *v28;
      }
      v78 = v29 == 0;
      goto LABEL_176;
    }
    v30 = COERCE_DOUBLE(v24 - 0x2000000000000) > 0.0 || COERCE_DOUBLE(v24 - 0x2000000000000) < 0.0;
LABEL_41:
    if (*((_DWORD *)v25 + 20))
    {
      v63 = v30;
      v64 = i;
      v65 = v9;
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v25) & 1) != 0)
      {
        v53 = 0;
        goto LABEL_97;
      }
      v10 = *(int *)(v3 + 32);
      v9 = v65;
      v8 = 0xFFFE000000000002;
      i = v64;
      v30 = v63;
    }
    if ((unint64_t)(v10 - 5) >= 0xFFFFFFFFFFFFFFFCLL)
    {
      v32 = this[7];
      v31 = 10;
LABEL_53:
      v38 = v31 == 7;
      goto LABEL_54;
    }
    v31 = *(_QWORD *)(v3 + 72);
    v32 = this[7];
    if (v31 >= 0xFFFE000000000000)
    {
      v38 = v31 != 0;
      goto LABEL_54;
    }
    *(_QWORD *)&v33 = v31 - 0x2000000000000;
    if (v31 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      if ((v31 & v8) != 0)
        goto LABEL_53;
      v34 = *(unsigned __int8 *)(v31 + 5);
      if (v34 == 3)
      {
        v37 = *(_DWORD *)(v31 + 8);
      }
      else
      {
        if (v34 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v31 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
            v38 = 1;
LABEL_184:
            v8 = 0xFFFE000000000002;
            goto LABEL_54;
          }
          v79 = *(_QWORD *)(16 * (*(_DWORD *)v31 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_181:
          v38 = !v79;
          goto LABEL_184;
        }
        v35 = *(_QWORD *)(v31 + 8);
        if ((v35 & 1) != 0)
          v36 = (int *)(v31 + 16);
        else
          v36 = (int *)(v35 + 4);
        v37 = *v36;
      }
      v79 = v37 == 0;
      goto LABEL_181;
    }
    v38 = v33 > 0.0 || v33 < 0.0;
LABEL_54:
    if (*((_DWORD *)v32 + 20))
    {
      v66 = v38;
      v67 = v30;
      v68 = i;
      v69 = v9;
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v32) & 1) != 0)
      {
        v53 = 0;
        goto LABEL_97;
      }
      v10 = *(int *)(v3 + 32);
      v9 = v69;
      v8 = 0xFFFE000000000002;
      i = v68;
      v30 = v67;
      v38 = v66;
    }
    if ((unint64_t)(v10 - 6) >= 0xFFFFFFFFFFFFFFFBLL)
    {
      v40 = this[7];
    }
    else
    {
      v39 = *(_QWORD *)(v3 + 80);
      v40 = this[7];
      if (v39 < 0xFFFE000000000000 && v39 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL && (v39 & v8) == 0)
        v8 = 0xFFFE000000000002;
    }
    if (*((_DWORD *)v40 + 20))
    {
      v85 = v38;
      v70 = v30;
      v71 = i;
      v72 = v9;
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v40) & 1) != 0)
      {
        v53 = 0;
        goto LABEL_97;
      }
      v10 = *(int *)(v3 + 32);
      v9 = v72;
      v8 = 0xFFFE000000000002;
      i = v71;
      v30 = v70;
      v38 = v85;
    }
    if ((unint64_t)(v10 - 7) >= 0xFFFFFFFFFFFFFFFALL)
    {
      v42 = this[7];
    }
    else
    {
      v41 = *(_QWORD *)(v3 + 88);
      v42 = this[7];
      if (v41 < 0xFFFE000000000000 && v41 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL && (v41 & v8) == 0)
        v8 = 0xFFFE000000000002;
    }
    if (*((_DWORD *)v42 + 20))
    {
      v86 = v38;
      v81 = v30;
      v83 = i;
      v73 = v9;
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v42) & 1) != 0)
      {
        v53 = 0;
        goto LABEL_97;
      }
      v10 = *(int *)(v3 + 32);
      v9 = v73;
      v8 = 0xFFFE000000000002;
      v30 = v81;
      i = v83;
      v38 = v86;
    }
    if ((unint64_t)(v10 - 8) >= 0xFFFFFFFFFFFFFFF9)
    {
      v44 = this[7];
      v43 = 10;
LABEL_80:
      v3 = v43 == 7;
      goto LABEL_81;
    }
    v43 = *(_QWORD *)(v3 + 96);
    v44 = this[7];
    if (v43 >= 0xFFFE000000000000)
    {
      v76 = (_DWORD)v43 == 0;
      goto LABEL_165;
    }
    *(_QWORD *)&v45 = v43 - 0x2000000000000;
    if (v43 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      if ((v43 & v8) != 0)
        goto LABEL_80;
      v46 = *(unsigned __int8 *)(v43 + 5);
      if (v46 == 3)
      {
        v49 = *(_DWORD *)(v43 + 8);
      }
      else
      {
        if (v46 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v43 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_169:
            v3 = 1;
            goto LABEL_81;
          }
          v76 = *(_QWORD *)(16 * (*(_DWORD *)v43 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
          goto LABEL_165;
        }
        v47 = *(_QWORD *)(v43 + 8);
        if ((v47 & 1) != 0)
          v48 = (int *)(v43 + 16);
        else
          v48 = (int *)(v47 + 4);
        v49 = *v48;
      }
      v76 = v49 == 0;
LABEL_165:
      v3 = !v76;
      goto LABEL_81;
    }
    if (v45 > 0.0)
      goto LABEL_169;
    v3 = v45 < 0.0;
LABEL_81:
    if (*((_DWORD *)v44 + 20))
    {
      v80 = v9;
      v82 = v30;
      v84 = i;
      v87 = v38;
      v74 = JSC::VM::hasExceptionsAfterHandlingTraps(v44);
      v38 = v87;
      v30 = v82;
      i = v84;
      v9 = v80;
      if ((v74 & 1) != 0)
      {
        v53 = 0;
        goto LABEL_97;
      }
    }
    if (!v93)
      break;
    v17 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_132:
    ;
  }
  v50 = v92;
  v92 = 0;
  v89 = v50;
  if (!v9 || *((_BYTE *)v9 + 56))
  {
    v90[1] = 0;
    LOBYTE(v90[0]) = 14;
    v91 = 1;
    LOBYTE(v95) = 14;
    v96 = 0;
    if (*((_QWORD *)v94 + 2))
    {
      v54 = 0;
    }
    else
    {
      WebCore::propagateExceptionSlowPath((JSC *)this, &v94, (unsigned __int8 *)&v95);
      v54 = v96;
    }
    v96 = 0;
    if (v54)
    {
      if (*(_DWORD *)v54 == 2)
        WTF::StringImpl::destroy(v54, v6);
      else
        *(_DWORD *)v54 -= 2;
    }
    v53 = 0;
    v52 = 1;
  }
  else
  {
    v51 = WebCore::LocalDOMWindow::find(v9, (const WTF::String *)&v89, i, v30, v38);
    v52 = 0;
    LOBYTE(v90[0]) = v51;
    v91 = 0;
    if (v51)
      v53 = 7;
    else
      v53 = 6;
  }
  off_1E325DFB8[v52]((unsigned __int8 *)&v95, (char *)v90);
  v91 = -1;
  v56 = v89;
  v89 = 0;
  if (v56)
  {
    if (*(_DWORD *)v56 == 2)
      WTF::StringImpl::destroy(v56, v55);
    else
      *(_DWORD *)v56 -= 2;
  }
LABEL_97:
  v57 = v93;
  if (v93 != -1)
LABEL_98:
    ((void (*)(_QWORD *, WTF::StringImpl **))off_1E325A258[v57])(v90, &v92);
  return v53;
}

unint64_t WebCore::jsDOMWindowInstanceFunction_webkitRequestAnimationFrame(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  JSC::JSGlobalObject *v6;
  uint64_t v7;
  WTF::StringImpl **v8;
  JSC::VM *v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  WebCore::JSRequestAnimationFrameCallback *v13;
  unsigned int v14;
  uint64_t v15;
  unint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WebCore::JSRequestAnimationFrameCallback *v19;
  uint64_t v20;
  JSValue v23;
  WTF::StringImpl *v24;
  WebCore::JSRequestAnimationFrameCallback *v25;
  uint64_t v26;
  int v27;
  JSC::VM *v28;
  _QWORD v29[2];
  int v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;

  v24 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v24, "Window", "webkitRequestAnimationFrame");
  v8 = v5;
  v9 = this[7];
  v28 = v9;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v23.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, v6);
    return JSC::VM::throwException(v9, (JSC::JSGlobalObject *)this, v23);
  }
  v10 = (uint64_t)v8[426];
  v11 = *((_QWORD *)a2 + 6);
  v31 = this[7];
  if ((v11 & 0xFFFE000000000002) == 0
    && (v12 = *(unsigned __int8 *)(v11 + 5), v12 >= 0x17)
    && ((v12 & 0xFE) == 0x1A
     || (*(_BYTE *)(v11 + 6) & 4) != 0
     && ((*(void (**)(_QWORD *__return_ptr, unint64_t))(16
                                                                        * *(unsigned int *)(16
                                                                                          * (*(_DWORD *)v11 & 0xFFFFFFFE)
                                                                                          + 0x4C)
                                                                        + 0x38))(v29, v11), LOBYTE(v29[0]))))
  {
    v13 = (WebCore::JSRequestAnimationFrameCallback *)WTF::fastMalloc((WTF *)0x28);
    v27 = 0;
    v25 = WebCore::JSRequestAnimationFrameCallback::JSRequestAnimationFrameCallback(v13, v11, (WebCore::JSDOMGlobalObject *)v8);
    v26 = 0;
    if (!v10 || *(_BYTE *)(v10 + 56))
    {
      LOBYTE(v29[0]) = 14;
      v30 = 1;
      LOBYTE(v31) = 14;
      v29[1] = 0;
      v32 = 0;
      if (!*((_QWORD *)v9 + 2))
      {
        WebCore::propagateExceptionSlowPath((JSC *)this, &v28, (unsigned __int8 *)&v31);
        v18 = v32;
        v32 = 0;
        if (v18)
        {
          if (*(_DWORD *)v18 == 2)
            WTF::StringImpl::destroy(v18, v17);
          else
            *(_DWORD *)v18 -= 2;
        }
      }
      v16 = 0;
      v15 = 1;
    }
    else
    {
      v14 = WebCore::LocalDOMWindow::webkitRequestAnimationFrame(v10, (uint64_t *)&v25);
      v15 = 0;
      LODWORD(v29[0]) = v14;
      v30 = 0;
      v16 = v14 | 0xFFFE000000000000;
    }
    ((void (*)(WTF::StringImpl **, _QWORD *))off_1E3264D38[v15])(&v31, v29);
    v30 = -1;
    v19 = v25;
    v25 = 0;
    if (v19)
    {
      if (*((_DWORD *)v19 + 4) == 1)
        (*(void (**)(WebCore::JSRequestAnimationFrameCallback *))(*(_QWORD *)v19 + 16))(v19);
      else
        --*((_DWORD *)v19 + 4);
    }
    v20 = 0;
  }
  else
  {
    WebCore::throwArgumentMustBeFunctionError((uint64_t)this, (uint64_t)&v31, 0, "callback", 9, "Window", 7, v7, "webkitRequestAnimationFrame", 28);
    v16 = 0;
    v20 = 1;
    v27 = 1;
  }
  ((void (*)(_QWORD *, uint64_t *))off_1E3264D48[v20])(v29, &v26);
  return v16;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_webkitCancelAnimationFrame(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  JSC::JSGlobalObject *v6;
  WTF::StringImpl **v7;
  JSC::VM *v8;
  WebCore::LocalDOMWindow *v9;
  unint64_t v10;
  JSC::VM *v11;
  WebCore::Document *v12;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unsigned int v18;
  unsigned int v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  JSValue v22;
  JSC::VM *v23;
  unint64_t v24;
  WTF::StringImpl *v25;
  JSC::VM *v26;
  unint64_t v27;
  WTF::StringImpl *v28;

  v25 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "Window", "webkitCancelAnimationFrame");
  v7 = v5;
  v8 = this[7];
  v26 = v8;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v22.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, v6);
    return JSC::VM::throwException(v8, (JSC::JSGlobalObject *)this, v22);
  }
  else
  {
    v9 = v7[426];
    v10 = *((_QWORD *)a2 + 6);
    v27 = v10;
    v11 = this[7];
    if (v10 < 0xFFFE000000000000)
    {
      v14 = v10 - 0x2000000000000;
      if (v10 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        v23 = this[7];
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v27, (JSC::JSGlobalObject *)this);
        v11 = v23;
        v14 = v24;
      }
      v15 = (v14 >> 52) & 0x7FF;
      v16 = v15 - 1023;
      v17 = v14 >> (51 - (v14 >> 52));
      if (v15 > 0x433)
        LODWORD(v17) = v14 << ((v14 >> 52) - 51);
      if (v15 >= 0x41F)
        v18 = v17;
      else
        v18 = (((1 << ((v14 >> 52) + 1)) - 1) & v17) + (1 << ((v14 >> 52) + 1));
      if ((v14 & 0x8000000000000000) == 0)
        v19 = v18;
      else
        v19 = -v18;
      if (v16 <= 0x53)
        v12 = (WebCore::Document *)v19;
      else
        v12 = 0;
    }
    else
    {
      v12 = (WebCore::Document *)v10;
    }
    if (!*((_DWORD *)v11 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v11))
    {
      if (v9 && !*((_BYTE *)v9 + 56))
      {
        WebCore::LocalDOMWindow::cancelAnimationFrame(v9, v12);
        return 10;
      }
      LOBYTE(v27) = 14;
      v28 = 0;
      if (!*((_QWORD *)v8 + 2))
      {
        WebCore::propagateExceptionSlowPath((JSC *)this, &v26, (unsigned __int8 *)&v27);
        v21 = v28;
        v28 = 0;
        if (v21)
        {
          if (*(_DWORD *)v21 == 2)
            WTF::StringImpl::destroy(v21, v20);
          else
            *(_DWORD *)v21 -= 2;
        }
      }
    }
    return 0;
  }
}

uint64_t WebCore::jsDOMWindowInstanceFunction_webkitCancelRequestAnimationFrame(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  JSC::JSGlobalObject *v6;
  WTF::StringImpl **v7;
  JSC::VM *v8;
  WebCore::LocalDOMWindow *v9;
  unint64_t v10;
  JSC::VM *v11;
  WebCore::Document *v12;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unsigned int v18;
  unsigned int v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  JSValue v22;
  JSC::VM *v23;
  unint64_t v24;
  WTF::StringImpl *v25;
  JSC::VM *v26;
  unint64_t v27;
  WTF::StringImpl *v28;

  v25 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "Window", "webkitCancelRequestAnimationFrame");
  v7 = v5;
  v8 = this[7];
  v26 = v8;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v22.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, v6);
    return JSC::VM::throwException(v8, (JSC::JSGlobalObject *)this, v22);
  }
  else
  {
    v9 = v7[426];
    v10 = *((_QWORD *)a2 + 6);
    v27 = v10;
    v11 = this[7];
    if (v10 < 0xFFFE000000000000)
    {
      v14 = v10 - 0x2000000000000;
      if (v10 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        v23 = this[7];
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v27, (JSC::JSGlobalObject *)this);
        v11 = v23;
        v14 = v24;
      }
      v15 = (v14 >> 52) & 0x7FF;
      v16 = v15 - 1023;
      v17 = v14 >> (51 - (v14 >> 52));
      if (v15 > 0x433)
        LODWORD(v17) = v14 << ((v14 >> 52) - 51);
      if (v15 >= 0x41F)
        v18 = v17;
      else
        v18 = (((1 << ((v14 >> 52) + 1)) - 1) & v17) + (1 << ((v14 >> 52) + 1));
      if ((v14 & 0x8000000000000000) == 0)
        v19 = v18;
      else
        v19 = -v18;
      if (v16 <= 0x53)
        v12 = (WebCore::Document *)v19;
      else
        v12 = 0;
    }
    else
    {
      v12 = (WebCore::Document *)v10;
    }
    if (!*((_DWORD *)v11 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v11))
    {
      if (v9 && !*((_BYTE *)v9 + 56))
      {
        WebCore::LocalDOMWindow::cancelAnimationFrame(v9, v12);
        return 10;
      }
      LOBYTE(v27) = 14;
      v28 = 0;
      if (!*((_QWORD *)v8 + 2))
      {
        WebCore::propagateExceptionSlowPath((JSC *)this, &v26, (unsigned __int8 *)&v27);
        v21 = v28;
        v28 = 0;
        if (v21)
        {
          if (*(_DWORD *)v21 == 2)
            WTF::StringImpl::destroy(v21, v20);
          else
            *(_DWORD *)v21 -= 2;
        }
      }
    }
    return 0;
  }
}

unint64_t WebCore::jsDOMWindowInstanceFunction_webkitConvertPointFromPageToNode(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  uint64_t v6;
  uint64_t v7;
  JSC::VM *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  char **v17;
  BOOL v18;
  unint64_t v20;
  WTF *v21;
  void *v22;
  uint64_t v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v26;
  uint64_t v27[2];
  int v28;
  JSC::VM *v29;
  unsigned __int8 v30[8];
  WTF::StringImpl *v31;

  v26 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "Window", "webkitConvertPointFromPageToNode");
  v7 = (uint64_t)v5;
  v8 = this[7];
  v29 = v8;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  v9 = *(_QWORD *)(v7 + 3408);
  v10 = *((int *)a2 + 8);
  if ((_DWORD)v10 == 1)
  {
    v12 = 0;
    v13 = 0;
  }
  else
  {
    v11 = *((_QWORD *)a2 + 6);
    if ((v11 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v12 = 0;
    }
    else
    {
      v27[0] = (uint64_t)this[7];
      if ((v11 & 0xFFFE000000000002) != 0
        || *(unsigned __int8 *)(v11 + 5) < 0xF0u
        || (v12 = *(WTF::StringImpl **)(v11 + 24)) == 0)
      {
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v27, 0, "node", 5, "Window", 7, v6, "webkitConvertPointFromPageToNode", 33, "Node", 5);
        return 0;
      }
    }
    if ((unint64_t)(v10 - 3) > 0xFFFFFFFFFFFFFFFDLL)
    {
      v13 = 0;
    }
    else
    {
      v14 = *((_QWORD *)a2 + 7);
      if ((v14 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v13 = 0;
      }
      else
      {
        v27[0] = (uint64_t)this[7];
        if ((v14 & 0xFFFE000000000002) != 0)
          goto LABEL_24;
        v15 = *(unsigned int *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C);
        v16 = *(_DWORD *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C) != 0;
        v17 = (char **)(16 * v15);
        if ((_DWORD)v15)
          v18 = v17 == &WebCore::JSWebKitPoint::s_info;
        else
          v18 = 1;
        if (!v18)
        {
          do
          {
            v17 = (char **)v17[2];
            v16 = v17 != 0;
          }
          while (v17 != &WebCore::JSWebKitPoint::s_info && v17 != 0);
        }
        if (!v16 || (v13 = *(_QWORD *)(v14 + 24)) == 0)
        {
LABEL_24:
          WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v27, 1, "p", 2, "Window", 7, v6, "webkitConvertPointFromPageToNode", 33, "WebKitPoint", 12);
          return 0;
        }
      }
    }
  }
  if (!v9 || *(_BYTE *)(v9 + 56))
  {
    LOBYTE(v27[0]) = 14;
    v27[1] = 0;
    v28 = 1;
    v30[0] = 14;
    v31 = 0;
    if (*((_QWORD *)v8 + 2))
    {
      v24 = 0;
    }
    else
    {
      WebCore::propagateExceptionSlowPath((JSC *)this, &v29, v30);
      v24 = v31;
    }
    v31 = 0;
    if (v24)
    {
      if (*(_DWORD *)v24 == 2)
        WTF::StringImpl::destroy(v24, v12);
      else
        *(_DWORD *)v24 -= 2;
    }
    v20 = 0;
    v23 = 1;
  }
  else
  {
    WebCore::LocalDOMWindow::webkitConvertPointFromPageToNode(v9, v12, v13, v27);
    v28 = 0;
    v21 = (WTF *)v27[0];
    v27[0] = 0;
    if (v21)
    {
      v20 = WebCore::wrap<WebCore::WebKitPoint>((uint64_t)this, v7, v21);
      if (*(_DWORD *)v21 == 1)
      {
        WTF::fastFree(v21, v22);
        v23 = 0;
      }
      else
      {
        v23 = 0;
        --*(_DWORD *)v21;
      }
    }
    else
    {
      v23 = 0;
      v20 = 2;
    }
  }
  ((void (*)(unsigned __int8 *, uint64_t *))off_1E3264D58[v23])(v30, v27);
  return v20;
}

unint64_t WebCore::jsDOMWindowInstanceFunction_webkitConvertPointFromNodeToPage(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  uint64_t v6;
  uint64_t v7;
  JSC::VM *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  char **v17;
  BOOL v18;
  unint64_t v20;
  WTF *v21;
  void *v22;
  uint64_t v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v26;
  uint64_t v27[2];
  int v28;
  JSC::VM *v29;
  unsigned __int8 v30[8];
  WTF::StringImpl *v31;

  v26 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "Window", "webkitConvertPointFromNodeToPage");
  v7 = (uint64_t)v5;
  v8 = this[7];
  v29 = v8;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  v9 = *(_QWORD *)(v7 + 3408);
  v10 = *((int *)a2 + 8);
  if ((_DWORD)v10 == 1)
  {
    v12 = 0;
    v13 = 0;
  }
  else
  {
    v11 = *((_QWORD *)a2 + 6);
    if ((v11 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v12 = 0;
    }
    else
    {
      v27[0] = (uint64_t)this[7];
      if ((v11 & 0xFFFE000000000002) != 0
        || *(unsigned __int8 *)(v11 + 5) < 0xF0u
        || (v12 = *(WTF::StringImpl **)(v11 + 24)) == 0)
      {
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v27, 0, "node", 5, "Window", 7, v6, "webkitConvertPointFromNodeToPage", 33, "Node", 5);
        return 0;
      }
    }
    if ((unint64_t)(v10 - 3) > 0xFFFFFFFFFFFFFFFDLL)
    {
      v13 = 0;
    }
    else
    {
      v14 = *((_QWORD *)a2 + 7);
      if ((v14 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v13 = 0;
      }
      else
      {
        v27[0] = (uint64_t)this[7];
        if ((v14 & 0xFFFE000000000002) != 0)
          goto LABEL_24;
        v15 = *(unsigned int *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C);
        v16 = *(_DWORD *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C) != 0;
        v17 = (char **)(16 * v15);
        if ((_DWORD)v15)
          v18 = v17 == &WebCore::JSWebKitPoint::s_info;
        else
          v18 = 1;
        if (!v18)
        {
          do
          {
            v17 = (char **)v17[2];
            v16 = v17 != 0;
          }
          while (v17 != &WebCore::JSWebKitPoint::s_info && v17 != 0);
        }
        if (!v16 || (v13 = *(_QWORD *)(v14 + 24)) == 0)
        {
LABEL_24:
          WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v27, 1, "p", 2, "Window", 7, v6, "webkitConvertPointFromNodeToPage", 33, "WebKitPoint", 12);
          return 0;
        }
      }
    }
  }
  if (!v9 || *(_BYTE *)(v9 + 56))
  {
    LOBYTE(v27[0]) = 14;
    v27[1] = 0;
    v28 = 1;
    v30[0] = 14;
    v31 = 0;
    if (*((_QWORD *)v8 + 2))
    {
      v24 = 0;
    }
    else
    {
      WebCore::propagateExceptionSlowPath((JSC *)this, &v29, v30);
      v24 = v31;
    }
    v31 = 0;
    if (v24)
    {
      if (*(_DWORD *)v24 == 2)
        WTF::StringImpl::destroy(v24, v12);
      else
        *(_DWORD *)v24 -= 2;
    }
    v20 = 0;
    v23 = 1;
  }
  else
  {
    WebCore::LocalDOMWindow::webkitConvertPointFromNodeToPage(v9, v12, v13, v27);
    v28 = 0;
    v21 = (WTF *)v27[0];
    v27[0] = 0;
    if (v21)
    {
      v20 = WebCore::wrap<WebCore::WebKitPoint>((uint64_t)this, v7, v21);
      if (*(_DWORD *)v21 == 1)
      {
        WTF::fastFree(v21, v22);
        v23 = 0;
      }
      else
      {
        v23 = 0;
        --*(_DWORD *)v21;
      }
    }
    else
    {
      v23 = 0;
      v20 = 2;
    }
  }
  ((void (*)(unsigned __int8 *, uint64_t *))off_1E3264D58[v23])(v30, v27);
  return v20;
}

unint64_t WebCore::jsDOMWindowInstanceFunction_requestAnimationFrame(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  JSC::JSGlobalObject *v6;
  uint64_t v7;
  WTF::StringImpl **v8;
  JSC::VM *v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  unsigned int v12;
  WebCore::JSRequestAnimationFrameCallback *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  WebCore::JSRequestAnimationFrameCallback *v20;
  uint64_t v21;
  JSValue v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  WebCore::JSRequestAnimationFrameCallback *v28;
  uint64_t v29;
  int v30;
  JSC::VM *v31;
  _QWORD v32[2];
  int v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;

  v27 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v27, "Window", "requestAnimationFrame");
  v8 = v5;
  v9 = this[7];
  v31 = v9;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v24.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, v6);
    return JSC::VM::throwException(v9, (JSC::JSGlobalObject *)this, v24);
  }
  v10 = v8[426];
  v11 = *((_QWORD *)a2 + 6);
  v34 = this[7];
  if ((v11 & 0xFFFE000000000002) == 0)
  {
    v12 = *(unsigned __int8 *)(v11 + 5);
    if (v12 >= 0x17)
    {
      if ((v12 & 0xFE) == 0x1A
        || (*(_BYTE *)(v11 + 6) & 4) != 0
        && ((*(void (**)(_QWORD *__return_ptr, unint64_t))(16
                                                                           * *(unsigned int *)(16
                                                                                             * (*(_DWORD *)v11 & 0xFFFFFFFE)
                                                                                             + 0x4C)
                                                                           + 0x38))(v32, v11), LOBYTE(v32[0])))
      {
        v13 = (WebCore::JSRequestAnimationFrameCallback *)WTF::fastMalloc((WTF *)0x28);
        v30 = 0;
        v28 = WebCore::JSRequestAnimationFrameCallback::JSRequestAnimationFrameCallback(v13, v11, (WebCore::JSDOMGlobalObject *)v8);
        v29 = 0;
        if (!v10 || *((_BYTE *)v10 + 56))
        {
          LOBYTE(v32[0]) = 14;
          v33 = 1;
          LOBYTE(v34) = 14;
          v32[1] = 0;
          v35 = 0;
          if (!*((_QWORD *)v9 + 2))
          {
            WebCore::propagateExceptionSlowPath((JSC *)this, &v31, (unsigned __int8 *)&v34);
            v26 = v35;
            v35 = 0;
            if (v26)
            {
              if (*(_DWORD *)v26 == 2)
                WTF::StringImpl::destroy(v26, v25);
              else
                *(_DWORD *)v26 -= 2;
            }
          }
          v19 = 0;
          v18 = 1;
          goto LABEL_16;
        }
        v14 = *((_QWORD *)v10 + 9);
        if (v14 && (v15 = *(_QWORD *)(v14 + 8)) != 0)
        {
          if (*(_BYTE *)(v15 + 178))
          {
            __break(0xC471u);
            JUMPOUT(0x194A7DF30);
          }
          *(_DWORD *)(v15 - 264) += 2;
          v17 = WebCore::Document::requestAnimationFrame(v15 - 288, (uint64_t *)&v28);
          if (*(_DWORD *)(v15 - 264) == 2)
          {
            if ((*(_WORD *)(v15 - 258) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)(v15 - 288), v16);
          }
          else
          {
            *(_DWORD *)(v15 - 264) -= 2;
          }
          LODWORD(v32[0]) = v17;
          v33 = 0;
          if ((v17 & 0x80000000) != 0)
          {
            v18 = 0;
            v19 = COERCE__INT64((double)v17) + 0x2000000000000;
            goto LABEL_16;
          }
        }
        else
        {
          v17 = 0;
          LODWORD(v32[0]) = 0;
          v33 = 0;
        }
        v18 = 0;
        v19 = v17 | 0xFFFE000000000000;
LABEL_16:
        ((void (*)(WTF::StringImpl **, _QWORD *))off_1E3264D38[v18])(&v34, v32);
        v33 = -1;
        v20 = v28;
        v28 = 0;
        if (v20)
        {
          if (*((_DWORD *)v20 + 4) == 1)
            (*(void (**)(WebCore::JSRequestAnimationFrameCallback *))(*(_QWORD *)v20 + 16))(v20);
          else
            --*((_DWORD *)v20 + 4);
        }
        v21 = 0;
        goto LABEL_18;
      }
    }
  }
  WebCore::throwArgumentMustBeFunctionError((uint64_t)this, (uint64_t)&v34, 0, "callback", 9, "Window", 7, v7, "requestAnimationFrame", 22);
  v19 = 0;
  v21 = 1;
  v30 = 1;
LABEL_18:
  ((void (*)(_QWORD *, uint64_t *))off_1E3264D48[v21])(v32, &v29);
  return v19;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_getComputedStyle(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  JSC::JSGlobalObject *v6;
  uint64_t v7;
  uint64_t v8;
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  WebCore::Element *v13;
  uint64_t v14;
  int v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  JSValue v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  uint64_t v28;
  int v29;
  WTF::StringImpl *v30;
  int v31;
  JSC::VM *v32;
  uint64_t v33;
  WTF::StringImpl *v34;

  v25 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "Window", "getComputedStyle");
  v8 = (uint64_t)v5;
  v9 = this[7];
  v32 = v9;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  v10 = *((int *)a2 + 8);
  if ((_DWORD)v10 == 1)
  {
    v23.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, v6);
    return JSC::VM::throwException(v9, (JSC::JSGlobalObject *)this, v23);
  }
  v11 = *(_QWORD *)(v8 + 3408);
  v12 = *((_QWORD *)a2 + 6);
  v27 = this[7];
  if ((v12 & 0xFFFE000000000002) != 0
    || *(unsigned __int8 *)(v12 + 5) != 241
    || (v13 = *(WebCore::Element **)(v12 + 24)) == 0)
  {
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v27, 0, "element", 8, "Window", 7, v7, "getComputedStyle", 17, "Element", 8);
    return 0;
  }
  if ((unint64_t)(v10 - 3) >= 0xFFFFFFFFFFFFFFFELL
    || (v14 = *((_QWORD *)a2 + 7), v14 == 10)
    || (v14 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v16 = 0;
    v31 = 0;
LABEL_16:
    v30 = 0;
    v26 = v16;
    if (!v11 || *(_BYTE *)(v11 + 56))
    {
      LOBYTE(v27) = 14;
      v28 = 0;
      v29 = 1;
      LOBYTE(v33) = 14;
      v34 = 0;
      if (*((_QWORD *)v9 + 2))
      {
        v24 = 0;
      }
      else
      {
        WebCore::propagateExceptionSlowPath((JSC *)this, &v32, (unsigned __int8 *)&v33);
        v24 = v34;
      }
      v34 = 0;
      if (v24)
      {
        if (*(_DWORD *)v24 == 2)
          WTF::StringImpl::destroy(v24, v6);
        else
          *(_DWORD *)v24 -= 2;
      }
      v18 = 0;
    }
    else
    {
      WebCore::LocalDOMWindow::getComputedStyle(v13, (unsigned int **)&v26, (uint64_t *)&v27);
      v29 = 0;
      v17 = (uint64_t)v27;
      v27 = 0;
      v33 = v17;
      v18 = WebCore::toJSNewlyCreated((uint64_t)this, v8, &v33);
      v19 = v33;
      v33 = 0;
      if (v19)
        (*(void (**)(uint64_t))(*(_QWORD *)v19 + 24))(v19);
    }
    if (v29 != -1)
      ((void (*)(uint64_t *, WTF::StringImpl **))off_1E3264D68[v29])(&v33, &v27);
    v29 = -1;
    v20 = v26;
    v26 = 0;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
        WTF::StringImpl::destroy(v20, v6);
      else
        *(_DWORD *)v20 -= 2;
    }
    v15 = v31;
    goto LABEL_26;
  }
  WebCore::valueToUSVString((JSC::JSGlobalObject *)this, v14, (uint64_t)&v27);
  LOBYTE(v30) = 0;
  v31 = -1;
  v15 = v28;
  if ((_DWORD)v28 == -1)
    return 0;
  ((void (*)(uint64_t *, WTF::StringImpl **, WTF::StringImpl **))off_1E3264D18[v28])(&v33, &v30, &v27);
  v31 = v15;
  if ((_DWORD)v28 != -1)
  {
    ((void (*)(uint64_t *, WTF::StringImpl **))off_1E325A258[v28])(&v33, &v27);
    v15 = v31;
  }
  if (!v15)
  {
    v16 = v30;
    goto LABEL_16;
  }
  v18 = 0;
LABEL_26:
  if (v15 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A258[v15])(&v27, &v30);
  return v18;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_moveTo(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  JSC::JSGlobalObject *v6;
  WTF::StringImpl **v7;
  JSC::VM *v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  JSC::VM *v11;
  int v12;
  unint64_t v13;
  JSC::VM *v14;
  int v15;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unint64_t v22;
  int v23;
  int v24;
  unint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unint64_t v28;
  int v29;
  int v30;
  JSValue v31;
  JSC::VM *v32;
  unint64_t v33;
  unint64_t v34;
  WTF::StringImpl *v35;
  JSC::VM *v36;
  unint64_t v37;
  WTF::StringImpl *v38;

  v35 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v35, "Window", "moveTo");
  v7 = v5;
  v8 = this[7];
  v36 = v8;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v31.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, v6);
    return JSC::VM::throwException(v8, (JSC::JSGlobalObject *)this, v31);
  }
  else
  {
    v9 = v7[426];
    v10 = *((_QWORD *)a2 + 6);
    v37 = v10;
    v11 = this[7];
    if (v10 < 0xFFFE000000000000)
    {
      v19 = v10 - 0x2000000000000;
      if (v10 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        v32 = this[7];
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v37, (JSC::JSGlobalObject *)this);
        v11 = v32;
        v19 = v33;
      }
      v20 = (v19 >> 52) & 0x7FF;
      v21 = v20 - 1023;
      v22 = v19 >> (51 - (v19 >> 52));
      if (v20 > 0x433)
        LODWORD(v22) = v19 << ((v19 >> 52) - 51);
      if (v20 >= 0x41F)
        v23 = v22;
      else
        v23 = (((1 << ((v19 >> 52) + 1)) - 1) & v22) + (1 << ((v19 >> 52) + 1));
      if ((v19 & 0x8000000000000000) == 0)
        v24 = v23;
      else
        v24 = -v23;
      if (v21 <= 0x53)
        v12 = v24;
      else
        v12 = 0;
    }
    else
    {
      v12 = v10;
    }
    if (*((_DWORD *)v11 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v11))
    {
      return 0;
    }
    else
    {
      v13 = *((_QWORD *)a2 + 7);
      v37 = v13;
      v14 = this[7];
      if (v13 < 0xFFFE000000000000)
      {
        v25 = v13 - 0x2000000000000;
        if (v13 - 0x2000000000000 >= 0xFFFC000000000000)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v37, (JSC::JSGlobalObject *)this);
          v25 = v34;
        }
        v26 = (v25 >> 52) & 0x7FF;
        v27 = v26 - 1023;
        v28 = v25 >> (51 - (v25 >> 52));
        if (v26 > 0x433)
          LODWORD(v28) = v25 << ((v25 >> 52) - 51);
        if (v26 >= 0x41F)
          v29 = v28;
        else
          v29 = (((1 << ((v25 >> 52) + 1)) - 1) & v28) + (1 << ((v25 >> 52) + 1));
        if ((v25 & 0x8000000000000000) == 0)
          v30 = v29;
        else
          v30 = -v29;
        if (v27 <= 0x53)
          v15 = v30;
        else
          v15 = 0;
      }
      else
      {
        v15 = v13;
      }
      if (!*((_DWORD *)v14 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v14))
      {
        if (v9 && !*((_BYTE *)v9 + 56))
        {
          WebCore::LocalDOMWindow::moveTo((WebCore::LocalDOMWindow **)v9, v12, v15);
          return 10;
        }
        LOBYTE(v37) = 14;
        v38 = 0;
        if (!*((_QWORD *)v8 + 2))
        {
          WebCore::propagateExceptionSlowPath((JSC *)this, &v36, (unsigned __int8 *)&v37);
          v18 = v38;
          v38 = 0;
          if (v18)
          {
            if (*(_DWORD *)v18 == 2)
              WTF::StringImpl::destroy(v18, v17);
            else
              *(_DWORD *)v18 -= 2;
          }
        }
      }
      return 0;
    }
  }
}

uint64_t WebCore::jsDOMWindowInstanceFunction_moveBy(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  JSC::JSGlobalObject *v6;
  WTF::StringImpl **v7;
  JSC::VM *v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  JSC::VM *v11;
  int v12;
  unint64_t v13;
  JSC::VM *v14;
  int v15;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unint64_t v22;
  int v23;
  int v24;
  unint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unint64_t v28;
  int v29;
  int v30;
  JSValue v31;
  JSC::VM *v32;
  unint64_t v33;
  unint64_t v34;
  WTF::StringImpl *v35;
  JSC::VM *v36;
  unint64_t v37;
  WTF::StringImpl *v38;

  v35 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v35, "Window", "moveBy");
  v7 = v5;
  v8 = this[7];
  v36 = v8;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v31.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, v6);
    return JSC::VM::throwException(v8, (JSC::JSGlobalObject *)this, v31);
  }
  else
  {
    v9 = v7[426];
    v10 = *((_QWORD *)a2 + 6);
    v37 = v10;
    v11 = this[7];
    if (v10 < 0xFFFE000000000000)
    {
      v19 = v10 - 0x2000000000000;
      if (v10 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        v32 = this[7];
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v37, (JSC::JSGlobalObject *)this);
        v11 = v32;
        v19 = v33;
      }
      v20 = (v19 >> 52) & 0x7FF;
      v21 = v20 - 1023;
      v22 = v19 >> (51 - (v19 >> 52));
      if (v20 > 0x433)
        LODWORD(v22) = v19 << ((v19 >> 52) - 51);
      if (v20 >= 0x41F)
        v23 = v22;
      else
        v23 = (((1 << ((v19 >> 52) + 1)) - 1) & v22) + (1 << ((v19 >> 52) + 1));
      if ((v19 & 0x8000000000000000) == 0)
        v24 = v23;
      else
        v24 = -v23;
      if (v21 <= 0x53)
        v12 = v24;
      else
        v12 = 0;
    }
    else
    {
      v12 = v10;
    }
    if (*((_DWORD *)v11 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v11))
    {
      return 0;
    }
    else
    {
      v13 = *((_QWORD *)a2 + 7);
      v37 = v13;
      v14 = this[7];
      if (v13 < 0xFFFE000000000000)
      {
        v25 = v13 - 0x2000000000000;
        if (v13 - 0x2000000000000 >= 0xFFFC000000000000)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v37, (JSC::JSGlobalObject *)this);
          v25 = v34;
        }
        v26 = (v25 >> 52) & 0x7FF;
        v27 = v26 - 1023;
        v28 = v25 >> (51 - (v25 >> 52));
        if (v26 > 0x433)
          LODWORD(v28) = v25 << ((v25 >> 52) - 51);
        if (v26 >= 0x41F)
          v29 = v28;
        else
          v29 = (((1 << ((v25 >> 52) + 1)) - 1) & v28) + (1 << ((v25 >> 52) + 1));
        if ((v25 & 0x8000000000000000) == 0)
          v30 = v29;
        else
          v30 = -v29;
        if (v27 <= 0x53)
          v15 = v30;
        else
          v15 = 0;
      }
      else
      {
        v15 = v13;
      }
      if (!*((_DWORD *)v14 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v14))
      {
        if (v9 && !*((_BYTE *)v9 + 56))
        {
          WebCore::LocalDOMWindow::moveBy((WebCore::LocalDOMWindow **)v9, v12, v15);
          return 10;
        }
        LOBYTE(v37) = 14;
        v38 = 0;
        if (!*((_QWORD *)v8 + 2))
        {
          WebCore::propagateExceptionSlowPath((JSC *)this, &v36, (unsigned __int8 *)&v37);
          v18 = v38;
          v38 = 0;
          if (v18)
          {
            if (*(_DWORD *)v18 == 2)
              WTF::StringImpl::destroy(v18, v17);
            else
              *(_DWORD *)v18 -= 2;
          }
        }
      }
      return 0;
    }
  }
}

uint64_t WebCore::jsDOMWindowInstanceFunction_resizeTo(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  JSC::JSGlobalObject *v6;
  WTF::StringImpl **v7;
  JSC::VM *v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  JSC::VM *v11;
  int v12;
  unint64_t v13;
  JSC::VM *v14;
  int v15;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unint64_t v22;
  int v23;
  int v24;
  unint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unint64_t v28;
  int v29;
  int v30;
  JSValue v31;
  JSC::VM *v32;
  unint64_t v33;
  unint64_t v34;
  WTF::StringImpl *v35;
  JSC::VM *v36;
  unint64_t v37;
  WTF::StringImpl *v38;

  v35 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v35, "Window", "resizeTo");
  v7 = v5;
  v8 = this[7];
  v36 = v8;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v31.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, v6);
    return JSC::VM::throwException(v8, (JSC::JSGlobalObject *)this, v31);
  }
  else
  {
    v9 = v7[426];
    v10 = *((_QWORD *)a2 + 6);
    v37 = v10;
    v11 = this[7];
    if (v10 < 0xFFFE000000000000)
    {
      v19 = v10 - 0x2000000000000;
      if (v10 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        v32 = this[7];
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v37, (JSC::JSGlobalObject *)this);
        v11 = v32;
        v19 = v33;
      }
      v20 = (v19 >> 52) & 0x7FF;
      v21 = v20 - 1023;
      v22 = v19 >> (51 - (v19 >> 52));
      if (v20 > 0x433)
        LODWORD(v22) = v19 << ((v19 >> 52) - 51);
      if (v20 >= 0x41F)
        v23 = v22;
      else
        v23 = (((1 << ((v19 >> 52) + 1)) - 1) & v22) + (1 << ((v19 >> 52) + 1));
      if ((v19 & 0x8000000000000000) == 0)
        v24 = v23;
      else
        v24 = -v23;
      if (v21 <= 0x53)
        v12 = v24;
      else
        v12 = 0;
    }
    else
    {
      v12 = v10;
    }
    if (*((_DWORD *)v11 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v11))
    {
      return 0;
    }
    else
    {
      v13 = *((_QWORD *)a2 + 7);
      v37 = v13;
      v14 = this[7];
      if (v13 < 0xFFFE000000000000)
      {
        v25 = v13 - 0x2000000000000;
        if (v13 - 0x2000000000000 >= 0xFFFC000000000000)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v37, (JSC::JSGlobalObject *)this);
          v25 = v34;
        }
        v26 = (v25 >> 52) & 0x7FF;
        v27 = v26 - 1023;
        v28 = v25 >> (51 - (v25 >> 52));
        if (v26 > 0x433)
          LODWORD(v28) = v25 << ((v25 >> 52) - 51);
        if (v26 >= 0x41F)
          v29 = v28;
        else
          v29 = (((1 << ((v25 >> 52) + 1)) - 1) & v28) + (1 << ((v25 >> 52) + 1));
        if ((v25 & 0x8000000000000000) == 0)
          v30 = v29;
        else
          v30 = -v29;
        if (v27 <= 0x53)
          v15 = v30;
        else
          v15 = 0;
      }
      else
      {
        v15 = v13;
      }
      if (!*((_DWORD *)v14 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v14))
      {
        if (v9 && !*((_BYTE *)v9 + 56))
        {
          WebCore::LocalDOMWindow::resizeTo((WebCore::LocalDOMWindow **)v9, v12, v15);
          return 10;
        }
        LOBYTE(v37) = 14;
        v38 = 0;
        if (!*((_QWORD *)v8 + 2))
        {
          WebCore::propagateExceptionSlowPath((JSC *)this, &v36, (unsigned __int8 *)&v37);
          v18 = v38;
          v38 = 0;
          if (v18)
          {
            if (*(_DWORD *)v18 == 2)
              WTF::StringImpl::destroy(v18, v17);
            else
              *(_DWORD *)v18 -= 2;
          }
        }
      }
      return 0;
    }
  }
}

uint64_t WebCore::jsDOMWindowInstanceFunction_resizeBy(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  JSC::JSGlobalObject *v6;
  WTF::StringImpl **v7;
  JSC::VM *v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  JSC::VM *v11;
  int v12;
  unint64_t v13;
  JSC::VM *v14;
  int v15;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unint64_t v22;
  int v23;
  int v24;
  unint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unint64_t v28;
  int v29;
  int v30;
  JSValue v31;
  JSC::VM *v32;
  unint64_t v33;
  unint64_t v34;
  WTF::StringImpl *v35;
  JSC::VM *v36;
  unint64_t v37;
  WTF::StringImpl *v38;

  v35 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v35, "Window", "resizeBy");
  v7 = v5;
  v8 = this[7];
  v36 = v8;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v31.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, v6);
    return JSC::VM::throwException(v8, (JSC::JSGlobalObject *)this, v31);
  }
  else
  {
    v9 = v7[426];
    v10 = *((_QWORD *)a2 + 6);
    v37 = v10;
    v11 = this[7];
    if (v10 < 0xFFFE000000000000)
    {
      v19 = v10 - 0x2000000000000;
      if (v10 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        v32 = this[7];
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v37, (JSC::JSGlobalObject *)this);
        v11 = v32;
        v19 = v33;
      }
      v20 = (v19 >> 52) & 0x7FF;
      v21 = v20 - 1023;
      v22 = v19 >> (51 - (v19 >> 52));
      if (v20 > 0x433)
        LODWORD(v22) = v19 << ((v19 >> 52) - 51);
      if (v20 >= 0x41F)
        v23 = v22;
      else
        v23 = (((1 << ((v19 >> 52) + 1)) - 1) & v22) + (1 << ((v19 >> 52) + 1));
      if ((v19 & 0x8000000000000000) == 0)
        v24 = v23;
      else
        v24 = -v23;
      if (v21 <= 0x53)
        v12 = v24;
      else
        v12 = 0;
    }
    else
    {
      v12 = v10;
    }
    if (*((_DWORD *)v11 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v11))
    {
      return 0;
    }
    else
    {
      v13 = *((_QWORD *)a2 + 7);
      v37 = v13;
      v14 = this[7];
      if (v13 < 0xFFFE000000000000)
      {
        v25 = v13 - 0x2000000000000;
        if (v13 - 0x2000000000000 >= 0xFFFC000000000000)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v37, (JSC::JSGlobalObject *)this);
          v25 = v34;
        }
        v26 = (v25 >> 52) & 0x7FF;
        v27 = v26 - 1023;
        v28 = v25 >> (51 - (v25 >> 52));
        if (v26 > 0x433)
          LODWORD(v28) = v25 << ((v25 >> 52) - 51);
        if (v26 >= 0x41F)
          v29 = v28;
        else
          v29 = (((1 << ((v25 >> 52) + 1)) - 1) & v28) + (1 << ((v25 >> 52) + 1));
        if ((v25 & 0x8000000000000000) == 0)
          v30 = v29;
        else
          v30 = -v29;
        if (v27 <= 0x53)
          v15 = v30;
        else
          v15 = 0;
      }
      else
      {
        v15 = v13;
      }
      if (!*((_DWORD *)v14 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v14))
      {
        if (v9 && !*((_BYTE *)v9 + 56))
        {
          WebCore::LocalDOMWindow::resizeBy((WebCore::LocalDOMWindow **)v9, v12, v15);
          return 10;
        }
        LOBYTE(v37) = 14;
        v38 = 0;
        if (!*((_QWORD *)v8 + 2))
        {
          WebCore::propagateExceptionSlowPath((JSC *)this, &v36, (unsigned __int8 *)&v37);
          v18 = v38;
          v38 = 0;
          if (v18)
          {
            if (*(_DWORD *)v18 == 2)
              WTF::StringImpl::destroy(v18, v17);
            else
              *(_DWORD *)v18 -= 2;
          }
        }
      }
      return 0;
    }
  }
}

uint64_t WebCore::jsDOMWindowInstanceFunction_scroll(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  WebCore::JSDOMWindow *v6;
  WTF::StringImpl **v7;
  unint64_t v8;
  WTF::StringImpl *v10;
  uint64_t v11;
  unint64_t v12;
  double v13;
  unint64_t v14;
  JSC::VM *v15;
  double v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  int hasExceptionsAfterHandlingTraps;
  double v20;
  double v21;
  _QWORD v22[2];
  JSC::VM *v23;
  unint64_t v24;
  WTF::StringImpl *v25;
  char v26;
  double v27;
  char v28;

  v22[0] = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v22, "Window", "scroll");
  v7 = v5;
  v22[1] = this[7];
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  v8 = *((int *)a2 + 8) - 1;
  if (v8 >= 2)
    v8 = 2;
  if (v8 != 2)
    return WebCore::jsDOMWindowInstanceFunction_scroll1Body((WebCore *)this, a2, v7[426], v6);
  v10 = this[7];
  v11 = (uint64_t)v7[426];
  v12 = *((_QWORD *)a2 + 6);
  v23 = v10;
  v24 = v12;
  if (v12 >= 0xFFFE000000000000)
  {
    v13 = (double)(int)v12;
  }
  else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v24, (JSC::JSGlobalObject *)this);
    v13 = v20;
  }
  else
  {
    *(_QWORD *)&v13 = v12 - 0x2000000000000;
  }
  if (*((_DWORD *)v10 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v10))
    return 0;
  v14 = *((_QWORD *)a2 + 7);
  v24 = v14;
  v15 = this[7];
  if (v14 >= 0xFFFE000000000000)
  {
    v16 = (double)(int)v14;
  }
  else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v24, (JSC::JSGlobalObject *)this);
  }
  else
  {
    *(_QWORD *)&v16 = v14 - 0x2000000000000;
  }
  if (!*((_DWORD *)v15 + 20)
    || (v21 = v16,
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v15),
        v16 = v21,
        !hasExceptionsAfterHandlingTraps))
  {
    if (v11 && !*(_BYTE *)(v11 + 56))
    {
      LOWORD(v24) = 256;
      v25 = *(WTF::StringImpl **)&v13;
      v26 = 1;
      v27 = v16;
      v28 = 1;
      WebCore::LocalDOMWindow::scrollTo(v11, (double *)&v24, 1, 1, 0, 0);
      return 10;
    }
    LOBYTE(v24) = 14;
    v25 = 0;
    if (!*((_QWORD *)v10 + 2))
    {
      WebCore::propagateExceptionSlowPath((JSC *)this, &v23, (unsigned __int8 *)&v24);
      v18 = v25;
      v25 = 0;
      if (v18)
      {
        if (*(_DWORD *)v18 == 2)
          WTF::StringImpl::destroy(v18, v17);
        else
          *(_DWORD *)v18 -= 2;
      }
    }
  }
  return 0;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_scrollTo(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  WebCore::JSDOMWindow *v6;
  WTF::StringImpl **v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  JSC::VM *v11;
  uint64_t v12;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  _QWORD v16[2];
  JSC::VM *v17;
  WTF::StringImpl *v18[2];
  __int128 v19;
  uint64_t v20;
  _BYTE v21[8];
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  int v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v16[0] = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v16, "Window", "scrollTo");
  v7 = v5;
  v16[1] = this[7];
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  v8 = *((int *)a2 + 8);
  v9 = v8 - 1;
  if ((unint64_t)(v8 - 1) >= 2)
    v9 = 2;
  if (v9 == 1)
  {
    v10 = (uint64_t)v7[426];
    v11 = this[7];
    v17 = v11;
    if ((_DWORD)v8 == 1)
      v12 = 10;
    else
      v12 = *((_QWORD *)a2 + 6);
    WebCore::convertDictionary<WebCore::ScrollToOptions>((JSC::JSCell *)v12, (uint64_t)this, (uint64_t)v21);
    if (!v25)
    {
      *(_OWORD *)v18 = v22;
      v19 = v23;
      v20 = v24;
      if (v10 && !*(_BYTE *)(v10 + 56))
      {
        WebCore::LocalDOMWindow::scrollTo(v10, (double *)v18, 1, 1, 0, 0);
        return 10;
      }
      LOBYTE(v18[0]) = 14;
      v18[1] = 0;
      if (!*((_QWORD *)v11 + 2))
      {
        WebCore::propagateExceptionSlowPath((JSC *)this, &v17, (unsigned __int8 *)v18);
        v15 = v18[1];
        v18[1] = 0;
        if (v15)
        {
          if (*(_DWORD *)v15 == 2)
            WTF::StringImpl::destroy(v15, v14);
          else
            *(_DWORD *)v15 -= 2;
        }
      }
    }
    return 0;
  }
  else if (v9)
  {
    if (v9 == 2)
      return WebCore::jsDOMWindowInstanceFunction_scrollTo2Body((WebCore *)this, a2, v7[426], v6);
    else
      return JSC::throwTypeError();
  }
  else
  {
    return WebCore::jsDOMWindowInstanceFunction_scrollTo1Body((WebCore *)this, a2, v7[426], v6);
  }
}

uint64_t WebCore::jsDOMWindowInstanceFunction_scrollBy(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  WebCore::JSDOMWindow *v6;
  WTF::StringImpl **v7;
  unint64_t v8;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  unint64_t v12;
  double v13;
  unint64_t v14;
  JSC::VM *v15;
  double v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  int hasExceptionsAfterHandlingTraps;
  double v20;
  double v21;
  _QWORD v22[2];
  JSC::VM *v23;
  __int128 v24;
  char v25;
  double v26;
  char v27;

  v22[0] = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v22, "Window", "scrollBy");
  v7 = v5;
  v22[1] = this[7];
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  v8 = *((int *)a2 + 8) - 1;
  if (v8 >= 2)
    v8 = 2;
  if (v8 != 2)
    return WebCore::jsDOMWindowInstanceFunction_scrollBy1Body((WebCore *)this, a2, v7[426], v6);
  v10 = this[7];
  v11 = v7[426];
  v12 = *((_QWORD *)a2 + 6);
  v23 = v10;
  *(_QWORD *)&v24 = v12;
  if (v12 >= 0xFFFE000000000000)
  {
    v13 = (double)(int)v12;
  }
  else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v24, (JSC::JSGlobalObject *)this);
    v13 = v20;
  }
  else
  {
    *(_QWORD *)&v13 = v12 - 0x2000000000000;
  }
  if (*((_DWORD *)v10 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v10))
    return 0;
  v14 = *((_QWORD *)a2 + 7);
  *(_QWORD *)&v24 = v14;
  v15 = this[7];
  if (v14 >= 0xFFFE000000000000)
  {
    v16 = (double)(int)v14;
  }
  else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v24, (JSC::JSGlobalObject *)this);
  }
  else
  {
    *(_QWORD *)&v16 = v14 - 0x2000000000000;
  }
  if (!*((_DWORD *)v15 + 20)
    || (v21 = v16,
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v15),
        v16 = v21,
        !hasExceptionsAfterHandlingTraps))
  {
    if (v11 && !*((_BYTE *)v11 + 56))
    {
      LOWORD(v24) = 256;
      *((double *)&v24 + 1) = v13;
      v25 = 1;
      v26 = v16;
      v27 = 1;
      WebCore::LocalDOMWindow::scrollBy(v11, &v24);
      return 10;
    }
    LOBYTE(v24) = 14;
    *((_QWORD *)&v24 + 1) = 0;
    if (!*((_QWORD *)v10 + 2))
    {
      WebCore::propagateExceptionSlowPath((JSC *)this, &v23, (unsigned __int8 *)&v24);
      v18 = (WTF::StringImpl *)*((_QWORD *)&v24 + 1);
      *((_QWORD *)&v24 + 1) = 0;
      if (v18)
      {
        if (*(_DWORD *)v18 == 2)
          WTF::StringImpl::destroy(v18, v17);
        else
          *(_DWORD *)v18 -= 2;
      }
    }
  }
  return 0;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_getSelection(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v4;
  uint64_t v5;
  JSC::VM *v6;
  WebCore::LocalDOMWindow *v7;
  BOOL v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  uint64_t v12;
  WTF *Selection;
  WTF::StringImpl *v15;
  _QWORD v16[2];
  int v17;
  JSC::VM *v18;
  unsigned __int8 v19[8];
  WTF::StringImpl *v20;

  v15 = this[7];
  v4 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v4)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v15, "Window", "getSelection");
  v5 = (uint64_t)v4;
  v6 = this[7];
  v18 = v6;
  if (v4 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v4[426], 2))
  {
    return 10;
  }
  v7 = *(WebCore::LocalDOMWindow **)(v5 + 3408);
  if (v7)
    v8 = *((_BYTE *)v7 + 56) == 0;
  else
    v8 = 0;
  if (v8)
  {
    Selection = (WTF *)WebCore::LocalDOMWindow::getSelection(v7);
    v16[0] = Selection;
    v17 = 0;
    if (Selection)
    {
      v11 = WebCore::wrap<WebCore::DOMSelection>(v5, Selection);
      v12 = 0;
    }
    else
    {
      v12 = 0;
      v11 = 2;
    }
  }
  else
  {
    LOBYTE(v16[0]) = 14;
    v17 = 1;
    v19[0] = 14;
    v16[1] = 0;
    v20 = 0;
    if (!*((_QWORD *)v6 + 2))
    {
      WebCore::propagateExceptionSlowPath((JSC *)this, &v18, v19);
      v10 = v20;
      v20 = 0;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, v9);
        else
          *(_DWORD *)v10 -= 2;
      }
    }
    v11 = 0;
    v12 = 1;
  }
  ((void (*)(unsigned __int8 *, _QWORD *))off_1E3264D88[v12])(v19, v16);
  return v11;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_reportError(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  JSC::JSGlobalObject *v6;
  WTF::StringImpl **v7;
  JSC::VM *v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  JSValue v18;
  WTF::StringImpl *v19;
  JSC::VM *v20;
  unsigned __int8 v21[8];
  WTF::StringImpl *v22;

  v19 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v19, "Window", "reportError");
  v7 = v5;
  v8 = this[7];
  v20 = v8;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, v6);
    return JSC::VM::throwException(v8, (JSC::JSGlobalObject *)this, v18);
  }
  else
  {
    v9 = v7[426];
    v10 = *((_QWORD *)a2 + 6);
    if (!v9 || *((_BYTE *)v9 + 56))
    {
      v21[0] = 14;
      v22 = 0;
      if (!*((_QWORD *)v8 + 2))
      {
        WebCore::propagateExceptionSlowPath((JSC *)this, &v20, v21);
        v17 = v22;
        v22 = 0;
        if (v17)
        {
          if (*(_DWORD *)v17 == 2)
            WTF::StringImpl::destroy(v17, v16);
          else
            *(_DWORD *)v17 -= 2;
        }
      }
      return 0;
    }
    else
    {
      v11 = *((_QWORD *)v7[7] + 14);
      if (!*(_BYTE *)(v11 + 6))
        goto LABEL_24;
      v12 = *(_QWORD *)(v11 + 8);
      v13 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
      if (!v13)
        v13 = WTF::Thread::initializeCurrentTLS(0);
      if (v12 == v13)
      {
        if ((v10 & 0xFFFE000000000002) != 0
          || (v14 = v10, MEMORY[0x1E0CBEE50] != 16 * *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C)))
        {
          v14 = JSC::Exception::create();
        }
        WebCore::reportException((JSC::JSGlobalObject *)v7, v14, 0, 0, 0);
        return 10;
      }
      else
      {
LABEL_24:
        result = 43;
        __break(0xC471u);
      }
    }
  }
  return result;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_atob(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  JSC::JSGlobalObject *v6;
  WTF::StringImpl **v7;
  JSC::VM *v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  JSC::VM *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  char v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  uint64_t v23;
  JSValue v26;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  _QWORD v30[2];
  int v31;
  uint64_t v32;
  int v33;
  JSC::VM *v34;
  WTF::StringImpl *v35;
  WTF::StringImpl *v36;

  v29 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v29, "Window", "atob");
  v7 = v5;
  v8 = this[7];
  v34 = v8;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v26.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, v6);
    return JSC::VM::throwException(v8, (JSC::JSGlobalObject *)this, v26);
  }
  v9 = v7[426];
  v10 = *((_QWORD *)a2 + 6);
  v30[0] = v10;
  v11 = this[7];
  if ((v10 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v10 + 5) == 2)
  {
    v12 = *(_QWORD *)(v10 + 8);
    if ((v12 & 1) != 0)
    {
      v12 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v10, (JSC::JSGlobalObject *)this);
      if (!v12)
        goto LABEL_9;
    }
    else if (!v12)
    {
LABEL_9:
      v35 = (WTF::StringImpl *)v12;
      goto LABEL_10;
    }
    *(_DWORD *)v12 += 2;
    goto LABEL_9;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v30, (JSC::JSGlobalObject *)this);
LABEL_10:
  if (*((_DWORD *)v11 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v11);
    v13 = v35;
    if (hasExceptionsAfterHandlingTraps)
    {
      v33 = 1;
      v35 = 0;
      if (v13)
      {
        if (*(_DWORD *)v13 == 2)
          WTF::StringImpl::destroy(v13, v28);
        else
          *(_DWORD *)v13 -= 2;
      }
      v17 = 0;
      v23 = 1;
      goto LABEL_32;
    }
  }
  else
  {
    v13 = v35;
  }
  v33 = 0;
  v32 = 0;
  if (!v9 || *((_BYTE *)v9 + 56))
  {
    v14 = 14;
    goto LABEL_18;
  }
  if (!v13)
  {
    v30[0] = 0;
    goto LABEL_24;
  }
  WTF::base64DecodeToString();
  if (!v35)
  {
    v14 = 3;
LABEL_18:
    LOBYTE(v30[0]) = v14;
    v31 = 1;
    LOBYTE(v35) = v14;
    v30[1] = 0;
    v36 = 0;
    if (!*((_QWORD *)v8 + 2))
    {
      WebCore::propagateExceptionSlowPath((JSC *)this, &v34, (unsigned __int8 *)&v35);
      v16 = v36;
      v36 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
    v17 = 0;
    v18 = 1;
    goto LABEL_28;
  }
  v30[0] = v35;
LABEL_24:
  v31 = 0;
  v19 = v30[0];
  v30[0] = 0;
  v35 = (WTF::StringImpl *)v19;
  v17 = WebCore::toJS<WebCore::IDLUSVString,WTF::String>((uint64_t)this, (uint64_t *)&v35);
  v21 = v35;
  v35 = 0;
  if (v21)
  {
    if (*(_DWORD *)v21 == 2)
      WTF::StringImpl::destroy(v21, v20);
    else
      *(_DWORD *)v21 -= 2;
  }
  v18 = 0;
LABEL_28:
  ((void (*)(WTF::StringImpl **, _QWORD *))off_1E325CDB8[v18])(&v35, v30);
  v31 = -1;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v22);
    else
      *(_DWORD *)v13 -= 2;
  }
  v23 = 0;
LABEL_32:
  ((void (*)(_QWORD *, uint64_t *))off_1E325A258[v23])(v30, &v32);
  return v17;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_btoa(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  JSC::JSGlobalObject *v6;
  WTF::StringImpl **v7;
  JSC::VM *v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  JSC::VM *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void *v15;
  WTF *v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned __int16 *v24;
  uint64_t v25;
  int v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  uint64_t v31;
  JSValue v34;
  WTF::StringImpl *v35;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  _QWORD v39[2];
  int v40;
  uint64_t v41;
  int v42;
  JSC::VM *v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  WTF *v46;

  v37 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v37, "Window", "btoa");
  v7 = v5;
  v8 = this[7];
  v43 = v8;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v34.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, v6);
    return JSC::VM::throwException(v8, (JSC::JSGlobalObject *)this, v34);
  }
  v9 = v7[426];
  v10 = *((_QWORD *)a2 + 6);
  v39[0] = v10;
  v11 = this[7];
  if ((v10 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v10 + 5) == 2)
  {
    v12 = *(_QWORD *)(v10 + 8);
    if ((v12 & 1) != 0)
    {
      v12 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v10, (JSC::JSGlobalObject *)this);
      if (!v12)
        goto LABEL_9;
    }
    else if (!v12)
    {
LABEL_9:
      v44 = (WTF::StringImpl *)v12;
      goto LABEL_10;
    }
    *(_DWORD *)v12 += 2;
    goto LABEL_9;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v39, (JSC::JSGlobalObject *)this);
LABEL_10:
  if (*((_DWORD *)v11 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v11);
    v13 = (uint64_t)v44;
    if (hasExceptionsAfterHandlingTraps)
    {
      v42 = 1;
      v44 = 0;
      if (v13)
      {
        if (*(_DWORD *)v13 == 2)
          WTF::StringImpl::destroy((WTF::StringImpl *)v13, v35);
        else
          *(_DWORD *)v13 -= 2;
      }
      v19 = 0;
      v31 = 1;
      goto LABEL_43;
    }
  }
  else
  {
    v13 = (uint64_t)v44;
  }
  v42 = 0;
  v41 = 0;
  v14 = 14;
  v38 = (WTF::StringImpl *)v13;
  if (!v9 || *((_BYTE *)v9 + 56))
    goto LABEL_34;
  if (!v13)
  {
    v39[0] = 0;
    v40 = 0;
LABEL_20:
    v17 = v39[0];
    v39[0] = 0;
    v44 = (WTF::StringImpl *)v17;
    v19 = WebCore::toJS<WebCore::IDLUSVString,WTF::String>((uint64_t)this, (uint64_t *)&v44);
    v20 = v44;
    v44 = 0;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
        WTF::StringImpl::destroy(v20, v18);
      else
        *(_DWORD *)v20 -= 2;
    }
    v21 = 0;
    goto LABEL_39;
  }
  if ((*(_BYTE *)(v13 + 16) & 4) != 0)
    goto LABEL_16;
  v22 = *(unsigned int *)(v13 + 4);
  if (!(_DWORD)v22)
    goto LABEL_16;
  v23 = 0;
  v24 = *(unsigned __int16 **)(v13 + 8);
  v25 = 2 * v22;
  do
  {
    v26 = *v24++;
    v23 |= v26;
    v25 -= 2;
  }
  while (v25);
  if (v23 <= 0xFF)
  {
LABEL_16:
    WTF::String::latin1((WTF::String *)&v38);
    WTF::base64EncodeToString();
    v39[0] = v44;
    v40 = 0;
    v44 = 0;
    v16 = v46;
    v46 = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 == 1)
        WTF::fastFree(v16, v15);
      else
        --*(_DWORD *)v16;
    }
    goto LABEL_20;
  }
  v14 = 3;
LABEL_34:
  LOBYTE(v39[0]) = v14;
  v40 = 1;
  LOBYTE(v44) = v14;
  v39[1] = 0;
  v45 = 0;
  if (!*((_QWORD *)v8 + 2))
  {
    WebCore::propagateExceptionSlowPath((JSC *)this, &v43, (unsigned __int8 *)&v44);
    v28 = v45;
    v45 = 0;
    if (v28)
    {
      if (*(_DWORD *)v28 == 2)
        WTF::StringImpl::destroy(v28, v27);
      else
        *(_DWORD *)v28 -= 2;
    }
  }
  v19 = 0;
  v21 = 1;
LABEL_39:
  ((void (*)(WTF::StringImpl **, _QWORD *))off_1E325CDB8[v21])(&v44, v39);
  v40 = -1;
  v30 = v38;
  v38 = 0;
  if (v30)
  {
    if (*(_DWORD *)v30 == 2)
      WTF::StringImpl::destroy(v30, v29);
    else
      *(_DWORD *)v30 -= 2;
  }
  v31 = 0;
LABEL_43:
  ((void (*)(_QWORD *, uint64_t *))off_1E325A258[v31])(v39, &v41);
  return v19;
}

unint64_t WebCore::jsDOMWindowInstanceFunction_setTimeout(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  JSC::JSGlobalObject *v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  int v13;
  unint64_t v14;
  JSC::VM *v15;
  int v16;
  uint64_t v17;
  WebCore::ScheduledAction *v18;
  WebCore::ScheduledAction *v19;
  WTF *v20;
  void *v21;
  int v22;
  unint64_t v23;
  unint64_t v24;
  WTF *v25;
  void *v26;
  WTF *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unsigned int v40;
  unint64_t v41;
  int v42;
  int v43;
  JSValue v45;
  WTF::StringImpl *v46;
  void *v47;
  JSC::VM *v48;
  WTF *v49;
  WTF::StringImpl *v50;
  WTF *v51;
  WebCore::ScheduledAction *v52;
  int v53;
  JSC::VM *v54;
  uint64_t v55;
  JSC::JSGlobalObject *v56;
  uint64_t *v57;
  JSC::VM **v58;
  WTF *v59;
  JSC::VM *v60;
  uint64_t v61;
  WTF::StringImpl *v62;

  v50 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v50, "Window", "setTimeout");
  v7 = (uint64_t)v5;
  v8 = this[7];
  v54 = v8;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v45.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, v6);
    return JSC::VM::throwException(v8, (JSC::JSGlobalObject *)this, v45);
  }
  v9 = *(_QWORD *)(v7 + 3408);
  v10 = *((_QWORD *)a2 + 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v61 = v55;
  WebCore::Converter<WebCore::IDLScheduledAction>::convert((uint64_t)this, v10, v7, &v61, (uint64_t)&v52);
  v12 = (WTF::StringImpl *)v61;
  v61 = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v11);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = v53;
  if (!v53)
  {
    if ((unint64_t)(*((int *)a2 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL)
    {
      v55 = 10;
      v15 = this[7];
    }
    else
    {
      v14 = *((_QWORD *)a2 + 7);
      v55 = v14;
      v15 = this[7];
      if (v14 >= 0xFFFE000000000000)
      {
        v16 = v14;
LABEL_11:
        if (*((_DWORD *)v15 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v15))
        {
          v24 = 0;
        }
        else
        {
          v61 = 2;
          v60 = this[7];
          v17 = *((int *)a2 + 8);
          if ((unint64_t)(v17 - 4) < 0xFFFFFFFFFFFFFFFDLL)
          {
            v55 = (uint64_t)this;
            v56 = a2;
            v57 = &v61;
            v58 = &v60;
            WTF::FixedVector<JSC::Strong<JSC::Unknown,(JSC::ShouldStrongDestructorGrabLock)0>>::createWithSizeFromGenerator<WTF::FixedVector<WebCore::VariadicConverter<WebCore::IDLAny>::Item> WebCore::convertVariadicArguments<WebCore::IDLAny>(JSC::JSGlobalObject &,JSC::CallFrame &,unsigned long)::{lambda(unsigned long)#1}>(v17 - 3, (uint64_t)&v55, &v59);
            v48 = v60;
            if (*((_DWORD *)v60 + 20))
              goto LABEL_77;
            goto LABEL_74;
          }
          v51 = 0;
          while (1)
          {
            if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
            {
              v24 = 0;
              goto LABEL_26;
            }
            if (!v53)
            {
              v18 = v52;
              v52 = 0;
              if (!v9 || *(_BYTE *)(v9 + 56))
              {
                LOBYTE(v55) = 14;
                v56 = 0;
                LODWORD(v57) = 1;
              }
              else
              {
                v61 = (uint64_t)v18;
                WebCore::LocalDOMWindow::setTimeout(v9, &v61, v16, &v51, (uint64_t)&v55);
                v19 = (WebCore::ScheduledAction *)v61;
                v61 = 0;
                if (v19)
                {
                  WebCore::ScheduledAction::~ScheduledAction(v19, v11);
                  WTF::fastFree(v20, v21);
                }
                v18 = 0;
              }
              v22 = (int)v57;
              if (!(_DWORD)v57)
              {
                v23 = v55 | 0xFFFE000000000000;
LABEL_23:
                ((void (*)(uint64_t *, uint64_t *))off_1E3264D38[v22])(&v61, &v55);
                v24 = v23;
                goto LABEL_24;
              }
              if ((_DWORD)v57 == 1)
                break;
            }
            v48 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_77:
            if ((JSC::VM::hasExceptionsAfterHandlingTraps(v48) & 1) != 0)
            {
              v49 = 0;
            }
            else
            {
LABEL_74:
              v49 = v59;
              v59 = 0;
            }
            v51 = v49;
            WTF::FixedVector<JSC::Strong<JSC::Unknown,(JSC::ShouldStrongDestructorGrabLock)0>>::~FixedVector(&v59, v47);
          }
          LOBYTE(v61) = v55;
          v46 = v56;
          v56 = 0;
          v62 = v46;
          if (!*((_QWORD *)v8 + 2))
          {
            WebCore::propagateExceptionSlowPath((JSC *)this, &v54, (unsigned __int8 *)&v61);
            v46 = v62;
          }
          v62 = 0;
          if (v46)
          {
            if (*(_DWORD *)v46 == 2)
              WTF::StringImpl::destroy(v46, v11);
            else
              *(_DWORD *)v46 -= 2;
          }
          v23 = 0;
          v24 = 0;
          v22 = (int)v57;
          if ((_DWORD)v57 != -1)
            goto LABEL_23;
LABEL_24:
          LODWORD(v57) = -1;
          if (v18)
          {
            WebCore::ScheduledAction::~ScheduledAction(v18, v11);
            WTF::fastFree(v25, v26);
          }
LABEL_26:
          v27 = v51;
          v51 = 0;
          if (v27)
          {
            v28 = (uint64_t *)((char *)v27 + 8);
            v29 = *(unsigned int *)v27;
            if ((_DWORD)v29)
            {
              v30 = 8 * v29;
              do
              {
                v31 = *v28;
                if (*v28)
                {
                  v32 = (uint64_t *)(v31 - 16);
                  v33 = *(_QWORD *)(((v31 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
                  v34 = *(uint64_t **)(v31 - 8);
                  if (v34)
                  {
                    v35 = *v32;
                    *v34 = *v32;
                    *(_QWORD *)(v35 + 8) = v34;
                    *v32 = 0;
                    v32[1] = 0;
                  }
                  *v32 = *(_QWORD *)(v33 + 40);
                  *(_QWORD *)(v33 + 40) = v32;
                  *v28 = 0;
                }
                ++v28;
                v30 -= 8;
              }
              while (v30);
            }
            WTF::fastFree(v27, v11);
          }
        }
        v13 = v53;
        goto LABEL_36;
      }
      v38 = v14 - 0x2000000000000;
      if (v14 - 0x2000000000000 < 0xFFFC000000000000)
      {
LABEL_41:
        v39 = (v38 >> 52) & 0x7FF;
        v40 = v39 - 1023;
        v41 = v38 >> (51 - (v38 >> 52));
        if (v39 > 0x433)
          LODWORD(v41) = v38 << ((v38 >> 52) - 51);
        if (v39 >= 0x41F)
          v42 = v41;
        else
          v42 = (((1 << ((v38 >> 52) + 1)) - 1) & v41) + (1 << ((v38 >> 52) + 1));
        if ((v38 & 0x8000000000000000) == 0)
          v43 = v42;
        else
          v43 = -v42;
        if (v40 <= 0x53)
          v16 = v43;
        else
          v16 = 0;
        goto LABEL_11;
      }
    }
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v55, (JSC::JSGlobalObject *)this);
    v38 = v37;
    goto LABEL_41;
  }
  v24 = 0;
LABEL_36:
  if (v13 != -1)
    ((void (*)(uint64_t *, WebCore::ScheduledAction **))off_1E3264D98[v13])(&v55, &v52);
  return v24;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_clearTimeout(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  WTF::StringImpl **v6;
  JSC::VM *v7;
  WTF::StringImpl *v8;
  unint64_t v9;
  JSC::VM *v10;
  WebCore::ScriptExecutionContext *v11;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unsigned int v18;
  unsigned int v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  JSC::VM *v23;
  uint64_t v24;
  WTF::StringImpl *v25;

  v22 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v22, "Window", "clearTimeout");
  v6 = v5;
  v7 = this[7];
  v23 = v7;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  v8 = v6[426];
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v24 = 10;
    v10 = this[7];
LABEL_11:
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v24, (JSC::JSGlobalObject *)this);
    v14 = v13;
LABEL_12:
    v15 = (v14 >> 52) & 0x7FF;
    v16 = v15 - 1023;
    v17 = v14 >> (51 - (v14 >> 52));
    if (v15 > 0x433)
      LODWORD(v17) = v14 << ((v14 >> 52) - 51);
    if (v15 >= 0x41F)
      v18 = v17;
    else
      v18 = (((1 << ((v14 >> 52) + 1)) - 1) & v17) + (1 << ((v14 >> 52) + 1));
    if ((v14 & 0x8000000000000000) == 0)
      v19 = v18;
    else
      v19 = -v18;
    if (v16 <= 0x53)
      v11 = (WebCore::ScriptExecutionContext *)v19;
    else
      v11 = 0;
    goto LABEL_6;
  }
  v9 = *((_QWORD *)a2 + 6);
  v24 = v9;
  v10 = this[7];
  if (v9 < 0xFFFE000000000000)
  {
    v14 = v9 - 0x2000000000000;
    if (v9 - 0x2000000000000 < 0xFFFC000000000000)
      goto LABEL_12;
    goto LABEL_11;
  }
  v11 = (WebCore::ScriptExecutionContext *)v9;
LABEL_6:
  if (!*((_DWORD *)v10 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v10))
  {
    if (v8 && !*((_BYTE *)v8 + 56))
    {
      WebCore::LocalDOMWindow::clearTimeout((unsigned int *)v8, v11);
      return 10;
    }
    LOBYTE(v24) = 14;
    v25 = 0;
    if (!*((_QWORD *)v7 + 2))
    {
      WebCore::propagateExceptionSlowPath((JSC *)this, &v23, (unsigned __int8 *)&v24);
      v21 = v25;
      v25 = 0;
      if (v21)
      {
        if (*(_DWORD *)v21 == 2)
          WTF::StringImpl::destroy(v21, v20);
        else
          *(_DWORD *)v21 -= 2;
      }
    }
  }
  return 0;
}

unint64_t WebCore::jsDOMWindowInstanceFunction_setInterval(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::JSGlobalObject *v3;
  WTF::StringImpl **v5;
  JSC::JSGlobalObject *v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  int v13;
  unint64_t v14;
  JSC::VM *v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  WebCore::ScheduledAction *v25;
  WTF *v26;
  void *v27;
  int v28;
  unint64_t v29;
  unint64_t v30;
  WTF *v31;
  void *v32;
  WTF *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  JSValue v44;
  WTF::StringImpl *v45;
  int v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  JSC::VM *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  WTF::StringImpl *v64;
  WTF *v65;
  JSC::JSGlobalObject *v66;
  int v67;
  JSC::VM *v68;
  uint64_t v69;
  WTF::StringImpl *v70;
  uint64_t *v71;
  JSC::VM **v72;
  JSC::VM *v73;
  uint64_t v74;
  WTF::StringImpl *v75;

  v3 = a2;
  v64 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v64, "Window", "setInterval");
  v7 = (uint64_t)v5;
  v8 = this[7];
  v68 = v8;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  if (*((_DWORD *)v3 + 8) == 1)
  {
    v44.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, v6);
    return JSC::VM::throwException(v8, (JSC::JSGlobalObject *)this, v44);
  }
  v9 = *(_QWORD *)(v7 + 3408);
  v10 = *((_QWORD *)v3 + 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v74 = v69;
  WebCore::Converter<WebCore::IDLScheduledAction>::convert((uint64_t)this, v10, v7, &v74, (uint64_t)&v66);
  v12 = (WTF::StringImpl *)v74;
  v74 = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v11);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = v67;
  if (!v67)
  {
    if ((unint64_t)(*((int *)v3 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL)
    {
      v69 = 10;
      v15 = this[7];
    }
    else
    {
      v14 = *((_QWORD *)v3 + 7);
      v69 = v14;
      v15 = this[7];
      if (v14 >= 0xFFFE000000000000)
      {
        v16 = v14;
LABEL_24:
        if (*((_DWORD *)v15 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v15))
        {
          v30 = 0;
        }
        else
        {
          v74 = 2;
          v73 = this[7];
          v24 = *((int *)v3 + 8);
          if ((unint64_t)(v24 - 4) < 0xFFFFFFFFFFFFFFFDLL)
          {
            v46 = v24 - 3;
            v69 = (uint64_t)this;
            v70 = v3;
            v71 = &v74;
            v72 = &v73;
            v3 = (JSC::JSGlobalObject *)WTF::fastMalloc((WTF *)(8 * (v24 - 3) + 8));
            v47 = *WTF::TrailingArray<WTF::EmbeddedFixedVector<JSC::Strong<JSC::Unknown,(JSC::ShouldStrongDestructorGrabLock)0>>,JSC::Strong<JSC::Unknown,(JSC::ShouldStrongDestructorGrabLock)0>>::TrailingArray<WTF::FixedVector<WebCore::VariadicConverter<WebCore::IDLAny>::Item> WebCore::convertVariadicArguments<WebCore::IDLAny>(JSC::JSGlobalObject &,JSC::CallFrame &,unsigned long)::{lambda(unsigned long)#1}>(v3, v46, (uint64_t)&v69);
            if ((_DWORD)v47 != v46)
            {
              if ((_DWORD)v47)
              {
                v48 = (uint64_t *)((char *)v3 + 8);
                v49 = 8 * v47;
                do
                {
                  v50 = *v48;
                  if (*v48)
                  {
                    v51 = (uint64_t *)(v50 - 16);
                    v52 = *(_QWORD *)(((v50 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
                    v53 = *(uint64_t **)(v50 - 8);
                    if (v53)
                    {
                      v54 = *v51;
                      *v53 = *v51;
                      *(_QWORD *)(v54 + 8) = v53;
                      *v51 = 0;
                      v51[1] = 0;
                    }
                    *v51 = *(_QWORD *)(v52 + 40);
                    *(_QWORD *)(v52 + 40) = v51;
                    *v48 = 0;
                  }
                  ++v48;
                  v49 -= 8;
                }
                while (v49);
              }
              WTF::fastFree(v3, v11);
              v3 = 0;
            }
            v55 = v73;
            if (*((_DWORD *)v73 + 20))
              goto LABEL_85;
            goto LABEL_83;
          }
          v65 = 0;
          while (1)
          {
            if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
            {
              v30 = 0;
              goto LABEL_40;
            }
            if (!v67)
            {
              v3 = v66;
              v66 = 0;
              if (!v9 || *(_BYTE *)(v9 + 56))
              {
                LODWORD(v69) = 0;
                LODWORD(v71) = 0;
              }
              else
              {
                v74 = (uint64_t)v3;
                WebCore::LocalDOMWindow::setInterval((unsigned int *)v9, &v74, v16, (uint64_t *)&v65, (uint64_t)&v69);
                v25 = (WebCore::ScheduledAction *)v74;
                v74 = 0;
                if (v25)
                {
                  WebCore::ScheduledAction::~ScheduledAction(v25, v11);
                  WTF::fastFree(v26, v27);
                }
                v3 = 0;
              }
              v28 = (int)v71;
              if (!(_DWORD)v71)
              {
                v29 = v69 | 0xFFFE000000000000;
LABEL_37:
                ((void (*)(uint64_t *, uint64_t *))off_1E3264D38[v28])(&v74, &v69);
                v30 = v29;
                goto LABEL_38;
              }
              if ((_DWORD)v71 == 1)
                break;
            }
            v55 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_85:
            if ((JSC::VM::hasExceptionsAfterHandlingTraps(v55) & 1) != 0)
            {
              v65 = 0;
              if (v3)
              {
                v56 = (uint64_t *)((char *)v3 + 8);
                v57 = *(unsigned int *)v3;
                if ((_DWORD)v57)
                {
                  v58 = 8 * v57;
                  do
                  {
                    v59 = *v56;
                    if (*v56)
                    {
                      v60 = (uint64_t *)(v59 - 16);
                      v61 = *(_QWORD *)(((v59 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
                      v62 = *(uint64_t **)(v59 - 8);
                      if (v62)
                      {
                        v63 = *v60;
                        *v62 = *v60;
                        *(_QWORD *)(v63 + 8) = v62;
                        *v60 = 0;
                        v60[1] = 0;
                      }
                      *v60 = *(_QWORD *)(v61 + 40);
                      *(_QWORD *)(v61 + 40) = v60;
                      *v56 = 0;
                    }
                    ++v56;
                    v58 -= 8;
                  }
                  while (v58);
                }
                WTF::fastFree(v3, v11);
              }
            }
            else
            {
LABEL_83:
              v65 = v3;
            }
          }
          LOBYTE(v74) = v69;
          v45 = v70;
          v70 = 0;
          v75 = v45;
          if (!*((_QWORD *)v8 + 2))
          {
            WebCore::propagateExceptionSlowPath((JSC *)this, &v68, (unsigned __int8 *)&v74);
            v45 = v75;
          }
          v75 = 0;
          if (v45)
          {
            if (*(_DWORD *)v45 == 2)
              WTF::StringImpl::destroy(v45, v11);
            else
              *(_DWORD *)v45 -= 2;
          }
          v29 = 0;
          v30 = 0;
          v28 = (int)v71;
          if ((_DWORD)v71 != -1)
            goto LABEL_37;
LABEL_38:
          LODWORD(v71) = -1;
          if (v3)
          {
            WebCore::ScheduledAction::~ScheduledAction(v3, v11);
            WTF::fastFree(v31, v32);
          }
LABEL_40:
          v33 = v65;
          v65 = 0;
          if (v33)
          {
            v34 = (uint64_t *)((char *)v33 + 8);
            v35 = *(unsigned int *)v33;
            if ((_DWORD)v35)
            {
              v36 = 8 * v35;
              do
              {
                v37 = *v34;
                if (*v34)
                {
                  v38 = (uint64_t *)(v37 - 16);
                  v39 = *(_QWORD *)(((v37 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
                  v40 = *(uint64_t **)(v37 - 8);
                  if (v40)
                  {
                    v41 = *v38;
                    *v40 = *v38;
                    *(_QWORD *)(v41 + 8) = v40;
                    *v38 = 0;
                    v38[1] = 0;
                  }
                  *v38 = *(_QWORD *)(v39 + 40);
                  *(_QWORD *)(v39 + 40) = v38;
                  *v34 = 0;
                }
                ++v34;
                v36 -= 8;
              }
              while (v36);
            }
            WTF::fastFree(v33, v11);
          }
        }
        v13 = v67;
        goto LABEL_50;
      }
      v18 = v14 - 0x2000000000000;
      if (v14 - 0x2000000000000 < 0xFFFC000000000000)
      {
LABEL_13:
        v19 = (v18 >> 52) & 0x7FF;
        v20 = v19 - 1023;
        v21 = v18 >> (51 - (v18 >> 52));
        if (v19 > 0x433)
          LODWORD(v21) = v18 << ((v18 >> 52) - 51);
        if (v19 >= 0x41F)
          v22 = v21;
        else
          v22 = (((1 << ((v18 >> 52) + 1)) - 1) & v21) + (1 << ((v18 >> 52) + 1));
        if ((v18 & 0x8000000000000000) == 0)
          v23 = v22;
        else
          v23 = -v22;
        if (v20 <= 0x53)
          v16 = v23;
        else
          v16 = 0;
        goto LABEL_24;
      }
    }
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v69, (JSC::JSGlobalObject *)this);
    v18 = v17;
    goto LABEL_13;
  }
  v30 = 0;
LABEL_50:
  if (v13 != -1)
    ((void (*)(uint64_t *, JSC::JSGlobalObject **))off_1E3264D98[v13])(&v69, &v66);
  return v30;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_clearInterval(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  WTF::StringImpl **v6;
  JSC::VM *v7;
  WTF::StringImpl *v8;
  unint64_t v9;
  JSC::VM *v10;
  WebCore::ScriptExecutionContext *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  unsigned int v17;
  unsigned int v18;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  JSC::VM *v23;
  uint64_t v24;
  WTF::StringImpl *v25;

  v22 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v22, "Window", "clearInterval");
  v6 = v5;
  v7 = this[7];
  v23 = v7;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  v8 = v6[426];
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v24 = 10;
    v10 = this[7];
LABEL_7:
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v24, (JSC::JSGlobalObject *)this);
    v13 = v12;
LABEL_8:
    v14 = (v13 >> 52) & 0x7FF;
    v15 = v14 - 1023;
    v16 = v13 >> (51 - (v13 >> 52));
    if (v14 > 0x433)
      LODWORD(v16) = v13 << ((v13 >> 52) - 51);
    if (v14 >= 0x41F)
      v17 = v16;
    else
      v17 = (((1 << ((v13 >> 52) + 1)) - 1) & v16) + (1 << ((v13 >> 52) + 1));
    if ((v13 & 0x8000000000000000) == 0)
      v18 = v17;
    else
      v18 = -v17;
    if (v15 <= 0x53)
      v11 = (WebCore::ScriptExecutionContext *)v18;
    else
      v11 = 0;
    goto LABEL_19;
  }
  v9 = *((_QWORD *)a2 + 6);
  v24 = v9;
  v10 = this[7];
  if (v9 < 0xFFFE000000000000)
  {
    v13 = v9 - 0x2000000000000;
    if (v9 - 0x2000000000000 < 0xFFFC000000000000)
      goto LABEL_8;
    goto LABEL_7;
  }
  v11 = (WebCore::ScriptExecutionContext *)v9;
LABEL_19:
  if (!*((_DWORD *)v10 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v10))
  {
    if (v8 && !*((_BYTE *)v8 + 56))
    {
      WebCore::LocalDOMWindow::clearTimeout((unsigned int *)v8, v11);
      return 10;
    }
    LOBYTE(v24) = 14;
    v25 = 0;
    if (!*((_QWORD *)v7 + 2))
    {
      WebCore::propagateExceptionSlowPath((JSC *)this, &v23, (unsigned __int8 *)&v24);
      v21 = v25;
      v25 = 0;
      if (v21)
      {
        if (*(_DWORD *)v21 == 2)
          WTF::StringImpl::destroy(v21, v20);
        else
          *(_DWORD *)v21 -= 2;
      }
    }
  }
  return 0;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_queueMicrotask(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  WebCore::JSDOMWindow *v11;
  WTF::StringImpl *v13;

  v13 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v13, "Window", "queueMicrotask");
  v11 = (WebCore::JSDOMWindow *)v5;
  if (v5 == this
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return WebCore::JSDOMWindow::queueMicrotask(v11, (JSC::JSGlobalObject *)this, a2, v6, v7, v8, v9, v10);
  }
  else
  {
    return 10;
  }
}

unint64_t WebCore::jsDOMWindowInstanceFunction_createImageBitmap(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WTF::StringImpl *v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  WTF::StringImpl **v16;
  JSC::JSGlobalObject *v17;
  const char *v18;
  WTF::StringImpl **v19;
  WebCore::DOMGuardedObject *v20;
  unint64_t v21;
  JSValue v22;
  uint64_t v23;
  objc_class *v25;
  WebCore::DOMGuardedObject *v26;
  WebCore::DOMGuardedObject *v27;
  WebCore::DOMGuardedObject *v28;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194A80E00);
  }
  v10 = this[7];
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(this[7], v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v27 = v15;
  v16 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v16)
  {
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Window", "createImageBitmap", v18);
LABEL_24:
    if (*((_DWORD *)v14 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
    else
      --*((_DWORD *)v14 + 4);
    goto LABEL_26;
  }
  v19 = v16;
  v20 = this[7];
  v28 = v20;
  if (v16 == this
    || WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v16[426], 2))
  {
    v21 = *((int *)a2 + 8) - 1;
    if (v21 >= 6)
      v21 = 6;
    switch(v21)
    {
      case 0uLL:
        v22.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, v17);
        JSC::VM::throwException(v20, (JSC::JSGlobalObject *)this, v22);
        break;
      case 1uLL:
      case 2uLL:
        WebCore::jsDOMWindowInstanceFunction_createImageBitmap1Body((unint64_t *)this, (uint64_t)a2, (uint64_t)v19[426], (_DWORD **)&v27);
        break;
      case 5uLL:
      case 6uLL:
        WebCore::jsDOMWindowInstanceFunction_createImageBitmap2Body((unint64_t *)this, (uint64_t)a2, (uint64_t)v19[426], (_DWORD **)&v27);
        break;
      default:
        JSC::throwTypeError();
        break;
    }
  }
  v14 = v27;
  if (v27)
    goto LABEL_24;
LABEL_26:
  v23 = *((_QWORD *)v10 + 2);
  if (v23)
  {
    if (*((_QWORD *)v10 + 3) != v23)
    {
      v25 = *(objc_class **)(v23 + 8);
      JSC::VM::clearException(v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v28);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v28, v25, 0);
      v26 = v28;
      v28 = 0;
      if (v26)
      {
        if (*((_DWORD *)v26 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v26 + 16))(v26);
        else
          --*((_DWORD *)v26 + 4);
      }
    }
  }
  if (*((_DWORD *)v10 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) != 0)
    return 10;
  return v13;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_structuredClone(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v5;
  JSC::JSGlobalObject *v6;
  WTF::StringImpl **v7;
  JSC::VM *v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  WTF *v19;
  JSValue v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  WebCore *v29;
  JSC::JSGlobalObject *v30;
  JSC::CallFrame *v31;
  WTF::StringImpl *v32;
  WTF *v33;
  uint64_t v34;
  uint64_t v35;
  WTF::StringImpl *v36;
  int v37;
  WTF *v38;
  uint64_t v39;
  int v40;
  JSC::VM *v41;
  unsigned __int8 v42[8];
  WTF::StringImpl *v43;

  v32 = this[7];
  v5 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v32, "Window", "structuredClone");
  v7 = v5;
  v8 = this[7];
  v41 = v8;
  if (v5 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v5[426], 2))
  {
    return 10;
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v22.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, v6);
    return JSC::VM::throwException(v8, (JSC::JSGlobalObject *)this, v22);
  }
  if (*((_DWORD *)a2 + 8) == 2)
    v9 = 10;
  else
    v9 = *((_QWORD *)a2 + 7);
  v10 = v7[426];
  v11 = *((_QWORD *)a2 + 6);
  WebCore::convertDictionary<WebCore::StructuredSerializeOptions>((JSC::JSCell *)v9, (JSC::JSGlobalObject *)this, (uint64_t)&v38);
  v13 = v40;
  if (v40)
  {
    v18 = 0;
LABEL_23:
    if (v13 != -1)
      ((void (*)(uint64_t *, WTF **))off_1E3264E68[v13])(&v35, &v38);
    return v18;
  }
  v33 = v38;
  v14 = v39;
  v38 = 0;
  v39 = 0;
  v34 = v14;
  if (!v10 || *((_BYTE *)v10 + 56))
  {
    LOBYTE(v35) = 14;
    v36 = 0;
    v37 = 1;
    goto LABEL_13;
  }
  WebCore::WindowOrWorkerGlobalScope::structuredClone((JSC::JSGlobalObject *)this, (WebCore::JSDOMGlobalObject *)v7, v11, (uint64_t)&v33, (uint64_t)&v35);
  v15 = v37;
  if (!v37)
  {
    v16 = v35;
    goto LABEL_19;
  }
  if (v37 == 1)
  {
LABEL_13:
    v42[0] = v35;
    v17 = v36;
    v36 = 0;
    v43 = v17;
    if (!*((_QWORD *)v8 + 2))
    {
      WebCore::propagateExceptionSlowPath((JSC *)this, &v41, v42);
      v17 = v43;
    }
    v43 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v12);
      else
        *(_DWORD *)v17 -= 2;
    }
    v16 = 0;
    v18 = 0;
    v15 = v37;
    if (v37 == -1)
    {
LABEL_20:
      v37 = -1;
      v19 = v33;
      if (HIDWORD(v34))
      {
        v23 = 8 * HIDWORD(v34);
        do
        {
          v24 = *(_QWORD *)v19;
          if (*(_QWORD *)v19)
          {
            v25 = (uint64_t *)(v24 - 16);
            v26 = *(_QWORD *)(((v24 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
            v27 = *(uint64_t **)(v24 - 8);
            if (v27)
            {
              v28 = *v25;
              *v27 = *v25;
              *(_QWORD *)(v28 + 8) = v27;
              *v25 = 0;
              v25[1] = 0;
            }
            *v25 = *(_QWORD *)(v26 + 40);
            *(_QWORD *)(v26 + 40) = v25;
            *(_QWORD *)v19 = 0;
          }
          v19 = (WTF *)((char *)v19 + 8);
          v23 -= 8;
        }
        while (v23);
        v19 = v33;
        if (!v33)
          goto LABEL_22;
      }
      else if (!v33)
      {
LABEL_22:
        v13 = v40;
        goto LABEL_23;
      }
      v33 = 0;
      LODWORD(v34) = 0;
      WTF::fastFree(v19, v12);
      goto LABEL_22;
    }
LABEL_19:
    ((void (*)(unsigned __int8 *, uint64_t *))off_1E3264E58[v15])(v42, &v35);
    v18 = v16;
    goto LABEL_20;
  }
  v29 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsDOMWindowInstanceFunction_fetch(v29, v30, v31);
}

unint64_t WebCore::jsDOMWindowInstanceFunction_fetch(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WTF::StringImpl *v9;
  int v10;
  JSC::VM *v11;
  unint64_t v12;
  WebCore::DOMGuardedObject *v13;
  WebCore::DOMGuardedObject *v14;
  WTF::StringImpl **v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  WTF::StringImpl **v18;
  JSC::VM *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  int v24;
  WebCore::DOMGuardedObject *v25;
  int v26;
  int v27;
  uint64_t v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  objc_class *v33;
  WebCore::DOMGuardedObject *v34;
  JSValue v35;
  WebCore::DOMGuardedObject *v36;
  WebCore::DOMGuardedObject *v37;
  uint64_t v38;
  int v39;
  char v40;
  uint64_t v41;
  int v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  __int16 v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  unsigned int v50;
  WebCore::DOMGuardedObject *v51;
  char v52[16];
  int v53;
  char v54;
  char v55[8];
  int v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  __int16 v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  char v64[8];
  int v65;
  char v66;
  char v67[8];
  uint64_t v68;
  int v69;
  int v70;
  uint64_t v71;

  v71 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194A81500);
  }
  v9 = this[7];
  v10 = *((_DWORD *)this + 291);
  if (v10)
    v11 = (JSC::VM *)(16 * (v10 & 0xFFFFFFFE));
  else
    v11 = 0;
  v12 = JSC::JSPromise::create(this[7], v11, a3);
  v13 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v14 = WebCore::DOMGuardedObject::DOMGuardedObject(v13, (unint64_t)this, v12);
  *(_QWORD *)v14 = &off_1E3226868;
  *((_DWORD *)v14 + 10) = 0;
  *((_BYTE *)v14 + 44) = 0;
  v36 = v14;
  v15 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)this, (uint64_t)a2);
  if (!v15)
  {
    WebCore::rejectPromiseWithThisTypeError(v13, (WebCore::DeferredPromise *)"Window", "fetch", v17);
LABEL_57:
    v36 = 0;
LABEL_58:
    if (*((_DWORD *)v13 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v13 + 16))(v13);
    else
      --*((_DWORD *)v13 + 4);
    goto LABEL_37;
  }
  v18 = v15;
  v19 = this[7];
  if (v15 != this
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, v15[426], 2))
  {
    goto LABEL_57;
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v35.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, v16);
    JSC::VM::throwException(v19, (JSC::JSGlobalObject *)this, v35);
    goto LABEL_57;
  }
  v20 = (uint64_t)v18[426];
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::FetchRequest>,WebCore::IDLUSVString>>::convert((uint64_t *)this, *((_QWORD *)a2 + 6), (uint64_t)v67);
  v21 = v70;
  if (!v70)
  {
    if ((unint64_t)(*((int *)a2 + 8) - 3) > 0xFFFFFFFFFFFFFFFDLL)
      v22 = 10;
    else
      v22 = *((_QWORD *)a2 + 7);
    WebCore::convertDictionary<WebCore::FetchRequestInit>((WebCore::JSDOMGlobalObject *)this, (JSC::JSCell *)v22, (uint64_t)&v37);
    v23 = v50;
    if (!v50)
    {
      if (v70
        || (v64[0] = 0, v65 = -1, v24 = v69, v69 != -1)
        && (((void (*)(WebCore::DOMGuardedObject **, char *, uint64_t *))off_1E325B300[v69])(&v51, v64, &v68),
            v65 = v24,
            v50))
      {
        std::__throw_bad_variant_access[abi:sn180100]();
      }
      v25 = v37;
      v37 = 0;
      v51 = v25;
      v52[0] = 0;
      v54 = 0;
      if (v40)
      {
        v53 = -1;
        v26 = v39;
        if (v39 != -1)
        {
          ((void (*)(char *, char *, uint64_t *))off_1E3264E88[v39])(&v66, v52, &v38);
          v53 = v26;
        }
        v54 = 1;
      }
      v55[0] = 0;
      v57 = 0;
      if (v43)
      {
        v56 = -1;
        v27 = v42;
        if (v42 != -1)
        {
          ((void (*)(char *, char *, uint64_t *))off_1E3264ED0[v42])(&v66, v55, &v41);
          v56 = v27;
        }
        v57 = 1;
      }
      v58 = v44;
      v59 = v45;
      v60 = v46;
      v28 = v47;
      v44 = 0;
      v47 = 0;
      v61 = v28;
      v62 = v48;
      v63 = v49;
      WebCore::WindowOrWorkerGlobalScopeFetch::fetch(v20, (uint64_t)v64, (uint64_t)&v51, (uint64_t *)&v36);
      WebCore::FetchRequestInit::~FetchRequestInit((WebCore::FetchRequestInit *)&v51, v29);
      if (v65 != -1)
        ((void (*)(WebCore::DOMGuardedObject **, char *))off_1E325B2F0[v65])(&v51, v64);
      v23 = v50;
    }
    if (v23 != -1)
      (*(&off_1E3264F08 + v23))((int)&v51, (WebCore::FetchRequestInit *)&v37);
    v21 = v70;
  }
  if (v21 != -1)
    ((void (*)(WebCore::DOMGuardedObject **, uint64_t *))off_1E325B310[v21])(&v37, &v68);
  v13 = v36;
  v36 = 0;
  if (v13)
    goto LABEL_58;
LABEL_37:
  v30 = *((_QWORD *)v9 + 2);
  if (v30)
  {
    if (*((_QWORD *)v9 + 3) != v30)
    {
      v33 = *(objc_class **)(v30 + 8);
      JSC::VM::clearException(v9);
      WebCore::DeferredPromise::create((unint64_t)this, v12, 0, &v37);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v37, v33, 0);
      v34 = v37;
      v37 = 0;
      if (v34)
      {
        if (*((_DWORD *)v34 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v34 + 16))(v34);
        else
          --*((_DWORD *)v34 + 4);
      }
    }
  }
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    return 10;
  return v12;
}

uint64_t WebCore::IDLOperation<WebCore::JSDOMWindow>::cast(unsigned __int8 *a1, uint64_t a2)
{
  JSC::JSCell *v3;
  uint64_t result;
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  _DWORD *v11;
  uint64_t v12;
  _BOOL4 v13;
  char **v14;
  BOOL v15;

  v3 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v3 & 0xFFFE000000000002) != 0)
  {
    if (((unint64_t)v3 & 0xFFFFFFFFFFFFFFF7) != 2)
      goto LABEL_7;
    goto LABEL_24;
  }
  if (((unint64_t)v3 & 0xFFFFFFFFFFFFFFF7) == 2 || *((unsigned __int8 *)v3 + 5) - 51 < 6)
LABEL_24:
    v3 = (JSC::JSCell *)a1;
LABEL_7:
  if (((unint64_t)v3 & 0xFFFE000000000002) != 0)
    return 0;
  result = JSC::JSCell::getObject(v3);
  if (result)
  {
    if (*(_BYTE *)(result + 5) == 32)
    {
      v11 = *(_DWORD **)(result + 16);
      v12 = *(unsigned int *)(16 * (*v11 & 0xFFFFFFFE) + 0x4C);
      v13 = *(_DWORD *)(16 * (*v11 & 0xFFFFFFFE) + 0x4C) != 0;
      v14 = (char **)(16 * v12);
      if ((_DWORD)v12)
        v15 = v14 == &WebCore::JSDOMWindow::s_info;
      else
        v15 = 1;
      if (!v15)
      {
        do
        {
          v14 = (char **)v14[2];
          v13 = v14 != 0;
        }
        while (v14 != &WebCore::JSDOMWindow::s_info && v14 != 0);
      }
      if (v13)
        return *(_QWORD *)(result + 16);
      else
        return 0;
    }
    else
    {
      v6 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
      v7 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
      v8 = (char **)(16 * v6);
      if ((_DWORD)v6)
        v9 = v8 == &WebCore::JSDOMWindow::s_info;
      else
        v9 = 1;
      if (!v9)
      {
        do
        {
          v8 = (char **)v8[2];
          v7 = v8 != 0;
        }
        while (v8 != &WebCore::JSDOMWindow::s_info && v8 != 0);
      }
      if (!v7)
        return 0;
    }
  }
  return result;
}

uint64_t WebCore::castThisValue<WebCore::JSDOMWindow>(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t result;
  uint64_t v3;
  _BOOL4 v4;
  char **v5;
  BOOL v6;
  _DWORD *v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;

  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return 0;
  result = JSC::JSCell::getObject(a1);
  if (result)
  {
    if (*(_BYTE *)(result + 5) == 32)
    {
      v8 = *(_DWORD **)(result + 16);
      v9 = *(unsigned int *)(16 * (*v8 & 0xFFFFFFFE) + 0x4C);
      v10 = *(_DWORD *)(16 * (*v8 & 0xFFFFFFFE) + 0x4C) != 0;
      v11 = (char **)(16 * v9);
      if ((_DWORD)v9)
        v12 = v11 == &WebCore::JSDOMWindow::s_info;
      else
        v12 = 1;
      if (!v12)
      {
        do
        {
          v11 = (char **)v11[2];
          v10 = v11 != 0;
        }
        while (v11 != &WebCore::JSDOMWindow::s_info && v11 != 0);
      }
      if (v10)
        return *(_QWORD *)(result + 16);
      else
        return 0;
    }
    else
    {
      v3 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
      v4 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
      v5 = (char **)(16 * v3);
      if ((_DWORD)v3)
        v6 = v5 == &WebCore::JSDOMWindow::s_info;
      else
        v6 = 1;
      if (!v6)
      {
        do
        {
          v5 = (char **)v5[2];
          v4 = v5 != 0;
        }
        while (v5 != &WebCore::JSDOMWindow::s_info && v5 != 0);
      }
      if (!v4)
        return 0;
    }
  }
  return result;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_postMessage2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSDOMWindow *a4)
{
  uint64_t v7;
  JSC::VM *v8;
  uint64_t v9;
  JSC::CallFrame *v10;
  int v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  WTF *v17;
  uint64_t v18;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  JSValue v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  WebCore *v30;
  JSC::JSGlobalObject *v31;
  JSC::CallFrame *v32;
  WebCore::JSDOMWindow *v33;
  WTF *v34;
  WTF::StringImpl *v35;
  WTF::StringImpl *v36;
  int v37;
  uint64_t v38;
  WTF::StringImpl *v39;
  char v40;
  WTF *v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;

  if ((unint64_t)(*((int *)a2 + 8) - 3) > 0xFFFFFFFFFFFFFFFDLL)
    v7 = 10;
  else
    v7 = *((_QWORD *)a2 + 7);
  v8 = (JSC::VM *)*((_QWORD *)this + 7);
  v9 = *((_QWORD *)a2 + 6);
  WebCore::convertDictionary<WebCore::WindowPostMessageOptions>((JSC::JSCell *)v7, this, (uint64_t)&v34);
  v11 = v37;
  if (v37)
  {
    v18 = 0;
    goto LABEL_17;
  }
  v12 = WebCore::incumbentDOMWindow(this, a2, v10);
  if (v37)
  {
    v30 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
    return WebCore::jsDOMWindowInstanceFunction_postMessage1Body(v30, v31, v32, v33);
  }
  v41 = v34;
  v13 = v35;
  v34 = 0;
  v35 = 0;
  v42 = v13;
  v14 = v36;
  v36 = 0;
  v43 = v14;
  if (*((_BYTE *)a3 + 56))
    WebCore::RemoteDOMWindow::postMessage((unsigned int *)a3, this, v12, v9, (uint64_t)&v41, &v38);
  else
    WebCore::LocalDOMWindow::postMessage((uint64_t)a3, this, v12, v9, (uint64_t)&v41, &v38);
  v16 = v43;
  v43 = 0;
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v15);
    else
      *(_DWORD *)v16 -= 2;
  }
  v17 = v41;
  if (!HIDWORD(v42))
  {
    if (!v41)
      goto LABEL_14;
    goto LABEL_38;
  }
  v24 = 8 * HIDWORD(v42);
  do
  {
    v25 = *(_QWORD *)v17;
    if (*(_QWORD *)v17)
    {
      v26 = (uint64_t *)(v25 - 16);
      v27 = *(_QWORD *)(((v25 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
      v28 = *(uint64_t **)(v25 - 8);
      if (v28)
      {
        v29 = *v26;
        *v28 = *v26;
        *(_QWORD *)(v29 + 8) = v28;
        *v26 = 0;
        v26[1] = 0;
      }
      *v26 = *(_QWORD *)(v27 + 40);
      *(_QWORD *)(v27 + 40) = v26;
      *(_QWORD *)v17 = 0;
    }
    v17 = (WTF *)((char *)v17 + 8);
    v24 -= 8;
  }
  while (v24);
  v17 = v41;
  if (v41)
  {
LABEL_38:
    v41 = 0;
    LODWORD(v42) = 0;
    WTF::fastFree(v17, v15);
  }
LABEL_14:
  if (v40)
  {
    v20 = (WTF::StringImpl *)v38;
    LOBYTE(v41) = v38;
    v21 = v39;
    v39 = 0;
    v42 = v21;
    if (!*((_QWORD *)v8 + 2))
    {
      v22.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v38, (JSC::JSGlobalObject *)&v42);
      JSC::VM::throwException(v8, this, v22);
      v21 = v42;
    }
    v42 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v20);
      else
        *(_DWORD *)v21 -= 2;
    }
    if (v40)
    {
      v23 = v39;
      v39 = 0;
      if (v23)
      {
        if (*(_DWORD *)v23 != 2)
        {
          v18 = 0;
          *(_DWORD *)v23 -= 2;
          goto LABEL_16;
        }
        WTF::StringImpl::destroy(v23, v20);
      }
    }
    v18 = 0;
    goto LABEL_16;
  }
  v18 = 10;
LABEL_16:
  v11 = v37;
LABEL_17:
  if (v11 != -1)
    ((void (*)(WTF **, WTF **))off_1E3264CE8[v11])(&v41, &v34);
  return v18;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_postMessage1Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSDOMWindow *a4)
{
  JSC::VM *v7;
  uint64_t v8;
  JSC::CallFrame *v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  int v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  void *v19;
  WTF *v20;
  uint64_t v21;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  JSValue v25;
  WTF::StringImpl *v26;
  uint64_t v27;
  WTF *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  WTF *v35;
  WTF::StringImpl *v36;
  int v37;
  WTF::StringImpl *v38;
  int v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  char v42;
  WTF *v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;

  v7 = (JSC::VM *)*((_QWORD *)this + 7);
  v8 = *((_QWORD *)a2 + 6);
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 7), (uint64_t)&v38);
  v10 = v39;
  if (!v39)
  {
    if ((unint64_t)(*((int *)a2 + 8) - 4) >= 0xFFFFFFFFFFFFFFFDLL || (v11 = *((_QWORD *)a2 + 8), v11 == 10))
    {
      v35 = 0;
      v36 = 0;
      v37 = 0;
    }
    else
    {
      v43 = (WTF *)*((_QWORD *)this + 7);
      if ((v11 & 0xFFFE000000000002) != 0 || (v12 = *(unsigned __int8 *)(v11 + 5), v12 <= 0x16))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        JSC::throwTypeError();
        v14 = v40;
        v40 = 0;
        if (v14)
        {
          if (*(_DWORD *)v14 == 2)
            WTF::StringImpl::destroy(v14, v13);
          else
            *(_DWORD *)v14 -= 2;
        }
        v37 = 1;
      }
      else if (v12 == 36 && (JSC::JSArray::isIteratorProtocolFastAndNonObservable((JSC::JSArray *)v11) & 1) != 0)
      {
        WebCore::Detail::SequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLObject>>::convertArray((JSC::VM **)this, v11, (uint64_t)&v35);
      }
      else
      {
        WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLObject>>::convert(this, v11, (uint64_t)&v35);
      }
      v15 = v37;
      if (v37)
      {
        v21 = 0;
        goto LABEL_27;
      }
    }
    v16 = WebCore::incumbentDOMWindow(this, a2, v9);
    if (v39 || (v17 = v38, v38 = 0, v45 = v17, v37))
    {
      v34 = std::__throw_bad_variant_access[abi:sn180100]();
      return _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore24WindowPostMessageOptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(v34);
    }
    v43 = v35;
    v18 = v36;
    v35 = 0;
    v36 = 0;
    v44 = v18;
    WebCore::DOMWindow::postMessage((uint64_t)a3, this, v16, v8, &v45, (uint64_t)&v43, &v40);
    v20 = v43;
    if (HIDWORD(v44))
    {
      v27 = 8 * HIDWORD(v44);
      v28 = v43;
      do
      {
        v29 = *(_QWORD *)v28;
        if (*(_QWORD *)v28)
        {
          v30 = (uint64_t *)(v29 - 16);
          v31 = *(_QWORD *)(((v29 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
          v32 = *(uint64_t **)(v29 - 8);
          if (v32)
          {
            v33 = *v30;
            *v32 = *v30;
            *(_QWORD *)(v33 + 8) = v32;
            *v30 = 0;
            v30[1] = 0;
          }
          *v30 = *(_QWORD *)(v31 + 40);
          *(_QWORD *)(v31 + 40) = v30;
          *(_QWORD *)v28 = 0;
        }
        v28 = (WTF *)((char *)v28 + 8);
        v27 -= 8;
      }
      while (v27);
    }
    if (v20)
      WTF::fastFree(v20, v19);
    if (v45)
    {
      if (*(_DWORD *)v45 == 2)
        WTF::StringImpl::destroy(v45, (WTF::StringImpl *)v19);
      else
        *(_DWORD *)v45 -= 2;
    }
    if (!v42)
    {
      v21 = 10;
LABEL_26:
      v15 = v37;
LABEL_27:
      if (v15 != -1)
        ((void (*)(WTF::StringImpl **, WTF **))off_1E3264D08[v15])(&v40, &v35);
      v10 = v39;
      goto LABEL_30;
    }
    v23 = (WTF::StringImpl *)v40;
    LOBYTE(v43) = (_BYTE)v40;
    v24 = v41;
    v41 = 0;
    v44 = v24;
    if (!*((_QWORD *)v7 + 2))
    {
      v25.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v40, (JSC::JSGlobalObject *)&v44);
      JSC::VM::throwException(v7, this, v25);
      v24 = v44;
    }
    v44 = 0;
    if (v24)
    {
      if (*(_DWORD *)v24 == 2)
        WTF::StringImpl::destroy(v24, v23);
      else
        *(_DWORD *)v24 -= 2;
    }
    if (v42)
    {
      v26 = v41;
      v41 = 0;
      if (v26)
      {
        if (*(_DWORD *)v26 != 2)
        {
          v21 = 0;
          *(_DWORD *)v26 -= 2;
          goto LABEL_26;
        }
        WTF::StringImpl::destroy(v26, v23);
      }
    }
    v21 = 0;
    goto LABEL_26;
  }
  v21 = 0;
LABEL_30:
  if (v10 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A258[v10])(&v40, &v38);
  return v21;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore24WindowPostMessageOptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, uint64_t a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  WTF *result;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;

  v3 = *(WTF::StringImpl **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  v4 = *(unsigned int *)(a2 + 12);
  result = *(WTF **)a2;
  if (!(_DWORD)v4)
  {
    if (!result)
      return result;
LABEL_15:
    *(_QWORD *)a2 = 0;
    *(_DWORD *)(a2 + 8) = 0;
    return (WTF *)WTF::fastFree(result, (void *)a2);
  }
  v6 = 8 * v4;
  do
  {
    v7 = *(_QWORD *)result;
    if (*(_QWORD *)result)
    {
      v8 = (uint64_t *)(v7 - 16);
      v9 = *(_QWORD *)(((v7 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
      v10 = *(uint64_t **)(v7 - 8);
      if (v10)
      {
        v11 = *v8;
        *v10 = *v8;
        *(_QWORD *)(v11 + 8) = v10;
        *v8 = 0;
        v8[1] = 0;
      }
      *v8 = *(_QWORD *)(v9 + 40);
      *(_QWORD *)(v9 + 40) = v8;
      *(_QWORD *)result = 0;
    }
    result = (WTF *)((char *)result + 8);
    v6 -= 8;
  }
  while (v6);
  result = *(WTF **)a2;
  if (*(_QWORD *)a2)
    goto LABEL_15;
  return result;
}

uint64_t WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLObject>>::convert@<X0>(JSC::JSGlobalObject *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  JSC::VM *v4;
  uint64_t result;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  WTF *v14;
  uint64_t v15;
  WTF **v16;

  v14 = 0;
  v15 = 0;
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v16 = &v14;
  result = JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLObject>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<JSC::Strong<JSC::JSObject,(JSC::ShouldStrongDestructorGrabLock)0>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(a1, a2, (uint64_t *)&v16);
  if (*((_DWORD *)v4 + 20) && (result = JSC::VM::hasExceptionsAfterHandlingTraps(v4), (result & 1) != 0))
  {
    v7 = HIDWORD(v15);
    result = (uint64_t)v14;
    *(_DWORD *)(a3 + 16) = 1;
    if ((_DWORD)v7)
    {
      v8 = 8 * v7;
      do
      {
        v9 = *(_QWORD *)result;
        if (*(_QWORD *)result)
        {
          v10 = (uint64_t *)(v9 - 16);
          v11 = *(_QWORD *)(((v9 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
          v12 = *(uint64_t **)(v9 - 8);
          if (v12)
          {
            v13 = *v10;
            *v12 = *v10;
            *(_QWORD *)(v13 + 8) = v12;
            *v10 = 0;
            v10[1] = 0;
          }
          *v10 = *(_QWORD *)(v11 + 40);
          *(_QWORD *)(v11 + 40) = v10;
          *(_QWORD *)result = 0;
        }
        result += 8;
        v8 -= 8;
      }
      while (v8);
      result = (uint64_t)v14;
      if (v14)
        goto LABEL_7;
    }
    else if (result)
    {
LABEL_7:
      v14 = 0;
      LODWORD(v15) = 0;
      return WTF::fastFree((WTF *)result, v6);
    }
  }
  else
  {
    *(_QWORD *)a3 = v14;
    *(_QWORD *)(a3 + 8) = v15;
    *(_DWORD *)(a3 + 16) = 0;
  }
  return result;
}

WTF *WebCore::Detail::SequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLObject>>::convertArray@<X0>(JSC::VM **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  WTF *v10;
  uint64_t v11;
  unint64_t DirectIndex;
  uint64_t v13;
  WTF *v14;
  uint64_t v15;
  int v16;
  WTF *result;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  WTF *v24;
  uint64_t v25;
  JSC::VM *v26;
  WTF *v27;

  v26 = a1[7];
  v4 = *(_BYTE *)(a2 + 4) & 0xE;
  if ((*(_BYTE *)(a2 + 4) & 0xE) == 0)
  {
    v10 = 0;
    v25 = 0;
    v15 = 0;
    goto LABEL_30;
  }
  v6 = *(unsigned int *)(*(_QWORD *)(a2 + 8) - 8);
  v24 = 0;
  v25 = 0;
  if (!(_DWORD)v6)
  {
    v14 = 0;
    v10 = 0;
    v15 = 0;
    if (v4 == 8)
    {
LABEL_29:
      v16 = 0;
      v24 = 0;
      v25 = 0;
      *(_QWORD *)a3 = v14;
LABEL_31:
      *(_QWORD *)(a3 + 8) = v15;
      goto LABEL_32;
    }
LABEL_30:
    v16 = 0;
    v24 = 0;
    v25 = 0;
    *(_QWORD *)a3 = v10;
    goto LABEL_31;
  }
  if (v6 >> 29 || (WTF::tryFastMalloc((WTF *)(8 * v6)), !v27))
  {
    JSC::throwTypeError();
  }
  else
  {
    LODWORD(v25) = v6;
    v24 = v27;
    if ((*(_BYTE *)(a2 + 4) & 0xE) == 8)
    {
      v8 = 0;
      while (1)
      {
        v9 = *(_QWORD *)(*(_QWORD *)(a2 + 8) + v8) ? *(_QWORD *)(*(_QWORD *)(a2 + 8) + v8) : 10;
        WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLObject>::convert((uint64_t)&v26, (uint64_t)a1, v9, (uint64_t)&v24);
        if (*((_DWORD *)v26 + 20))
        {
          if ((JSC::VM::hasExceptionsAfterHandlingTraps(v26) & 1) != 0)
            break;
        }
        v8 += 8;
        if (8 * v6 == v8)
        {
          v14 = v24;
          v15 = v25;
          goto LABEL_29;
        }
      }
    }
    else
    {
      v11 = 0;
      while (1)
      {
        DirectIndex = JSC::JSObject::getDirectIndex((JSC::JSObject *)a2, (JSC::JSGlobalObject *)a1, v11);
        if (*((_DWORD *)v26 + 20))
        {
          if ((JSC::VM::hasExceptionsAfterHandlingTraps(v26) & 1) != 0)
            break;
        }
        v13 = DirectIndex ? DirectIndex : 10;
        WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLObject>::convert((uint64_t)&v26, (uint64_t)a1, v13, (uint64_t)&v24);
        if (*((_DWORD *)v26 + 20))
        {
          if ((JSC::VM::hasExceptionsAfterHandlingTraps(v26) & 1) != 0)
            break;
        }
        v11 = (v11 + 1);
        if ((_DWORD)v6 == (_DWORD)v11)
        {
          v10 = v24;
          v15 = v25;
          goto LABEL_30;
        }
      }
    }
  }
  v16 = 1;
LABEL_32:
  *(_DWORD *)(a3 + 16) = v16;
  result = v24;
  if (!HIDWORD(v25))
  {
    if (!v24)
      return result;
LABEL_44:
    v24 = 0;
    LODWORD(v25) = 0;
    return (WTF *)WTF::fastFree(result, (void *)a2);
  }
  v18 = 8 * HIDWORD(v25);
  do
  {
    v19 = *(_QWORD *)result;
    if (*(_QWORD *)result)
    {
      v20 = (uint64_t *)(v19 - 16);
      v21 = *(_QWORD *)(((v19 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
      v22 = *(uint64_t **)(v19 - 8);
      if (v22)
      {
        v23 = *v20;
        *v22 = *v20;
        *(_QWORD *)(v23 + 8) = v22;
        *v20 = 0;
        v20[1] = 0;
      }
      *v20 = *(_QWORD *)(v21 + 40);
      *(_QWORD *)(v21 + 40) = v20;
      *(_QWORD *)result = 0;
    }
    result = (WTF *)((char *)result + 8);
    v18 -= 8;
  }
  while (v18);
  result = v24;
  if (v24)
    goto LABEL_44;
  return result;
}

uint64_t JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLObject>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<JSC::Strong<JSC::JSObject,(JSC::ShouldStrongDestructorGrabLock)0>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t result;
  JSValue v8;
  int i;
  unsigned int v10;
  uint64_t IndexQuickly;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v6 = *((_QWORD *)a1 + 7);
  result = JSC::getIterationMode();
  if ((_DWORD)result == 2)
  {
    for (i = 1; ; ++i)
    {
      v10 = (*(_BYTE *)(a2 + 4) & 0xE) != 0 ? *(_DWORD *)(*(_QWORD *)(a2 + 8) - 8) : 0;
      if (i - 1 >= v10)
        break;
      IndexQuickly = JSC::JSObject::tryGetIndexQuickly((JSC::JSObject *)a2, i - 1, 0);
      if (!IndexQuickly)
        IndexQuickly = JSC::JSObject::get((JSC::JSObject *)a2, a1, (i - 1));
      if (*(_DWORD *)(v6 + 80))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6);
        if ((result & 1) != 0)
          break;
      }
      v16 = v6;
      result = WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLObject>::convert((uint64_t)&v16, (uint64_t)a1, IndexQuickly, *a3);
      if (*(_QWORD *)(v6 + 16))
      {
        v14 = JSC::JSArrayIterator::create();
        v15 = i | 0xFFFE000000000000;
        if (i < 0)
          v15 = COERCE__INT64((double)i) + 0x2000000000000;
        *(_QWORD *)(v14 + 16) = v15;
        return JSC::iteratorClose();
      }
    }
  }
  else
  {
    JSC::iteratorForIterable(a1, (JSC::JSGlobalObject *)a2, v8);
    if (!*(_DWORD *)(v6 + 80) || (result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6), (result & 1) == 0))
    {
      while (1)
      {
        result = JSC::iteratorStep();
        if (*(_QWORD *)(v6 + 16) || result == 6)
          break;
        v13 = JSC::iteratorValue();
        if (*(_DWORD *)(v6 + 80))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6);
          if ((result & 1) != 0)
            break;
        }
        v16 = v6;
        WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLObject>::convert((uint64_t)&v16, (uint64_t)a1, v13, *a3);
        if (*(_QWORD *)(v6 + 16))
          return JSC::iteratorClose();
      }
    }
  }
  return result;
}

uint64_t WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLObject>::convert(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  int v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _DWORD *v33;
  uint64_t *v34;
  uint64_t *v35;
  int v36;

  result = WebCore::Converter<WebCore::IDLObject>::convert<WebCore::DefaultExceptionThrower>(a2, a3, (uint64_t)&v35);
  v6 = v36;
  if (v36)
    goto LABEL_21;
  v34 = 0;
  v7 = v35;
  if (!v35)
  {
    v12 = (_DWORD *)(a4 + 12);
    v21 = *(unsigned int *)(a4 + 12);
    if ((_DWORD)v21 == *(_DWORD *)(a4 + 8))
      goto LABEL_8;
    v10 = 0;
    *(_QWORD *)(*(_QWORD *)a4 + 8 * v21) = 0;
LABEL_15:
    *v12 = v21 + 1;
    goto LABEL_16;
  }
  v8 = *(_QWORD *)(((unint64_t)(v35 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
  v9 = *(_QWORD **)(v8 + 40);
  if (v9)
  {
    *(_QWORD *)(v8 + 40) = *v9;
    v9[2] = 0;
    v10 = v9 + 2;
    *v9 = 0;
    v9[1] = 0;
    v34 = v9 + 2;
  }
  else
  {
    result = JSC::HandleSet::grow(*(JSC::HandleSet **)(((unint64_t)(v35 - 2) & 0xFFFFFFFFFFFFF000) + 0x10));
    v28 = *(_QWORD **)(v8 + 40);
    v7 = v35;
    *(_QWORD *)(v8 + 40) = *v28;
    *v28 = 0;
    v28[1] = 0;
    v28[2] = 0;
    v10 = v28 + 2;
    v34 = v28 + 2;
    if (!v7)
    {
      v11 = 0;
      goto LABEL_7;
    }
  }
  v11 = *v7;
  if (*v7)
  {
    v26 = *(_QWORD **)(((unint64_t)(v10 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
    v27 = v26[3];
    v26 += 3;
    *(v10 - 2) = v27;
    *(v10 - 1) = (uint64_t)v26;
    *v26 = v10 - 2;
    *(_QWORD *)(v27 + 8) = v10 - 2;
  }
LABEL_7:
  *v10 = v11;
  v12 = (_DWORD *)(a4 + 12);
  v13 = *(unsigned int *)(a4 + 12);
  if ((_DWORD)v13 != *(_DWORD *)(a4 + 8))
  {
    v14 = *(_QWORD *)a4;
    *(_QWORD *)(*(_QWORD *)a4 + 8 * v13) = 0;
    v15 = *(_QWORD *)(((unint64_t)(v10 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
    v16 = *(_QWORD *)(v15 + 40);
    if (!v16)
    {
      v32 = v14;
      v33 = v12;
      v31 = v13;
      result = JSC::HandleSet::grow(*(JSC::HandleSet **)(((unint64_t)(v10 - 2) & 0xFFFFFFFFFFFFF000) + 0x10));
      v13 = v31;
      v14 = v32;
      v12 = v33;
      v16 = *(_QWORD *)(v15 + 40);
    }
    *(_QWORD *)(v15 + 40) = *(_QWORD *)v16;
    *(_QWORD *)(v16 + 16) = 0;
    v17 = (_QWORD *)(v16 + 16);
    *(_QWORD *)v16 = 0;
    *(_QWORD *)(v16 + 8) = 0;
    *(_QWORD *)(v14 + 8 * v13) = v16 + 16;
    v18 = *v10;
    if ((*v10 != 0) != (*(_QWORD *)(v16 + 16) != 0))
    {
      if (v18)
      {
        v19 = *(unint64_t **)((v16 & 0xFFFFFFFFFFFFF000) + 0x10);
        v20 = v19[3];
        v19 += 3;
        *(_QWORD *)v16 = v20;
        *(_QWORD *)(v16 + 8) = v19;
        *v19 = v16;
        *(_QWORD *)(v20 + 8) = v16;
      }
      else
      {
        v30 = *(_QWORD *)v16;
        v29 = *(_QWORD **)(v16 + 8);
        *v29 = *(_QWORD *)v16;
        *(_QWORD *)(v30 + 8) = v29;
        *(_QWORD *)v16 = 0;
        *(_QWORD *)(v16 + 8) = 0;
        v17 = *(_QWORD **)(v14 + 8 * v13);
      }
    }
    *v17 = v18;
    LODWORD(v21) = *v12;
    goto LABEL_15;
  }
LABEL_8:
  result = WTF::Vector<JSC::Strong<JSC::JSObject,(JSC::ShouldStrongDestructorGrabLock)0>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::Strong<JSC::JSObject,(JSC::ShouldStrongDestructorGrabLock)0>>(a4, (unint64_t)&v34);
  v10 = v34;
LABEL_16:
  if (v10)
  {
    v22 = v10 - 2;
    v23 = *(_QWORD *)(((unint64_t)(v10 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
    v24 = (uint64_t *)*(v10 - 1);
    if (v24)
    {
      v25 = *v22;
      *v24 = *v22;
      *(_QWORD *)(v25 + 8) = v24;
      *v22 = 0;
      *(v10 - 1) = 0;
    }
    *v22 = *(_QWORD *)(v23 + 40);
    *(_QWORD *)(v23 + 40) = v22;
  }
  v6 = v36;
LABEL_21:
  if (v6 != -1)
    return ((uint64_t (*)(uint64_t **, uint64_t **))off_1E3264CF8[v6])(&v34, &v35);
  return result;
}

uint64_t WTF::Vector<JSC::Strong<JSC::JSObject,(JSC::ShouldStrongDestructorGrabLock)0>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::Strong<JSC::JSObject,(JSC::ShouldStrongDestructorGrabLock)0>>(uint64_t a1, unint64_t a2)
{
  char *v3;
  uint64_t v4;
  char *v5;
  JSC::HandleSet *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  JSC::HandleSet *v17;
  char *v18;
  char *v19;

  v3 = WTF::Vector<WTF::Ref<WebCore::AcceleratedEffect,WTF::RawPtrTraits<WebCore::AcceleratedEffect>,WTF::DefaultRefDerefTraits<WebCore::AcceleratedEffect>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((char **)a1, *(unsigned int *)(a1 + 12) + 1, a2);
  v4 = *(unsigned int *)(a1 + 12);
  v5 = *(char **)a1;
  *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = 0;
  if (*(_QWORD *)v3)
  {
    v6 = *(JSC::HandleSet **)(((*(_QWORD *)v3 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
    v7 = (_QWORD *)*((_QWORD *)v6 + 5);
    if (!v7)
    {
      v18 = v5;
      v19 = v3;
      v16 = v4;
      v17 = *(JSC::HandleSet **)(((*(_QWORD *)v3 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
      JSC::HandleSet::grow(v6);
      v6 = v17;
      v5 = v18;
      v4 = v16;
      v3 = v19;
      v7 = (_QWORD *)*((_QWORD *)v17 + 5);
    }
    *((_QWORD *)v6 + 5) = *v7;
    v7[2] = 0;
    v8 = v7 + 2;
    *v7 = 0;
    v7[1] = 0;
    *(_QWORD *)&v5[8 * v4] = v7 + 2;
    v9 = *(_QWORD **)v3;
    if (*(_QWORD *)v3)
      v9 = (_QWORD *)*v9;
    v10 = (unint64_t)(v8 - 2);
    if ((v9 != 0) != (*v8 != 0))
    {
      if (v9)
      {
        v11 = *(unint64_t **)((v10 & 0xFFFFFFFFFFFFF000) + 0x10);
        v12 = v11[3];
        v11 += 3;
        *(_QWORD *)v10 = v12;
        *(v8 - 1) = v11;
        *v11 = v10;
        *(_QWORD *)(v12 + 8) = v10;
      }
      else
      {
        v15 = *(_QWORD *)v10;
        v14 = (_QWORD *)*(v8 - 1);
        *v14 = *(_QWORD *)v10;
        *(_QWORD *)(v15 + 8) = v14;
        *(_QWORD *)v10 = 0;
        *(_QWORD *)(v10 + 8) = 0;
        v8 = *(_QWORD **)&v5[8 * v4];
      }
    }
    *v8 = v9;
    LODWORD(v4) = *(_DWORD *)(a1 + 12);
  }
  *(_DWORD *)(a1 + 12) = v4 + 1;
  return 1;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorIN3JSC6StrongINSA_8JSObjectELNSA_30ShouldStrongDestructorGrabLockE0EEELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSL_1EJSH_SJ_EEEEEEDcSN_DpT0_(uint64_t a1, WTF **a2)
{
  uint64_t v2;
  WTF *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;

  v2 = *((unsigned int *)a2 + 3);
  result = *a2;
  if (!(_DWORD)v2)
  {
    if (!result)
      return result;
LABEL_11:
    *a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  v4 = 8 * v2;
  do
  {
    v5 = *(_QWORD *)result;
    if (*(_QWORD *)result)
    {
      v6 = (uint64_t *)(v5 - 16);
      v7 = *(_QWORD *)(((v5 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
      v8 = *(uint64_t **)(v5 - 8);
      if (v8)
      {
        v9 = *v6;
        *v8 = *v6;
        *(_QWORD *)(v9 + 8) = v8;
        *v6 = 0;
        v6[1] = 0;
      }
      *v6 = *(_QWORD *)(v7 + 40);
      *(_QWORD *)(v7 + 40) = v6;
      *(_QWORD *)result = 0;
    }
    result = (WTF *)((char *)result + 8);
    v4 -= 8;
  }
  while (v4);
  result = *a2;
  if (*a2)
    goto LABEL_11;
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF *v2;
  uint64_t *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;

  v2 = *(WTF **)a2;
  *(_QWORD *)a2 = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = (uint64_t *)*((_QWORD *)v2 + 2);
      *((_QWORD *)v2 + 2) = 0;
      if (v3)
      {
        if (*v3)
          WTF::HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>>::deallocateTable(*v3, a2);
        WTF::fastFree((WTF *)v3, a2);
      }
      v4 = (unsigned int *)*((_QWORD *)v2 + 1);
      *((_QWORD *)v2 + 1) = 0;
      if (v4)
      {
        do
        {
          v5 = __ldaxr(v4);
          v6 = v5 - 1;
        }
        while (__stlxr(v6, v4));
        if (!v6)
        {
          atomic_store(1u, v4);
          WTF::fastFree((WTF *)v4, a2);
        }
      }
      WTF::fastFree(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WindowProxyENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore31JSRequestAnimationFrameCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WebKitPointENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF **a2)
{
  WTF *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
      return (WTF *)WTF::fastFree(result, a2);
    else
      --*(_DWORD *)result;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11WebKitPointENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

unint64_t WebCore::toJS<WebCore::IDLUnsignedLong,WebCore::ExceptionOr<int>>(JSC *a1, JSC::VM **a2, unsigned int *a3)
{
  unsigned int v3;
  uint64_t v4;
  WTF::StringImpl *v7;
  uint64_t v8;
  unsigned __int8 v9[8];
  WTF::StringImpl *v10;

  v3 = a3[4];
  if (v3)
  {
    if (v3 == 1)
    {
      v9[0] = *(_BYTE *)a3;
      v7 = (WTF::StringImpl *)*((_QWORD *)a3 + 1);
      *((_QWORD *)a3 + 1) = 0;
      v10 = v7;
      if (!*((_QWORD *)*a2 + 2))
      {
        WebCore::propagateExceptionSlowPath(a1, a2, v9);
        v7 = v10;
      }
      v10 = 0;
      if (v7)
      {
        if (*(_DWORD *)v7 == 2)
          WTF::StringImpl::destroy(v7, (WTF::StringImpl *)a2);
        else
          *(_DWORD *)v7 -= 2;
      }
      return 0;
    }
    else
    {
      v8 = std::__throw_bad_variant_access[abi:sn180100]();
      return WebCore::IDLOperation<WebCore::JSDOMWindow>::call<&WebCore::jsDOMWindowInstanceFunction_cancelAnimationFrameBody,(WebCore::CastedThisErrorBehavior)0>(v8);
    }
  }
  else
  {
    v4 = *a3;
    if ((v4 & 0x80000000) != 0)
      return COERCE__INT64((double)v4) + 0x2000000000000;
    else
      return v4 | 0xFFFE000000000000;
  }
}

_BYTE *WebCore::IDLOperation<WebCore::JSDOMWindow>::call<&WebCore::jsDOMWindowInstanceFunction_cancelAnimationFrameBody,(WebCore::CastedThisErrorBehavior)0>(uint64_t a1, JSC::JSGlobalObject *a2)
{
  WTF::StringImpl **v4;
  WebCore::JSDOMWindow *v5;
  uint64_t v7;

  v7 = *(_QWORD *)(a1 + 56);
  v4 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)a1, (uint64_t)a2);
  if (v4)
    return (_BYTE *)WebCore::jsDOMWindowInstanceFunction_cancelAnimationFrameBody((WTF::StringImpl **)a1, a2, v4, v5);
  else
    return WebCore::throwThisTypeError(a1, (int)&v7, "Window", "cancelAnimationFrame");
}

uint64_t WebCore::jsDOMWindowInstanceFunction_cancelAnimationFrameBody(WTF::StringImpl **this, JSC::JSGlobalObject *a2, WTF::StringImpl **a3, WebCore::JSDOMWindow *a4)
{
  JSC::VM *v7;
  WebCore::LocalDOMWindow *v8;
  JSValue v10;
  unsigned int v11[2];
  JSC::VM *v12;

  v7 = this[7];
  v12 = v7;
  if (this != a3
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, a3[426], 2))
  {
    return 10;
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v10.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, a2);
    return JSC::VM::throwException(v7, (JSC::JSGlobalObject *)this, v10);
  }
  else
  {
    v8 = a3[426];
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>((JSC::JSGlobalObject *)this, *((_QWORD *)a2 + 6), v11);
    if (v11[1])
      return 0;
    else
      return WebCore::toJS<WebCore::IDLUndefined,WebCore::jsDOMWindowInstanceFunction_cancelAnimationFrameBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSDOMWindow *)::{lambda(void)#1}>((JSC *)this, &v12, v8, v11);
  }
}

uint64_t WebCore::toJS<WebCore::IDLUndefined,WebCore::jsDOMWindowInstanceFunction_cancelAnimationFrameBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSDOMWindow *)::{lambda(void)#1}>(JSC *a1, JSC::VM **a2, WebCore::LocalDOMWindow *a3, unsigned int *a4)
{
  WTF::StringImpl *v6;
  uint64_t v7;
  WTF::StringImpl *v9;
  unsigned __int8 v10[8];
  WTF::StringImpl *v11;
  unsigned int v12;
  WTF::StringImpl *v13;
  char v14;

  WebCore::jsDOMWindowInstanceFunction_cancelAnimationFrameBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSDOMWindow *)::{lambda(void)#1}::operator()(&v12, a3, a4);
  if (v14)
  {
    v10[0] = v12;
    v9 = v13;
    v13 = 0;
    v11 = v9;
    if (!*((_QWORD *)*a2 + 2))
    {
      WebCore::propagateExceptionSlowPath(a1, a2, v10);
      v9 = v11;
    }
    v11 = 0;
    if (v9)
    {
      if (*(_DWORD *)v9 == 2)
        WTF::StringImpl::destroy(v9, v6);
      else
        *(_DWORD *)v9 -= 2;
    }
    v7 = 0;
  }
  else
  {
    v7 = 10;
  }
  WebCore::ExceptionOr<void>::~ExceptionOr((uint64_t)&v12, v6);
  return v7;
}

unsigned int *WebCore::jsDOMWindowInstanceFunction_cancelAnimationFrameBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSDOMWindow *)::{lambda(void)#1}::operator()(unsigned int *result, WebCore::LocalDOMWindow *a2, unsigned int *a3)
{
  unsigned int *v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t *v7;

  if (a3[1])
  {
    v6 = std::__throw_bad_variant_access[abi:sn180100]();
    return (unsigned int *)_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore19CSSStyleDeclarationENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(v6, v7);
  }
  else
  {
    v3 = result;
    if (!a2 || *((_BYTE *)a2 + 56))
    {
      *((_QWORD *)result + 1) = 0;
      v5 = 1;
      v4 = 14;
    }
    else
    {
      result = WebCore::LocalDOMWindow::cancelAnimationFrame(a2, (WebCore::Document *)*a3);
      v4 = 0;
      v5 = 0;
      *(_QWORD *)v3 = 0;
      *((_QWORD *)v3 + 1) = 0;
      *((_QWORD *)v3 + 2) = 0;
    }
    *(_BYTE *)v3 = v4;
    *((_BYTE *)v3 + 16) = v5;
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore19CSSStyleDeclarationENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  *a2 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 24))(result);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore19CSSStyleDeclarationENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_BYTE *WebCore::IDLOperation<WebCore::JSDOMWindow>::call<&WebCore::jsDOMWindowInstanceFunction_matchMediaBody,(WebCore::CastedThisErrorBehavior)0>(uint64_t a1, JSC::JSGlobalObject *a2)
{
  WTF::StringImpl **v4;
  WebCore::JSDOMWindow *v5;
  uint64_t v7;

  v7 = *(_QWORD *)(a1 + 56);
  v4 = (WTF::StringImpl **)WebCore::IDLOperation<WebCore::JSDOMWindow>::cast((unsigned __int8 *)a1, (uint64_t)a2);
  if (v4)
    return (_BYTE *)WebCore::jsDOMWindowInstanceFunction_matchMediaBody((WTF::StringImpl **)a1, a2, v4, v5);
  else
    return WebCore::throwThisTypeError(a1, (int)&v7, "Window", "matchMedia");
}

uint64_t WebCore::jsDOMWindowInstanceFunction_matchMediaBody(WTF::StringImpl **this, JSC::JSGlobalObject *a2, WTF::StringImpl **a3, WebCore::JSDOMWindow *a4)
{
  JSC::VM *v7;
  WebCore::LocalDOMWindow *v8;
  int v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  JSValue v16;
  WTF::StringImpl *v17;
  _BYTE v18[16];
  int v19;
  WTF::StringImpl *v20;
  int v21;
  JSC::VM *v22;
  char v23;

  v7 = this[7];
  v22 = v7;
  if (this != a3
    && !WebCore::BindingSecurity::shouldAllowAccessToDOMWindow((WTF::StringImpl *)this, a3[426], 2))
  {
    return 10;
  }
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v16.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, a2);
    return JSC::VM::throwException(v7, (JSC::JSGlobalObject *)this, v16);
  }
  else
  {
    v8 = a3[426];
    WebCore::valueToUSVString((JSC::JSGlobalObject *)this, *((_QWORD *)a2 + 6), (uint64_t)&v20);
    v9 = v21;
    if (v21)
    {
      v13 = 0;
    }
    else
    {
      v10 = v20;
      v20 = 0;
      v17 = v10;
      WebCore::DOMWindow::matchMedia(v8, (unsigned int **)&v17, (uint64_t)v18);
      WebCore::toJSNewlyCreated<WebCore::IDLInterface<WebCore::MediaQueryList>,WebCore::ExceptionOr<WTF::RefPtr<WebCore::MediaQueryList,WTF::RawPtrTraits<WebCore::MediaQueryList>,WTF::DefaultRefDerefTraits<WebCore::MediaQueryList>>>>((JSC *)this, (WTF::StringImpl *)a3, &v22, (uint64_t)v18);
      v13 = v12;
      if (v19 != -1)
        ((void (*)(char *, _BYTE *))off_1E3264D78[v19])(&v23, v18);
      v19 = -1;
      v14 = v17;
      v17 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v11);
        else
          *(_DWORD *)v14 -= 2;
      }
      v9 = v21;
    }
    if (v9 != -1)
      ((void (*)(_BYTE *, WTF::StringImpl **))off_1E325A258[v9])(v18, &v20);
  }
  return v13;
}

void WebCore::toJSNewlyCreated<WebCore::IDLInterface<WebCore::MediaQueryList>,WebCore::ExceptionOr<WTF::RefPtr<WebCore::MediaQueryList,WTF::RawPtrTraits<WebCore::MediaQueryList>,WTF::DefaultRefDerefTraits<WebCore::MediaQueryList>>>>(JSC *a1, WTF::StringImpl *a2, JSC::VM **a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  _DWORD *v7;
  uint64_t v8;
  WTF::StringImpl *v9;

  v4 = *(_DWORD *)(a4 + 16);
  if (v4)
  {
    if (v4 == 1)
    {
      LOBYTE(v8) = *(_BYTE *)a4;
      v6 = *(WTF::StringImpl **)(a4 + 8);
      *(_QWORD *)(a4 + 8) = 0;
      v9 = v6;
      if (!*((_QWORD *)*a3 + 2))
      {
        WebCore::propagateExceptionSlowPath(a1, a3, (unsigned __int8 *)&v8);
        v6 = v9;
      }
      v9 = 0;
      if (v6)
      {
        if (*(_DWORD *)v6 == 2)
          WTF::StringImpl::destroy(v6, a2);
        else
          *(_DWORD *)v6 -= 2;
      }
    }
    else
    {
      v7 = (_DWORD *)std::__throw_bad_variant_access[abi:sn180100]();
      WTF::RefCounted<WebCore::MediaQueryList>::deref(v7);
    }
  }
  else
  {
    v5 = *(_QWORD *)a4;
    *(_QWORD *)a4 = 0;
    v8 = v5;
    WebCore::toJSNewlyCreated((uint64_t)a1, (uint64_t)a2, &v8);
    if (v8)
      WTF::RefCounted<WebCore::MediaQueryList>::deref((_DWORD *)(v8 + 24));
  }
}

void WTF::RefCounted<WebCore::MediaQueryList>::deref(_DWORD *a1)
{
  void *v1;

  if (*a1 == 1)
  {
    WebCore::MediaQueryList::~MediaQueryList((WebCore::MediaQueryList *)(a1 - 6));
    WebCore::MediaQueryList::operator delete(v1);
  }
  else
  {
    --*a1;
  }
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore14MediaQueryListENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *a2 = 0;
  if (v2)
    WTF::RefCounted<WebCore::MediaQueryList>::deref((_DWORD *)(v2 + 24));
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore14MediaQueryListENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_scroll1Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSDOMWindow *a4)
{
  uint64_t v6;
  JSC::VM *v7;
  JSValue v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12[2];
  __int128 v13;
  uint64_t v14;
  _BYTE v15[8];
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  int v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  if (*((_DWORD *)a2 + 8) == 1)
    v6 = 10;
  else
    v6 = *((_QWORD *)a2 + 6);
  v7 = (JSC::VM *)*((_QWORD *)this + 7);
  WebCore::convertDictionary<WebCore::ScrollToOptions>((JSC::JSCell *)v6, (uint64_t)this, (uint64_t)v15);
  if (!v19)
  {
    *(_OWORD *)v12 = v16;
    v13 = v17;
    v14 = v18;
    if (a3 && !*((_BYTE *)a3 + 56))
    {
      WebCore::LocalDOMWindow::scrollTo((uint64_t)a3, (double *)v12, 1, 1, 0, 0);
      return 10;
    }
    LOBYTE(v12[0]) = 14;
    v12[1] = 0;
    if (!*((_QWORD *)v7 + 2))
    {
      v9.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)0xE, (JSC::JSGlobalObject *)&v12[1]);
      JSC::VM::throwException(v7, this, v9);
      v11 = v12[1];
      v12[1] = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v10);
        else
          *(_DWORD *)v11 -= 2;
      }
    }
  }
  return 0;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_scrollTo1Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSDOMWindow *a4)
{
  JSC::VM *v6;
  uint64_t v7;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  JSC::VM *v11;
  WTF::StringImpl *v12[2];
  __int128 v13;
  uint64_t v14;
  _BYTE v15[8];
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  int v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v6 = (JSC::VM *)*((_QWORD *)this + 7);
  v11 = v6;
  if (*((_DWORD *)a2 + 8) == 1)
    v7 = 10;
  else
    v7 = *((_QWORD *)a2 + 6);
  WebCore::convertDictionary<WebCore::ScrollToOptions>((JSC::JSCell *)v7, (uint64_t)this, (uint64_t)v15);
  if (!v19)
  {
    *(_OWORD *)v12 = v16;
    v13 = v17;
    v14 = v18;
    if (a3 && !*((_BYTE *)a3 + 56))
    {
      WebCore::LocalDOMWindow::scrollTo((uint64_t)a3, (double *)v12, 1, 1, 0, 0);
      return 10;
    }
    LOBYTE(v12[0]) = 14;
    v12[1] = 0;
    if (!*((_QWORD *)v6 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v11, (unsigned __int8 *)v12);
      v10 = v12[1];
      v12[1] = 0;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, v9);
        else
          *(_DWORD *)v10 -= 2;
      }
    }
  }
  return 0;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_scrollTo2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSDOMWindow *a4)
{
  uint64_t v7;
  unint64_t v8;
  double v9;
  unint64_t v10;
  JSC::VM *v11;
  double v12;
  JSValue v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  double v17;
  double v18;
  unint64_t v19;
  WTF::StringImpl *v20;
  char v21;
  double v22;
  char v23;

  v7 = *((_QWORD *)this + 7);
  v8 = *((_QWORD *)a2 + 6);
  v19 = v8;
  if (v8 >= 0xFFFE000000000000)
  {
    v9 = (double)(int)v8;
  }
  else if (v8 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v19, this);
    v9 = v17;
  }
  else
  {
    *(_QWORD *)&v9 = v8 - 0x2000000000000;
  }
  if (*(_DWORD *)(v7 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v7))
    return 0;
  v10 = *((_QWORD *)a2 + 7);
  v19 = v10;
  v11 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v10 >= 0xFFFE000000000000)
  {
    v12 = (double)(int)v10;
  }
  else if (v10 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v19, this);
    v12 = v18;
  }
  else
  {
    *(_QWORD *)&v12 = v10 - 0x2000000000000;
  }
  if (!*((_DWORD *)v11 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v11))
  {
    if (a3 && !*((_BYTE *)a3 + 56))
    {
      LOWORD(v19) = 256;
      v20 = *(WTF::StringImpl **)&v9;
      v21 = 1;
      v22 = v12;
      v23 = 1;
      WebCore::LocalDOMWindow::scrollTo((uint64_t)a3, (double *)&v19, 1, 1, 0, 0);
      return 10;
    }
    LOBYTE(v19) = 14;
    v20 = 0;
    if (!*(_QWORD *)(v7 + 16))
    {
      v14.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)0xE, (JSC::JSGlobalObject *)&v20);
      JSC::VM::throwException((JSC::VM *)v7, this, v14);
      v16 = v20;
      v20 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v15);
        else
          *(_DWORD *)v16 -= 2;
      }
    }
  }
  return 0;
}

uint64_t WebCore::jsDOMWindowInstanceFunction_scrollBy1Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSDOMWindow *a4)
{
  uint64_t v6;
  JSC::VM *v7;
  JSValue v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12[2];
  __int128 v13;
  uint64_t v14;
  _BYTE v15[8];
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  int v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  if (*((_DWORD *)a2 + 8) == 1)
    v6 = 10;
  else
    v6 = *((_QWORD *)a2 + 6);
  v7 = (JSC::VM *)*((_QWORD *)this + 7);
  WebCore::convertDictionary<WebCore::ScrollToOptions>((JSC::JSCell *)v6, (uint64_t)this, (uint64_t)v15);
  if (!v19)
  {
    *(_OWORD *)v12 = v16;
    v13 = v17;
    v14 = v18;
    if (a3 && !*((_BYTE *)a3 + 56))
    {
      WebCore::LocalDOMWindow::scrollBy(a3, (__int128 *)v12);
      return 10;
    }
    LOBYTE(v12[0]) = 14;
    v12[1] = 0;
    if (!*((_QWORD *)v7 + 2))
    {
      v9.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)0xE, (JSC::JSGlobalObject *)&v12[1]);
      JSC::VM::throwException(v7, this, v9);
      v11 = v12[1];
      v12[1] = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v10);
        else
          *(_DWORD *)v11 -= 2;
      }
    }
  }
  return 0;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJPN7WebCore12DOMSelectionENS8_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WebCore::ScheduledAction **std::unique_ptr<WebCore::ScheduledAction>::~unique_ptr[abi:sn180100](WebCore::ScheduledAction **a1, WTF::StringImpl *a2)
{
  WebCore::ScheduledAction *v3;
  WTF *v4;
  void *v5;

  v3 = *a1;
  *a1 = 0;
  if (v3)
  {
    WebCore::ScheduledAction::~ScheduledAction(v3, a2);
    WTF::fastFree(v4, v5);
  }
  return a1;
}

WTF **WTF::FixedVector<JSC::Strong<JSC::Unknown,(JSC::ShouldStrongDestructorGrabLock)0>>::~FixedVector(WTF **a1, void *a2)
{
  WTF *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;

  v3 = *a1;
  *a1 = 0;
  if (v3)
  {
    v4 = (uint64_t *)((char *)v3 + 8);
    v5 = *(unsigned int *)v3;
    if ((_DWORD)v5)
    {
      v6 = 8 * v5;
      do
      {
        v7 = *v4;
        if (*v4)
        {
          v8 = (uint64_t *)(v7 - 16);
          v9 = *(_QWORD *)(((v7 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
          v10 = *(uint64_t **)(v7 - 8);
          if (v10)
          {
            v11 = *v8;
            *v10 = *v8;
            *(_QWORD *)(v11 + 8) = v10;
            *v8 = 0;
            v8[1] = 0;
          }
          *v8 = *(_QWORD *)(v9 + 40);
          *(_QWORD *)(v9 + 40) = v8;
          *v4 = 0;
        }
        ++v4;
        v6 -= 8;
      }
      while (v6);
    }
    WTF::fastFree(v3, a2);
  }
  return a1;
}

uint64_t WebCore::Converter<WebCore::IDLScheduledAction>::convert@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t *v6;
  unsigned int v7;
  _DWORD *v8;
  unint64_t v9;
  uint64_t *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t result;
  JSC::HandleSet *v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  JSC::VM *v30;
  uint64_t v31;
  WTF::StringImpl *v32;
  WebCore::ScheduledAction *v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  WTF::StringImpl *v44;
  WebCore::ScheduledAction *v45;
  WTF::StringImpl *v46;
  int v47;

  v6 = *(unint64_t **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    goto LABEL_17;
  v7 = *(unsigned __int8 *)(a2 + 5);
  if (v7 < 0x17)
    goto LABEL_17;
  if ((v7 & 0xFE) == 0x1A)
    goto LABEL_4;
  if ((*(_BYTE *)(a2 + 6) & 4) == 0)
    goto LABEL_17;
  v25 = *(unint64_t **)(a1 + 56);
  v43 = a1;
  v26 = a2;
  v27 = a3;
  v28 = a4;
  (*(void (**)(WTF::StringImpl **__return_ptr, unint64_t))(16
                                                                           * *(unsigned int *)(16
                                                                                             * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                             + 0x4C)
                                                                           + 0x38))(&v46, a2);
  a1 = v43;
  a4 = v28;
  a3 = v27;
  v6 = v25;
  a2 = v26;
  if ((_BYTE)v46)
  {
LABEL_4:
    v8 = *(_DWORD **)(a3 + 3320);
    v9 = v6[89];
    if (!v9)
    {
      v23 = v6;
      v24 = a2;
      JSC::HandleSet::grow((JSC::HandleSet *)(v6 + 84));
      v6 = v23;
      a2 = v24;
      v9 = v23[89];
    }
    v6[89] = *(_QWORD *)v9;
    *(_QWORD *)(v9 + 16) = 0;
    v10 = (uint64_t *)(v9 + 16);
    *(_QWORD *)v9 = 0;
    *(_QWORD *)(v9 + 8) = 0;
    v11 = *(unint64_t **)((v9 & 0xFFFFFFFFFFFFF000) + 0x10);
    v12 = v11[3];
    v11 += 3;
    *(_QWORD *)v9 = v12;
    *(_QWORD *)(v9 + 8) = v11;
    *v11 = v9;
    *(_QWORD *)(v12 + 8) = v9;
    *(_QWORD *)(v9 + 16) = a2;
    result = WTF::fastMalloc((WTF *)0x28);
    ++*v8;
    *(_QWORD *)result = v8;
    *(_QWORD *)(result + 8) = 0;
    v14 = *(JSC::HandleSet **)((v9 & 0xFFFFFFFFFFFFF000) + 0x10);
    v15 = *((_QWORD *)v14 + 5);
    if (!v15)
    {
      v42 = result;
      JSC::HandleSet::grow(v14);
      result = v42;
      v15 = *((_QWORD *)v14 + 5);
    }
    *((_QWORD *)v14 + 5) = *(_QWORD *)v15;
    *(_QWORD *)(v15 + 16) = 0;
    v16 = (_QWORD *)(v15 + 16);
    *(_QWORD *)v15 = 0;
    *(_QWORD *)(v15 + 8) = 0;
    *(_QWORD *)(result + 8) = v15 + 16;
    v17 = *v10;
    if ((*v10 != 0) != (*(_QWORD *)(v15 + 16) != 0))
    {
      if (v17)
      {
        v18 = *(unint64_t **)((v15 & 0xFFFFFFFFFFFFF000) + 0x10);
        v19 = v18[3];
        v18 += 3;
        *(_QWORD *)v15 = v19;
        *(_QWORD *)(v15 + 8) = v18;
        *v18 = v15;
        *(_QWORD *)(v19 + 8) = v15;
      }
      else
      {
        v37 = *(_QWORD *)v15;
        v36 = *(_QWORD **)(v15 + 8);
        *v36 = *(_QWORD *)v15;
        *(_QWORD *)(v37 + 8) = v36;
        *(_QWORD *)v15 = 0;
        *(_QWORD *)(v15 + 8) = 0;
        v16 = *(_QWORD **)(result + 8);
      }
    }
    *v16 = v17;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)a5 = result;
    *(_DWORD *)(a5 + 8) = 0;
    v20 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF000) + 0x10);
    v21 = *(_QWORD **)(v9 + 8);
    if (v21)
    {
      v22 = *(_QWORD *)v9;
      *v21 = *(_QWORD *)v9;
      *(_QWORD *)(v22 + 8) = v21;
      *(_QWORD *)v9 = 0;
      *(_QWORD *)(v9 + 8) = 0;
    }
    *(_QWORD *)v9 = *(_QWORD *)(v20 + 40);
    *(_QWORD *)(v20 + 40) = v9;
  }
  else
  {
LABEL_17:
    v29 = a3;
    v30 = (JSC::VM *)v6;
    WebCore::TrustedStringConverter<WebCore::IDLStringContextTrustedScriptAdaptor<WebCore::IDLDOMString>>::convert(a1, a2, a4, (uint64_t)&v46);
    if (*((_DWORD *)v30 + 20) && (result = JSC::VM::hasExceptionsAfterHandlingTraps(v30), (_DWORD)result))
    {
      *(_DWORD *)(a5 + 8) = 1;
    }
    else
    {
      if (v47)
      {
        v38 = std::__throw_bad_variant_access[abi:sn180100]();
        return WebCore::TrustedStringConverter<WebCore::IDLStringContextTrustedScriptAdaptor<WebCore::IDLDOMString>>::convert(v38, v39, v40, v41);
      }
      v31 = *(_QWORD *)(v29 + 3320);
      v32 = v46;
      v46 = 0;
      v44 = v32;
      WebCore::ScheduledAction::create(v31, (uint64_t *)&v44, (uint64_t *)&v45);
      v33 = v45;
      v45 = 0;
      *(_QWORD *)a5 = v33;
      *(_DWORD *)(a5 + 8) = 0;
      std::unique_ptr<WebCore::ScheduledAction>::~unique_ptr[abi:sn180100](&v45, v34);
      result = (uint64_t)v44;
      v44 = 0;
      if (result)
      {
        if (*(_DWORD *)result == 2)
          result = WTF::StringImpl::destroy((WTF::StringImpl *)result, v35);
        else
          *(_DWORD *)result -= 2;
      }
    }
    if (v47 != -1)
      return ((uint64_t (*)(WebCore::ScheduledAction **, WTF::StringImpl **))off_1E325A258[v47])(&v45, &v46);
  }
  return result;
}

uint64_t WebCore::TrustedStringConverter<WebCore::IDLStringContextTrustedScriptAdaptor<WebCore::IDLDOMString>>::convert@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  int v6;
  _BYTE v7[8];
  int v8;
  char v9;

  result = WebCore::trustedScriptCompliantString(a1, a2, a3, (uint64_t)v7);
  *(_BYTE *)a4 = 0;
  *(_DWORD *)(a4 + 8) = -1;
  v6 = v8;
  if (v8 != -1)
  {
    result = ((uint64_t (*)(char *, uint64_t, _BYTE *))off_1E3264D18[v8])(&v9, a4, v7);
    *(_DWORD *)(a4 + 8) = v6;
    if (v8 != -1)
      return ((uint64_t (*)(char *, _BYTE *))off_1E325A258[v8])(&v9, v7);
  }
  return result;
}

WTF *WTF::FixedVector<JSC::Strong<JSC::Unknown,(JSC::ShouldStrongDestructorGrabLock)0>>::createWithSizeFromGenerator<WTF::FixedVector<WebCore::VariadicConverter<WebCore::IDLAny>::Item> WebCore::convertVariadicArguments<WebCore::IDLAny>(JSC::JSGlobalObject &,JSC::CallFrame &,unsigned long)::{lambda(unsigned long)#1}>@<X0>(unsigned int a1@<W0>, uint64_t a2@<X1>, WTF **a3@<X8>)
{
  _DWORD *v6;
  WTF *result;
  void *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;

  v6 = (_DWORD *)WTF::fastMalloc((WTF *)(8 * a1 + 8));
  result = (WTF *)WTF::TrailingArray<WTF::EmbeddedFixedVector<JSC::Strong<JSC::Unknown,(JSC::ShouldStrongDestructorGrabLock)0>>,JSC::Strong<JSC::Unknown,(JSC::ShouldStrongDestructorGrabLock)0>>::TrailingArray<WTF::FixedVector<WebCore::VariadicConverter<WebCore::IDLAny>::Item> WebCore::convertVariadicArguments<WebCore::IDLAny>(JSC::JSGlobalObject &,JSC::CallFrame &,unsigned long)::{lambda(unsigned long)#1}>(v6, a1, a2);
  v9 = *(unsigned int *)result;
  if ((_DWORD)v9 != a1)
  {
    if ((_DWORD)v9)
    {
      v10 = (uint64_t *)((char *)result + 8);
      v11 = 8 * v9;
      do
      {
        v12 = *v10;
        if (*v10)
        {
          v13 = (uint64_t *)(v12 - 16);
          v14 = *(_QWORD *)(((v12 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
          v15 = *(uint64_t **)(v12 - 8);
          if (v15)
          {
            v16 = *v13;
            *v15 = *v13;
            *(_QWORD *)(v16 + 8) = v15;
            *v13 = 0;
            v13[1] = 0;
          }
          *v13 = *(_QWORD *)(v14 + 40);
          *(_QWORD *)(v14 + 40) = v13;
          *v10 = 0;
        }
        ++v10;
        v11 -= 8;
      }
      while (v11);
    }
    WTF::fastFree(result, v8);
    result = 0;
  }
  *a3 = result;
  return result;
}

_DWORD *WTF::TrailingArray<WTF::EmbeddedFixedVector<JSC::Strong<JSC::Unknown,(JSC::ShouldStrongDestructorGrabLock)0>>,JSC::Strong<JSC::Unknown,(JSC::ShouldStrongDestructorGrabLock)0>>::TrailingArray<WTF::FixedVector<WebCore::VariadicConverter<WebCore::IDLAny>::Item> WebCore::convertVariadicArguments<WebCore::IDLAny>(JSC::JSGlobalObject &,JSC::CallFrame &,unsigned long)::{lambda(unsigned long)#1}>(_DWORD *a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t **i;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v17;
  char v18;

  *a1 = a2;
  if (a2)
  {
    v5 = 0;
    for (i = (uint64_t **)(a1 + 2); ; ++i)
    {
      WebCore::convertVariadicArguments<WebCore::IDLAny>(JSC::JSGlobalObject &,JSC::CallFrame &,unsigned long)::{lambda(unsigned long)#1}::operator()(a3, v5, (uint64_t)&v17);
      if (!v18)
      {
        *a1 = v5;
        return a1;
      }
      *i = 0;
      v7 = v17;
      if (v17)
        break;
LABEL_13:
      if (++v5 >= (unint64_t)*a1)
        return a1;
    }
    v8 = *(_QWORD *)(((unint64_t)(v17 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
    v9 = *(_QWORD **)(v8 + 40);
    if (v9)
    {
      *(_QWORD *)(v8 + 40) = *v9;
      *v9 = 0;
      v9[1] = 0;
      v9[2] = 0;
      *i = v9 + 2;
    }
    else
    {
      JSC::HandleSet::grow(*(JSC::HandleSet **)(((unint64_t)(v17 - 2) & 0xFFFFFFFFFFFFF000) + 0x10));
      v15 = *(_QWORD **)(v8 + 40);
      v7 = v17;
      *(_QWORD *)(v8 + 40) = *v15;
      *v15 = 0;
      v15[1] = 0;
      v15[2] = 0;
      *i = v15 + 2;
      if (!v7)
      {
        v10 = 0;
        goto LABEL_8;
      }
    }
    v10 = *v7;
LABEL_8:
    JSC::Strong<JSC::Unknown,(JSC::ShouldStrongDestructorGrabLock)0>::set(i, v10);
    if (v18 && v17)
    {
      v11 = v17 - 2;
      v12 = *(_QWORD *)(((unint64_t)(v17 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
      v13 = (uint64_t *)*(v17 - 1);
      if (v13)
      {
        v14 = *v11;
        *v13 = *v11;
        *(_QWORD *)(v14 + 8) = v13;
        *v11 = 0;
        v11[1] = 0;
      }
      *v11 = *(_QWORD *)(v12 + 40);
      *(_QWORD *)(v12 + 40) = v11;
    }
    goto LABEL_13;
  }
  return a1;
}

JSC::VM *WebCore::convertVariadicArguments<WebCore::IDLAny>(JSC::JSGlobalObject &,JSC::CallFrame &,unsigned long)::{lambda(unsigned long)#1}::operator()@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  JSC::VM *result;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  char v16;

  WebCore::VariadicConverter<WebCore::IDLAny>::convert(*(_QWORD *)a1, *(_QWORD *)(*(_QWORD *)(a1 + 8)+ ((uint64_t)(((unint64_t)(**(_DWORD **)(a1 + 16) + a2) << 32) + 0x600000000) >> 29)), (uint64_t)&v15);
  result = **(JSC::VM ***)(a1 + 24);
  if (*((_DWORD *)result + 20))
  {
    result = (JSC::VM *)JSC::VM::hasExceptionsAfterHandlingTraps(result);
    if ((_DWORD)result)
    {
      *(_BYTE *)a3 = 0;
      *(_BYTE *)(a3 + 8) = 0;
      goto LABEL_9;
    }
  }
  *(_BYTE *)a3 = 0;
  *(_BYTE *)(a3 + 8) = 0;
  if (v16)
  {
    *(_QWORD *)a3 = 0;
    v6 = v15;
    if (!v15)
    {
LABEL_8:
      *(_BYTE *)(a3 + 8) = 1;
      goto LABEL_9;
    }
    v7 = *(_QWORD *)(((unint64_t)(v15 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
    v8 = *(_QWORD **)(v7 + 40);
    if (v8)
    {
      *(_QWORD *)(v7 + 40) = *v8;
      *v8 = 0;
      v8[1] = 0;
      v8[2] = 0;
      *(_QWORD *)a3 = v8 + 2;
    }
    else
    {
      JSC::HandleSet::grow(*(JSC::HandleSet **)(((unint64_t)(v15 - 2) & 0xFFFFFFFFFFFFF000) + 0x10));
      v14 = *(_QWORD **)(v7 + 40);
      v6 = v15;
      *(_QWORD *)(v7 + 40) = *v14;
      *v14 = 0;
      v14[1] = 0;
      v14[2] = 0;
      *(_QWORD *)a3 = v14 + 2;
      if (!v6)
      {
        v9 = 0;
        goto LABEL_7;
      }
    }
    v9 = *v6;
LABEL_7:
    result = (JSC::VM *)JSC::Strong<JSC::Unknown,(JSC::ShouldStrongDestructorGrabLock)0>::set((uint64_t **)a3, v9);
    goto LABEL_8;
  }
LABEL_9:
  if (v16 && v15)
  {
    v10 = v15 - 2;
    v11 = *(_QWORD *)(((unint64_t)(v15 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
    v12 = (uint64_t *)*(v15 - 1);
    if (v12)
    {
      v13 = *v10;
      *v12 = *v10;
      *(_QWORD *)(v13 + 8) = v12;
      *v10 = 0;
      v10[1] = 0;
    }
    *v10 = *(_QWORD *)(v11 + 40);
    *(_QWORD *)(v11 + 40) = v10;
  }
  return result;
}

uint64_t **WebCore::VariadicConverter<WebCore::IDLAny>::convert@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  unint64_t *v7;
  unint64_t v8;
  JSC::HandleSet *v9;
  _QWORD *v10;
  uint64_t **result;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  JSC::HandleSet *v16;

  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(v4 + 712);
  if (!v5)
  {
    v15 = a2;
    JSC::HandleSet::grow((JSC::HandleSet *)(v4 + 672));
    a2 = v15;
    v5 = *(_QWORD *)(v4 + 712);
  }
  *(_QWORD *)(v4 + 712) = *(_QWORD *)v5;
  *(_QWORD *)(v5 + 16) = 0;
  v6 = (uint64_t *)(v5 + 16);
  *(_QWORD *)v5 = 0;
  *(_QWORD *)(v5 + 8) = 0;
  if (a2 && (a2 & 0xFFFE000000000002) == 0)
  {
    v7 = *(unint64_t **)((v5 & 0xFFFFFFFFFFFFF000) + 0x10);
    v8 = v7[3];
    v7 += 3;
    *(_QWORD *)v5 = v8;
    *(_QWORD *)(v5 + 8) = v7;
    *v7 = v5;
    *(_QWORD *)(v8 + 8) = v5;
  }
  *v6 = a2;
  v9 = *(JSC::HandleSet **)((v5 & 0xFFFFFFFFFFFFF000) + 0x10);
  v10 = (_QWORD *)*((_QWORD *)v9 + 5);
  if (!v10)
  {
    v16 = *(JSC::HandleSet **)((v5 & 0xFFFFFFFFFFFFF000) + 0x10);
    JSC::HandleSet::grow(v9);
    v9 = v16;
    v10 = (_QWORD *)*((_QWORD *)v16 + 5);
  }
  *((_QWORD *)v9 + 5) = *v10;
  *v10 = 0;
  v10[1] = 0;
  v10[2] = 0;
  *(_QWORD *)a3 = v10 + 2;
  result = JSC::Strong<JSC::Unknown,(JSC::ShouldStrongDestructorGrabLock)0>::set((uint64_t **)a3, *v6);
  *(_BYTE *)(a3 + 8) = 1;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF000) + 0x10);
  v13 = *(_QWORD **)(v5 + 8);
  if (v13)
  {
    v14 = *(_QWORD *)v5;
    *v13 = *(_QWORD *)v5;
    *(_QWORD *)(v14 + 8) = v13;
    *(_QWORD *)v5 = 0;
    *(_QWORD *)(v5 + 8) = 0;
  }
  *(_QWORD *)v5 = *(_QWORD *)(v12 + 40);
  *(_QWORD *)(v12 + 40) = v5;
  return result;
}

uint64_t **JSC::Strong<JSC::Unknown,(JSC::ShouldStrongDestructorGrabLock)0>::set(uint64_t **result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  int v6;
  int v7;
  uint64_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v2 = *result;
  v3 = (uint64_t)(*result - 2);
  v4 = **result;
  v6 = (a2 & 0xFFFE000000000002) == 0 && a2 != 0;
  v7 = (v4 & 0xFFFE000000000002) == 0;
  if (!v4)
    v7 = 0;
  if (v7 != v6)
  {
    if ((v6 & 1) != 0)
    {
      v8 = *(uint64_t **)((v3 & 0xFFFFFFFFFFFFF000) + 0x10);
      v9 = v8[3];
      v8 += 3;
      *(_QWORD *)v3 = v9;
      *(_QWORD *)(v3 + 8) = v8;
      *v8 = v3;
      *(_QWORD *)(v9 + 8) = v3;
    }
    else
    {
      v11 = *(_QWORD *)v3;
      v10 = (_QWORD *)*(*result - 1);
      *v10 = *(_QWORD *)v3;
      *(_QWORD *)(v11 + 8) = v10;
      *(_QWORD *)v3 = 0;
      *(_QWORD *)(v3 + 8) = 0;
      v2 = *result;
    }
  }
  *v2 = a2;
  return result;
}

WebCore::ScheduledAction *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_10unique_ptrIN7WebCore15ScheduledActionENS_14default_deleteISA_EEEENS9_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSG_1EJSD_SE_EEEEEEDcSI_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WebCore::ScheduledAction *result;
  WTF *v3;
  void *v4;

  result = *(WebCore::ScheduledAction **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    WebCore::ScheduledAction::~ScheduledAction(result, a2);
    return (WebCore::ScheduledAction *)WTF::fastFree(v3, v4);
  }
  return result;
}

void WebCore::jsDOMWindowInstanceFunction_createImageBitmap1Body(unint64_t *a1, uint64_t a2, uint64_t a3, _DWORD **a4)
{
  JSC::VM *v8;
  int v9;
  uint64_t v10;
  int v11;
  _DWORD *v12;
  BOOL v13;
  char v14;
  uint64_t v15;
  JSValue v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  _OWORD v19[2];
  int v20;
  _DWORD *v21;
  WTF::StringImpl *v22[2];
  __int128 v23;
  char v24[8];
  int v25;
  char v26[8];
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v8 = (JSC::VM *)a1[7];
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLImageElement>,WebCore::IDLInterface<WebCore::HTMLVideoElement>,WebCore::IDLInterface<WebCore::HTMLCanvasElement>,WebCore::IDLInterface<WebCore::SVGImageElement>,WebCore::IDLInterface<WebCore::ImageBitmap>,WebCore::IDLInterface<WebCore::OffscreenCanvas>,WebCore::IDLInterface<WebCore::CSSStyleImageValue>,WebCore::IDLInterface<WebCore::WebCodecsVideoFrame>,WebCore::IDLInterface<WebCore::Blob>,WebCore::IDLInterface<WebCore::ImageData>>>::convert(a1, *(_QWORD *)(a2 + 48), (uint64_t)v26);
  v9 = v29;
  if (!v29)
  {
    if ((unint64_t)(*(int *)(a2 + 32) - 3) > 0xFFFFFFFFFFFFFFFDLL)
      v10 = 10;
    else
      v10 = *(_QWORD *)(a2 + 56);
    WebCore::convertDictionary<WebCore::ImageBitmapOptions>((JSC::JSCell *)v10, (unint64_t)a1, (uint64_t)v19);
    if (!v20)
    {
      if (v29
        || (v24[0] = 0, v25 = -1, v11 = v28, v28 != -1)
        && (((void (*)(WTF::StringImpl **, char *, uint64_t *))off_1E3264DF8[v28])(v22, v24, &v27),
            v25 = v11,
            v20))
      {
        std::__throw_bad_variant_access[abi:sn180100]();
      }
      *(_OWORD *)v22 = v19[0];
      v23 = v19[1];
      v12 = *a4;
      *a4 = 0;
      v21 = v12;
      if (a3)
        v13 = *(_BYTE *)(a3 + 56) == 0;
      else
        v13 = 0;
      v14 = v13;
      if (v13)
      {
        WebCore::LocalDOMWindow::createImageBitmap(a3, (uint64_t)v24, (uint64_t)v22, (uint64_t *)&v21);
        v15 = 0;
        v12 = v21;
      }
      else
      {
        v15 = 14;
      }
      v21 = 0;
      if (v12)
      {
        if (v12[4] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v12 + 16))(v12);
        else
          --v12[4];
      }
      if (v25 != -1)
        ((void (*)(WTF::StringImpl **, char *))off_1E3264DA8[v25])(v22, v24);
      if ((v14 & 1) == 0)
      {
        LOBYTE(v22[0]) = v15;
        v22[1] = 0;
        if (!*((_QWORD *)v8 + 2))
        {
          v16.super.isa = (Class)WebCore::createDOMException((JSC *)a1, (JSC::JSGlobalObject *)v15, (JSC::JSGlobalObject *)&v22[1]);
          JSC::VM::throwException(v8, (JSC::JSGlobalObject *)a1, v16);
          v18 = v22[1];
          v22[1] = 0;
          if (v18)
          {
            if (*(_DWORD *)v18 == 2)
              WTF::StringImpl::destroy(v18, v17);
            else
              *(_DWORD *)v18 -= 2;
          }
        }
      }
    }
    v9 = v29;
  }
  if (v9 != -1)
    ((void (*)(_OWORD *, uint64_t *))off_1E3264E48[v9])(v19, &v27);
}

void WebCore::jsDOMWindowInstanceFunction_createImageBitmap2Body(unint64_t *a1, uint64_t a2, uint64_t a3, _DWORD **a4)
{
  JSC::VM *v8;
  int v9;
  unint64_t v10;
  JSC::VM *v11;
  int v12;
  unint64_t v13;
  JSC::VM *v14;
  unint64_t v15;
  JSC::VM *v16;
  unint64_t v17;
  JSC::VM *v18;
  int v19;
  JSC::JSCell *v20;
  int v21;
  _DWORD *v22;
  BOOL v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unint64_t v29;
  int v30;
  int v31;
  unint64_t v32;
  uint64_t v33;
  unsigned int v34;
  unint64_t v35;
  int v36;
  int v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  int v44;
  unint64_t v45;
  int v46;
  JSValue v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  JSC::VM *v54;
  int v55;
  int v56;
  int v57;
  _OWORD v58[2];
  int v59;
  _DWORD *v60;
  WTF::StringImpl *v61[2];
  __int128 v62;
  char v63[8];
  int v64;
  char v65[8];
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v69;

  v69 = *MEMORY[0x1E0C80C00];
  v8 = (JSC::VM *)a1[7];
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLImageElement>,WebCore::IDLInterface<WebCore::HTMLVideoElement>,WebCore::IDLInterface<WebCore::HTMLCanvasElement>,WebCore::IDLInterface<WebCore::SVGImageElement>,WebCore::IDLInterface<WebCore::ImageBitmap>,WebCore::IDLInterface<WebCore::OffscreenCanvas>,WebCore::IDLInterface<WebCore::CSSStyleImageValue>,WebCore::IDLInterface<WebCore::WebCodecsVideoFrame>,WebCore::IDLInterface<WebCore::Blob>,WebCore::IDLInterface<WebCore::ImageData>>>::convert(a1, *(_QWORD *)(a2 + 48), (uint64_t)v65);
  v9 = v68;
  if (!v68)
  {
    v10 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)&v58[0] = v10;
    v11 = (JSC::VM *)a1[7];
    if (v10 < 0xFFFE000000000000)
    {
      v26 = v10 - 0x2000000000000;
      if (v10 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v58, (JSC::JSGlobalObject *)a1);
        v26 = v50;
      }
      v27 = (v26 >> 52) & 0x7FF;
      v28 = v27 - 1023;
      v29 = v26 >> (51 - (v26 >> 52));
      if (v27 > 0x433)
        LODWORD(v29) = v26 << ((v26 >> 52) - 51);
      if (v27 >= 0x41F)
        v30 = v29;
      else
        v30 = (((1 << ((v26 >> 52) + 1)) - 1) & v29) + (1 << ((v26 >> 52) + 1));
      if ((v26 & 0x8000000000000000) == 0)
        v31 = v30;
      else
        v31 = -v30;
      if (v28 <= 0x53)
        v12 = v31;
      else
        v12 = 0;
    }
    else
    {
      v12 = v10;
    }
    if (!*((_DWORD *)v11 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v11))
    {
      v13 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)&v58[0] = v13;
      v14 = (JSC::VM *)a1[7];
      if (v13 < 0xFFFE000000000000)
      {
        v32 = v13 - 0x2000000000000;
        if (v13 - 0x2000000000000 >= 0xFFFC000000000000)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v58, (JSC::JSGlobalObject *)a1);
          v32 = v51;
        }
        v33 = (v32 >> 52) & 0x7FF;
        v34 = v33 - 1023;
        v35 = v32 >> (51 - (v32 >> 52));
        if (v33 > 0x433)
          LODWORD(v35) = v32 << ((v32 >> 52) - 51);
        if (v33 >= 0x41F)
          v36 = v35;
        else
          v36 = (((1 << ((v32 >> 52) + 1)) - 1) & v35) + (1 << ((v32 >> 52) + 1));
        if ((v32 & 0x8000000000000000) == 0)
          v37 = v36;
        else
          v37 = -v36;
        if (v34 > 0x53)
          v37 = 0;
        v57 = v37;
      }
      else
      {
        v57 = v13;
      }
      if (!*((_DWORD *)v14 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v14))
      {
        v56 = v12;
        v54 = v8;
        v15 = *(_QWORD *)(a2 + 72);
        *(_QWORD *)&v58[0] = v15;
        v16 = (JSC::VM *)a1[7];
        if (v15 < 0xFFFE000000000000)
        {
          v38 = v15 - 0x2000000000000;
          if (v15 - 0x2000000000000 >= 0xFFFC000000000000)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v58, (JSC::JSGlobalObject *)a1);
            v38 = v52;
          }
          v39 = (v38 >> 52) & 0x7FF;
          if ((v39 - 1023) <= 0x53)
          {
            v42 = v38 >> (51 - (v38 >> 52));
            if (v39 > 0x433)
              LODWORD(v42) = v38 << ((v38 >> 52) - 51);
            if (v39 >= 0x41F)
              v43 = v42;
            else
              v43 = (((1 << ((v38 >> 52) + 1)) - 1) & v42) + (1 << ((v38 >> 52) + 1));
            if ((v38 & 0x8000000000000000) == 0)
              v44 = v43;
            else
              v44 = -v43;
            v55 = v44;
          }
          else
          {
            v55 = 0;
          }
        }
        else
        {
          v55 = v15;
        }
        if (!*((_DWORD *)v16 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v16))
        {
          v17 = *(_QWORD *)(a2 + 80);
          *(_QWORD *)&v58[0] = v17;
          v18 = (JSC::VM *)a1[7];
          if (v17 < 0xFFFE000000000000)
          {
            v40 = v17 - 0x2000000000000;
            if (v17 - 0x2000000000000 >= 0xFFFC000000000000)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v58, (JSC::JSGlobalObject *)a1);
              v40 = v53;
            }
            v41 = (v40 >> 52) & 0x7FF;
            if ((v41 - 1023) <= 0x53)
            {
              v45 = v40 >> (51 - (v40 >> 52));
              if (v41 > 0x433)
                LODWORD(v45) = v40 << ((v40 >> 52) - 51);
              if (v41 >= 0x41F)
                v46 = v45;
              else
                v46 = (((1 << ((v40 >> 52) + 1)) - 1) & v45) + (1 << ((v40 >> 52) + 1));
              if ((v40 & 0x8000000000000000) == 0)
                v19 = v46;
              else
                v19 = -v46;
            }
            else
            {
              v19 = 0;
            }
          }
          else
          {
            v19 = v17;
          }
          if (!*((_DWORD *)v18 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v18))
          {
            v20 = (unint64_t)(*(int *)(a2 + 32) - 7) > 0xFFFFFFFFFFFFFFF9
                ? (JSC::JSCell *)10
                : *(JSC::JSCell **)(a2 + 88);
            WebCore::convertDictionary<WebCore::ImageBitmapOptions>(v20, (unint64_t)a1, (uint64_t)v58);
            if (!v59)
            {
              if (v68
                || (v63[0] = 0, v64 = -1, v21 = v67, v67 != -1)
                && (((void (*)(WTF::StringImpl **, char *, uint64_t *))off_1E3264DF8[v67])(v61, v63, &v66),
                    v64 = v21,
                    v59))
              {
                std::__throw_bad_variant_access[abi:sn180100]();
              }
              *(_OWORD *)v61 = v58[0];
              v62 = v58[1];
              v22 = *a4;
              *a4 = 0;
              v60 = v22;
              if (a3)
                v23 = *(_BYTE *)(a3 + 56) == 0;
              else
                v23 = 0;
              v24 = v23;
              if (v23)
              {
                WebCore::LocalDOMWindow::createImageBitmap(a3, (uint64_t)v63, v56, v57, v55, v19, (WTF::StringImpl *)v61, (WTF::StringImpl *)&v60);
                v25 = 0;
                v22 = v60;
              }
              else
              {
                v25 = 14;
              }
              v60 = 0;
              if (v22)
              {
                if (v22[4] == 1)
                  (*(void (**)(_DWORD *))(*(_QWORD *)v22 + 16))(v22);
                else
                  --v22[4];
              }
              if (v64 != -1)
                ((void (*)(WTF::StringImpl **, char *))off_1E3264DA8[v64])(v61, v63);
              if ((v24 & 1) == 0)
              {
                LOBYTE(v61[0]) = v25;
                v61[1] = 0;
                if (!*((_QWORD *)v54 + 2))
                {
                  v47.super.isa = (Class)WebCore::createDOMException((JSC *)a1, (JSC::JSGlobalObject *)v25, (JSC::JSGlobalObject *)&v61[1]);
                  JSC::VM::throwException(v54, (JSC::JSGlobalObject *)a1, v47);
                  v49 = v61[1];
                  v61[1] = 0;
                  if (v49)
                  {
                    if (*(_DWORD *)v49 == 2)
                      WTF::StringImpl::destroy(v49, v48);
                    else
                      *(_DWORD *)v49 -= 2;
                  }
                }
              }
            }
          }
        }
      }
    }
    v9 = v68;
  }
  if (v9 != -1)
    ((void (*)(_OWORD *, uint64_t *))off_1E3264E48[v9])(v58, &v66);
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore26StructuredSerializeOptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, WTF **a2)
{
  uint64_t v2;
  WTF *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;

  v2 = *((unsigned int *)a2 + 3);
  result = *a2;
  if (!(_DWORD)v2)
  {
    if (!result)
      return result;
LABEL_11:
    *a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  v4 = 8 * v2;
  do
  {
    v5 = *(_QWORD *)result;
    if (*(_QWORD *)result)
    {
      v6 = (uint64_t *)(v5 - 16);
      v7 = *(_QWORD *)(((v5 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
      v8 = *(uint64_t **)(v5 - 8);
      if (v8)
      {
        v9 = *v6;
        *v8 = *v6;
        *(_QWORD *)(v9 + 8) = v8;
        *v6 = 0;
        v6[1] = 0;
      }
      *v6 = *(_QWORD *)(v7 + 40);
      *(_QWORD *)(v7 + 40) = v6;
      *(_QWORD *)result = 0;
    }
    result = (WTF *)((char *)result + 8);
    v4 -= 8;
  }
  while (v4);
  result = *a2;
  if (*a2)
    goto LABEL_11;
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorINS9_INS8_6StringELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEELm0ESB_Lm16ESC_EENS9_INS8_12KeyValuePairISA_SA_EELm0ESB_Lm16ESC_EEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSE_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v3;
  WTF *v4;
  WTF *v5;
  uint64_t v6;
  WTF *v7;
  WTF::StringImpl **v8;
  uint64_t v9;
  WTF::StringImpl *v10;

  v3 = *((unsigned int *)a2 + 3);
  v4 = *(WTF **)a2;
  if ((_DWORD)v3)
  {
    v5 = (WTF *)((char *)v4 + 16 * v3);
    do
    {
      v6 = *((unsigned int *)v4 + 3);
      if ((_DWORD)v6)
      {
        v8 = *(WTF::StringImpl ***)v4;
        v9 = 8 * v6;
        do
        {
          v10 = *v8;
          *v8 = 0;
          if (v10)
          {
            if (*(_DWORD *)v10 == 2)
              WTF::StringImpl::destroy(v10, a2);
            else
              *(_DWORD *)v10 -= 2;
          }
          ++v8;
          v9 -= 8;
        }
        while (v9);
      }
      v7 = *(WTF **)v4;
      if (*(_QWORD *)v4)
      {
        *(_QWORD *)v4 = 0;
        *((_DWORD *)v4 + 2) = 0;
        WTF::fastFree(v7, a2);
      }
      v4 = (WTF *)((char *)v4 + 16);
    }
    while (v4 != v5);
    v4 = *(WTF **)a2;
  }
  if (v4)
  {
    *(_QWORD *)a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    WTF::fastFree(v4, a2);
  }
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorINS9_INS8_6StringELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEELm0ESB_Lm16ESC_EENS9_INS8_12KeyValuePairISA_SA_EELm0ESB_Lm16ESC_EEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSE_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v3;
  WTF *result;
  uint64_t v5;
  WTF::StringImpl **v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;

  v3 = *((unsigned int *)a2 + 3);
  if ((_DWORD)v3)
  {
    v5 = 16 * v3;
    v6 = (WTF::StringImpl **)(*(_QWORD *)a2 + 8);
    do
    {
      v7 = *v6;
      *v6 = 0;
      if (v7)
      {
        if (*(_DWORD *)v7 == 2)
          WTF::StringImpl::destroy(v7, a2);
        else
          *(_DWORD *)v7 -= 2;
      }
      v8 = *(v6 - 1);
      *(v6 - 1) = 0;
      if (v8)
      {
        if (*(_DWORD *)v8 == 2)
          WTF::StringImpl::destroy(v8, a2);
        else
          *(_DWORD *)v8 -= 2;
      }
      v6 += 2;
      v5 -= 16;
    }
    while (v5);
  }
  result = *(WTF **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6VectorINS9_INS8_6StringELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEELm0ESB_Lm16ESC_EENS9_INS8_12KeyValuePairISA_SA_EELm0ESB_Lm16ESC_EEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISI_LNS0_6_TraitE1EEEEEvRSJ_OT_EUlRSP_OT0_E_JRNS0_6__baseILSM_1EJSE_SH_EEEOSX_EEEDcSP_DpT0_(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  v3 = *a3;
  *a3 = 0;
  *(_QWORD *)a2 = v3;
  LODWORD(v3) = *((_DWORD *)a3 + 2);
  *((_DWORD *)a3 + 2) = 0;
  *(_DWORD *)(a2 + 8) = v3;
  LODWORD(v3) = *((_DWORD *)a3 + 3);
  *((_DWORD *)a3 + 3) = 0;
  *(_DWORD *)(a2 + 12) = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6VectorINS9_INS8_6StringELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEELm0ESB_Lm16ESC_EENS9_INS8_12KeyValuePairISA_SA_EELm0ESB_Lm16ESC_EEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISI_LNS0_6_TraitE1EEEEEvRSJ_OT_EUlRSP_OT0_E_JRNS0_6__baseILSM_1EJSE_SH_EEEOSX_EEEDcSP_DpT0_(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  v3 = *a3;
  *a3 = 0;
  *(_QWORD *)a2 = v3;
  LODWORD(v3) = *((_DWORD *)a3 + 2);
  *((_DWORD *)a3 + 2) = 0;
  *(_DWORD *)(a2 + 8) = v3;
  LODWORD(v3) = *((_DWORD *)a3 + 3);
  *((_DWORD *)a3 + 3) = 0;
  *(_DWORD *)(a2 + 12) = v3;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4BlobENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_IN3JSC15ArrayBufferViewENSC_ISI_EENSE_ISI_EEEENS9_INSH_11ArrayBufferENSC_ISM_EENSE_ISM_EEEENS9_INSA_11DOMFormDataENSC_ISQ_EENSE_ISQ_EEEENS9_INSA_15URLSearchParamsENSC_ISU_EENSE_ISU_EEEENS9_INSA_14ReadableStreamENSC_ISY_EENSE_ISY_EEEENS8_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS14_1EJSG_SL_SP_ST_SX_S11_S12_EEEEEEDcS16_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[4];
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4BlobENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_IN3JSC15ArrayBufferViewENSC_ISI_EENSE_ISI_EEEENS9_INSH_11ArrayBufferENSC_ISM_EENSE_ISM_EEEENS9_INSA_11DOMFormDataENSC_ISQ_EENSE_ISQ_EEEENS9_INSA_15URLSearchParamsENSC_ISU_EENSE_ISU_EEEENS9_INSA_14ReadableStreamENSC_ISY_EENSE_ISY_EEEENS8_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS14_1EJSG_SL_SP_ST_SX_S11_S12_EEEEEEDcS16_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*result == 1)
      return (_DWORD *)JSC::ArrayBufferView::operator delete();
    else
      --*result;
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4BlobENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_IN3JSC15ArrayBufferViewENSC_ISI_EENSE_ISI_EEEENS9_INSH_11ArrayBufferENSC_ISM_EENSE_ISM_EEEENS9_INSA_11DOMFormDataENSC_ISQ_EENSE_ISQ_EEEENS9_INSA_15URLSearchParamsENSC_ISU_EENSE_ISU_EEEENS9_INSA_14ReadableStreamENSC_ISY_EENSE_ISY_EEEENS8_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS14_1EJSG_SL_SP_ST_SX_S11_S12_EEEEEEDcS16_DpT0_(uint64_t a1, _QWORD **a2)
{
  _QWORD *v2;
  BOOL v3;
  uint64_t v4;
  void *v5;
  WTF **v6;
  WTF *v7;
  WTF *v8;

  v2 = *a2;
  *a2 = 0;
  if (v2)
  {
    v3 = *(_DWORD *)v2 == 2;
    *(_DWORD *)v2 -= 2;
    if (v3)
    {
      v4 = v2[10];
      if (v4)
      {
        *(_QWORD *)(v4 + 8) = 3;
        v2[10] = 0;
      }
      if ((v2[9] & 1) == 0)
        JSC::InlineWatchpointSet::freeFat((JSC::InlineWatchpointSet *)(v2 + 9));
      JSC::ArrayBufferContents::~ArrayBufferContents((JSC::ArrayBufferContents *)(v2 + 2));
      v6 = (WTF **)v2[1];
      if ((v6 & 1) == 0 && v6)
      {
        v8 = (WTF *)v2[1];
        v7 = *v6;
        if (*v6)
        {
          *(_QWORD *)v8 = 0;
          *((_DWORD *)v8 + 2) = 0;
          WTF::fastFree(v7, v5);
        }
        WTF::fastFree(v8, v5);
      }
      WTF::fastFree((WTF *)v2, v5);
    }
  }
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm3EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4BlobENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_IN3JSC15ArrayBufferViewENSC_ISI_EENSE_ISI_EEEENS9_INSH_11ArrayBufferENSC_ISM_EENSE_ISM_EEEENS9_INSA_11DOMFormDataENSC_ISQ_EENSE_ISQ_EEEENS9_INSA_15URLSearchParamsENSC_ISU_EENSE_ISU_EEEENS9_INSA_14ReadableStreamENSC_ISY_EENSE_ISY_EEEENS8_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS14_1EJSG_SL_SP_ST_SX_S11_S12_EEEEEEDcS16_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

WebCore::URLSearchParams *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm4EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4BlobENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_IN3JSC15ArrayBufferViewENSC_ISI_EENSE_ISI_EEEENS9_INSH_11ArrayBufferENSC_ISM_EENSE_ISM_EEEENS9_INSA_11DOMFormDataENSC_ISQ_EENSE_ISQ_EEEENS9_INSA_15URLSearchParamsENSC_ISU_EENSE_ISU_EEEENS9_INSA_14ReadableStreamENSC_ISY_EENSE_ISY_EEEENS8_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS14_1EJSG_SL_SP_ST_SX_S11_S12_EEEEEEDcS16_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WebCore::URLSearchParams *result;
  WTF *v3;
  void *v4;

  result = *(WebCore::URLSearchParams **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
    {
      WebCore::URLSearchParams::~URLSearchParams(result, a2);
      return (WebCore::URLSearchParams *)WTF::fastFree(v3, v4);
    }
    else
    {
      --*(_DWORD *)result;
    }
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm5EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4BlobENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_IN3JSC15ArrayBufferViewENSC_ISI_EENSE_ISI_EEEENS9_INSH_11ArrayBufferENSC_ISM_EENSE_ISM_EEEENS9_INSA_11DOMFormDataENSC_ISQ_EENSE_ISQ_EEEENS9_INSA_15URLSearchParamsENSC_ISU_EENSE_ISU_EEEENS9_INSA_14ReadableStreamENSC_ISY_EENSE_ISY_EEEENS8_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS14_1EJSG_SL_SP_ST_SX_S11_S12_EEEEEEDcS16_DpT0_(uint64_t a1, WTF **a2)
{
  WTF *v2;
  _DWORD *v3;

  v2 = *a2;
  *a2 = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = (_DWORD *)*((_QWORD *)v2 + 1);
      *((_QWORD *)v2 + 1) = 0;
      if (v3)
      {
        if (v3[4] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v3 + 16))(v3);
        else
          --v3[4];
      }
      WTF::fastFree(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm6EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4BlobENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_IN3JSC15ArrayBufferViewENSC_ISI_EENSE_ISI_EEEENS9_INSH_11ArrayBufferENSC_ISM_EENSE_ISM_EEEENS9_INSA_11DOMFormDataENSC_ISQ_EENSE_ISQ_EEEENS9_INSA_15URLSearchParamsENSC_ISU_EENSE_ISU_EEEENS9_INSA_14ReadableStreamENSC_ISY_EENSE_ISY_EEEENS8_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS14_1EJSG_SL_SP_ST_SX_S11_S12_EEEEEEDcS16_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4BlobENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_IN3JSC15ArrayBufferViewENSC_ISI_EENSE_ISI_EEEENS9_INSH_11ArrayBufferENSC_ISM_EENSE_ISM_EEEENS9_INSA_11DOMFormDataENSC_ISQ_EENSE_ISQ_EEEENS9_INSA_15URLSearchParamsENSC_ISU_EENSE_ISU_EEEENS9_INSA_14ReadableStreamENSC_ISY_EENSE_ISY_EEEENS8_6StringEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS13_LNS0_6_TraitE1EEEEEvRS14_OT_EUlRS1A_OT0_E_JRNS0_6__baseILS17_1EJSG_SL_SP_ST_SX_S11_S12_EEEOS1I_EEEDcS1A_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4BlobENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_IN3JSC15ArrayBufferViewENSC_ISI_EENSE_ISI_EEEENS9_INSH_11ArrayBufferENSC_ISM_EENSE_ISM_EEEENS9_INSA_11DOMFormDataENSC_ISQ_EENSE_ISQ_EEEENS9_INSA_15URLSearchParamsENSC_ISU_EENSE_ISU_EEEENS9_INSA_14ReadableStreamENSC_ISY_EENSE_ISY_EEEENS8_6StringEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS13_LNS0_6_TraitE1EEEEEvRS14_OT_EUlRS1A_OT0_E_JRNS0_6__baseILS17_1EJSG_SL_SP_ST_SX_S11_S12_EEEOS1I_EEEDcS1A_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4BlobENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_IN3JSC15ArrayBufferViewENSC_ISI_EENSE_ISI_EEEENS9_INSH_11ArrayBufferENSC_ISM_EENSE_ISM_EEEENS9_INSA_11DOMFormDataENSC_ISQ_EENSE_ISQ_EEEENS9_INSA_15URLSearchParamsENSC_ISU_EENSE_ISU_EEEENS9_INSA_14ReadableStreamENSC_ISY_EENSE_ISY_EEEENS8_6StringEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS13_LNS0_6_TraitE1EEEEEvRS14_OT_EUlRS1A_OT0_E_JRNS0_6__baseILS17_1EJSG_SL_SP_ST_SX_S11_S12_EEEOS1I_EEEDcS1A_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm3ELm3EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4BlobENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_IN3JSC15ArrayBufferViewENSC_ISI_EENSE_ISI_EEEENS9_INSH_11ArrayBufferENSC_ISM_EENSE_ISM_EEEENS9_INSA_11DOMFormDataENSC_ISQ_EENSE_ISQ_EEEENS9_INSA_15URLSearchParamsENSC_ISU_EENSE_ISU_EEEENS9_INSA_14ReadableStreamENSC_ISY_EENSE_ISY_EEEENS8_6StringEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS13_LNS0_6_TraitE1EEEEEvRS14_OT_EUlRS1A_OT0_E_JRNS0_6__baseILS17_1EJSG_SL_SP_ST_SX_S11_S12_EEEOS1I_EEEDcS1A_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm4ELm4EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4BlobENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_IN3JSC15ArrayBufferViewENSC_ISI_EENSE_ISI_EEEENS9_INSH_11ArrayBufferENSC_ISM_EENSE_ISM_EEEENS9_INSA_11DOMFormDataENSC_ISQ_EENSE_ISQ_EEEENS9_INSA_15URLSearchParamsENSC_ISU_EENSE_ISU_EEEENS9_INSA_14ReadableStreamENSC_ISY_EENSE_ISY_EEEENS8_6StringEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS13_LNS0_6_TraitE1EEEEEvRS14_OT_EUlRS1A_OT0_E_JRNS0_6__baseILS17_1EJSG_SL_SP_ST_SX_S11_S12_EEEOS1I_EEEDcS1A_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm5ELm5EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4BlobENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_IN3JSC15ArrayBufferViewENSC_ISI_EENSE_ISI_EEEENS9_INSH_11ArrayBufferENSC_ISM_EENSE_ISM_EEEENS9_INSA_11DOMFormDataENSC_ISQ_EENSE_ISQ_EEEENS9_INSA_15URLSearchParamsENSC_ISU_EENSE_ISU_EEEENS9_INSA_14ReadableStreamENSC_ISY_EENSE_ISY_EEEENS8_6StringEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS13_LNS0_6_TraitE1EEEEEvRS14_OT_EUlRS1A_OT0_E_JRNS0_6__baseILS17_1EJSG_SL_SP_ST_SX_S11_S12_EEEOS1I_EEEDcS1A_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm6ELm6EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore4BlobENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_IN3JSC15ArrayBufferViewENSC_ISI_EENSE_ISI_EEEENS9_INSH_11ArrayBufferENSC_ISM_EENSE_ISM_EEEENS9_INSA_11DOMFormDataENSC_ISQ_EENSE_ISQ_EEEENS9_INSA_15URLSearchParamsENSC_ISU_EENSE_ISU_EEEENS9_INSA_14ReadableStreamENSC_ISY_EENSE_ISY_EEEENS8_6StringEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS13_LNS0_6_TraitE1EEEEEvRS14_OT_EUlRS1A_OT0_E_JRNS0_6__baseILS17_1EJSG_SL_SP_ST_SX_S11_S12_EEEOS1I_EEEDcS1A_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore16FetchRequestInitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(int a1, WebCore::FetchRequestInit *this)
{
  WebCore::FetchRequestInit::~FetchRequestInit(this, this);
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11CSSRuleListENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  *a2 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 24))(result);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore11CSSRuleListENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

unint64_t WebCore::JSConverter<WebCore::IDLInterface<WebCore::NodeList>>::convert<WTF::Ref<WebCore::NodeList,WTF::RawPtrTraits<WebCore::NodeList>,WTF::DefaultRefDerefTraits<WebCore::NodeList>>>(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t Wrapper;
  _DWORD *v7;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _DWORD *v17;

  v3 = *a3;
  v4 = *(_QWORD *)(a2 + 3320);
  if (*(_DWORD *)(v4 + 48))
  {
    v9 = *(_QWORD *)(v4 + 32);
    if (v9)
    {
      v10 = *(_DWORD *)(v9 - 8);
      v11 = (~(v3 << 32) + v3) ^ ((unint64_t)(~(v3 << 32) + v3) >> 22);
      v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
      v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
      v14 = v10 & ((v13 >> 31) ^ v13);
      v15 = *(_QWORD *)(v9 + 16 * v14);
      if (v15 == v3)
      {
LABEL_15:
        v5 = *(_QWORD *)(v9 + 16 * v14 + 8);
        if (v5)
          goto LABEL_3;
      }
      else
      {
        v16 = 1;
        while (v15)
        {
          v14 = ((_DWORD)v14 + v16) & v10;
          v15 = *(_QWORD *)(v9 + 16 * v14);
          ++v16;
          if (v15 == v3)
            goto LABEL_15;
        }
      }
    }
  }
  else
  {
    v5 = *(_QWORD *)(v3 + 8);
    if (v5)
    {
LABEL_3:
      if ((*(_BYTE *)(v5 + 8) & 3) == 0)
      {
        Wrapper = *(_QWORD *)v5;
        if (*(_QWORD *)v5)
          return Wrapper;
      }
    }
  }
  ++*(_DWORD *)(v3 + 16);
  v17 = (_DWORD *)v3;
  Wrapper = WebCore::createWrapper(a2, (uint64_t *)&v17);
  v7 = v17;
  v17 = 0;
  if (v7)
  {
    if (v7[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v7 + 8))(v7);
    else
      --v7[4];
  }
  return Wrapper;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore8NodeListENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[4];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore8NodeListENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore7ElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore7ElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore21JSIdleRequestCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

JSCell *WebCore::setSubclassStructureIfNeeded<WebCore::DataCue>(JSC *a1, uint64_t a2, JSCell *a3)
{
  JSCell *result;
  JSC::JSObject *v7;
  JSC::JSGlobalObject *v9;
  JSC::VM *v10;
  uint64_t FunctionRealm;
  JSC::JSObject *v12;
  JSC::Structure *v13;
  JSC::VM *v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  JSC::JSCell *v23;
  unint64_t Structure;
  JSC::Structure *v25;
  JSC::JSCell *v26;
  uint64_t v27;
  unint64_t SubclassStructure;

  result = *(JSCell **)(a2 + 40);
  if (((unint64_t)result & 0xFFFE000000000002) == 0)
  {
    result = (JSCell *)JSC::JSCell::getObject((JSC::JSCell *)result);
    if (result && result != *(JSCell **)(a2 + 24))
    {
      v9 = (JSC::JSGlobalObject *)result;
      v10 = (JSC::VM *)*((_QWORD *)a1 + 7);
      FunctionRealm = JSC::getFunctionRealm(a1, (JSC::JSGlobalObject *)result, v7);
      v14 = (JSC::VM *)FunctionRealm;
      if (!*((_DWORD *)v10 + 20)
        || (result = (JSCell *)JSC::VM::hasExceptionsAfterHandlingTraps(v10), (result & 1) == 0))
      {
        v15 = *((_QWORD *)v14 + 412);
        if (v15)
        {
          v16 = *(_DWORD *)(v15 - 8);
          v17 = ((unint64_t)&WebCore::JSDataCue::s_info + ~((_QWORD)&WebCore::JSDataCue::s_info << 32)) ^ (((unint64_t)&WebCore::JSDataCue::s_info + ~((_QWORD)&WebCore::JSDataCue::s_info << 32)) >> 22);
          v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
          v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
          v20 = v16 & ((v19 >> 31) ^ v19);
          v21 = *(char ***)(v15 + 16 * v20);
          if (v21 == &WebCore::JSDataCue::s_info)
          {
LABEL_14:
            v12 = *(JSC::JSObject **)(v15 + 16 * v20 + 8);
            if (v12)
            {
LABEL_16:
              SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v9, v12, v13);
              if (!*((_DWORD *)v10 + 20))
                return JSC::JSObject::setStructure(a3, v10, SubclassStructure);
              result = (JSCell *)JSC::VM::hasExceptionsAfterHandlingTraps(v10);
              if ((result & 1) == 0)
                return JSC::JSObject::setStructure(a3, v10, SubclassStructure);
              return result;
            }
          }
          else
          {
            v22 = 1;
            while (v21)
            {
              v20 = ((_DWORD)v20 + v22) & v16;
              v21 = *(char ***)(v15 + 16 * v20);
              ++v22;
              if (v21 == &WebCore::JSDataCue::s_info)
                goto LABEL_14;
            }
          }
        }
        v23 = (JSC::JSCell *)WebCore::JSTextTrackCue::prototype(v10, v14, v12);
        Structure = WebCore::JSDataCuePrototype::createStructure((uint64_t *)v10, (uint64_t)v14, v23);
        *(_DWORD *)(Structure + 16) |= 0x80000u;
        v26 = (JSC::JSCell *)WebCore::JSDataCuePrototype::create(v10, v14, Structure, v25);
        v27 = WebCore::JSDataCue::createStructure((uint64_t *)v10, (uint64_t)v14, v26);
        v12 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)v14, v27, (uint64_t)&WebCore::JSDataCue::s_info);
        goto LABEL_16;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSDataCue::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::jsDataTransferPrototypeFunction_setDragImage(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  WebCore::Node *v19;
  WebCore::Node *v20;
  unsigned int v21;
  WebCore::Node *v22;
  JSC::VM *v23;
  uint64_t v24;
  void *v25;
  WebCore::Node *v26;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unsigned int v33;
  unint64_t v34;
  unsigned int v35;
  JSValue v36;
  unint64_t v37;
  unint64_t v38;
  JSC::VM *v39;
  WebCore::Node *v40;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v39 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v39, "DataTransfer", "setDragImage");
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSDataTransfer::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSDataTransfer::s_info && v14 != 0);
  }
  if (!v13)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v39, "DataTransfer", "setDragImage");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v36.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v36);
  }
  else
  {
    v17 = *(_QWORD *)(v10 + 24);
    v18 = *((_QWORD *)a2 + 6);
    v40 = v9;
    if ((v18 & 0xFFFE000000000002) == 0
      && *(unsigned __int8 *)(v18 + 5) == 241
      && (v19 = *(WebCore::Node **)(v18 + 24)) != 0)
    {
      v20 = (WebCore::Node *)*((_QWORD *)a2 + 7);
      v40 = v20;
      if ((unint64_t)v20 < 0xFFFE000000000000)
      {
        v28 = (unint64_t)v20 - 0x2000000000000;
        if ((unint64_t)v20 - 0x2000000000000 >= 0xFFFC000000000000)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v40, this);
          v28 = v37;
        }
        v29 = (v28 >> 52) & 0x7FF;
        if ((v29 - 1023) <= 0x53)
        {
          v32 = v28 >> (51 - (v28 >> 52));
          if (v29 > 0x433)
            LODWORD(v32) = v28 << ((v28 >> 52) - 51);
          if (v29 >= 0x41F)
            v33 = v32;
          else
            v33 = (((1 << ((v28 >> 52) + 1)) - 1) & v32) + (1 << ((v28 >> 52) + 1));
          if ((v28 & 0x8000000000000000) == 0)
            v21 = v33;
          else
            v21 = -v33;
        }
        else
        {
          v21 = 0;
        }
      }
      else
      {
        v21 = v20;
      }
      if (*((_DWORD *)v9 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v9))
      {
        return 0;
      }
      else
      {
        v22 = (WebCore::Node *)*((_QWORD *)a2 + 8);
        v40 = v22;
        v23 = (JSC::VM *)*((_QWORD *)this + 7);
        if ((unint64_t)v22 < 0xFFFE000000000000)
        {
          v30 = (unint64_t)v22 - 0x2000000000000;
          if ((unint64_t)v22 - 0x2000000000000 >= 0xFFFC000000000000)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v40, this);
            v30 = v38;
          }
          v31 = (v30 >> 52) & 0x7FF;
          if ((v31 - 1023) <= 0x53)
          {
            v34 = v30 >> (51 - (v30 >> 52));
            if (v31 > 0x433)
              LODWORD(v34) = v30 << ((v30 >> 52) - 51);
            if (v31 >= 0x41F)
              v35 = v34;
            else
              v35 = (((1 << ((v30 >> 52) + 1)) - 1) & v34) + (1 << ((v30 >> 52) + 1));
            if ((v30 & 0x8000000000000000) == 0)
              v24 = v35;
            else
              v24 = -v35;
          }
          else
          {
            v24 = 0;
          }
        }
        else
        {
          v24 = (uint64_t)v22;
        }
        if (*((_DWORD *)v23 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v23))
        {
          return 0;
        }
        else
        {
          *((_DWORD *)v19 + 6) += 2;
          v40 = v19;
          WebCore::DataTransfer::setDragImage(v17, (uint64_t *)&v40, v21, v24);
          v26 = v40;
          v40 = 0;
          if (v26)
          {
            if (*((_DWORD *)v26 + 6) == 2)
            {
              if ((*((_WORD *)v26 + 15) & 0x400) == 0)
                WebCore::Node::removedLastRef(v26, v25);
            }
            else
            {
              *((_DWORD *)v26 + 6) -= 2;
            }
          }
          return 10;
        }
      }
    }
    else
    {
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v40, 0, "image", 6, "DataTransfer", 13, a8, "setDragImage", 13, "Element", 8);
      return 0;
    }
  }
}

uint64_t WebCore::jsDataTransferPrototypeFunction_getData(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WTF::StringImpl *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  JSC::VM *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  int v23;
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned int v26;
  WTF::StringImpl *v27;
  uint64_t v28;
  unsigned int v30;
  JSValue v32;
  WTF::StringImpl *v33;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v35;
  WTF::StringImpl *v36;
  uint64_t v37;
  int v38;
  WTF::StringImpl *v39;
  WTF::StringImpl *v40;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v35 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v35, "DataTransfer", "getData");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDataTransfer::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDataTransfer::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v35, "DataTransfer", "getData");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v32.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v32);
  }
  v12 = *(WTF::StringImpl **)(v5 + 24);
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v13)
    return 10;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194A854A8);
  }
  v15 = *((_QWORD *)a2 + 6);
  v40 = (WTF::StringImpl *)v15;
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v15 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v15 + 5) == 2)
  {
    v17 = *(WTF::StringImpl **)(v15 + 8);
    if ((v17 & 1) != 0)
    {
      v17 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v15, this);
      if (!v17)
        goto LABEL_20;
    }
    else if (!v17)
    {
LABEL_20:
      v39 = v17;
      goto LABEL_21;
    }
    *(_DWORD *)v17 += 2;
    goto LABEL_20;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v40, this);
LABEL_21:
  if (*((_DWORD *)v16 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v16);
    v18 = v39;
    if (hasExceptionsAfterHandlingTraps)
    {
      v38 = 1;
      v39 = 0;
      if (v18)
      {
        if (*(_DWORD *)v18 == 2)
          WTF::StringImpl::destroy(v18, v33);
        else
          *(_DWORD *)v18 -= 2;
      }
      v24 = 0;
      v28 = 1;
      goto LABEL_49;
    }
  }
  else
  {
    v18 = v39;
  }
  v38 = 0;
  v36 = v18;
  v37 = 0;
  WebCore::normalizeType((uint64_t)&v40, (const WTF::String *)&v36);
  WebCore::DataTransfer::getDataForItem(v12, (WebCore::Document *)(v14 - 192), &v39);
  v20 = v40;
  v40 = 0;
  if (v20)
  {
    if (*(_DWORD *)v20 == 2)
      WTF::StringImpl::destroy(v20, v19);
    else
      *(_DWORD *)v20 -= 2;
  }
  v21 = *((_QWORD *)this + 7);
  v22 = v39;
  if (v39)
  {
    v23 = *((_DWORD *)v39 + 1);
    if (v23)
    {
      if (v23 != 1)
      {
LABEL_29:
        v24 = *(_QWORD *)(v21 + 64760);
        if (!v24 || v39 != *(WTF::StringImpl **)(v24 + 8))
        {
          v24 = JSC::jsStringWithCacheSlowCase();
          v22 = v39;
          goto LABEL_32;
        }
LABEL_42:
        v39 = 0;
LABEL_43:
        if (*(_DWORD *)v22 == 2)
          WTF::StringImpl::destroy(v22, v22);
        else
          *(_DWORD *)v22 -= 2;
        goto LABEL_45;
      }
      v25 = (unsigned __int8 *)*((_QWORD *)v39 + 1);
      if ((*((_BYTE *)v39 + 16) & 4) != 0)
      {
        v26 = *v25;
      }
      else
      {
        v30 = *(unsigned __int16 *)v25;
        if (v30 > 0xFF)
          goto LABEL_29;
        v26 = v30;
      }
      v24 = *(_QWORD *)(v21 + 8 * v26 + 42216);
      goto LABEL_42;
    }
  }
  v24 = *(_QWORD *)(v21 + 41968);
LABEL_32:
  v39 = 0;
  if (v22)
    goto LABEL_43;
LABEL_45:
  v27 = v36;
  v36 = 0;
  if (v27)
  {
    if (*(_DWORD *)v27 == 2)
      WTF::StringImpl::destroy(v27, v22);
    else
      *(_DWORD *)v27 -= 2;
  }
  v28 = 0;
LABEL_49:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E325A258[v28])(&v40, &v37);
  return v24;
}

uint64_t WebCore::jsDataTransferPrototypeFunction_setData(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WTF::StringImpl *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  JSC::VM *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  JSC::VM *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  JSValue v31;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  int v35;
  JSC::VM *v36;
  uint64_t v37;
  int v38;
  WTF::StringImpl *v39;
  int v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v36 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v36, "DataTransfer", "setData");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDataTransfer::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDataTransfer::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v36, "DataTransfer", "setData");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v31.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v31);
  }
  v12 = *(WTF::StringImpl **)(v5 + 24);
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v13)
    return 10;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194A857E8);
  }
  v15 = *((_QWORD *)a2 + 6);
  v37 = v15;
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v15 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v15 + 5) == 2)
  {
    v17 = *(WTF::StringImpl **)(v15 + 8);
    if ((v17 & 1) != 0)
    {
      v17 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v15, this);
      if (!v17)
        goto LABEL_20;
    }
    else if (!v17)
    {
LABEL_20:
      v42 = v17;
      goto LABEL_21;
    }
    *(_DWORD *)v17 += 2;
    goto LABEL_20;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v37, this);
LABEL_21:
  if (*((_DWORD *)v16 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v16);
    v18 = v42;
    if (hasExceptionsAfterHandlingTraps)
    {
      v40 = 1;
      v42 = 0;
      if (v18)
      {
        if (*(_DWORD *)v18 == 2)
          WTF::StringImpl::destroy(v18, v33);
        else
          *(_DWORD *)v18 -= 2;
      }
      v27 = 0;
      v28 = 1;
      goto LABEL_39;
    }
  }
  else
  {
    v18 = v42;
  }
  v39 = v18;
  v40 = 0;
  v19 = *((_QWORD *)a2 + 7);
  v42 = (WTF::StringImpl *)v19;
  v20 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v19 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v19 + 5) == 2)
  {
    v21 = *(WTF::StringImpl **)(v19 + 8);
    if ((v21 & 1) != 0)
    {
      v21 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v19, this);
      if (!v21)
        goto LABEL_28;
    }
    else if (!v21)
    {
LABEL_28:
      v41 = v21;
      goto LABEL_29;
    }
    *(_DWORD *)v21 += 2;
    goto LABEL_28;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v42, this);
LABEL_29:
  if (*((_DWORD *)v20 + 20))
  {
    v35 = JSC::VM::hasExceptionsAfterHandlingTraps(v20);
    v22 = v41;
    if (v35)
    {
      v38 = 1;
      v41 = 0;
      if (v22)
      {
        if (*(_DWORD *)v22 == 2)
          WTF::StringImpl::destroy(v22, v34);
        else
          *(_DWORD *)v22 -= 2;
      }
      v27 = 0;
      v26 = 1;
      goto LABEL_38;
    }
  }
  else
  {
    v22 = v41;
  }
  v38 = 0;
  v39 = 0;
  v41 = v22;
  v42 = v18;
  v37 = 0;
  WebCore::DataTransfer::setData(v12, (WebCore::Document *)(v14 - 192), (const WTF::String *)&v42, (unsigned int **)&v41);
  v24 = v41;
  v41 = 0;
  if (v24)
  {
    if (*(_DWORD *)v24 == 2)
      WTF::StringImpl::destroy(v24, v23);
    else
      *(_DWORD *)v24 -= 2;
  }
  v25 = v42;
  v42 = 0;
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v23);
    else
      *(_DWORD *)v25 -= 2;
  }
  v26 = 0;
  v27 = 10;
LABEL_38:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E325A258[v26])(&v42, &v37);
  v28 = 0;
LABEL_39:
  ((void (*)(uint64_t *, WTF::StringImpl **))off_1E325A258[v28])(&v37, &v39);
  return v27;
}

_BYTE *WebCore::jsDataTransferPrototypeFunction_clearData(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  uint64_t v18;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v21;
  uint64_t v22;
  int v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;

  v3 = (JSC::VM *)*((_QWORD *)this + 7);
  v21 = v3;
  v4 = *((_QWORD *)a2 + 5);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "DataTransfer", "clearData");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDataTransfer::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDataTransfer::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "DataTransfer", "clearData");
  v10 = *(_QWORD *)(v4 + 24);
  if (*((_DWORD *)a2 + 8) == 1 || (v11 = *((_QWORD *)a2 + 6), v11 == 10))
  {
    v12 = 0;
    v23 = 0;
    goto LABEL_24;
  }
  v25 = (WTF::StringImpl *)*((_QWORD *)a2 + 6);
  if ((v11 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v11 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v25, this);
    goto LABEL_21;
  }
  v13 = *(WTF::StringImpl **)(v11 + 8);
  if ((v13 & 1) != 0)
  {
    v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v11, this);
    if (!v13)
      goto LABEL_20;
    goto LABEL_19;
  }
  if (v13)
LABEL_19:
    *(_DWORD *)v13 += 2;
LABEL_20:
  v24 = v13;
LABEL_21:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v12 = v24;
    if (hasExceptionsAfterHandlingTraps)
    {
      v23 = 1;
      v24 = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, a2);
        else
          *(_DWORD *)v12 -= 2;
      }
      v18 = 0;
      v17 = 1;
      goto LABEL_38;
    }
  }
  else
  {
    v12 = v24;
  }
  v23 = 0;
LABEL_24:
  v22 = 0;
  v24 = v12;
  if (*(_DWORD *)(v10 + 24) == 1)
  {
    WebCore::normalizeType((uint64_t)&v25, (const WTF::String *)&v24);
    v14 = **(_QWORD **)(v10 + 32);
    if (v25)
      (*(void (**)(void))(v14 + 96))();
    else
      (*(void (**)(void))(v14 + 88))();
    v15 = *(_QWORD *)(v10 + 40);
    if (v15)
      WebCore::DataTransferItemList::didClearStringData(v15, (const WTF::String *)&v25);
    v16 = v25;
    v25 = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, a2);
      else
        *(_DWORD *)v16 -= 2;
    }
    v12 = v24;
  }
  v24 = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, a2);
    else
      *(_DWORD *)v12 -= 2;
  }
  v17 = 0;
  v18 = 10;
LABEL_38:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E325A258[v17])(&v25, &v22);
  return (_BYTE *)v18;
}

uint64_t WebCore::jsDataTransferItemPrototypeFunction_getAsString(JSC::VM **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WebCore *v3;
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WTF::StringImpl *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  unsigned int v18;
  WebCore::JSStringCallback *v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  JSValue v26;
  JSC::VM *v27;
  WebCore::JSStringCallback *v28;
  int v29;
  WebCore::StringCallback *v30;
  int v31;
  char v32;

  v3 = (WebCore *)this;
  v4 = this[7];
  v27 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v27, "DataTransferItem", "getAsString");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDataTransferItem::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDataTransferItem::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v27, "DataTransferItem", "getAsString");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v26.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, a2);
    return JSC::VM::throwException(v4, v3, v26);
  }
  v12 = *(WTF::StringImpl **)(v5 + 24);
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext((WebCore::JSDOMGlobalObject *)this);
  if (!v13)
    return 10;
  v15 = v13;
  if (*(_BYTE *)(v13 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194A85D28);
  }
  v16 = *((_QWORD *)a2 + 6);
  if ((v16 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v3 = 0;
    v29 = 0;
LABEL_22:
    v28 = 0;
    v30 = v3;
    WebCore::DataTransferItem::getAsString(v12, (WebCore::Document *)(v15 - 192), &v30);
    v30 = 0;
    if (v3)
    {
      if (*((_DWORD *)v3 + 4) == 1)
        (*(void (**)(WebCore *))(*(_QWORD *)v3 + 16))(v3);
      else
        --*((_DWORD *)v3 + 4);
    }
    v22 = 0;
    v23 = 10;
    goto LABEL_26;
  }
  v17 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v28 = (WebCore::JSStringCallback *)*((_QWORD *)v3 + 7);
  if ((v16 & 0xFFFE000000000002) == 0
    && (v18 = *(unsigned __int8 *)(v16 + 5), v18 >= 0x17)
    && ((v18 & 0xFE) == 0x1A
     || (*(_BYTE *)(v16 + 6) & 4) != 0
     && ((*(void (**)(WebCore::StringCallback **__return_ptr, unint64_t))(16
                                                                                          * *(unsigned int *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x4C)
                                                                                          + 0x38))(&v30, v16), (_BYTE)v30)))
  {
    v3 = (WebCore *)WTF::fastMalloc((WTF *)0x20);
    v19 = WebCore::JSStringCallback::JSStringCallback(v3, v16, v17);
    v20 = 0;
    v31 = 0;
    v30 = 0;
    v21 = 1;
    v28 = v19;
  }
  else
  {
    WebCore::throwArgumentMustBeFunctionError((uint64_t)v3, (uint64_t)&v28, 0, "callback", 9, "DataTransferItem", 17, v14, "getAsString", 12);
    v21 = 0;
    v20 = 1;
    v31 = 1;
  }
  v29 = v20;
  ((void (*)(char *, WebCore::StringCallback **))off_1E3265288[v20])(&v32, &v30);
  if (v21)
    goto LABEL_22;
  v23 = 0;
  v22 = 1;
LABEL_26:
  ((void (*)(WebCore::StringCallback **, WebCore::JSStringCallback **))off_1E3265298[v22])(&v30, &v28);
  return v23;
}

uint64_t WebCore::jsDataTransferItemPrototypeFunction_getAsFile(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v3 = *((_QWORD *)a2 + 5);
  v17 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "DataTransferItem", "getAsFile");
  v4 = 16 * (*(_DWORD *)v3 & 0xFFFFFFFE);
  v5 = *(unsigned int *)(v4 + 0x4C);
  v6 = *(_DWORD *)(v4 + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDataTransferItem::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDataTransferItem::s_info && v7 != 0);
  }
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "DataTransferItem", "getAsFile");
  v10 = *(_QWORD *)(v3 + 24);
  v11 = *(_QWORD *)(v10 + 8);
  if (!v11)
    return 2;
  v12 = *(_QWORD *)(v11 + 8);
  if (!v12)
    return 2;
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v12 + 32) + 8) + 24) - 1) > 1)
    return 2;
  v13 = *(_DWORD **)(v10 + 24);
  if (!v13)
    return 2;
  v14 = *(_QWORD *)(v4 + 40);
  ++v13[4];
  v15 = WebCore::wrap<WebCore::File>((uint64_t)this, v14, (uint64_t)v13);
  if (v13[4] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v13 + 8))(v13);
  else
    --v13[4];
  return v15;
}

unint64_t WebCore::jsDataTransferItemPrototypeFunction_webkitGetAsEntry(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  WebCore::ScriptExecutionContext *v11;
  JSC::VM *v12;
  _DWORD *v13;
  unint64_t v14;
  uint64_t v16;
  _DWORD *v17;

  v4 = *((_QWORD *)a2 + 5);
  v16 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "DataTransferItem", "webkitGetAsEntry");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDataTransferItem::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDataTransferItem::s_info && v7 != 0);
  }
  if (!v6)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "DataTransferItem", "webkitGetAsEntry");
  v10 = *(_QWORD *)(v4 + 24);
  v11 = (WebCore::ScriptExecutionContext *)WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v11)
    return 10;
  v12 = *(JSC::VM **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  WebCore::DataTransferItem::getAsEntry(v10, v11, &v17);
  v13 = v17;
  if (!v17)
    return 2;
  v14 = WebCore::wrap<WebCore::FileSystemEntry>((uint64_t)this, v12, (uint64_t)v17);
  if (v13[8] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v13 + 16))(v13);
  else
    --v13[8];
  return v14;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore16JSStringCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16JSStringCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

unint64_t WebCore::jsDataTransferItemListPrototypeFunction_item(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::DataTransferItemList *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  WTF *v16;
  WTF::StringImpl *v17;
  unint64_t v18;
  _DWORD *v20;
  WTF::StringImpl *v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int v24;
  JSValue v26;
  JSC::VM *v27;
  _DWORD v28[2];
  WTF *v29;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v27 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v27, "DataTransferItemList", "item");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDataTransferItemList::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDataTransferItemList::s_info && v8 != 0);
  }
  if (!v7)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v27, "DataTransferItemList", "item");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v26.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v26);
  }
  v11 = *(WebCore::DataTransferItemList **)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v28);
  if (v28[1])
    return 0;
  v12 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v13 = v28[0];
  v14 = WebCore::DataTransferItemList::ensureItems(v11);
  if (*(_DWORD *)(v14 + 12) <= v13)
    return 2;
  v16 = *(WTF **)(*(_QWORD *)v14 + 8 * v13);
  ++*(_DWORD *)v16;
  v29 = 0;
  WTF::Ref<WebCore::DataTransferItem,WTF::RawPtrTraits<WebCore::DataTransferItem>,WTF::DefaultRefDerefTraits<WebCore::DataTransferItem>>::~Ref(&v29, v15);
  v18 = WebCore::wrap<WebCore::DataTransferItem>(v12, v16);
  if (*(_DWORD *)v16 == 1)
  {
    v20 = (_DWORD *)*((_QWORD *)v16 + 3);
    *((_QWORD *)v16 + 3) = 0;
    if (v20)
    {
      if (v20[4] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v20 + 8))(v20);
      else
        --v20[4];
    }
    v21 = (WTF::StringImpl *)*((_QWORD *)v16 + 2);
    *((_QWORD *)v16 + 2) = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v17);
      else
        *(_DWORD *)v21 -= 2;
    }
    v22 = (unsigned int *)*((_QWORD *)v16 + 1);
    *((_QWORD *)v16 + 1) = 0;
    if (v22)
    {
      do
      {
        v23 = __ldaxr(v22);
        v24 = v23 - 1;
      }
      while (__stlxr(v24, v22));
      if (!v24)
      {
        atomic_store(1u, v22);
        WTF::fastFree((WTF *)v22, v17);
      }
    }
    WTF::fastFree(v16, v17);
  }
  else
  {
    --*(_DWORD *)v16;
  }
  return v18;
}

uint64_t WebCore::jsDataTransferItemListPrototypeFunction_add(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char **v15;
  BOOL v16;
  unint64_t v18;
  uint64_t v19;
  WebCore::DataTransferItemList *v20;
  uint64_t v21;
  _BOOL4 v22;
  char **v23;
  BOOL v24;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  JSC::VM *v31;
  _DWORD *v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  JSC::VM *v35;
  _DWORD *v36;
  WTF::StringImpl *v37;
  WebCore::Document *v38;
  uint64_t v39;
  WTF::StringImpl *v40;
  WTF *v41;
  JSValue v42;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  uint64_t v46;
  uint64_t v47;
  _DWORD *v49;
  WTF::StringImpl *v50;
  unsigned int *v51;
  unsigned int v52;
  unsigned int v53;
  _DWORD *v54;
  uint64_t v55;
  WTF::StringImpl *v56;
  WTF *v57;
  _DWORD *v58;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v60;
  WTF::StringImpl *v61;
  int v62;
  WTF::StringImpl *v63;
  JSValue v64;
  _DWORD *v65;
  WTF::StringImpl *v66;
  unsigned int *v67;
  unsigned int v68;
  unsigned int v69;
  WebCore *v70;
  JSC::JSGlobalObject *v71;
  JSC::CallFrame *v72;
  _QWORD v73[2];
  WTF::StringImpl *v74;
  WTF::StringImpl *v75;
  WTF *v76;
  WTF::StringImpl *v77;
  int v78;
  uint64_t v79;
  int v80;
  WTF::StringImpl *v81;
  int v82;
  _DWORD *v83;
  WTF::StringImpl *v84;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v73[0] = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v73, "DataTransferItemList", "add");
  v12 = 16 * (*(_DWORD *)v10 & 0xFFFFFFFE);
  v13 = *(unsigned int *)(v12 + 0x4C);
  v14 = *(_DWORD *)(v12 + 0x4C) != 0;
  v15 = (char **)(16 * v13);
  if ((_DWORD)v13)
    v16 = v15 == &WebCore::JSDataTransferItemList::s_info;
  else
    v16 = 1;
  if (!v16)
  {
    do
    {
      v15 = (char **)v15[2];
      v14 = v15 != 0;
    }
    while (v15 != &WebCore::JSDataTransferItemList::s_info && v15 != 0);
  }
  if (!v14)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v73, "DataTransferItemList", "add");
  v73[1] = v9;
  v18 = *((int *)a2 + 8) - 1;
  if (v18 >= 2)
    v18 = 2;
  if (!v18)
  {
    v42.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v42);
  }
  if (v18 != 2)
  {
    v19 = *((_QWORD *)a2 + 6);
    v20 = *(WebCore::DataTransferItemList **)(v10 + 24);
    v76 = v9;
    if ((v19 & 0xFFFE000000000002) != 0)
      goto LABEL_27;
    v21 = *(unsigned int *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C);
    v22 = *(_DWORD *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C) != 0;
    v23 = (char **)(16 * v21);
    if ((_DWORD)v21)
      v24 = v23 == &WebCore::JSFile::s_info;
    else
      v24 = 1;
    if (!v24)
    {
      do
      {
        v23 = (char **)v23[2];
        v22 = v23 != 0;
      }
      while (v23 != &WebCore::JSFile::s_info && v23 != 0);
    }
    if (v22 && (v54 = *(_DWORD **)(v19 + 24)) != 0)
    {
      v55 = *(_QWORD *)(v12 + 40);
      ++v54[4];
      v83 = v54;
      WebCore::DataTransferItemList::add(v20, &v83, &v76);
      if (v76)
      {
        v26 = WebCore::wrap<WebCore::DataTransferItem>(v55, v76);
        v57 = v76;
        v76 = 0;
        if (v57)
        {
          if (*(_DWORD *)v57 == 1)
          {
            v65 = (_DWORD *)*((_QWORD *)v57 + 3);
            *((_QWORD *)v57 + 3) = 0;
            if (v65)
            {
              if (v65[4] == 1)
                (*(void (**)(_DWORD *))(*(_QWORD *)v65 + 8))(v65);
              else
                --v65[4];
            }
            v66 = (WTF::StringImpl *)*((_QWORD *)v57 + 2);
            *((_QWORD *)v57 + 2) = 0;
            if (v66)
            {
              if (*(_DWORD *)v66 == 2)
                WTF::StringImpl::destroy(v66, v56);
              else
                *(_DWORD *)v66 -= 2;
            }
            v67 = (unsigned int *)*((_QWORD *)v57 + 1);
            *((_QWORD *)v57 + 1) = 0;
            if (v67)
            {
              do
              {
                v68 = __ldaxr(v67);
                v69 = v68 - 1;
              }
              while (__stlxr(v69, v67));
              if (!v69)
              {
                atomic_store(1u, v67);
                WTF::fastFree((WTF *)v67, v56);
              }
            }
            WTF::fastFree(v57, v56);
          }
          else
          {
            --*(_DWORD *)v57;
          }
        }
      }
      else
      {
        v76 = 0;
        v26 = 2;
      }
      v58 = v83;
      v83 = 0;
      if (v58)
      {
        if (v58[4] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v58 + 8))(v58);
        else
          --v58[4];
      }
    }
    else
    {
LABEL_27:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v76, 0, "file", 5, "DataTransferItemList", 21, a8, "add", 4, "File", 5);
      return 0;
    }
    return v26;
  }
  v27 = *(_QWORD *)(v10 + 24);
  v28 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v28)
    return 10;
  v29 = v28;
  if (*(_BYTE *)(v28 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194A867E0);
  }
  v30 = *((_QWORD *)a2 + 6);
  v76 = (WTF *)v30;
  v31 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v30 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v30 + 5) == 2)
  {
    v32 = *(_DWORD **)(v30 + 8);
    if ((v32 & 1) != 0)
    {
      v32 = *(_DWORD **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v30, this);
      if (!v32)
        goto LABEL_36;
    }
    else if (!v32)
    {
LABEL_36:
      v83 = v32;
      goto LABEL_37;
    }
    *v32 += 2;
    goto LABEL_36;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v76, this);
LABEL_37:
  if (*((_DWORD *)v31 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v31);
    v33 = (WTF::StringImpl *)v83;
    if (hasExceptionsAfterHandlingTraps)
    {
      v82 = 1;
      v83 = 0;
      if (v33)
      {
        if (*(_DWORD *)v33 == 2)
          WTF::StringImpl::destroy(v33, v60);
        else
          *(_DWORD *)v33 -= 2;
      }
      v26 = 0;
      v47 = 1;
      goto LABEL_64;
    }
  }
  else
  {
    v33 = (WTF::StringImpl *)v83;
  }
  v81 = v33;
  v82 = 0;
  v34 = *((_QWORD *)a2 + 7);
  v76 = (WTF *)v34;
  v35 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v34 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v34 + 5) == 2)
  {
    v36 = *(_DWORD **)(v34 + 8);
    if ((v36 & 1) != 0)
    {
      v36 = *(_DWORD **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v34, this);
      if (!v36)
        goto LABEL_44;
    }
    else if (!v36)
    {
LABEL_44:
      v83 = v36;
      goto LABEL_45;
    }
    *v36 += 2;
    goto LABEL_44;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v76, this);
LABEL_45:
  if (*((_DWORD *)v35 + 20))
  {
    v62 = JSC::VM::hasExceptionsAfterHandlingTraps(v35);
    v37 = (WTF::StringImpl *)v83;
    if (v62)
    {
      v80 = 1;
      v83 = 0;
      if (v37)
      {
        if (*(_DWORD *)v37 == 2)
          WTF::StringImpl::destroy(v37, v61);
        else
          *(_DWORD *)v37 -= 2;
      }
      v26 = 0;
      v46 = 1;
      goto LABEL_63;
    }
  }
  else
  {
    v37 = (WTF::StringImpl *)v83;
  }
  v38 = (WebCore::Document *)(v29 - 192);
  v80 = 0;
  v39 = *(_QWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
  v81 = 0;
  v74 = v37;
  v75 = v33;
  v79 = 0;
  WebCore::DataTransferItemList::add(v27, v38, (unsigned int **)&v75, &v74, (uint64_t)&v76);
  if (!v78)
  {
    v41 = v76;
    v76 = 0;
    if (v41)
    {
      v26 = WebCore::wrap<WebCore::DataTransferItem>(v39, v41);
      if (*(_DWORD *)v41 == 1)
      {
        v49 = (_DWORD *)*((_QWORD *)v41 + 3);
        *((_QWORD *)v41 + 3) = 0;
        if (v49)
        {
          if (v49[4] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v49 + 8))(v49);
          else
            --v49[4];
        }
        v50 = (WTF::StringImpl *)*((_QWORD *)v41 + 2);
        *((_QWORD *)v41 + 2) = 0;
        if (v50)
        {
          if (*(_DWORD *)v50 == 2)
            WTF::StringImpl::destroy(v50, v40);
          else
            *(_DWORD *)v50 -= 2;
        }
        v51 = (unsigned int *)*((_QWORD *)v41 + 1);
        *((_QWORD *)v41 + 1) = 0;
        if (v51)
        {
          do
          {
            v52 = __ldaxr(v51);
            v53 = v52 - 1;
          }
          while (__stlxr(v53, v51));
          if (!v53)
          {
            atomic_store(1u, v51);
            WTF::fastFree((WTF *)v51, v40);
          }
        }
        WTF::fastFree(v41, v40);
      }
      else
      {
        --*(_DWORD *)v41;
      }
    }
    else
    {
      v26 = 2;
    }
LABEL_54:
    if (v78 != -1)
      ((void (*)(_DWORD **, WTF **))off_1E3265398[v78])(&v83, &v76);
    v78 = -1;
    v44 = v74;
    v74 = 0;
    if (v44)
    {
      if (*(_DWORD *)v44 == 2)
        WTF::StringImpl::destroy(v44, v40);
      else
        *(_DWORD *)v44 -= 2;
    }
    v45 = v75;
    v75 = 0;
    if (v45)
    {
      if (*(_DWORD *)v45 == 2)
        WTF::StringImpl::destroy(v45, v40);
      else
        *(_DWORD *)v45 -= 2;
    }
    v46 = 0;
LABEL_63:
    ((void (*)(WTF **, uint64_t *))off_1E325A258[v46])(&v76, &v79);
    v47 = 0;
LABEL_64:
    ((void (*)(WTF **, WTF::StringImpl **))off_1E325A258[v47])(&v76, &v81);
    return v26;
  }
  if (v78 == 1)
  {
    v40 = (WTF::StringImpl *)v76;
    LOBYTE(v83) = (_BYTE)v76;
    v63 = v77;
    v77 = 0;
    v84 = v63;
    if (!*((_QWORD *)v9 + 2))
    {
      v64.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v76, (JSC::JSGlobalObject *)&v84);
      JSC::VM::throwException(v9, this, v64);
      v63 = v84;
    }
    v84 = 0;
    if (v63)
    {
      if (*(_DWORD *)v63 == 2)
        WTF::StringImpl::destroy(v63, v40);
      else
        *(_DWORD *)v63 -= 2;
    }
    v26 = 0;
    goto LABEL_54;
  }
  v70 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsDataTransferItemListPrototypeFunction_remove(v70, v71, v72);
}

uint64_t WebCore::jsDataTransferItemListPrototypeFunction_remove(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WTF **v11;
  uint64_t result;
  JSValue v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  JSValue v16;
  WTF::StringImpl *v17;
  JSC::VM *v18;
  unsigned int v19[2];
  char v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  WTF::StringImpl *v23;
  char v24;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v18 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v18, "DataTransferItemList", "remove");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDataTransferItemList::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDataTransferItemList::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v18, "DataTransferItemList", "remove");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  v11 = *(WTF ***)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v19);
  if (!v19[1])
  {
    WebCore::DataTransferItemList::remove(v11, (WTF::StringImpl *)v19[0], &v22);
    if (!v24)
      return 10;
    v14 = (WTF::StringImpl *)v22;
    v20 = v22;
    v15 = v23;
    v23 = 0;
    v21 = v15;
    if (!*((_QWORD *)v4 + 2))
    {
      v16.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v22, (JSC::JSGlobalObject *)&v21);
      JSC::VM::throwException(v4, this, v16);
      v15 = v21;
    }
    v21 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v14);
      else
        *(_DWORD *)v15 -= 2;
    }
    if (v24)
    {
      v17 = v23;
      v23 = 0;
      if (v17)
      {
        if (*(_DWORD *)v17 != 2)
        {
          result = 0;
          *(_DWORD *)v17 -= 2;
          return result;
        }
        WTF::StringImpl::destroy(v17, v14);
      }
    }
  }
  return 0;
}

uint64_t WebCore::jsDataTransferItemListPrototypeFunction_clear(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "DataTransferItemList", "clear");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDataTransferItemList::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDataTransferItemList::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "DataTransferItemList", "clear");
  WebCore::DataTransferItemList::clear(*(WebCore::DataTransferItemList **)(v3 + 24));
  return 10;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16DataTransferItemENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF *v2;
  _DWORD *v3;
  WTF::StringImpl *v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int v7;

  v2 = *(WTF **)a2;
  *(_QWORD *)a2 = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = (_DWORD *)*((_QWORD *)v2 + 3);
      *((_QWORD *)v2 + 3) = 0;
      if (v3)
      {
        if (v3[4] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v3 + 8))(v3);
        else
          --v3[4];
      }
      v4 = (WTF::StringImpl *)*((_QWORD *)v2 + 2);
      *((_QWORD *)v2 + 2) = 0;
      if (v4)
      {
        if (*(_DWORD *)v4 == 2)
          WTF::StringImpl::destroy(v4, a2);
        else
          *(_DWORD *)v4 -= 2;
      }
      v5 = (unsigned int *)*((_QWORD *)v2 + 1);
      *((_QWORD *)v2 + 1) = 0;
      if (v5)
      {
        do
        {
          v6 = __ldaxr(v5);
          v7 = v6 - 1;
        }
        while (__stlxr(v7, v5));
        if (!v7)
        {
          atomic_store(1u, v5);
          WTF::fastFree((WTF *)v5, a2);
        }
      }
      WTF::fastFree(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16DataTransferItemENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_BYTE *WebCore::jsDatabasePrototypeFunction_changeVersion(JSC::VM **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  WebCore::JSSQLTransactionCallback *v8;
  WebCore *v9;
  JSC::VM *v10;
  uint64_t v11;
  uint64_t v13;
  BOOL v14;
  char **v15;
  BOOL v16;
  uint64_t v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  JSC::VM *v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  unint64_t v27;
  unsigned int v28;
  WTF::StringImpl *v29;
  int v30;
  int v31;
  unint64_t v32;
  WebCore::JSDOMGlobalObject *v33;
  unsigned int v34;
  WebCore::JSSQLTransactionErrorCallback *v35;
  int v36;
  int v37;
  unint64_t v38;
  WebCore::JSDOMGlobalObject *v39;
  unsigned int v40;
  WebCore::JSVoidCallback *v41;
  int v42;
  int v43;
  uint64_t v44;
  WTF::StringImpl *v45;
  unsigned int *v46;
  unsigned int *v47;
  unsigned int v48;
  unsigned int v49;
  WebCore *v50;
  unsigned int *v51;
  unsigned int *v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int *v55;
  unsigned int *v56;
  unsigned int v57;
  unsigned int v58;
  WTF::StringImpl *v59;
  WTF::StringImpl *v60;
  int v61;
  uint64_t v62;
  int v63;
  int v64;
  int v65;
  int v66;
  JSValue v69;
  WTF::StringImpl *v70;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v72;
  WTF::StringImpl *v73;
  WTF::StringImpl *v74;
  JSC::VM *v75;
  WebCore::JSVoidCallback *v76;
  int v77;
  WebCore::JSSQLTransactionErrorCallback *v78;
  int v79;
  WTF::StringImpl *v80;
  int v81;
  WTF::StringImpl *v82;
  int v83;
  WTF::StringImpl *v84;
  int v85;
  unsigned int *v86;
  int v87;
  WebCore *v88;
  unsigned int *v89;
  unsigned int *v90;
  WTF::StringImpl *v91;
  _QWORD v92[2];

  v9 = (WebCore *)this;
  v10 = this[7];
  v75 = v10;
  v11 = *((_QWORD *)a2 + 5);
  if ((v11 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v75, "Database", "changeVersion");
  v13 = *(unsigned int *)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0x4C);
  v14 = *(_DWORD *)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0x4C) != 0;
  v15 = (char **)(16 * v13);
  if ((_DWORD)v13)
    v16 = v15 == &WebCore::JSDatabase::s_info;
  else
    v16 = 1;
  if (!v16)
  {
    do
    {
      v15 = (char **)v15[2];
      v14 = v15 != 0;
    }
    while (v15 != &WebCore::JSDatabase::s_info && v15 != 0);
  }
  if (!v14)
    return WebCore::throwThisTypeError((int)this, (int)&v75, "Database", "changeVersion");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v69.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, a2);
    return (_BYTE *)JSC::VM::throwException(v10, v9, v69);
  }
  v18 = *(_QWORD *)(v11 + 24);
  v19 = *((_QWORD *)a2 + 6);
  v86 = (unsigned int *)v19;
  if ((v19 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v19 + 5) == 2)
  {
    v20 = *(WTF::StringImpl **)(v19 + 8);
    if ((v20 & 1) != 0)
    {
      v20 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v19, (JSC::JSGlobalObject *)this);
      if (!v20)
        goto LABEL_18;
    }
    else if (!v20)
    {
LABEL_18:
      v82 = v20;
      goto LABEL_19;
    }
    *(_DWORD *)v20 += 2;
    goto LABEL_18;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v86, (JSC::JSGlobalObject *)this);
LABEL_19:
  if (*((_DWORD *)v10 + 20))
  {
    v21 = v82;
    if (JSC::VM::hasExceptionsAfterHandlingTraps(v10))
    {
      v85 = 1;
      v82 = 0;
      if (v21)
      {
        if (*(_DWORD *)v21 == 2)
          WTF::StringImpl::destroy(v21, v70);
        else
          *(_DWORD *)v21 -= 2;
      }
      v62 = 0;
      v66 = 1;
      goto LABEL_89;
    }
  }
  else
  {
    v21 = v82;
  }
  v84 = v21;
  v85 = 0;
  v22 = *((_QWORD *)a2 + 7);
  v86 = (unsigned int *)v22;
  v23 = (JSC::VM *)*((_QWORD *)v9 + 7);
  if ((v22 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v22 + 5) == 2)
  {
    v24 = *(WTF::StringImpl **)(v22 + 8);
    if ((v24 & 1) != 0)
    {
      v24 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v22, v9);
      if (!v24)
        goto LABEL_26;
    }
    else if (!v24)
    {
LABEL_26:
      v80 = v24;
      goto LABEL_27;
    }
    *(_DWORD *)v24 += 2;
    goto LABEL_26;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v86, v9);
LABEL_27:
  if (!*((_DWORD *)v23 + 20))
  {
    v25 = v80;
LABEL_29:
    v82 = v25;
    v83 = 0;
    v26 = *((int *)a2 + 8);
    v73 = v25;
    v74 = v21;
    if ((unint64_t)(v26 - 4) >= 0xFFFFFFFFFFFFFFFDLL
      || (v27 = *((_QWORD *)a2 + 8), (v27 & 0xFFFFFFFFFFFFFFF7) == 2))
    {
      v8 = 0;
      v80 = 0;
      v81 = 0;
    }
    else
    {
      v21 = *(WTF::StringImpl **)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0x28);
      v78 = (WebCore::JSSQLTransactionErrorCallback *)*((_QWORD *)v9 + 7);
      if ((v27 & 0xFFFE000000000002) == 0
        && (v28 = *(unsigned __int8 *)(v27 + 5), v28 >= 0x17)
        && ((v28 & 0xFE) == 0x1A
         || (*(_BYTE *)(v27 + 6) & 4) != 0
         && ((*(void (**)(unsigned int **__return_ptr, unint64_t))(16
                                                                                   * *(unsigned int *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x4C)
                                                                                   + 0x38))(&v86, v27), (_BYTE)v86)))
      {
        v8 = (WebCore::JSSQLTransactionCallback *)WTF::fastMalloc((WTF *)0x20);
        v29 = WebCore::JSSQLTransactionCallback::JSSQLTransactionCallback(v8, v27, v21);
        v30 = 0;
        v87 = 0;
        v86 = 0;
        v31 = 1;
        v80 = v29;
      }
      else
      {
        WebCore::throwArgumentMustBeFunctionError((uint64_t)v9, (uint64_t)&v78, 2, "callback", 9, "Database", 9, a8, "changeVersion", 14);
        v31 = 0;
        v30 = 1;
        v87 = 1;
      }
      v81 = v30;
      ((void (*)(WebCore::JSSQLTransactionErrorCallback **, unsigned int **))off_1E3265470[v30])(&v78, &v86);
      if (!v31)
      {
        v62 = 0;
        v64 = 1;
LABEL_85:
        ((void (*)(unsigned int **, WTF::StringImpl **))off_1E32654C0[v64])(&v86, &v80);
LABEL_86:
        v65 = v83;
        if (v83 == -1)
          goto LABEL_88;
        goto LABEL_87;
      }
      v26 = *((int *)a2 + 8);
      v25 = v73;
    }
    if ((unint64_t)(v26 - 5) >= 0xFFFFFFFFFFFFFFFCLL
      || (v32 = *((_QWORD *)a2 + 9), (v32 & 0xFFFFFFFFFFFFFFF7) == 2))
    {
      v21 = 0;
      v78 = 0;
      v79 = 0;
    }
    else
    {
      v33 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0x28);
      v76 = (WebCore::JSVoidCallback *)*((_QWORD *)v9 + 7);
      if ((v32 & 0xFFFE000000000002) == 0
        && (v34 = *(unsigned __int8 *)(v32 + 5), v34 >= 0x17)
        && ((v34 & 0xFE) == 0x1A
         || (*(_BYTE *)(v32 + 6) & 4) != 0
         && ((*(void (**)(unsigned int **__return_ptr, unint64_t))(16
                                                                                   * *(unsigned int *)(16 * (*(_DWORD *)v32 & 0xFFFFFFFE) + 0x4C)
                                                                                   + 0x38))(&v86, v32), (_BYTE)v86)))
      {
        v21 = (WTF::StringImpl *)WTF::fastMalloc((WTF *)0x20);
        v35 = WebCore::JSSQLTransactionErrorCallback::JSSQLTransactionErrorCallback(v21, v32, v33);
        v36 = 0;
        v87 = 0;
        v86 = 0;
        v37 = 1;
        v78 = v35;
      }
      else
      {
        WebCore::throwArgumentMustBeFunctionError((uint64_t)v9, (uint64_t)&v76, 3, "errorCallback", 14, "Database", 9, a8, "changeVersion", 14);
        v37 = 0;
        v36 = 1;
        v87 = 1;
      }
      v79 = v36;
      ((void (*)(WebCore::JSVoidCallback **, unsigned int **))off_1E3265480[v36])(&v76, &v86);
      if (!v37)
      {
        v62 = 0;
        v63 = 1;
LABEL_83:
        ((void (*)(unsigned int **, WebCore::JSSQLTransactionErrorCallback **))off_1E32654B0[v63])(&v86, &v78);
LABEL_84:
        v64 = v81;
        if (v81 == -1)
          goto LABEL_86;
        goto LABEL_85;
      }
      v26 = *((int *)a2 + 8);
      v25 = v73;
    }
    if ((unint64_t)(v26 - 6) >= 0xFFFFFFFFFFFFFFFBLL
      || (v38 = *((_QWORD *)a2 + 10), (v38 & 0xFFFFFFFFFFFFFFF7) == 2))
    {
      v9 = 0;
      v77 = 0;
    }
    else
    {
      v39 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0x28);
      v92[0] = *((_QWORD *)v9 + 7);
      if ((v38 & 0xFFFE000000000002) == 0
        && (v40 = *(unsigned __int8 *)(v38 + 5), v40 >= 0x17)
        && ((v40 & 0xFE) == 0x1A
         || (*(_BYTE *)(v38 + 6) & 4) != 0
         && ((*(void (**)(unsigned int **__return_ptr, unint64_t))(16
                                                                                   * *(unsigned int *)(16 * (*(_DWORD *)v38 & 0xFFFFFFFE) + 0x4C)
                                                                                   + 0x38))(&v86, v38), (_BYTE)v86)))
      {
        v9 = (WebCore *)WTF::fastMalloc((WTF *)0x20);
        v41 = WebCore::JSVoidCallback::JSVoidCallback(v9, v38, v39);
        v42 = 0;
        v87 = 0;
        v86 = 0;
        v43 = 1;
        v76 = v41;
      }
      else
      {
        WebCore::throwArgumentMustBeFunctionError((uint64_t)v9, (uint64_t)v92, 4, "successCallback", 16, "Database", 9, a8, "changeVersion", 14);
        v43 = 0;
        v42 = 1;
        v87 = 1;
      }
      v77 = v42;
      ((void (*)(_QWORD *, unsigned int **))off_1E3265490[v42])(v92, &v86);
      if (!v43)
      {
        v62 = 0;
        v61 = 1;
        goto LABEL_81;
      }
      v25 = v73;
    }
    v84 = 0;
    v91 = v25;
    v92[0] = v74;
    v82 = 0;
    v80 = 0;
    v89 = (unsigned int *)v21;
    v90 = (unsigned int *)v8;
    v78 = 0;
    v76 = 0;
    v88 = v9;
    v44 = WTF::fastMalloc((WTF *)0x28);
    *(_DWORD *)(v44 + 8) = 1;
    *(_QWORD *)v44 = off_1E336D8F8;
    WTF::String::isolatedCopy();
    WTF::String::isolatedCopy();
    *(_QWORD *)(v44 + 32) = 0;
    v86 = (unsigned int *)v44;
    WebCore::Database::runTransaction(v18, (uint64_t *)&v90, (uint64_t *)&v89, (uint64_t *)&v88, (uint64_t *)&v86, 0);
    v46 = v86;
    v86 = 0;
    if (v46)
    {
      v47 = v46 + 2;
      do
      {
        v48 = __ldaxr(v47);
        v49 = v48 - 1;
      }
      while (__stlxr(v49, v47));
      if (!v49)
      {
        atomic_store(1u, v46 + 2);
        (*(void (**)(unsigned int *))(*(_QWORD *)v46 + 8))(v46);
      }
    }
    v50 = v88;
    v88 = 0;
    if (v50)
    {
      if (*((_DWORD *)v50 + 4) == 1)
        (*(void (**)(WebCore *))(*(_QWORD *)v50 + 16))(v50);
      else
        --*((_DWORD *)v50 + 4);
    }
    v51 = v89;
    v89 = 0;
    if (v51)
    {
      v52 = v51 + 4;
      do
      {
        v53 = __ldaxr(v52);
        v54 = v53 - 1;
      }
      while (__stlxr(v54, v52));
      if (!v54)
      {
        atomic_store(1u, v51 + 4);
        (*(void (**)(unsigned int *))(*(_QWORD *)v51 + 16))(v51);
      }
    }
    v55 = v90;
    v90 = 0;
    if (v55)
    {
      v56 = v55 + 4;
      do
      {
        v57 = __ldaxr(v56);
        v58 = v57 - 1;
      }
      while (__stlxr(v58, v56));
      if (!v58)
      {
        atomic_store(1u, v55 + 4);
        (*(void (**)(unsigned int *))(*(_QWORD *)v55 + 16))(v55);
      }
    }
    v59 = v91;
    v91 = 0;
    if (v59)
    {
      if (*(_DWORD *)v59 == 2)
        WTF::StringImpl::destroy(v59, v45);
      else
        *(_DWORD *)v59 -= 2;
    }
    v60 = (WTF::StringImpl *)v92[0];
    v92[0] = 0;
    if (v60)
    {
      if (*(_DWORD *)v60 == 2)
        WTF::StringImpl::destroy(v60, v45);
      else
        *(_DWORD *)v60 -= 2;
    }
    v61 = v77;
    v62 = 10;
    if (v77 == -1)
    {
LABEL_82:
      v63 = v79;
      if (v79 == -1)
        goto LABEL_84;
      goto LABEL_83;
    }
LABEL_81:
    ((void (*)(unsigned int **, WebCore::JSVoidCallback **))off_1E32654A0[v61])(&v86, &v76);
    goto LABEL_82;
  }
  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v23);
  v25 = v80;
  if (!hasExceptionsAfterHandlingTraps)
    goto LABEL_29;
  v83 = 1;
  v80 = 0;
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v72);
    else
      *(_DWORD *)v25 -= 2;
  }
  v62 = 0;
  v65 = 1;
LABEL_87:
  ((void (*)(unsigned int **, WTF::StringImpl **))off_1E325A258[v65])(&v86, &v82);
LABEL_88:
  v66 = v85;
  if (v85 != -1)
LABEL_89:
    ((void (*)(unsigned int **, WTF::StringImpl **))off_1E325A258[v66])(&v86, &v84);
  return (_BYTE *)v62;
}

_BYTE *WebCore::jsDatabasePrototypeFunction_transaction(JSC::VM **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  WebCore *v8;
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  unint64_t v18;
  WebCore::JSDOMGlobalObject *v19;
  unsigned int v20;
  WebCore::JSSQLTransactionCallback *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  WebCore::JSDOMGlobalObject *v25;
  unsigned int v26;
  WebCore::JSSQLTransactionErrorCallback *v27;
  int v28;
  int v29;
  unint64_t v30;
  WebCore::JSDOMGlobalObject *v31;
  unsigned int v32;
  WebCore::JSVoidCallback *v33;
  int v34;
  int v35;
  uint64_t v36;
  int v37;
  WebCore *v38;
  unsigned int *v39;
  unsigned int *v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int *v43;
  unsigned int *v44;
  unsigned int v45;
  unsigned int v46;
  int v47;
  int v48;
  JSValue v51;
  uint64_t v52;
  JSC::VM *v53;
  WebCore::JSVoidCallback *v54;
  int v55;
  JSC::VM *v56;
  int v57;
  WebCore::JSSQLTransactionCallback *v58;
  int v59;
  unsigned int *v60;
  int v61;
  WebCore *v62;
  unsigned int *v63;

  v8 = (WebCore *)this;
  v9 = this[7];
  v53 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v53, "Database", "transaction");
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSDatabase::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSDatabase::s_info && v14 != 0);
  }
  if (!v13)
    return WebCore::throwThisTypeError((int)this, (int)&v53, "Database", "transaction");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v51.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, v8, v51);
  }
  v17 = *(_QWORD *)(v10 + 24);
  v18 = *((_QWORD *)a2 + 6);
  v19 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
  v56 = v9;
  if ((v18 & 0xFFFE000000000002) != 0
    || (v20 = *(unsigned __int8 *)(v18 + 5), v20 < 0x17)
    || (v20 & 0xFE) != 0x1A
    && ((*(_BYTE *)(v18 + 6) & 4) == 0
     || ((*(void (**)(unsigned int **__return_ptr, unint64_t))(16
                                                                               * *(unsigned int *)(16
                                                                                                 * (*(_DWORD *)v18 & 0xFFFFFFFE)
                                                                                                 + 0x4C)
                                                                               + 0x38))(&v60, v18), !(_BYTE)v60)))
  {
    WebCore::throwArgumentMustBeFunctionError((uint64_t)v8, (uint64_t)&v56, 0, "callback", 9, "Database", 9, a8, "transaction", 12);
    v36 = 0;
    v48 = 1;
    v59 = 1;
    goto LABEL_52;
  }
  v21 = (WebCore::JSSQLTransactionCallback *)WTF::fastMalloc((WTF *)0x20);
  v58 = WebCore::JSSQLTransactionCallback::JSSQLTransactionCallback(v21, v18, v19);
  v59 = 0;
  v23 = *((int *)a2 + 8);
  if ((unint64_t)(v23 - 3) >= 0xFFFFFFFFFFFFFFFELL
    || (v24 = *((_QWORD *)a2 + 7), (v24 & 0xFFFFFFFFFFFFFFF7) == 2))
  {
    v19 = 0;
    v56 = 0;
    v57 = 0;
    goto LABEL_25;
  }
  v52 = v17;
  v25 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
  v54 = (WebCore::JSVoidCallback *)*((_QWORD *)v8 + 7);
  if ((v24 & 0xFFFE000000000002) == 0
    && (v26 = *(unsigned __int8 *)(v24 + 5), v26 >= 0x17)
    && ((v26 & 0xFE) == 0x1A
     || (*(_BYTE *)(v24 + 6) & 4) != 0
     && ((*(void (**)(unsigned int **__return_ptr, unint64_t))(16
                                                                               * *(unsigned int *)(16
                                                                                                 * (*(_DWORD *)v24 & 0xFFFFFFFE)
                                                                                                 + 0x4C)
                                                                               + 0x38))(&v60, v24), (_BYTE)v60)))
  {
    v19 = (WebCore::JSDOMGlobalObject *)WTF::fastMalloc((WTF *)0x20);
    v27 = WebCore::JSSQLTransactionErrorCallback::JSSQLTransactionErrorCallback(v19, v24, v25);
    v28 = 0;
    v61 = 0;
    v60 = 0;
    v29 = 1;
    v56 = v27;
  }
  else
  {
    v28 = 1;
    WebCore::throwArgumentMustBeFunctionError((uint64_t)v8, (uint64_t)&v54, 1, "errorCallback", 14, "Database", 9, v22, "transaction", 12);
    v29 = 0;
    v61 = 1;
  }
  v57 = v28;
  ((void (*)(WebCore::JSVoidCallback **, unsigned int **))off_1E3265480[v28])(&v54, &v60);
  if (v29)
  {
    v23 = *((int *)a2 + 8);
    v17 = v52;
LABEL_25:
    if ((unint64_t)(v23 - 4) >= 0xFFFFFFFFFFFFFFFDLL
      || (v30 = *((_QWORD *)a2 + 8), (v30 & 0xFFFFFFFFFFFFFFF7) == 2))
    {
      v8 = 0;
      v55 = 0;
    }
    else
    {
      v31 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
      v63 = (unsigned int *)*((_QWORD *)v8 + 7);
      if ((v30 & 0xFFFE000000000002) == 0
        && (v32 = *(unsigned __int8 *)(v30 + 5), v32 >= 0x17)
        && ((v32 & 0xFE) == 0x1A
         || (*(_BYTE *)(v30 + 6) & 4) != 0
         && ((*(void (**)(unsigned int **__return_ptr, unint64_t))(16
                                                                                   * *(unsigned int *)(16 * (*(_DWORD *)v30 & 0xFFFFFFFE) + 0x4C)
                                                                                   + 0x38))(&v60, v30), (_BYTE)v60)))
      {
        v8 = (WebCore *)WTF::fastMalloc((WTF *)0x20);
        v33 = WebCore::JSVoidCallback::JSVoidCallback(v8, v30, v31);
        v34 = 0;
        v61 = 0;
        v60 = 0;
        v35 = 1;
        v54 = v33;
      }
      else
      {
        WebCore::throwArgumentMustBeFunctionError((uint64_t)v8, (uint64_t)&v63, 2, "successCallback", 16, "Database", 9, v22, "transaction", 12);
        v35 = 0;
        v34 = 1;
        v61 = 1;
      }
      v55 = v34;
      ((void (*)(unsigned int **, unsigned int **))off_1E3265490[v34])(&v63, &v60);
      if (!v35)
      {
        v36 = 0;
        v37 = 1;
        goto LABEL_48;
      }
    }
    v58 = 0;
    v60 = (unsigned int *)v21;
    v56 = 0;
    v62 = v8;
    v63 = (unsigned int *)v19;
    v54 = 0;
    WebCore::Database::transaction(v17, (uint64_t *)&v60, (uint64_t *)&v63, (uint64_t *)&v62);
    v38 = v62;
    v62 = 0;
    if (v38)
    {
      if (*((_DWORD *)v38 + 4) == 1)
        (*(void (**)(WebCore *))(*(_QWORD *)v38 + 16))(v38);
      else
        --*((_DWORD *)v38 + 4);
    }
    v39 = v63;
    v63 = 0;
    if (v39)
    {
      v40 = v39 + 4;
      do
      {
        v41 = __ldaxr(v40);
        v42 = v41 - 1;
      }
      while (__stlxr(v42, v40));
      if (!v42)
      {
        atomic_store(1u, v39 + 4);
        (*(void (**)(unsigned int *))(*(_QWORD *)v39 + 16))(v39);
      }
    }
    v43 = v60;
    v60 = 0;
    if (v43)
    {
      v44 = v43 + 4;
      do
      {
        v45 = __ldaxr(v44);
        v46 = v45 - 1;
      }
      while (__stlxr(v46, v44));
      if (!v46)
      {
        atomic_store(1u, v43 + 4);
        (*(void (**)(unsigned int *))(*(_QWORD *)v43 + 16))(v43);
      }
    }
    v37 = v55;
    v36 = 10;
    if (v55 == -1)
    {
LABEL_49:
      v47 = v57;
      if (v57 == -1)
        goto LABEL_51;
      goto LABEL_50;
    }
LABEL_48:
    ((void (*)(unsigned int **, WebCore::JSVoidCallback **))off_1E32654A0[v37])(&v60, &v54);
    goto LABEL_49;
  }
  v36 = 0;
  v47 = 1;
LABEL_50:
  ((void (*)(unsigned int **, JSC::VM **))off_1E32654B0[v47])(&v60, &v56);
LABEL_51:
  v48 = v59;
  if (v59 != -1)
LABEL_52:
    ((void (*)(unsigned int **, WebCore::JSSQLTransactionCallback **))off_1E3265470[v48])(&v60, &v58);
  return (_BYTE *)v36;
}

_BYTE *WebCore::jsDatabasePrototypeFunction_readTransaction(JSC::VM **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  WebCore *v8;
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  unint64_t v18;
  WebCore::JSDOMGlobalObject *v19;
  unsigned int v20;
  WebCore::JSSQLTransactionCallback *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  WebCore::JSDOMGlobalObject *v25;
  unsigned int v26;
  WebCore::JSSQLTransactionErrorCallback *v27;
  int v28;
  int v29;
  unint64_t v30;
  WebCore::JSDOMGlobalObject *v31;
  unsigned int v32;
  WebCore::JSVoidCallback *v33;
  int v34;
  int v35;
  uint64_t v36;
  int v37;
  WebCore *v38;
  unsigned int *v39;
  unsigned int *v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int *v43;
  unsigned int *v44;
  unsigned int v45;
  unsigned int v46;
  int v47;
  int v48;
  JSValue v51;
  uint64_t v52;
  JSC::VM *v53;
  WebCore::JSVoidCallback *v54;
  int v55;
  JSC::VM *v56;
  int v57;
  WebCore::JSSQLTransactionCallback *v58;
  int v59;
  unsigned int *v60;
  int v61;
  WebCore *v62;
  unsigned int *v63;

  v8 = (WebCore *)this;
  v9 = this[7];
  v53 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v53, "Database", "readTransaction");
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSDatabase::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSDatabase::s_info && v14 != 0);
  }
  if (!v13)
    return WebCore::throwThisTypeError((int)this, (int)&v53, "Database", "readTransaction");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v51.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, v8, v51);
  }
  v17 = *(_QWORD *)(v10 + 24);
  v18 = *((_QWORD *)a2 + 6);
  v19 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
  v56 = v9;
  if ((v18 & 0xFFFE000000000002) != 0
    || (v20 = *(unsigned __int8 *)(v18 + 5), v20 < 0x17)
    || (v20 & 0xFE) != 0x1A
    && ((*(_BYTE *)(v18 + 6) & 4) == 0
     || ((*(void (**)(unsigned int **__return_ptr, unint64_t))(16
                                                                               * *(unsigned int *)(16
                                                                                                 * (*(_DWORD *)v18 & 0xFFFFFFFE)
                                                                                                 + 0x4C)
                                                                               + 0x38))(&v60, v18), !(_BYTE)v60)))
  {
    WebCore::throwArgumentMustBeFunctionError((uint64_t)v8, (uint64_t)&v56, 0, "callback", 9, "Database", 9, a8, "readTransaction", 16);
    v36 = 0;
    v48 = 1;
    v59 = 1;
    goto LABEL_52;
  }
  v21 = (WebCore::JSSQLTransactionCallback *)WTF::fastMalloc((WTF *)0x20);
  v58 = WebCore::JSSQLTransactionCallback::JSSQLTransactionCallback(v21, v18, v19);
  v59 = 0;
  v23 = *((int *)a2 + 8);
  if ((unint64_t)(v23 - 3) >= 0xFFFFFFFFFFFFFFFELL
    || (v24 = *((_QWORD *)a2 + 7), (v24 & 0xFFFFFFFFFFFFFFF7) == 2))
  {
    v19 = 0;
    v56 = 0;
    v57 = 0;
    goto LABEL_25;
  }
  v52 = v17;
  v25 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
  v54 = (WebCore::JSVoidCallback *)*((_QWORD *)v8 + 7);
  if ((v24 & 0xFFFE000000000002) == 0
    && (v26 = *(unsigned __int8 *)(v24 + 5), v26 >= 0x17)
    && ((v26 & 0xFE) == 0x1A
     || (*(_BYTE *)(v24 + 6) & 4) != 0
     && ((*(void (**)(unsigned int **__return_ptr, unint64_t))(16
                                                                               * *(unsigned int *)(16
                                                                                                 * (*(_DWORD *)v24 & 0xFFFFFFFE)
                                                                                                 + 0x4C)
                                                                               + 0x38))(&v60, v24), (_BYTE)v60)))
  {
    v19 = (WebCore::JSDOMGlobalObject *)WTF::fastMalloc((WTF *)0x20);
    v27 = WebCore::JSSQLTransactionErrorCallback::JSSQLTransactionErrorCallback(v19, v24, v25);
    v28 = 0;
    v61 = 0;
    v60 = 0;
    v29 = 1;
    v56 = v27;
  }
  else
  {
    v28 = 1;
    WebCore::throwArgumentMustBeFunctionError((uint64_t)v8, (uint64_t)&v54, 1, "errorCallback", 14, "Database", 9, v22, "readTransaction", 16);
    v29 = 0;
    v61 = 1;
  }
  v57 = v28;
  ((void (*)(WebCore::JSVoidCallback **, unsigned int **))off_1E3265480[v28])(&v54, &v60);
  if (v29)
  {
    v23 = *((int *)a2 + 8);
    v17 = v52;
LABEL_25:
    if ((unint64_t)(v23 - 4) >= 0xFFFFFFFFFFFFFFFDLL
      || (v30 = *((_QWORD *)a2 + 8), (v30 & 0xFFFFFFFFFFFFFFF7) == 2))
    {
      v8 = 0;
      v55 = 0;
    }
    else
    {
      v31 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
      v63 = (unsigned int *)*((_QWORD *)v8 + 7);
      if ((v30 & 0xFFFE000000000002) == 0
        && (v32 = *(unsigned __int8 *)(v30 + 5), v32 >= 0x17)
        && ((v32 & 0xFE) == 0x1A
         || (*(_BYTE *)(v30 + 6) & 4) != 0
         && ((*(void (**)(unsigned int **__return_ptr, unint64_t))(16
                                                                                   * *(unsigned int *)(16 * (*(_DWORD *)v30 & 0xFFFFFFFE) + 0x4C)
                                                                                   + 0x38))(&v60, v30), (_BYTE)v60)))
      {
        v8 = (WebCore *)WTF::fastMalloc((WTF *)0x20);
        v33 = WebCore::JSVoidCallback::JSVoidCallback(v8, v30, v31);
        v34 = 0;
        v61 = 0;
        v60 = 0;
        v35 = 1;
        v54 = v33;
      }
      else
      {
        WebCore::throwArgumentMustBeFunctionError((uint64_t)v8, (uint64_t)&v63, 2, "successCallback", 16, "Database", 9, v22, "readTransaction", 16);
        v35 = 0;
        v34 = 1;
        v61 = 1;
      }
      v55 = v34;
      ((void (*)(unsigned int **, unsigned int **))off_1E3265490[v34])(&v63, &v60);
      if (!v35)
      {
        v36 = 0;
        v37 = 1;
        goto LABEL_48;
      }
    }
    v58 = 0;
    v60 = (unsigned int *)v21;
    v56 = 0;
    v62 = v8;
    v63 = (unsigned int *)v19;
    v54 = 0;
    WebCore::Database::readTransaction(v17, (uint64_t *)&v60, (uint64_t *)&v63, (uint64_t *)&v62);
    v38 = v62;
    v62 = 0;
    if (v38)
    {
      if (*((_DWORD *)v38 + 4) == 1)
        (*(void (**)(WebCore *))(*(_QWORD *)v38 + 16))(v38);
      else
        --*((_DWORD *)v38 + 4);
    }
    v39 = v63;
    v63 = 0;
    if (v39)
    {
      v40 = v39 + 4;
      do
      {
        v41 = __ldaxr(v40);
        v42 = v41 - 1;
      }
      while (__stlxr(v42, v40));
      if (!v42)
      {
        atomic_store(1u, v39 + 4);
        (*(void (**)(unsigned int *))(*(_QWORD *)v39 + 16))(v39);
      }
    }
    v43 = v60;
    v60 = 0;
    if (v43)
    {
      v44 = v43 + 4;
      do
      {
        v45 = __ldaxr(v44);
        v46 = v45 - 1;
      }
      while (__stlxr(v46, v44));
      if (!v46)
      {
        atomic_store(1u, v43 + 4);
        (*(void (**)(unsigned int *))(*(_QWORD *)v43 + 16))(v43);
      }
    }
    v37 = v55;
    v36 = 10;
    if (v55 == -1)
    {
LABEL_49:
      v47 = v57;
      if (v57 == -1)
        goto LABEL_51;
      goto LABEL_50;
    }
LABEL_48:
    ((void (*)(unsigned int **, WebCore::JSVoidCallback **))off_1E32654A0[v37])(&v60, &v54);
    goto LABEL_49;
  }
  v36 = 0;
  v47 = 1;
LABEL_50:
  ((void (*)(unsigned int **, JSC::VM **))off_1E32654B0[v47])(&v60, &v56);
LABEL_51:
  v48 = v59;
  if (v59 != -1)
LABEL_52:
    ((void (*)(unsigned int **, WebCore::JSSQLTransactionCallback **))off_1E3265470[v48])(&v60, &v58);
  return (_BYTE *)v36;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore24JSSQLTransactionCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    v3 = result + 4;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      atomic_store(1u, result + 4);
      return (unsigned int *)(*(uint64_t (**)(unsigned int *))(*(_QWORD *)result + 16))(result);
    }
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore29JSSQLTransactionErrorCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    v3 = result + 4;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      atomic_store(1u, result + 4);
      return (unsigned int *)(*(uint64_t (**)(unsigned int *))(*(_QWORD *)result + 16))(result);
    }
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore14JSVoidCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore14JSVoidCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore29JSSQLTransactionErrorCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    v3 = result + 4;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      atomic_store(1u, result + 4);
      return (unsigned int *)(*(uint64_t (**)(unsigned int *))(*(_QWORD *)result + 16))(result);
    }
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore24JSSQLTransactionCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    v3 = result + 4;
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      atomic_store(1u, result + 4);
      return (unsigned int *)(*(uint64_t (**)(unsigned int *))(*(_QWORD *)result + 16))(result);
    }
  }
  return result;
}

_BYTE *WebCore::jsDedicatedWorkerGlobalScopeInstanceFunction_postMessage(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  JSC::JSGlobalObject *v6;
  JSValue v7;
  WebCore::JSDedicatedWorkerGlobalScope *v8;
  JSC::VM *v9;
  unint64_t v10;
  JSC::CallFrame *v11;
  JSValue v13;
  JSC::JSGlobalObject *v14;
  uint64_t v15;
  int hasIteratorMethod;
  int v17;
  char hasExceptionsAfterHandlingTraps;
  uint64_t v19;
  _QWORD v20[2];

  v20[0] = *((_QWORD *)this + 7);
  v5 = WebCore::IDLOperation<WebCore::JSDedicatedWorkerGlobalScope>::cast(this, *((JSC::JSCell **)a2 + 5));
  if (!v5)
    return WebCore::throwThisTypeError((int)this, (int)v20, "DedicatedWorkerGlobalScope", "postMessage");
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v20[1] = v9;
  v10 = *((int *)a2 + 8) - 1;
  if (v10 >= 2)
    v10 = 2;
  if (v10 == 1)
    goto LABEL_5;
  if (v10 != 2)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v6);
    return (_BYTE *)JSC::VM::throwException(v9, this, v13);
  }
  v14 = (JSC::JSGlobalObject *)*((_QWORD *)a2 + 7);
  if (v14 == (JSC::JSGlobalObject *)10)
  {
LABEL_5:
    v11 = *(JSC::CallFrame **)(v5 + 3400);
    return (_BYTE *)WebCore::jsDedicatedWorkerGlobalScopeInstanceFunction_postMessage2Body(this, a2, v11, v8);
  }
  v15 = v5;
  if (((unint64_t)v14 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
LABEL_12:
    v11 = *(JSC::CallFrame **)(v15 + 3400);
    return (_BYTE *)WebCore::jsDedicatedWorkerGlobalScopeInstanceFunction_postMessage2Body(this, a2, v11, v8);
  }
  v19 = *((_QWORD *)a2 + 7);
  hasIteratorMethod = JSC::hasIteratorMethod(this, v14, v7);
  v17 = hasIteratorMethod;
  if (*((_DWORD *)v9 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v9);
    if ((hasExceptionsAfterHandlingTraps & 1) == 0 && ((v17 ^ 1) & 1) == 0)
      return (_BYTE *)WebCore::jsDedicatedWorkerGlobalScopeInstanceFunction_postMessage1Body(this, *((JSC::JSGlobalObject **)a2 + 6), *((_QWORD *)a2 + 7), *(WebCore::JSDedicatedWorkerGlobalScope **)(v15 + 3400));
    if ((hasExceptionsAfterHandlingTraps & 1) != 0)
      return 0;
  }
  else if (hasIteratorMethod)
  {
    return (_BYTE *)WebCore::jsDedicatedWorkerGlobalScopeInstanceFunction_postMessage1Body(this, *((JSC::JSGlobalObject **)a2 + 6), *((_QWORD *)a2 + 7), *(WebCore::JSDedicatedWorkerGlobalScope **)(v15 + 3400));
  }
  if ((v19 & 0xFFFE000000000002) == 0 && *(unsigned __int8 *)(v19 + 5) >= 0x17u)
    goto LABEL_12;
  return (_BYTE *)JSC::throwTypeError();
}

uint64_t WebCore::jsDedicatedWorkerGlobalScopeInstanceFunction_close(WebCore *this, JSC::JSCell **a2, JSC::CallFrame *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  WTF::StringImpl *v15;

  v3 = (int)this;
  v12 = *((_QWORD *)this + 7);
  v4 = WebCore::IDLOperation<WebCore::JSDedicatedWorkerGlobalScope>::cast(this, a2[5]);
  if (!v4)
    return (uint64_t)WebCore::throwThisTypeError(v3, (int)&v12, "DedicatedWorkerGlobalScope", "close");
  v5 = *(_QWORD *)(v4 + 3400);
  if (!*(_BYTE *)(v5 + 401))
  {
    *(_BYTE *)(v5 + 401) = 1;
    v6 = (_QWORD *)WTF::fastMalloc((WTF *)0x10);
    *v6 = off_1E347D0E0;
    v13 = v6;
    v14 = 1;
    v7 = *(_QWORD *)(*(_QWORD *)(v5 + 360) + 48);
    v15 = 0;
    (*(void (**)(uint64_t, _QWORD **, WTF::StringImpl **))(*(_QWORD *)v7 + 32))(v7, &v13, &v15);
    v9 = v15;
    v15 = 0;
    if (v9)
    {
      if (*(_DWORD *)v9 == 2)
        WTF::StringImpl::destroy(v9, v8);
      else
        *(_DWORD *)v9 -= 2;
    }
    v10 = v13;
    v13 = 0;
    if (v10)
      (*(void (**)(_QWORD *))(*v10 + 8))(v10);
  }
  return 10;
}

uint64_t WebCore::IDLOperation<WebCore::JSDedicatedWorkerGlobalScope>::cast(JSC::JSCell *a1, JSC::JSCell *this)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  _DWORD *v9;
  uint64_t v10;
  _BOOL4 v11;
  char **v12;
  BOOL v13;

  v2 = (unint64_t)this & 0xFFFFFFFFFFFFFFF7;
  if (((unint64_t)this & 0xFFFE000000000002) != 0)
  {
    if (v2 != 2)
      goto LABEL_4;
    goto LABEL_21;
  }
  if (v2 == 2 || *((unsigned __int8 *)this + 5) - 51 < 6)
LABEL_21:
    this = a1;
LABEL_4:
  if (((unint64_t)this & 0xFFFE000000000002) != 0)
    return 0;
  result = JSC::JSCell::getObject(this);
  if (result)
  {
    if (*(_BYTE *)(result + 5) == 32)
    {
      v9 = *(_DWORD **)(result + 16);
      v10 = *(unsigned int *)(16 * (*v9 & 0xFFFFFFFE) + 0x4C);
      v11 = *(_DWORD *)(16 * (*v9 & 0xFFFFFFFE) + 0x4C) != 0;
      v12 = (char **)(16 * v10);
      if ((_DWORD)v10)
        v13 = v12 == &WebCore::JSDedicatedWorkerGlobalScope::s_info;
      else
        v13 = 1;
      if (!v13)
      {
        do
        {
          v12 = (char **)v12[2];
          v11 = v12 != 0;
        }
        while (v12 != &WebCore::JSDedicatedWorkerGlobalScope::s_info && v12 != 0);
      }
      if (v11)
        return *(_QWORD *)(result + 16);
      else
        return 0;
    }
    else
    {
      v4 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
      v5 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
      v6 = (char **)(16 * v4);
      if ((_DWORD)v4)
        v7 = v6 == &WebCore::JSDedicatedWorkerGlobalScope::s_info;
      else
        v7 = 1;
      if (!v7)
      {
        do
        {
          v6 = (char **)v6[2];
          v5 = v6 != 0;
        }
        while (v6 != &WebCore::JSDedicatedWorkerGlobalScope::s_info && v6 != 0);
      }
      if (!v5)
        return 0;
    }
  }
  return result;
}

uint64_t WebCore::jsDedicatedWorkerGlobalScopeInstanceFunction_postMessage2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSDedicatedWorkerGlobalScope *a4)
{
  JSC::VM *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  WTF::StringImpl *v10;
  void *v11;
  WTF *v12;
  uint64_t v13;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  WTF *v23;
  WTF::StringImpl *v24;
  int v25;
  JSC::VM *v26;
  char v27[8];
  WTF::StringImpl *v28;
  char v29;
  WTF *v30;
  WTF::StringImpl *v31;

  v6 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v6;
  if ((unint64_t)(*((int *)a2 + 8) - 3) > 0xFFFFFFFFFFFFFFFDLL)
    v7 = 10;
  else
    v7 = *((_QWORD *)a2 + 7);
  v8 = *((_QWORD *)a2 + 6);
  WebCore::convertDictionary<WebCore::StructuredSerializeOptions>((JSC::JSCell *)v7, this, (uint64_t)&v23);
  v9 = v25;
  if (!v25)
  {
    v30 = v23;
    v10 = v24;
    v23 = 0;
    v24 = 0;
    v31 = v10;
    WebCore::DedicatedWorkerGlobalScope::postMessage((uint64_t)a3, this, v8, (uint64_t)&v30, (uint64_t)v27);
    v12 = v30;
    if (HIDWORD(v31))
    {
      v17 = 8 * HIDWORD(v31);
      do
      {
        v18 = *(_QWORD *)v12;
        if (*(_QWORD *)v12)
        {
          v19 = (uint64_t *)(v18 - 16);
          v20 = *(_QWORD *)(((v18 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
          v21 = *(uint64_t **)(v18 - 8);
          if (v21)
          {
            v22 = *v19;
            *v21 = *v19;
            *(_QWORD *)(v22 + 8) = v21;
            *v19 = 0;
            v19[1] = 0;
          }
          *v19 = *(_QWORD *)(v20 + 40);
          *(_QWORD *)(v20 + 40) = v19;
          *(_QWORD *)v12 = 0;
        }
        v12 = (WTF *)((char *)v12 + 8);
        v17 -= 8;
      }
      while (v17);
      v12 = v30;
    }
    if (v12)
    {
      v30 = 0;
      LODWORD(v31) = 0;
      WTF::fastFree(v12, v11);
    }
    if (!v29)
    {
      v13 = 10;
LABEL_9:
      v9 = v25;
      goto LABEL_10;
    }
    LOBYTE(v30) = v27[0];
    v15 = v28;
    v28 = 0;
    v31 = v15;
    if (!*((_QWORD *)v6 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v26, (unsigned __int8 *)&v30);
      v15 = v31;
    }
    v31 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, (WTF::StringImpl *)v11);
      else
        *(_DWORD *)v15 -= 2;
    }
    if (v29)
    {
      v16 = v28;
      v28 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 != 2)
        {
          v13 = 0;
          *(_DWORD *)v16 -= 2;
          goto LABEL_9;
        }
        WTF::StringImpl::destroy(v16, (WTF::StringImpl *)v11);
      }
    }
    v13 = 0;
    goto LABEL_9;
  }
  v13 = 0;
LABEL_10:
  if (v9 != -1)
    ((void (*)(char *, WTF **))off_1E3264E68[v9])(v27, &v23);
  return v13;
}

uint64_t WebCore::jsDedicatedWorkerGlobalScopeInstanceFunction_postMessage1Body(WebCore *this, JSC::JSGlobalObject *a2, uint64_t a3, WebCore::JSDedicatedWorkerGlobalScope *a4)
{
  WTF *v8;
  unsigned int v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  int v12;
  WTF::StringImpl *v13;
  void *v14;
  WTF *v15;
  uint64_t v16;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  JSValue v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  WTF *v28;
  WTF::StringImpl *v29;
  int v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  char v33;
  WTF *v34;
  WTF::StringImpl *v35;

  v8 = (WTF *)*((_QWORD *)this + 7);
  v34 = v8;
  if ((a3 & 0xFFFE000000000002) != 0 || (v9 = *(unsigned __int8 *)(a3 + 5), v9 <= 0x16))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    JSC::throwTypeError();
    v11 = v31;
    v31 = 0;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v10);
      else
        *(_DWORD *)v11 -= 2;
    }
    v30 = 1;
  }
  else if (v9 == 36 && (JSC::JSArray::isIteratorProtocolFastAndNonObservable((JSC::JSArray *)a3) & 1) != 0)
  {
    WebCore::Detail::SequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLObject>>::convertArray((JSC::VM **)this, a3, (uint64_t)&v28);
  }
  else
  {
    WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLObject>>::convert(this, a3, (uint64_t)&v28);
  }
  v12 = v30;
  if (!v30)
  {
    v34 = v28;
    v13 = v29;
    v28 = 0;
    v29 = 0;
    v35 = v13;
    WebCore::DedicatedWorkerGlobalScope::postMessage((uint64_t)a4, this, (uint64_t)a2, (uint64_t)&v34, (uint64_t)&v31);
    v15 = v34;
    if (HIDWORD(v35))
    {
      v22 = 8 * HIDWORD(v35);
      do
      {
        v23 = *(_QWORD *)v15;
        if (*(_QWORD *)v15)
        {
          v24 = (uint64_t *)(v23 - 16);
          v25 = *(_QWORD *)(((v23 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
          v26 = *(uint64_t **)(v23 - 8);
          if (v26)
          {
            v27 = *v24;
            *v26 = *v24;
            *(_QWORD *)(v27 + 8) = v26;
            *v24 = 0;
            v24[1] = 0;
          }
          *v24 = *(_QWORD *)(v25 + 40);
          *(_QWORD *)(v25 + 40) = v24;
          *(_QWORD *)v15 = 0;
        }
        v15 = (WTF *)((char *)v15 + 8);
        v22 -= 8;
      }
      while (v22);
      v15 = v34;
      if (!v34)
      {
LABEL_14:
        if (!v33)
        {
          v16 = 10;
LABEL_16:
          v12 = v30;
          goto LABEL_17;
        }
        v18 = (WTF::StringImpl *)v31;
        LOBYTE(v34) = (_BYTE)v31;
        v19 = v32;
        v32 = 0;
        v35 = v19;
        if (!*((_QWORD *)v8 + 2))
        {
          v20.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v31, (JSC::JSGlobalObject *)&v35);
          JSC::VM::throwException(v8, this, v20);
          v19 = v35;
        }
        v35 = 0;
        if (v19)
        {
          if (*(_DWORD *)v19 == 2)
            WTF::StringImpl::destroy(v19, v18);
          else
            *(_DWORD *)v19 -= 2;
        }
        if (v33)
        {
          v21 = v32;
          v32 = 0;
          if (v21)
          {
            if (*(_DWORD *)v21 != 2)
            {
              v16 = 0;
              *(_DWORD *)v21 -= 2;
              goto LABEL_16;
            }
            WTF::StringImpl::destroy(v21, v18);
          }
        }
        v16 = 0;
        goto LABEL_16;
      }
    }
    else if (!v34)
    {
      goto LABEL_14;
    }
    v34 = 0;
    LODWORD(v35) = 0;
    WTF::fastFree(v15, v14);
    goto LABEL_14;
  }
  v16 = 0;
LABEL_17:
  if (v12 != -1)
    ((void (*)(WTF::StringImpl **, WTF **))off_1E3264D08[v12])(&v31, &v28);
  return v16;
}

uint64_t WebCore::castThisValue<WebCore::JSDedicatedWorkerGlobalScope>(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t result;
  uint64_t v3;
  _BOOL4 v4;
  char **v5;
  BOOL v6;
  _DWORD *v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;

  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return 0;
  result = JSC::JSCell::getObject(a1);
  if (result)
  {
    if (*(_BYTE *)(result + 5) == 32)
    {
      v8 = *(_DWORD **)(result + 16);
      v9 = *(unsigned int *)(16 * (*v8 & 0xFFFFFFFE) + 0x4C);
      v10 = *(_DWORD *)(16 * (*v8 & 0xFFFFFFFE) + 0x4C) != 0;
      v11 = (char **)(16 * v9);
      if ((_DWORD)v9)
        v12 = v11 == &WebCore::JSDedicatedWorkerGlobalScope::s_info;
      else
        v12 = 1;
      if (!v12)
      {
        do
        {
          v11 = (char **)v11[2];
          v10 = v11 != 0;
        }
        while (v11 != &WebCore::JSDedicatedWorkerGlobalScope::s_info && v11 != 0);
      }
      if (v10)
        return *(_QWORD *)(result + 16);
      else
        return 0;
    }
    else
    {
      v3 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
      v4 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
      v5 = (char **)(16 * v3);
      if ((_DWORD)v3)
        v6 = v5 == &WebCore::JSDedicatedWorkerGlobalScope::s_info;
      else
        v6 = 1;
      if (!v6)
      {
        do
        {
          v5 = (char **)v5[2];
          v4 = v5 != 0;
        }
        while (v5 != &WebCore::JSDedicatedWorkerGlobalScope::s_info && v5 != 0);
      }
      if (!v4)
        return 0;
    }
  }
  return result;
}

_BYTE *WebCore::jsDeprecatedCSSOMPrimitiveValuePrototypeFunction_setFloatValue(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  unint64_t v13;
  JSC::VM *v15;
  JSValue v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  uint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;

  v4 = *((_QWORD *)this + 7);
  v20 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) == 0)
  {
    v7 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
    v8 = *(unsigned int *)(v7 + 76);
    v9 = *(_DWORD *)(v7 + 76) != 0;
    v10 = (char **)(16 * v8);
    if ((_DWORD)v8)
      v11 = v10 == &WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info;
    else
      v11 = 1;
    if (!v11)
    {
      do
      {
        v10 = (char **)v10[2];
        v9 = v10 != 0;
      }
      while (v10 != &WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info && v10 != 0);
    }
    if (v9)
    {
      if (*((_DWORD *)a2 + 8) == 1)
      {
        v21 = 10;
      }
      else
      {
        v13 = *((_QWORD *)a2 + 6);
        v21 = v13;
        if (v13 >= 0xFFFE000000000000 && (v13 & 0x80000000) == 0)
          goto LABEL_22;
        if (v13 >> 49)
        {
LABEL_21:
          if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
            return 0;
LABEL_22:
          if ((unint64_t)(*((int *)a2 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL)
          {
            v21 = 10;
            v15 = (JSC::VM *)*((_QWORD *)this + 7);
          }
          else
          {
            v21 = *((_QWORD *)a2 + 7);
            v15 = (JSC::VM *)*((_QWORD *)this + 7);
            if (v21 >> 49)
            {
LABEL_27:
              if (!*((_DWORD *)v15 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v15))
              {
                LOBYTE(v21) = 4;
                v22 = 0;
                if (!*(_QWORD *)(v4 + 16))
                {
                  v16.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)4, (JSC::JSGlobalObject *)&v22);
                  JSC::VM::throwException((JSC::VM *)v4, this, v16);
                  v18 = v22;
                  v22 = 0;
                  if (v18)
                  {
                    if (*(_DWORD *)v18 == 2)
                      WTF::StringImpl::destroy(v18, v17);
                    else
                      *(_DWORD *)v18 -= 2;
                  }
                }
              }
              return 0;
            }
          }
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v21, this);
          goto LABEL_27;
        }
      }
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v21, this);
      goto LABEL_21;
    }
  }
  return WebCore::throwThisTypeError((int)this, (int)&v20, "CSSPrimitiveValue", "setFloatValue");
}

_BYTE *WebCore::jsDeprecatedCSSOMPrimitiveValuePrototypeFunction_getFloatValue(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  unint64_t v12;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  double v24;
  char v25;
  float v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  JSValue v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  int v35;
  uint64_t v36;
  _QWORD v37[2];
  int v38;
  char v39[8];
  WTF::StringImpl *v40;

  v4 = *((_QWORD *)this + 7);
  v36 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "CSSPrimitiveValue", "getFloatValue");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "CSSPrimitiveValue", "getFloatValue");
  v11 = *(_QWORD *)(v5 + 24);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v37[0] = 10;
LABEL_21:
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v37, this);
    v14 = v15;
    goto LABEL_22;
  }
  v12 = *((_QWORD *)a2 + 6);
  v37[0] = v12;
  if (v12 >= 0xFFFE000000000000 && (v12 & 0x80000000) == 0)
  {
    LOWORD(v19) = v12;
    goto LABEL_31;
  }
  if (v12 < 0xFFFE000000000000)
  {
    if (v12 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      *(_QWORD *)&v14 = v12 - 0x2000000000000;
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  v14 = (double)(int)v12;
LABEL_22:
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  if (fabs(v14) == INFINITY || v14 == 0.0)
  {
LABEL_33:
    v22 = 0;
    v21 = 0;
    goto LABEL_34;
  }
  v16 = -floor(-v14);
  v17 = floor(v14);
  if (v14 >= 0.0)
    v16 = v17;
  v18 = fmod(v16, 65536.0);
  if (v18 < 0.0)
    v18 = v18 + 65536.0;
  v19 = (int)v18;
LABEL_31:
  v20 = (unsigned __int16)v19 - 1;
  v21 = 1;
  v22 = 7;
  switch(v20)
  {
    case 0:
      v22 = 1;
      break;
    case 1:
      v22 = 3;
      break;
    case 2:
      v22 = 4;
      break;
    case 3:
      v22 = 5;
      break;
    case 4:
      v22 = 6;
      break;
    case 5:
      break;
    case 6:
      v22 = 8;
      break;
    case 7:
      v22 = 9;
      break;
    case 8:
      v22 = 10;
      break;
    case 9:
      v22 = 11;
      break;
    case 10:
      v22 = 12;
      break;
    case 11:
      v22 = 13;
      break;
    case 12:
      v22 = 14;
      break;
    case 13:
      v22 = 15;
      break;
    case 14:
      v22 = 16;
      break;
    case 15:
      v22 = 17;
      break;
    case 16:
      v22 = 18;
      break;
    case 17:
      v22 = 19;
      break;
    default:
      goto LABEL_33;
  }
LABEL_34:
  if (((*(unsigned __int16 *)(*(_QWORD *)(v11 + 32) + 4) | (*(unsigned __int8 *)(*(_QWORD *)(v11 + 32) + 6) << 16)) & 0x3F800) != 0)
    v23 = 0;
  else
    v23 = *(_QWORD *)(v11 + 32);
  if (!v21 || !v23 || (v24 = COERCE_DOUBLE(WebCore::CSSPrimitiveValue::doubleValueInternal(v23, v22)), !v25))
  {
    LOBYTE(v37[0]) = 12;
    v38 = 1;
    v39[0] = 12;
    v37[1] = 0;
    v40 = 0;
    if (!*(_QWORD *)(v4 + 16))
    {
      v31.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)0xC, (JSC::JSGlobalObject *)&v40);
      JSC::VM::throwException((JSC::VM *)v4, this, v31);
      v33 = v40;
      v40 = 0;
      if (v33)
      {
        if (*(_DWORD *)v33 == 2)
          WTF::StringImpl::destroy(v33, v32);
        else
          *(_DWORD *)v33 -= 2;
      }
    }
    v30 = 0;
    v29 = 1;
    goto LABEL_54;
  }
  if (v24 >= 3.40282347e38)
  {
    *(float *)&v35 = 3.4028e38;
LABEL_79:
    v26 = *(float *)&v35;
    goto LABEL_43;
  }
  if (v24 <= -3.40282347e38)
  {
    *(float *)&v35 = -3.4028e38;
    goto LABEL_79;
  }
  v26 = v24;
LABEL_43:
  *(float *)v37 = v26;
  v38 = 0;
  v27 = v26;
  if (COERCE__INT64(fabs(v26)) <= 0x7FEFFFFFFFFFFFFFLL
    && (v28 = (int)v26, (double)(int)v28 == v27)
    && ((_DWORD)v28 || (LODWORD(v26) & 0x80000000) == 0))
  {
    v29 = 0;
    v30 = v28 | 0xFFFE000000000000;
  }
  else
  {
    v29 = 0;
    v30 = *(_QWORD *)&v27 + 0x2000000000000;
  }
LABEL_54:
  ((void (*)(char *, _QWORD *))off_1E32666A0[v29])(v39, v37);
  return (_BYTE *)v30;
}

_BYTE *WebCore::jsDeprecatedCSSOMPrimitiveValuePrototypeFunction_setStringValue(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  unint64_t v13;
  uint64_t v15;
  JSC::VM *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  JSValue v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  int v22;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v25;
  uint64_t v26;
  int v27;
  WTF::StringImpl *v28;
  uint64_t v29;
  WTF::StringImpl *v30;

  v4 = *((_QWORD *)this + 7);
  v25 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) == 0)
  {
    v7 = 16 * (*(_DWORD *)v5 & 0xFFFFFFFE);
    v8 = *(unsigned int *)(v7 + 76);
    v9 = *(_DWORD *)(v7 + 76) != 0;
    v10 = (char **)(16 * v8);
    if ((_DWORD)v8)
      v11 = v10 == &WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info;
    else
      v11 = 1;
    if (!v11)
    {
      do
      {
        v10 = (char **)v10[2];
        v9 = v10 != 0;
      }
      while (v10 != &WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info && v10 != 0);
    }
    if (v9)
    {
      if (*((_DWORD *)a2 + 8) == 1)
      {
        v29 = 10;
      }
      else
      {
        v13 = *((_QWORD *)a2 + 6);
        v29 = v13;
        if (v13 >= 0xFFFE000000000000 && (v13 & 0x80000000) == 0)
          goto LABEL_22;
        if (v13 >> 49)
        {
LABEL_21:
          if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
            return 0;
LABEL_22:
          if ((unint64_t)(*((int *)a2 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL
            || (v15 = *((_QWORD *)a2 + 7), v15 == 10))
          {
            v27 = 0;
            v26 = 0;
            goto LABEL_36;
          }
          v29 = v15;
          v16 = (JSC::VM *)*((_QWORD *)this + 7);
          if ((v15 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v15 + 5) != 2)
          {
            JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v29, this);
            goto LABEL_31;
          }
          v17 = *(WTF::StringImpl **)(v15 + 8);
          if ((v17 & 1) != 0)
          {
            v17 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v15, this);
            if (!v17)
              goto LABEL_30;
          }
          else if (!v17)
          {
LABEL_30:
            v28 = v17;
LABEL_31:
            if (*((_DWORD *)v16 + 20))
            {
              hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v16);
              v18 = v28;
              if (hasExceptionsAfterHandlingTraps)
              {
                v27 = 1;
                v28 = 0;
                if (v18)
                {
                  if (*(_DWORD *)v18 == 2)
                    WTF::StringImpl::destroy(v18, a2);
                  else
                    *(_DWORD *)v18 -= 2;
                }
                v22 = 1;
LABEL_41:
                ((void (*)(uint64_t *, uint64_t *))off_1E325A258[v22])(&v29, &v26);
                return 0;
              }
            }
            else
            {
              v18 = v28;
            }
            v27 = 0;
            v26 = 0;
            if (v18)
            {
              if (*(_DWORD *)v18 == 2)
                WTF::StringImpl::destroy(v18, a2);
              else
                *(_DWORD *)v18 -= 2;
            }
LABEL_36:
            LOBYTE(v29) = 4;
            v30 = 0;
            if (!*(_QWORD *)(v4 + 16))
            {
              v19.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)4, (JSC::JSGlobalObject *)&v30);
              JSC::VM::throwException((JSC::VM *)v4, this, v19);
              v21 = v30;
              v30 = 0;
              if (v21)
              {
                if (*(_DWORD *)v21 == 2)
                  WTF::StringImpl::destroy(v21, v20);
                else
                  *(_DWORD *)v21 -= 2;
              }
            }
            v22 = v27;
            if (v27 == -1)
              return 0;
            goto LABEL_41;
          }
          *(_DWORD *)v17 += 2;
          goto LABEL_30;
        }
      }
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v29, this);
      goto LABEL_21;
    }
  }
  return WebCore::throwThisTypeError((int)this, (int)&v25, "CSSPrimitiveValue", "setStringValue");
}

_BYTE *WebCore::jsDeprecatedCSSOMPrimitiveValuePrototypeFunction_getStringValue(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  JSValue v19;
  WebCore *v20;
  JSC::JSGlobalObject *v21;
  JSC::CallFrame *v22;
  JSC::VM *v23;
  int v24[2];
  WTF::StringImpl *v25;
  unsigned int v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v23 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v23, "CSSPrimitiveValue", "getStringValue");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v23, "CSSPrimitiveValue", "getStringValue");
  WebCore::DeprecatedCSSOMPrimitiveValue::getStringValue(*(WebCore::DeprecatedCSSOMPrimitiveValue **)(v4 + 24), (uint64_t)v24);
  v11 = v26;
  if (!v26)
  {
    v12 = *(WTF::StringImpl **)v24;
    *(_QWORD *)v24 = 0;
    v27 = v12;
    v14 = WebCore::toJS<WebCore::IDLUSVString,WTF::String>((uint64_t)this, (uint64_t *)&v27);
    v15 = v27;
    v27 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v13);
      else
        *(_DWORD *)v15 -= 2;
    }
LABEL_16:
    ((void (*)(WTF::StringImpl **, int *))off_1E325CDB8[v11])(&v27, v24);
    return (_BYTE *)v14;
  }
  if (v26 == 1)
  {
    v17 = (WTF::StringImpl *)LOBYTE(v24[0]);
    LOBYTE(v27) = v24[0];
    v18 = v25;
    v25 = 0;
    v28 = v18;
    if (!*((_QWORD *)v5 + 2))
    {
      v19.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v24[0]), (JSC::JSGlobalObject *)&v28);
      JSC::VM::throwException(v5, this, v19);
      v18 = v28;
    }
    v28 = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v17);
      else
        *(_DWORD *)v18 -= 2;
    }
    v14 = 0;
    goto LABEL_16;
  }
  v20 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDeprecatedCSSOMPrimitiveValuePrototypeFunction_getCounterValue(v20, v21, v22);
}

_BYTE *WebCore::jsDeprecatedCSSOMPrimitiveValuePrototypeFunction_getCounterValue(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WTF::StringImpl *v12;
  WTF *v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  WTF *v20;
  int v21;
  uint64_t v22;
  unint64_t SlowCase;
  int v24;
  uint64_t v25;
  unsigned int v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char **v31;
  int v32;
  unint64_t v33;
  uint64_t *v34;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v36;
  JSC::Structure *v37;
  JSC::JSCell *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  WTF *v50;
  uint64_t v51;
  uint64_t v52;
  WTF *v53;
  void *v54;
  int v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  _QWORD *Allocator;
  WTF::StringImpl *v60;
  WTF::StringImpl *v62;
  WTF::StringImpl *v63;
  JSValue v64;
  unint64_t v65;
  WebCore *v66;
  JSC::JSGlobalObject *v67;
  JSC::CallFrame *v68;
  JSC::VM *v69;
  WTF *v70;
  WTF::StringImpl *v71;
  int v72;
  WTF *v73;
  WTF::StringImpl *v74;
  _QWORD *v75;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v69 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v69, "CSSPrimitiveValue", "getCounterValue");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v69, "CSSPrimitiveValue", "getCounterValue");
  v11 = *(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  WebCore::DeprecatedCSSOMPrimitiveValue::getCounterValue(*(WebCore::DeprecatedCSSOMPrimitiveValue **)(v4 + 24), (uint64_t)&v70);
  if (!v72)
  {
    v13 = v70;
    v70 = 0;
    v14 = *(_QWORD *)(*(_QWORD *)(v11 + 3320) + 32);
    if (!v14)
      goto LABEL_22;
    v15 = *(_DWORD *)(v14 - 8);
    v16 = ((unint64_t)v13 + ~((_QWORD)v13 << 32)) ^ (((unint64_t)v13 + ~((_QWORD)v13 << 32)) >> 22);
    v17 = 9 * ((v16 + ~(v16 << 13)) ^ ((v16 + ~(v16 << 13)) >> 8));
    v18 = (v17 ^ (v17 >> 15)) + ~((v17 ^ (v17 >> 15)) << 27);
    v19 = v15 & ((v18 >> 31) ^ v18);
    v20 = *(WTF **)(v14 + 16 * v19);
    if (v20 != v13)
    {
      v21 = 1;
      while (v20)
      {
        v19 = ((_DWORD)v19 + v21) & v15;
        v20 = *(WTF **)(v14 + 16 * v19);
        ++v21;
        if (v20 == v13)
          goto LABEL_18;
      }
LABEL_22:
      ++*(_DWORD *)v13;
      v25 = *(_QWORD *)(v11 + 3296);
      if (v25)
      {
        v26 = *(_DWORD *)(v25 - 8);
        v27 = ((unint64_t)&WebCore::JSDeprecatedCSSOMCounter::s_info
             + ~((_QWORD)&WebCore::JSDeprecatedCSSOMCounter::s_info << 32)) ^ (((unint64_t)&WebCore::JSDeprecatedCSSOMCounter::s_info
                                                                              + ~((_QWORD)&WebCore::JSDeprecatedCSSOMCounter::s_info << 32)) >> 22);
        v28 = 9 * ((v27 + ~(v27 << 13)) ^ ((v27 + ~(v27 << 13)) >> 8));
        v29 = (v28 ^ (v28 >> 15)) + ~((v28 ^ (v28 >> 15)) << 27);
        v30 = v26 & ((v29 >> 31) ^ v29);
        v31 = *(char ***)(v25 + 16 * v30);
        if (v31 == &WebCore::JSDeprecatedCSSOMCounter::s_info)
        {
LABEL_27:
          v33 = *(_QWORD *)(v25 + 16 * v30 + 8);
          if (v33)
            goto LABEL_29;
        }
        else
        {
          v32 = 1;
          while (v31)
          {
            v30 = ((_DWORD)v30 + v32) & v26;
            v31 = *(char ***)(v25 + 16 * v30);
            ++v32;
            if (v31 == &WebCore::JSDeprecatedCSSOMCounter::s_info)
              goto LABEL_27;
          }
        }
      }
      v34 = *(uint64_t **)(v11 + 56);
      Structure = WebCore::JSDeprecatedCSSOMCounterPrototype::createStructure(v34, v11, *(JSC::JSCell **)(v11 + 656));
      *(_DWORD *)(Structure + 16) |= 0x80000u;
      v38 = (JSC::JSCell *)WebCore::JSDeprecatedCSSOMCounterPrototype::create((WebCore::JSDeprecatedCSSOMCounterPrototype *)v34, Structure, v36, v37);
      v39 = WebCore::JSDeprecatedCSSOMCounter::createStructure(v34, v11, v38);
      v33 = WebCore::cacheDOMStructure((JSCell *)v11, v39, (uint64_t)&WebCore::JSDeprecatedCSSOMCounter::s_info);
LABEL_29:
      v40 = *(_QWORD *)(v11 + 56);
      v41 = *(_QWORD *)(v40 + 41456);
      v42 = *(_QWORD *)(v41 + 23536);
      v43 = *(_QWORD **)(v42 + 2920);
      if (v43)
        goto LABEL_49;
      v44 = *(_QWORD *)(v41 + 22648);
      if (__ldaxr((unsigned __int8 *)v44))
      {
        __clrex();
      }
      else if (!__stxr(1u, (unsigned __int8 *)v44))
      {
        goto LABEL_34;
      }
      MEMORY[0x19AEA534C](v44);
LABEL_34:
      v46 = *(_QWORD *)(v44 + 2824);
      if (!*(_QWORD *)(v46 + 2920))
      {
        v47 = WTF::fastMalloc((WTF *)0xF8);
        WTF::CString::CString((WTF::CString *)&v73, "IsoSpace T");
        v75 = 0;
        MEMORY[0x19AEA3204](v47, &v73, v40 + 192, v40 + 1872, 32, 8, &v75);
        v49 = (uint64_t)v75;
        v75 = 0;
        if (v49)
          (*(void (**)(uint64_t))(*(_QWORD *)v49 + 8))(v49);
        v50 = v73;
        v73 = 0;
        if (v50)
        {
          if (*(_DWORD *)v50 == 1)
            WTF::fastFree(v50, v48);
          else
            --*(_DWORD *)v50;
        }
        v51 = *(_QWORD *)(v46 + 2920);
        *(_QWORD *)(v46 + 2920) = v47;
        if (v51)
          (*(void (**)(uint64_t))(*(_QWORD *)v51 + 8))(v51);
      }
      v43 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v52 = *(_QWORD *)(v42 + 2920);
      *(_QWORD *)(v42 + 2920) = v43;
      if (v52)
      {
        v53 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v53, v54);
      }
      v55 = __ldxr((unsigned __int8 *)v44);
      if (v55 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v44))
        {
LABEL_49:
          SlowCase = v43[3];
          if (SlowCase >= v43[4])
          {
            SlowCase = v43[5];
            if ((SlowCase & 1) != 0)
            {
              JSC::sanitizeStackForVM();
              SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_51:
              *(_DWORD *)SlowCase = 0;
              WebCore::JSDOMObject::JSDOMObject(SlowCase, v33);
              *(_QWORD *)(SlowCase + 24) = v13;
              if (*(_BYTE *)(v40 + 755))
                __dmb(0xAu);
              v56 = *(_QWORD *)(v11 + 3320);
              if ((byte_1EE335228 & 1) == 0)
              {
                qword_1EE335220 = (uint64_t)&off_1E325A048;
                byte_1EE335228 = 1;
              }
              v73 = v13;
              if ((SlowCase & 8) != 0)
                v57 = (SlowCase - 112) | 1;
              else
                v57 = SlowCase & 0xFFFFFFFFFFFFC000;
              if ((v57 & 1) != 0)
                v58 = v57 + 47;
              else
                v58 = *(_QWORD *)v57 + 32;
              Allocator = *(_QWORD **)(v58 + 16);
              if (!Allocator)
                Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
              *(_QWORD *)(v58 + 16) = *Allocator;
              *Allocator = SlowCase;
              Allocator[1] = &qword_1EE335220;
              Allocator[2] = v56;
              v75 = Allocator;
              JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v56 + 32), (uint64_t *)&v73, (uint64_t *)&v75);
              if (v75)
                v75[1] = 3;
              v24 = v72;
              WTF::RefCounted<WebCore::PlatformSpeechSynthesisVoice>::deref((WTF::StringImpl **)v13, v60);
              if (v24 == -1)
                return (_BYTE *)SlowCase;
              goto LABEL_65;
            }
            v65 = *(_QWORD *)(SlowCase + 8) ^ v43[6];
            v43[4] = SlowCase + HIDWORD(v65);
            v43[5] = SlowCase + (int)v65;
          }
          v43[3] = SlowCase + 32;
          goto LABEL_51;
        }
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v44);
      goto LABEL_49;
    }
LABEL_18:
    v22 = *(_QWORD *)(v14 + 16 * v19 + 8);
    if (!v22)
      goto LABEL_22;
    if ((*(_BYTE *)(v22 + 8) & 3) != 0)
      goto LABEL_22;
    SlowCase = *(_QWORD *)v22;
    if (!*(_QWORD *)v22)
      goto LABEL_22;
    WTF::RefCounted<WebCore::PlatformSpeechSynthesisVoice>::deref((WTF::StringImpl **)v13, v12);
    v24 = 0;
LABEL_65:
    ((void (*)(WTF **, WTF **))off_1E32666B0[v24])(&v73, &v70);
    return (_BYTE *)SlowCase;
  }
  if (v72 == 1)
  {
    v62 = (WTF::StringImpl *)v70;
    LOBYTE(v73) = (_BYTE)v70;
    v63 = v71;
    v71 = 0;
    v74 = v63;
    if (!*((_QWORD *)v5 + 2))
    {
      v64.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v70, (JSC::JSGlobalObject *)&v74);
      JSC::VM::throwException(v5, this, v64);
      v63 = v74;
    }
    v74 = 0;
    if (v63)
    {
      if (*(_DWORD *)v63 == 2)
        WTF::StringImpl::destroy(v63, v62);
      else
        *(_DWORD *)v63 -= 2;
    }
    SlowCase = 0;
    v24 = 1;
    goto LABEL_65;
  }
  v66 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDeprecatedCSSOMPrimitiveValuePrototypeFunction_getRectValue(v66, v67, v68);
}

_BYTE *WebCore::jsDeprecatedCSSOMPrimitiveValuePrototypeFunction_getRectValue(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  JSValue v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  unint64_t SlowCase;
  uint64_t v19;
  const Rect *v20;
  WebCore::CSSStyleDeclaration *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  unsigned int v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char **v39;
  int v40;
  unint64_t v41;
  uint64_t *v42;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v44;
  JSC::Structure *v45;
  JSC::JSCell *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  WTF *v58;
  uint64_t v59;
  uint64_t v60;
  WTF *v61;
  void *v62;
  int v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  _QWORD *Allocator;
  unint64_t v69;
  JSC::VM *v70;
  _QWORD v71[2];
  int v72;
  WTF *v73;
  WTF::StringImpl *v74;
  _QWORD *v75;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v70 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v70, "CSSPrimitiveValue", "getRectValue");
  v6 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v7 = *(unsigned int *)(v6 + 0x4C);
  v8 = *(_DWORD *)(v6 + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v70, "CSSPrimitiveValue", "getRectValue");
  v12 = *(_QWORD *)(v4 + 24);
  v13 = *(_QWORD *)(v12 + 32);
  if (v13)
    v14 = ((*(unsigned __int16 *)(v13 + 4) | (*(unsigned __int8 *)(v13 + 6) << 16)) & 0x3F800) == 100352;
  else
    v14 = 0;
  if (!v14)
  {
    LOBYTE(v71[0]) = 12;
    v72 = 1;
    LOBYTE(v73) = 12;
    v71[1] = 0;
    v74 = 0;
    if (!*((_QWORD *)v5 + 2))
    {
      v15.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)0xC, (JSC::JSGlobalObject *)&v74);
      JSC::VM::throwException(v5, this, v15);
      v17 = v74;
      v74 = 0;
      if (v17)
      {
        if (*(_DWORD *)v17 == 2)
          WTF::StringImpl::destroy(v17, v16);
        else
          *(_DWORD *)v17 -= 2;
      }
    }
    SlowCase = 0;
    goto LABEL_72;
  }
  v19 = *(_QWORD *)(v6 + 40);
  v20 = (const Rect *)(v13 + 8);
  v21 = *(WebCore::CSSStyleDeclaration **)(v12 + 24);
  v22 = WTF::fastMalloc((WTF *)0x28);
  WebCore::DeprecatedCSSOMRect::DeprecatedCSSOMRect((WebCore::DeprecatedCSSOMRect *)v22, v20, v21);
  v72 = 0;
  v71[0] = 0;
  v24 = *(_QWORD *)(*(_QWORD *)(v19 + 3320) + 32);
  if (!v24)
  {
LABEL_29:
    ++*(_DWORD *)v22;
    v33 = *(_QWORD *)(v19 + 3296);
    if (v33)
    {
      v34 = *(_DWORD *)(v33 - 8);
      v35 = ((unint64_t)&WebCore::JSDeprecatedCSSOMRect::s_info
           + ~((_QWORD)&WebCore::JSDeprecatedCSSOMRect::s_info << 32)) ^ (((unint64_t)&WebCore::JSDeprecatedCSSOMRect::s_info
                                                                         + ~((_QWORD)&WebCore::JSDeprecatedCSSOMRect::s_info << 32)) >> 22);
      v36 = 9 * ((v35 + ~(v35 << 13)) ^ ((v35 + ~(v35 << 13)) >> 8));
      v37 = (v36 ^ (v36 >> 15)) + ~((v36 ^ (v36 >> 15)) << 27);
      v38 = v34 & ((v37 >> 31) ^ v37);
      v39 = *(char ***)(v33 + 16 * v38);
      if (v39 == &WebCore::JSDeprecatedCSSOMRect::s_info)
      {
LABEL_34:
        v41 = *(_QWORD *)(v33 + 16 * v38 + 8);
        if (v41)
          goto LABEL_36;
      }
      else
      {
        v40 = 1;
        while (v39)
        {
          v38 = ((_DWORD)v38 + v40) & v34;
          v39 = *(char ***)(v33 + 16 * v38);
          ++v40;
          if (v39 == &WebCore::JSDeprecatedCSSOMRect::s_info)
            goto LABEL_34;
        }
      }
    }
    v42 = *(uint64_t **)(v19 + 56);
    Structure = WebCore::JSDeprecatedCSSOMRectPrototype::createStructure(v42, v19, *(JSC::JSCell **)(v19 + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v46 = (JSC::JSCell *)WebCore::JSDeprecatedCSSOMRectPrototype::create((WebCore::JSDeprecatedCSSOMRectPrototype *)v42, Structure, v44, v45);
    v47 = WebCore::JSDeprecatedCSSOMRect::createStructure(v42, v19, v46);
    v41 = WebCore::cacheDOMStructure((JSCell *)v19, v47, (uint64_t)&WebCore::JSDeprecatedCSSOMRect::s_info);
LABEL_36:
    v48 = *(_QWORD *)(v19 + 56);
    v49 = *(_QWORD *)(v48 + 41456);
    v50 = *(_QWORD *)(v49 + 23536);
    v51 = *(_QWORD **)(v50 + 2944);
    if (v51)
      goto LABEL_56;
    v52 = *(_QWORD *)(v49 + 22648);
    if (__ldaxr((unsigned __int8 *)v52))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v52))
    {
      goto LABEL_41;
    }
    MEMORY[0x19AEA534C](v52);
LABEL_41:
    v54 = *(_QWORD *)(v52 + 2824);
    if (!*(_QWORD *)(v54 + 2944))
    {
      v55 = WTF::fastMalloc((WTF *)0xF8);
      WTF::CString::CString((WTF::CString *)&v73, "IsoSpace T");
      v75 = 0;
      MEMORY[0x19AEA3204](v55, &v73, v48 + 192, v48 + 1872, 32, 8, &v75);
      v57 = (uint64_t)v75;
      v75 = 0;
      if (v57)
        (*(void (**)(uint64_t))(*(_QWORD *)v57 + 8))(v57);
      v58 = v73;
      v73 = 0;
      if (v58)
      {
        if (*(_DWORD *)v58 == 1)
          WTF::fastFree(v58, v56);
        else
          --*(_DWORD *)v58;
      }
      v59 = *(_QWORD *)(v54 + 2944);
      *(_QWORD *)(v54 + 2944) = v55;
      if (v59)
        (*(void (**)(uint64_t))(*(_QWORD *)v59 + 8))(v59);
    }
    v51 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
    JSC::GCClient::IsoSubspace::IsoSubspace();
    v60 = *(_QWORD *)(v50 + 2944);
    *(_QWORD *)(v50 + 2944) = v51;
    if (v60)
    {
      v61 = (WTF *)MEMORY[0x19AEA3528]();
      WTF::fastFree(v61, v62);
    }
    v63 = __ldxr((unsigned __int8 *)v52);
    if (v63 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v52))
      {
LABEL_56:
        SlowCase = v51[3];
        if (SlowCase >= v51[4])
        {
          SlowCase = v51[5];
          if ((SlowCase & 1) != 0)
          {
            JSC::sanitizeStackForVM();
            SlowCase = JSC::LocalAllocator::allocateSlowCase();
            goto LABEL_58;
          }
          v69 = *(_QWORD *)(SlowCase + 8) ^ v51[6];
          v51[4] = SlowCase + HIDWORD(v69);
          v51[5] = SlowCase + (int)v69;
        }
        v51[3] = SlowCase + 32;
LABEL_58:
        *(_DWORD *)SlowCase = 0;
        WebCore::JSDOMObject::JSDOMObject(SlowCase, v41);
        *(_QWORD *)(SlowCase + 24) = v22;
        if (*(_BYTE *)(v48 + 755))
          __dmb(0xAu);
        v64 = *(_QWORD *)(v19 + 3320);
        if ((byte_1EE335248 & 1) == 0)
        {
          qword_1EE335240 = (uint64_t)&off_1E325A0A8;
          byte_1EE335248 = 1;
        }
        v73 = (WTF *)v22;
        if ((SlowCase & 8) != 0)
          v65 = (SlowCase - 112) | 1;
        else
          v65 = SlowCase & 0xFFFFFFFFFFFFC000;
        if ((v65 & 1) != 0)
          v66 = v65 + 47;
        else
          v66 = *(_QWORD *)v65 + 32;
        Allocator = *(_QWORD **)(v66 + 16);
        if (!Allocator)
          Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
        *(_QWORD *)(v66 + 16) = *Allocator;
        *Allocator = SlowCase;
        Allocator[1] = &qword_1EE335240;
        Allocator[2] = v64;
        v75 = Allocator;
        JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v64 + 32), (uint64_t *)&v73, (uint64_t *)&v75);
        if (v75)
          v75[1] = 3;
        goto LABEL_71;
      }
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v52);
    goto LABEL_56;
  }
  v25 = *(_DWORD *)(v24 - 8);
  v26 = (~(v22 << 32) + v22) ^ ((unint64_t)(~(v22 << 32) + v22) >> 22);
  v27 = 9 * ((v26 + ~(v26 << 13)) ^ ((v26 + ~(v26 << 13)) >> 8));
  v28 = (v27 ^ (v27 >> 15)) + ~((v27 ^ (v27 >> 15)) << 27);
  v29 = v25 & ((v28 >> 31) ^ v28);
  v30 = *(_QWORD *)(v24 + 16 * v29);
  if (v30 != v22)
  {
    v31 = 1;
    while (v30)
    {
      v29 = ((_DWORD)v29 + v31) & v25;
      v30 = *(_QWORD *)(v24 + 16 * v29);
      ++v31;
      if (v30 == v22)
        goto LABEL_26;
    }
    goto LABEL_29;
  }
LABEL_26:
  v32 = *(_QWORD *)(v24 + 16 * v29 + 8);
  if (!v32)
    goto LABEL_29;
  if ((*(_BYTE *)(v32 + 8) & 3) != 0)
    goto LABEL_29;
  SlowCase = *(_QWORD *)v32;
  if (!*(_QWORD *)v32)
    goto LABEL_29;
LABEL_71:
  WTF::RefCounted<WebCore::DeprecatedCSSOMRGBColor>::deref((WTF *)v22, v23);
LABEL_72:
  if (v72 != -1)
    ((void (*)(WTF **, _QWORD *, JSC::CallFrame *))off_1E32666C0[v72])(&v73, v71, a3);
  return (_BYTE *)SlowCase;
}

_BYTE *WebCore::jsDeprecatedCSSOMPrimitiveValuePrototypeFunction_getRGBColorValue(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::DeprecatedCSSOMPrimitiveValue *v11;
  uint64_t v12;
  uint64_t v13;
  WebCore::CSSStyleDeclaration *v14;
  const WebCore::Color *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unint64_t SlowCase;
  uint64_t v28;
  unsigned int v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char **v34;
  int v35;
  unint64_t v36;
  uint64_t *v37;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v39;
  JSC::Structure *v40;
  JSC::JSCell *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  JSValue v49;
  WTF::StringImpl *v50;
  WTF::StringImpl *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  WTF *v56;
  uint64_t v57;
  uint64_t v58;
  WTF *v59;
  void *v60;
  int v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  _QWORD *Allocator;
  unint64_t v67;
  JSC::VM *v68;
  _QWORD v69[2];
  int v70;
  WTF *v71;
  WTF::StringImpl *v72;
  _QWORD *v73;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v68 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v68, "CSSPrimitiveValue", "getRGBColorValue");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDeprecatedCSSOMPrimitiveValue::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v68, "CSSPrimitiveValue", "getRGBColorValue");
  v11 = *(WebCore::DeprecatedCSSOMPrimitiveValue **)(v4 + 24);
  v12 = *(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  if (WebCore::DeprecatedCSSOMPrimitiveValue::primitiveType(v11) != 25)
  {
    LOBYTE(v69[0]) = 12;
    v70 = 1;
    LOBYTE(v71) = 12;
    v69[1] = 0;
    v72 = 0;
    if (!*((_QWORD *)v5 + 2))
    {
      v49.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)0xC, (JSC::JSGlobalObject *)&v72);
      JSC::VM::throwException(v5, this, v49);
      v51 = v72;
      v72 = 0;
      if (v51)
      {
        if (*(_DWORD *)v51 == 2)
          WTF::StringImpl::destroy(v51, v50);
        else
          *(_DWORD *)v51 -= 2;
      }
    }
    SlowCase = 0;
    goto LABEL_70;
  }
  v13 = *((_QWORD *)v11 + 4);
  if (((*(unsigned __int16 *)(v13 + 4) | (*(unsigned __int8 *)(v13 + 6) << 16)) & 0x3F800) != 0)
  {
    __break(0xC471u);
    JUMPOUT(0x194A8A6FCLL);
  }
  v14 = (WebCore::CSSStyleDeclaration *)*((_QWORD *)v11 + 3);
  v15 = (const WebCore::Color *)(v13 + 8);
  v16 = WTF::fastMalloc((WTF *)0x28);
  WebCore::DeprecatedCSSOMRGBColor::DeprecatedCSSOMRGBColor((WebCore::DeprecatedCSSOMRGBColor *)v16, v14, v15);
  v70 = 0;
  v69[0] = 0;
  v18 = *(_QWORD *)(*(_QWORD *)(v12 + 3320) + 32);
  if (!v18)
  {
LABEL_22:
    ++*(_DWORD *)v16;
    v28 = *(_QWORD *)(v12 + 3296);
    if (v28)
    {
      v29 = *(_DWORD *)(v28 - 8);
      v30 = ((unint64_t)&WebCore::JSDeprecatedCSSOMRGBColor::s_info
           + ~((_QWORD)&WebCore::JSDeprecatedCSSOMRGBColor::s_info << 32)) ^ (((unint64_t)&WebCore::JSDeprecatedCSSOMRGBColor::s_info
                                                                             + ~((_QWORD)&WebCore::JSDeprecatedCSSOMRGBColor::s_info << 32)) >> 22);
      v31 = 9 * ((v30 + ~(v30 << 13)) ^ ((v30 + ~(v30 << 13)) >> 8));
      v32 = (v31 ^ (v31 >> 15)) + ~((v31 ^ (v31 >> 15)) << 27);
      v33 = v29 & ((v32 >> 31) ^ v32);
      v34 = *(char ***)(v28 + 16 * v33);
      if (v34 == &WebCore::JSDeprecatedCSSOMRGBColor::s_info)
      {
LABEL_27:
        v36 = *(_QWORD *)(v28 + 16 * v33 + 8);
        if (v36)
          goto LABEL_29;
      }
      else
      {
        v35 = 1;
        while (v34)
        {
          v33 = ((_DWORD)v33 + v35) & v29;
          v34 = *(char ***)(v28 + 16 * v33);
          ++v35;
          if (v34 == &WebCore::JSDeprecatedCSSOMRGBColor::s_info)
            goto LABEL_27;
        }
      }
    }
    v37 = *(uint64_t **)(v12 + 56);
    Structure = WebCore::JSDeprecatedCSSOMRGBColorPrototype::createStructure(v37, v12, *(JSC::JSCell **)(v12 + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v41 = (JSC::JSCell *)WebCore::JSDeprecatedCSSOMRGBColorPrototype::create((WebCore::JSDeprecatedCSSOMRGBColorPrototype *)v37, Structure, v39, v40);
    v42 = WebCore::JSDeprecatedCSSOMRGBColor::createStructure(v37, v12, v41);
    v36 = WebCore::cacheDOMStructure((JSCell *)v12, v42, (uint64_t)&WebCore::JSDeprecatedCSSOMRGBColor::s_info);
LABEL_29:
    v43 = *(_QWORD *)(v12 + 56);
    v44 = *(_QWORD *)(v43 + 41456);
    v45 = *(_QWORD *)(v44 + 23536);
    v46 = *(_QWORD **)(v45 + 2936);
    if (v46)
      goto LABEL_54;
    v47 = *(_QWORD *)(v44 + 22648);
    if (__ldaxr((unsigned __int8 *)v47))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v47))
    {
      goto LABEL_39;
    }
    MEMORY[0x19AEA534C](v47);
LABEL_39:
    v52 = *(_QWORD *)(v47 + 2824);
    if (!*(_QWORD *)(v52 + 2936))
    {
      v53 = WTF::fastMalloc((WTF *)0xF8);
      WTF::CString::CString((WTF::CString *)&v71, "IsoSpace T");
      v73 = 0;
      MEMORY[0x19AEA3204](v53, &v71, v43 + 192, v43 + 1872, 32, 8, &v73);
      v55 = (uint64_t)v73;
      v73 = 0;
      if (v55)
        (*(void (**)(uint64_t))(*(_QWORD *)v55 + 8))(v55);
      v56 = v71;
      v71 = 0;
      if (v56)
      {
        if (*(_DWORD *)v56 == 1)
          WTF::fastFree(v56, v54);
        else
          --*(_DWORD *)v56;
      }
      v57 = *(_QWORD *)(v52 + 2936);
      *(_QWORD *)(v52 + 2936) = v53;
      if (v57)
        (*(void (**)(uint64_t))(*(_QWORD *)v57 + 8))(v57);
    }
    v46 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
    JSC::GCClient::IsoSubspace::IsoSubspace();
    v58 = *(_QWORD *)(v45 + 2936);
    *(_QWORD *)(v45 + 2936) = v46;
    if (v58)
    {
      v59 = (WTF *)MEMORY[0x19AEA3528]();
      WTF::fastFree(v59, v60);
    }
    v61 = __ldxr((unsigned __int8 *)v47);
    if (v61 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v47))
      {
LABEL_54:
        SlowCase = v46[3];
        if (SlowCase >= v46[4])
        {
          SlowCase = v46[5];
          if ((SlowCase & 1) != 0)
          {
            JSC::sanitizeStackForVM();
            SlowCase = JSC::LocalAllocator::allocateSlowCase();
            goto LABEL_56;
          }
          v67 = *(_QWORD *)(SlowCase + 8) ^ v46[6];
          v46[4] = SlowCase + HIDWORD(v67);
          v46[5] = SlowCase + (int)v67;
        }
        v46[3] = SlowCase + 32;
LABEL_56:
        *(_DWORD *)SlowCase = 0;
        WebCore::JSDOMObject::JSDOMObject(SlowCase, v36);
        *(_QWORD *)(SlowCase + 24) = v16;
        if (*(_BYTE *)(v43 + 755))
          __dmb(0xAu);
        v62 = *(_QWORD *)(v12 + 3320);
        if ((byte_1EE335238 & 1) == 0)
        {
          qword_1EE335230 = (uint64_t)&off_1E325A078;
          byte_1EE335238 = 1;
        }
        v71 = (WTF *)v16;
        if ((SlowCase & 8) != 0)
          v63 = (SlowCase - 112) | 1;
        else
          v63 = SlowCase & 0xFFFFFFFFFFFFC000;
        if ((v63 & 1) != 0)
          v64 = v63 + 47;
        else
          v64 = *(_QWORD *)v63 + 32;
        Allocator = *(_QWORD **)(v64 + 16);
        if (!Allocator)
          Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
        *(_QWORD *)(v64 + 16) = *Allocator;
        *Allocator = SlowCase;
        Allocator[1] = &qword_1EE335230;
        Allocator[2] = v62;
        v73 = Allocator;
        JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v62 + 32), (uint64_t *)&v71, (uint64_t *)&v73);
        if (v73)
          v73[1] = 3;
        goto LABEL_69;
      }
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v47);
    goto LABEL_54;
  }
  v19 = *(_DWORD *)(v18 - 8);
  v20 = (~(v16 << 32) + v16) ^ ((unint64_t)(~(v16 << 32) + v16) >> 22);
  v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
  v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
  v23 = v19 & ((v22 >> 31) ^ v22);
  v24 = *(_QWORD *)(v18 + 16 * v23);
  if (v24 != v16)
  {
    v25 = 1;
    while (v24)
    {
      v23 = ((_DWORD)v23 + v25) & v19;
      v24 = *(_QWORD *)(v18 + 16 * v23);
      ++v25;
      if (v24 == v16)
        goto LABEL_19;
    }
    goto LABEL_22;
  }
LABEL_19:
  v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
  if (!v26)
    goto LABEL_22;
  if ((*(_BYTE *)(v26 + 8) & 3) != 0)
    goto LABEL_22;
  SlowCase = *(_QWORD *)v26;
  if (!*(_QWORD *)v26)
    goto LABEL_22;
LABEL_69:
  WTF::RefCounted<WebCore::DeprecatedCSSOMRGBColor>::deref((WTF *)v16, v17);
LABEL_70:
  if (v70 != -1)
    ((void (*)(WTF **, _QWORD *))off_1E32666D0[v70])(&v71, v69);
  return (_BYTE *)SlowCase;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJfN7WebCore9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSB_1EJfS9_EEEEEEDcSD_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF::StringImpl **_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore22DeprecatedCSSOMCounterENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl **result;

  result = *(WTF::StringImpl ***)a2;
  *(_QWORD *)a2 = 0;
  if (result)
    return WTF::RefCounted<WebCore::PlatformSpeechSynthesisVoice>::deref(result, a2);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore22DeprecatedCSSOMCounterENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore19DeprecatedCSSOMRectENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF **a2)
{
  WTF *result;

  result = *a2;
  *a2 = 0;
  if (result)
    return WTF::RefCounted<WebCore::DeprecatedCSSOMRGBColor>::deref(result, a2);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore19DeprecatedCSSOMRectENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore23DeprecatedCSSOMRGBColorENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF **a2)
{
  WTF *result;

  result = *a2;
  *a2 = 0;
  if (result)
    return WTF::RefCounted<WebCore::DeprecatedCSSOMRGBColor>::deref(result, a2);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore23DeprecatedCSSOMRGBColorENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

unint64_t WebCore::jsDeprecatedCSSOMValueListPrototypeFunction_item(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::DeprecatedCSSOMValue *v12;
  WebCore::JSDOMGlobalObject *v13;
  JSValue v15;
  JSC::VM *v16;
  _DWORD v17[2];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v16 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "CSSValueList", "item");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDeprecatedCSSOMValueList::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDeprecatedCSSOMValueList::s_info && v8 != 0);
  }
  if (!v7)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "CSSValueList", "item");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v15.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v15);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v17);
    if (v17[1])
    {
      return 0;
    }
    else if (*(_DWORD *)(v11 + 44) > v17[0]
           && (v13 = *(WebCore::JSDOMGlobalObject **)(*(_QWORD *)(v11 + 32) + 8 * v17[0])) != 0)
    {
      return WebCore::toJS(this, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28), v13, v12);
    }
    else
    {
      return 2;
    }
  }
}

_BYTE *WebCore::jsDeprecationReportBodyPrototypeFunction_toJSON(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  uint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  uint64_t v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  uint64_t v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  unsigned __int8 *v39;
  unsigned int v40;
  unsigned __int8 *v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unint64_t v45;
  uint64_t SlowCase;
  uint64_t v47;
  WTF::StringImpl *v48;
  unint64_t v49;
  int v50;
  int v51;
  uint64_t v52;

  v4 = *((_QWORD *)a2 + 5);
  v5 = *((_QWORD *)this + 7);
  v47 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v47, "DeprecationReportBody", "toJSON");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDeprecationReportBody::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDeprecationReportBody::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v47, "DeprecationReportBody", "toJSON");
  v11 = *(_QWORD **)(v4 + 24);
  v12 = *(_QWORD *)(v5 + 15056);
  if (v12)
  {
    v13 = *(unsigned int *)(v12 + 60);
    v14 = *(_QWORD *)(v12 + 24);
    if (v14 < *(_QWORD *)(v12 + 32))
    {
LABEL_14:
      *(_QWORD *)(v12 + 24) = v14 + v13;
      goto LABEL_15;
    }
    v14 = *(_QWORD *)(v12 + 40);
    if ((v14 & 1) == 0)
    {
      v45 = *(_QWORD *)(v14 + 8) ^ *(_QWORD *)(v12 + 48);
      *(_QWORD *)(v12 + 32) = v14 + HIDWORD(v45);
      *(_QWORD *)(v12 + 40) = v14 + (int)v45;
      goto LABEL_14;
    }
    JSC::sanitizeStackForVM();
    SlowCase = JSC::LocalAllocator::allocateSlowCase();
  }
  else
  {
    SlowCase = JSC::CompleteSubspace::allocateSlow();
  }
  v14 = SlowCase;
LABEL_15:
  *(_DWORD *)v14 = 0;
  *(_DWORD *)v14 = *((_DWORD *)this + 212);
  *(_DWORD *)(v14 + 4) = 16783360;
  *(_OWORD *)(v14 + 8) = 0u;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  *(_QWORD *)(v14 + 56) = 0;
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v15 = *((_QWORD *)this + 7);
  v16 = v11[2];
  if (!v16 || (v17 = *(_DWORD *)(v16 + 4)) == 0)
  {
    v18 = *(_QWORD *)(v15 + 41968);
    goto LABEL_23;
  }
  if (v17 == 1)
  {
    v39 = *(unsigned __int8 **)(v16 + 8);
    if ((*(_BYTE *)(v16 + 16) & 4) != 0)
    {
      v40 = *v39;
    }
    else
    {
      v43 = *(unsigned __int16 *)v39;
      if (v43 > 0xFF)
        goto LABEL_20;
      v40 = v43;
    }
    v18 = *(_QWORD *)(v15 + 8 * v40 + 42216);
    goto LABEL_23;
  }
LABEL_20:
  v18 = *(_QWORD *)(v15 + 64760);
  if (!v18 || v16 != *(_QWORD *)(v18 + 8))
    v18 = JSC::jsStringWithCacheSlowCase();
LABEL_23:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v48;
  v48 = 0;
  v49 = v14;
  v50 = -1;
  v51 = 0x1000000;
  v52 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v48);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = *((_QWORD *)this + 7);
  v22 = v11[4];
  if (v22 && (v23 = *(_DWORD *)(v22 + 4)) != 0)
  {
    if (v23 != 1)
    {
LABEL_30:
      v24 = *(_QWORD *)(v21 + 64760);
      if (!v24 || v22 != *(_QWORD *)(v24 + 8))
        v24 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_33;
    }
    v41 = *(unsigned __int8 **)(v22 + 8);
    if ((*(_BYTE *)(v22 + 16) & 4) != 0)
    {
      v42 = *v41;
    }
    else
    {
      v44 = *(unsigned __int16 *)v41;
      if (v44 > 0xFF)
        goto LABEL_30;
      v42 = v44;
    }
    v24 = *(_QWORD *)(v21 + 8 * v42 + 42216);
  }
  else
  {
    v24 = *(_QWORD *)(v21 + 41968);
  }
LABEL_33:
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v25 = v48;
  v48 = 0;
  v49 = v14;
  v50 = -1;
  v51 = 0x1000000;
  v52 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v25, v24, 0, (uint64_t)&v48);
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v26);
    else
      *(_DWORD *)v25 -= 2;
  }
  v27 = WebCore::toJS<WebCore::IDLNullable<WebCore::IDLDOMString>,WTF::AtomString>(*((_QWORD *)this + 7), v11[5]);
  if (*(_DWORD *)(v5 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v28 = v48;
  v48 = 0;
  v49 = v14;
  v50 = -1;
  v51 = 0x1000000;
  v52 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v28, v27, 0, (uint64_t)&v48);
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v29);
    else
      *(_DWORD *)v28 -= 2;
  }
  v30 = v11[6];
  if ((v30 & 0xFF00000000) != 0)
    v31 = (v30 & 0x80000000) != 0
        ? COERCE__INT64((double)v30) + 0x2000000000000
        : v11[6] | 0xFFFE000000000000;
  else
    v31 = 2;
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v32 = v48;
  v48 = 0;
  v49 = v14;
  v50 = -1;
  v51 = 0x1000000;
  v52 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v32, v31, 0, (uint64_t)&v48);
  if (v32)
  {
    if (*(_DWORD *)v32 == 2)
      WTF::StringImpl::destroy(v32, v33);
    else
      *(_DWORD *)v32 -= 2;
  }
  v34 = v11[7];
  if ((v34 & 0xFF00000000) != 0)
    v35 = (v34 & 0x80000000) != 0
        ? COERCE__INT64((double)v34) + 0x2000000000000
        : v11[7] | 0xFFFE000000000000;
  else
    v35 = 2;
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v36 = v48;
  v48 = 0;
  v49 = v14;
  v50 = -1;
  v51 = 0x1000000;
  v52 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v36, v35, 0, (uint64_t)&v48);
  if (v36)
  {
    if (*(_DWORD *)v36 == 2)
      WTF::StringImpl::destroy(v36, v37);
    else
      *(_DWORD *)v36 -= 2;
  }
  return (_BYTE *)v14;
}

unint64_t WebCore::jsDeviceMotionEventConstructorFunction_requestPermission(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  int v10;
  JSC::VM *v11;
  unint64_t v12;
  WebCore::DOMGuardedObject *v13;
  WebCore::DOMGuardedObject *v14;
  uint64_t v15;
  WebCore::DOMGuardedObject *v16;
  uint64_t v17;
  void (*v19)(void);
  objc_class *v20;
  WebCore::DOMGuardedObject *v21;
  WebCore::DOMGuardedObject *v22;

  v4 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDOMGlobalObject::s_info && v6 != 0);
  }
  if (!v5)
  {
    __break(0xC471u);
    JUMPOUT(0x194A8B078);
  }
  v9 = *((_QWORD *)this + 7);
  v10 = *((_DWORD *)this + 291);
  if (v10)
    v11 = (JSC::VM *)(16 * (v10 & 0xFFFFFFFE));
  else
    v11 = 0;
  v12 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v11, a3);
  v13 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v14 = WebCore::DOMGuardedObject::DOMGuardedObject(v13, (unint64_t)this, v12);
  *(_QWORD *)v14 = &off_1E3226868;
  *((_DWORD *)v14 + 10) = 0;
  *((_BYTE *)v14 + 44) = 0;
  v15 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v15)
  {
    if (*((_DWORD *)v13 + 4) != 1)
    {
      --*((_DWORD *)v13 + 4);
      goto LABEL_19;
    }
    v19 = *(void (**)(void))(*(_QWORD *)v13 + 16);
    goto LABEL_23;
  }
  if (*(_BYTE *)(v15 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194A8B0ACLL);
  }
  v22 = v13;
  WebCore::DeviceMotionEvent::requestPermission((WebCore::Document *)(v15 - 192), (uint64_t *)&v22);
  v16 = v22;
  v22 = 0;
  if (v16)
  {
    if (*((_DWORD *)v16 + 4) != 1)
    {
      --*((_DWORD *)v16 + 4);
      goto LABEL_19;
    }
    v19 = *(void (**)(void))(*(_QWORD *)v16 + 16);
LABEL_23:
    v19();
  }
LABEL_19:
  v17 = *(_QWORD *)(v9 + 16);
  if (v17)
  {
    if (*(_QWORD *)(v9 + 24) != v17)
    {
      v20 = *(objc_class **)(v17 + 8);
      JSC::VM::clearException((JSC::VM *)v9);
      WebCore::DeferredPromise::create((unint64_t)this, v12, 0, &v22);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v22, v20, 0);
      v21 = v22;
      v22 = 0;
      if (v21)
      {
        if (*((_DWORD *)v21 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v21 + 16))(v21);
        else
          --*((_DWORD *)v21 + 4);
      }
    }
  }
  if (*(_DWORD *)(v9 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9) & 1) != 0)
    return 10;
  return v12;
}

_BYTE *WebCore::jsDeviceMotionEventPrototypeFunction_initDeviceMotionEvent(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v8;
  char v9;
  double v10;
  WebCore *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  BOOL v16;
  char **v17;
  BOOL v18;
  unint64_t v20;
  WTF::StringImpl *v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  int v27;
  uint64_t v28;
  int *v29;
  int v30;
  unint64_t i;
  unint64_t v32;
  JSC::VM *v33;
  double v34;
  int v35;
  uint64_t v36;
  int *v37;
  int v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  char v45;
  unint64_t v46;
  char v47;
  char v48;
  double v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t Object;
  JSC::Structure *v55;
  WTF::StringImpl *v56;
  WTF::StringImpl *v57;
  unint64_t v58;
  JSC::VM *v59;
  char v60;
  WTF::StringImpl *v61;
  WTF::StringImpl *v62;
  WTF::StringImpl *v63;
  char v65;
  double v66;
  JSC::VM *v67;
  WTF::StringImpl *v68;
  WTF::StringImpl *v69;
  unint64_t v70;
  char v71;
  unsigned __int8 v72;
  double v73;
  JSC::VM *v74;
  WTF::StringImpl *v75;
  WTF::StringImpl *v76;
  JSC::VM *v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  char v82;
  char hasExceptionsAfterHandlingTraps;
  char v84;
  JSC::JSGlobalObject *v85;
  double v86;
  double v87;
  double v88;
  unint64_t v89;
  unsigned int v90;
  unsigned int v91;
  char v92;
  double v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  JSC::VM *v97;
  unsigned int v98;
  unsigned int v99;
  char v100;
  char v101;
  JSC::VM *v102;
  char v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  WTF **v112;
  uint64_t v113;
  _BYTE v114[7];
  _DWORD v115[2];
  _DWORD v116[2];
  _DWORD v117[2];
  _BYTE v118[7];
  _BYTE v119[7];
  WTF::StringImpl *v120;
  int v121;
  __int128 v122;
  uint64_t v123;
  char v124;
  _BYTE v125[7];
  double v126;
  char v127;
  _BYTE v128[7];
  char v129;
  _BYTE v130[7];
  _BYTE v131[17];
  _BYTE v132[31];
  char v133;
  _BYTE v134[7];
  WTF::StringImpl *v135;
  _BYTE v136[7];
  _BYTE v137[7];
  __int128 v138;
  _OWORD v139[2];
  __int128 v140;
  _OWORD v141[2];
  _BYTE v142[56];
  int v143;
  uint64_t v144;

  v11 = this;
  v144 = *MEMORY[0x1E0C80C00];
  v12 = 0xFFFE000000000002;
  v113 = *((_QWORD *)this + 7);
  v13 = *((_QWORD *)a2 + 5);
  if ((v13 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v113, "DeviceMotionEvent", "initDeviceMotionEvent");
  v14 = (unint64_t)a2;
  v15 = *(unsigned int *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C);
  v16 = *(_DWORD *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C) != 0;
  v17 = (char **)(16 * v15);
  if ((_DWORD)v15)
    v18 = v17 == &WebCore::JSDeviceMotionEvent::s_info;
  else
    v18 = 1;
  if (!v18)
  {
    do
    {
      v17 = (char **)v17[2];
      v16 = v17 != 0;
    }
    while (v17 != &WebCore::JSDeviceMotionEvent::s_info && v17 != 0);
  }
  if (!v16)
    return WebCore::throwThisTypeError((int)this, (int)&v113, "DeviceMotionEvent", "initDeviceMotionEvent");
  v20 = *(_QWORD *)(v13 + 24);
  if (*((_DWORD *)a2 + 8) == 1 || *((_QWORD *)a2 + 6) == 10)
  {
    v21 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v21 += 2;
    v120 = v21;
    v121 = 0;
  }
  else
  {
    WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v120);
    v22 = v121;
    if (v121)
    {
      v52 = 0;
      goto LABEL_88;
    }
  }
  v23 = *(int *)(v14 + 32);
  if ((unint64_t)(v23 - 3) >= 0xFFFFFFFFFFFFFFFELL)
  {
    v25 = (JSC::VM *)*((_QWORD *)v11 + 7);
    v24 = 10;
    goto LABEL_29;
  }
  v24 = *(_QWORD *)(v14 + 56);
  v25 = (JSC::VM *)*((_QWORD *)v11 + 7);
  if (v24 >= 0xFFFE000000000000)
    goto LABEL_171;
  *(_QWORD *)&v26 = v24 - 0x2000000000000;
  if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v24 & 0xFFFE000000000002) == 0)
    {
      v27 = *(unsigned __int8 *)(v24 + 5);
      if (v27 == 3)
      {
        v30 = *(_DWORD *)(v24 + 8);
      }
      else
      {
        if (v27 != 2)
        {
          i = (*(_BYTE *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0xA) & 1) == 0
           || *(_QWORD *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0x28) != (_QWORD)v11;
          goto LABEL_188;
        }
        v28 = *(_QWORD *)(v24 + 8);
        if ((v28 & 1) != 0)
          v29 = (int *)(v24 + 16);
        else
          v29 = (int *)(v28 + 4);
        v30 = *v29;
      }
      i = v30 != 0;
LABEL_188:
      v12 = 0xFFFE000000000002;
      goto LABEL_30;
    }
LABEL_29:
    i = v24 == 7;
    goto LABEL_30;
  }
  for (i = v26 > 0.0 || v26 < 0.0; ; i = (_DWORD)v24 != 0)
  {
LABEL_30:
    if (*((_DWORD *)v25 + 20))
    {
      v78 = i;
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v25) & 1) != 0)
      {
        v52 = 0;
        goto LABEL_87;
      }
      v23 = *(int *)(v14 + 32);
      i = v78;
    }
    if ((unint64_t)(v23 - 4) >= 0xFFFFFFFFFFFFFFFDLL)
    {
      v33 = (JSC::VM *)*((_QWORD *)v11 + 7);
      v32 = 10;
LABEL_42:
      v39 = v32 == 7;
      goto LABEL_43;
    }
    v32 = *(_QWORD *)(v14 + 64);
    v33 = (JSC::VM *)*((_QWORD *)v11 + 7);
    if (v32 >= 0xFFFE000000000000)
    {
      v39 = (_DWORD)v32 != 0;
      goto LABEL_43;
    }
    *(_QWORD *)&v34 = v32 - 0x2000000000000;
    if (v32 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      v39 = v34 > 0.0 || v34 < 0.0;
      goto LABEL_190;
    }
    if ((v32 & v12) != 0)
      goto LABEL_42;
    v35 = *(unsigned __int8 *)(v32 + 5);
    if (v35 == 3)
    {
      v38 = *(_DWORD *)(v32 + 8);
    }
    else
    {
      if (v35 != 2)
      {
        v39 = (*(_BYTE *)(16 * (*(_DWORD *)v32 & 0xFFFFFFFE) + 0xA) & 1) == 0
           || *(_QWORD *)(16 * (*(_DWORD *)v32 & 0xFFFFFFFE) + 0x28) != (_QWORD)v11;
        goto LABEL_190;
      }
      v36 = *(_QWORD *)(v32 + 8);
      v37 = (int *)((v36 & 1) != 0 ? v32 + 16 : v36 + 4);
      v38 = *v37;
    }
    v39 = v38 != 0;
LABEL_190:
    v12 = 0xFFFE000000000002;
LABEL_43:
    if (*((_DWORD *)v33 + 20))
    {
      v79 = v20;
      v80 = v39;
      v81 = i;
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v33) & 1) != 0)
      {
        v52 = 0;
        goto LABEL_87;
      }
      v23 = *(int *)(v14 + 32);
      i = v81;
      v39 = v80;
      v20 = v79;
    }
    v112 = (WTF **)v20;
    if ((unint64_t)(v23 - 5) >= 0xFFFFFFFFFFFFFFFCLL)
    {
      v41 = 0;
      v42 = 0;
    }
    else
    {
      v40 = *(_QWORD *)(v14 + 72);
      if (v40 == 10 || (v40 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v41 = 0;
        v42 = 0;
      }
      else
      {
        v20 = v39;
        v51 = i;
        WebCore::convertDictionary<WebCore::DeviceMotionEvent::Acceleration>((uint64_t)v142, v11, *(JSC::JSCell **)(v14 + 72));
        if (v143)
        {
          v52 = 0;
          goto LABEL_87;
        }
        v42 = v142[8];
        v140 = *(_OWORD *)&v142[9];
        v141[0] = *(_OWORD *)&v142[25];
        *(_OWORD *)((char *)v141 + 15) = *(_OWORD *)&v142[40];
        v23 = *(int *)(v14 + 32);
        v41 = 1;
        i = v51;
        v39 = v20;
      }
    }
    if ((unint64_t)(v23 - 6) >= 0xFFFFFFFFFFFFFFFBLL)
    {
      v44 = 0;
      v45 = 0;
      v43 = 10;
    }
    else
    {
      v43 = *(_QWORD *)(v14 + 80);
      if (v43 == 10 || (v43 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v44 = 0;
        v45 = 0;
      }
      else
      {
        v98 = v41;
        v53 = v42;
        v94 = v39;
        v20 = i;
        WebCore::convertDictionary<WebCore::DeviceMotionEvent::Acceleration>((uint64_t)v142, v11, (JSC::JSCell *)v43);
        if (v143)
        {
          v52 = 0;
          goto LABEL_87;
        }
        v44 = v142[8];
        v138 = *(_OWORD *)&v142[9];
        v139[0] = *(_OWORD *)&v142[25];
        *(_OWORD *)((char *)v139 + 15) = *(_OWORD *)&v142[40];
        v23 = *(int *)(v14 + 32);
        v45 = 1;
        i = v20;
        v39 = v94;
        v42 = v53;
        v41 = v98;
        v12 = 0xFFFE000000000002;
      }
    }
    if ((unint64_t)(v23 - 7) >= 0xFFFFFFFFFFFFFFFALL)
    {
      v47 = 0;
      v48 = 0;
      goto LABEL_59;
    }
    v46 = *(_QWORD *)(v14 + 88);
    if (v46 == 10 || (v46 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v47 = 0;
      v48 = 0;
      goto LABEL_59;
    }
    v107 = v45;
    v109 = v44;
    v99 = v41;
    v90 = i;
    v92 = v42;
    v95 = v39;
    v102 = (JSC::VM *)*((_QWORD *)v11 + 7);
    *(_QWORD *)&v122 = v102;
    v18 = (v46 & v12) == 0;
    v12 = v46;
    if (!v18 || (Object = JSC::JSCell::getObject((JSC::JSCell *)v46)) == 0)
    {
      JSC::throwTypeError();
      v52 = 0;
      goto LABEL_87;
    }
    v55 = (JSC::Structure *)Object;
    WTF::AtomStringImpl::addLiteral();
    v56 = *(WTF::StringImpl **)v142;
    v58 = JSC::JSObject::get(v55, v11, *(unint64_t *)v142);
    if (v56)
    {
      if (*(_DWORD *)v56 == 2)
        WTF::StringImpl::destroy(v56, v57);
      else
        *(_DWORD *)v56 -= 2;
    }
    if (*((_DWORD *)v102 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v102) & 1) != 0)
      goto LABEL_159;
    if (v58 == 10)
    {
      v111 = 0;
      v105 = 0;
    }
    else
    {
      if ((v58 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v65 = 0;
        v66 = 0.0;
      }
      else
      {
        *(_QWORD *)v142 = v58;
        v67 = (JSC::VM *)*((_QWORD *)v11 + 7);
        *(_QWORD *)v131 = v67;
        if (v58 >= 0xFFFE000000000000)
        {
          v66 = (double)(int)v58;
        }
        else if (v58 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v142, v11);
          v66 = v86;
        }
        else
        {
          *(_QWORD *)&v66 = v58 - 0x2000000000000;
        }
        if (*((_DWORD *)v67 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v67) & 1) != 0)
          goto LABEL_159;
        if ((*(_QWORD *)&v66 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
          goto LABEL_158;
        v65 = 1;
      }
      v111 = v65;
      v105 = LOBYTE(v66);
      v12 = *(_QWORD *)&v66 >> 8;
    }
    WTF::AtomStringImpl::addLiteral();
    v68 = *(WTF::StringImpl **)v142;
    v70 = JSC::JSObject::get(v55, v11, *(unint64_t *)v142);
    if (v68)
    {
      if (*(_DWORD *)v68 == 2)
        WTF::StringImpl::destroy(v68, v69);
      else
        *(_DWORD *)v68 -= 2;
    }
    if (*((_DWORD *)v102 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v102) & 1) != 0)
      goto LABEL_159;
    if (v70 == 10)
    {
      v71 = 0;
      v72 = 0;
      v89 = 0;
    }
    else
    {
      if ((v70 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v71 = 0;
        v73 = 0.0;
      }
      else
      {
        *(_QWORD *)v142 = v70;
        v74 = (JSC::VM *)*((_QWORD *)v11 + 7);
        *(_QWORD *)v131 = v74;
        if (v70 >= 0xFFFE000000000000)
        {
          v73 = (double)(int)v70;
        }
        else if (v70 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v142, v11);
          v73 = v87;
        }
        else
        {
          *(_QWORD *)&v73 = v70 - 0x2000000000000;
        }
        if (*((_DWORD *)v74 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v74) & 1) != 0)
          goto LABEL_159;
        if ((*(_QWORD *)&v73 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
          goto LABEL_158;
        v71 = 1;
      }
      v72 = LOBYTE(v73);
      v89 = *(_QWORD *)&v73 & 0xFFFFFFFFFFFFFF00;
    }
    WTF::AtomStringImpl::addLiteral();
    v75 = *(WTF::StringImpl **)v142;
    v20 = JSC::JSObject::get(v55, v11, *(unint64_t *)v142);
    i = v90;
    v39 = v95;
    if (v75)
    {
      if (*(_DWORD *)v75 == 2)
      {
        WTF::StringImpl::destroy(v75, v76);
        v39 = v95;
        i = v90;
      }
      else
      {
        *(_DWORD *)v75 -= 2;
      }
    }
    v8 = v71;
    if (*((_DWORD *)v102 + 20))
    {
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v102);
      v8 = v71;
      v39 = v95;
      i = v90;
      if ((hasExceptionsAfterHandlingTraps & 1) != 0)
        goto LABEL_159;
    }
    if (v20 == 10)
    {
      v9 = 0;
      v10 = 0.0;
LABEL_132:
      v42 = v92;
      v41 = v99;
      v45 = v107;
      v44 = v109;
      goto LABEL_133;
    }
    v42 = v92;
    v41 = v99;
    v45 = v107;
    v44 = v109;
    if ((v20 & 0xFFFFFFFFFFFFFFF7) != 2)
    {
      *(_QWORD *)v142 = v20;
      v77 = (JSC::VM *)*((_QWORD *)v11 + 7);
      *(_QWORD *)v131 = v77;
      if (v20 >= 0xFFFE000000000000)
      {
        v10 = (double)(int)v20;
      }
      else if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v142, v11);
        v8 = v71;
        v39 = v95;
        i = v90;
        v10 = v88;
      }
      else
      {
        *(_QWORD *)&v10 = v20 - 0x2000000000000;
      }
      if (*((_DWORD *)v77 + 20))
      {
        v84 = JSC::VM::hasExceptionsAfterHandlingTraps(v77);
        v8 = v71;
        v39 = v95;
        i = v90;
        if ((v84 & 1) != 0)
          goto LABEL_159;
      }
      if ((*(_QWORD *)&v10 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
      {
LABEL_158:
        JSC::throwTypeError();
LABEL_159:
        v52 = 0;
        goto LABEL_87;
      }
      v9 = 1;
      goto LABEL_132;
    }
    v9 = 0;
    v10 = 0.0;
LABEL_133:
    v47 = v105;
    v117[0] = (_DWORD)v135;
    *(_DWORD *)((char *)v117 + 3) = *(_DWORD *)((char *)&v135 + 3);
    v43 = v89 | v72;
    v116[0] = *(_DWORD *)v137;
    *(_DWORD *)((char *)v116 + 3) = *(_DWORD *)&v137[3];
    v115[0] = *(_DWORD *)v136;
    *(_DWORD *)((char *)v115 + 3) = *(_DWORD *)&v136[3];
    v48 = 1;
    v23 = *(int *)(v14 + 32);
LABEL_59:
    v49 = 0.0;
    if ((unint64_t)(v23 - 8) > 0xFFFFFFFFFFFFFFF8)
    {
      v50 = 0;
      v14 = 10;
    }
    else
    {
      v14 = *(_QWORD *)(v14 + 96);
      if (v14 == 10 || (v14 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v50 = 0;
      }
      else
      {
        *(_QWORD *)v142 = v14;
        v59 = (JSC::VM *)*((_QWORD *)v11 + 7);
        v108 = v45;
        v110 = v44;
        v106 = v47;
        if (v14 >= 0xFFFE000000000000)
        {
          v20 = v41;
          v60 = v42;
          v49 = (double)(int)v14;
        }
        else
        {
          v20 = v41;
          v60 = v42;
          if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            v97 = (JSC::VM *)*((_QWORD *)v11 + 7);
            v85 = v11;
            v91 = i;
            v11 = (WebCore *)v39;
            v101 = v9;
            v104 = v8;
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v142, v85);
            v59 = v97;
            v9 = v101;
            v8 = v104;
            LODWORD(v39) = (_DWORD)v11;
            i = v91;
          }
          else
          {
            *(_QWORD *)&v49 = v14 - 0x2000000000000;
          }
        }
        if (*((_DWORD *)v59 + 20))
        {
          v93 = v49;
          v11 = (WebCore *)i;
          v96 = v39;
          v100 = v9;
          v103 = v8;
          v82 = JSC::VM::hasExceptionsAfterHandlingTraps(v59);
          v9 = v100;
          v8 = v103;
          LODWORD(v39) = v96;
          LODWORD(i) = (_DWORD)v11;
          v49 = v93;
          if ((v82 & 1) != 0)
          {
            v52 = 0;
            goto LABEL_87;
          }
        }
        v50 = 1;
        v42 = v60;
        LOBYTE(v41) = v20;
        v45 = v108;
        v44 = v110;
        v47 = v106;
      }
    }
    if (!v121)
      break;
    v25 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_171:
    ;
  }
  v61 = v120;
  v120 = 0;
  v135 = v61;
  v142[0] = v42;
  *(_OWORD *)&v142[1] = v140;
  *(_OWORD *)&v142[17] = v141[0];
  *(_OWORD *)&v142[32] = *(_OWORD *)((char *)v141 + 15);
  v142[48] = v41;
  *(_DWORD *)&v142[49] = *(_DWORD *)v119;
  *(_DWORD *)&v142[52] = *(_DWORD *)&v119[3];
  v131[0] = v44;
  *(_OWORD *)&v131[1] = v138;
  *(_OWORD *)v132 = v139[0];
  *(_OWORD *)&v132[15] = *(_OWORD *)((char *)v139 + 15);
  v133 = v45;
  *(_DWORD *)v134 = *(_DWORD *)v118;
  *(_DWORD *)&v134[3] = *(_DWORD *)&v118[3];
  LOBYTE(v122) = v47;
  BYTE7(v122) = BYTE6(v12);
  *(_WORD *)((char *)&v122 + 5) = WORD2(v12);
  *(_DWORD *)((char *)&v122 + 1) = v12;
  BYTE8(v122) = v111;
  *(_DWORD *)((char *)&v122 + 9) = v117[0];
  HIDWORD(v122) = *(_DWORD *)((char *)v117 + 3);
  v123 = v43;
  v124 = v8;
  *(_DWORD *)v125 = v116[0];
  *(_DWORD *)&v125[3] = *(_DWORD *)((char *)v116 + 3);
  v126 = v10;
  v127 = v9;
  *(_DWORD *)&v128[3] = *(_DWORD *)((char *)v115 + 3);
  *(_DWORD *)v128 = v115[0];
  v129 = v48;
  *(_DWORD *)&v130[3] = *(_DWORD *)&v114[3];
  *(_DWORD *)v130 = *(_DWORD *)v114;
  WebCore::DeviceMotionEvent::initDeviceMotionEvent(v112, (const WTF::AtomString *)&v135, i, v39, (__int128 *)v142, (__int128 *)v131, &v122, a8, *(uint64_t *)&v49, v50);
  v63 = v135;
  v135 = 0;
  if (v63)
  {
    if (*(_DWORD *)v63 == 2)
      WTF::StringImpl::destroy(v63, v62);
    else
      *(_DWORD *)v63 -= 2;
  }
  v52 = 10;
LABEL_87:
  v22 = v121;
LABEL_88:
  if (v22 != -1)
    ((void (*)(_BYTE *, WTF::StringImpl **))off_1E325A6F0[v22])(v142, &v120);
  return (_BYTE *)v52;
}

unint64_t WebCore::jsDeviceOrientationEventConstructorFunction_requestPermission(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  int v10;
  JSC::VM *v11;
  unint64_t v12;
  WebCore::DOMGuardedObject *v13;
  WebCore::DOMGuardedObject *v14;
  uint64_t v15;
  WebCore::DOMGuardedObject *v16;
  uint64_t v17;
  void (*v19)(void);
  objc_class *v20;
  WebCore::DOMGuardedObject *v21;
  WebCore::DOMGuardedObject *v22;

  v4 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDOMGlobalObject::s_info && v6 != 0);
  }
  if (!v5)
  {
    __break(0xC471u);
    JUMPOUT(0x194A8BEF4);
  }
  v9 = *((_QWORD *)this + 7);
  v10 = *((_DWORD *)this + 291);
  if (v10)
    v11 = (JSC::VM *)(16 * (v10 & 0xFFFFFFFE));
  else
    v11 = 0;
  v12 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v11, a3);
  v13 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v14 = WebCore::DOMGuardedObject::DOMGuardedObject(v13, (unint64_t)this, v12);
  *(_QWORD *)v14 = &off_1E3226868;
  *((_DWORD *)v14 + 10) = 0;
  *((_BYTE *)v14 + 44) = 0;
  v15 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v15)
  {
    if (*((_DWORD *)v13 + 4) != 1)
    {
      --*((_DWORD *)v13 + 4);
      goto LABEL_19;
    }
    v19 = *(void (**)(void))(*(_QWORD *)v13 + 16);
    goto LABEL_23;
  }
  if (*(_BYTE *)(v15 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194A8BF28);
  }
  v22 = v13;
  WebCore::DeviceOrientationEvent::requestPermission((WebCore::Document *)(v15 - 192), (uint64_t *)&v22);
  v16 = v22;
  v22 = 0;
  if (v16)
  {
    if (*((_DWORD *)v16 + 4) != 1)
    {
      --*((_DWORD *)v16 + 4);
      goto LABEL_19;
    }
    v19 = *(void (**)(void))(*(_QWORD *)v16 + 16);
LABEL_23:
    v19();
  }
LABEL_19:
  v17 = *(_QWORD *)(v9 + 16);
  if (v17)
  {
    if (*(_QWORD *)(v9 + 24) != v17)
    {
      v20 = *(objc_class **)(v17 + 8);
      JSC::VM::clearException((JSC::VM *)v9);
      WebCore::DeferredPromise::create((unint64_t)this, v12, 0, &v22);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v22, v20, 0);
      v21 = v22;
      v22 = 0;
      if (v21)
      {
        if (*((_DWORD *)v21 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v21 + 16))(v21);
        else
          --*((_DWORD *)v21 + 4);
      }
    }
  }
  if (*(_DWORD *)(v9 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9) & 1) != 0)
    return 10;
  return v12;
}

_BYTE *WebCore::jsDeviceOrientationEventPrototypeFunction_initDeviceOrientationEvent(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  JSC::JSGlobalObject *v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  JSC::VM *v18;
  double v19;
  int v20;
  uint64_t v21;
  int *v22;
  int v23;
  _BOOL4 i;
  unint64_t v25;
  JSC::VM *v26;
  int v27;
  uint64_t v28;
  int *v29;
  int v30;
  _BOOL4 v31;
  double v32;
  unint64_t v33;
  uint64_t v34;
  double v35;
  unint64_t v36;
  uint64_t v37;
  JSC::VM *v38;
  JSC::VM *v39;
  double v40;
  unint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  JSC::VM *v45;
  JSC::VM *v46;
  double v47;
  unint64_t v48;
  WTF::StringImpl *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  WTF *v56;
  uint64_t v57;
  uint64_t v59;
  _BOOL4 v60;
  uint64_t v61;
  uint64_t v62;
  _BOOL4 v63;
  char hasExceptionsAfterHandlingTraps;
  uint64_t v65;
  _BOOL4 v66;
  char v67;
  uint64_t v68;
  _BOOL4 v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  _BOOL4 v73;
  uint64_t v74;
  char v75;
  JSC::VM *v76;
  _BOOL4 v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  JSC::VM *v81;
  uint64_t v82;
  _BOOL4 v83;
  double v84;
  uint64_t v85;
  _BOOL4 v86;
  uint64_t v87;
  double v88;
  uint64_t v89;
  _BOOL4 v90;
  uint64_t v91;
  double v92;
  uint64_t v93;
  _BOOL4 v94;
  uint64_t v95;
  double v96;
  JSC::JSGlobalObject *v97;
  uint64_t v98;
  _BOOL4 v99;
  uint64_t v100;
  uint64_t v101;
  double v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  JSC::VM *v109;
  JSC::VM *v110;
  JSC::VM *v111;
  uint64_t v112;
  uint64_t v113;
  WTF::StringImpl *v114;
  int v115;
  WTF::StringImpl *v116[2];

  v3 = (uint64_t)this;
  v4 = 0xFFFE000000000002;
  v113 = *((_QWORD *)this + 7);
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v113, "DeviceOrientationEvent", "initDeviceOrientationEvent");
  v6 = a2;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSDeviceOrientationEvent::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSDeviceOrientationEvent::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v113, "DeviceOrientationEvent", "initDeviceOrientationEvent");
  v12 = *(_QWORD *)(v5 + 24);
  if (*((_DWORD *)a2 + 8) == 1 || *((_QWORD *)a2 + 6) == 10)
  {
    v13 = (WTF::StringImpl *)*MEMORY[0x1E0CBF3B8];
    if (*MEMORY[0x1E0CBF3B8])
      *(_DWORD *)v13 += 2;
    v114 = v13;
    v115 = 0;
  }
  else
  {
    v14 = *(_QWORD *)(v5 + 24);
    WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v114);
    v15 = v115;
    if (v115)
    {
      v57 = 0;
      goto LABEL_108;
    }
    v12 = v14;
  }
  v16 = *((int *)v6 + 8);
  if ((unint64_t)(v16 - 3) >= 0xFFFFFFFFFFFFFFFELL)
  {
    v18 = *(JSC::VM **)(v3 + 56);
    v17 = 10;
    goto LABEL_30;
  }
  v17 = *((_QWORD *)v6 + 7);
  v18 = *(JSC::VM **)(v3 + 56);
  if (v17 >= 0xFFFE000000000000)
    goto LABEL_142;
  *(_QWORD *)&v19 = v17 - 0x2000000000000;
  if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v17 & 0xFFFE000000000002) == 0)
    {
      v20 = *(unsigned __int8 *)(v17 + 5);
      if (v20 == 3)
      {
        v23 = *(_DWORD *)(v17 + 8);
      }
      else
      {
        if (v20 != 2)
        {
          i = (*(_BYTE *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0xA) & 1) == 0
           || *(_QWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x28) != v3;
          goto LABEL_31;
        }
        v21 = *(_QWORD *)(v17 + 8);
        if ((v21 & 1) != 0)
          v22 = (int *)(v17 + 16);
        else
          v22 = (int *)(v21 + 4);
        v23 = *v22;
      }
      i = v23 != 0;
      goto LABEL_31;
    }
LABEL_30:
    i = v17 == 7;
    goto LABEL_31;
  }
  for (i = v19 > 0.0 || v19 < 0.0; ; i = v17 != 0)
  {
LABEL_31:
    if (*((_DWORD *)v18 + 20))
    {
      v59 = v12;
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v18) & 1) != 0)
      {
        v57 = 0;
        goto LABEL_107;
      }
      v16 = *((int *)v6 + 8);
      v12 = v59;
    }
    if ((unint64_t)(v16 - 4) >= 0xFFFFFFFFFFFFFFFDLL)
    {
      v26 = *(JSC::VM **)(v3 + 56);
      v25 = 10;
LABEL_43:
      v31 = v25 == 7;
      goto LABEL_44;
    }
    v25 = *((_QWORD *)v6 + 8);
    v26 = *(JSC::VM **)(v3 + 56);
    if (v25 >= 0xFFFE000000000000)
    {
      v31 = v25 != 0;
      goto LABEL_44;
    }
    if (v25 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      v31 = COERCE_DOUBLE(v25 - 0x2000000000000) > 0.0 || COERCE_DOUBLE(v25 - 0x2000000000000) < 0.0;
    }
    else
    {
      if ((v25 & v4) != 0)
        goto LABEL_43;
      v27 = *(unsigned __int8 *)(v25 + 5);
      if (v27 == 3)
      {
        v30 = *(_DWORD *)(v25 + 8);
LABEL_155:
        v31 = v30 != 0;
        goto LABEL_44;
      }
      if (v27 == 2)
      {
        v28 = *(_QWORD *)(v25 + 8);
        if ((v28 & 1) != 0)
          v29 = (int *)(v25 + 16);
        else
          v29 = (int *)(v28 + 4);
        v30 = *v29;
        goto LABEL_155;
      }
      v31 = (*(_BYTE *)(16 * (*(_DWORD *)v25 & 0xFFFFFFFE) + 0xA) & 1) == 0
         || *(_QWORD *)(16 * (*(_DWORD *)v25 & 0xFFFFFFFE) + 0x28) != v3;
    }
LABEL_44:
    if (*((_DWORD *)v26 + 20))
    {
      v60 = v31;
      v61 = v12;
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v26) & 1) != 0)
      {
        v57 = 0;
        goto LABEL_107;
      }
      v16 = *((int *)v6 + 8);
      v12 = v61;
      v31 = v60;
    }
    v32 = 0.0;
    if ((unint64_t)(v16 - 5) > 0xFFFFFFFFFFFFFFFBLL)
    {
      v34 = 0;
      goto LABEL_50;
    }
    v33 = *((_QWORD *)v6 + 9);
    if (v33 == 10 || (v33 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v34 = 0;
LABEL_50:
      v35 = 0.0;
      goto LABEL_51;
    }
    v116[0] = *((WTF::StringImpl **)v6 + 9);
    v38 = *(JSC::VM **)(v3 + 56);
    if (v33 >= 0xFFFE000000000000)
    {
      v35 = (double)(int)v33;
    }
    else if (v33 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v81 = *(JSC::VM **)(v3 + 56);
      v82 = v12;
      v83 = v31;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v116, (JSC::JSGlobalObject *)v3);
      v31 = v83;
      v12 = v82;
      v38 = v81;
      v35 = v84;
    }
    else
    {
      *(_QWORD *)&v35 = v33 - 0x2000000000000;
    }
    if (*((_DWORD *)v38 + 20))
    {
      v62 = v12;
      v63 = v31;
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v38);
      v31 = v63;
      v12 = v62;
      if ((hasExceptionsAfterHandlingTraps & 1) != 0)
      {
        v57 = 0;
        goto LABEL_107;
      }
    }
    v16 = *((int *)v6 + 8);
    v34 = 1;
LABEL_51:
    if ((unint64_t)(v16 - 6) > 0xFFFFFFFFFFFFFFFALL)
    {
      v37 = 0;
    }
    else
    {
      v36 = *((_QWORD *)v6 + 10);
      if (v36 == 10 || (v36 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v37 = 0;
      }
      else
      {
        v116[0] = *((WTF::StringImpl **)v6 + 10);
        v39 = *(JSC::VM **)(v3 + 56);
        if (v36 >= 0xFFFE000000000000)
        {
          v32 = (double)(int)v36;
        }
        else if (v36 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v111 = *(JSC::VM **)(v3 + 56);
          v85 = v12;
          v86 = v31;
          v87 = v34;
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v116, (JSC::JSGlobalObject *)v3);
          v34 = v87;
          v31 = v86;
          v39 = v111;
          v12 = v85;
          v32 = v88;
        }
        else
        {
          *(_QWORD *)&v32 = v36 - 0x2000000000000;
        }
        if (*((_DWORD *)v39 + 20))
        {
          v65 = v12;
          v66 = v31;
          v112 = v34;
          v67 = JSC::VM::hasExceptionsAfterHandlingTraps(v39);
          v34 = v112;
          v31 = v66;
          v12 = v65;
          if ((v67 & 1) != 0)
          {
            v57 = 0;
            goto LABEL_107;
          }
        }
        v16 = *((int *)v6 + 8);
        v37 = 1;
      }
    }
    v40 = 0.0;
    if ((unint64_t)(v16 - 7) > 0xFFFFFFFFFFFFFFF9)
    {
      v42 = 0;
      goto LABEL_71;
    }
    v41 = *((_QWORD *)v6 + 11);
    if (v41 == 10 || (v41 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v42 = 0;
LABEL_71:
      v43 = 0.0;
      goto LABEL_72;
    }
    v116[0] = *((WTF::StringImpl **)v6 + 11);
    v45 = *(JSC::VM **)(v3 + 56);
    if (v41 >= 0xFFFE000000000000)
    {
      v43 = (double)(int)v41;
    }
    else if (v41 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v108 = v37;
      v109 = *(JSC::VM **)(v3 + 56);
      v89 = v12;
      v90 = v31;
      v91 = v34;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v116, (JSC::JSGlobalObject *)v3);
      v34 = v91;
      v31 = v90;
      v12 = v89;
      v37 = v108;
      v45 = v109;
      v43 = v92;
    }
    else
    {
      *(_QWORD *)&v43 = v41 - 0x2000000000000;
    }
    if (*((_DWORD *)v45 + 20))
    {
      v68 = v12;
      v69 = v31;
      v70 = v34;
      v71 = JSC::VM::hasExceptionsAfterHandlingTraps(v45);
      v34 = v70;
      v31 = v69;
      v12 = v68;
      if ((v71 & 1) != 0)
      {
        v57 = 0;
        goto LABEL_107;
      }
    }
    v16 = *((int *)v6 + 8);
    v42 = 1;
LABEL_72:
    if ((unint64_t)(v16 - 8) > 0xFFFFFFFFFFFFFFF8)
    {
      v44 = 0;
      v4 = 10;
    }
    else
    {
      v4 = *((_QWORD *)v6 + 12);
      if (v4 == 10 || (v4 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v44 = 0;
      }
      else
      {
        v116[0] = *((WTF::StringImpl **)v6 + 12);
        v46 = *(JSC::VM **)(v3 + 56);
        if (v4 >= 0xFFFE000000000000)
        {
          v40 = (double)(int)v4;
        }
        else if (v4 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v110 = *(JSC::VM **)(v3 + 56);
          v93 = v12;
          v105 = v42;
          v94 = v31;
          v95 = v34;
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v116, (JSC::JSGlobalObject *)v3);
          v42 = v105;
          v34 = v95;
          v31 = v94;
          v12 = v93;
          v46 = v110;
          v40 = v96;
        }
        else
        {
          *(_QWORD *)&v40 = v4 - 0x2000000000000;
        }
        if (*((_DWORD *)v46 + 20))
        {
          v107 = v37;
          v72 = v12;
          v73 = v31;
          v74 = v34;
          v103 = v42;
          v75 = JSC::VM::hasExceptionsAfterHandlingTraps(v46);
          v34 = v74;
          v31 = v73;
          v12 = v72;
          v42 = v103;
          v37 = v107;
          if ((v75 & 1) != 0)
          {
            v57 = 0;
            goto LABEL_107;
          }
        }
        v16 = *((int *)v6 + 8);
        v44 = 1;
      }
    }
    v47 = 0.0;
    if ((unint64_t)(v16 - 9) > 0xFFFFFFFFFFFFFFF7)
    {
      v3 = 0;
    }
    else
    {
      v48 = *((_QWORD *)v6 + 13);
      if (v48 == 10 || (v48 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v3 = 0;
      }
      else
      {
        v116[0] = *((WTF::StringImpl **)v6 + 13);
        v6 = *(JSC::JSGlobalObject **)(v3 + 56);
        if (v48 >= 0xFFFE000000000000)
        {
          v47 = (double)(int)v48;
        }
        else if (v48 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v97 = (JSC::JSGlobalObject *)v3;
          v98 = v12;
          v106 = v42;
          v99 = v31;
          v100 = v34;
          v101 = v44;
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v116, v97);
          v44 = v101;
          v42 = v106;
          v34 = v100;
          v31 = v99;
          v12 = v98;
          v47 = v102;
        }
        else
        {
          *(_QWORD *)&v47 = v48 - 0x2000000000000;
        }
        if (*((_DWORD *)v6 + 20))
        {
          v76 = v6;
          v6 = (JSC::JSGlobalObject *)v12;
          v77 = v31;
          v78 = v34;
          v104 = v42;
          v79 = v44;
          v80 = JSC::VM::hasExceptionsAfterHandlingTraps(v76);
          v44 = v79;
          v42 = v104;
          v34 = v78;
          v31 = v77;
          v12 = (uint64_t)v6;
          if ((v80 & 1) != 0)
          {
            v57 = 0;
            goto LABEL_107;
          }
        }
        v3 = 1;
      }
    }
    if (!v115)
      break;
    v18 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_142:
    ;
  }
  v49 = v114;
  v114 = 0;
  v116[0] = v49;
  if ((*(_BYTE *)(v12 + 21) & 0x30) == 0)
  {
    v50 = i;
    v51 = v12;
    v52 = v34;
    v53 = v42;
    v54 = v44;
    WebCore::Event::initEvent(v12, (const WTF::AtomString *)v116, v50, v31);
    v55 = WTF::fastMalloc((WTF *)0x58);
    *(_DWORD *)v55 = 1;
    *(double *)(v55 + 8) = v35;
    *(_QWORD *)(v55 + 16) = v52;
    *(double *)(v55 + 24) = v32;
    *(_QWORD *)(v55 + 32) = v37;
    *(double *)(v55 + 40) = v43;
    *(_QWORD *)(v55 + 48) = v53;
    *(double *)(v55 + 56) = v40;
    *(_QWORD *)(v55 + 64) = v54;
    *(double *)(v55 + 72) = v47;
    *(_QWORD *)(v55 + 80) = v3;
    v56 = *(WTF **)(v51 + 72);
    *(_QWORD *)(v51 + 72) = v55;
    if (v56)
    {
      if (*(_DWORD *)v56 == 1)
        WTF::fastFree(v56, a2);
      else
        --*(_DWORD *)v56;
    }
    v49 = v116[0];
  }
  v116[0] = 0;
  if (v49)
  {
    if (*(_DWORD *)v49 == 2)
      WTF::StringImpl::destroy(v49, a2);
    else
      *(_DWORD *)v49 -= 2;
  }
  v57 = 10;
LABEL_107:
  v15 = v115;
LABEL_108:
  if (v15 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A6F0[v15])(v116, &v114);
  return (_BYTE *)v57;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorIN7WebCore23IdentityRequestProviderELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSH_1EJSE_SF_EEEEEEDcSJ_DpT0_(uint64_t a1, WTF **a2)
{
  uint64_t v2;
  WTF *result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;

  v2 = *((unsigned int *)a2 + 3);
  result = *a2;
  if ((_DWORD)v2)
  {
    v4 = 16 * v2;
    v5 = (uint64_t *)((char *)result + 8);
    do
    {
      v6 = *v5;
      if (*v5)
      {
        v7 = (uint64_t *)(v6 - 16);
        v8 = *(_QWORD *)(((v6 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
        v9 = *(uint64_t **)(v6 - 8);
        if (v9)
        {
          v10 = *v7;
          *v9 = *v7;
          *(_QWORD *)(v10 + 8) = v9;
          *v7 = 0;
          v7[1] = 0;
        }
        *v7 = *(_QWORD *)(v8 + 40);
        *(_QWORD *)(v8 + 40) = v7;
        *v5 = 0;
      }
      v5 += 2;
      v4 -= 16;
    }
    while (v4);
    result = *a2;
  }
  if (result)
  {
    *a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

unint64_t WebCore::jsDocumentConstructorFunction_parseHTMLUnsafe(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v6;
  uint64_t v7;
  int v8;
  WTF::StringImpl *v9;
  WebCore::Document *v10;
  WebCore::JSDOMGlobalObject *v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  WebCore::Node *v16;
  JSValue v17;
  WTF::StringImpl *v18;
  WebCore *v19;
  JSC::JSGlobalObject *v20;
  JSC::CallFrame *v21;
  _BYTE v22[8];
  int v23;
  WebCore::JSDOMGlobalObject *v24;
  WTF::StringImpl *v25;
  int v26;
  JSC::VM *v27;
  WebCore::Node *v28;
  WTF::StringImpl *v29;
  _BYTE v30[8];
  uint64_t v31;
  int v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v27 = v4;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v17.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v17);
  }
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v6)
    return 10;
  v7 = v6;
  if (*(_BYTE *)(v6 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194A8CC8CLL);
  }
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::TrustedHTML>,WebCore::IDLDOMString>>::convert((JSC::VM **)this, *((_QWORD *)a2 + 6), (uint64_t)v30);
  v8 = v32;
  if (v32)
  {
    v14 = 0;
LABEL_15:
    if (v8 != -1)
      ((void (*)(WebCore::JSDOMGlobalObject **, uint64_t *))off_1E325CFC0[v8])(&v24, &v31);
    return v14;
  }
  WebCore::ConversionResult<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::TrustedHTML>,WebCore::IDLDOMString>>::releaseReturnValue((uint64_t)v22, (uint64_t)v30);
  WebCore::Document::parseHTMLUnsafe(v7 - 192, (uint64_t)v22, (uint64_t)&v24);
  if (!v26)
  {
    v11 = v24;
    v24 = 0;
    v12 = WebCore::cachedDocumentWrapper((WebCore::DOMWrapperWorld **)this, this, v11, v10);
    if (v12)
    {
      v14 = v12;
    }
    else
    {
      *((_DWORD *)v11 + 6) += 2;
      v28 = v11;
      v14 = WebCore::toJSNewlyCreated((uint64_t)this, this, &v28);
      v16 = v28;
      v28 = 0;
      if (v16)
      {
        if (*((_DWORD *)v16 + 6) == 2)
        {
          if ((*((_WORD *)v16 + 15) & 0x400) == 0)
            WebCore::Node::removedLastRef(v16, v13);
        }
        else
        {
          *((_DWORD *)v16 + 6) -= 2;
        }
      }
    }
    if (*((_DWORD *)v11 + 6) == 2)
    {
      if ((*((_WORD *)v11 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v11, v13);
    }
    else
    {
      *((_DWORD *)v11 + 6) -= 2;
    }
LABEL_10:
    if (v26 != -1)
      ((void (*)(WebCore::Node **, WebCore::JSDOMGlobalObject **))off_1E325CFB0[v26])(&v28, &v24);
    v26 = -1;
    if (v23 != -1)
      ((void (*)(WebCore::Node **, _BYTE *))off_1E325CF80[v23])(&v28, v22);
    v8 = v32;
    goto LABEL_15;
  }
  if (v26 == 1)
  {
    LOBYTE(v28) = (_BYTE)v24;
    v18 = v25;
    v25 = 0;
    v29 = v18;
    if (!*((_QWORD *)v4 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v27, (unsigned __int8 *)&v28);
      v18 = v29;
    }
    v29 = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v9);
      else
        *(_DWORD *)v18 -= 2;
    }
    v14 = 0;
    goto LABEL_10;
  }
  v19 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsDocumentPrototypeFunction_getElementsByTagNameNS(v19, v20, v21);
}

_BYTE *WebCore::jsDocumentPrototypeFunction_getElementsByTagNameNS(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  int v3;
  JSC::VM *v5;
  uint64_t v6;
  WebCore::ContainerNode *v8;
  int v9;
  JSC::VM *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  WTF::StringImpl **v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  JSValue v20;
  JSC::VM *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  WTF::StringImpl **v24;
  WTF::StringImpl *v25;
  int v26;
  WTF::StringImpl *v27;
  int v28;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v21 = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v6 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "Document", "getElementsByTagNameNS");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v5, this, v20);
  }
  v8 = *(WebCore::ContainerNode **)(v6 + 24);
  if ((*((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v25 = 0;
    v26 = 0;
  }
  else
  {
    WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v27);
    LOBYTE(v25) = 0;
    v26 = -1;
    v3 = v28;
    if (v28 == -1)
      return 0;
    ((void (*)(WTF::StringImpl ***, WTF::StringImpl **, WTF::StringImpl **))off_1E325BFE8[v28])(&v24, &v25, &v27);
    v26 = v3;
    if (v28 != -1)
    {
      ((void (*)(WTF::StringImpl ***, WTF::StringImpl **))off_1E325A6F0[v28])(&v24, &v27);
      v3 = v26;
    }
    if (v3)
      goto LABEL_37;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 7), (uint64_t)&v27);
  v9 = v28;
  if (v28)
  {
    v14 = 0;
LABEL_21:
    if (v9 != -1)
      ((void (*)(WTF::StringImpl ***, WTF::StringImpl **))off_1E325A6F0[v9])(&v24, &v27);
    v3 = v26;
    goto LABEL_24;
  }
  if (!v26)
  {
    v10 = *(JSC::VM **)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x28);
    v11 = v25;
    v25 = 0;
    v12 = v27;
    v27 = 0;
    v22 = v12;
    v23 = v11;
    WebCore::ContainerNode::getElementsByTagNameNS(v8, &v23, &v22, &v24);
    v14 = WebCore::wrap<WebCore::HTMLCollection>((int)this, v10, (uint64_t)v24);
    v15 = v24;
    v24 = 0;
    if (v15)
    {
      if (*((_DWORD *)v15 + 4) == 1)
        (*((void (**)(WTF::StringImpl **))*v15 + 1))(v15);
      else
        --*((_DWORD *)v15 + 4);
    }
    v16 = v22;
    v22 = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v13);
      else
        *(_DWORD *)v16 -= 2;
    }
    v17 = v23;
    v23 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v13);
      else
        *(_DWORD *)v17 -= 2;
    }
    v9 = v28;
    goto LABEL_21;
  }
  std::__throw_bad_variant_access[abi:sn180100]();
LABEL_37:
  v14 = 0;
LABEL_24:
  if (v3 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E325A6F0[v3])(&v27, &v25);
  return (_BYTE *)v14;
}

_BYTE *WebCore::jsDocumentPrototypeFunction_createElementNS(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  int v3;
  JSC::VM *v5;
  uint64_t v6;
  const WTF::AtomString **v8;
  int32x4_t v9;
  int v10;
  JSC::VM *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  JSValue v22;
  WTF::StringImpl *v23;
  JSC::VM *v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  uint64_t v27;
  WTF::StringImpl *v28;
  int v29;
  WTF::StringImpl *v30;
  int v31;
  WTF::StringImpl *v32;
  int v33;
  JSC::VM *v34;
  uint64_t v35;
  WTF::StringImpl *v36;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v24 = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v6 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "Document", "createElementNS");
  v34 = v5;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v22.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v5, this, v22);
  }
  v8 = *(const WTF::AtomString ***)(v6 + 24);
  if ((*((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v32 = 0;
    v33 = 0;
  }
  else
  {
    WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v27);
    LOBYTE(v32) = 0;
    v33 = -1;
    v3 = (int)v28;
    if ((_DWORD)v28 == -1)
      return 0;
    ((void (*)(uint64_t *, WTF::StringImpl **, uint64_t *))off_1E325BFE8[v28])(&v35, &v32, &v27);
    v33 = v3;
    if ((_DWORD)v28 != -1)
    {
      ((void (*)(uint64_t *, uint64_t *))off_1E325A6F0[v28])(&v35, &v27);
      v3 = v33;
    }
    if (v3)
      goto LABEL_49;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 7), (uint64_t)&v30);
  v10 = v31;
  if (v31)
  {
    v16 = 0;
LABEL_22:
    if (v10 != -1)
      ((void (*)(uint64_t *, WTF::StringImpl **))off_1E325A6F0[v10])(&v27, &v30);
    v3 = v33;
    goto LABEL_25;
  }
  if (!v33)
  {
    v11 = *(JSC::VM **)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x28);
    v12 = v32;
    v32 = 0;
    v13 = v30;
    v30 = 0;
    v25 = v13;
    v26 = v12;
    WebCore::Document::createElementNS(v8, &v26, (const WTF::AtomString *)&v25, (uint64_t)&v27, v9);
    if (!v29)
    {
      v15 = v27;
      v27 = 0;
      v35 = v15;
      v16 = WebCore::toJSNewlyCreated((int)this, v11, (WebCore::JSDOMGlobalObject *)&v35);
      v17 = v35;
      v35 = 0;
      if (v17)
      {
        if (*(_DWORD *)(v17 + 24) == 2)
        {
          if ((*(_WORD *)(v17 + 30) & 0x400) == 0)
            WebCore::Node::removedLastRef((WebCore::Node *)v17, v14);
        }
        else
        {
          *(_DWORD *)(v17 + 24) -= 2;
        }
      }
LABEL_13:
      if (v29 != -1)
        ((void (*)(uint64_t *, uint64_t *))off_1E3269420[v29])(&v35, &v27);
      v29 = -1;
      v18 = v25;
      v25 = 0;
      if (v18)
      {
        if (*(_DWORD *)v18 == 2)
          WTF::StringImpl::destroy(v18, (WTF::StringImpl *)v14);
        else
          *(_DWORD *)v18 -= 2;
      }
      v19 = v26;
      v26 = 0;
      if (v19)
      {
        if (*(_DWORD *)v19 == 2)
          WTF::StringImpl::destroy(v19, (WTF::StringImpl *)v14);
        else
          *(_DWORD *)v19 -= 2;
      }
      v10 = v31;
      goto LABEL_22;
    }
    if (v29 == 1)
    {
      LOBYTE(v35) = v27;
      v23 = v28;
      v28 = 0;
      v36 = v23;
      if (!*((_QWORD *)v5 + 2))
      {
        WebCore::propagateExceptionSlowPath(this, &v34, (unsigned __int8 *)&v35);
        v23 = v36;
      }
      v36 = 0;
      if (v23)
      {
        if (*(_DWORD *)v23 == 2)
          WTF::StringImpl::destroy(v23, (WTF::StringImpl *)v14);
        else
          *(_DWORD *)v23 -= 2;
      }
      v16 = 0;
      goto LABEL_13;
    }
  }
  std::__throw_bad_variant_access[abi:sn180100]();
LABEL_49:
  v16 = 0;
LABEL_25:
  if (v3 != -1)
    ((void (*)(uint64_t *, WTF::StringImpl **))off_1E325A6F0[v3])(&v27, &v32);
  return (_BYTE *)v16;
}

_BYTE *WebCore::jsDocumentPrototypeFunction_createDocumentFragment(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  JSC::VM *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  WebCore::Node *v11;
  uint64_t v13;
  WebCore::Node *v14;

  v3 = (int)this;
  v4 = *((_QWORD *)a2 + 5);
  v13 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v4 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v13, "Document", "createDocumentFragment");
  v5 = *(_QWORD *)(v4 + 24);
  v6 = *(JSC::VM **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  v7 = bmalloc::api::isoAllocate();
  *(_OWORD *)(v7 + 8) = xmmword_1968BC9D0;
  *(_QWORD *)(v7 + 24) = 0xB00400000002;
  *(_QWORD *)(v7 + 32) = 0;
  v8 = v5 + 96;
  if (!v5)
    v8 = 0;
  *(_QWORD *)(v7 + 40) = v8;
  *(_OWORD *)(v7 + 48) = 0u;
  *(_OWORD *)(v7 + 64) = 0u;
  ++*(_DWORD *)(v5 + 3324);
  *(_QWORD *)(v7 + 80) = 0;
  *(_QWORD *)(v7 + 88) = 0;
  *(_QWORD *)v7 = off_1E33A31A0;
  v14 = (WebCore::Node *)v7;
  v10 = WebCore::toJSNewlyCreated(v3, v6, &v14);
  v11 = v14;
  v14 = 0;
  if (v11)
  {
    if (*((_DWORD *)v11 + 6) == 2)
    {
      if ((*((_WORD *)v11 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v11, v9);
    }
    else
    {
      *((_DWORD *)v11 + 6) -= 2;
    }
  }
  return (_BYTE *)v10;
}

_BYTE *WebCore::jsDocumentPrototypeFunction_createTextNode(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  JSC::VM *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  void *v13;
  uint64_t v14;
  WebCore::Node *v15;
  uint64_t v16;
  JSValue v19;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v21;
  JSC::VM *v22;
  uint64_t v23;
  int v24;
  WTF::StringImpl *v25;
  WebCore::Node *v26;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v22 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v22, "Document", "createTextNode");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v19);
  }
  v6 = *(_QWORD *)(v5 + 24);
  v7 = *((_QWORD *)a2 + 6);
  v26 = (WebCore::Node *)v7;
  if ((v7 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v7 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v26, this);
  }
  else
  {
    v8 = *(WTF::StringImpl **)(v7 + 8);
    if ((v8 & 1) != 0)
      v8 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v7, this);
    if (v8)
      *(_DWORD *)v8 += 2;
    v25 = v8;
  }
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v9 = v25;
    if (hasExceptionsAfterHandlingTraps)
    {
      v24 = 1;
      v25 = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 2)
          WTF::StringImpl::destroy(v9, v21);
        else
          *(_DWORD *)v9 -= 2;
      }
      v14 = 0;
      v16 = 1;
      goto LABEL_23;
    }
  }
  else
  {
    v9 = v25;
  }
  v24 = 0;
  v10 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v23 = 0;
  v11 = bmalloc::api::isoAllocate();
  *(_OWORD *)(v11 + 8) = xmmword_1968BC9D0;
  *(_QWORD *)(v11 + 24) = 0x300300000002;
  *(_QWORD *)(v11 + 32) = 0;
  *(_QWORD *)(v11 + 40) = v6 + 96;
  *(_OWORD *)(v11 + 48) = 0u;
  *(_OWORD *)(v11 + 64) = 0u;
  ++*(_DWORD *)(v6 + 3324);
  v12 = v9;
  if (v9 || (v12 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738]) != 0)
    *(_DWORD *)v12 += 2;
  *(_QWORD *)(v11 + 80) = v12;
  *(_QWORD *)v11 = off_1E33A8078;
  v26 = (WebCore::Node *)v11;
  v14 = WebCore::toJSNewlyCreated((int)this, v10, &v26);
  v15 = v26;
  v26 = 0;
  if (v15)
  {
    if (*((_DWORD *)v15 + 6) == 2)
    {
      if ((*((_WORD *)v15 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v15, v13);
    }
    else
    {
      *((_DWORD *)v15 + 6) -= 2;
    }
  }
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, (WTF::StringImpl *)v13);
    else
      *(_DWORD *)v9 -= 2;
  }
  v16 = 0;
LABEL_23:
  ((void (*)(WebCore::Node **, uint64_t *))off_1E325A258[v16])(&v26, &v23);
  return (_BYTE *)v14;
}

_BYTE *WebCore::jsDocumentPrototypeFunction_createCDATASection(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  JSC::VM *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  void *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  uint64_t v17;
  JSValue v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  JSValue v25;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v27;
  uint64_t v28;
  _QWORD v29[2];
  int v30;
  uint64_t v31;
  int v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;

  v4 = *((_QWORD *)this + 7);
  v28 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "Document", "createCDATASection");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException((JSC::VM *)v4, this, v25);
  }
  v6 = *(_QWORD *)(v5 + 24);
  v7 = *((_QWORD *)a2 + 6);
  v29[0] = v7;
  if ((v7 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v7 + 5) == 2)
  {
    v8 = *(WTF::StringImpl **)(v7 + 8);
    if ((v8 & 1) != 0)
    {
      v8 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v7, this);
      if (!v8)
        goto LABEL_9;
    }
    else if (!v8)
    {
LABEL_9:
      v33 = v8;
      goto LABEL_10;
    }
    *(_DWORD *)v8 += 2;
    goto LABEL_9;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v29, this);
LABEL_10:
  if (*(_DWORD *)(v4 + 80))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
    v9 = v33;
    if (hasExceptionsAfterHandlingTraps)
    {
      v32 = 1;
      v33 = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 2)
          WTF::StringImpl::destroy(v9, v27);
        else
          *(_DWORD *)v9 -= 2;
      }
      v14 = 0;
      v22 = 1;
      goto LABEL_31;
    }
  }
  else
  {
    v9 = v33;
  }
  v32 = 0;
  v10 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v31 = 0;
  if ((*(_BYTE *)(v6 + 3358) & 1) != 0)
  {
    v17 = 6;
LABEL_22:
    LOBYTE(v29[0]) = v17;
    v30 = 1;
    LOBYTE(v33) = v17;
    v29[1] = 0;
    v34 = 0;
    if (!*(_QWORD *)(v4 + 16))
    {
      v18.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v17, (JSC::JSGlobalObject *)&v34);
      JSC::VM::throwException((JSC::VM *)v4, this, v18);
      v20 = v34;
      v34 = 0;
      if (v20)
      {
        if (*(_DWORD *)v20 == 2)
          WTF::StringImpl::destroy(v20, v19);
        else
          *(_DWORD *)v20 -= 2;
      }
    }
    v14 = 0;
    v16 = 1;
    goto LABEL_27;
  }
  if (v9)
  {
    v17 = 3;
    if (WTF::StringImpl::find() != -1)
      goto LABEL_22;
  }
  v11 = bmalloc::api::isoAllocate();
  *(_OWORD *)(v11 + 8) = xmmword_1968BC9D0;
  *(_QWORD *)(v11 + 24) = 0x400300000002;
  *(_QWORD *)(v11 + 32) = 0;
  *(_QWORD *)(v11 + 40) = v6 + 96;
  *(_OWORD *)(v11 + 48) = 0u;
  *(_OWORD *)(v11 + 64) = 0u;
  ++*(_DWORD *)(v6 + 3324);
  v12 = v9;
  if (v9 || (v12 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738]) != 0)
    *(_DWORD *)v12 += 2;
  *(_QWORD *)(v11 + 80) = v12;
  *(_QWORD *)v11 = off_1E33A0DB8;
  v30 = 0;
  v29[0] = 0;
  v33 = (WTF::StringImpl *)v11;
  v14 = WebCore::toJSNewlyCreated((int)this, v10, (uint64_t *)&v33);
  v15 = v33;
  v33 = 0;
  if (v15)
  {
    if (*((_DWORD *)v15 + 6) == 2)
    {
      if ((*((_WORD *)v15 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v15, v13);
    }
    else
    {
      *((_DWORD *)v15 + 6) -= 2;
    }
  }
  v16 = 0;
LABEL_27:
  ((void (*)(WTF::StringImpl **, _QWORD *))off_1E3269430[v16])(&v33, v29);
  v30 = -1;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v21);
    else
      *(_DWORD *)v9 -= 2;
  }
  v22 = 0;
LABEL_31:
  ((void (*)(_QWORD *, uint64_t *))off_1E325A258[v22])(v29, &v31);
  return (_BYTE *)v14;
}

_BYTE *WebCore::jsDocumentPrototypeFunction_createComment(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  JSC::VM *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  void *v13;
  uint64_t v14;
  WebCore::Node *v15;
  uint64_t v16;
  JSValue v19;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v21;
  JSC::VM *v22;
  uint64_t v23;
  int v24;
  WTF::StringImpl *v25;
  WebCore::Node *v26;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v22 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v22, "Document", "createComment");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v19);
  }
  v6 = *(_QWORD *)(v5 + 24);
  v7 = *((_QWORD *)a2 + 6);
  v26 = (WebCore::Node *)v7;
  if ((v7 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v7 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v26, this);
  }
  else
  {
    v8 = *(WTF::StringImpl **)(v7 + 8);
    if ((v8 & 1) != 0)
      v8 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v7, this);
    if (v8)
      *(_DWORD *)v8 += 2;
    v25 = v8;
  }
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v9 = v25;
    if (hasExceptionsAfterHandlingTraps)
    {
      v24 = 1;
      v25 = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 2)
          WTF::StringImpl::destroy(v9, v21);
        else
          *(_DWORD *)v9 -= 2;
      }
      v14 = 0;
      v16 = 1;
      goto LABEL_21;
    }
  }
  else
  {
    v9 = v25;
  }
  v24 = 0;
  v10 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v23 = 0;
  v11 = bmalloc::api::isoAllocate();
  *(_OWORD *)(v11 + 8) = xmmword_1968BC9D0;
  *(_QWORD *)(v11 + 24) = 0x800100000002;
  *(_QWORD *)(v11 + 32) = 0;
  *(_QWORD *)(v11 + 40) = v6 + 96;
  *(_OWORD *)(v11 + 48) = 0u;
  *(_OWORD *)(v11 + 64) = 0u;
  ++*(_DWORD *)(v6 + 3324);
  v12 = v9;
  if (v9 || (v12 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738]) != 0)
    *(_DWORD *)v12 += 2;
  *(_QWORD *)(v11 + 80) = v12;
  *(_QWORD *)v11 = off_1E33A15C0;
  v26 = (WebCore::Node *)v11;
  v14 = WebCore::toJSNewlyCreated((int)this, v10, (uint64_t *)&v26);
  v15 = v26;
  v26 = 0;
  if (v15)
  {
    if (*((_DWORD *)v15 + 6) == 2)
    {
      if ((*((_WORD *)v15 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v15, v13);
    }
    else
    {
      *((_DWORD *)v15 + 6) -= 2;
    }
  }
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, (WTF::StringImpl *)v13);
    else
      *(_DWORD *)v9 -= 2;
  }
  v16 = 0;
LABEL_21:
  ((void (*)(WebCore::Node **, uint64_t *))off_1E325A258[v16])(&v26, &v23);
  return (_BYTE *)v14;
}

_BYTE *WebCore::jsDocumentPrototypeFunction_createProcessingInstruction(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, int32x4_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  JSC::VM *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  JSC::VM *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  uint64_t v23;
  uint64_t v24;
  JSValue v27;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  int v31;
  WTF::StringImpl *v32;
  JSValue v33;
  WebCore *v34;
  JSC::JSGlobalObject *v35;
  JSC::CallFrame *v36;
  uint64_t v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  int v40[2];
  WTF::StringImpl *v41;
  int v42;
  uint64_t v43;
  int v44;
  WTF::StringImpl *v45;
  int v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;

  v5 = *((_QWORD *)this + 7);
  v37 = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v6 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v37, "Document", "createProcessingInstruction");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v27.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException((JSC::VM *)v5, this, v27);
  }
  v8 = *(_QWORD *)(v6 + 24);
  v9 = *((_QWORD *)a2 + 6);
  *(_QWORD *)v40 = v9;
  if ((v9 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v9 + 5) == 2)
  {
    v10 = *(_QWORD *)(v9 + 8);
    if ((v10 & 1) != 0)
    {
      v10 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v9, this);
      if (!v10)
        goto LABEL_9;
    }
    else if (!v10)
    {
LABEL_9:
      v47 = (WTF::StringImpl *)v10;
      goto LABEL_10;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_9;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v40, this);
LABEL_10:
  if (*(_DWORD *)(v5 + 80))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5);
    v11 = v47;
    if (hasExceptionsAfterHandlingTraps)
    {
      v46 = 1;
      v47 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v29);
        else
          *(_DWORD *)v11 -= 2;
      }
      v19 = 0;
      v24 = 1;
      goto LABEL_34;
    }
  }
  else
  {
    v11 = v47;
  }
  v45 = v11;
  v46 = 0;
  v12 = *((_QWORD *)a2 + 7);
  *(_QWORD *)v40 = v12;
  v13 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v12 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v12 + 5) == 2)
  {
    v14 = *(_QWORD *)(v12 + 8);
    if ((v14 & 1) != 0)
    {
      v14 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
      if (!v14)
        goto LABEL_17;
    }
    else if (!v14)
    {
LABEL_17:
      v47 = (WTF::StringImpl *)v14;
      goto LABEL_18;
    }
    *(_DWORD *)v14 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v40, this);
LABEL_18:
  if (*((_DWORD *)v13 + 20))
  {
    v31 = JSC::VM::hasExceptionsAfterHandlingTraps(v13);
    v15 = v47;
    if (v31)
    {
      v44 = 1;
      v47 = 0;
      if (v15)
      {
        if (*(_DWORD *)v15 == 2)
          WTF::StringImpl::destroy(v15, v30);
        else
          *(_DWORD *)v15 -= 2;
      }
      v19 = 0;
      v23 = 1;
      goto LABEL_33;
    }
  }
  else
  {
    v15 = v47;
  }
  v44 = 0;
  v16 = *(JSC::VM **)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x28);
  v45 = 0;
  v38 = v15;
  v39 = v11;
  v43 = 0;
  WebCore::Document::createProcessingInstruction(v8, (uint64_t *)&v39, (_DWORD **)&v38, (uint64_t)v40, a4);
  if (!v42)
  {
    v17 = *(_QWORD *)v40;
    *(_QWORD *)v40 = 0;
    v47 = (WTF::StringImpl *)v17;
    v19 = WebCore::toJSNewlyCreated((int)this, v16, (uint64_t *)&v47);
    v20 = (uint64_t)v47;
    v47 = 0;
    if (v20)
    {
      if (*(_DWORD *)(v20 + 24) == 2)
      {
        if ((*(_WORD *)(v20 + 30) & 0x400) == 0)
          WebCore::Node::removedLastRef((WebCore::Node *)v20, v18);
      }
      else
      {
        *(_DWORD *)(v20 + 24) -= 2;
      }
    }
LABEL_24:
    if (v42 != -1)
      ((void (*)(WTF::StringImpl **, int *))off_1E3269440[v42])(&v47, v40);
    v42 = -1;
    v21 = v38;
    v38 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, (WTF::StringImpl *)v18);
      else
        *(_DWORD *)v21 -= 2;
    }
    v22 = v39;
    v39 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, (WTF::StringImpl *)v18);
      else
        *(_DWORD *)v22 -= 2;
    }
    v23 = 0;
LABEL_33:
    ((void (*)(int *, uint64_t *))off_1E325A258[v23])(v40, &v43);
    v24 = 0;
LABEL_34:
    ((void (*)(int *, WTF::StringImpl **))off_1E325A258[v24])(v40, &v45);
    return (_BYTE *)v19;
  }
  if (v42 == 1)
  {
    v18 = (void *)LOBYTE(v40[0]);
    LOBYTE(v47) = v40[0];
    v32 = v41;
    v41 = 0;
    v48 = v32;
    if (!*(_QWORD *)(v5 + 16))
    {
      v33.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v40[0]), (JSC::JSGlobalObject *)&v48);
      JSC::VM::throwException((JSC::VM *)v5, this, v33);
      v32 = v48;
    }
    v48 = 0;
    if (v32)
    {
      if (*(_DWORD *)v32 == 2)
        WTF::StringImpl::destroy(v32, (WTF::StringImpl *)v18);
      else
        *(_DWORD *)v32 -= 2;
    }
    v19 = 0;
    goto LABEL_24;
  }
  v34 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDocumentPrototypeFunction_importNode(v34, v35, v36);
}

_BYTE *WebCore::jsDocumentPrototypeFunction_importNode(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WTF::String *a4, __n128 a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WebCore::Node *v15;
  unint64_t v16;
  double v17;
  int v18;
  JSC::VM *v19;
  WTF::StringImpl *v20;
  WebCore::Document *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  WTF *v28;
  JSValue v31;
  WTF *v32;
  uint64_t v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  BOOL v36;
  _BOOL4 v37;
  WebCore *v38;
  JSC::JSGlobalObject *v39;
  JSC::CallFrame *v40;
  uint64_t v41;
  uint64_t v42;
  WTF::StringImpl *v43;
  unsigned int v44;
  WTF *v45;
  uint64_t v46;
  _BYTE v47[40];
  uint64_t v48;
  JSC::JSGlobalObject *v49;
  JSC::VM *v50;
  uint64_t v51;
  WTF::StringImpl *v52;

  v10 = *((_QWORD *)this + 7);
  v41 = v10;
  v11 = *((_QWORD *)a2 + 5);
  if ((v11 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v11 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v41, "Document", "importNode");
  v50 = (JSC::VM *)v10;
  v45 = (WTF *)v47;
  a5.n128_u64[0] = 4;
  v46 = 4;
  v47[32] = 0;
  v48 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v49 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v45;
  v12 = *((int *)a2 + 8);
  if ((_DWORD)v12 == 1)
  {
    v31.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    v25 = JSC::VM::throwException((JSC::VM *)v10, this, v31);
    goto LABEL_18;
  }
  v13 = *(WTF::StringImpl **)(v11 + 24);
  v14 = *((_QWORD *)a2 + 6);
  v42 = v10;
  if ((v14 & 0xFFFE000000000002) != 0
    || *(unsigned __int8 *)(v14 + 5) < 0xF0u
    || (v15 = *(WebCore::Node **)(v14 + 24)) == 0)
  {
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v42, 0, "node", 5, "Document", 9, a9, "importNode", 11, "Node", 5);
    v25 = 0;
    goto LABEL_18;
  }
  if ((unint64_t)(v12 - 3) > 0xFFFFFFFFFFFFFFFDLL)
  {
    v16 = 10;
LABEL_11:
    v18 = v16 == 7;
    goto LABEL_12;
  }
  v16 = *((_QWORD *)a2 + 7);
  if (v16 >= 0xFFFE000000000000)
  {
    v18 = v16 != 0;
    goto LABEL_12;
  }
  *(_QWORD *)&v17 = v16 - 0x2000000000000;
  if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v16 & 0xFFFE000000000002) == 0)
    {
      v18 = JSC::JSCell::toBoolean(*((_QWORD *)a2 + 7), (uint64_t)this);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  a5.n128_u64[0] = v16 - 0x2000000000000;
  v36 = v17 <= 0.0;
  v37 = v17 < 0.0;
  v18 = !v36 || v37;
LABEL_12:
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
  {
    v25 = 0;
    goto LABEL_18;
  }
  v19 = *(JSC::VM **)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0x28);
  WebCore::Document::importNode(v13, v15, v18, a4, (uint64_t)&v42, a5);
  v22 = v44;
  if (!v44)
  {
    v23 = v42;
    v42 = 0;
    v51 = v23;
    v25 = WebCore::toJSNewlyCreated((WebCore::DOMWrapperWorld **)this, v19, (WebCore::JSDOMGlobalObject *)&v51, v21);
    v26 = v51;
    v51 = 0;
    if (v26)
    {
      if (*(_DWORD *)(v26 + 24) == 2)
      {
        if ((*(_WORD *)(v26 + 30) & 0x400) == 0)
          WebCore::Node::removedLastRef((WebCore::Node *)v26, v24);
      }
      else
      {
        *(_DWORD *)(v26 + 24) -= 2;
      }
    }
LABEL_17:
    ((void (*)(uint64_t *, uint64_t *))off_1E3269450[v22])(&v51, &v42);
LABEL_18:
    if (HIDWORD(v46))
    {
      WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v45, v49);
      WebCore::CustomElementReactionStack::s_currentProcessingStack = v48;
      if (HIDWORD(v46))
      {
        v32 = v45;
        v33 = 8 * HIDWORD(v46);
        do
        {
          v34 = *(_QWORD *)v32;
          *(_QWORD *)v32 = 0;
          if (v34)
          {
            if (*(_DWORD *)(v34 + 24) == 2)
            {
              if ((*(_WORD *)(v34 + 30) & 0x400) == 0)
                WebCore::Node::removedLastRef((WebCore::Node *)v34, v27);
            }
            else
            {
              *(_DWORD *)(v34 + 24) -= 2;
            }
          }
          v32 = (WTF *)((char *)v32 + 8);
          v33 -= 8;
        }
        while (v33);
      }
    }
    else
    {
      WebCore::CustomElementReactionStack::s_currentProcessingStack = v48;
    }
    v28 = v45;
    if (v47 != (_BYTE *)v45 && v45 != 0)
    {
      v45 = 0;
      LODWORD(v46) = 0;
      WTF::fastFree(v28, v27);
    }
    return (_BYTE *)v25;
  }
  if (v44 == 1)
  {
    LOBYTE(v51) = v42;
    v35 = v43;
    v43 = 0;
    v52 = v35;
    if (!*(_QWORD *)(v10 + 16))
    {
      WebCore::propagateExceptionSlowPath(this, &v50, (unsigned __int8 *)&v51);
      v35 = v52;
    }
    v52 = 0;
    if (v35)
    {
      if (*(_DWORD *)v35 == 2)
        WTF::StringImpl::destroy(v35, v20);
      else
        *(_DWORD *)v35 -= 2;
    }
    v25 = 0;
    goto LABEL_17;
  }
  v38 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDocumentPrototypeFunction_adoptNode(v38, v39, v40);
}

_BYTE *WebCore::jsDocumentPrototypeFunction_adoptNode(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::TreeScope *a4, __n128 a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  JSC::VM *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  WebCore::Node *v14;
  uint64_t v15;
  void *v16;
  WebCore::Document *v17;
  WebCore::Node *v18;
  uint64_t v19;
  unint64_t Wrapper;
  JSValue v21;
  WTF::StringImpl *v22;
  uint64_t v23;
  unsigned int v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  WebCore::Node *v29;
  int v30;
  WebCore::Node *v31;
  WTF *v32;
  WTF *v35;
  uint64_t v36;
  uint64_t v37;
  WebCore *v38;
  JSC::JSGlobalObject *v39;
  JSC::CallFrame *v40;
  JSC::VM *v41;
  WebCore::Node *v42;
  WTF::StringImpl *v43;
  int v44;
  WTF *v45;
  uint64_t v46;
  _BYTE v47[40];
  uint64_t v48;
  JSC::JSGlobalObject *v49;
  JSC::VM *v50;
  WebCore::Node *v51;
  WTF::StringImpl *v52;

  v10 = (JSC::VM *)*((_QWORD *)this + 7);
  v41 = v10;
  v11 = *((_QWORD *)a2 + 5);
  if ((v11 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v11 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v41, "Document", "adoptNode");
  v50 = v10;
  v45 = (WTF *)v47;
  a5.n128_u64[0] = 4;
  v46 = 4;
  v47[32] = 0;
  v48 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v49 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v45;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    Wrapper = JSC::VM::throwException(v10, this, v21);
    goto LABEL_36;
  }
  v12 = *(_QWORD *)(v11 + 24);
  v13 = *((_QWORD *)a2 + 6);
  v42 = v10;
  if ((v13 & 0xFFFE000000000002) != 0
    || *(unsigned __int8 *)(v13 + 5) < 0xF0u
    || (v14 = *(WebCore::Node **)(v13 + 24)) == 0)
  {
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v42, 0, "node", 5, "Document", 9, a9, "adoptNode", 10, "Node", 5);
    Wrapper = 0;
LABEL_36:
    if (HIDWORD(v46))
    {
      WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v45, v49);
      WebCore::CustomElementReactionStack::s_currentProcessingStack = v48;
      if (HIDWORD(v46))
      {
        v35 = v45;
        v36 = 8 * HIDWORD(v46);
        do
        {
          v37 = *(_QWORD *)v35;
          *(_QWORD *)v35 = 0;
          if (v37)
          {
            if (*(_DWORD *)(v37 + 24) == 2)
            {
              if ((*(_WORD *)(v37 + 30) & 0x400) == 0)
                WebCore::Node::removedLastRef((WebCore::Node *)v37, v16);
            }
            else
            {
              *(_DWORD *)(v37 + 24) -= 2;
            }
          }
          v35 = (WTF *)((char *)v35 + 8);
          v36 -= 8;
        }
        while (v36);
      }
    }
    else
    {
      WebCore::CustomElementReactionStack::s_currentProcessingStack = v48;
    }
    v32 = v45;
    if (v47 != (_BYTE *)v45 && v45 != 0)
    {
      v45 = 0;
      LODWORD(v46) = 0;
      WTF::fastFree(v32, v16);
    }
    return (_BYTE *)Wrapper;
  }
  v15 = *(_QWORD *)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0x28);
  WebCore::Document::adoptNode(v12, v14, (uint64_t)a3, a4, (uint64_t)&v42, a5);
  if (!v44)
  {
    v18 = v42;
    v42 = 0;
    if (*(_BYTE *)(v15 + 3328))
    {
      v19 = *((_QWORD *)v18 + 1);
      if (!v19)
        goto LABEL_29;
    }
    else
    {
      v23 = *(_QWORD *)(*(_QWORD *)(v15 + 3320) + 32);
      if (!v23)
        goto LABEL_29;
      v24 = *(_DWORD *)(v23 - 8);
      v25 = ((unint64_t)v18 + ~((_QWORD)v18 << 32)) ^ (((unint64_t)v18 + ~((_QWORD)v18 << 32)) >> 22);
      v26 = 9 * ((v25 + ~(v25 << 13)) ^ ((v25 + ~(v25 << 13)) >> 8));
      v27 = (v26 ^ (v26 >> 15)) + ~((v26 ^ (v26 >> 15)) << 27);
      v28 = v24 & ((v27 >> 31) ^ v27);
      v29 = *(WebCore::Node **)(v23 + 16 * v28);
      if (v29 != v18)
      {
        v30 = 1;
        while (v29)
        {
          v28 = ((_DWORD)v28 + v30) & v24;
          v29 = *(WebCore::Node **)(v23 + 16 * v28);
          ++v30;
          if (v29 == v18)
            goto LABEL_28;
        }
        goto LABEL_29;
      }
LABEL_28:
      v19 = *(_QWORD *)(v23 + 16 * v28 + 8);
      if (!v19)
      {
LABEL_29:
        *((_DWORD *)v18 + 6) += 2;
        v51 = v18;
        Wrapper = WebCore::createWrapper((WebCore::DOMWrapperWorld **)this, (JSC::VM *)v15, (WebCore::JSDOMGlobalObject *)&v51, v17);
        v31 = v51;
        v51 = 0;
        if (v31)
        {
          if (*((_DWORD *)v31 + 6) == 2)
          {
            if ((*((_WORD *)v31 + 15) & 0x400) == 0)
              WebCore::Node::removedLastRef(v31, v16);
          }
          else
          {
            *((_DWORD *)v31 + 6) -= 2;
          }
        }
        goto LABEL_32;
      }
    }
    if ((*(_BYTE *)(v19 + 8) & 3) == 0)
    {
      Wrapper = *(_QWORD *)v19;
      if (*(_QWORD *)v19)
      {
LABEL_32:
        if (*((_DWORD *)v18 + 6) == 2)
        {
          if ((*((_WORD *)v18 + 15) & 0x400) == 0)
            WebCore::Node::removedLastRef(v18, v16);
        }
        else
        {
          *((_DWORD *)v18 + 6) -= 2;
        }
LABEL_34:
        if (v44 != -1)
          ((void (*)(WebCore::Node **, WebCore::Node **))off_1E3269450[v44])(&v51, &v42);
        goto LABEL_36;
      }
    }
    goto LABEL_29;
  }
  if (v44 == 1)
  {
    LOBYTE(v51) = (_BYTE)v42;
    v22 = v43;
    v43 = 0;
    v52 = v22;
    if (!*((_QWORD *)v10 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v50, (unsigned __int8 *)&v51);
      v22 = v52;
    }
    v52 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, (WTF::StringImpl *)v16);
      else
        *(_DWORD *)v22 -= 2;
    }
    Wrapper = 0;
    goto LABEL_34;
  }
  v38 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDocumentPrototypeFunction_createAttribute(v38, v39, v40);
}

_BYTE *WebCore::jsDocumentPrototypeFunction_createAttribute(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  WebCore::Document *v6;
  int32x4_t v7;
  int v8;
  WebCore::JSAttr **v9;
  WTF::StringImpl *v10;
  WebCore::Node *v11;
  void *v12;
  uint64_t v13;
  WebCore::Node *v14;
  WTF::StringImpl *v15;
  JSValue v18;
  WTF::StringImpl *v19;
  JSValue v20;
  WebCore *v21;
  JSC::JSGlobalObject *v22;
  JSC::CallFrame *v23;
  JSC::VM *v24;
  WTF::StringImpl *v25;
  int v26[2];
  WTF::StringImpl *v27;
  int v28;
  WTF::StringImpl *v29;
  int v30;
  WebCore::Node *v31;
  WTF::StringImpl *v32;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v24 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "Document", "createAttribute");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v18);
  }
  v6 = *(WebCore::Document **)(v5 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v29);
  v8 = v30;
  if (v30)
  {
    v13 = 0;
LABEL_13:
    if (v8 != -1)
      ((void (*)(int *, WTF::StringImpl **))off_1E325A6F0[v8])(v26, &v29);
    return (_BYTE *)v13;
  }
  v9 = *(WebCore::JSAttr ***)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v10 = v29;
  v29 = 0;
  v25 = v10;
  WebCore::Document::createAttribute(v6, (const WTF::AtomString *)&v25, (uint64_t)v26, v7);
  if (!v28)
  {
    v11 = *(WebCore::Node **)v26;
    *(_QWORD *)v26 = 0;
    v31 = v11;
    v13 = WebCore::toJSNewlyCreated((int)this, v9, (uint64_t *)&v31);
    v14 = v31;
    v31 = 0;
    if (v14)
    {
      if (*((_DWORD *)v14 + 6) == 2)
      {
        if ((*((_WORD *)v14 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(v14, v12);
      }
      else
      {
        *((_DWORD *)v14 + 6) -= 2;
      }
    }
LABEL_7:
    if (v28 != -1)
      ((void (*)(WebCore::Node **, int *))off_1E3269460[v28])(&v31, v26);
    v28 = -1;
    v15 = v25;
    v25 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, (WTF::StringImpl *)v12);
      else
        *(_DWORD *)v15 -= 2;
    }
    v8 = v30;
    goto LABEL_13;
  }
  if (v28 == 1)
  {
    v12 = (void *)LOBYTE(v26[0]);
    LOBYTE(v31) = v26[0];
    v19 = v27;
    v27 = 0;
    v32 = v19;
    if (!*((_QWORD *)v4 + 2))
    {
      v20.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v26[0]), (JSC::JSGlobalObject *)&v32);
      JSC::VM::throwException(v4, this, v20);
      v19 = v32;
    }
    v32 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, (WTF::StringImpl *)v12);
      else
        *(_DWORD *)v19 -= 2;
    }
    v13 = 0;
    goto LABEL_7;
  }
  v21 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDocumentPrototypeFunction_createAttributeNS(v21, v22, v23);
}

_BYTE *WebCore::jsDocumentPrototypeFunction_createAttributeNS(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  int v3;
  JSC::VM *v5;
  uint64_t v6;
  WebCore::Document *v8;
  int32x4_t v9;
  int v10;
  WebCore::JSAttr **v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  JSValue v22;
  WTF::StringImpl *v23;
  JSValue v24;
  JSC::VM *v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  int v28[2];
  WTF::StringImpl *v29;
  int v30;
  WTF::StringImpl *v31;
  int v32;
  WTF::StringImpl *v33;
  int v34;
  uint64_t v35;
  WTF::StringImpl *v36;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v6 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "Document", "createAttributeNS");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v22.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v5, this, v22);
  }
  v8 = *(WebCore::Document **)(v6 + 24);
  if ((*((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v33 = 0;
    v34 = 0;
  }
  else
  {
    WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)v28);
    LOBYTE(v33) = 0;
    v34 = -1;
    v3 = (int)v29;
    if ((_DWORD)v29 == -1)
      return 0;
    ((void (*)(uint64_t *, WTF::StringImpl **, int *))off_1E325BFE8[v29])(&v35, &v33, v28);
    v34 = v3;
    if ((_DWORD)v29 != -1)
    {
      ((void (*)(uint64_t *, int *))off_1E325A6F0[v29])(&v35, v28);
      v3 = v34;
    }
    if (v3)
      goto LABEL_49;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 7), (uint64_t)&v31);
  v10 = v32;
  if (v32)
  {
    v16 = 0;
LABEL_22:
    if (v10 != -1)
      ((void (*)(int *, WTF::StringImpl **))off_1E325A6F0[v10])(v28, &v31);
    v3 = v34;
    goto LABEL_25;
  }
  if (!v34)
  {
    v11 = *(WebCore::JSAttr ***)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x28);
    v12 = v33;
    v33 = 0;
    v13 = v31;
    v31 = 0;
    v26 = v13;
    v27 = v12;
    WebCore::Document::createAttributeNS(v8, &v27, (const WTF::AtomString *)&v26, 0, (uint64_t)v28, v9);
    if (!v30)
    {
      v14 = *(_QWORD *)v28;
      *(_QWORD *)v28 = 0;
      v35 = v14;
      v16 = WebCore::toJSNewlyCreated((int)this, v11, &v35);
      v17 = v35;
      v35 = 0;
      if (v17)
      {
        if (*(_DWORD *)(v17 + 24) == 2)
        {
          if ((*(_WORD *)(v17 + 30) & 0x400) == 0)
            WebCore::Node::removedLastRef((WebCore::Node *)v17, v15);
        }
        else
        {
          *(_DWORD *)(v17 + 24) -= 2;
        }
      }
LABEL_13:
      if (v30 != -1)
        ((void (*)(uint64_t *, int *))off_1E3269460[v30])(&v35, v28);
      v30 = -1;
      v18 = v26;
      v26 = 0;
      if (v18)
      {
        if (*(_DWORD *)v18 == 2)
          WTF::StringImpl::destroy(v18, (WTF::StringImpl *)v15);
        else
          *(_DWORD *)v18 -= 2;
      }
      v19 = v27;
      v27 = 0;
      if (v19)
      {
        if (*(_DWORD *)v19 == 2)
          WTF::StringImpl::destroy(v19, (WTF::StringImpl *)v15);
        else
          *(_DWORD *)v19 -= 2;
      }
      v10 = v32;
      goto LABEL_22;
    }
    if (v30 == 1)
    {
      v15 = (void *)LOBYTE(v28[0]);
      LOBYTE(v35) = v28[0];
      v23 = v29;
      v29 = 0;
      v36 = v23;
      if (!*((_QWORD *)v5 + 2))
      {
        v24.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v28[0]), (JSC::JSGlobalObject *)&v36);
        JSC::VM::throwException(v5, this, v24);
        v23 = v36;
      }
      v36 = 0;
      if (v23)
      {
        if (*(_DWORD *)v23 == 2)
          WTF::StringImpl::destroy(v23, (WTF::StringImpl *)v15);
        else
          *(_DWORD *)v23 -= 2;
      }
      v16 = 0;
      goto LABEL_13;
    }
  }
  std::__throw_bad_variant_access[abi:sn180100]();
LABEL_49:
  v16 = 0;
LABEL_25:
  if (v3 != -1)
    ((void (*)(int *, WTF::StringImpl **))off_1E325A6F0[v3])(v28, &v33);
  return (_BYTE *)v16;
}

_BYTE *WebCore::jsDocumentPrototypeFunction_createEvent(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  JSC::VM *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  unint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  JSValue v18;
  WTF::StringImpl *v19;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v21;
  WebCore *v22;
  JSC::JSGlobalObject *v23;
  JSC::CallFrame *v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  int v29;
  uint64_t v30;
  int v31;
  JSC::VM *v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;

  v4 = *((_QWORD *)this + 7);
  v25 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "Document", "createEvent");
  v32 = (JSC::VM *)v4;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException((JSC::VM *)v4, this, v18);
  }
  v6 = *((_QWORD *)a2 + 6);
  v27 = (WTF::StringImpl *)v6;
  if ((v6 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v6 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v27, this);
  }
  else
  {
    v7 = *(WTF::StringImpl **)(v6 + 8);
    if ((v7 & 1) != 0)
      v7 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v6, this);
    if (v7)
      *(_DWORD *)v7 += 2;
    v33 = v7;
  }
  if (*(_DWORD *)(v4 + 80))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
    v8 = v33;
    if (hasExceptionsAfterHandlingTraps)
    {
      v31 = 1;
      v33 = 0;
      if (v8)
      {
        if (*(_DWORD *)v8 == 2)
          WTF::StringImpl::destroy(v8, v19);
        else
          *(_DWORD *)v8 -= 2;
      }
      v12 = 0;
      v15 = 1;
      goto LABEL_23;
    }
  }
  else
  {
    v8 = v33;
  }
  v31 = 0;
  v9 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v30 = 0;
  v26 = v8;
  WebCore::Document::createEvent((const WTF::String *)&v26, (uint64_t)&v27);
  if (!v29)
  {
    v11 = v27;
    v27 = 0;
    v33 = v11;
    v12 = WebCore::toJSNewlyCreated((int)this, v9, (WebCore::JSDOMGlobalObject *)&v33);
    v13 = v33;
    v33 = 0;
    if (v13)
    {
      if (*((_DWORD *)v13 + 4) == 1)
        (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v13 + 8))(v13);
      else
        --*((_DWORD *)v13 + 4);
    }
LABEL_17:
    if (v29 != -1)
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3269470[v29])(&v33, &v27);
    v29 = -1;
    v14 = v26;
    v26 = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v10);
      else
        *(_DWORD *)v14 -= 2;
    }
    v15 = 0;
LABEL_23:
    ((void (*)(WTF::StringImpl **, uint64_t *))off_1E325A258[v15])(&v27, &v30);
    return (_BYTE *)v12;
  }
  if (v29 == 1)
  {
    LOBYTE(v33) = (_BYTE)v27;
    v21 = v28;
    v28 = 0;
    v34 = v21;
    if (!*(_QWORD *)(v4 + 16))
    {
      WebCore::propagateExceptionSlowPath(this, &v32, (unsigned __int8 *)&v33);
      v21 = v34;
    }
    v34 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v10);
      else
        *(_DWORD *)v21 -= 2;
    }
    v12 = 0;
    goto LABEL_17;
  }
  v22 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDocumentPrototypeFunction_createRange(v22, v23, v24);
}

_BYTE *WebCore::jsDocumentPrototypeFunction_createRange(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSDocument *a4)
{
  return WebCore::IDLOperation<WebCore::JSDocument>::call<&WebCore::jsDocumentPrototypeFunction_createRangeBody,(WebCore::CastedThisErrorBehavior)0>(this, *((_QWORD *)a2 + 5), (uint64_t)a3, a4);
}

_BYTE *WebCore::jsDocumentPrototypeFunction_createNodeIterator(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  WebCore::JSNodeFilter *v9;
  JSC::VM *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  WebCore::JSNodeFilter *v18;
  int v19;
  int v20;
  uint64_t v21;
  WebCore::NodeIterator *v22;
  WebCore::JSNodeFilter *v23;
  uint64_t v24;
  bmalloc::api *v26;
  void *v27;
  JSValue v29;
  WebCore *v30;
  JSC::JSGlobalObject *v31;
  JSC::CallFrame *v32;
  JSC::VM *v33;
  WebCore::JSNodeFilter *v34;
  int v35;
  uint64_t v36;
  WebCore::NodeIterator *v37;
  int v38;
  WebCore::JSNodeFilter *v39;

  v9 = (WebCore::JSNodeFilter *)0xFFFE000000000002;
  v10 = (JSC::VM *)*((_QWORD *)this + 7);
  v33 = v10;
  v11 = *((_QWORD *)a2 + 5);
  if ((v11 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v11 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v33, "Document", "createNodeIterator");
  v13 = *((int *)a2 + 8);
  if ((_DWORD)v13 == 1)
  {
    v29.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v10, this, v29);
  }
  v14 = *((_QWORD *)a2 + 6);
  v37 = v10;
  if ((v14 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v14 + 5) < 0xF0u || (v15 = *(_QWORD *)(v14 + 24)) == 0)
  {
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v37, 0, "root", 5, "Document", 9, a8, "createNodeIterator", 19, "Node", 5);
    return 0;
  }
  if ((unint64_t)(v13 - 3) >= 0xFFFFFFFFFFFFFFFELL || *((_QWORD *)a2 + 7) == 10)
  {
    v36 = 0xFFFFFFFFLL;
  }
  else
  {
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), &v36);
    if (HIDWORD(v36))
      return 0;
    v13 = *((int *)a2 + 8);
  }
  if ((unint64_t)(v13 - 4) >= 0xFFFFFFFFFFFFFFFDLL)
  {
    v17 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0x28);
    goto LABEL_18;
  }
  v16 = *((_QWORD *)a2 + 8);
  v17 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0x28);
  if ((v16 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
LABEL_18:
    v9 = 0;
    v35 = 0;
LABEL_23:
    v34 = 0;
    v39 = v9;
    WebCore::NodeIterator::create(v15, v36, (uint64_t *)&v39, (uint64_t *)&v37);
    v21 = WebCore::toJSNewlyCreated((uint64_t)this, (uint64_t)v17, (uint64_t *)&v37);
    v22 = v37;
    v37 = 0;
    if (v22)
    {
      if (*((_DWORD *)v22 + 2) == 1)
      {
        WebCore::NodeIterator::~NodeIterator(v22);
        bmalloc::api::isoDeallocate(v26, v27);
      }
      else
      {
        --*((_DWORD *)v22 + 2);
      }
    }
    v23 = v39;
    v39 = 0;
    if (v23)
    {
      if (*((_DWORD *)v23 + 4) == 1)
        (*(void (**)(WebCore::JSNodeFilter *))(*(_QWORD *)v23 + 16))(v23);
      else
        --*((_DWORD *)v23 + 4);
    }
    v24 = 0;
    goto LABEL_30;
  }
  v39 = (WebCore::JSNodeFilter *)*((_QWORD *)this + 7);
  if ((v16 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v16 + 5) <= 0x16u)
  {
    WebCore::throwArgumentMustBeObjectError((uint64_t)this, (uint64_t)&v39, 2, "filter", 7, "Document", 9, a8, "createNodeIterator", 19);
    v20 = 0;
    v19 = 1;
    v38 = 1;
  }
  else
  {
    v9 = (WebCore::JSNodeFilter *)WTF::fastMalloc((WTF *)0x20);
    v18 = WebCore::JSNodeFilter::JSNodeFilter(v9, v16, v17);
    v19 = 0;
    v38 = 0;
    v37 = 0;
    v20 = 1;
    v34 = v18;
  }
  v35 = v19;
  ((void (*)(WebCore::JSNodeFilter **, WebCore::NodeIterator **))off_1E3269480[v19])(&v39, &v37);
  if (!v20)
  {
    v21 = 0;
    v24 = 1;
LABEL_30:
    ((void (*)(WebCore::NodeIterator **, WebCore::JSNodeFilter **))off_1E3269490[v24])(&v37, &v34);
    return (_BYTE *)v21;
  }
  if (!HIDWORD(v36))
  {
    v17 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0x28);
    goto LABEL_23;
  }
  v30 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDocumentPrototypeFunction_createTreeWalker(v30, v31, v32);
}

uint64_t WebCore::jsDocumentPrototypeFunction_caretRangeFromPoint(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  WebCore::Range *v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unint64_t v14;
  int v15;
  int v16;
  WebCore::Range *v17;
  JSC::VM *v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  WebCore::Range *v28;
  uint64_t v29;
  JSC::VM *v31;
  uint64_t v32;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v31 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) != 249)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v31, "Document", "caretRangeFromPoint");
  v7 = *(_QWORD *)(v5 + 24);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v32 = 10;
LABEL_7:
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v32, this);
    v11 = v10;
    goto LABEL_8;
  }
  v8 = (WebCore::Range *)*((_QWORD *)a2 + 6);
  v32 = (uint64_t)v8;
  if ((unint64_t)v8 >= 0xFFFE000000000000)
  {
    v9 = v8;
    goto LABEL_19;
  }
  v11 = (unint64_t)v8 - 0x2000000000000;
  if ((unint64_t)v8 - 0x2000000000000 >= 0xFFFC000000000000)
    goto LABEL_7;
LABEL_8:
  v12 = (v11 >> 52) & 0x7FF;
  v13 = v12 - 1023;
  v14 = v11 >> (51 - (v11 >> 52));
  if (v12 > 0x433)
    LODWORD(v14) = v11 << ((v11 >> 52) - 51);
  if (v12 >= 0x41F)
    v15 = v14;
  else
    v15 = (((1 << ((v11 >> 52) + 1)) - 1) & v14) + (1 << ((v11 >> 52) + 1));
  if ((v11 & 0x8000000000000000) == 0)
    v16 = v15;
  else
    v16 = -v15;
  if (v13 <= 0x53)
    v9 = v16;
  else
    v9 = 0;
LABEL_19:
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  if ((unint64_t)(*((int *)a2 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL)
  {
    v32 = 10;
    v18 = (JSC::VM *)*((_QWORD *)this + 7);
LABEL_24:
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v32, this);
    v21 = v20;
LABEL_25:
    v22 = (v21 >> 52) & 0x7FF;
    v23 = v22 - 1023;
    v24 = v21 >> (51 - (v21 >> 52));
    if (v22 > 0x433)
      LODWORD(v24) = v21 << ((v21 >> 52) - 51);
    if (v22 >= 0x41F)
      v25 = v24;
    else
      v25 = (((1 << ((v21 >> 52) + 1)) - 1) & v24) + (1 << ((v21 >> 52) + 1));
    if ((v21 & 0x8000000000000000) == 0)
      v26 = v25;
    else
      v26 = -v25;
    if (v23 <= 0x53)
      v19 = v26;
    else
      v19 = 0;
    goto LABEL_36;
  }
  v17 = (WebCore::Range *)*((_QWORD *)a2 + 7);
  v32 = (uint64_t)v17;
  v18 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((unint64_t)v17 < 0xFFFE000000000000)
  {
    v21 = (unint64_t)v17 - 0x2000000000000;
    if ((unint64_t)v17 - 0x2000000000000 < 0xFFFC000000000000)
      goto LABEL_25;
    goto LABEL_24;
  }
  v19 = v17;
LABEL_36:
  if (*((_DWORD *)v18 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v18))
    return 0;
  v27 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  WebCore::Document::caretRangeFromPoint(v7, v9, v19, 0, (WebCore::Range **)&v32);
  v28 = (WebCore::Range *)v32;
  if (!v32)
    return 2;
  v29 = WebCore::wrap<WebCore::Range>((uint64_t)this, v27, v32);
  if (*((_DWORD *)v28 + 2) == 1)
    (*(void (**)(WebCore::Range *))(*(_QWORD *)v28 + 8))(v28);
  else
    --*((_DWORD *)v28 + 2);
  return v29;
}

_BYTE *WebCore::jsDocumentPrototypeFunction_getCSSCanvasContext(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  WebCore::Document *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  JSC::VM *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  JSC::VM *v16;
  unsigned int v17;
  unint64_t v18;
  JSC::VM *v19;
  unsigned int v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WebCore::WebGLRenderingContext *v23;
  uint64_t v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  WebCore::Document *v35;
  WTF::StringImpl **v36;
  WebCore::Document *v37;
  WTF::StringImpl *v38;
  WTF::StringImpl **v39;
  unint64_t v40;
  unsigned int v41;
  unint64_t v42;
  unsigned int v43;
  WebCore::Document *v44;
  WebCore::Document *v45;
  WTF::StringImpl *v46;
  JSValue v48;
  WebCore::Document *v49;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v51;
  WTF::StringImpl *v52;
  WebCore::Document *v53;
  int v54;
  WTF::StringImpl *v55;
  WTF::StringImpl *v56;
  int v57;
  JSC::VM *v58;
  WTF::StringImpl *v59;
  int v60;
  WebCore::Document *v61;
  WTF::StringImpl *v62;
  unint64_t v63;
  WTF::StringImpl *v64;
  unint64_t v65;
  WebCore *v66;
  JSC::JSGlobalObject *v67;
  JSC::CallFrame *v68;
  WebCore::Document *v69;
  WebCore::Document *v70;
  JSC::VM *v71;
  WebCore::Document *v72;
  JSC::VM *v73;
  WTF::StringImpl *v74;
  WTF::StringImpl *v75;
  char v76[8];
  unsigned int v77;
  char v78;
  WTF::StringImpl *v79;
  int v80;
  WTF::StringImpl *v81;
  int v82;
  char v83[8];
  int v84;
  WTF::StringImpl *v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  _QWORD v89[6];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v73 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v73, "Document", "getCSSCanvasContext");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v48.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v48);
  }
  v7 = *(WebCore::Document **)(v5 + 24);
  v8 = *((_QWORD *)a2 + 6);
  v89[0] = v8;
  if ((v8 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v8 + 5) == 2)
  {
    v9 = *(WTF::StringImpl **)(v8 + 8);
    if ((v9 & 1) != 0)
    {
      v35 = v7;
      v36 = (WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v8, this);
      v7 = v35;
      v9 = *v36;
      if (!*v36)
        goto LABEL_9;
    }
    else if (!v9)
    {
LABEL_9:
      v85 = v9;
      goto LABEL_10;
    }
    *(_DWORD *)v9 += 2;
    goto LABEL_9;
  }
  v44 = v7;
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v89, this);
  v7 = v44;
LABEL_10:
  if (*((_DWORD *)v4 + 20))
  {
    v49 = v7;
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v10 = v85;
    if (hasExceptionsAfterHandlingTraps)
    {
      v82 = 1;
      v85 = 0;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, v51);
        else
          *(_DWORD *)v10 -= 2;
      }
      v25 = 0;
      v29 = 1;
      goto LABEL_45;
    }
    v7 = v49;
  }
  else
  {
    v10 = v85;
  }
  v81 = v10;
  v82 = 0;
  v11 = *((_QWORD *)a2 + 7);
  v89[0] = v11;
  v12 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v11 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v11 + 5) == 2)
  {
    v13 = *(WTF::StringImpl **)(v11 + 8);
    if ((v13 & 1) != 0)
    {
      v37 = v7;
      v38 = v10;
      v39 = (WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v11, this);
      v10 = v38;
      v7 = v37;
      v13 = *v39;
      if (!*v39)
        goto LABEL_17;
    }
    else if (!v13)
    {
LABEL_17:
      v85 = v13;
      goto LABEL_18;
    }
    *(_DWORD *)v13 += 2;
    goto LABEL_17;
  }
  v45 = v7;
  v46 = v10;
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v89, this);
  v10 = v46;
  v7 = v45;
LABEL_18:
  if (*((_DWORD *)v12 + 20))
  {
    v52 = v10;
    v53 = v7;
    v54 = JSC::VM::hasExceptionsAfterHandlingTraps(v12);
    v14 = v85;
    if (v54)
    {
      v80 = 1;
      v85 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v55);
        else
          *(_DWORD *)v14 -= 2;
      }
      v25 = 0;
      v28 = 1;
      goto LABEL_44;
    }
    v7 = v53;
    v10 = v52;
  }
  else
  {
    v14 = v85;
  }
  v79 = v14;
  v80 = 0;
  v15 = *((_QWORD *)a2 + 8);
  v89[0] = v15;
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v15 < 0xFFFE000000000000)
  {
    v31 = v15 - 0x2000000000000;
    if (v15 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      v71 = (JSC::VM *)*((_QWORD *)this + 7);
      v61 = v7;
      v62 = v10;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v89, this);
      v10 = v62;
      v7 = v61;
      v16 = v71;
      v31 = v63;
    }
    v32 = (v31 >> 52) & 0x7FF;
    if ((v32 - 1023) <= 0x53)
    {
      v40 = v31 >> (51 - (v31 >> 52));
      if (v32 > 0x433)
        LODWORD(v40) = v31 << ((v31 >> 52) - 51);
      if (v32 >= 0x41F)
        v41 = v40;
      else
        v41 = (((1 << ((v31 >> 52) + 1)) - 1) & v40) + (1 << ((v31 >> 52) + 1));
      if ((v31 & 0x8000000000000000) == 0)
        v17 = v41;
      else
        v17 = -v41;
    }
    else
    {
      v17 = 0;
    }
  }
  else
  {
    v17 = v15;
  }
  if (*((_DWORD *)v16 + 20))
  {
    v69 = v7;
    v56 = v10;
    v57 = JSC::VM::hasExceptionsAfterHandlingTraps(v16);
    v10 = v56;
    v7 = v69;
    if (v57)
    {
      v25 = 0;
LABEL_43:
      v28 = 0;
LABEL_44:
      ((void (*)(_QWORD *, WTF::StringImpl **))off_1E325A258[v28])(v89, &v79);
      v29 = 0;
LABEL_45:
      ((void (*)(_QWORD *, WTF::StringImpl **))off_1E325A258[v29])(v89, &v81);
      return (_BYTE *)v25;
    }
  }
  v18 = *((_QWORD *)a2 + 9);
  v89[0] = v18;
  v19 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v18 < 0xFFFE000000000000)
  {
    v33 = v18 - 0x2000000000000;
    if (v18 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      v72 = v7;
      v64 = v10;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v89, this);
      v10 = v64;
      v7 = v72;
      v33 = v65;
    }
    v34 = (v33 >> 52) & 0x7FF;
    if ((v34 - 1023) <= 0x53)
    {
      v42 = v33 >> (51 - (v33 >> 52));
      if (v34 > 0x433)
        LODWORD(v42) = v33 << ((v33 >> 52) - 51);
      if (v34 >= 0x41F)
        v43 = v42;
      else
        v43 = (((1 << ((v33 >> 52) + 1)) - 1) & v42) + (1 << ((v33 >> 52) + 1));
      if ((v33 & 0x8000000000000000) == 0)
        v20 = v43;
      else
        v20 = -v43;
    }
    else
    {
      v20 = 0;
    }
  }
  else
  {
    v20 = v18;
  }
  if (*((_DWORD *)v19 + 20))
  {
    v58 = v19;
    v70 = v7;
    v59 = v10;
    v60 = JSC::VM::hasExceptionsAfterHandlingTraps(v58);
    v10 = v59;
    v7 = v70;
    if (v60)
    {
      v25 = 0;
      goto LABEL_43;
    }
  }
  v21 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v81 = 0;
  v74 = v14;
  v75 = v10;
  v79 = 0;
  WebCore::Document::getCSSCanvasContext(v7, (const WTF::String *)&v75, &v74, v17, v20, (uint64_t)v76);
  if (!v78)
  {
    v25 = 2;
LABEL_37:
    v26 = v74;
    v74 = 0;
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
        WTF::StringImpl::destroy(v26, v22);
      else
        *(_DWORD *)v26 -= 2;
    }
    v27 = v75;
    v75 = 0;
    if (v27)
    {
      if (*(_DWORD *)v27 == 2)
        WTF::StringImpl::destroy(v27, v22);
      else
        *(_DWORD *)v27 -= 2;
    }
    goto LABEL_43;
  }
  v83[0] = 0;
  v84 = -1;
  v24 = v77;
  if (v77 == -1)
  {
    v24 = -1;
  }
  else
  {
    ((void (*)(_QWORD *, char *, char *))off_1E32694C8[v77])(v89, v83, v76);
    v84 = v24;
  }
  LOBYTE(v86) = 0;
  v87 = 0;
  v88 = v24;
  v89[0] = &v88;
  v89[1] = &v86;
  v89[2] = this;
  v89[3] = v21;
  v89[4] = v83;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_21WebGLRenderingContextEEENS4_INS_22WebGL2RenderingContextEEENS4_INS_16GPUCanvasContextEEENS4_INS_27ImageBitmapRenderingContextEEENS4_INS_24CanvasRenderingContext2DEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSO_12RawPtrTraitsIS5_EENSO_21DefaultRefDerefTraitsIS5_EEEENSP_IS7_NSQ_IS7_EENSS_IS7_EEEENSP_IS9_NSQ_IS9_EENSS_IS9_EEEENSP_ISB_NSQ_ISB_EENSS_ISB_EEEENSP_ISD_NSQ_ISD_EENSS_ISD_EEEEEEEEUlTyvE_JNSM_17integral_constantIlLl0EEENS1B_IlLl1EEENS1B_IlLl2EEENS1B_IlLl3EEENS1B_IlLl4EEEEEET_S1H_((uint64_t)v89, v23, (uint64_t)&v85);
  if (v87)
  {
    v25 = v86;
    if (v84 != -1)
      ((void (*)(_QWORD *, char *))off_1E32694A0[v84])(v89, v83);
    if (v78)
    {
      if (v77 != -1)
        ((void (*)(_QWORD *, char *))off_1E32694A0[v77])(v89, v76);
      v77 = -1;
    }
    goto LABEL_37;
  }
  v66 = (WebCore *)std::__throw_bad_optional_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDocumentPrototypeFunction_createTouch(v66, v67, v68);
}

_BYTE *WebCore::jsDocumentPrototypeFunction_createTouch(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  WTF *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char **v18;
  BOOL v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  WTF *v24;
  int v25;
  WTF *v26;
  JSC::VM *v27;
  int v28;
  WTF *v29;
  JSC::VM *v30;
  int v31;
  WTF *v32;
  JSC::VM *v33;
  int v34;
  WTF *v35;
  JSC::VM *v36;
  int v37;
  uint64_t v38;
  WTF::StringImpl *v39;
  WTF *v40;
  WTF *v41;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unsigned int v47;
  unint64_t v48;
  int v49;
  int v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  unsigned int *v58;
  unsigned int v59;
  unsigned int v60;
  unint64_t v61;
  int v62;
  unint64_t v63;
  int v64;
  unint64_t v65;
  int v66;
  unint64_t v67;
  int v68;
  char **v69;
  JSValue v73;
  JSC::VM *v74;
  uint64_t v75;
  int v76;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v78;
  uint64_t v79;
  int v80;
  int v81;
  JSC::VM *v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  JSC::VM *v88;
  int v89;
  int v90;
  uint64_t v91;
  unint64_t v92;
  int v93;
  unint64_t v94;
  int v95;
  unint64_t v96;
  int v97;
  int v98;
  unint64_t v99;
  JSC::JSGlobalObject *v100;
  int v101;
  unint64_t v102;
  int v103;
  int v104;
  int v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  JSC::VM *v119;
  int v120;
  JSC::VM *v121;
  WTF *v122;
  WTF *v123[2];

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v121 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v10 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v121, "Document", "createTouch");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 6)
  {
    v73.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v73);
  }
  v12 = *((_QWORD *)a2 + 6);
  if ((v12 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v13 = 0;
  }
  else
  {
    v123[0] = v9;
    if ((v12 & 0xFFFE000000000002) != 0
      || *(unsigned __int8 *)(v12 + 5) < 0x17u
      || &WebCore::JSWindowProxy::s_info != (char **)(16
                                                    * *(unsigned int *)(16 * (*(_DWORD *)v12 & 0xFFFFFFFE) + 0x4C))
      || (v20 = *(_QWORD *)(*(_QWORD *)(v12 + 16) + 3408),
          !(*(uint64_t (**)(uint64_t))(*(_QWORD *)v20 + 104))(v20))
      || (v13 = *(WTF **)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v20 + 104))(v20) + 112)) == 0)
    {
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v123, 0, "view", 5, "Document", 9, a8, "createTouch", 12, "WindowProxy", 12);
      return 0;
    }
    v9 = (JSC::VM *)*((_QWORD *)this + 7);
  }
  v14 = *((_QWORD *)a2 + 7);
  if ((v14 & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    v123[0] = v9;
    if ((v14 & 0xFFFE000000000002) != 0)
      goto LABEL_13;
    v17 = *(unsigned int *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C);
    v18 = (char **)(16 * v17);
    if ((char **)(16 * v17) == &WebCore::JSWindowProxy::s_info)
    {
      v21 = (uint64_t *)(*(_QWORD *)(v14 + 16) + 3408);
      goto LABEL_33;
    }
    if ((_DWORD)v17)
      v19 = v18 == &WebCore::JSDOMWindow::s_info;
    else
      v19 = 1;
    if (v19)
    {
      if (!(_DWORD)v17)
        goto LABEL_13;
    }
    else
    {
      v22 = 16 * v17;
      do
        v22 = *(_QWORD *)(v22 + 16);
      while ((char **)v22 != &WebCore::JSDOMWindow::s_info && v22 != 0);
      if (!v22)
      {
        if (v18 == &WebCore::JSWorkerGlobalScope::s_info)
          goto LABEL_135;
        v69 = v18;
        do
          v69 = (char **)v69[2];
        while (v69 != &WebCore::JSWorkerGlobalScope::s_info && v69 != 0);
        if (v69)
        {
LABEL_135:
          v15 = *(_QWORD *)(v14 + 3400) + 320;
          goto LABEL_34;
        }
        if (v18 != &WebCore::JSEventTarget::s_info)
        {
          do
            v18 = (char **)v18[2];
          while (v18 != &WebCore::JSEventTarget::s_info && v18 != 0);
          if (!v18)
            goto LABEL_13;
        }
        v21 = (uint64_t *)(v14 + 24);
LABEL_33:
        v15 = *v21;
        if (*v21)
          goto LABEL_34;
LABEL_13:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v123, 1, "target", 7, "Document", 9, a8, "createTouch", 12, "EventTarget", 12);
        return 0;
      }
    }
    v21 = (uint64_t *)(v14 + 3408);
    goto LABEL_33;
  }
  v15 = 0;
LABEL_34:
  v24 = (WTF *)*((_QWORD *)a2 + 8);
  v123[0] = v24;
  if ((unint64_t)v24 < 0xFFFE000000000000)
  {
    v43 = (unint64_t)v24 - 0x2000000000000;
    if ((unint64_t)v24 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      v91 = v15;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, this);
      v15 = v91;
      v43 = v92;
    }
    v44 = (v43 >> 52) & 0x7FF;
    if ((v44 - 1023) <= 0x53)
    {
      v61 = v43 >> (51 - (v43 >> 52));
      if (v44 > 0x433)
        LODWORD(v61) = v43 << ((v43 >> 52) - 51);
      if (v44 >= 0x41F)
        v62 = v61;
      else
        v62 = (((1 << ((v43 >> 52) + 1)) - 1) & v61) + (1 << ((v43 >> 52) + 1));
      if ((v43 & 0x8000000000000000) == 0)
        v25 = v62;
      else
        v25 = -v62;
    }
    else
    {
      v25 = 0;
    }
  }
  else
  {
    v25 = (int)v24;
  }
  if (*((_DWORD *)v9 + 20))
  {
    v74 = v9;
    v75 = v15;
    v76 = v25;
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v74);
    v25 = v76;
    v15 = v75;
    if (hasExceptionsAfterHandlingTraps)
      return 0;
  }
  v26 = (WTF *)*((_QWORD *)a2 + 9);
  v123[0] = v26;
  v27 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((unint64_t)v26 < 0xFFFE000000000000)
  {
    v45 = (unint64_t)v26 - 0x2000000000000;
    if ((unint64_t)v26 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      v110 = v15;
      v93 = v25;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, this);
      v25 = v93;
      v15 = v110;
      v45 = v94;
    }
    v46 = (v45 >> 52) & 0x7FF;
    v47 = v46 - 1023;
    v48 = v45 >> (51 - (v45 >> 52));
    if (v46 > 0x433)
      LODWORD(v48) = v45 << ((v45 >> 52) - 51);
    if (v46 >= 0x41F)
      v49 = v48;
    else
      v49 = (((1 << ((v45 >> 52) + 1)) - 1) & v48) + (1 << ((v45 >> 52) + 1));
    if ((v45 & 0x8000000000000000) == 0)
      v50 = v49;
    else
      v50 = -v49;
    if (v47 <= 0x53)
      v28 = v50;
    else
      v28 = 0;
  }
  else
  {
    v28 = (int)v26;
  }
  if (!*((_DWORD *)v27 + 20))
    goto LABEL_40;
  v78 = v27;
  v79 = v15;
  v80 = v25;
  v114 = v28;
  v81 = JSC::VM::hasExceptionsAfterHandlingTraps(v78);
  v28 = v114;
  v25 = v80;
  v15 = v79;
  if (v81)
    return 0;
LABEL_40:
  v29 = (WTF *)*((_QWORD *)a2 + 10);
  v123[0] = v29;
  v30 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((unint64_t)v29 < 0xFFFE000000000000)
  {
    v51 = (unint64_t)v29 - 0x2000000000000;
    if ((unint64_t)v29 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      v111 = v15;
      v95 = v25;
      v118 = v28;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, this);
      v28 = v118;
      v25 = v95;
      v15 = v111;
      v51 = v96;
    }
    v52 = (v51 >> 52) & 0x7FF;
    if ((v52 - 1023) <= 0x53)
    {
      v63 = v51 >> (51 - (v51 >> 52));
      if (v52 > 0x433)
        LODWORD(v63) = v51 << ((v51 >> 52) - 51);
      if (v52 >= 0x41F)
        v64 = v63;
      else
        v64 = (((1 << ((v51 >> 52) + 1)) - 1) & v63) + (1 << ((v51 >> 52) + 1));
      if ((v51 & 0x8000000000000000) == 0)
        v31 = v64;
      else
        v31 = -v64;
    }
    else
    {
      v31 = 0;
    }
  }
  else
  {
    v31 = (int)v29;
  }
  if (!*((_DWORD *)v30 + 20))
    goto LABEL_43;
  v82 = v30;
  v107 = v15;
  v83 = v25;
  v115 = v28;
  v84 = v31;
  v85 = JSC::VM::hasExceptionsAfterHandlingTraps(v82);
  v31 = v84;
  v28 = v115;
  v25 = v83;
  v15 = v107;
  if (v85)
    return 0;
LABEL_43:
  v32 = (WTF *)*((_QWORD *)a2 + 11);
  v123[0] = v32;
  v33 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((unint64_t)v32 < 0xFFFE000000000000)
  {
    v53 = (unint64_t)v32 - 0x2000000000000;
    if ((unint64_t)v32 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      v112 = v15;
      v119 = (JSC::VM *)*((_QWORD *)this + 7);
      v97 = v25;
      v98 = v28;
      v105 = v31;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, this);
      v31 = v105;
      v28 = v98;
      v25 = v97;
      v15 = v112;
      v33 = v119;
      v53 = v99;
    }
    v54 = (v53 >> 52) & 0x7FF;
    if ((v54 - 1023) <= 0x53)
    {
      v65 = v53 >> (51 - (v53 >> 52));
      if (v54 > 0x433)
        LODWORD(v65) = v53 << ((v53 >> 52) - 51);
      if (v54 >= 0x41F)
        v66 = v65;
      else
        v66 = (((1 << ((v53 >> 52) + 1)) - 1) & v65) + (1 << ((v53 >> 52) + 1));
      if ((v53 & 0x8000000000000000) == 0)
        v34 = v66;
      else
        v34 = -v66;
    }
    else
    {
      v34 = 0;
    }
  }
  else
  {
    v34 = (int)v32;
  }
  if (!*((_DWORD *)v33 + 20))
    goto LABEL_46;
  v108 = v15;
  v86 = v25;
  v116 = v28;
  v103 = v31;
  v87 = JSC::VM::hasExceptionsAfterHandlingTraps(v33);
  v31 = v103;
  v28 = v116;
  v25 = v86;
  v15 = v108;
  if (v87)
    return 0;
LABEL_46:
  v35 = (WTF *)*((_QWORD *)a2 + 12);
  v123[0] = v35;
  v36 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((unint64_t)v35 < 0xFFFE000000000000)
  {
    v55 = (unint64_t)v35 - 0x2000000000000;
    if ((unint64_t)v35 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      v113 = v15;
      v100 = this;
      v101 = v25;
      v120 = v28;
      v106 = v31;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v123, v100);
      v31 = v106;
      v28 = v120;
      v25 = v101;
      v15 = v113;
      v55 = v102;
    }
    v56 = (v55 >> 52) & 0x7FF;
    if ((v56 - 1023) <= 0x53)
    {
      v67 = v55 >> (51 - (v55 >> 52));
      if (v56 > 0x433)
        LODWORD(v67) = v55 << ((v55 >> 52) - 51);
      if (v56 >= 0x41F)
        v68 = v67;
      else
        v68 = (((1 << ((v55 >> 52) + 1)) - 1) & v67) + (1 << ((v55 >> 52) + 1));
      if ((v55 & 0x8000000000000000) == 0)
        v37 = v68;
      else
        v37 = -v68;
    }
    else
    {
      v37 = 0;
    }
  }
  else
  {
    v37 = (int)v35;
  }
  if (!*((_DWORD *)v36 + 20))
    goto LABEL_49;
  v88 = v36;
  v109 = v15;
  v89 = v25;
  v117 = v28;
  v104 = v31;
  v90 = JSC::VM::hasExceptionsAfterHandlingTraps(v88);
  v31 = v104;
  v28 = v117;
  v25 = v89;
  v15 = v109;
  if (v90)
    return 0;
LABEL_49:
  v38 = *(_QWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
  if (v13)
    ++*(_DWORD *)v13;
  v122 = v13;
  WebCore::Touch::create((uint64_t *)&v122, v15, v25, v28, v31, v34, v37, (uint64_t *)v123, 0.0, 0.0, 0.0, 0.0);
  v16 = WebCore::createWrapper<WebCore::Touch,WebCore::Touch>(v38, v123);
  v40 = v123[0];
  v123[0] = 0;
  if (v40)
    WTF::RefCounted<WebCore::Touch>::deref(v40, v39);
  v41 = v122;
  v122 = 0;
  if (v41)
  {
    if (*(_DWORD *)v41 == 1)
    {
      v57 = (uint64_t *)*((_QWORD *)v41 + 2);
      *((_QWORD *)v41 + 2) = 0;
      if (v57)
      {
        if (*v57)
          WTF::HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>>::deallocateTable(*v57, v39);
        WTF::fastFree((WTF *)v57, v39);
      }
      v58 = (unsigned int *)*((_QWORD *)v41 + 1);
      *((_QWORD *)v41 + 1) = 0;
      if (v58)
      {
        do
        {
          v59 = __ldaxr(v58);
          v60 = v59 - 1;
        }
        while (__stlxr(v60, v58));
        if (!v60)
        {
          atomic_store(1u, v58);
          WTF::fastFree((WTF *)v58, v39);
        }
      }
      WTF::fastFree(v41, v39);
    }
    else
    {
      --*(_DWORD *)v41;
    }
  }
  return (_BYTE *)v16;
}

_BYTE *WebCore::jsDocumentPrototypeFunction_createTouchList(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  unint64_t v8;
  WTF *v9;
  WTF *v10;
  uint64_t v12;
  WTF **v13;
  uint64_t v14;
  WTF *v15;
  WTF *v16;
  JSC::VM *v17;
  WTF *v18;
  WTF *v19;

  v3 = (JSC::VM *)*((_QWORD *)this + 7);
  v17 = v3;
  v4 = *((_QWORD *)a2 + 5);
  if ((v4 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v4 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v17, "Document", "createTouchList");
  WebCore::convertVariadicArguments<WebCore::IDLInterface<WebCore::Touch>>((uint64_t)this, (uint64_t)a2, 0, &v19);
  if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
  {
    v8 = 0;
  }
  else
  {
    v5 = *(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
    v6 = WTF::fastMalloc((WTF *)0x18);
    v18 = (WTF *)WebCore::TouchList::TouchList(v6, (unsigned int **)&v19);
    v8 = WebCore::createWrapper<WebCore::TouchList,WebCore::TouchList>(v5, &v18);
    v9 = v18;
    v18 = 0;
    if (v9)
    {
      if (*(_DWORD *)v9 == 1)
      {
        v12 = *((unsigned int *)v9 + 5);
        if ((_DWORD)v12)
        {
          v13 = (WTF **)*((_QWORD *)v9 + 1);
          v14 = 8 * v12;
          do
          {
            v15 = *v13;
            *v13 = 0;
            if (v15)
              WTF::RefCounted<WebCore::Touch>::deref(v15, v7);
            ++v13;
            v14 -= 8;
          }
          while (v14);
        }
        v16 = (WTF *)*((_QWORD *)v9 + 1);
        if (v16)
        {
          *((_QWORD *)v9 + 1) = 0;
          *((_DWORD *)v9 + 4) = 0;
          WTF::fastFree(v16, v7);
        }
        WTF::fastFree(v9, v7);
      }
      else
      {
        --*(_DWORD *)v9;
      }
    }
  }
  v10 = v19;
  v19 = 0;
  if (v10)
    WTF::fastFree(v10, v7);
  return (_BYTE *)v8;
}

unint64_t WebCore::jsDocumentPrototypeFunction_exitPictureInPicture(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v20;
  WebCore::DOMGuardedObject *v21;
  WebCore::DOMGuardedObject *v22;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194A907D4);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v22 = v15;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v17 + 5) != 249)
  {
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Document", "exitPictureInPicture", v16);
    v22 = 0;
  }
  else
  {
    WebCore::DocumentPictureInPicture::exitPictureInPicture(*(_QWORD *)(v17 + 24), (uint64_t *)&v22);
    v14 = v22;
    v22 = 0;
    if (!v14)
      goto LABEL_19;
  }
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_19:
  v18 = *(_QWORD *)(v10 + 16);
  if (v18)
  {
    if (*(_QWORD *)(v10 + 24) != v18)
    {
      v20 = *(objc_class **)(v18 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v22);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v22, v20, 0);
      v21 = v22;
      v22 = 0;
      if (v21)
      {
        if (*((_DWORD *)v21 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v21 + 16))(v21);
        else
          --*((_DWORD *)v21 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsDocumentPrototypeFunction_exitFullscreen(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  WebCore::Document *v18;
  WebCore::DOMGuardedObject *v19;
  uint64_t v20;
  void (*v22)(void);
  objc_class *v23;
  WebCore::DOMGuardedObject *v24;
  WebCore::DOMGuardedObject *v25;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194A909E4);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v17 + 5) != 249)
  {
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Document", "exitFullscreen", v16);
    if (*((_DWORD *)v14 + 4) != 1)
    {
      --*((_DWORD *)v14 + 4);
      goto LABEL_19;
    }
    v22 = *(void (**)(void))(*(_QWORD *)v14 + 16);
    goto LABEL_23;
  }
  v18 = *(WebCore::Document **)(v17 + 24);
  v25 = v14;
  WebCore::DocumentFullscreen::exitFullscreen(v18, (uint64_t *)&v25);
  v19 = v25;
  v25 = 0;
  if (v19)
  {
    if (*((_DWORD *)v19 + 4) != 1)
    {
      --*((_DWORD *)v19 + 4);
      goto LABEL_19;
    }
    v22 = *(void (**)(void))(*(_QWORD *)v19 + 16);
LABEL_23:
    v22();
  }
LABEL_19:
  v20 = *(_QWORD *)(v10 + 16);
  if (v20)
  {
    if (*(_QWORD *)(v10 + 24) != v20)
    {
      v23 = *(objc_class **)(v20 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v25);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v25, v23, 0);
      v24 = v25;
      v25 = 0;
      if (v24)
      {
        if (*((_DWORD *)v24 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v24 + 16))(v24);
        else
          --*((_DWORD *)v24 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

uint64_t WebCore::jsDocumentPrototypeFunction_webkitExitFullscreen(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v5;

  v3 = *((_QWORD *)a2 + 5);
  v5 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v3 + 5) != 249)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v5, "Document", "webkitExitFullscreen");
  WebCore::DocumentFullscreen::webkitExitFullscreen(*(WebCore::DocumentFullscreen **)(v3 + 24), a2);
  return 10;
}

uint64_t WebCore::jsDocumentPrototypeFunction_webkitCancelFullScreen(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  WebCore::FullscreenManager *v5;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  WebCore::FullscreenManager *v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *((_QWORD *)a2 + 5);
  v12 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v3 + 5) != 249)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v12, "Document", "webkitCancelFullScreen");
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(WebCore::FullscreenManager **)(v4 + 1992);
  if (!v5)
  {
    v7 = WTF::fastMalloc((WTF *)0x90);
    *(_QWORD *)v7 = 0;
    *(_DWORD *)(v7 + 8) = 0;
    v8 = (unsigned int *)WTF::WeakPtr<WebCore::LocalDOMWindow,WebCore::WeakPtrImplWithEventTargetData,WTF::RawPtrTraits<WebCore::WeakPtrImplWithEventTargetData>>::implForObject<WebCore::LocalDOMWindow>(v4);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 + 1, v8));
    *(_QWORD *)(v7 + 24) = 0;
    *(_QWORD *)(v7 + 32) = 0;
    *(_QWORD *)(v7 + 16) = v8;
    *(_BYTE *)(v7 + 40) = 0;
    *(_OWORD *)(v7 + 48) = 0u;
    *(_OWORD *)(v7 + 64) = 0u;
    *(_OWORD *)(v7 + 80) = 0u;
    *(_OWORD *)(v7 + 96) = 0u;
    *(_OWORD *)(v7 + 112) = 0u;
    *(_DWORD *)(v7 + 127) = 0;
    *(_QWORD *)(v7 + 136) = WTF::cryptographicallyRandomNumber<unsigned long long>();
    v10 = *(WebCore::FullscreenManager **)(v4 + 1992);
    *(_QWORD *)(v4 + 1992) = v7;
    if (v10)
    {
      WebCore::FullscreenManager::~FullscreenManager(v10, a2);
      if (*(_DWORD *)(v11 + 8))
      {
        *(_OWORD *)(v11 + 112) = 0u;
        *(_OWORD *)(v11 + 128) = 0u;
        *(_OWORD *)(v11 + 80) = 0u;
        *(_OWORD *)(v11 + 96) = 0u;
        *(_OWORD *)(v11 + 48) = 0u;
        *(_OWORD *)(v11 + 64) = 0u;
        *(_OWORD *)(v11 + 16) = 0u;
        *(_OWORD *)(v11 + 32) = 0u;
        *(_OWORD *)v11 = 0u;
      }
      else
      {
        WTF::fastFree((WTF *)v11, a2);
      }
    }
    v5 = *(WebCore::FullscreenManager **)(v4 + 1992);
  }
  WebCore::FullscreenManager::cancelFullscreen(v5, a2);
  return 10;
}

JSC::CallFrame *WebCore::jsDocumentPrototypeFunction_open(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSDocument *a4)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;

  v7 = *((_QWORD *)this + 7);
  v4 = *((_QWORD *)a2 + 5);
  if ((v4 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v4 + 5) != 249)
    return (JSC::CallFrame *)WebCore::throwThisTypeError((int)this, (int)&v7, "Document", "open");
  v5 = *((int *)a2 + 8) - 1;
  if (v5 >= 3)
    v5 = 3;
  if (v5 > 2)
    return (JSC::CallFrame *)WebCore::jsDocumentPrototypeFunction_open2Body(this, a2, *(JSC::CallFrame **)(v4 + 24), a4);
  else
    return WebCore::jsDocumentPrototypeFunction_open1Body(this, a2, (JSC::CallFrame *)v4, a4);
}

_BYTE *WebCore::jsDocumentPrototypeFunction_close(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  WTF *v7;
  WTF::StringImpl *v10;
  WTF *v11;
  uint64_t v12;
  uint64_t v13;
  JSC::VM *v14;
  WTF *v15;
  uint64_t v16;
  _BYTE v17[40];
  uint64_t v18;
  JSC::JSGlobalObject *v19;
  JSC::VM *v20;
  unsigned __int8 v21[8];
  WTF::StringImpl *v22;

  v3 = *((_QWORD *)a2 + 5);
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v14 = v4;
  if ((v3 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v3 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v14, "Document", "close");
  v5 = *(_QWORD *)(v3 + 24);
  v20 = v4;
  v15 = (WTF *)v17;
  v16 = 4;
  v17[32] = 0;
  v18 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v19 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v15;
  if ((*(_BYTE *)(v5 + 3358) & 1) == 0 || *(_DWORD *)(v5 + 3336))
  {
    v21[0] = 8;
    v22 = 0;
    if (!*((_QWORD *)v4 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v20, v21);
      v10 = v22;
      v22 = 0;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, a2);
        else
          *(_DWORD *)v10 -= 2;
      }
    }
    v6 = 0;
  }
  else
  {
    WebCore::Document::close((WebCore::Document *)v5);
    v6 = 10;
  }
  if (HIDWORD(v16))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v15, v19);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v18;
    if (HIDWORD(v16))
    {
      v11 = v15;
      v12 = 8 * HIDWORD(v16);
      do
      {
        v13 = *(_QWORD *)v11;
        *(_QWORD *)v11 = 0;
        if (v13)
        {
          if (*(_DWORD *)(v13 + 24) == 2)
          {
            if ((*(_WORD *)(v13 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v13, a2);
          }
          else
          {
            *(_DWORD *)(v13 + 24) -= 2;
          }
        }
        v11 = (WTF *)((char *)v11 + 8);
        v12 -= 8;
      }
      while (v12);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v18;
  }
  v7 = v15;
  if (v17 != (_BYTE *)v15 && v15 != 0)
  {
    v15 = 0;
    LODWORD(v16) = 0;
    WTF::fastFree(v7, a2);
  }
  return (_BYTE *)v6;
}

_BYTE *WebCore::jsDocumentPrototypeFunction_write(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  uint64_t v9;
  WebCore::Document *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  WTF *v17;
  WTF *v20;
  uint64_t v21;
  uint64_t v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  WTF *v25;
  WTF *v26;
  uint64_t v27;
  _BYTE v28[40];
  uint64_t v29;
  JSC::JSGlobalObject *v30;
  JSC::VM *v31;
  unsigned __int8 v32[8];
  WTF::StringImpl *v33;
  unsigned __int8 v34[8];
  WTF::StringImpl *v35;
  char v36;

  v4 = *((_QWORD *)this + 7);
  v24 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "Document", "write");
  v6 = *(_QWORD *)(v5 + 24);
  v31 = (JSC::VM *)v4;
  v26 = (WTF *)v28;
  v27 = 4;
  v28[32] = 0;
  v29 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v30 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v26;
  WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::TrustedHTML>,WebCore::IDLDOMString>>((uint64_t)&v25, (JSC::VM **)this, (uint64_t)a2);
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    goto LABEL_41;
  v8 = *(_QWORD *)(WebCore::firstDOMWindow((JSC::VM **)this, v7) + 72);
  if (v8 && (v9 = *(_QWORD *)(v8 + 8)) != 0)
  {
    if (*(_BYTE *)(v9 + 178))
    {
      __break(0xC471u);
      JUMPOUT(0x194A910A8);
    }
    v10 = (WebCore::Document *)(v9 - 288);
  }
  else
  {
    v10 = 0;
  }
  WebCore::Document::write(v6, v10, (unsigned int **)&v25, (uint64_t)"", 1uLL, (uint64_t)v34);
  if (v36)
  {
    v32[0] = v34[0];
    v23 = v35;
    v33 = v35;
    if (!*(_QWORD *)(v4 + 16))
    {
      WebCore::propagateExceptionSlowPath(this, &v31, v32);
      v23 = v33;
    }
    v33 = 0;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v7);
      else
        *(_DWORD *)v23 -= 2;
    }
LABEL_41:
    v11 = 0;
    goto LABEL_10;
  }
  v11 = 10;
LABEL_10:
  v12 = v25;
  if (v25)
  {
    v14 = (char *)v25 + 8;
    v13 = *(unsigned int *)v25;
    if ((_DWORD)v13)
    {
      v15 = 16 * v13;
      do
      {
        v16 = *((unsigned int *)v14 + 2);
        if ((_DWORD)v16 != -1)
          ((void (*)(unsigned __int8 *, char *))off_1E325CF80[v16])(v34, v14);
        *((_DWORD *)v14 + 2) = -1;
        v14 += 16;
        v15 -= 16;
      }
      while (v15);
    }
    WTF::fastFree(v12, v7);
  }
  if (HIDWORD(v27))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v26, v30);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v29;
    if (HIDWORD(v27))
    {
      v20 = v26;
      v21 = 8 * HIDWORD(v27);
      do
      {
        v22 = *(_QWORD *)v20;
        *(_QWORD *)v20 = 0;
        if (v22)
        {
          if (*(_DWORD *)(v22 + 24) == 2)
          {
            if ((*(_WORD *)(v22 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v22, v7);
          }
          else
          {
            *(_DWORD *)(v22 + 24) -= 2;
          }
        }
        v20 = (WTF *)((char *)v20 + 8);
        v21 -= 8;
      }
      while (v21);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v29;
  }
  v17 = v26;
  if (v28 != (_BYTE *)v26 && v26 != 0)
  {
    v26 = 0;
    LODWORD(v27) = 0;
    WTF::fastFree(v17, v7);
  }
  return (_BYTE *)v11;
}

_BYTE *WebCore::jsDocumentPrototypeFunction_writeln(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  uint64_t v9;
  WebCore::Document *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  WTF *v17;
  WTF *v20;
  uint64_t v21;
  uint64_t v22;
  WTF::StringImpl *v23;
  JSValue v24;
  uint64_t v25;
  WTF *v26;
  WTF *v27;
  uint64_t v28;
  _BYTE v29[40];
  uint64_t v30;
  JSC::JSGlobalObject *v31;
  char v32;
  WTF::StringImpl *v33;
  _BYTE v34[8];
  WTF::StringImpl *v35;
  char v36;

  v4 = *((_QWORD *)this + 7);
  v25 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "Document", "writeln");
  v6 = *(_QWORD *)(v5 + 24);
  v27 = (WTF *)v29;
  v28 = 4;
  v29[32] = 0;
  v30 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v31 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v27;
  WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::TrustedHTML>,WebCore::IDLDOMString>>((uint64_t)&v26, (JSC::VM **)this, (uint64_t)a2);
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    goto LABEL_43;
  v8 = *(_QWORD *)(WebCore::firstDOMWindow((JSC::VM **)this, v7) + 72);
  if (v8 && (v9 = *(_QWORD *)(v8 + 8)) != 0)
  {
    if (*(_BYTE *)(v9 + 178))
    {
      __break(0xC471u);
      JUMPOUT(0x194A91360);
    }
    v10 = (WebCore::Document *)(v9 - 288);
  }
  else
  {
    v10 = 0;
  }
  WebCore::Document::write(v6, v10, (unsigned int **)&v26, (uint64_t)"\n", 2uLL, (uint64_t)v34);
  if (v36)
  {
    v7 = (JSC::JSGlobalObject *)v34[0];
    v32 = v34[0];
    v23 = v35;
    v33 = v35;
    if (!*(_QWORD *)(v4 + 16))
    {
      v24.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v34[0], (JSC::JSGlobalObject *)&v33);
      JSC::VM::throwException((JSC::VM *)v4, this, v24);
      v23 = v33;
    }
    v33 = 0;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v7);
      else
        *(_DWORD *)v23 -= 2;
    }
LABEL_43:
    v11 = 0;
    goto LABEL_11;
  }
  v11 = 10;
LABEL_11:
  v12 = v26;
  if (v26)
  {
    v14 = (char *)v26 + 8;
    v13 = *(unsigned int *)v26;
    if ((_DWORD)v13)
    {
      v15 = 16 * v13;
      do
      {
        v16 = *((unsigned int *)v14 + 2);
        if ((_DWORD)v16 != -1)
          ((void (*)(_BYTE *, char *))off_1E325CF80[v16])(v34, v14);
        *((_DWORD *)v14 + 2) = -1;
        v14 += 16;
        v15 -= 16;
      }
      while (v15);
    }
    WTF::fastFree(v12, v7);
  }
  if (HIDWORD(v28))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v27, v31);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
    if (HIDWORD(v28))
    {
      v20 = v27;
      v21 = 8 * HIDWORD(v28);
      do
      {
        v22 = *(_QWORD *)v20;
        *(_QWORD *)v20 = 0;
        if (v22)
        {
          if (*(_DWORD *)(v22 + 24) == 2)
          {
            if ((*(_WORD *)(v22 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v22, v7);
          }
          else
          {
            *(_DWORD *)(v22 + 24) -= 2;
          }
        }
        v20 = (WTF *)((char *)v20 + 8);
        v21 -= 8;
      }
      while (v21);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v30;
  }
  v17 = v27;
  if (v29 != (_BYTE *)v27 && v27 != 0)
  {
    v27 = 0;
    LODWORD(v28) = 0;
    WTF::fastFree(v17, v7);
  }
  return (_BYTE *)v11;
}

uint64_t WebCore::jsDocumentPrototypeFunction_hasFocus(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v5;

  v3 = *((_QWORD *)a2 + 5);
  v5 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v3 + 5) != 249)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v5, "Document", "hasFocus");
  if (WebCore::Document::hasFocus(*(WebCore::Document **)(v3 + 24)))
    return 7;
  return 6;
}

_BYTE *WebCore::jsDocumentPrototypeFunction_execCommand(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  WebCore::Document *v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  unint64_t v13;
  JSC::VM *v14;
  double v15;
  int v16;
  uint64_t v17;
  int *v18;
  int v19;
  _BOOL4 v20;
  WTF::StringImpl *v21;
  int v22;
  uint64_t v23;
  _BOOL4 v24;
  uint64_t v25;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  int v29;
  uint64_t v30;
  WTF::StringImpl *v31;
  int v32;
  WTF::StringImpl *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  WTF::StringImpl *v37;
  int v38;
  WTF *v39;
  JSValue v42;
  WTF *v43;
  uint64_t v44;
  uint64_t v45;
  WTF::StringImpl *v46;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v48;
  JSValue v49;
  WTF::StringImpl *v50;
  int v51;
  BOOL i;
  uint64_t v53;
  WTF::StringImpl *v54;
  int v55;
  WTF::StringImpl *v56;
  WTF::StringImpl *v57;
  WTF::StringImpl *v58;
  int v59;
  WTF::StringImpl *v60;
  int v61;
  WTF *v62;
  uint64_t v63;
  _BYTE v64[40];
  uint64_t v65;
  JSC::JSGlobalObject *v66;
  uint64_t v67;
  WTF::StringImpl *v68;
  uint64_t v69;
  WTF::StringImpl *v70;
  unsigned int v71;
  int v72;
  uint64_t v73;

  v73 = *MEMORY[0x1E0C80C00];
  v4 = 0xFFFE000000000002;
  v5 = *((_QWORD *)this + 7);
  v53 = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v6 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v53, "Document", "execCommand");
  v7 = (uint64_t)a2;
  v8 = *(WebCore::Document **)(v6 + 24);
  v62 = (WTF *)v64;
  v63 = 4;
  v64[32] = 0;
  v65 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v66 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v62;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v42.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    v36 = JSC::VM::throwException((JSC::VM *)v5, this, v42);
    goto LABEL_67;
  }
  v9 = *((_QWORD *)a2 + 6);
  v69 = v9;
  if ((v9 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v9 + 5) == 2)
  {
    v10 = *(WTF::StringImpl **)(v9 + 8);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v9, this);
      if (!v10)
        goto LABEL_9;
    }
    else if (!v10)
    {
LABEL_9:
      v57 = v10;
      goto LABEL_10;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_9;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v69, this);
LABEL_10:
  if (*(_DWORD *)(v5 + 80))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5);
    v11 = v57;
    if (hasExceptionsAfterHandlingTraps)
    {
      v61 = 1;
      v57 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v46);
        else
          *(_DWORD *)v11 -= 2;
      }
      v36 = 0;
      v38 = 1;
      goto LABEL_66;
    }
  }
  else
  {
    v11 = v57;
  }
  v60 = v11;
  v61 = 0;
  v12 = *(int *)(v7 + 32);
  if ((unint64_t)(v12 - 3) >= 0xFFFFFFFFFFFFFFFELL)
  {
    v14 = (JSC::VM *)*((_QWORD *)this + 7);
    v13 = 10;
    goto LABEL_23;
  }
  v13 = *(_QWORD *)(v7 + 56);
  v14 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v13 >= 0xFFFE000000000000)
    goto LABEL_121;
  *(_QWORD *)&v15 = v13 - 0x2000000000000;
  if (v13 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
  {
    v20 = v15 > 0.0 || v15 < 0.0;
    goto LABEL_24;
  }
  if ((v13 & 0xFFFE000000000002) != 0)
  {
LABEL_23:
    v20 = v13 == 7;
    goto LABEL_24;
  }
  v16 = *(unsigned __int8 *)(v13 + 5);
  if (v16 == 3)
  {
    v19 = *(_DWORD *)(v13 + 8);
  }
  else
  {
    if (v16 != 2)
    {
      if ((*(_BYTE *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0xA) & 1) == 0)
      {
        v20 = 1;
        goto LABEL_24;
      }
      i = *(_QWORD *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
      goto LABEL_129;
    }
    v17 = *(_QWORD *)(v13 + 8);
    if ((v17 & 1) != 0)
      v18 = (int *)(v13 + 16);
    else
      v18 = (int *)(v17 + 4);
    v19 = *v18;
  }
  for (i = v19 == 0; ; i = (_DWORD)v13 == 0)
  {
LABEL_129:
    v20 = !i;
LABEL_24:
    if (*((_DWORD *)v14 + 20))
    {
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v14) & 1) != 0)
      {
        v36 = 0;
        goto LABEL_65;
      }
      v12 = *(int *)(v7 + 32);
    }
    if ((unint64_t)(v12 - 4) >= 0xFFFFFFFFFFFFFFFDLL || (v7 = *(_QWORD *)(v7 + 64), v7 == 10))
    {
      v21 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
      v22 = 0;
      if (*MEMORY[0x1E0CBF738])
        *(_DWORD *)v21 += 2;
      v7 = 10;
      goto LABEL_30;
    }
    if ((v7 & v4) != 0)
    {
      v67 = v7;
      v4 = *((_QWORD *)this + 7);
      goto LABEL_111;
    }
    v23 = *(unsigned int *)(16 * (*(_DWORD *)v7 & 0xFFFFFFFE) + 0x4C);
    v24 = *(_DWORD *)(16 * (*(_DWORD *)v7 & 0xFFFFFFFE) + 0x4C) != 0;
    if ((_DWORD)v23)
    {
      v25 = 16 * v23;
      if ((char **)v25 != &WebCore::JSTrustedHTML::s_info)
      {
        do
        {
          v25 = *(_QWORD *)(v25 + 16);
          v24 = v25 != 0;
        }
        while ((char **)v25 != &WebCore::JSTrustedHTML::s_info && v25 != 0);
      }
    }
    if (!v24 || (v21 = *(WTF::StringImpl **)(v7 + 24)) == 0)
    {
      v67 = v7;
      v4 = *((_QWORD *)this + 7);
      if (*(_BYTE *)(v7 + 5) == 2)
      {
        v27 = *(WTF::StringImpl **)(v7 + 8);
        if ((v27 & 1) != 0)
        {
          v27 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v7, this);
          if (!v27)
            goto LABEL_44;
        }
        else if (!v27)
        {
LABEL_44:
          v54 = v27;
          goto LABEL_45;
        }
        *(_DWORD *)v27 += 2;
        goto LABEL_44;
      }
LABEL_111:
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v67, this);
LABEL_45:
      if (*(_DWORD *)(v4 + 80))
      {
        v51 = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
        v28 = v54;
        if (v51)
        {
          LODWORD(v58) = 1;
          v54 = 0;
          if (v28)
          {
            if (*(_DWORD *)v28 == 2)
              WTF::StringImpl::destroy(v28, v50);
            else
              *(_DWORD *)v28 -= 2;
          }
          v29 = 1;
          v30 = 1;
LABEL_48:
          v72 = v29;
          ((void (*)(uint64_t *, WTF::StringImpl **, JSC::CallFrame *))off_1E325A258[v30])(&v67, &v57, a3);
          v32 = v72;
          if (v72)
          {
            v36 = 0;
            goto LABEL_63;
          }
          goto LABEL_49;
        }
      }
      else
      {
        v28 = v54;
      }
      v29 = 0;
      v30 = 0;
      LODWORD(v58) = 0;
      v57 = 0;
      v70 = v28;
      v71 = 0;
      goto LABEL_48;
    }
    ++*((_DWORD *)v21 + 2);
    v22 = 1;
LABEL_30:
    v70 = v21;
    v71 = v22;
    v72 = 0;
LABEL_49:
    if (!v61)
    {
      v33 = v60;
      v60 = 0;
      v56 = v33;
      LOBYTE(v54) = 0;
      v55 = -1;
      v4 = v71;
      if (v71 != -1)
      {
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **, WTF::StringImpl **))off_1E3269510[v71])(&v57, &v54, &v70);
        v55 = v4;
      }
      WebCore::Document::execCommand(v8, (const WTF::String *)&v56, v20, (uint64_t)&v54, (uint64_t)&v57);
      v34 = v59;
      if (!v59)
      {
        if ((_BYTE)v57)
          v35 = 7;
        else
          v35 = 6;
LABEL_56:
        off_1E325DFB8[v34]((unsigned __int8 *)&v67, (char *)&v57);
        v36 = v35;
        goto LABEL_57;
      }
      if (v59 == 1)
        break;
    }
    v14 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_121:
    ;
  }
  v31 = (WTF::StringImpl *)v57;
  LOBYTE(v67) = (_BYTE)v57;
  v48 = v58;
  v58 = 0;
  v68 = v48;
  if (!*(_QWORD *)(v5 + 16))
  {
    v49.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v57, (JSC::JSGlobalObject *)&v68);
    JSC::VM::throwException((JSC::VM *)v5, this, v49);
    v48 = v68;
  }
  v68 = 0;
  if (v48)
  {
    if (*(_DWORD *)v48 == 2)
      WTF::StringImpl::destroy(v48, v31);
    else
      *(_DWORD *)v48 -= 2;
  }
  v35 = 0;
  v36 = 0;
  v34 = v59;
  if (v59 != -1)
    goto LABEL_56;
LABEL_57:
  v59 = -1;
  if (v55 != -1)
    ((void (*)(uint64_t *, WTF::StringImpl **))off_1E3269500[v55])(&v67, &v54);
  v37 = v56;
  v56 = 0;
  if (v37)
  {
    if (*(_DWORD *)v37 == 2)
      WTF::StringImpl::destroy(v37, v31);
    else
      *(_DWORD *)v37 -= 2;
  }
  v32 = v72;
LABEL_63:
  if (v32 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3269520[v32])(&v57, &v70);
LABEL_65:
  v38 = v61;
  if (v61 != -1)
LABEL_66:
    ((void (*)(uint64_t *, WTF::StringImpl **))off_1E325A258[v38])(&v69, &v60);
LABEL_67:
  if (HIDWORD(v63))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v62, v66);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v65;
    if (HIDWORD(v63))
    {
      v43 = v62;
      v44 = 8 * HIDWORD(v63);
      do
      {
        v45 = *(_QWORD *)v43;
        *(_QWORD *)v43 = 0;
        if (v45)
        {
          if (*(_DWORD *)(v45 + 24) == 2)
          {
            if ((*(_WORD *)(v45 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v45, v31);
          }
          else
          {
            *(_DWORD *)(v45 + 24) -= 2;
          }
        }
        v43 = (WTF *)((char *)v43 + 8);
        v44 -= 8;
      }
      while (v44);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v65;
  }
  v39 = v62;
  if (v64 != (_BYTE *)v62 && v62 != 0)
  {
    v62 = 0;
    LODWORD(v63) = 0;
    WTF::fastFree(v39, v31);
  }
  return (_BYTE *)v36;
}

_BYTE *WebCore::jsDocumentPrototypeFunction_queryCommandEnabled(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  WebCore::Document *v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  JSValue v18;
  WTF::StringImpl *v19;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v21;
  JSValue v22;
  WebCore *v23;
  JSC::JSGlobalObject *v24;
  JSC::CallFrame *v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  int v28[2];
  WTF::StringImpl *v29;
  int v30;
  uint64_t v31;
  int v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;

  v4 = *((_QWORD *)this + 7);
  v26 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "Document", "queryCommandEnabled");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException((JSC::VM *)v4, this, v18);
  }
  v6 = *(WebCore::Document **)(v5 + 24);
  v7 = *((_QWORD *)a2 + 6);
  *(_QWORD *)v28 = v7;
  if ((v7 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v7 + 5) == 2)
  {
    v8 = *(WTF::StringImpl **)(v7 + 8);
    if ((v8 & 1) != 0)
    {
      v8 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v7, this);
      if (!v8)
        goto LABEL_9;
    }
    else if (!v8)
    {
LABEL_9:
      v33 = v8;
      goto LABEL_10;
    }
    *(_DWORD *)v8 += 2;
    goto LABEL_9;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v28, this);
LABEL_10:
  if (*(_DWORD *)(v4 + 80))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
    v9 = v33;
    if (hasExceptionsAfterHandlingTraps)
    {
      v32 = 1;
      v33 = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 2)
          WTF::StringImpl::destroy(v9, v19);
        else
          *(_DWORD *)v9 -= 2;
      }
      v13 = 0;
      v15 = 1;
      goto LABEL_21;
    }
  }
  else
  {
    v9 = v33;
  }
  v32 = 0;
  v31 = 0;
  v27 = v9;
  WebCore::Document::queryCommandEnabled(v6, (const WTF::String *)&v27, (uint64_t)v28);
  v10 = v30;
  if (!v30)
  {
    if (LOBYTE(v28[0]))
      v11 = 7;
    else
      v11 = 6;
LABEL_16:
    off_1E325DFB8[v10]((unsigned __int8 *)&v33, (char *)v28);
    v13 = v11;
LABEL_17:
    v30 = -1;
    v14 = v27;
    v27 = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v12);
      else
        *(_DWORD *)v14 -= 2;
    }
    v15 = 0;
LABEL_21:
    ((void (*)(int *, uint64_t *))off_1E325A258[v15])(v28, &v31);
    return (_BYTE *)v13;
  }
  if (v30 == 1)
  {
    v12 = (WTF::StringImpl *)LOBYTE(v28[0]);
    LOBYTE(v33) = v28[0];
    v21 = v29;
    v29 = 0;
    v34 = v21;
    if (!*(_QWORD *)(v4 + 16))
    {
      v22.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v28[0]), (JSC::JSGlobalObject *)&v34);
      JSC::VM::throwException((JSC::VM *)v4, this, v22);
      v21 = v34;
    }
    v34 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v12);
      else
        *(_DWORD *)v21 -= 2;
    }
    v11 = 0;
    v13 = 0;
    v10 = v30;
    if (v30 == -1)
      goto LABEL_17;
    goto LABEL_16;
  }
  v23 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDocumentPrototypeFunction_queryCommandIndeterm(v23, v24, v25);
}

_BYTE *WebCore::jsDocumentPrototypeFunction_queryCommandIndeterm(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  WebCore::Document *v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  JSValue v18;
  WTF::StringImpl *v19;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v21;
  JSValue v22;
  WebCore *v23;
  JSC::JSGlobalObject *v24;
  JSC::CallFrame *v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  int v28[2];
  WTF::StringImpl *v29;
  int v30;
  uint64_t v31;
  int v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;

  v4 = *((_QWORD *)this + 7);
  v26 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "Document", "queryCommandIndeterm");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException((JSC::VM *)v4, this, v18);
  }
  v6 = *(WebCore::Document **)(v5 + 24);
  v7 = *((_QWORD *)a2 + 6);
  *(_QWORD *)v28 = v7;
  if ((v7 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v7 + 5) == 2)
  {
    v8 = *(WTF::StringImpl **)(v7 + 8);
    if ((v8 & 1) != 0)
    {
      v8 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v7, this);
      if (!v8)
        goto LABEL_9;
    }
    else if (!v8)
    {
LABEL_9:
      v33 = v8;
      goto LABEL_10;
    }
    *(_DWORD *)v8 += 2;
    goto LABEL_9;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v28, this);
LABEL_10:
  if (*(_DWORD *)(v4 + 80))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
    v9 = v33;
    if (hasExceptionsAfterHandlingTraps)
    {
      v32 = 1;
      v33 = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 2)
          WTF::StringImpl::destroy(v9, v19);
        else
          *(_DWORD *)v9 -= 2;
      }
      v13 = 0;
      v15 = 1;
      goto LABEL_21;
    }
  }
  else
  {
    v9 = v33;
  }
  v32 = 0;
  v31 = 0;
  v27 = v9;
  WebCore::Document::queryCommandIndeterm(v6, (const WTF::String *)&v27, (uint64_t)v28);
  v10 = v30;
  if (!v30)
  {
    if (LOBYTE(v28[0]))
      v11 = 7;
    else
      v11 = 6;
LABEL_16:
    off_1E325DFB8[v10]((unsigned __int8 *)&v33, (char *)v28);
    v13 = v11;
LABEL_17:
    v30 = -1;
    v14 = v27;
    v27 = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v12);
      else
        *(_DWORD *)v14 -= 2;
    }
    v15 = 0;
LABEL_21:
    ((void (*)(int *, uint64_t *))off_1E325A258[v15])(v28, &v31);
    return (_BYTE *)v13;
  }
  if (v30 == 1)
  {
    v12 = (WTF::StringImpl *)LOBYTE(v28[0]);
    LOBYTE(v33) = v28[0];
    v21 = v29;
    v29 = 0;
    v34 = v21;
    if (!*(_QWORD *)(v4 + 16))
    {
      v22.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v28[0]), (JSC::JSGlobalObject *)&v34);
      JSC::VM::throwException((JSC::VM *)v4, this, v22);
      v21 = v34;
    }
    v34 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v12);
      else
        *(_DWORD *)v21 -= 2;
    }
    v11 = 0;
    v13 = 0;
    v10 = v30;
    if (v30 == -1)
      goto LABEL_17;
    goto LABEL_16;
  }
  v23 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDocumentPrototypeFunction_queryCommandState(v23, v24, v25);
}

_BYTE *WebCore::jsDocumentPrototypeFunction_queryCommandState(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  WebCore::Document *v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  JSValue v18;
  WTF::StringImpl *v19;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v21;
  JSValue v22;
  WebCore *v23;
  JSC::JSGlobalObject *v24;
  JSC::CallFrame *v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  int v28[2];
  WTF::StringImpl *v29;
  int v30;
  uint64_t v31;
  int v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;

  v4 = *((_QWORD *)this + 7);
  v26 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "Document", "queryCommandState");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException((JSC::VM *)v4, this, v18);
  }
  v6 = *(WebCore::Document **)(v5 + 24);
  v7 = *((_QWORD *)a2 + 6);
  *(_QWORD *)v28 = v7;
  if ((v7 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v7 + 5) == 2)
  {
    v8 = *(WTF::StringImpl **)(v7 + 8);
    if ((v8 & 1) != 0)
    {
      v8 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v7, this);
      if (!v8)
        goto LABEL_9;
    }
    else if (!v8)
    {
LABEL_9:
      v33 = v8;
      goto LABEL_10;
    }
    *(_DWORD *)v8 += 2;
    goto LABEL_9;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v28, this);
LABEL_10:
  if (*(_DWORD *)(v4 + 80))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
    v9 = v33;
    if (hasExceptionsAfterHandlingTraps)
    {
      v32 = 1;
      v33 = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 2)
          WTF::StringImpl::destroy(v9, v19);
        else
          *(_DWORD *)v9 -= 2;
      }
      v13 = 0;
      v15 = 1;
      goto LABEL_21;
    }
  }
  else
  {
    v9 = v33;
  }
  v32 = 0;
  v31 = 0;
  v27 = v9;
  WebCore::Document::queryCommandState(v6, (const WTF::String *)&v27, (uint64_t)v28);
  v10 = v30;
  if (!v30)
  {
    if (LOBYTE(v28[0]))
      v11 = 7;
    else
      v11 = 6;
LABEL_16:
    off_1E325DFB8[v10]((unsigned __int8 *)&v33, (char *)v28);
    v13 = v11;
LABEL_17:
    v30 = -1;
    v14 = v27;
    v27 = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v12);
      else
        *(_DWORD *)v14 -= 2;
    }
    v15 = 0;
LABEL_21:
    ((void (*)(int *, uint64_t *))off_1E325A258[v15])(v28, &v31);
    return (_BYTE *)v13;
  }
  if (v30 == 1)
  {
    v12 = (WTF::StringImpl *)LOBYTE(v28[0]);
    LOBYTE(v33) = v28[0];
    v21 = v29;
    v29 = 0;
    v34 = v21;
    if (!*(_QWORD *)(v4 + 16))
    {
      v22.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v28[0]), (JSC::JSGlobalObject *)&v34);
      JSC::VM::throwException((JSC::VM *)v4, this, v22);
      v21 = v34;
    }
    v34 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v12);
      else
        *(_DWORD *)v21 -= 2;
    }
    v11 = 0;
    v13 = 0;
    v10 = v30;
    if (v30 == -1)
      goto LABEL_17;
    goto LABEL_16;
  }
  v23 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDocumentPrototypeFunction_queryCommandSupported(v23, v24, v25);
}

_BYTE *WebCore::jsDocumentPrototypeFunction_queryCommandSupported(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  WebCore::Document *v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  JSValue v18;
  WTF::StringImpl *v19;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v21;
  JSValue v22;
  WebCore *v23;
  JSC::JSGlobalObject *v24;
  JSC::CallFrame *v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  int v28[2];
  WTF::StringImpl *v29;
  int v30;
  uint64_t v31;
  int v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;

  v4 = *((_QWORD *)this + 7);
  v26 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "Document", "queryCommandSupported");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException((JSC::VM *)v4, this, v18);
  }
  v6 = *(WebCore::Document **)(v5 + 24);
  v7 = *((_QWORD *)a2 + 6);
  *(_QWORD *)v28 = v7;
  if ((v7 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v7 + 5) == 2)
  {
    v8 = *(WTF::StringImpl **)(v7 + 8);
    if ((v8 & 1) != 0)
    {
      v8 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v7, this);
      if (!v8)
        goto LABEL_9;
    }
    else if (!v8)
    {
LABEL_9:
      v33 = v8;
      goto LABEL_10;
    }
    *(_DWORD *)v8 += 2;
    goto LABEL_9;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v28, this);
LABEL_10:
  if (*(_DWORD *)(v4 + 80))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
    v9 = v33;
    if (hasExceptionsAfterHandlingTraps)
    {
      v32 = 1;
      v33 = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 2)
          WTF::StringImpl::destroy(v9, v19);
        else
          *(_DWORD *)v9 -= 2;
      }
      v13 = 0;
      v15 = 1;
      goto LABEL_21;
    }
  }
  else
  {
    v9 = v33;
  }
  v32 = 0;
  v31 = 0;
  v27 = v9;
  WebCore::Document::queryCommandSupported(v6, (const WTF::String *)&v27, (uint64_t)v28);
  v10 = v30;
  if (!v30)
  {
    if (LOBYTE(v28[0]))
      v11 = 7;
    else
      v11 = 6;
LABEL_16:
    off_1E325DFB8[v10]((unsigned __int8 *)&v33, (char *)v28);
    v13 = v11;
LABEL_17:
    v30 = -1;
    v14 = v27;
    v27 = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v12);
      else
        *(_DWORD *)v14 -= 2;
    }
    v15 = 0;
LABEL_21:
    ((void (*)(int *, uint64_t *))off_1E325A258[v15])(v28, &v31);
    return (_BYTE *)v13;
  }
  if (v30 == 1)
  {
    v12 = (WTF::StringImpl *)LOBYTE(v28[0]);
    LOBYTE(v33) = v28[0];
    v21 = v29;
    v29 = 0;
    v34 = v21;
    if (!*(_QWORD *)(v4 + 16))
    {
      v22.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v28[0]), (JSC::JSGlobalObject *)&v34);
      JSC::VM::throwException((JSC::VM *)v4, this, v22);
      v21 = v34;
    }
    v34 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v12);
      else
        *(_DWORD *)v21 -= 2;
    }
    v11 = 0;
    v13 = 0;
    v10 = v30;
    if (v30 == -1)
      goto LABEL_17;
    goto LABEL_16;
  }
  v23 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDocumentPrototypeFunction_queryCommandValue(v23, v24, v25);
}

_BYTE *WebCore::jsDocumentPrototypeFunction_queryCommandValue(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  WebCore::Document *v6;
  uint64_t v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  JSValue v18;
  WTF::StringImpl *v19;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v21;
  JSValue v22;
  WebCore *v23;
  JSC::JSGlobalObject *v24;
  JSC::CallFrame *v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  int v28[2];
  WTF::StringImpl *v29;
  int v30;
  uint64_t v31;
  int v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;

  v4 = *((_QWORD *)this + 7);
  v26 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "Document", "queryCommandValue");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException((JSC::VM *)v4, this, v18);
  }
  v6 = *(WebCore::Document **)(v5 + 24);
  v7 = *((_QWORD *)a2 + 6);
  *(_QWORD *)v28 = v7;
  if ((v7 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v7 + 5) == 2)
  {
    v8 = *(_QWORD *)(v7 + 8);
    if ((v8 & 1) != 0)
    {
      v8 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v7, this);
      if (!v8)
        goto LABEL_9;
    }
    else if (!v8)
    {
LABEL_9:
      v33 = (WTF::StringImpl *)v8;
      goto LABEL_10;
    }
    *(_DWORD *)v8 += 2;
    goto LABEL_9;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v28, this);
LABEL_10:
  if (*(_DWORD *)(v4 + 80))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
    v9 = v33;
    if (hasExceptionsAfterHandlingTraps)
    {
      v32 = 1;
      v33 = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 2)
          WTF::StringImpl::destroy(v9, v19);
        else
          *(_DWORD *)v9 -= 2;
      }
      v12 = 0;
      v15 = 1;
      goto LABEL_22;
    }
  }
  else
  {
    v9 = v33;
  }
  v32 = 0;
  v31 = 0;
  v27 = v9;
  WebCore::Document::queryCommandValue(v6, (const WTF::String *)&v27, (uint64_t)v28);
  if (!v30)
  {
    v10 = *(_QWORD *)v28;
    *(_QWORD *)v28 = 0;
    v33 = (WTF::StringImpl *)v10;
    v12 = WebCore::toJS<WebCore::IDLUSVString,WTF::String>((uint64_t)this, (uint64_t *)&v33);
    v13 = v33;
    v33 = 0;
    if (v13)
    {
      if (*(_DWORD *)v13 == 2)
        WTF::StringImpl::destroy(v13, v11);
      else
        *(_DWORD *)v13 -= 2;
    }
LABEL_16:
    if (v30 != -1)
      ((void (*)(WTF::StringImpl **, int *))off_1E325CDB8[v30])(&v33, v28);
    v30 = -1;
    v14 = v27;
    v27 = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v11);
      else
        *(_DWORD *)v14 -= 2;
    }
    v15 = 0;
LABEL_22:
    ((void (*)(int *, uint64_t *))off_1E325A258[v15])(v28, &v31);
    return (_BYTE *)v12;
  }
  if (v30 == 1)
  {
    v11 = (WTF::StringImpl *)LOBYTE(v28[0]);
    LOBYTE(v33) = v28[0];
    v21 = v29;
    v29 = 0;
    v34 = v21;
    if (!*(_QWORD *)(v4 + 16))
    {
      v22.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v28[0]), (JSC::JSGlobalObject *)&v34);
      JSC::VM::throwException((JSC::VM *)v4, this, v22);
      v21 = v34;
    }
    v34 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v11);
      else
        *(_DWORD *)v21 -= 2;
    }
    v12 = 0;
    goto LABEL_16;
  }
  v23 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsDocumentPrototypeFunction_clear(v23, v24, v25);
}

uint64_t WebCore::jsDocumentPrototypeFunction_clear(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v5;

  v3 = *((_QWORD *)a2 + 5);
  v5 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v3 + 5) != 249)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v5, "Document", "clear");
  else
    return 10;
}

uint64_t WebCore::jsDocumentPrototypeFunction_captureEvents(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v5;

  v3 = *((_QWORD *)a2 + 5);
  v5 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v3 + 5) != 249)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v5, "Document", "captureEvents");
  else
    return 10;
}

uint64_t WebCore::jsDocumentPrototypeFunction_releaseEvents(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v5;

  v3 = *((_QWORD *)a2 + 5);
  v5 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v3 + 5) != 249)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v5, "Document", "releaseEvents");
  else
    return 10;
}

uint64_t WebCore::jsDocumentPrototypeFunction_getSelection(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  WebCore::LocalDOMWindow *v4;
  uint64_t v5;
  WTF *Selection;
  uint64_t v8;

  v3 = *((_QWORD *)a2 + 5);
  v8 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v3 + 5) != 249)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v8, "Document", "getSelection");
  v4 = *(WebCore::LocalDOMWindow **)(*(_QWORD *)(v3 + 24) + 696);
  if (v4
    && (v5 = *(_QWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28),
        (Selection = (WTF *)WebCore::LocalDOMWindow::getSelection(v4)) != 0))
  {
    return WebCore::wrap<WebCore::DOMSelection>(v5, Selection);
  }
  else
  {
    return 2;
  }
}

unint64_t WebCore::jsDocumentPrototypeFunction_hasStorageAccess(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  WebCore::Document *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v22;
  WebCore::DOMGuardedObject *v23;
  WebCore::DOMGuardedObject *v24;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194A92B20);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v24 = v15;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v18 + 5) != 249)
  {
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Document", "hasStorageAccess", v17);
  }
  else
  {
    v19 = WebCore::DocumentStorageAccess::from(*(WebCore::DocumentStorageAccess **)(v18 + 24), v16);
    WebCore::DocumentStorageAccess::hasStorageAccess(v19, (WTF::StringImpl *)&v24);
    v14 = v24;
    if (!v24)
      goto LABEL_19;
  }
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_19:
  v20 = *(_QWORD *)(v10 + 16);
  if (v20)
  {
    if (*(_QWORD *)(v10 + 24) != v20)
    {
      v22 = *(objc_class **)(v20 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v24);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v24, v22, 0);
      v23 = v24;
      v24 = 0;
      if (v23)
      {
        if (*((_DWORD *)v23 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v23 + 16))(v23);
        else
          --*((_DWORD *)v23 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsDocumentPrototypeFunction_requestStorageAccess(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  WebCore::Document *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v22;
  WebCore::DOMGuardedObject *v23;
  WebCore::DOMGuardedObject *v24;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x194A92D24);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v24 = v15;
  v18 = *((_QWORD *)a2 + 5);
  if ((v18 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v18 + 5) != 249)
  {
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"Document", "requestStorageAccess", v17);
  }
  else
  {
    v19 = WebCore::DocumentStorageAccess::from(*(WebCore::DocumentStorageAccess **)(v18 + 24), v16);
    WebCore::DocumentStorageAccess::requestStorageAccess(v19, (WTF::StringImpl *)&v24);
    v14 = v24;
    if (!v24)
      goto LABEL_19;
  }
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_19:
  v20 = *(_QWORD *)(v10 + 16);
  if (v20)
  {
    if (*(_QWORD *)(v10 + 24) != v20)
    {
      v22 = *(objc_class **)(v20 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v24);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v24, v22, 0);
      v23 = v24;
      v24 = 0;
      if (v23)
      {
        if (*((_DWORD *)v23 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v23 + 16))(v23);
        else
          --*((_DWORD *)v23 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

_BYTE *WebCore::jsDocumentPrototypeFunction_startViewTransition(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  WebCore::JSViewTransitionUpdateCallback *v8;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  WebCore::JSDOMGlobalObject *v14;
  unsigned int v15;
  WebCore::JSViewTransitionUpdateCallback *updated;
  int v17;
  int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;
  _DWORD *v23;
  uint64_t v25;
  WebCore::JSViewTransitionUpdateCallback *v26;
  int v27;
  _DWORD *v28;
  WTF *v29;
  int v30;

  v10 = *((_QWORD *)this + 7);
  v25 = v10;
  v11 = *((_QWORD *)a2 + 5);
  if ((v11 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v11 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "Document", "startViewTransition");
  v12 = *(_QWORD **)(v11 + 24);
  if (*((_DWORD *)a2 + 8) == 1 || (v13 = *((_QWORD *)a2 + 6), (v13 & 0xFFFFFFFFFFFFFFF7) == 2))
  {
    v8 = 0;
    v27 = 0;
LABEL_12:
    v21 = *(_QWORD *)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0x28);
    v26 = 0;
    v28 = v8;
    WebCore::Document::startViewTransition(v12, (uint64_t *)&v28, &v29);
    v22 = v29;
    if (v29)
    {
      v19 = WebCore::wrap<WebCore::ViewTransition>((uint64_t)this, v21, v29);
      if (*((_DWORD *)v22 + 6) == 1)
        (*(void (**)(WTF *))(*(_QWORD *)v22 + 16))(v22);
      else
        --*((_DWORD *)v22 + 6);
    }
    else
    {
      v19 = 2;
    }
    v23 = v28;
    v28 = 0;
    if (v23)
    {
      if (v23[4] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v23 + 16))(v23);
      else
        --v23[4];
    }
    v20 = 0;
    goto LABEL_20;
  }
  v14 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0x28);
  v28 = (_DWORD *)v10;
  if ((v13 & 0xFFFE000000000002) == 0
    && (v15 = *(unsigned __int8 *)(v13 + 5), v15 >= 0x17)
    && ((v15 & 0xFE) == 0x1A
     || (*(_BYTE *)(v13 + 6) & 4) != 0
     && ((*(void (**)(WTF **__return_ptr, unint64_t))(16
                                                                      * *(unsigned int *)(16
                                                                                        * (*(_DWORD *)v13 & 0xFFFFFFFE)
                                                                                        + 0x4C)
                                                                      + 0x38))(&v29, v13), (_BYTE)v29)))
  {
    v8 = (WebCore::JSViewTransitionUpdateCallback *)WTF::fastMalloc((WTF *)0x20);
    updated = WebCore::JSViewTransitionUpdateCallback::JSViewTransitionUpdateCallback(v8, v13, v14);
    v17 = 0;
    v30 = 0;
    v29 = 0;
    v18 = 1;
    v26 = updated;
  }
  else
  {
    WebCore::throwArgumentMustBeFunctionError((uint64_t)this, (uint64_t)&v28, 0, "updateCallback", 15, "Document", 9, a8, "startViewTransition", 20);
    v18 = 0;
    v17 = 1;
    v30 = 1;
  }
  v27 = v17;
  ((void (*)(_DWORD **, WTF **))off_1E3269530[v17])(&v28, &v29);
  if (v18)
    goto LABEL_12;
  v19 = 0;
  v20 = 1;
LABEL_20:
  ((void (*)(WTF **, WebCore::JSViewTransitionUpdateCallback **))off_1E3269540[v20])(&v29, &v26);
  return (_BYTE *)v19;
}

unint64_t WebCore::jsDocumentPrototypeFunction_elementFromPoint(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  WebCore::Node *v8;
  double v9;
  WebCore::Node *v10;
  JSC::VM *v11;
  double v12;
  JSC::JSGlobalObject *v13;
  WebCore::Element *v14;
  void *v15;
  unint64_t v16;
  WebCore::Node *v17;
  JSValue v20;
  double v21;
  double v22;
  JSC::VM *v23;
  JSC::VM *v24;
  WebCore::Node *v25;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v23 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) != 249)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v23, "Document", "elementFromPoint");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v20);
  }
  v7 = *(_QWORD *)(v5 + 24);
  v8 = (WebCore::Node *)*((_QWORD *)a2 + 6);
  v24 = v4;
  v25 = v8;
  if ((unint64_t)v8 >= 0xFFFE000000000000)
  {
    v9 = (double)(int)v8;
  }
  else if ((unint64_t)v8 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v25, this);
    v9 = v21;
  }
  else
  {
    *(_QWORD *)&v9 = (char *)v8 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v9 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v10 = (WebCore::Node *)*((_QWORD *)a2 + 7);
  v11 = (JSC::VM *)*((_QWORD *)this + 7);
  v24 = v11;
  v25 = v10;
  if ((unint64_t)v10 >= 0xFFFE000000000000)
  {
    v12 = (double)(int)v10;
  }
  else if ((unint64_t)v10 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v25, this);
    v12 = v22;
  }
  else
  {
    *(_QWORD *)&v12 = (char *)v10 - 0x2000000000000;
  }
  if (*((_DWORD *)v11 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v11) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v12 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v13 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  WebCore::TreeScope::elementFromPoint((WTF *)(v7 + 96), 0, &v25, v9, v12);
  if (!v25)
    return 2;
  v16 = WebCore::toJS(this, v13, v25, v14);
  v17 = v25;
  v25 = 0;
  if (v17)
  {
    if (*((_DWORD *)v17 + 6) == 2)
    {
      if ((*((_WORD *)v17 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v17, v15);
    }
    else
    {
      *((_DWORD *)v17 + 6) -= 2;
    }
  }
  return v16;
}

_BYTE *WebCore::jsDocumentPrototypeFunction_elementsFromPoint(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  WTF *v8;
  double v9;
  WTF *v10;
  JSC::VM *v11;
  double v12;
  JSC::VM **v13;
  WebCore::Element *v14;
  void *v15;
  uint64_t v16;
  WTF *v17;
  JSValue v20;
  WTF *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  JSC::VM *v26;
  WTF *v27;
  int v28;
  unsigned int v29;
  JSC::VM *v30;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "Document", "elementsFromPoint");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v20);
  }
  v7 = *(_QWORD *)(v5 + 24);
  v8 = (WTF *)*((_QWORD *)a2 + 6);
  v27 = v8;
  v30 = v4;
  if ((unint64_t)v8 >= 0xFFFE000000000000)
  {
    v9 = (double)(int)v8;
  }
  else if ((unint64_t)v8 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v27, this);
    v9 = v24;
  }
  else
  {
    *(_QWORD *)&v9 = (char *)v8 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v9 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v10 = (WTF *)*((_QWORD *)a2 + 7);
  v27 = v10;
  v11 = (JSC::VM *)*((_QWORD *)this + 7);
  v30 = v11;
  if ((unint64_t)v10 >= 0xFFFE000000000000)
  {
    v12 = (double)(int)v10;
  }
  else if ((unint64_t)v10 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v27, this);
    v12 = v25;
  }
  else
  {
    *(_QWORD *)&v12 = (char *)v10 - 0x2000000000000;
  }
  if (*((_DWORD *)v11 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v11) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v12 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v13 = *(JSC::VM ***)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  WebCore::TreeScope::elementsFromPoint((WTF *)(v7 + 96), 0, a3, (uint64_t)&v27, v9, v12);
  v16 = WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLInterface<WebCore::Element>>>::convert<WTF::RefPtr<WebCore::Element,WTF::RawPtrTraits<WebCore::Element>,WTF::DefaultRefDerefTraits<WebCore::Element>>,0ul>(this, v13, (uint64_t)&v27, v14);
  if (v29)
  {
    v21 = v27;
    v22 = 8 * v29;
    do
    {
      v23 = *(_QWORD *)v21;
      *(_QWORD *)v21 = 0;
      if (v23)
      {
        if (*(_DWORD *)(v23 + 24) == 2)
        {
          if ((*(_WORD *)(v23 + 30) & 0x400) == 0)
            WebCore::Node::removedLastRef((WebCore::Node *)v23, v15);
        }
        else
        {
          *(_DWORD *)(v23 + 24) -= 2;
        }
      }
      v21 = (WTF *)((char *)v21 + 8);
      v22 -= 8;
    }
    while (v22);
  }
  v17 = v27;
  if (v27)
  {
    v27 = 0;
    v28 = 0;
    WTF::fastFree(v17, v15);
  }
  return (_BYTE *)v16;
}

_BYTE *WebCore::jsDocumentPrototypeFunction_getAnimations(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  WebCore::Document *v5;
  JSC::VM *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  WTF *v10;
  uint64_t v11;
  _DWORD *v12;
  WTF *v13;
  uint64_t v15;
  WTF *v16;
  int v17;
  unsigned int v18;
  uint64_t v19;

  v4 = *((_QWORD *)a2 + 5);
  v15 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v4 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v15, "Document", "getAnimations");
  v5 = *(WebCore::Document **)(v4 + 24);
  v6 = *(JSC::VM **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  v7 = WTF::fastMalloc((WTF *)0x10);
  *(_QWORD *)v7 = off_1E33A3A98;
  v19 = v7;
  WebCore::Document::matchingAnimations(v5, &v19, (uint64_t)&v16);
  (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  v9 = WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLInterface<WebCore::WebAnimation>>>::convert<WTF::RefPtr<WebCore::WebAnimation,WTF::RawPtrTraits<WebCore::WebAnimation>,WTF::DefaultRefDerefTraits<WebCore::WebAnimation>>,0ul>((uint64_t)this, v6, (uint64_t)&v16);
  if (v18)
  {
    v10 = v16;
    v11 = 8 * v18;
    do
    {
      v12 = *(_DWORD **)v10;
      *(_QWORD *)v10 = 0;
      if (v12)
      {
        if (v12[6] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v12 + 72))(v12);
        else
          --v12[6];
      }
      v10 = (WTF *)((char *)v10 + 8);
      v11 -= 8;
    }
    while (v11);
  }
  v13 = v16;
  if (v16)
  {
    v16 = 0;
    v17 = 0;
    WTF::fastFree(v13, v8);
  }
  return (_BYTE *)v9;
}

unint64_t WebCore::jsDocumentPrototypeFunction_getElementById(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  WebCore::JSDOMGlobalObject *v7;
  WTF::AtomStringImpl **v8;
  WebCore::JSDOMGlobalObject *v9;
  JSC::JSGlobalObject *v10;
  unint64_t v11;
  unsigned int *v13;
  WebCore::Element *v14;
  WebCore::JSDOMGlobalObject *v15;
  JSValue v17;
  JSC::VM *v18;
  WebCore::JSDOMGlobalObject *v19;
  WebCore::JSDOMGlobalObject *v20;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v18 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) != 249)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v18, "Document", "getElementById");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v17.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v17);
  }
  v6 = *(_QWORD *)(v5 + 24);
  v7 = (WebCore::JSDOMGlobalObject *)*((_QWORD *)a2 + 6);
  v19 = v7;
  if (((unint64_t)v7 & 0xFFFE000000000002) != 0 || (v8 = (WTF::AtomStringImpl **)v7, *((_BYTE *)v7 + 5) != 2))
    v8 = (WTF::AtomStringImpl **)JSC::JSValue::toStringSlowCase((JSC::JSValue *)&v19, this);
  v9 = v8[1];
  if ((v9 & 1) != 0)
  {
    JSC::JSRopeString::resolveRopeToExistingAtomString((JSC::JSRopeString *)v8, this);
  }
  else
  {
    if ((*((_BYTE *)v9 + 16) & 0x10) != 0)
    {
      *(_DWORD *)v9 += 2;
      v10 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
      v19 = v9;
      goto LABEL_13;
    }
    WTF::AtomStringImpl::lookUpSlowCase(v8[1], a2);
  }
  v9 = v20;
  v10 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v19 = v20;
  if (!v20)
    return 2;
LABEL_13:
  if (*((_DWORD *)v9 + 1)
    && (v13 = *(unsigned int **)(v6 + 120)) != 0
    && (WebCore::TreeScopeOrderedMap::getElementById(v13, (const WTF::AtomString *)&v19, (const WebCore::TreeScope *)(v6 + 96), (uint64_t *)&v20), (v15 = v20) != 0))
  {
    v11 = WebCore::toJS(this, v10, v20, v14);
    v20 = 0;
    if (*((_DWORD *)v15 + 6) == 2)
    {
      if ((*((_WORD *)v15 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v15, a2);
    }
    else
    {
      *((_DWORD *)v15 + 6) -= 2;
    }
    v19 = 0;
  }
  else
  {
    v19 = 0;
    v20 = 0;
    v11 = 2;
  }
  if (*(_DWORD *)v9 == 2)
    WTF::StringImpl::destroy(v9, a2);
  else
    *(_DWORD *)v9 -= 2;
  return v11;
}

_BYTE *WebCore::jsDocumentPrototypeFunction_prepend(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  WTF *v14;
  WTF *v17;
  uint64_t v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  JSValue v21;
  WTF::StringImpl *v22;
  uint64_t v23;
  WTF *v24;
  WTF *v25;
  uint64_t v26;
  _BYTE v27[40];
  uint64_t v28;
  JSC::JSGlobalObject *v29;
  char v30;
  WTF::StringImpl *v31;
  _BYTE v32[8];
  WTF::StringImpl *v33;
  char v34;

  v4 = *((_QWORD *)this + 7);
  v23 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v23, "Document", "prepend");
  v6 = *(_QWORD *)(v5 + 24);
  v25 = (WTF *)v27;
  v26 = 4;
  v27[32] = 0;
  v28 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v29 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v25;
  WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::Node>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::TrustedScript>>>((uint64_t)this, (uint64_t)a2, 0, &v24);
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    goto LABEL_44;
  WebCore::ContainerNode::prepend(v6, (unsigned int **)&v24, (uint64_t)v32);
  if (v34)
  {
    v7 = (WTF::StringImpl *)v32[0];
    v30 = v32[0];
    v20 = v33;
    v33 = 0;
    v31 = v20;
    if (!*(_QWORD *)(v4 + 16))
    {
      v21.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v32[0], (JSC::JSGlobalObject *)&v31);
      JSC::VM::throwException((JSC::VM *)v4, this, v21);
      v20 = v31;
    }
    v31 = 0;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
        WTF::StringImpl::destroy(v20, v7);
      else
        *(_DWORD *)v20 -= 2;
    }
    if (v34)
    {
      v22 = v33;
      v33 = 0;
      if (v22)
      {
        if (*(_DWORD *)v22 != 2)
        {
          v8 = 0;
          *(_DWORD *)v22 -= 2;
          goto LABEL_6;
        }
        WTF::StringImpl::destroy(v22, v7);
      }
    }
LABEL_44:
    v8 = 0;
    goto LABEL_6;
  }
  v8 = 10;
LABEL_6:
  v9 = v24;
  v24 = 0;
  if (v9)
  {
    v11 = (char *)v9 + 8;
    v10 = *(unsigned int *)v9;
    if ((_DWORD)v10)
    {
      v12 = 16 * v10;
      do
      {
        v13 = *((unsigned int *)v11 + 2);
        if ((_DWORD)v13 != -1)
          ((void (*)(_BYTE *, char *))off_1E3269588[v13])(v32, v11);
        *((_DWORD *)v11 + 2) = -1;
        v11 += 16;
        v12 -= 16;
      }
      while (v12);
    }
    WTF::fastFree(v9, v7);
  }
  if (HIDWORD(v26))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v25, v29);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v28;
    if (HIDWORD(v26))
    {
      v17 = v25;
      v18 = 8 * HIDWORD(v26);
      do
      {
        v19 = *(_QWORD *)v17;
        *(_QWORD *)v17 = 0;
        if (v19)
        {
          if (*(_DWORD *)(v19 + 24) == 2)
          {
            if ((*(_WORD *)(v19 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v19, v7);
          }
          else
          {
            *(_DWORD *)(v19 + 24) -= 2;
          }
        }
        v17 = (WTF *)((char *)v17 + 8);
        v18 -= 8;
      }
      while (v18);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v28;
  }
  v14 = v25;
  if (v27 != (_BYTE *)v25 && v25 != 0)
  {
    v25 = 0;
    LODWORD(v26) = 0;
    WTF::fastFree(v14, v7);
  }
  return (_BYTE *)v8;
}

_BYTE *WebCore::jsDocumentPrototypeFunction_append(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  WTF *v14;
  WTF *v17;
  uint64_t v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  JSValue v21;
  WTF::StringImpl *v22;
  uint64_t v23;
  WTF *v24;
  WTF *v25;
  uint64_t v26;
  _BYTE v27[40];
  uint64_t v28;
  JSC::JSGlobalObject *v29;
  char v30;
  WTF::StringImpl *v31;
  _BYTE v32[8];
  WTF::StringImpl *v33;
  char v34;

  v4 = *((_QWORD *)this + 7);
  v23 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v23, "Document", "append");
  v6 = *(_QWORD *)(v5 + 24);
  v25 = (WTF *)v27;
  v26 = 4;
  v27[32] = 0;
  v28 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v29 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v25;
  WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::Node>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::TrustedScript>>>((uint64_t)this, (uint64_t)a2, 0, &v24);
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    goto LABEL_44;
  WebCore::ContainerNode::append(v6, (unsigned int **)&v24, (uint64_t)v32);
  if (v34)
  {
    v7 = (WTF::StringImpl *)v32[0];
    v30 = v32[0];
    v20 = v33;
    v33 = 0;
    v31 = v20;
    if (!*(_QWORD *)(v4 + 16))
    {
      v21.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v32[0], (JSC::JSGlobalObject *)&v31);
      JSC::VM::throwException((JSC::VM *)v4, this, v21);
      v20 = v31;
    }
    v31 = 0;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
        WTF::StringImpl::destroy(v20, v7);
      else
        *(_DWORD *)v20 -= 2;
    }
    if (v34)
    {
      v22 = v33;
      v33 = 0;
      if (v22)
      {
        if (*(_DWORD *)v22 != 2)
        {
          v8 = 0;
          *(_DWORD *)v22 -= 2;
          goto LABEL_6;
        }
        WTF::StringImpl::destroy(v22, v7);
      }
    }
LABEL_44:
    v8 = 0;
    goto LABEL_6;
  }
  v8 = 10;
LABEL_6:
  v9 = v24;
  v24 = 0;
  if (v9)
  {
    v11 = (char *)v9 + 8;
    v10 = *(unsigned int *)v9;
    if ((_DWORD)v10)
    {
      v12 = 16 * v10;
      do
      {
        v13 = *((unsigned int *)v11 + 2);
        if ((_DWORD)v13 != -1)
          ((void (*)(_BYTE *, char *))off_1E3269588[v13])(v32, v11);
        *((_DWORD *)v11 + 2) = -1;
        v11 += 16;
        v12 -= 16;
      }
      while (v12);
    }
    WTF::fastFree(v9, v7);
  }
  if (HIDWORD(v26))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v25, v29);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v28;
    if (HIDWORD(v26))
    {
      v17 = v25;
      v18 = 8 * HIDWORD(v26);
      do
      {
        v19 = *(_QWORD *)v17;
        *(_QWORD *)v17 = 0;
        if (v19)
        {
          if (*(_DWORD *)(v19 + 24) == 2)
          {
            if ((*(_WORD *)(v19 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v19, v7);
          }
          else
          {
            *(_DWORD *)(v19 + 24) -= 2;
          }
        }
        v17 = (WTF *)((char *)v17 + 8);
        v18 -= 8;
      }
      while (v18);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v28;
  }
  v14 = v25;
  if (v27 != (_BYTE *)v25 && v25 != 0)
  {
    v25 = 0;
    LODWORD(v26) = 0;
    WTF::fastFree(v14, v7);
  }
  return (_BYTE *)v8;
}

_BYTE *WebCore::jsDocumentPrototypeFunction_replaceChildren(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  WTF *v14;
  WTF *v17;
  uint64_t v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  JSValue v21;
  WTF::StringImpl *v22;
  uint64_t v23;
  WTF *v24;
  WTF *v25;
  uint64_t v26;
  _BYTE v27[40];
  uint64_t v28;
  JSC::JSGlobalObject *v29;
  char v30;
  WTF::StringImpl *v31;
  _BYTE v32[8];
  WTF::StringImpl *v33;
  char v34;

  v4 = *((_QWORD *)this + 7);
  v23 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v5 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v23, "Document", "replaceChildren");
  v6 = *(_QWORD *)(v5 + 24);
  v25 = (WTF *)v27;
  v26 = 4;
  v27[32] = 0;
  v28 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v29 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v25;
  WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::Node>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::TrustedScript>>>((uint64_t)this, (uint64_t)a2, 0, &v24);
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    goto LABEL_44;
  WebCore::ContainerNode::replaceChildren(v6, (unsigned int **)&v24, (uint64_t)v32);
  if (v34)
  {
    v7 = (WTF::StringImpl *)v32[0];
    v30 = v32[0];
    v20 = v33;
    v33 = 0;
    v31 = v20;
    if (!*(_QWORD *)(v4 + 16))
    {
      v21.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v32[0], (JSC::JSGlobalObject *)&v31);
      JSC::VM::throwException((JSC::VM *)v4, this, v21);
      v20 = v31;
    }
    v31 = 0;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
        WTF::StringImpl::destroy(v20, v7);
      else
        *(_DWORD *)v20 -= 2;
    }
    if (v34)
    {
      v22 = v33;
      v33 = 0;
      if (v22)
      {
        if (*(_DWORD *)v22 != 2)
        {
          v8 = 0;
          *(_DWORD *)v22 -= 2;
          goto LABEL_6;
        }
        WTF::StringImpl::destroy(v22, v7);
      }
    }
LABEL_44:
    v8 = 0;
    goto LABEL_6;
  }
  v8 = 10;
LABEL_6:
  v9 = v24;
  v24 = 0;
  if (v9)
  {
    v11 = (char *)v9 + 8;
    v10 = *(unsigned int *)v9;
    if ((_DWORD)v10)
    {
      v12 = 16 * v10;
      do
      {
        v13 = *((unsigned int *)v11 + 2);
        if ((_DWORD)v13 != -1)
          ((void (*)(_BYTE *, char *))off_1E3269588[v13])(v32, v11);
        *((_DWORD *)v11 + 2) = -1;
        v11 += 16;
        v12 -= 16;
      }
      while (v12);
    }
    WTF::fastFree(v9, v7);
  }
  if (HIDWORD(v26))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v25, v29);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v28;
    if (HIDWORD(v26))
    {
      v17 = v25;
      v18 = 8 * HIDWORD(v26);
      do
      {
        v19 = *(_QWORD *)v17;
        *(_QWORD *)v17 = 0;
        if (v19)
        {
          if (*(_DWORD *)(v19 + 24) == 2)
          {
            if ((*(_WORD *)(v19 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v19, v7);
          }
          else
          {
            *(_DWORD *)(v19 + 24) -= 2;
          }
        }
        v17 = (WTF *)((char *)v17 + 8);
        v18 -= 8;
      }
      while (v18);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v28;
  }
  v14 = v25;
  if (v27 != (_BYTE *)v25 && v25 != 0)
  {
    v25 = 0;
    LODWORD(v26) = 0;
    WTF::fastFree(v14, v7);
  }
  return (_BYTE *)v8;
}

_BYTE *WebCore::jsDocumentPrototypeFunction_createExpression(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, BOOL *a4, double a5, double a6, float a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  WebCore::JSCustomXPathNSResolver *v12;
  JSC::VM *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL4 v22;
  char **v23;
  BOOL v24;
  int v26;
  int v27;
  uint64_t v28;
  WTF::StringImpl *v29;
  _DWORD *v30;
  WebCore::JSCustomXPathNSResolver *v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  uint64_t v34;
  JSValue v37;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v39;
  JSC::VM *v40;
  WebCore::JSCustomXPathNSResolver *v41;
  uint64_t v42;
  int v43;
  int v44;
  WTF::StringImpl *v45;
  int v46;
  WTF::StringImpl *v47;
  int v48;
  JSC::VM *v49;
  WTF::StringImpl *v50;
  char v51;

  v12 = (WebCore::JSCustomXPathNSResolver *)0xFFFE000000000002;
  v13 = (JSC::VM *)*((_QWORD *)this + 7);
  v40 = v13;
  v14 = *((_QWORD *)a2 + 5);
  if ((v14 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v14 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v40, "Document", "createExpression");
  v49 = v13;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v37.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v13, this, v37);
  }
  v16 = *(_QWORD *)(v14 + 24);
  v17 = *((_QWORD *)a2 + 6);
  v42 = v17;
  if ((v17 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v17 + 5) == 2)
  {
    v18 = *(WTF::StringImpl **)(v17 + 8);
    if ((v18 & 1) != 0)
    {
      v18 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v17, this);
      if (!v18)
        goto LABEL_9;
    }
    else if (!v18)
    {
LABEL_9:
      v45 = v18;
      goto LABEL_10;
    }
    *(_DWORD *)v18 += 2;
    goto LABEL_9;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v42, this);
LABEL_10:
  if (*((_DWORD *)v13 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v13);
    v19 = v45;
    if (hasExceptionsAfterHandlingTraps)
    {
      v48 = 1;
      v45 = 0;
      if (v19)
      {
        if (*(_DWORD *)v19 == 2)
          WTF::StringImpl::destroy(v19, v39);
        else
          *(_DWORD *)v19 -= 2;
      }
      v30 = 0;
      v34 = 1;
      goto LABEL_44;
    }
  }
  else
  {
    v19 = v45;
  }
  v47 = v19;
  v48 = 0;
  if ((unint64_t)(*((int *)a2 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL
    || (v20 = *((_QWORD *)a2 + 7), (v20 & 0xFFFFFFFFFFFFFFF7) == 2))
  {
    v12 = 0;
    v46 = 0;
LABEL_34:
    v28 = *(_QWORD *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x28);
    v47 = 0;
    v50 = v19;
    v45 = 0;
    v41 = v12;
    WebCore::Document::createExpression(v16, &v50, (const WTF::StringImpl *)&v41, a4, (uint64_t)&v42, a5, a6, a7);
    v30 = WebCore::toJSNewlyCreated<WebCore::IDLInterface<WebCore::XPathExpression>,WebCore::ExceptionOr<WTF::Ref<WebCore::XPathExpression,WTF::RawPtrTraits<WebCore::XPathExpression>,WTF::DefaultRefDerefTraits<WebCore::XPathExpression>>>>(this, v28, &v49, (unsigned __int8 *)&v42);
    if (v44 != -1)
      ((void (*)(char *, uint64_t *))off_1E32695C0[v44])(&v51, &v42);
    v44 = -1;
    v31 = v41;
    v41 = 0;
    if (v31)
    {
      if (*((_DWORD *)v31 + 2) == 1)
        (*(void (**)(WebCore::JSCustomXPathNSResolver *))(*(_QWORD *)v31 + 8))(v31);
      else
        --*((_DWORD *)v31 + 2);
    }
    v32 = v50;
    v50 = 0;
    if (v32)
    {
      if (*(_DWORD *)v32 == 2)
        WTF::StringImpl::destroy(v32, v29);
      else
        *(_DWORD *)v32 -= 2;
    }
    v33 = 0;
    goto LABEL_43;
  }
  v50 = (WTF::StringImpl *)*((_QWORD *)this + 7);
  if ((v20 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v20 + 5) < 0x17u)
  {
    v26 = 1;
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v50, 1, "resolver", 9, "Document", 9, a11, "createExpression", 17, "XPathNSResolver", 16);
    v27 = 0;
    v43 = 1;
  }
  else
  {
    v21 = *(unsigned int *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE) + 0x4C);
    v22 = *(_DWORD *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE) + 0x4C) != 0;
    v23 = (char **)(16 * v21);
    if ((_DWORD)v21)
      v24 = v23 == &WebCore::JSXPathNSResolver::s_info;
    else
      v24 = 1;
    if (!v24)
    {
      do
      {
        v23 = (char **)v23[2];
        v22 = v23 != 0;
      }
      while (v23 != &WebCore::JSXPathNSResolver::s_info && v23 != 0);
    }
    if (v22)
    {
      v12 = *(WebCore::JSCustomXPathNSResolver **)(v20 + 24);
      ++*((_DWORD *)v12 + 2);
    }
    else
    {
      v12 = (WebCore::JSCustomXPathNSResolver *)WTF::fastMalloc((WTF *)0x28);
      WebCore::JSCustomXPathNSResolver::JSCustomXPathNSResolver(v12, v20, this);
    }
    v26 = 0;
    v43 = 0;
    v42 = 0;
    v27 = 1;
    v45 = v12;
  }
  v46 = v26;
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32695B0[v26])(&v50, &v42);
  if (v27)
    goto LABEL_34;
  v30 = 0;
  v33 = 1;
LABEL_43:
  ((void (*)(uint64_t *, WTF::StringImpl **))off_1E32695D0[v33])(&v42, &v45);
  v34 = 0;
LABEL_44:
  ((void (*)(uint64_t *, WTF::StringImpl **))off_1E325A258[v34])(&v42, &v47);
  return v30;
}

_BYTE *WebCore::jsDocumentPrototypeFunction_createNSResolver(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  JSValue v13;
  JSC::VM *v14;
  JSC::VM *v15;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v14 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v10 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v14, "Document", "createNSResolver");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v13);
  }
  else
  {
    v11 = *((_QWORD *)a2 + 6);
    v15 = v9;
    if ((v11 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v11 + 5) < 0xF0u || !*(_QWORD *)(v11 + 24))
    {
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v15, 0, "nodeResolver", 13, "Document", 9, a8, "createNSResolver", 17, "Node", 5);
      return 0;
    }
    else
    {
      return (_BYTE *)v11;
    }
  }
}

_BYTE *WebCore::jsDocumentPrototypeFunction_evaluate(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, double a4, double a5, float a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  JSC::VM *v12;
  uint64_t v13;
  JSC::JSGlobalObject *v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  unsigned __int16 *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL4 v24;
  uint64_t v25;
  WebCore::JSCustomXPathNSResolver *v27;
  WTF::StringImpl *v28;
  int v29;
  int v30;
  WebCore::JSCustomXPathNSResolver *v31;
  unint64_t v32;
  JSC::VM *v33;
  int v34;
  WTF::StringImpl *v35;
  double v36;
  double v37;
  double v38;
  double v39;
  WTF::StringImpl *v40;
  uint64_t v41;
  uint64_t v42;
  _BOOL4 v43;
  uint64_t v44;
  unint64_t v46;
  _DWORD *v47;
  void *v48;
  WTF *v49;
  WTF *v50;
  void *v51;
  WTF::StringImpl *v52;
  WTF::StringImpl *v53;
  uint64_t v54;
  uint64_t v55;
  WTF *v57;
  void *v58;
  JSValue v60;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v62;
  WTF::StringImpl *v63;
  JSValue v64;
  WTF::StringImpl *v65;
  char v66;
  WTF::StringImpl *v67;
  JSC::VM *v68;
  unsigned __int16 *v69;
  uint64_t v70;
  JSC::VM *v71;
  WTF::StringImpl *v72;
  WTF::StringImpl *v73;
  int v74[2];
  WTF::StringImpl *v75;
  int v76;
  WebCore::JSCustomXPathNSResolver *v77;
  int v78;
  WTF::StringImpl *v79;
  int v80;
  WTF::StringImpl *v81;
  WTF::StringImpl *v82;

  v12 = (JSC::VM *)*((_QWORD *)this + 7);
  v71 = v12;
  v13 = *((_QWORD *)a2 + 5);
  if ((v13 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v13 + 5) != 249)
    return WebCore::throwThisTypeError((int)this, (int)&v71, "Document", "evaluate");
  v14 = a2;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v60.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v12, this, v60);
  }
  v70 = *(_QWORD *)(v13 + 24);
  v15 = *((_QWORD *)a2 + 6);
  *(_QWORD *)v74 = v15;
  if ((v15 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v15 + 5) == 2)
  {
    v16 = *(WTF::StringImpl **)(v15 + 8);
    if ((v16 & 1) != 0)
    {
      v16 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v15, this);
      if (!v16)
        goto LABEL_9;
    }
    else if (!v16)
    {
LABEL_9:
      v81 = v16;
      goto LABEL_10;
    }
    *(_DWORD *)v16 += 2;
    goto LABEL_9;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v74, this);
LABEL_10:
  if (*((_DWORD *)v12 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v12);
    v17 = v81;
    if (hasExceptionsAfterHandlingTraps)
    {
      v80 = 1;
      v81 = 0;
      if (v17)
      {
        if (*(_DWORD *)v17 == 2)
          WTF::StringImpl::destroy(v17, v62);
        else
          *(_DWORD *)v17 -= 2;
      }
      v46 = 0;
      v55 = 1;
      goto LABEL_86;
    }
  }
  else
  {
    v17 = v81;
  }
  v79 = v17;
  v80 = 0;
  v18 = *((_QWORD *)v14 + 7);
  v19 = (WTF::StringImpl *)*((_QWORD *)this + 7);
  *(_QWORD *)v74 = v19;
  if ((v18 & 0xFFFE000000000002) != 0
    || *(unsigned __int8 *)(v18 + 5) < 0xF0u
    || (v20 = *(unsigned __int16 **)(v18 + 24)) == 0)
  {
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v74, 1, "contextNode", 12, "Document", 9, a11, "evaluate", 9, "Node", 5);
    v46 = 0;
    goto LABEL_85;
  }
  v21 = *((int *)v14 + 8);
  if ((unint64_t)(v21 - 4) >= 0xFFFFFFFFFFFFFFFDLL
    || (v22 = *((_QWORD *)v14 + 8), (v22 & 0xFFFFFFFFFFFFFFF7) == 2))
  {
    v28 = 0;
    v77 = 0;
    v78 = 0;
    goto LABEL_36;
  }
  v81 = v19;
  v67 = v17;
  if ((v22 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v22 + 5) < 0x17u)
  {
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v81, 2, "resolver", 9, "Document", 9, a11, "evaluate", 9, "XPathNSResolver", 16);
    v29 = 0;
    v30 = 1;
    LODWORD(v75) = 1;
  }
  else
  {
    v23 = *(unsigned int *)(16 * (*(_DWORD *)v22 & 0xFFFFFFFE) + 0x4C);
    v24 = *(_DWORD *)(16 * (*(_DWORD *)v22 & 0xFFFFFFFE) + 0x4C) != 0;
    if ((_DWORD)v23)
    {
      v25 = 16 * v23;
      if ((char **)v25 != &WebCore::JSXPathNSResolver::s_info)
      {
        do
        {
          v25 = *(_QWORD *)(v25 + 16);
          v24 = v25 != 0;
        }
        while ((char **)v25 != &WebCore::JSXPathNSResolver::s_info && v25 != 0);
      }
    }
    if (v24)
    {
      v27 = *(WebCore::JSCustomXPathNSResolver **)(v22 + 24);
      ++*((_DWORD *)v27 + 2);
    }
    else
    {
      v31 = (WebCore::JSCustomXPathNSResolver *)WTF::fastMalloc((WTF *)0x28);
      v27 = WebCore::JSCustomXPathNSResolver::JSCustomXPathNSResolver(v31, v22, this);
    }
    v30 = 0;
    LODWORD(v75) = 0;
    *(_QWORD *)v74 = 0;
    v29 = 1;
    v17 = v27;
    v77 = v27;
  }
  v78 = v30;
  ((void (*)(WTF::StringImpl **, int *))off_1E32695B0[v30])(&v81, v74);
  if (v29)
  {
    v21 = *((int *)v14 + 8);
    v28 = v17;
    v17 = v67;
LABEL_36:
    v68 = v12;
    v69 = v20;
    if ((unint64_t)(v21 - 5) >= 0xFFFFFFFFFFFFFFFCLL)
    {
      v35 = v28;
      *(_QWORD *)v74 = 10;
      v33 = (JSC::VM *)*((_QWORD *)this + 7);
      goto LABEL_41;
    }
    v32 = *((_QWORD *)v14 + 9);
    *(_QWORD *)v74 = v32;
    v33 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v32 < 0xFFFE000000000000 || (v32 & 0x80000000) != 0)
    {
      if (v32 >= 0xFFFE000000000000)
      {
        v37 = (double)(int)v32;
        goto LABEL_45;
      }
      if (v32 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
      {
        *(_QWORD *)&v37 = v32 - 0x2000000000000;
        goto LABEL_45;
      }
      goto LABEL_116;
    }
    LOWORD(v34) = v32;
    while (1)
    {
      if ((unint64_t)(*((int *)v14 + 8) - 6) > 0xFFFFFFFFFFFFFFFALL)
      {
        v14 = 0;
      }
      else
      {
        v41 = *((_QWORD *)v14 + 10);
        if ((v41 & 0xFFFFFFFFFFFFFFF7) == 2)
        {
          v14 = 0;
        }
        else
        {
          *(_QWORD *)v74 = *((_QWORD *)this + 7);
          if ((v41 & 0xFFFE000000000002) != 0)
            goto LABEL_66;
          v42 = *(unsigned int *)(16 * (*(_DWORD *)v41 & 0xFFFFFFFE) + 0x4C);
          v43 = *(_DWORD *)(16 * (*(_DWORD *)v41 & 0xFFFFFFFE) + 0x4C) != 0;
          if ((_DWORD)v42)
          {
            v44 = 16 * v42;
            if ((char **)v44 != &WebCore::JSXPathResult::s_info)
            {
              do
              {
                v44 = *(_QWORD *)(v44 + 16);
                v43 = v44 != 0;
              }
              while ((char **)v44 != &WebCore::JSXPathResult::s_info && v44 != 0);
            }
          }
          if (!v43 || (v14 = *(JSC::JSGlobalObject **)(v41 + 24)) == 0)
          {
LABEL_66:
            WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v74, 4, "inResult", 9, "Document", 9, a11, "evaluate", 9, "XPathResult", 12);
            v46 = 0;
            goto LABEL_83;
          }
        }
      }
      v33 = *(JSC::VM **)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x28);
      v79 = 0;
      v72 = v28;
      v73 = v17;
      v77 = 0;
      v13 = v70;
      if (!*(_QWORD *)(v70 + 1800))
      {
        v47 = (_DWORD *)WTF::fastMalloc((WTF *)4);
        *v47 = 1;
        v49 = *(WTF **)(v70 + 1800);
        *(_QWORD *)(v70 + 1800) = v47;
        if (v49)
        {
          if (*(_DWORD *)v49 == 1)
            WTF::fastFree(v49, v48);
          else
            --*(_DWORD *)v49;
        }
      }
      WebCore::XPathEvaluator::evaluate(&v73, v69, (BOOL *)&v72, (void *)(unsigned __int16)v34, (uint64_t)v74, a4, a5, a6);
      if (!v76)
      {
        v50 = *(WTF **)v74;
        *(_QWORD *)v74 = 0;
        v46 = WebCore::wrap<WebCore::XPathResult>((uint64_t)this, (uint64_t)v33, v50);
        if (*(_DWORD *)v50 == 1)
        {
          WebCore::XPathResult::~XPathResult(v50, v51);
          WTF::fastFree(v57, v58);
        }
        else
        {
          --*(_DWORD *)v50;
        }
        goto LABEL_75;
      }
      if (v76 == 1)
        break;
      std::__throw_bad_variant_access[abi:sn180100]();
LABEL_116:
      v35 = v28;
LABEL_41:
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v74, this);
      v37 = v36;
      v28 = v35;
LABEL_45:
      if (*((_DWORD *)v33 + 20))
      {
        v65 = v28;
        v66 = JSC::VM::hasExceptionsAfterHandlingTraps(v33);
        v28 = v65;
        if ((v66 & 1) != 0)
        {
          v46 = 0;
          goto LABEL_83;
        }
      }
      LOWORD(v34) = 0;
      a4 = fabs(v37);
      a5 = INFINITY;
      if (a4 != INFINITY && v37 != 0.0)
      {
        v38 = -floor(-v37);
        v39 = floor(v37);
        if (v37 >= 0.0)
          v38 = v39;
        v40 = v28;
        a4 = fmod(v38, 65536.0);
        v28 = v40;
        a5 = a4 + 65536.0;
        if (a4 < 0.0)
          a4 = a4 + 65536.0;
        v34 = (int)a4;
      }
    }
    v51 = (void *)LOBYTE(v74[0]);
    LOBYTE(v81) = v74[0];
    v63 = v75;
    v75 = 0;
    v82 = v63;
    if (!*((_QWORD *)v68 + 2))
    {
      v64.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v74[0]), (JSC::JSGlobalObject *)&v82);
      JSC::VM::throwException(v68, this, v64);
      v63 = v82;
    }
    v82 = 0;
    if (v63)
    {
      if (*(_DWORD *)v63 == 2)
        WTF::StringImpl::destroy(v63, (WTF::StringImpl *)v51);
      else
        *(_DWORD *)v63 -= 2;
    }
    v46 = 0;
LABEL_75:
    if (v76 != -1)
      ((void (*)(WTF::StringImpl **, int *))off_1E32695E0[v76])(&v81, v74);
    v76 = -1;
    v52 = v72;
    v72 = 0;
    if (v52)
    {
      if (*((_DWORD *)v52 + 2) == 1)
        (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v52 + 8))(v52);
      else
        --*((_DWORD *)v52 + 2);
    }
    v53 = v73;
    v73 = 0;
    if (v53)
    {
      if (*(_DWORD *)v53 == 2)
        WTF::StringImpl::destroy(v53, (WTF::StringImpl *)v51);
      else
        *(_DWORD *)v53 -= 2;
    }
LABEL_83:
    v54 = 0;
    goto LABEL_84;
  }
  v46 = 0;
  v54 = 1;
LABEL_84:
  ((void (*)(int *, WebCore::JSCustomXPathNSResolver **))off_1E32695D0[v54])(v74, &v77);
LABEL_85:
  v55 = 0;
LABEL_86:
  ((void (*)(int *, WTF::StringImpl **))off_1E325A258[v55])(v74, &v79);
  return (_BYTE *)v46;
}

_BYTE *WebCore::IDLOperation<WebCore::JSDocument>::call<&WebCore::jsDocumentPrototypeFunction_getElementsByClassNameBody,(WebCore::CastedThisErrorBehavior)0>(WebCore *a1, JSC::JSGlobalObject *a2, uint64_t a3, WebCore::JSDocument *a4)
{
  JSC::CallFrame *v4;
  uint64_t v6;

  v6 = *((_QWORD *)a1 + 7);
  v4 = (JSC::CallFrame *)*((_QWORD *)a2 + 5);
  if (((unint64_t)v4 & 0xFFFE000000000002) != 0 || *((unsigned __int8 *)v4 + 5) != 249)
    return WebCore::throwThisTypeError((int)a1, (int)&v6, "Document", "getElementsByClassName");
  else
    return (_BYTE *)WebCore::jsDocumentPrototypeFunction_getElementsByClassNameBody(a1, a2, v4, a4);
}

unint64_t WebCore::jsDocumentPrototypeFunction_getElementsByClassNameBody(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSDocument *a4)
{
  WebCore::ContainerNode *v6;
  int v7;
  JSC::VM *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  _DWORD *v12;
  WTF::StringImpl *v13;
  JSC::VM *v15;
  JSValue v16;
  WTF::StringImpl *v17;
  _DWORD *v18;
  WTF::StringImpl *v19;
  int v20;

  if (*((_DWORD *)a2 + 8) == 1)
  {
    v15 = (JSC::VM *)*((_QWORD *)this + 7);
    v16.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v15, this, v16);
  }
  else
  {
    v6 = (WebCore::ContainerNode *)*((_QWORD *)a3 + 3);
    WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v19);
    v7 = v20;
    if (v20)
    {
      v11 = 0;
    }
    else
    {
      v8 = *(JSC::VM **)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28);
      v9 = v19;
      v19 = 0;
      v17 = v9;
      WebCore::ContainerNode::getElementsByClassName(v6, (const WTF::AtomString *)&v17, (uint64_t *)&v18);
      v11 = WebCore::wrap<WebCore::HTMLCollection>((int)this, v8, (uint64_t)v18);
      v12 = v18;
      v18 = 0;
      if (v12)
      {
        if (v12[4] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v12 + 8))(v12);
        else
          --v12[4];
      }
      v13 = v17;
      v17 = 0;
      if (v13)
      {
        if (*(_DWORD *)v13 == 2)
          WTF::StringImpl::destroy(v13, v10);
        else
          *(_DWORD *)v13 -= 2;
      }
      v7 = v20;
    }
    if (v7 != -1)
      ((void (*)(_DWORD **, WTF::StringImpl **))off_1E325A6F0[v7])(&v18, &v19);
  }
  return v11;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore7ElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore7ElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore12CDATASectionENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore12CDATASectionENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore21ProcessingInstructionENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore21ProcessingInstructionENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore4NodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore4NodeENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

unint64_t WebCore::toJS(WebCore::DOMWrapperWorld **this, JSC::JSGlobalObject *a2, WebCore::JSDOMGlobalObject *a3, WebCore::Node *a4)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  WebCore::JSDOMGlobalObject *v13;
  int v14;
  int v15;
  unsigned int v16;
  unint64_t JSHTMLWrapper;
  void *v18;
  WebCore::Node *v19;
  WebCore::Node *v20;
  unint64_t v21;
  unint64_t v23;
  WebCore::Node *v24;
  WebCore::Node *v25;

  if (*((_BYTE *)a2 + 3328))
  {
    v4 = *((_QWORD *)a3 + 1);
    if (!v4)
      goto LABEL_12;
  }
  else
  {
    v7 = *(_QWORD *)(*((_QWORD *)a2 + 415) + 32);
    if (!v7)
      goto LABEL_12;
    v8 = *(_DWORD *)(v7 - 8);
    v9 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v10 = 9 * ((v9 + ~(v9 << 13)) ^ ((v9 + ~(v9 << 13)) >> 8));
    v11 = (v10 ^ (v10 >> 15)) + ~((v10 ^ (v10 >> 15)) << 27);
    v12 = v8 & ((v11 >> 31) ^ v11);
    v13 = *(WebCore::JSDOMGlobalObject **)(v7 + 16 * v12);
    if (v13 != a3)
    {
      v14 = 1;
      while (v13)
      {
        v12 = ((_DWORD)v12 + v14) & v8;
        v13 = *(WebCore::JSDOMGlobalObject **)(v7 + 16 * v12);
        ++v14;
        if (v13 == a3)
          goto LABEL_11;
      }
      goto LABEL_12;
    }
LABEL_11:
    v4 = *(_QWORD *)(v7 + 16 * v12 + 8);
    if (!v4)
      goto LABEL_12;
  }
  if ((*(_BYTE *)(v4 + 8) & 3) == 0)
  {
    v5 = *(_QWORD *)v4;
    if (*(_QWORD *)v4)
      return v5;
  }
LABEL_12:
  v15 = *((_DWORD *)a3 + 6);
  *((_DWORD *)a3 + 6) = v15 + 2;
  v24 = a3;
  v16 = *((unsigned __int16 *)a3 + 14);
  if (v16 >> 12 != 1)
  {
    switch(v16 >> 12)
    {
      case 2u:
        v21 = WebCore::createWrapper<WebCore::Attr,WebCore::Node>((WebCore::JSAttr **)a2, &v24, a3);
        goto LABEL_21;
      case 3u:
        v21 = WebCore::createWrapper<WebCore::Text,WebCore::Node>(a2, &v24, a3);
        goto LABEL_21;
      case 4u:
        v21 = WebCore::createWrapper<WebCore::CDATASection,WebCore::Node>(a2, &v24, a3);
        goto LABEL_21;
      case 7u:
        v21 = WebCore::createWrapper<WebCore::ProcessingInstruction,WebCore::Node>(a2, &v24, a3);
        goto LABEL_21;
      case 8u:
        v21 = WebCore::createWrapper<WebCore::Comment,WebCore::Node>(a2, &v24, a3);
        goto LABEL_21;
      case 9u:
        v23 = WebCore::toJS(this, a2, a3, a4);
        v20 = a3;
        v5 = v23;
        v24 = 0;
        goto LABEL_17;
      case 0xAu:
        v21 = WebCore::createWrapper<WebCore::DocumentType,WebCore::Node>(a2, (uint64_t *)&v24, a3);
        goto LABEL_21;
      case 0xBu:
        if ((v16 & 0x80) == 0)
        {
          v24 = 0;
          v25 = a3;
          JSHTMLWrapper = WebCore::createWrapper<WebCore::DocumentFragment,WebCore::DocumentFragment>(a2, (uint64_t *)&v25, a3);
          goto LABEL_15;
        }
        v21 = WebCore::createWrapper<WebCore::ShadowRoot,WebCore::Node>(a2, (uint64_t *)&v24, a3);
        break;
      default:
        v21 = WebCore::createWrapper<WebCore::Node,WebCore::Node>(a2, (JSC::VM *)&v24, a3);
        goto LABEL_21;
    }
    goto LABEL_21;
  }
  if ((v16 & 0x10) != 0)
  {
    *((_DWORD *)a3 + 6) = v15 + 4;
    v25 = a3;
    JSHTMLWrapper = WebCore::createJSHTMLWrapper(a2, (uint64_t *)&v25, a3);
    goto LABEL_15;
  }
  if ((v16 & 0x20) == 0)
  {
    if ((v16 & 0x40) != 0)
    {
      *((_DWORD *)a3 + 6) = v15 + 4;
      v25 = a3;
      v5 = WebCore::createJSMathMLWrapper(a2, &v25, a3);
      WTF::Ref<WebCore::Document,WTF::RawPtrTraits<WebCore::Document>,WTF::DefaultRefDerefTraits<WebCore::Document>>::~Ref((uint64_t *)&v25);
      goto LABEL_16;
    }
    v21 = WebCore::createWrapper<WebCore::Element,WebCore::Node>(a2, (JSC::VM *)&v24, a3);
LABEL_21:
    v5 = v21;
    goto LABEL_16;
  }
  *((_DWORD *)a3 + 6) = v15 + 4;
  v25 = a3;
  JSHTMLWrapper = WebCore::createJSSVGWrapper((WebCore::JSSVGCircleElement **)a2, &v25, a3);
LABEL_15:
  v5 = JSHTMLWrapper;
  v19 = v25;
  v25 = 0;
  if (v19)
  {
    if (*((_DWORD *)v19 + 6) == 2)
    {
      if ((*((_WORD *)v19 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v19, v18);
    }
    else
    {
      *((_DWORD *)v19 + 6) -= 2;
    }
  }
LABEL_16:
  v20 = v24;
  v24 = 0;
  if (v20)
  {
LABEL_17:
    if (*((_DWORD *)v20 + 6) == 2)
    {
      if ((*((_WORD *)v20 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v20, v18);
    }
    else
    {
      *((_DWORD *)v20 + 6) -= 2;
    }
  }
  return v5;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore4AttrENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*(_DWORD *)(result + 24) == 2)
    {
      if ((*(_WORD *)(result + 30) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result);
    }
    else
    {
      *(_DWORD *)(result + 24) -= 2;
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore4AttrENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore5EventENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[4];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore5EventENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_BYTE *WebCore::IDLOperation<WebCore::JSDocument>::call<&WebCore::jsDocumentPrototypeFunction_createRangeBody,(WebCore::CastedThisErrorBehavior)0>(WebCore *a1, unint64_t a2, uint64_t a3, WebCore::JSDocument *a4)
{
  uint64_t v5;

  v5 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a2 + 5) != 249)
    return WebCore::throwThisTypeError((int)a1, (int)&v5, "Document", "createRange");
  else
    return (_BYTE *)WebCore::jsDocumentPrototypeFunction_createRangeBody(a1, (JSC::JSGlobalObject *)*(unsigned int *)a2, *(JSC::CallFrame **)(a2 + 24), a4);
}

uint64_t WebCore::jsDocumentPrototypeFunction_createRangeBody(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSDocument *a4)
{
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v9;

  v5 = *(_QWORD *)(16 * (a2 & 0xFFFFFFFE) + 0x28);
  WebCore::Document::createRange((uint64_t *)&v9, a3);
  v6 = WebCore::toJSNewlyCreated((uint64_t)this, v5, (uint64_t *)&v9);
  v7 = v9;
  v9 = 0;
  if (v7)
  {
    if (v7[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v7 + 8))(v7);
    else
      --v7[2];
  }
  return v6;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore12JSNodeFilterENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore12JSNodeFilterENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

char *WebCore::IDLOperation<WebCore::JSDocument>::call<&WebCore::jsDocumentPrototypeFunction_createTreeWalkerBody,(WebCore::CastedThisErrorBehavior)0>(WebCore *a1, JSC::JSGlobalObject *a2, uint64_t a3, WebCore::JSDocument *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::CallFrame *v8;
  uint64_t v10;

  v10 = *((_QWORD *)a1 + 7);
  v8 = (JSC::CallFrame *)*((_QWORD *)a2 + 5);
  if (((unint64_t)v8 & 0xFFFE000000000002) != 0 || *((unsigned __int8 *)v8 + 5) != 249)
    return WebCore::throwThisTypeError((int)a1, (int)&v10, "Document", "createTreeWalker");
  else
    return WebCore::jsDocumentPrototypeFunction_createTreeWalkerBody(a1, a2, v8, a4, a5, a6, a7, a8);
}

char *WebCore::jsDocumentPrototypeFunction_createTreeWalkerBody(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSDocument *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  char *result;
  JSC::VM *v25;
  JSValue v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _DWORD *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;

  if (*((_DWORD *)a2 + 8) == 1)
  {
    v25 = (JSC::VM *)*((_QWORD *)this + 7);
    v26.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (char *)JSC::VM::throwException(v25, this, v26);
  }
  WebCore::Converter<WebCore::IDLInterface<WebCore::Node>>::convert<WebCore::jsDocumentPrototypeFunction_createTreeWalkerBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSDocument *)::{lambda(JSC::JSGlobalObject&,JSC::ThrowScope &)#1}>((char *)&v40, (uint64_t)this, *((_QWORD *)a2 + 6), (uint64_t)a4, a5, a6, a7, a8);
  if (v41)
    return 0;
  v15 = *((int *)a2 + 8);
  if ((unint64_t)(v15 - 3) >= 0xFFFFFFFFFFFFFFFELL || *((_QWORD *)a2 + 7) == 10)
  {
    v39 = 0xFFFFFFFFLL;
  }
  else
  {
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), &v39);
    if (HIDWORD(v39))
      return 0;
    v15 = *((int *)a2 + 8);
  }
  if ((unint64_t)(v15 - 4) > 0xFFFFFFFFFFFFFFFCLL)
    v16 = 10;
  else
    v16 = *((_QWORD *)a2 + 8);
  WebCore::Converter<WebCore::IDLNullable<WebCore::IDLCallbackInterface<WebCore::JSNodeFilter>>>::convert<WebCore::jsDocumentPrototypeFunction_createTreeWalkerBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSDocument *)::{lambda(JSC::JSGlobalObject&,JSC::ThrowScope &)#2}>(&v37, (uint64_t)this, v16, *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28), v11, v12, v13, v14);
  v17 = v38;
  if (!v38)
  {
    if (HIDWORD(v39))
    {
      v27 = (char *)std::__throw_bad_variant_access[abi:sn180100]();
      return WebCore::Converter<WebCore::IDLInterface<WebCore::Node>>::convert<WebCore::jsDocumentPrototypeFunction_createTreeWalkerBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSDocument *)::{lambda(JSC::JSGlobalObject&,JSC::ThrowScope &)#1}>(v27, v28, v29, v30, v31, v32, v33, v34);
    }
    v18 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28);
    v19 = v37;
    v37 = 0;
    v35 = (_DWORD *)v19;
    WebCore::Document::createTreeWalker(v40, v39, (uint64_t *)&v35, &v36);
    v21 = WebCore::toJSNewlyCreated((uint64_t)this, v18, &v36);
    v22 = v36;
    v36 = 0;
    if (v22)
      WTF::RefCounted<WebCore::TreeWalker>::deref((_DWORD *)(v22 + 8), v20);
    v23 = v35;
    v35 = 0;
    if (v23)
    {
      if (v23[4] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v23 + 16))(v23);
      else
        --v23[4];
    }
    goto LABEL_16;
  }
  v21 = 0;
  result = 0;
  if (v38 != -1)
  {
LABEL_16:
    ((void (*)(uint64_t *, uint64_t *))off_1E3269490[v17])(&v36, &v37);
    return (char *)v21;
  }
  return result;
}

char *WebCore::Converter<WebCore::IDLInterface<WebCore::Node>>::convert<WebCore::jsDocumentPrototypeFunction_createTreeWalkerBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSDocument *)::{lambda(JSC::JSGlobalObject&,JSC::ThrowScope &)#1}>(char *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  v8 = result;
  v11 = *(_QWORD *)(a2 + 56);
  if ((a3 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a3 + 5) < 0xF0u || (v9 = *(_QWORD *)(a3 + 24)) == 0)
  {
    result = WebCore::throwArgumentTypeError(a2, (uint64_t)&v11, 0, "root", 5, "Document", 9, a8, "createTreeWalker", 17, "Node", 5);
    v10 = 1;
  }
  else
  {
    v10 = 0;
    *(_QWORD *)result = v9;
  }
  *((_DWORD *)v8 + 2) = v10;
  return result;
}

_DWORD *WebCore::Converter<WebCore::IDLNullable<WebCore::IDLCallbackInterface<WebCore::JSNodeFilter>>>::convert<WebCore::jsDocumentPrototypeFunction_createTreeWalkerBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSDocument *)::{lambda(JSC::JSGlobalObject&,JSC::ThrowScope &)#2}>(_DWORD *result, uint64_t a2, unint64_t a3, WebCore::JSDOMGlobalObject *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  char v13;

  v8 = result;
  if ((a3 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    *(_QWORD *)result = 0;
    result[2] = 0;
    return result;
  }
  result = WebCore::convert<WebCore::IDLCallbackInterface<WebCore::JSNodeFilter>,WebCore::jsDocumentPrototypeFunction_createTreeWalkerBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSDocument *)::{lambda(JSC::JSGlobalObject&,JSC::ThrowScope &)#2}>((uint64_t)&v11, a2, a3, a4, a5, a6, a7, a8);
  v9 = v12;
  if (!v12)
  {
    v10 = v11;
    v11 = 0;
    *(_QWORD *)v8 = v10;
    v8[2] = 0;
    return (_DWORD *)((uint64_t (*)(char *, uint64_t *))off_1E3269480[v9])(&v13, &v11);
  }
  v8[2] = 1;
  if ((_DWORD)v9 != -1)
    return (_DWORD *)((uint64_t (*)(char *, uint64_t *))off_1E3269480[v9])(&v13, &v11);
  return result;
}

void *WebCore::convert<WebCore::IDLCallbackInterface<WebCore::JSNodeFilter>,WebCore::jsDocumentPrototypeFunction_createTreeWalkerBody(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSDocument *)::{lambda(JSC::JSGlobalObject&,JSC::ThrowScope &)#2}>(uint64_t a1, uint64_t a2, unint64_t a3, WebCore::JSDOMGlobalObject *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  WebCore::JSNodeFilter *v11;
  void *result;
  int v13;
  uint64_t v14;

  v14 = *(_QWORD *)(a2 + 56);
  if ((a3 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(a3 + 5) <= 0x16u)
  {
    result = WebCore::throwArgumentMustBeObjectError(a2, (uint64_t)&v14, 2, "filter", 7, "Document", 9, a8, "createTreeWalker", 17);
    v13 = 1;
  }
  else
  {
    v11 = (WebCore::JSNodeFilter *)WTF::fastMalloc((WTF *)0x20);
    result = WebCore::JSNodeFilter::JSNodeFilter(v11, a3, a4);
    v13 = 0;
    *(_QWORD *)a1 = result;
  }
  *(_DWORD *)(a1 + 8) = v13;
  return result;
}

void WTF::RefCounted<WebCore::TreeWalker>::deref(_DWORD *a1, void *a2)
{
  void *v2;

  if (*a1 == 1)
  {
    WebCore::TreeWalker::~TreeWalker((WebCore::TreeWalker *)(a1 - 2), a2);
    WebCore::TreeWalker::operator delete(v2);
  }
  else
  {
    --*a1;
  }
}

void WebCore::TreeWalker::~TreeWalker(WebCore::TreeWalker *this, void *a2)
{
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;

  v3 = *((_QWORD *)this + 5);
  *((_QWORD *)this + 5) = 0;
  if (v3)
  {
    if (*(_DWORD *)(v3 + 24) == 2)
    {
      if ((*(_WORD *)(v3 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v3, a2);
    }
    else
    {
      *(_DWORD *)(v3 + 24) -= 2;
    }
  }
  v4 = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (v4)
  {
    if (v4[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v4 + 16))(v4);
    else
      --v4[4];
  }
  v5 = *((_QWORD *)this + 2);
  *((_QWORD *)this + 2) = 0;
  if (v5)
  {
    if (*(_DWORD *)(v5 + 24) == 2)
    {
      if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
    }
    else
    {
      *(_DWORD *)(v5 + 24) -= 2;
    }
  }
  if (*(_QWORD *)this)
  {
    *(_QWORD *)(*(_QWORD *)this + 8) = 3;
    *(_QWORD *)this = 0;
  }
}

uint64_t _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_21WebGLRenderingContextEEENS4_INS_22WebGL2RenderingContextEEENS4_INS_16GPUCanvasContextEEENS4_INS_27ImageBitmapRenderingContextEEENS4_INS_24CanvasRenderingContext2DEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6RefPtrIS5_NSO_12RawPtrTraitsIS5_EENSO_21DefaultRefDerefTraitsIS5_EEEENSP_IS7_NSQ_IS7_EENSS_IS7_EEEENSP_IS9_NSQ_IS9_EENSS_IS9_EEEENSP_ISB_NSQ_ISB_EENSS_ISB_EEEENSP_ISD_NSQ_ISD_EENSS_ISD_EEEEEEEEUlTyvE_JNSM_17integral_constantIlLl0EEENS1B_IlLl1EEENS1B_IlLl2EEENS1B_IlLl3EEENS1B_IlLl4EEEEEET_S1H_@<X0>(uint64_t result@<X0>, WebCore::WebGLRenderingContext *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = **(_QWORD **)result;
  if (!v3)
  {
    v22 = a3;
    v27 = result;
    v8 = *(_QWORD *)(result + 32);
    if (*(_DWORD *)(v8 + 8))
      goto LABEL_42;
    if (*(_QWORD *)v8)
      v9 = WebCore::toJS(*(WebCore **)(result + 16), *(JSC::JSGlobalObject **)(result + 24), *(WebCore::JSDOMGlobalObject **)v8, a2);
    else
      v9 = 2;
    v10 = *(_QWORD *)(v27 + 8);
    if (!*(_BYTE *)(v10 + 8))
      *(_BYTE *)(v10 + 8) = 1;
    *(_QWORD *)v10 = v9;
    result = v27;
    v3 = **(_QWORD **)v27;
    a3 = v22;
  }
  if (v3 == 1)
  {
    v23 = a3;
    v28 = result;
    v11 = *(_QWORD *)(result + 32);
    if (*(_DWORD *)(v11 + 8) != 1)
      goto LABEL_42;
    if (*(_QWORD *)v11)
      v12 = WebCore::toJS(*(WebCore **)(result + 16), *(JSC::JSGlobalObject **)(result + 24), *(WebCore::JSDOMGlobalObject **)v11, a2);
    else
      v12 = 2;
    v13 = *(_QWORD *)(v28 + 8);
    if (!*(_BYTE *)(v13 + 8))
      *(_BYTE *)(v13 + 8) = 1;
    *(_QWORD *)v13 = v12;
    result = v28;
    v3 = **(_QWORD **)v28;
    a3 = v23;
  }
  if (v3 == 2)
  {
    v24 = a3;
    v29 = result;
    v14 = *(_QWORD *)(result + 32);
    if (*(_DWORD *)(v14 + 8) != 2)
      goto LABEL_42;
    if (*(_QWORD *)v14)
      v15 = WebCore::toJS(*(WebCore **)(result + 16), *(JSC::JSGlobalObject **)(result + 24), *(WebCore::JSDOMGlobalObject **)v14, a2);
    else
      v15 = 2;
    v16 = *(_QWORD *)(v29 + 8);
    if (!*(_BYTE *)(v16 + 8))
      *(_BYTE *)(v16 + 8) = 1;
    *(_QWORD *)v16 = v15;
    result = v29;
    v3 = **(_QWORD **)v29;
    a3 = v24;
  }
  if (v3 == 3)
  {
    v25 = a3;
    v30 = result;
    v17 = *(_QWORD *)(result + 32);
    if (*(_DWORD *)(v17 + 8) != 3)
      goto LABEL_42;
    if (*(_QWORD *)v17)
      v18 = WebCore::toJS(*(WebCore **)(result + 16), *(JSC::JSGlobalObject **)(result + 24), *(WebCore::JSDOMGlobalObject **)v17, a2);
    else
      v18 = 2;
    v19 = *(_QWORD *)(v30 + 8);
    if (!*(_BYTE *)(v19 + 8))
      *(_BYTE *)(v19 + 8) = 1;
    *(_QWORD *)v19 = v18;
    result = v30;
    v3 = **(_QWORD **)v30;
    a3 = v25;
  }
  if (v3 != 4)
  {
LABEL_12:
    v7 = *(_OWORD *)(result + 16);
    *(_OWORD *)a3 = *(_OWORD *)result;
    *(_OWORD *)(a3 + 16) = v7;
    *(_QWORD *)(a3 + 32) = *(_QWORD *)(result + 32);
    return result;
  }
  v4 = *(_QWORD *)(result + 32);
  if (*(_DWORD *)(v4 + 8) == 4)
  {
    if (*(_QWORD *)v4)
    {
      v26 = a3;
      v31 = result;
      v5 = WebCore::toJS(*(WebCore **)(result + 16), *(JSC::JSGlobalObject **)(result + 24), *(WebCore::JSDOMGlobalObject **)v4, a2);
      a3 = v26;
      result = v31;
    }
    else
    {
      v5 = 2;
    }
    v6 = *(_QWORD *)(result + 8);
    if (!*(_BYTE *)(v6 + 8))
      *(_BYTE *)(v6 + 8) = 1;
    *(_QWORD *)v6 = v5;
    goto LABEL_12;
  }
LABEL_42:
  v20 = std::__throw_bad_variant_access[abi:sn180100]();
  return _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_24CanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSY_1EJSG_SK_SO_SS_SW_EEEEEEDcS10_DpT0_(v20, v21);
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_24CanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSY_1EJSG_SK_SO_SS_SW_EEEEEEDcS10_DpT0_(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *a2;
  *a2 = 0;
  if (v2)
    return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 40) + 24))(*(_QWORD *)(v2 + 40));
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_24CanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSY_1EJSG_SK_SO_SS_SW_EEEEEEDcS10_DpT0_(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *a2;
  *a2 = 0;
  if (v2)
    return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 40) + 24))(*(_QWORD *)(v2 + 40));
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_24CanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSY_1EJSG_SK_SO_SS_SW_EEEEEEDcS10_DpT0_(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *a2;
  *a2 = 0;
  if (v2)
    return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 24))(*(_QWORD *)(v2 + 32));
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm3EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_24CanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSY_1EJSG_SK_SO_SS_SW_EEEEEEDcS10_DpT0_(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *a2;
  *a2 = 0;
  if (v2)
    return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 24))(*(_QWORD *)(v2 + 32));
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm4EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_24CanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSY_1EJSG_SK_SO_SS_SW_EEEEEEDcS10_DpT0_(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *a2;
  *a2 = 0;
  if (v2)
    return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 24))(*(_QWORD *)(v2 + 32));
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_24CanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISX_LNS0_6_TraitE1EEEEEvRSY_OT_EUlRS16_OT0_E_JRNS0_6__baseILS11_1EJSG_SK_SO_SS_SW_EEERKS1E_EEEDcS16_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a3;
  if (*a3)
    result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 40) + 16))(*(_QWORD *)(v4 + 40));
  *a2 = v4;
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_24CanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISX_LNS0_6_TraitE1EEEEEvRSY_OT_EUlRS16_OT0_E_JRNS0_6__baseILS11_1EJSG_SK_SO_SS_SW_EEERKS1E_EEEDcS16_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a3;
  if (*a3)
    result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 40) + 16))(*(_QWORD *)(v4 + 40));
  *a2 = v4;
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_24CanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISX_LNS0_6_TraitE1EEEEEvRSY_OT_EUlRS16_OT0_E_JRNS0_6__baseILS11_1EJSG_SK_SO_SS_SW_EEERKS1E_EEEDcS16_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a3;
  if (*a3)
    result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 16))(*(_QWORD *)(v4 + 32));
  *a2 = v4;
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm3ELm3EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_24CanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISX_LNS0_6_TraitE1EEEEEvRSY_OT_EUlRS16_OT0_E_JRNS0_6__baseILS11_1EJSG_SK_SO_SS_SW_EEERKS1E_EEEDcS16_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a3;
  if (*a3)
    result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 16))(*(_QWORD *)(v4 + 32));
  *a2 = v4;
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm4ELm4EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore21WebGLRenderingContextENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_22WebGL2RenderingContextENSC_ISH_EENSE_ISH_EEEENS9_INSA_16GPUCanvasContextENSC_ISL_EENSE_ISL_EEEENS9_INSA_27ImageBitmapRenderingContextENSC_ISP_EENSE_ISP_EEEENS9_INSA_24CanvasRenderingContext2DENSC_IST_EENSE_IST_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISX_LNS0_6_TraitE1EEEEEvRSY_OT_EUlRS16_OT0_E_JRNS0_6__baseILS11_1EJSG_SK_SO_SS_SW_EEERKS1E_EEEDcS16_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t result;

  v4 = *a3;
  if (*a3)
    result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 16))(*(_QWORD *)(v4 + 32));
  *a2 = v4;
  return result;
}

WTF *WTF::RefCounted<WebCore::Touch>::deref(WTF *this, WTF::StringImpl *a2)
{
  WTF *v2;
  uint64_t v3;
  WTF *v4;
  uint64_t *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;

  v2 = this;
  if (*(_DWORD *)this == 1)
  {
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)v2 + 2) = 0;
    if (v3)
    {
      if ((*(_BYTE *)(v3 + 22) & 2) != 0)
      {
        if (*(_DWORD *)(v3 + 24) == 2)
        {
          if ((*(_WORD *)(v3 + 30) & 0x400) == 0)
            WebCore::Node::removedLastRef((WebCore::Node *)v3);
        }
        else
        {
          *(_DWORD *)(v3 + 24) -= 2;
        }
      }
      else
      {
        (*(void (**)(uint64_t))(*(_QWORD *)v3 + 96))(v3);
      }
    }
    v4 = (WTF *)*((_QWORD *)v2 + 1);
    *((_QWORD *)v2 + 1) = 0;
    if (v4)
    {
      if (*(_DWORD *)v4 == 1)
      {
        v5 = (uint64_t *)*((_QWORD *)v4 + 2);
        *((_QWORD *)v4 + 2) = 0;
        if (v5)
        {
          if (*v5)
            WTF::HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>>::deallocateTable(*v5, a2);
          WTF::fastFree((WTF *)v5, a2);
        }
        v6 = (unsigned int *)*((_QWORD *)v4 + 1);
        *((_QWORD *)v4 + 1) = 0;
        if (v6)
        {
          do
          {
            v7 = __ldaxr(v6);
            v8 = v7 - 1;
          }
          while (__stlxr(v8, v6));
          if (!v8)
          {
            atomic_store(1u, v6);
            WTF::fastFree((WTF *)v6, a2);
          }
        }
        WTF::fastFree(v4, a2);
      }
      else
      {
        --*(_DWORD *)v4;
      }
    }
    return (WTF *)WTF::fastFree(v2, a2);
  }
  else
  {
    --*(_DWORD *)this;
  }
  return this;
}

uint64_t WebCore::convertVariadicArguments<WebCore::IDLInterface<WebCore::Touch>>@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, WTF **a4@<X8>)
{
  unint64_t v5;
  unsigned int v6;
  WTF *v7;
  void *v8;
  void *v9;
  _QWORD v10[4];
  JSC::VM *v11;
  unint64_t v12;

  v11 = *(JSC::VM **)(result + 56);
  v12 = a3;
  v5 = *(int *)(a2 + 32) - 1;
  v6 = v5 - a3;
  if (v5 <= a3)
  {
    *a4 = 0;
  }
  else
  {
    v10[0] = result;
    v10[1] = a2;
    v10[2] = &v12;
    v10[3] = &v11;
    v7 = (WTF *)WTF::fastMalloc((WTF *)(8 * (v5 - a3) + 8));
    if (*WTF::TrailingArray<WTF::EmbeddedFixedVector<std::reference_wrapper<WebCore::Touch>>,std::reference_wrapper<WebCore::Touch>>::TrailingArray<WTF::FixedVector<WebCore::VariadicConverter<WebCore::IDLInterface<WebCore::Touch>>::Item> WebCore::convertVariadicArguments<WebCore::IDLInterface<WebCore::Touch>>(JSC::JSGlobalObject &,JSC::CallFrame &,unsigned long)::{lambda(unsigned long)#1}>((unsigned int *)v7, v6, (uint64_t)v10) != v6)
    {
      WTF::fastFree(v7, v8);
      v7 = 0;
    }
    result = (uint64_t)v11;
    if (*((_DWORD *)v11 + 20) && (result = JSC::VM::hasExceptionsAfterHandlingTraps(v11), (result & 1) != 0))
    {
      *a4 = 0;
      if (v7)
        return WTF::fastFree(v7, v9);
    }
    else
    {
      *a4 = v7;
    }
  }
  return result;
}

unsigned int *WTF::TrailingArray<WTF::EmbeddedFixedVector<std::reference_wrapper<WebCore::Touch>>,std::reference_wrapper<WebCore::Touch>>::TrailingArray<WTF::FixedVector<WebCore::VariadicConverter<WebCore::IDLInterface<WebCore::Touch>>::Item> WebCore::convertVariadicArguments<WebCore::IDLInterface<WebCore::Touch>>(JSC::JSGlobalObject &,JSC::CallFrame &,unsigned long)::{lambda(unsigned long)#1}>(unsigned int *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL4 v9;
  char **v10;
  BOOL v11;
  uint64_t v13;
  JSC::VM *v14;
  JSC::VM *v15;

  *a1 = a2;
  if (a2)
  {
    v5 = 0;
    v6 = a2;
    while (1)
    {
      v7 = *(_QWORD *)(*(_QWORD *)(a3 + 8)
                     + ((uint64_t)(((unint64_t)(**(_DWORD **)(a3 + 16) + v5) << 32) + 0x600000000) >> 29));
      if ((v7 & 0xFFFE000000000002) != 0)
        break;
      v8 = *(unsigned int *)(16 * (*(_DWORD *)v7 & 0xFFFFFFFE) + 0x4C);
      v9 = *(_DWORD *)(16 * (*(_DWORD *)v7 & 0xFFFFFFFE) + 0x4C) != 0;
      v10 = (char **)(16 * v8);
      if ((_DWORD)v8)
        v11 = v10 == &WebCore::JSTouch::s_info;
      else
        v11 = 1;
      if (!v11)
      {
        do
        {
          v10 = (char **)v10[2];
          v9 = v10 != 0;
        }
        while (v10 != &WebCore::JSTouch::s_info && v10 != 0);
      }
      if (!v9)
        break;
      v13 = *(_QWORD *)(v7 + 24);
      if (!v13)
        break;
      v14 = **(JSC::VM ***)(a3 + 24);
      if (*((_DWORD *)v14 + 20))
      {
        if ((JSC::VM::hasExceptionsAfterHandlingTraps(v14) & 1) != 0)
          goto LABEL_22;
        v6 = *a1;
      }
      *(_QWORD *)&a1[2 * v5++ + 2] = v13;
      if (v5 >= v6)
        return a1;
    }
    JSC::throwTypeError();
    v15 = **(JSC::VM ***)(a3 + 24);
    if (*((_DWORD *)v15 + 20))
      JSC::VM::hasExceptionsAfterHandlingTraps(v15);
LABEL_22:
    *a1 = v5;
  }
  return a1;
}

_BYTE *WebCore::IDLOperation<WebCore::JSDocument>::call<&WebCore::jsDocumentPrototypeFunction_getElementsByNameBody,(WebCore::CastedThisErrorBehavior)0>(WebCore *a1, JSC::JSGlobalObject *a2, uint64_t a3, WebCore::JSDocument *a4)
{
  JSC::CallFrame *v4;
  uint64_t v6;

  v6 = *((_QWORD *)a1 + 7);
  v4 = (JSC::CallFrame *)*((_QWORD *)a2 + 5);
  if (((unint64_t)v4 & 0xFFFE000000000002) != 0 || *((unsigned __int8 *)v4 + 5) != 249)
    return WebCore::throwThisTypeError((int)a1, (int)&v6, "Document", "getElementsByName");
  else
    return (_BYTE *)WebCore::jsDocumentPrototypeFunction_getElementsByNameBody(a1, a2, v4, a4);
}

unint64_t WebCore::jsDocumentPrototypeFunction_getElementsByNameBody(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSDocument *a4)
{
  WebCore::Document *v6;
  int v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  WebCore::NameNodeList *v12;
  WTF::StringImpl *v13;
  JSC::VM *v15;
  JSValue v16;
  WTF::StringImpl *v17;
  WebCore::NameNodeList *v18;
  WTF::StringImpl *v19;
  int v20;

  if (*((_DWORD *)a2 + 8) == 1)
  {
    v15 = (JSC::VM *)*((_QWORD *)this + 7);
    v16.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v15, this, v16);
  }
  else
  {
    v6 = (WebCore::Document *)*((_QWORD *)a3 + 3);
    WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(this, *((_QWORD *)a2 + 6), (uint64_t)&v19);
    v7 = v20;
    if (v20)
    {
      v11 = 0;
    }
    else
    {
      v8 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28);
      v9 = v19;
      v19 = 0;
      v17 = v9;
      WebCore::Document::getElementsByName(v6, &v17, &v18);
      v11 = WebCore::JSConverter<WebCore::IDLInterface<WebCore::NodeList>>::convert<WTF::Ref<WebCore::NodeList,WTF::RawPtrTraits<WebCore::NodeList>,WTF::DefaultRefDerefTraits<WebCore::NodeList>>>((uint64_t)this, v8, (uint64_t *)&v18);
      v12 = v18;
      v18 = 0;
      if (v12)
      {
        if (*((_DWORD *)v12 + 4) == 1)
          (*(void (**)(WebCore::NameNodeList *))(*(_QWORD *)v12 + 8))(v12);
        else
          --*((_DWORD *)v12 + 4);
      }
      v13 = v17;
      v17 = 0;
      if (v13)
      {
        if (*(_DWORD *)v13 == 2)
          WTF::StringImpl::destroy(v13, v10);
        else
          *(_DWORD *)v13 -= 2;
      }
      v7 = v20;
    }
    if (v7 != -1)
      ((void (*)(WebCore::NameNodeList **, WTF::StringImpl **))off_1E325A6F0[v7])(&v18, &v19);
  }
  return v11;
}

JSC::CallFrame *WebCore::jsDocumentPrototypeFunction_open1Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSDocument *a4)
{
  JSC::CallFrame *v4;
  JSC::VM *v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  JSC::JSGlobalObject *v11;
  uint64_t v12;
  uint64_t v13;
  WebCore::Document *v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  WebCore::Document *v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  WTF *v22;
  WTF::StringImpl *v25;
  char v26;
  void *v27;
  WebCore::Node *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[2];
  int v33;
  WTF::StringImpl *v34;
  int v35;
  WTF::StringImpl *v36;
  int v37;
  uint64_t *v38;
  uint64_t v39;
  _BYTE v40[40];
  uint64_t v41;
  JSC::JSGlobalObject *v42;
  JSC::VM *v43;
  WebCore::Node *v44;
  WTF::StringImpl *v45;
  char v46;

  v4 = a3;
  v7 = (JSC::VM *)*((_QWORD *)this + 7);
  v43 = v7;
  v38 = (uint64_t *)v40;
  v39 = 4;
  v40[32] = 0;
  v41 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v42 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v38;
  v8 = *((_QWORD *)a3 + 3);
  v9 = *((_DWORD *)a2 + 8);
  if (v9 == 1 || *((_QWORD *)a2 + 6) == 10)
  {
    v36 = 0;
    v37 = 0;
  }
  else
  {
    WebCore::Converter<WebCore::IDLDOMString>::convert(this, *((_QWORD *)a2 + 6), (uint64_t)&v36);
    v21 = v37;
    if (v37)
    {
      v4 = 0;
      goto LABEL_29;
    }
    v9 = *((_DWORD *)a2 + 8);
  }
  if ((unint64_t)(v9 - 3) >= 0xFFFFFFFFFFFFFFFELL || (v10 = *((_QWORD *)a2 + 7), v10 == 10))
  {
    v34 = 0;
    v35 = 0;
LABEL_7:
    v11 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
    v12 = *(_QWORD *)(WebCore::firstDOMWindow((JSC::VM **)this, a2) + 72);
    if (v12 && (v13 = *(_QWORD *)(v12 + 8)) != 0)
    {
      if (*(_BYTE *)(v13 + 178))
      {
        __break(0xC471u);
        JUMPOUT(0x194A965F8);
      }
      v14 = (WebCore::Document *)(v13 - 288);
    }
    else
    {
      v14 = 0;
    }
    if (v37 || (v15 = v36, v36 = 0, v35))
    {
      v22 = (WTF *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_70:
      v38 = 0;
      LODWORD(v39) = 0;
      WTF::fastFree(v22, a2);
      return v4;
    }
    v16 = v34;
    v34 = 0;
    if ((*(_WORD *)(v8 + 3358) & 1) == 0 || *(_DWORD *)(v8 + 3336))
    {
      v25 = 0;
      v26 = 8;
    }
    else
    {
      WebCore::Document::open(v8, v14, (uint64_t)&v44);
      if (!v46)
      {
        v32[0] = v8;
        v33 = 0;
        v18 = WebCore::cachedDocumentWrapper((WebCore::DOMWrapperWorld **)this, v11, (WebCore::JSDOMGlobalObject *)v8, v17);
        if (v18)
        {
          v4 = (JSC::CallFrame *)v18;
        }
        else
        {
          *(_DWORD *)(v8 + 24) += 2;
          v44 = (WebCore::Node *)v8;
          v4 = (JSC::CallFrame *)WebCore::toJSNewlyCreated((uint64_t)this, v11, &v44);
          v28 = v44;
          v44 = 0;
          if (v28)
          {
            if (*((_DWORD *)v28 + 6) == 2)
            {
              if ((*((_WORD *)v28 + 15) & 0x400) == 0)
                WebCore::Node::removedLastRef(v28, v27);
            }
            else
            {
              *((_DWORD *)v28 + 6) -= 2;
            }
          }
        }
        v19 = 0;
        goto LABEL_19;
      }
      v26 = (char)v44;
      v25 = v45;
    }
    LOBYTE(v32[0]) = v26;
    v33 = 1;
    LOBYTE(v44) = v26;
    v32[1] = 0;
    v45 = v25;
    if (!*((_QWORD *)v7 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v43, (unsigned __int8 *)&v44);
      v25 = v45;
    }
    v45 = 0;
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
      {
        WTF::StringImpl::destroy(v25, v14);
        v4 = 0;
        v19 = v33;
        goto LABEL_19;
      }
      *(_DWORD *)v25 -= 2;
    }
    v4 = 0;
    v19 = 1;
LABEL_19:
    ((void (*)(WebCore::Node **, _QWORD *))off_1E32694F0[v19])(&v44, v32);
    v33 = -1;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, a2);
      else
        *(_DWORD *)v16 -= 2;
    }
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, a2);
      else
        *(_DWORD *)v15 -= 2;
    }
    v20 = v35;
    goto LABEL_26;
  }
  WebCore::Converter<WebCore::IDLDOMString>::convert(this, v10, (uint64_t)&v34);
  v20 = v35;
  if (!v35)
    goto LABEL_7;
  v4 = 0;
LABEL_26:
  if (v20 != -1)
    ((void (*)(WebCore::Node **, WTF::StringImpl **))off_1E325A258[v20])(&v44, &v34);
  v21 = v37;
LABEL_29:
  if (v21 != -1)
    ((void (*)(WebCore::Node **, WTF::StringImpl **))off_1E325A258[v21])(&v44, &v36);
  if (HIDWORD(v39))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v38, v42);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v41;
    if (HIDWORD(v39))
    {
      v29 = v38;
      v30 = 8 * HIDWORD(v39);
      do
      {
        v31 = *v29;
        *v29 = 0;
        if (v31)
        {
          if (*(_DWORD *)(v31 + 24) == 2)
          {
            if ((*(_WORD *)(v31 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v31, a2);
          }
          else
          {
            *(_DWORD *)(v31 + 24) -= 2;
          }
        }
        ++v29;
        v30 -= 8;
      }
      while (v30);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v41;
  }
  v22 = (WTF *)v38;
  if (v40 != (_BYTE *)v38 && v38 != 0)
    goto LABEL_70;
  return v4;
}

uint64_t WebCore::jsDocumentPrototypeFunction_open2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSDocument *a4)
{
  uint64_t v6;
  WebCore::WindowProxy *v7;
  int v8;
  int v9;
  uint64_t v10;
  JSC::VM *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WebCore::LocalDOMWindow *active;
  JSC::JSGlobalObject *v15;
  WebCore::LocalDOMWindow *DOMWindow;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  unsigned int *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  JSValue v29;
  WebCore::JSWindowProxy *v30;
  uint64_t *v31;
  unsigned int *v32;
  unsigned int v33;
  unsigned int v34;
  WTF::StringImpl *v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  WebCore::WindowProxy *v38;
  WTF::StringImpl *v39;
  int v40;
  uint64_t v41;
  int v42;
  WTF::StringImpl *v43;
  int v44;
  WTF::StringImpl *v45;
  int v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;

  v6 = (uint64_t)this;
  v7 = (WebCore::WindowProxy *)*((_QWORD *)this + 7);
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v45);
  v8 = v46;
  if (v46)
  {
    v6 = 0;
    goto LABEL_36;
  }
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>((JSC::JSGlobalObject *)v6, *((_QWORD *)a2 + 7), (uint64_t)&v43);
  v9 = v44;
  if (v44)
  {
    v6 = 0;
    goto LABEL_33;
  }
  v10 = *((_QWORD *)a2 + 8);
  v38 = (WebCore::WindowProxy *)v10;
  v11 = *(JSC::VM **)(v6 + 56);
  if ((v10 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v10 + 5) == 2)
  {
    v12 = *(WTF::StringImpl **)(v10 + 8);
    if ((v12 & 1) != 0)
    {
      v12 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v10, (JSC::JSGlobalObject *)v6);
      if (!v12)
        goto LABEL_8;
    }
    else if (!v12)
    {
LABEL_8:
      v47 = v12;
      goto LABEL_9;
    }
    *(_DWORD *)v12 += 2;
    goto LABEL_8;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v38, (JSC::JSGlobalObject *)v6);
LABEL_9:
  if (*((_DWORD *)v11 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v11);
    v13 = v47;
    if (hasExceptionsAfterHandlingTraps)
    {
      v42 = 1;
      v47 = 0;
      if (v13)
      {
        if (*(_DWORD *)v13 == 2)
          WTF::StringImpl::destroy(v13, v27);
        else
          *(_DWORD *)v13 -= 2;
      }
      v6 = 0;
      v24 = 1;
      goto LABEL_32;
    }
  }
  else
  {
    v13 = v47;
  }
  v42 = 0;
  active = (WebCore::LocalDOMWindow *)WebCore::activeDOMWindow(v6);
  DOMWindow = (WebCore::LocalDOMWindow *)WebCore::firstDOMWindow((JSC::VM **)v6, v15);
  if (v46 || (v18 = v45, v45 = 0, v37 = v18, v44))
  {
LABEL_74:
    v32 = (unsigned int *)std::__throw_bad_variant_access[abi:sn180100]();
    goto LABEL_75;
  }
  v19 = v43;
  v43 = 0;
  v35 = v13;
  v36 = v19;
  v41 = 0;
  v20 = (unsigned int *)*((_QWORD *)a3 + 87);
  if (v20)
  {
    ++v20[6];
    WebCore::LocalDOMWindow::open(v20, active, DOMWindow, (const WTF::String *)&v37, (const WTF::AtomString *)&v36, (const WTF::String *)&v35, (uint64_t)&v38);
    if (v20[6] == 1)
      (*(void (**)(unsigned int *))(*(_QWORD *)v20 + 72))(v20);
    else
      --v20[6];
  }
  else
  {
    LOBYTE(v38) = 12;
    v39 = 0;
    v40 = 1;
  }
  if (v40)
  {
    if (v40 == 1)
    {
      v17 = (WTF::StringImpl *)v38;
      LOBYTE(v47) = (_BYTE)v38;
      v28 = v39;
      v39 = 0;
      v48 = v28;
      if (!*((_QWORD *)v7 + 2))
      {
        v29.super.isa = (Class)WebCore::createDOMException((JSC *)v6, (JSC::JSGlobalObject *)v38, (JSC::JSGlobalObject *)&v48);
        JSC::VM::throwException(v7, (JSC::JSGlobalObject *)v6, v29);
        v28 = v48;
      }
      v48 = 0;
      if (v28)
      {
        if (*(_DWORD *)v28 == 2)
          WTF::StringImpl::destroy(v28, v17);
        else
          *(_DWORD *)v28 -= 2;
      }
      v6 = 0;
      goto LABEL_20;
    }
    goto LABEL_74;
  }
  v7 = v38;
  v38 = 0;
  if (v7)
  {
    v30 = WebCore::WindowProxy::jsWindowProxy(v7, *(WebCore::DOMWrapperWorld **)(v6 + 3320));
    if (v30)
      v6 = (uint64_t)v30;
    else
      v6 = 2;
    if (*(_DWORD *)v7 != 1)
    {
      --*(_DWORD *)v7;
      goto LABEL_20;
    }
    v31 = (uint64_t *)*((_QWORD *)v7 + 2);
    *((_QWORD *)v7 + 2) = 0;
    if (v31)
    {
      if (*v31)
        WTF::HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>>::deallocateTable(*v31, v17);
      WTF::fastFree((WTF *)v31, v17);
    }
    v32 = (unsigned int *)*((_QWORD *)v7 + 1);
    *((_QWORD *)v7 + 1) = 0;
    if (!v32)
      goto LABEL_73;
    do
    {
      v33 = __ldaxr(v32);
      v34 = v33 - 1;
    }
    while (__stlxr(v34, v32));
    if (v34)
    {
LABEL_73:
      WTF::fastFree(v7, v17);
      goto LABEL_20;
    }
LABEL_75:
    atomic_store(1u, v32);
    WTF::fastFree((WTF *)v32, v17);
    goto LABEL_73;
  }
  v6 = 2;
LABEL_20:
  if (v40 != -1)
    ((void (*)(WTF::StringImpl **, WebCore::WindowProxy **))off_1E3264D28[v40])(&v47, &v38);
  v40 = -1;
  v21 = v35;
  v35 = 0;
  if (v21)
  {
    if (*(_DWORD *)v21 == 2)
      WTF::StringImpl::destroy(v21, v17);
    else
      *(_DWORD *)v21 -= 2;
  }
  v22 = v36;
  v36 = 0;
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v17);
    else
      *(_DWORD *)v22 -= 2;
  }
  v23 = v37;
  v37 = 0;
  if (v23)
  {
    if (*(_DWORD *)v23 == 2)
      WTF::StringImpl::destroy(v23, v17);
    else
      *(_DWORD *)v23 -= 2;
  }
  v24 = 0;
LABEL_32:
  ((void (*)(WebCore::WindowProxy **, uint64_t *))off_1E325A258[v24])(&v38, &v41);
  v9 = v44;
LABEL_33:
  if (v9 != -1)
    ((void (*)(WebCore::WindowProxy **, WTF::StringImpl **))off_1E325A6F0[v9])(&v38, &v43);
  v8 = v46;
LABEL_36:
  if (v8 != -1)
    ((void (*)(WebCore::WindowProxy **, WTF::StringImpl **))off_1E325A258[v8])(&v38, &v45);
  return v6;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJPN7WebCore8DocumentENS8_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::TrustedHTML>,WebCore::IDLDOMString>>(uint64_t result, JSC::VM **a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  JSC::VM **v7;
  JSC::VM *v8;
  WTF *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (**v13)();
  void *v14;
  uint64_t v15;
  unsigned int v16;
  WTF *v17;
  uint64_t v18;
  JSC::VM **v19;
  uint64_t (**v20)();
  JSC::VM *v21;
  uint64_t (*v22)();
  unsigned int v23;
  int v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t (**v28)();
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  int v38;
  char v39[8];
  unsigned int v40;
  unsigned __int8 v41;
  char v42[8];
  unsigned int v43;
  char v44;
  char v45[8];
  unsigned int v46;
  char v47;
  char v48[8];
  uint64_t v49;
  unsigned int v50;
  unsigned int v51;
  uint64_t v52;

  v3 = (_QWORD *)result;
  v52 = *MEMORY[0x1E0C80C00];
  v4 = *(int *)(a3 + 32);
  v5 = v4 - 1;
  if (v4 == 1)
  {
    *(_QWORD *)result = 0;
  }
  else
  {
    v6 = a3;
    v7 = a2;
    v8 = a2[7];
    result = WTF::fastMalloc((WTF *)((16 * (v4 - 1)) | 8));
    v9 = (WTF *)result;
    *(_DWORD *)result = v5;
    if (v5)
    {
      v37 = v3;
      v38 = v5;
      v10 = 0;
      v11 = result + 8;
      v12 = 0x600000000;
      v13 = off_1E325CF80;
      v36 = result + 8;
      while (1)
      {
        result = WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::TrustedHTML>,WebCore::IDLDOMString>>::convert(v7, *(_QWORD *)(v6 + (v12 >> 29)), (uint64_t)v48);
        v15 = v51;
        if (v51)
        {
          v42[0] = 0;
          v44 = 0;
        }
        else
        {
          v45[0] = 0;
          v46 = -1;
          v16 = v50;
          if (v50 == -1)
          {
            v42[0] = 0;
            v43 = -1;
            v44 = 1;
          }
          else
          {
            v17 = v9;
            v18 = v6;
            v19 = v7;
            v20 = v13;
            v21 = v8;
            v22 = off_1E325CFA0[v50];
            ((void (*)(char *, char *, uint64_t *))v22)(&v47, v45, &v49);
            v46 = v16;
            v42[0] = 0;
            v43 = -1;
            result = ((uint64_t (*)(char *, char *, char *))v22)(&v47, v42, v45);
            v8 = v21;
            v13 = v20;
            v7 = v19;
            v6 = v18;
            v9 = v17;
            v43 = v16;
            v44 = 1;
            if (v46 != -1)
              result = ((uint64_t (*)(char *, char *))v13[v46])(&v47, v45);
          }
          v15 = v51;
        }
        if (v15 != 0xFFFFFFFFLL)
          result = ((uint64_t (*)(char *, uint64_t *))off_1E325CFC0[v15])(v45, &v49);
        if (*((_DWORD *)v8 + 20) && (result = JSC::VM::hasExceptionsAfterHandlingTraps(v8), (_DWORD)result))
        {
          v24 = 0;
          v39[0] = 0;
        }
        else
        {
          v39[0] = 0;
          v41 = 0;
          if (!v44)
            break;
          v40 = -1;
          v23 = v43;
          if (v43 != -1)
          {
            result = ((uint64_t (*)(char *, char *, char *))off_1E325CFA0[v43])(v48, v39, v42);
            v40 = v23;
          }
          v24 = 1;
        }
        v41 = v24;
        if (v44 && v43 != -1)
        {
          result = ((uint64_t (*)(char *, char *))v13[v43])(v48, v42);
          v24 = v41;
        }
        if (!v24)
          break;
        *(_BYTE *)v11 = 0;
        *(_DWORD *)(v11 + 8) = -1;
        v25 = v40;
        if (v40 != -1)
        {
          result = ((uint64_t (*)(char *, uint64_t, char *))off_1E325CFA0[v40])(v48, v11, v39);
          *(_DWORD *)(v11 + 8) = v25;
          if (v41)
          {
            if (v40 != -1)
              result = ((uint64_t (*)(char *, char *))v13[v40])(v48, v39);
          }
        }
        ++v10;
        v26 = *(unsigned int *)v9;
        v12 += 0x100000000;
        v11 += 16;
        if (v10 >= v26)
          goto LABEL_28;
      }
      *(_DWORD *)v9 = v10;
      LODWORD(v26) = v10;
LABEL_28:
      if ((_DWORD)v26 != v38)
      {
        v27 = v36;
        if ((_DWORD)v26)
        {
          v28 = v13;
          v29 = 16 * v26;
          do
          {
            v30 = *(unsigned int *)(v27 + 8);
            if ((_DWORD)v30 != -1)
              ((void (*)(char *, uint64_t))v28[v30])(v48, v27);
            *(_DWORD *)(v27 + 8) = -1;
            v27 += 16;
            v29 -= 16;
          }
          while (v29);
        }
        result = WTF::fastFree(v9, v14);
        v9 = 0;
      }
      v3 = v37;
    }
    if (*((_DWORD *)v8 + 20) && (result = JSC::VM::hasExceptionsAfterHandlingTraps(v8), (result & 1) != 0))
    {
      *v3 = 0;
      if (v9)
      {
        v33 = (char *)v9 + 8;
        v32 = *(unsigned int *)v9;
        if ((_DWORD)v32)
        {
          v34 = 16 * v32;
          do
          {
            v35 = *((unsigned int *)v33 + 2);
            if ((_DWORD)v35 != -1)
              ((void (*)(char *, char *))off_1E325CF80[v35])(v48, v33);
            *((_DWORD *)v33 + 2) = -1;
            v33 += 16;
            v34 -= 16;
          }
          while (v34);
        }
        return WTF::fastFree(v9, v31);
      }
    }
    else
    {
      *v3 = v9;
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore11TrustedHTMLENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJS9_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore11TrustedHTMLENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJS9_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  _DWORD *v2;
  WTF::StringImpl *v3;

  v2 = *(_DWORD **)a2;
  *(_QWORD *)a2 = 0;
  if (v2)
  {
    if (v2[2] == 1)
    {
      v3 = (WTF::StringImpl *)*((_QWORD *)v2 + 2);
      *((_QWORD *)v2 + 2) = 0;
      if (v3)
      {
        if (*(_DWORD *)v3 == 2)
          WTF::StringImpl::destroy(v3, a2);
        else
          *(_DWORD *)v3 -= 2;
      }
      if (*(_QWORD *)v2)
      {
        *(_QWORD *)(*(_QWORD *)v2 + 8) = 3;
        *(_QWORD *)v2 = 0;
      }
      bmalloc::api::isoDeallocate((bmalloc::api *)v2, a2);
    }
    else
    {
      --v2[2];
    }
  }
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore11TrustedHTMLENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISI_LNS0_6_TraitE1EEEEEvRSJ_OT_EUlRSP_OT0_E_JRNS0_6__baseILSM_1EJS9_SH_EEEOSX_EEEDcSP_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore11TrustedHTMLENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISI_LNS0_6_TraitE1EEEEEvRSJ_OT_EUlRSP_OT0_E_JRNS0_6__baseILSM_1EJS9_SH_EEEOSX_EEEDcSP_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6StringENS9_6RefPtrIN7WebCore11TrustedHTMLENS9_12RawPtrTraitsISD_EENS9_21DefaultRefDerefTraitsISD_EEEEEEENSC_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSJ_SK_EEEEEEDcSO_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E3269500[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore30JSViewTransitionUpdateCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore30JSViewTransitionUpdateCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

uint64_t WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLInterface<WebCore::Element>>>::convert<WTF::RefPtr<WebCore::Element,WTF::RawPtrTraits<WebCore::Element>,WTF::DefaultRefDerefTraits<WebCore::Element>>,0ul>(WebCore *this, JSC::VM **a2, uint64_t a3, WebCore::Element *a4)
{
  JSC::VM *v7;
  unsigned int v8;
  WebCore::JSDOMGlobalObject **v9;
  uint64_t v10;
  objc_class *v11;
  int v12;
  BOOL v13;
  JSValue v14;
  void *v15;
  JSC::VM *v16;
  uint64_t v17;
  uint64_t *v18;
  _QWORD *v20;
  WTF *v21;
  int v22;
  BOOL v23;
  uint64_t v24;
  WTF *v25;
  _OWORD v26[4];
  uint64_t v27;
  JSC::VM *v28;

  v7 = (JSC::VM *)*((_QWORD *)this + 7);
  v28 = v7;
  v23 = 0;
  v24 = 0x800000000;
  v25 = (WTF *)((char *)v26 + 8);
  memset(v26, 0, sizeof(v26));
  v27 = 0;
  v8 = *(_DWORD *)(a3 + 12);
  if (v8 >= 9)
  {
    v23 = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v24) == 1;
    v8 = *(_DWORD *)(a3 + 12);
    if (v8)
    {
LABEL_3:
      v9 = *(WebCore::JSDOMGlobalObject ***)a3;
      v10 = 8 * v8;
      do
      {
        v11 = (objc_class *)(*v9 ? WebCore::toJS(this, (JSC::JSGlobalObject *)a2, *v9, a4) : 2);
        if (*((_DWORD *)v7 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v7) & 1) != 0)
          goto LABEL_33;
        v12 = v24;
        if ((_DWORD)v24 != HIDWORD(v24) && (v25 != (WTF *)((char *)v26 + 8) ? (v13 = v25 == 0) : (v13 = 1), v13))
        {
          *((_QWORD *)v25 + v24) = v11;
          LODWORD(v24) = v12 + 1;
        }
        else
        {
          v14.super.isa = v11;
          if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v24, v14) == 1)
            v23 = 1;
        }
        ++v9;
        v10 -= 8;
      }
      while (v10);
    }
  }
  else if (v8)
  {
    goto LABEL_3;
  }
  if (v23)
  {
    JSC::throwOutOfMemoryError();
  }
  else
  {
    v21 = v25;
    v22 = v24;
    v16 = a2[7];
    if (!*((_DWORD *)v16 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v16) & 1) == 0)
    {
      v17 = JSC::constructArray();
      goto LABEL_25;
    }
  }
LABEL_33:
  v17 = 0;
LABEL_25:
  v18 = *(uint64_t **)&v26[0];
  if (*(_QWORD *)&v26[0])
  {
    v21 = (WTF *)&v24;
    v20 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v26[0], (uint64_t *)&v21);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v18, v20);
  }
  if (v25 != (WTF *)((char *)v26 + 8) && v25)
    WTF::fastFree(v25, v15);
  return v17;
}

uint64_t WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLInterface<WebCore::WebAnimation>>>::convert<WTF::RefPtr<WebCore::WebAnimation,WTF::RawPtrTraits<WebCore::WebAnimation>,WTF::DefaultRefDerefTraits<WebCore::WebAnimation>>,0ul>(uint64_t a1, JSC::VM *a2, uint64_t a3)
{
  JSC::VM *v6;
  unsigned int v7;
  _DWORD **v8;
  uint64_t v9;
  objc_class *v10;
  int v11;
  BOOL v12;
  JSValue v13;
  void *v14;
  JSC::VM *v15;
  uint64_t v16;
  uint64_t *v17;
  _QWORD *v19;
  WTF *v20;
  int v21;
  BOOL v22;
  uint64_t v23;
  WTF *v24;
  _OWORD v25[4];
  uint64_t v26;
  JSC::VM *v27;

  v6 = *(JSC::VM **)(a1 + 56);
  v27 = v6;
  v22 = 0;
  v23 = 0x800000000;
  v24 = (WTF *)((char *)v25 + 8);
  memset(v25, 0, sizeof(v25));
  v26 = 0;
  v7 = *(_DWORD *)(a3 + 12);
  if (v7 >= 9)
  {
    v22 = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v23) == 1;
    v7 = *(_DWORD *)(a3 + 12);
    if (v7)
    {
LABEL_3:
      v8 = *(_DWORD ***)a3;
      v9 = 8 * v7;
      do
      {
        v10 = (objc_class *)(*v8 ? WebCore::wrap<WebCore::WebAnimation>(a1, a2, *v8) : 2);
        if (*((_DWORD *)v6 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) != 0)
          goto LABEL_33;
        v11 = v23;
        if ((_DWORD)v23 != HIDWORD(v23) && (v24 != (WTF *)((char *)v25 + 8) ? (v12 = v24 == 0) : (v12 = 1), v12))
        {
          *((_QWORD *)v24 + v23) = v10;
          LODWORD(v23) = v11 + 1;
        }
        else
        {
          v13.super.isa = v10;
          if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v23, v13) == 1)
            v22 = 1;
        }
        ++v8;
        v9 -= 8;
      }
      while (v9);
    }
  }
  else if (v7)
  {
    goto LABEL_3;
  }
  if (v22)
  {
    JSC::throwOutOfMemoryError();
  }
  else
  {
    v20 = v24;
    v21 = v23;
    v15 = (JSC::VM *)*((_QWORD *)a2 + 7);
    if (!*((_DWORD *)v15 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) == 0)
    {
      v16 = JSC::constructArray();
      goto LABEL_25;
    }
  }
LABEL_33:
  v16 = 0;
LABEL_25:
  v17 = *(uint64_t **)&v25[0];
  if (*(_QWORD *)&v25[0])
  {
    v20 = (WTF *)&v23;
    v19 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v25[0], (uint64_t *)&v20);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v17, v19);
  }
  if (v24 != (WTF *)((char *)v25 + 8) && v24)
    WTF::fastFree(v24, v14);
  return v16;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJPN7WebCore7ElementENS8_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *WebCore::toJSNewlyCreated<WebCore::IDLInterface<WebCore::XPathExpression>,WebCore::ExceptionOr<WTF::Ref<WebCore::XPathExpression,WTF::RawPtrTraits<WebCore::XPathExpression>,WTF::DefaultRefDerefTraits<WebCore::XPathExpression>>>>(JSC *this, uint64_t a2, JSC::VM **a3, unsigned __int8 *a4)
{
  int v4;
  WTF *v5;
  void *v6;
  unint64_t v7;
  WTF *v8;
  uint64_t v10;
  JSC::JSGlobalObject *v13;
  WTF::StringImpl *v14;
  JSValue v15;
  uint64_t v16;
  _DWORD **v17;
  WTF *v18;
  WTF::StringImpl *v19;

  v4 = *((_DWORD *)a4 + 4);
  if (!v4)
  {
    v5 = *(WTF **)a4;
    *(_QWORD *)a4 = 0;
    v18 = v5;
    v7 = WebCore::createWrapper<WebCore::XPathExpression,WebCore::XPathExpression>(a2, &v18);
    v8 = v18;
    v18 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 1)
      {
        v10 = *((_QWORD *)v8 + 1);
        *((_QWORD *)v8 + 1) = 0;
        if (v10)
          (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
        WTF::fastFree(v8, v6);
      }
      else
      {
        --*(_DWORD *)v8;
      }
    }
    return (_DWORD *)v7;
  }
  if (v4 == 1)
  {
    v13 = (JSC::JSGlobalObject *)*a4;
    LOBYTE(v18) = *a4;
    v14 = (WTF::StringImpl *)*((_QWORD *)a4 + 1);
    *((_QWORD *)a4 + 1) = 0;
    v19 = v14;
    if (!*((_QWORD *)*a3 + 2))
    {
      v15.super.isa = (Class)WebCore::createDOMException(this, v13, (JSC::JSGlobalObject *)&v19);
      JSC::VM::throwException(*a3, this, v15);
      v14 = v19;
    }
    v19 = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v13);
      else
        *(_DWORD *)v14 -= 2;
    }
    return 0;
  }
  v16 = std::__throw_bad_variant_access[abi:sn180100]();
  return _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore15XPathNSResolverENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(v16, v17);
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore15XPathNSResolverENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[2];
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore15XPathExpressionENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF **a2)
{
  WTF *v2;
  uint64_t v3;

  v2 = *a2;
  *a2 = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = *((_QWORD *)v2 + 1);
      *((_QWORD *)v2 + 1) = 0;
      if (v3)
        (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
      WTF::fastFree(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore15XPathExpressionENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore15XPathNSResolverENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[2];
  }
  return result;
}

WebCore::XPathResult *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11XPathResultENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WebCore::XPathResult **a2)
{
  WebCore::XPathResult *result;
  WTF *v3;
  void *v4;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
    {
      WebCore::XPathResult::~XPathResult(result, a2);
      return (WebCore::XPathResult *)WTF::fastFree(v3, v4);
    }
    else
    {
      --*(_DWORD *)result;
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11XPathResultENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void WebCore::CustomStateSet::~CustomStateSet(WebCore::CustomStateSet *this, void *a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  WTF *v6;
  uint64_t v7;
  WTF *v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  WTF *v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *((_QWORD *)this + 5);
  *((_QWORD *)this + 5) = 0;
  if (v3)
  {
    do
    {
      v4 = __ldaxr((unsigned int *)v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, (unsigned int *)v3));
    if (!v5)
    {
      atomic_store(1u, (unsigned int *)v3);
      v10 = *(unsigned int *)(v3 + 28);
      if ((_DWORD)v10)
      {
        v13 = v3;
        WTF::VectorDestructor<true,std::pair<WTF::AtomString,WTF::Vector<WTF::RefPtr<WebCore::RegisteredEventListener,WTF::RawPtrTraits<WebCore::RegisteredEventListener>,WTF::DefaultRefDerefTraits<WebCore::RegisteredEventListener>>,1ul,WTF::CrashOnOverflow,2ul,WTF::FastMalloc>>>::destruct(*(WTF::StringImpl **)(v3 + 16), (WTF::StringImpl *)(*(_QWORD *)(v3 + 16) + 32 * v10));
        v3 = v13;
      }
      v11 = *(WTF **)(v3 + 16);
      if (v11)
      {
        *(_QWORD *)(v3 + 16) = 0;
        *(_DWORD *)(v3 + 24) = 0;
        v12 = v3;
        WTF::fastFree(v11, a2);
        v3 = v12;
      }
      WTF::fastFree((WTF *)v3, a2);
    }
  }
  v6 = (WTF *)*((_QWORD *)this + 3);
  while (v6)
  {
    v8 = v6;
    v6 = (WTF *)*((_QWORD *)v6 + 2);
    v9 = *(WTF::StringImpl **)v8;
    *(_QWORD *)v8 = 0;
    if (v9)
    {
      if (*(_DWORD *)v9 == 2)
        WTF::StringImpl::destroy(v9, (WTF::StringImpl *)a2);
      else
        *(_DWORD *)v9 -= 2;
    }
    WTF::fastFree(v8, a2);
  }
  v7 = *((_QWORD *)this + 2);
  if (v7)
    WTF::fastFree((WTF *)(v7 - 16), a2);
  if (*(_QWORD *)this)
  {
    *(_QWORD *)(*(_QWORD *)this + 8) = 3;
    *(_QWORD *)this = 0;
  }
}

uint64_t WebCore::JSCustomStateSet::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WTF::RefCounted<WebCore::DOMApplicationCache>::deref(uint64_t result, void *a2)
{
  WebCore::EventTarget *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  bmalloc::api *v6;
  void *v7;
  uint64_t v8;
  WTF *v9;
  WTF *v10;

  if (*(_DWORD *)result == 1)
  {
    v2 = (WebCore::EventTarget *)(result - 24);
    v3 = *(unsigned int **)(result + 8);
    *(_QWORD *)(result + 8) = 0;
    if (v3)
    {
      do
      {
        v4 = __ldaxr(v3);
        v5 = v4 - 1;
      }
      while (__stlxr(v5, v3));
      if (!v5)
      {
        atomic_store(1u, v3);
        v10 = (WTF *)v3;
        v8 = v3[7];
        if ((_DWORD)v8)
          WTF::VectorDestructor<true,std::pair<WTF::AtomString,WTF::Vector<WTF::RefPtr<WebCore::RegisteredEventListener,WTF::RawPtrTraits<WebCore::RegisteredEventListener>,WTF::DefaultRefDerefTraits<WebCore::RegisteredEventListener>>,1ul,WTF::CrashOnOverflow,2ul,WTF::FastMalloc>>>::destruct(*((WTF::StringImpl **)v10 + 2), (WTF::StringImpl *)(*((_QWORD *)v10 + 2) + 32 * v8));
        v9 = (WTF *)*((_QWORD *)v10 + 2);
        if (v9)
        {
          *((_QWORD *)v10 + 2) = 0;
          *((_DWORD *)v10 + 6) = 0;
          WTF::fastFree(v9, a2);
        }
        WTF::fastFree(v10, a2);
      }
    }
    WebCore::EventTarget::~EventTarget(v2, a2);
    return bmalloc::api::isoDeallocate(v6, v7);
  }
  else
  {
    --*(_DWORD *)result;
  }
  return result;
}

uint64_t WebCore::JSDOMApplicationCache::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSDOMAudioSession::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSDOMCache::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

