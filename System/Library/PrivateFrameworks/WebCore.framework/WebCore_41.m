uint64_t WebCore::JSWebTransport::destroy(uint64_t this, JSC::JSCell *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  int v9;
  uint64_t v10;

  v2 = *(_QWORD *)(this + 24);
  *(_QWORD *)(this + 24) = 0;
  if (!v2)
    return this;
  v3 = *(_QWORD *)(v2 + 8);
  if (__ldaxr((unsigned __int8 *)v3))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v3))
  {
    goto LABEL_6;
  }
  this = MEMORY[0x19AEA534C](v3, a2);
LABEL_6:
  v5 = *(_QWORD *)(v3 + 8);
  v6 = v5 - 1;
  *(_QWORD *)(v3 + 8) = v5 - 1;
  if (v5 == 1)
  {
    v10 = *(_QWORD *)(v3 + 16);
    v7 = *(_QWORD *)(v3 + 24);
    *(_QWORD *)(v3 + 24) = 0;
    v8 = v10 != 0;
  }
  else
  {
    v7 = 0;
    v8 = 1;
  }
  v9 = __ldxr((unsigned __int8 *)v3);
  if (v9 != 1)
  {
    __clrex();
LABEL_13:
    this = WTF::Lock::unlockSlow((WTF::Lock *)v3);
    if (v6)
      return this;
    goto LABEL_14;
  }
  if (__stlxr(0, (unsigned __int8 *)v3))
    goto LABEL_13;
  if (v6)
    return this;
LABEL_14:
  if (v7)
    this = (*(uint64_t (**)(uint64_t, JSC::JSCell *))(*(_QWORD *)v7 + 8))(v7, a2);
  if (!v8)
    return WTF::fastFree((WTF *)v3, a2);
  return this;
}

uint64_t WebCore::JSWebTransport::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSWebTransportPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSWebTransportPrototype::create(WebCore::JSWebTransportPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<13u>(this, (uint64_t)&WebCore::JSWebTransport::s_info, (uint64_t)&WebCore::JSWebTransportPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebTransport>,(WebCore::DOMConstructorID)287>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2296);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructor<WebCore::JSWebTransport>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000001, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSWebTransport::s_info + ~((_QWORD)&WebCore::JSWebTransport::s_info << 32)) ^ (((unint64_t)&WebCore::JSWebTransport::s_info + ~((_QWORD)&WebCore::JSWebTransport::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSWebTransport::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSWebTransport::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSWebTransportPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSWebTransportPrototype::create((WebCore::JSWebTransportPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSWebTransport::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSWebTransport::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2296) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsWebTransportConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSWebTransportPrototype::s_info != (char **)(16
                                                            * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebTransport>,(WebCore::DOMConstructorID)287>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsWebTransport_ready(JSC::JSGlobalObject *a1, uint64_t a2, WTF::StringImpl *a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;

  if ((a2 & 0xFFFE000000000002) != 0)
    return WebCore::rejectPromiseWithGetterTypeError(a1, (JSC **)&WebCore::JSWebTransport::s_info, a3);
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSWebTransport::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSWebTransport::s_info && v5 != 0);
  }
  if (!v4)
    return WebCore::rejectPromiseWithGetterTypeError(a1, (JSC **)&WebCore::JSWebTransport::s_info, a3);
  v8 = **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 112) + 24);
  if ((v8 & 0xFFFE000000000002) != 0)
    return 0;
  if (*(_BYTE *)(v8 + 5) == 68)
    return **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 112) + 24);
  return 0;
}

uint64_t WebCore::jsWebTransport_reliability(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;

  v2 = *(unsigned __int8 *)(*((_QWORD *)a2 + 3) + 128);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = (uint64_t *)(v3 + 41968);
  if ((byte_1EE3371E4 & 1) == 0)
  {
    dword_1ECE7A7F0 += 2;
    byte_1EE3371E4 = 1;
    dword_1ECE7A810 += 2;
    qword_1EE3373B0 = (uint64_t)&dword_1ECE7A7F0;
    unk_1EE3373B8 = &dword_1ECE7A810;
    dword_1ECE7A830 += 2;
    qword_1EE3373C0 = (uint64_t)&dword_1ECE7A830;
  }
  v5 = *(_QWORD *)&_MergedGlobals_786[8 * v2 + 464];
  if (!v5)
    return *v4;
  v6 = *(_DWORD *)v5;
  v7 = *(_DWORD *)(v5 + 4);
  *(_DWORD *)v5 += 2;
  if (v7)
  {
    if (v7 != 1)
    {
LABEL_6:
      v8 = *(_QWORD *)(v3 + 64760);
      if (!v8 || v5 != *(_QWORD *)(v8 + 8))
      {
        v8 = JSC::jsStringWithCacheSlowCase();
        v6 = *(_DWORD *)v5 - 2;
      }
      goto LABEL_9;
    }
    v10 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_6;
      v11 = v12;
    }
    v8 = *(_QWORD *)(v3 + 8 * v11 + 42216);
  }
  else
  {
    v8 = *v4;
  }
LABEL_9:
  if (v6)
    *(_DWORD *)v5 = v6;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v5, a2);
  return v8;
}

uint64_t WebCore::jsWebTransport_congestionControl(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;

  v2 = *(unsigned __int8 *)(*((_QWORD *)a2 + 3) + 129);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = (uint64_t *)(v3 + 41968);
  if ((byte_1EE3371E2 & 1) == 0)
  {
    dword_1ECE7A750 += 2;
    byte_1EE3371E2 = 1;
    dword_1ECE7A770 += 2;
    qword_1EE337398 = (uint64_t)&dword_1ECE7A750;
    unk_1EE3373A0 = &dword_1ECE7A770;
    dword_1ECE7A790 += 2;
    qword_1EE3373A8 = (uint64_t)&dword_1ECE7A790;
  }
  v5 = *(_QWORD *)&_MergedGlobals_786[8 * v2 + 440];
  if (!v5)
    return *v4;
  v6 = *(_DWORD *)v5;
  v7 = *(_DWORD *)(v5 + 4);
  *(_DWORD *)v5 += 2;
  if (v7)
  {
    if (v7 != 1)
    {
LABEL_6:
      v8 = *(_QWORD *)(v3 + 64760);
      if (!v8 || v5 != *(_QWORD *)(v8 + 8))
      {
        v8 = JSC::jsStringWithCacheSlowCase();
        v6 = *(_DWORD *)v5 - 2;
      }
      goto LABEL_9;
    }
    v10 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_6;
      v11 = v12;
    }
    v8 = *(_QWORD *)(v3 + 8 * v11 + 42216);
  }
  else
  {
    v8 = *v4;
  }
LABEL_9:
  if (v6)
    *(_DWORD *)v5 = v6;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v5, a2);
  return v8;
}

uint64_t WebCore::jsWebTransport_closed(JSC::JSGlobalObject *a1, uint64_t a2, WTF::StringImpl *a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;

  if ((a2 & 0xFFFE000000000002) != 0)
    return WebCore::rejectPromiseWithGetterTypeError(a1, (JSC **)&WebCore::JSWebTransport::s_info, a3);
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSWebTransport::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSWebTransport::s_info && v5 != 0);
  }
  if (!v4)
    return WebCore::rejectPromiseWithGetterTypeError(a1, (JSC **)&WebCore::JSWebTransport::s_info, a3);
  v8 = **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 136) + 24);
  if ((v8 & 0xFFFE000000000002) != 0)
    return 0;
  if (*(_BYTE *)(v8 + 5) == 68)
    return **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 136) + 24);
  return 0;
}

uint64_t WebCore::jsWebTransport_draining(JSC::JSGlobalObject *a1, uint64_t a2, WTF::StringImpl *a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;

  if ((a2 & 0xFFFE000000000002) != 0)
    return WebCore::rejectPromiseWithGetterTypeError(a1, (JSC **)&WebCore::JSWebTransport::s_info, a3);
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSWebTransport::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSWebTransport::s_info && v5 != 0);
  }
  if (!v4)
    return WebCore::rejectPromiseWithGetterTypeError(a1, (JSC **)&WebCore::JSWebTransport::s_info, a3);
  v8 = **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 152) + 24);
  if ((v8 & 0xFFFE000000000002) != 0)
    return 0;
  if (*(_BYTE *)(v8 + 5) == 68)
    return **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a2 + 24) + 152) + 24);
  return 0;
}

unint64_t WebCore::jsWebTransport_datagrams(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WTF *v3;
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  WTF *v10;
  int v11;
  uint64_t v12;
  unint64_t SlowCase;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char **v20;
  int v21;
  unint64_t v22;
  uint64_t *v23;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v25;
  JSC::Structure *v26;
  JSC::JSCell *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  WTF *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  WTF *v43;
  void *v44;
  int v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *Allocator;
  unint64_t v51;
  _QWORD *v52;
  WTF *v53;

  v2 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v3 = *(WTF **)(*(_QWORD *)(a2 + 24) + 168);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 3320) + 32);
  if (v4)
  {
    v5 = *(_DWORD *)(v4 - 8);
    v6 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v7 = 9 * ((v6 + ~(v6 << 13)) ^ ((v6 + ~(v6 << 13)) >> 8));
    v8 = (v7 ^ (v7 >> 15)) + ~((v7 ^ (v7 >> 15)) << 27);
    v9 = v5 & ((v8 >> 31) ^ v8);
    v10 = *(WTF **)(v4 + 16 * v9);
    if (v10 == v3)
    {
LABEL_6:
      v12 = *(_QWORD *)(v4 + 16 * v9 + 8);
      if (v12)
      {
        if ((*(_BYTE *)(v12 + 8) & 3) == 0)
        {
          SlowCase = *(_QWORD *)v12;
          if (*(_QWORD *)v12)
            return SlowCase;
        }
      }
    }
    else
    {
      v11 = 1;
      while (v10)
      {
        v9 = ((_DWORD)v9 + v11) & v5;
        v10 = *(WTF **)(v4 + 16 * v9);
        ++v11;
        if (v10 == v3)
          goto LABEL_6;
      }
    }
  }
  ++*(_DWORD *)v3;
  v14 = *(_QWORD *)(v2 + 3296);
  if (v14)
  {
    v15 = *(_DWORD *)(v14 - 8);
    v16 = ((unint64_t)&WebCore::JSWebTransportDatagramDuplexStream::s_info
         + ~((_QWORD)&WebCore::JSWebTransportDatagramDuplexStream::s_info << 32)) ^ (((unint64_t)&WebCore::JSWebTransportDatagramDuplexStream::s_info
                                                                                    + ~((_QWORD)&WebCore::JSWebTransportDatagramDuplexStream::s_info << 32)) >> 22);
    v17 = 9 * ((v16 + ~(v16 << 13)) ^ ((v16 + ~(v16 << 13)) >> 8));
    v18 = (v17 ^ (v17 >> 15)) + ~((v17 ^ (v17 >> 15)) << 27);
    v19 = v15 & ((v18 >> 31) ^ v18);
    v20 = *(char ***)(v14 + 16 * v19);
    if (v20 == &WebCore::JSWebTransportDatagramDuplexStream::s_info)
    {
LABEL_14:
      v22 = *(_QWORD *)(v14 + 16 * v19 + 8);
      if (v22)
        goto LABEL_16;
    }
    else
    {
      v21 = 1;
      while (v20)
      {
        v19 = ((_DWORD)v19 + v21) & v15;
        v20 = *(char ***)(v14 + 16 * v19);
        ++v21;
        if (v20 == &WebCore::JSWebTransportDatagramDuplexStream::s_info)
          goto LABEL_14;
      }
    }
  }
  v23 = *(uint64_t **)(v2 + 56);
  Structure = WebCore::JSWebTransportDatagramDuplexStreamPrototype::createStructure(v23, v2, *(JSC::JSCell **)(v2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v27 = (JSC::JSCell *)WebCore::JSWebTransportDatagramDuplexStreamPrototype::create((WebCore::JSWebTransportDatagramDuplexStreamPrototype *)v23, Structure, v25, v26);
  v28 = WebCore::JSWebTransportDatagramDuplexStream::createStructure(v23, v2, v27);
  v22 = WebCore::cacheDOMStructure((JSCell *)v2, v28, (uint64_t)&WebCore::JSWebTransportDatagramDuplexStream::s_info);
LABEL_16:
  v29 = *(_QWORD *)(v2 + 56);
  v30 = *(_QWORD *)(v29 + 41456);
  v31 = *(_QWORD *)(v30 + 23536);
  v32 = *(_QWORD **)(v31 + 2336);
  if (v32)
    goto LABEL_36;
  v33 = *(_QWORD *)(v30 + 22648);
  if (__ldaxr((unsigned __int8 *)v33))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v33))
  {
    goto LABEL_21;
  }
  MEMORY[0x19AEA534C](v33);
LABEL_21:
  v35 = *(_QWORD *)(v33 + 2824);
  if (!*(_QWORD *)(v35 + 2336))
  {
    v36 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v53, "IsoSpace T");
    v52 = 0;
    MEMORY[0x19AEA3204](v36, &v53, v29 + 192, v29 + 1872, 32, 8, &v52);
    v38 = (uint64_t)v52;
    v52 = 0;
    if (v38)
      (*(void (**)(uint64_t))(*(_QWORD *)v38 + 8))(v38);
    v39 = v53;
    v53 = 0;
    if (v39)
    {
      if (*(_DWORD *)v39 == 1)
        WTF::fastFree(v39, v37);
      else
        --*(_DWORD *)v39;
    }
    v40 = *(_QWORD *)(v35 + 2336);
    *(_QWORD *)(v35 + 2336) = v36;
    if (v40)
      (*(void (**)(uint64_t))(*(_QWORD *)v40 + 8))(v40);
  }
  v32 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v42 = *(_QWORD *)(v31 + 2336);
  *(_QWORD *)(v31 + 2336) = v32;
  if (v42)
  {
    v43 = (WTF *)MEMORY[0x19AEA3528](v42, v41);
    WTF::fastFree(v43, v44);
  }
  v45 = __ldxr((unsigned __int8 *)v33);
  if (v45 != 1)
  {
    __clrex();
    goto LABEL_35;
  }
  if (__stlxr(0, (unsigned __int8 *)v33))
LABEL_35:
    WTF::Lock::unlockSlow((WTF::Lock *)v33);
LABEL_36:
  SlowCase = v32[3];
  if (SlowCase >= v32[4])
  {
    SlowCase = v32[5];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_38;
    }
    v51 = *(_QWORD *)(SlowCase + 8) ^ v32[6];
    v32[4] = SlowCase + HIDWORD(v51);
    v32[5] = SlowCase + (int)v51;
  }
  v32[3] = SlowCase + 32;
LABEL_38:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v22);
  *(_QWORD *)(SlowCase + 24) = v3;
  if (*(_BYTE *)(v29 + 755))
    __dmb(0xAu);
  v46 = *(_QWORD *)(v2 + 3320);
  if ((byte_1EE337360 & 1) == 0)
  {
    qword_1EE337358 = (uint64_t)&off_1E3337130;
    byte_1EE337360 = 1;
  }
  v53 = v3;
  if ((SlowCase & 8) != 0)
    v47 = (SlowCase - 112) | 1;
  else
    v47 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v47 & 1) != 0)
    v48 = v47 + 47;
  else
    v48 = *(_QWORD *)v47 + 32;
  Allocator = *(_QWORD **)(v48 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v48 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE337358;
  Allocator[2] = v46;
  v52 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v46 + 32), (uint64_t *)&v53, (uint64_t *)&v52);
  if (v52)
    v52[1] = 3;
  return SlowCase;
}

unint64_t WebCore::jsWebTransport_incomingBidirectionalStreams(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::ReadableStream>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WTF **)(*(_QWORD *)(a2 + 24) + 88));
}

unint64_t WebCore::jsWebTransport_incomingUnidirectionalStreams(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::ReadableStream>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WTF **)(*(_QWORD *)(a2 + 24) + 96));
}

uint64_t WebCore::JSWebTransportOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(_QWORD **)(*(_QWORD *)a2 + 24);
  v6 = v5[3];
  if (!v6)
    return 0;
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7 || *(_BYTE *)(v7 + 180))
    return 0;
  if (v5[4] || (result = (*(uint64_t (**)(_QWORD *))(v5[2] + 64))(v5 + 2), (_DWORD)result))
  {
    if (a5)
    {
      *a5 = "ActiveDOMObject with pending activity";
      a5[1] = 38;
    }
    return 1;
  }
  return result;
}

uint64_t WebCore::JSWebTransportOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  int v35;
  uint64_t v36;

  v4 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v5 = *(_QWORD *)(v4 + 8);
  if (__ldaxr((unsigned __int8 *)v5))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v5))
  {
    goto LABEL_5;
  }
  result = MEMORY[0x19AEA534C](v5);
LABEL_5:
  ++*(_QWORD *)(v5 + 8);
  v8 = __ldxr((unsigned __int8 *)v5);
  if (v8 != 1)
  {
    __clrex();
    goto LABEL_9;
  }
  if (__stlxr(0, (unsigned __int8 *)v5))
LABEL_9:
    result = WTF::Lock::unlockSlow((WTF::Lock *)v5);
  v11 = *(_QWORD *)(a3 + 32);
  v10 = (uint64_t *)(a3 + 32);
  v9 = v11;
  if (v11)
  {
    v12 = *(_DWORD *)(v9 - 8);
    v13 = (~(v4 << 32) + v4) ^ ((unint64_t)(~(v4 << 32) + v4) >> 22);
    v14 = 9 * ((v13 + ~(v13 << 13)) ^ ((v13 + ~(v13 << 13)) >> 8));
    v15 = (v14 ^ (v14 >> 15)) + ~((v14 ^ (v14 >> 15)) << 27);
    v16 = v12 & ((v15 >> 31) ^ v15);
    v17 = *(_QWORD *)(v9 + 16 * v16);
    if (v17 != v4)
    {
      v18 = 1;
      while (v17)
      {
        v16 = ((_DWORD)v16 + v18) & v12;
        v17 = *(_QWORD *)(v9 + 16 * v16);
        ++v18;
        if (v17 == v4)
          goto LABEL_15;
      }
      v16 = *(unsigned int *)(v9 - 4);
    }
LABEL_15:
    if (v16 != *(_DWORD *)(v9 - 4))
    {
      v19 = (_QWORD *)(v9 + 16 * v16);
      *v19 = -1;
      v22 = v19[1];
      v21 = v19 + 1;
      v20 = v22;
      if (v22)
      {
        *(_QWORD *)(v20 + 8) = 3;
        *v21 = 0;
      }
      ++*(_DWORD *)(*v10 - 16);
      v23 = *v10;
      if (*v10)
        v24 = *(_DWORD *)(v23 - 12) - 1;
      else
        v24 = -1;
      *(_DWORD *)(v23 - 12) = v24;
      v25 = *v10;
      if (*v10)
      {
        v26 = 6 * *(_DWORD *)(v25 - 12);
        v27 = *(_DWORD *)(v25 - 4);
        if (v26 < v27 && v27 >= 9)
          result = (uint64_t)WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v10, v27 >> 1, 0);
      }
    }
  }
  v29 = *(_QWORD *)(v4 + 8);
  if (__ldaxr((unsigned __int8 *)v29))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v29))
  {
    goto LABEL_30;
  }
  result = MEMORY[0x19AEA534C](v29);
LABEL_30:
  v31 = *(_QWORD *)(v29 + 8);
  v32 = v31 - 1;
  *(_QWORD *)(v29 + 8) = v31 - 1;
  if (v31 == 1)
  {
    v36 = *(_QWORD *)(v29 + 16);
    v33 = *(_QWORD *)(v29 + 24);
    *(_QWORD *)(v29 + 24) = 0;
    v34 = v36 != 0;
  }
  else
  {
    v33 = 0;
    v34 = 1;
  }
  v35 = __ldxr((unsigned __int8 *)v29);
  if (v35 != 1)
  {
    __clrex();
LABEL_37:
    result = WTF::Lock::unlockSlow((WTF::Lock *)v29);
    if (v32)
      return result;
    goto LABEL_38;
  }
  if (__stlxr(0, (unsigned __int8 *)v29))
    goto LABEL_37;
  if (v32)
    return result;
LABEL_38:
  if (v33)
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
  if (!v34)
    return WTF::fastFree((WTF *)v29, a2);
  return result;
}

WebCore::CreateInternalTransformStreamResult *WebCore::JSWebTransportBidirectionalStream::destroy(WebCore::JSWebTransportBidirectionalStream *this, JSC::JSCell *a2)
{
  WebCore::CreateInternalTransformStreamResult *result;
  WTF *v4;
  void *v5;

  result = (WebCore::CreateInternalTransformStreamResult *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
    {
      WebCore::CreateInternalTransformStreamResult::~CreateInternalTransformStreamResult(result, a2);
      return (WebCore::CreateInternalTransformStreamResult *)WTF::fastFree(v4, v5);
    }
    else
    {
      --*(_DWORD *)result;
    }
  }
  return result;
}

uint64_t WebCore::JSWebTransportBidirectionalStream::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSWebTransportBidirectionalStreamPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSWebTransportBidirectionalStreamPrototype::create(WebCore::JSWebTransportBidirectionalStreamPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSWebTransportBidirectionalStream::s_info, &WebCore::JSWebTransportBidirectionalStreamPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportBidirectionalStream>,(WebCore::DOMConstructorID)288>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2304);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportBidirectionalStream>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSWebTransportBidirectionalStream::s_info
         + ~((_QWORD)&WebCore::JSWebTransportBidirectionalStream::s_info << 32)) ^ (((unint64_t)&WebCore::JSWebTransportBidirectionalStream::s_info
                                                                                   + ~((_QWORD)&WebCore::JSWebTransportBidirectionalStream::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSWebTransportBidirectionalStream::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSWebTransportBidirectionalStream::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSWebTransportBidirectionalStreamPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSWebTransportBidirectionalStreamPrototype::create((WebCore::JSWebTransportBidirectionalStreamPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSWebTransportBidirectionalStream::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSWebTransportBidirectionalStream::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2304) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsWebTransportBidirectionalStreamConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSWebTransportBidirectionalStreamPrototype::s_info != (char **)(16
                                                                               * *(unsigned int *)(16
                                                                                                 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportBidirectionalStream>,(WebCore::DOMConstructorID)288>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsWebTransportBidirectionalStream_readable(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::ReadableStream>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WTF **)(*(_QWORD *)(a2 + 24) + 8));
}

unint64_t WebCore::jsWebTransportBidirectionalStream_writable(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::WritableStream>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WTF **)(*(_QWORD *)(a2 + 24) + 16));
}

uint64_t WebCore::JSWebTransportBidirectionalStreamOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

void WebCore::JSWebTransportBidirectionalStreamOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  WebCore::CreateInternalTransformStreamResult *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WebCore::CreateInternalTransformStreamResult *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  WTF *v24;
  void *v25;

  v3 = *(WebCore::CreateInternalTransformStreamResult **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(WebCore::CreateInternalTransformStreamResult **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(WebCore::CreateInternalTransformStreamResult **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
  {
    WebCore::CreateInternalTransformStreamResult::~CreateInternalTransformStreamResult(v3, a2);
    WTF::fastFree(v24, v25);
  }
  else
  {
    --*(_DWORD *)v3;
  }
}

unint64_t WebCore::createWrapper<WebCore::WebTransportBidirectionalStream,WebCore::WebTransportBidirectionalStream>(uint64_t a1, WTF **a2)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  uint64_t *v14;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v16;
  JSC::Structure *v17;
  JSC::JSCell *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  WTF *v30;
  uint64_t v31;
  uint64_t v32;
  WTF *v33;
  void *v34;
  int v35;
  unint64_t SlowCase;
  WTF *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *Allocator;
  unint64_t v43;
  _QWORD *v44;
  WTF *v45;

  v4 = *a2;
  v5 = *(_QWORD *)(a1 + 3296);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSWebTransportBidirectionalStream::s_info
        + ~((_QWORD)&WebCore::JSWebTransportBidirectionalStream::s_info << 32)) ^ (((unint64_t)&WebCore::JSWebTransportBidirectionalStream::s_info
                                                                                  + ~((_QWORD)&WebCore::JSWebTransportBidirectionalStream::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSWebTransportBidirectionalStream::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSWebTransportBidirectionalStream::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = *(uint64_t **)(a1 + 56);
  Structure = WebCore::JSWebTransportBidirectionalStreamPrototype::createStructure(v14, a1, *(JSC::JSCell **)(a1 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v18 = (JSC::JSCell *)WebCore::JSWebTransportBidirectionalStreamPrototype::create((WebCore::JSWebTransportBidirectionalStreamPrototype *)v14, Structure, v16, v17);
  v19 = WebCore::JSWebTransportBidirectionalStream::createStructure(v14, a1, v18);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v19, (uint64_t)&WebCore::JSWebTransportBidirectionalStream::s_info);
LABEL_8:
  v20 = *(_QWORD *)(a1 + 56);
  v21 = *(_QWORD *)(v20 + 41456);
  v22 = *(_QWORD *)(v21 + 23536);
  v23 = *(_QWORD **)(v22 + 2328);
  if (v23)
    goto LABEL_28;
  v24 = *(_QWORD *)(v21 + 22648);
  if (__ldaxr((unsigned __int8 *)v24))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v24))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v24);
LABEL_13:
  v26 = *(_QWORD *)(v24 + 2824);
  if (!*(_QWORD *)(v26 + 2328))
  {
    v27 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v45, "IsoSpace T");
    v44 = 0;
    MEMORY[0x19AEA3204](v27, &v45, v20 + 192, v20 + 1872, 32, 8, &v44);
    v29 = (uint64_t)v44;
    v44 = 0;
    if (v29)
      (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
    v30 = v45;
    v45 = 0;
    if (v30)
    {
      if (*(_DWORD *)v30 == 1)
        WTF::fastFree(v30, v28);
      else
        --*(_DWORD *)v30;
    }
    v31 = *(_QWORD *)(v26 + 2328);
    *(_QWORD *)(v26 + 2328) = v27;
    if (v31)
      (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
  }
  v23 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v32 = *(_QWORD *)(v22 + 2328);
  *(_QWORD *)(v22 + 2328) = v23;
  if (v32)
  {
    v33 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v33, v34);
  }
  v35 = __ldxr((unsigned __int8 *)v24);
  if (v35 != 1)
  {
    __clrex();
    goto LABEL_27;
  }
  if (__stlxr(0, (unsigned __int8 *)v24))
LABEL_27:
    WTF::Lock::unlockSlow((WTF::Lock *)v24);
LABEL_28:
  SlowCase = v23[3];
  if (SlowCase < v23[4])
  {
LABEL_29:
    v23[3] = SlowCase + 32;
    goto LABEL_30;
  }
  SlowCase = v23[5];
  if ((SlowCase & 1) == 0)
  {
    v43 = *(_QWORD *)(SlowCase + 8) ^ v23[6];
    v23[4] = SlowCase + HIDWORD(v43);
    v23[5] = SlowCase + (int)v43;
    goto LABEL_29;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_30:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  v37 = *a2;
  *a2 = 0;
  *(_QWORD *)(SlowCase + 24) = v37;
  if (*(_BYTE *)(v20 + 755))
    __dmb(0xAu);
  v38 = *(_QWORD *)(a1 + 3320);
  if ((byte_1EE337350 & 1) == 0)
  {
    qword_1EE337348 = (uint64_t)&off_1E3337100;
    byte_1EE337350 = 1;
  }
  v45 = v4;
  if ((SlowCase & 8) != 0)
    v39 = (SlowCase - 112) | 1;
  else
    v39 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v39 & 1) != 0)
    v40 = v39 + 47;
  else
    v40 = *(_QWORD *)v39 + 32;
  Allocator = *(_QWORD **)(v40 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v40 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE337348;
  Allocator[2] = v38;
  v44 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v38 + 32), (uint64_t *)&v45, (uint64_t *)&v44);
  if (v44)
    v44[1] = 3;
  return SlowCase;
}

WebCore::WebTransportDatagramDuplexStream *WebCore::JSWebTransportDatagramDuplexStream::destroy(WebCore::JSWebTransportDatagramDuplexStream *this, JSC::JSCell *a2)
{
  WebCore::WebTransportDatagramDuplexStream *result;
  WTF *v4;
  void *v5;

  result = (WebCore::WebTransportDatagramDuplexStream *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
    {
      WebCore::WebTransportDatagramDuplexStream::~WebTransportDatagramDuplexStream(result, a2);
      return (WebCore::WebTransportDatagramDuplexStream *)WTF::fastFree(v4, v5);
    }
    else
    {
      --*(_DWORD *)result;
    }
  }
  return result;
}

uint64_t WebCore::JSWebTransportDatagramDuplexStream::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSWebTransportDatagramDuplexStreamPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSWebTransportDatagramDuplexStreamPrototype::create(WebCore::JSWebTransportDatagramDuplexStreamPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<8u>(this, (uint64_t)&WebCore::JSWebTransportDatagramDuplexStream::s_info, (uint64_t)&WebCore::JSWebTransportDatagramDuplexStreamPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportDatagramDuplexStream>,(WebCore::DOMConstructorID)289>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2312);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportDatagramDuplexStream>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSWebTransportDatagramDuplexStream::s_info
         + ~((_QWORD)&WebCore::JSWebTransportDatagramDuplexStream::s_info << 32)) ^ (((unint64_t)&WebCore::JSWebTransportDatagramDuplexStream::s_info
                                                                                    + ~((_QWORD)&WebCore::JSWebTransportDatagramDuplexStream::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSWebTransportDatagramDuplexStream::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSWebTransportDatagramDuplexStream::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSWebTransportDatagramDuplexStreamPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSWebTransportDatagramDuplexStreamPrototype::create((WebCore::JSWebTransportDatagramDuplexStreamPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSWebTransportDatagramDuplexStream::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSWebTransportDatagramDuplexStream::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2312) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsWebTransportDatagramDuplexStreamConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSWebTransportDatagramDuplexStreamPrototype::s_info != (char **)(16
                                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportDatagramDuplexStream>,(WebCore::DOMConstructorID)289>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsWebTransportDatagramDuplexStream_readable(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::ReadableStream>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WTF **)(*(_QWORD *)(a2 + 24) + 8));
}

unint64_t WebCore::jsWebTransportDatagramDuplexStream_writable(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::WritableStream>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WTF **)(*(_QWORD *)(a2 + 24) + 16));
}

unint64_t WebCore::jsWebTransportDatagramDuplexStream_maxDatagramSize(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 128);
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return *(_QWORD *)(*(_QWORD *)(a2 + 24) + 128) | 0xFFFE000000000000;
}

unint64_t WebCore::jsWebTransportDatagramDuplexStream_incomingMaxAge(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 72);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSWebTransportDatagramDuplexStream_incomingMaxAge(JSC *this, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  JSValue v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  double v15;
  double v17;
  unint64_t v18;
  WTF::StringImpl *v19;

  v4 = *((_QWORD *)this + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSWebTransportDatagramDuplexStream::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSWebTransportDatagramDuplexStream::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v18 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v18, this);
    v11 = v17;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
    return 0;
  if (v11 >= 0.0)
  {
    v15 = INFINITY;
    if (v11 != 0.0)
      v15 = v11;
    *(double *)(v10 + 72) = v15;
  }
  else
  {
    LOBYTE(v18) = 32;
    v19 = 0;
    if (!*(_QWORD *)(v4 + 16))
    {
      v12.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)0x20, (JSC::JSGlobalObject *)&v19);
      JSC::VM::throwException((JSC::VM *)v4, this, v12);
      v14 = v19;
      v19 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v13);
        else
          *(_DWORD *)v14 -= 2;
      }
    }
  }
  return 1;
}

unint64_t WebCore::jsWebTransportDatagramDuplexStream_outgoingMaxAge(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 120);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSWebTransportDatagramDuplexStream_outgoingMaxAge(JSC *this, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  JSValue v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  double v15;
  double v17;
  unint64_t v18;
  WTF::StringImpl *v19;

  v4 = *((_QWORD *)this + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSWebTransportDatagramDuplexStream::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSWebTransportDatagramDuplexStream::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v18 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v18, this);
    v11 = v17;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
    return 0;
  if (v11 >= 0.0)
  {
    v15 = INFINITY;
    if (v11 != 0.0)
      v15 = v11;
    *(double *)(v10 + 120) = v15;
  }
  else
  {
    LOBYTE(v18) = 32;
    v19 = 0;
    if (!*(_QWORD *)(v4 + 16))
    {
      v12.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)0x20, (JSC::JSGlobalObject *)&v19);
      JSC::VM::throwException((JSC::VM *)v4, this, v12);
      v14 = v19;
      v19 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v13);
        else
          *(_DWORD *)v14 -= 2;
      }
    }
  }
  return 1;
}

unint64_t WebCore::jsWebTransportDatagramDuplexStream_incomingHighWaterMark(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 64);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSWebTransportDatagramDuplexStream_incomingHighWaterMark(JSC *this, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  JSValue v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  double v15;
  double v17;
  unint64_t v18;
  WTF::StringImpl *v19;

  v4 = *((_QWORD *)this + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSWebTransportDatagramDuplexStream::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSWebTransportDatagramDuplexStream::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v18 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v18, this);
    v11 = v17;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
    return 0;
  if (v11 >= 0.0)
  {
    v15 = 1.0;
    if (v11 >= 1.0)
      v15 = v11;
    *(double *)(v10 + 64) = v15;
  }
  else
  {
    LOBYTE(v18) = 32;
    v19 = 0;
    if (!*(_QWORD *)(v4 + 16))
    {
      v12.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)0x20, (JSC::JSGlobalObject *)&v19);
      JSC::VM::throwException((JSC::VM *)v4, this, v12);
      v14 = v19;
      v19 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v13);
        else
          *(_DWORD *)v14 -= 2;
      }
    }
  }
  return 1;
}

unint64_t WebCore::jsWebTransportDatagramDuplexStream_outgoingHighWaterMark(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 112);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSWebTransportDatagramDuplexStream_outgoingHighWaterMark(JSC *this, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  JSValue v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  double v15;
  double v17;
  unint64_t v18;
  WTF::StringImpl *v19;

  v4 = *((_QWORD *)this + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSWebTransportDatagramDuplexStream::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSWebTransportDatagramDuplexStream::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v18 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v18, this);
    v11 = v17;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
    return 0;
  if (v11 >= 0.0)
  {
    v15 = 1.0;
    if (v11 >= 1.0)
      v15 = v11;
    *(double *)(v10 + 112) = v15;
  }
  else
  {
    LOBYTE(v18) = 32;
    v19 = 0;
    if (!*(_QWORD *)(v4 + 16))
    {
      v12.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)0x20, (JSC::JSGlobalObject *)&v19);
      JSC::VM::throwException((JSC::VM *)v4, this, v12);
      v14 = v19;
      v19 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v13);
        else
          *(_DWORD *)v14 -= 2;
      }
    }
  }
  return 1;
}

uint64_t WebCore::JSWebTransportDatagramDuplexStreamOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

void WebCore::JSWebTransportDatagramDuplexStreamOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  WebCore::WebTransportDatagramDuplexStream *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WebCore::WebTransportDatagramDuplexStream *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  WTF *v24;
  void *v25;

  v3 = *(WebCore::WebTransportDatagramDuplexStream **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(WebCore::WebTransportDatagramDuplexStream **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(WebCore::WebTransportDatagramDuplexStream **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
  {
    WebCore::WebTransportDatagramDuplexStream::~WebTransportDatagramDuplexStream(v3, a2);
    WTF::fastFree(v24, v25);
  }
  else
  {
    --*(_DWORD *)v3;
  }
}

unint64_t WebCore::JSDOMConstructor<WebCore::JSWebTransportError>::construct(JSC::VM **a1, uint64_t a2)
{
  JSC::JSGlobalObject *v3;
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  JSC::JSCell *v9;
  JSC::VM *v10;
  uint64_t Object;
  JSC::Structure *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  BOOL v16;
  JSC::JSGlobalObject *v17;
  JSC::VM *v18;
  uint64_t v19;
  int v20;
  const char *v21;
  int v22;
  int v23;
  int v24;
  char **v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  WTF::StringImpl *v33;
  WebCore::JSDOMGlobalObject *v34;
  WTF::StringImpl *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char **v43;
  int v44;
  unint64_t v45;
  WebCore::JSDOMException *v46;
  uint64_t v47;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v49;
  JSC::Structure *v50;
  JSC::JSCell *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  WTF *v63;
  uint64_t v64;
  uint64_t v65;
  WTF *v66;
  void *v67;
  int v68;
  unint64_t SlowCase;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  _QWORD *Allocator;
  JSC::JSCell *v74;
  JSC::JSGlobalObject *v75;
  JSC::JSObject *v76;
  JSC::JSGlobalObject *v77;
  JSC::VM *v78;
  JSC::JSObject *v79;
  JSC::Structure *v80;
  JSC::VM *FunctionRealm;
  uint64_t v82;
  unsigned int v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char **v88;
  int v89;
  uint64_t v90;
  unint64_t v91;
  WebCore::JSDOMGlobalObject *v92;
  JSC::Structure *v93;
  JSC::JSCell *v94;
  uint64_t v95;
  unint64_t SubclassStructure;
  uint64_t v97;
  JSC::VM *v99;
  double v100;
  unint64_t v101;
  int v103;
  WTF::StringImpl *v104;
  char hasExceptionsAfterHandlingTraps;
  JSC *v107;
  JSC::VM *v108;
  JSC::VM *v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  WTF::StringImpl *v113;
  int v114;
  __int16 v115;
  char v116;
  __int16 v117;
  char v118;
  JSC::VM *v119;
  JSC::VM *v120;
  _QWORD *v121;
  uint64_t v122[2];

  v3 = (JSC::JSGlobalObject *)a1;
  v4 = a1[7];
  v5 = *(_QWORD *)(a2 + 24);
  if (*(_DWORD *)(a2 + 32) == 1 || (v6 = *(_QWORD *)(a2 + 48), v6 == 10))
  {
    v7 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v7 += 2;
    v113 = v7;
    v114 = 0;
LABEL_15:
    v110 = a2;
    if ((unint64_t)(*(int *)(a2 + 32) - 3) >= 0xFFFFFFFFFFFFFFFELL
      || (v9 = *(JSC::JSCell **)(a2 + 56),
          v10 = (JSC::VM *)*((_QWORD *)v3 + 7),
          v119 = v10,
          ((unint64_t)v9 & 0xFFFFFFFFFFFFFFF7) == 2))
    {
      v16 = 0;
      goto LABEL_53;
    }
    if (((unint64_t)v9 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v9)) == 0)
    {
      JSC::throwTypeError();
      SlowCase = 0;
LABEL_120:
      v97 = 0;
      goto LABEL_121;
    }
    v12 = (JSC::Structure *)Object;
    WTF::AtomStringImpl::addLiteral();
    v13 = (WTF::StringImpl *)v122[0];
    v15 = JSC::JSObject::get(v12, v3, v122[0]);
    if (v13)
    {
      if (*(_DWORD *)v13 == 2)
        WTF::StringImpl::destroy(v13, v14);
      else
        *(_DWORD *)v13 -= 2;
    }
    if (*((_DWORD *)v10 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) != 0)
    {
LABEL_189:
      SlowCase = 0;
      goto LABEL_120;
    }
    if (v15 == 10)
    {
      v16 = 0;
      goto LABEL_48;
    }
    v17 = v3;
    v18 = (JSC::VM *)*((_QWORD *)v3 + 7);
    v120 = v18;
    v122[0] = v15;
    if ((v15 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v15 + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v122, v17);
      v19 = (uint64_t)v121;
      if (v121)
        goto LABEL_32;
      goto LABEL_153;
    }
    v19 = *(_QWORD *)(v15 + 8);
    if ((v19 & 1) != 0)
    {
      v19 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v15, v17);
      if (!v19)
      {
LABEL_31:
        v121 = (_QWORD *)v19;
        if (v19)
        {
LABEL_32:
          v20 = *(_DWORD *)(v19 + 16);
          v21 = *(const char **)(v19 + 8);
          v22 = *(_DWORD *)(v19 + 4);
          if (v21 == "session" || v22 != 7)
          {
            if (v21 != "session" || v22 != 7)
            {
              if (v21 == "stream" || v22 != 6)
              {
                if (v22 != 6 || v21 != "stream")
                  goto LABEL_38;
              }
              else if ((v20 & 4) != 0)
              {
                if (*v21 != 115 || *(_DWORD *)(v21 + 1) != 1634038388 || *(_DWORD *)(v21 + 2) != 1835099506)
                  goto LABEL_38;
              }
              else
              {
                if (*(_WORD *)v21 != 115)
                  goto LABEL_38;
                if (*(_QWORD *)(v21 + 4) != 0x6D006100650072 || *(_QWORD *)(v21 + 2) != 0x61006500720074)
                  goto LABEL_38;
              }
              v25 = &off_1E33366B8;
              goto LABEL_42;
            }
          }
          else
          {
            if ((v20 & 4) != 0)
            {
              if (*v21 != 115 || *(_DWORD *)(v21 + 1) != 1769173861 || *(_DWORD *)(v21 + 3) != 1852795251)
                goto LABEL_38;
              goto LABEL_41;
            }
            if (*(_WORD *)v21 != 115)
            {
LABEL_38:
              v23 = 0;
              v24 = 0;
              goto LABEL_43;
            }
            v23 = 0;
            if (*(_QWORD *)(v21 + 2) != 0x69007300730065)
            {
              v24 = 0;
              goto LABEL_43;
            }
            v24 = 0;
            if (*(_QWORD *)(v21 + 6) != 0x6E006F00690073)
            {
LABEL_43:
              v121 = 0;
              if (*(_DWORD *)v19 == 2)
                WTF::StringImpl::destroy((WTF::StringImpl *)v19, v14);
              else
                *(_DWORD *)v19 -= 2;
              goto LABEL_45;
            }
          }
LABEL_41:
          v25 = &WebCore::parseEnumerationFromString<WebCore::WebTransportErrorSource>(WTF::String const&)::mappings;
LABEL_42:
          v24 = *((unsigned __int8 *)v25 + 16);
          v23 = 1;
          goto LABEL_43;
        }
LABEL_153:
        v24 = 0;
        v23 = 0;
LABEL_45:
        if (*((_DWORD *)v18 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v18) & 1) != 0)
          goto LABEL_189;
        if (!v23)
        {
          JSC::throwTypeError();
          goto LABEL_189;
        }
        v16 = v24 != 0;
        v3 = v17;
LABEL_48:
        WTF::AtomStringImpl::addLiteral();
        v26 = (WTF::StringImpl *)v122[0];
        v28 = JSC::JSObject::get(v12, v3, v122[0]);
        if (v26)
        {
          if (*(_DWORD *)v26 == 2)
            WTF::StringImpl::destroy(v26, v27);
          else
            *(_DWORD *)v26 -= 2;
        }
        if (*((_DWORD *)v10 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) != 0)
          goto LABEL_189;
        if ((v28 | 8) != 0xA)
        {
          v122[0] = v28;
          if (v28 < 0xFFFE000000000000 || (v28 & 0x80000000) != 0)
          {
            v99 = (JSC::VM *)*((_QWORD *)v3 + 7);
            if (v28 >= 0xFFFE000000000000)
            {
              v100 = (double)(int)v28;
            }
            else if (v28 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v122, v3);
            }
            else
            {
              *(_QWORD *)&v100 = v28 - 0x2000000000000;
            }
            if (*((_DWORD *)v99 + 20))
            {
              v109 = *(JSC::VM **)&v100;
              hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v99);
              v100 = *(double *)&v109;
              if ((hasExceptionsAfterHandlingTraps & 1) != 0)
                goto LABEL_189;
            }
            if (v100 >= 4294967300.0)
            {
              LODWORD(v28) = -1;
            }
            else if (v100 <= 0.0)
            {
              LODWORD(v28) = 0;
            }
            else
            {
              LODWORD(v28) = v100;
            }
          }
          v29 = v28 | 0x100000000;
LABEL_54:
          LOBYTE(v111) = v16;
          *(_WORD *)((char *)&v111 + 1) = v117;
          BYTE3(v111) = v118;
          HIDWORD(v111) = v29;
          LOBYTE(v112) = BYTE4(v29);
          *(_WORD *)((char *)&v112 + 1) = v115;
          HIBYTE(v112) = v116;
          v113 = 0;
          v30 = v111;
          v31 = v112;
          v32 = WTF::fastMalloc((WTF *)0x30);
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          *(_DWORD *)(v32 + 8) = 1;
          *(_QWORD *)v32 = off_1E334F098;
          *(_BYTE *)(v32 + 12) = 0;
          v35 = (WTF::StringImpl *)v122[0];
          if (v122[0])
            *(_DWORD *)v122[0] += 2;
          *(_QWORD *)(v32 + 16) = v35;
          if (v7)
            *(_DWORD *)v7 += 2;
          *(_QWORD *)(v32 + 24) = v7;
          v122[0] = 0;
          if (v35)
          {
            if (*(_DWORD *)v35 == 2)
              WTF::StringImpl::destroy(v35, v33);
            else
              *(_DWORD *)v35 -= 2;
          }
          *(_QWORD *)v32 = off_1E336EFC0;
          *(_QWORD *)(v32 + 32) = v30;
          *(_DWORD *)(v32 + 40) = v31;
          if (v7)
          {
            if (*(_DWORD *)v7 == 2)
            {
              WTF::StringImpl::destroy(v7, v33);
              if (*(void (***)(WebCore::WebTransportError *__hidden))v32 != off_1E336EFC0)
              {
                __break(0xC471u);
                JUMPOUT(0x195101CD0);
              }
            }
            else
            {
              *(_DWORD *)v7 -= 2;
            }
          }
          v107 = v3;
          v36 = *(_QWORD *)(v5 + 40);
          v37 = *(_QWORD *)(v36 + 3296);
          if (v37)
          {
            v38 = *(_DWORD *)(v37 - 8);
            v39 = ((unint64_t)&WebCore::JSWebTransportError::s_info
                 + ~((_QWORD)&WebCore::JSWebTransportError::s_info << 32)) ^ (((unint64_t)&WebCore::JSWebTransportError::s_info
                                                                             + ~((_QWORD)&WebCore::JSWebTransportError::s_info << 32)) >> 22);
            v40 = 9 * ((v39 + ~(v39 << 13)) ^ ((v39 + ~(v39 << 13)) >> 8));
            v41 = (v40 ^ (v40 >> 15)) + ~((v40 ^ (v40 >> 15)) << 27);
            v42 = v38 & ((v41 >> 31) ^ v41);
            v43 = *(char ***)(v37 + 16 * v42);
            if (v43 == &WebCore::JSWebTransportError::s_info)
            {
LABEL_69:
              v45 = *(_QWORD *)(v37 + 16 * v42 + 8);
              if (v45)
                goto LABEL_71;
            }
            else
            {
              v44 = 1;
              while (v43)
              {
                v42 = ((_DWORD)v42 + v44) & v38;
                v43 = *(char ***)(v37 + 16 * v42);
                ++v44;
                if (v43 == &WebCore::JSWebTransportError::s_info)
                  goto LABEL_69;
              }
            }
          }
          v46 = *(WebCore::JSDOMException **)(v36 + 56);
          v47 = WebCore::getDOMStructure<WebCore::JSDOMException>(v46, *(JSC::VM **)(v5 + 40), v34);
          Structure = WebCore::JSWebTransportErrorPrototype::createStructure((uint64_t *)v46, v36, *(JSC::JSCell **)(v47 + 48));
          *(_DWORD *)(Structure + 16) |= 0x80000u;
          v51 = (JSC::JSCell *)WebCore::JSWebTransportErrorPrototype::create(v46, Structure, v49, v50);
          v52 = WebCore::JSWebTransportError::createStructure((uint64_t *)v46, v36, v51);
          v45 = WebCore::cacheDOMStructure((JSCell *)v36, v52, (uint64_t)&WebCore::JSWebTransportError::s_info);
LABEL_71:
          v108 = v4;
          v53 = *(_QWORD *)(v36 + 56);
          v54 = *(_QWORD *)(v53 + 41456);
          v55 = *(_QWORD *)(v54 + 23536);
          v56 = *(_QWORD **)(v55 + 2344);
          if (v56)
            goto LABEL_91;
          v57 = *(_QWORD *)(v54 + 22648);
          if (__ldaxr((unsigned __int8 *)v57))
          {
            __clrex();
          }
          else if (!__stxr(1u, (unsigned __int8 *)v57))
          {
            goto LABEL_76;
          }
          MEMORY[0x19AEA534C](v57);
LABEL_76:
          v59 = *(_QWORD *)(v57 + 2824);
          if (!*(_QWORD *)(v59 + 2344))
          {
            v60 = WTF::fastMalloc((WTF *)0xF8);
            WTF::CString::CString((WTF::CString *)v122, "IsoSpace T");
            v121 = 0;
            MEMORY[0x19AEA3204](v60, v122, v53 + 192, v53 + 1872, 32, 8, &v121);
            v62 = (uint64_t)v121;
            v121 = 0;
            if (v62)
              (*(void (**)(uint64_t))(*(_QWORD *)v62 + 8))(v62);
            v63 = (WTF *)v122[0];
            v122[0] = 0;
            if (v63)
            {
              if (*(_DWORD *)v63 == 1)
                WTF::fastFree(v63, v61);
              else
                --*(_DWORD *)v63;
            }
            v64 = *(_QWORD *)(v59 + 2344);
            *(_QWORD *)(v59 + 2344) = v60;
            if (v64)
              (*(void (**)(uint64_t))(*(_QWORD *)v64 + 8))(v64);
          }
          v56 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
          JSC::GCClient::IsoSubspace::IsoSubspace();
          v65 = *(_QWORD *)(v55 + 2344);
          *(_QWORD *)(v55 + 2344) = v56;
          if (v65)
          {
            v66 = (WTF *)MEMORY[0x19AEA3528]();
            WTF::fastFree(v66, v67);
          }
          v68 = __ldxr((unsigned __int8 *)v57);
          if (v68 == 1)
          {
            if (!__stlxr(0, (unsigned __int8 *)v57))
            {
LABEL_91:
              SlowCase = v56[3];
              if (SlowCase >= v56[4])
              {
                SlowCase = v56[5];
                if ((SlowCase & 1) != 0)
                {
                  JSC::sanitizeStackForVM();
                  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_93:
                  *(_DWORD *)SlowCase = 0;
                  WebCore::JSDOMObject::JSDOMObject(SlowCase, v45);
                  *(_QWORD *)(SlowCase + 24) = v32;
                  if (*(_BYTE *)(v53 + 755))
                    __dmb(0xAu);
                  v70 = *(_QWORD *)(v36 + 3320);
                  {
                    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::DOMException *)::owner = (uint64_t)&off_1E326AD60;
                  }
                  v122[0] = v32;
                  if ((SlowCase & 8) != 0)
                    v71 = (SlowCase - 112) | 1;
                  else
                    v71 = SlowCase & 0xFFFFFFFFFFFFC000;
                  if ((v71 & 1) != 0)
                    v72 = v71 + 47;
                  else
                    v72 = *(_QWORD *)v71 + 32;
                  Allocator = *(_QWORD **)(v72 + 16);
                  if (!Allocator)
                    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
                  *(_QWORD *)(v72 + 16) = *Allocator;
                  *Allocator = SlowCase;
                  Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::DOMException *)::owner;
                  Allocator[2] = v70;
                  v121 = Allocator;
                  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v70 + 32), v122, (uint64_t *)&v121);
                  if (v121)
                    v121[1] = 3;
                  v74 = *(JSC::JSCell **)(v110 + 40);
                  if (((unint64_t)v74 & 0xFFFE000000000002) != 0
                    || (v75 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v74)) == 0
                    || (v77 = v75, v75 == *(JSC::JSGlobalObject **)(v110 + 24))
                    || (v78 = (JSC::VM *)*((_QWORD *)v107 + 7),
                        FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(v107, v75, v76),
                        *((_DWORD *)v78 + 20))
                    && (JSC::VM::hasExceptionsAfterHandlingTraps(v78) & 1) != 0)
                  {
LABEL_119:
                    if (!*((_DWORD *)v108 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v108) & 1) == 0)
                      goto LABEL_120;
                    goto LABEL_189;
                  }
                  v82 = *((_QWORD *)FunctionRealm + 412);
                  if (v82)
                  {
                    v83 = *(_DWORD *)(v82 - 8);
                    v84 = ((unint64_t)&WebCore::JSWebTransportError::s_info
                         + ~((_QWORD)&WebCore::JSWebTransportError::s_info << 32)) ^ (((unint64_t)&WebCore::JSWebTransportError::s_info
                                                                                     + ~((_QWORD)&WebCore::JSWebTransportError::s_info << 32)) >> 22);
                    v85 = 9 * ((v84 + ~(v84 << 13)) ^ ((v84 + ~(v84 << 13)) >> 8));
                    v86 = (v85 ^ (v85 >> 15)) + ~((v85 ^ (v85 >> 15)) << 27);
                    v87 = v83 & ((v86 >> 31) ^ v86);
                    v88 = *(char ***)(v82 + 16 * v87);
                    if (v88 == &WebCore::JSWebTransportError::s_info)
                    {
LABEL_115:
                      v79 = *(JSC::JSObject **)(v82 + 16 * v87 + 8);
                      if (v79)
                      {
LABEL_117:
                        SubclassStructure = JSC::InternalFunction::createSubclassStructure(v107, v77, v79, v80);
                        if (!*((_DWORD *)v78 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v78) & 1) == 0)
                          JSC::JSObject::setStructure((JSCell *)SlowCase, v78, SubclassStructure);
                        goto LABEL_119;
                      }
                    }
                    else
                    {
                      v89 = 1;
                      while (v88)
                      {
                        v87 = ((_DWORD)v87 + v89) & v83;
                        v88 = *(char ***)(v82 + 16 * v87);
                        ++v89;
                        if (v88 == &WebCore::JSWebTransportError::s_info)
                          goto LABEL_115;
                      }
                    }
                  }
                  v90 = WebCore::getDOMStructure<WebCore::JSDOMException>(v78, FunctionRealm, v79);
                  v91 = WebCore::JSWebTransportErrorPrototype::createStructure((uint64_t *)v78, (uint64_t)FunctionRealm, *(JSC::JSCell **)(v90 + 48));
                  *(_DWORD *)(v91 + 16) |= 0x80000u;
                  v94 = (JSC::JSCell *)WebCore::JSWebTransportErrorPrototype::create(v78, v91, v92, v93);
                  v95 = WebCore::JSWebTransportError::createStructure((uint64_t *)v78, (uint64_t)FunctionRealm, v94);
                  v79 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v95, (uint64_t)&WebCore::JSWebTransportError::s_info);
                  goto LABEL_117;
                }
                v101 = *(_QWORD *)(SlowCase + 8) ^ v56[6];
                v56[4] = SlowCase + HIDWORD(v101);
                v56[5] = SlowCase + (int)v101;
              }
              v56[3] = SlowCase + 32;
              goto LABEL_93;
            }
          }
          else
          {
            __clrex();
          }
          WTF::Lock::unlockSlow((WTF::Lock *)v57);
          goto LABEL_91;
        }
LABEL_53:
        v29 = 0;
        goto LABEL_54;
      }
    }
    else if (!v19)
    {
      goto LABEL_31;
    }
    *(_DWORD *)v19 += 2;
    goto LABEL_31;
  }
  v111 = *(_QWORD *)(a2 + 48);
  if ((v6 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v6 + 5) == 2)
  {
    v8 = *(_QWORD *)(v6 + 8);
    if ((v8 & 1) != 0)
    {
      v8 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v6, (JSC::JSGlobalObject *)a1);
      if (!v8)
        goto LABEL_11;
    }
    else if (!v8)
    {
LABEL_11:
      v122[0] = v8;
      goto LABEL_12;
    }
    *(_DWORD *)v8 += 2;
    goto LABEL_11;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v111, (JSC::JSGlobalObject *)a1);
LABEL_12:
  if (!*((_DWORD *)v4 + 20))
  {
    v7 = (WTF::StringImpl *)v122[0];
LABEL_14:
    v113 = v7;
    v114 = 0;
    goto LABEL_15;
  }
  v103 = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
  v7 = (WTF::StringImpl *)v122[0];
  if (!v103)
    goto LABEL_14;
  v114 = 1;
  v122[0] = 0;
  if (v7)
  {
    if (*(_DWORD *)v7 == 2)
      WTF::StringImpl::destroy(v7, v104);
    else
      *(_DWORD *)v7 -= 2;
  }
  SlowCase = 0;
  v97 = 1;
LABEL_121:
  ((void (*)(uint64_t *, WTF::StringImpl **))off_1E333EAB8[v97])(&v111, &v113);
  return SlowCase;
}

uint64_t WebCore::JSWebTransportError::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSDOMException::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSDOMException::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSDOMException::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSWebTransportErrorPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSWebTransportErrorPrototype::create(WebCore::JSWebTransportErrorPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSWebTransportError::s_info, &WebCore::JSWebTransportErrorPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebTransportError>,(WebCore::DOMConstructorID)290>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2320);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMException>,(WebCore::DOMConstructorID)426>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructor<WebCore::JSWebTransportError>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSWebTransportError::s_info
         + ~((_QWORD)&WebCore::JSWebTransportError::s_info << 32)) ^ (((unint64_t)&WebCore::JSWebTransportError::s_info
                                                                     + ~((_QWORD)&WebCore::JSWebTransportError::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSWebTransportError::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSWebTransportError::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = WebCore::getDOMStructure<WebCore::JSDOMException>((WebCore::JSDOMException *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSWebTransportErrorPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(v27 + 48));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSWebTransportErrorPrototype::create((WebCore::JSWebTransportErrorPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSWebTransportError::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSWebTransportError::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2320) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsWebTransportErrorConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSWebTransportErrorPrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebTransportError>,(WebCore::DOMConstructorID)290>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsWebTransportError_source(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;

  v2 = *(unsigned __int8 *)(*((_QWORD *)a2 + 3) + 32);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = (uint64_t *)(v3 + 41968);
  if ((byte_1EE3371E3 & 1) == 0)
  {
    dword_1ECE7A7B0 += 2;
    byte_1EE3371E3 = 1;
    qword_1EE337388 = (uint64_t)&dword_1ECE7A7B0;
    dword_1ECE7A7D0 += 2;
    qword_1EE337390 = (uint64_t)&dword_1ECE7A7D0;
  }
  v5 = *(_QWORD *)&_MergedGlobals_786[8 * v2 + 424];
  if (!v5)
    return *v4;
  v6 = *(_DWORD *)v5;
  v7 = *(_DWORD *)(v5 + 4);
  *(_DWORD *)v5 += 2;
  if (v7)
  {
    if (v7 != 1)
    {
LABEL_6:
      v8 = *(_QWORD *)(v3 + 64760);
      if (!v8 || v5 != *(_QWORD *)(v8 + 8))
      {
        v8 = JSC::jsStringWithCacheSlowCase();
        v6 = *(_DWORD *)v5 - 2;
      }
      goto LABEL_9;
    }
    v10 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_6;
      v11 = v12;
    }
    v8 = *(_QWORD *)(v3 + 8 * v11 + 42216);
  }
  else
  {
    v8 = *v4;
  }
LABEL_9:
  if (v6)
    *(_DWORD *)v5 = v6;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v5, a2);
  return v8;
}

unint64_t WebCore::jsWebTransportError_streamErrorCode(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 36);
  if ((v2 & 0xFF00000000) == 0)
    return 2;
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  return *(_QWORD *)(*(_QWORD *)(a2 + 24) + 36) | 0xFFFE000000000000;
}

uint64_t WebCore::JSWebTransportReceiveStream::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSReadableStream::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSReadableStream::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSReadableStream::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportReceiveStream>,(WebCore::DOMConstructorID)291>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  JSC::Heap *v9;
  uint64_t SlowCase;
  _QWORD *v11;
  unint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char **v25;
  int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  JSC::JSObject *v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  uint64_t v37;
  WTF::StringImpl *v38;
  JSC::Structure *v39;
  int v40;
  JSC::JSObject *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  WTF::StringImpl *v50;
  unint64_t v51;
  uint64_t v52;
  int *v53;
  JSC::Structure **v54;
  int *v55;
  int v56;
  int v57;
  JSC::Structure *v58;
  int v59;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2328);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSReadableStream>,(WebCore::DOMConstructorID)216>(a1, a2);
  v7 = v6;
  LODWORD(v50) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  v9 = (JSC::Heap *)(a1 + 192);
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v45 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v45);
    v5[2] = SlowCase + (int)v45;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v50, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportReceiveStream>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v11 = (_QWORD *)v5[165];
  v2 = v11[2846];
  if (v2 < v11[2847])
    goto LABEL_10;
  v2 = v11[2848];
  if ((v2 & 1) == 0)
  {
    v46 = *(_QWORD *)(v2 + 8) ^ v11[2849];
    v11[2847] = v2 + HIDWORD(v46);
    v11[2848] = v2 + (int)v46;
LABEL_10:
    v11[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v12 = *(_QWORD *)(v5[227] + 1768);
  v50 = 0;
  v51 = v2;
  v52 = 0x1000000FFFFFFFFLL;
  v53 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v12, 0xFFFE000000000000, 6, (uint64_t)&v50);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v14 = JSC::JSString::create(a1, &v50);
  v15 = v50;
  v50 = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v13);
    else
      *(_DWORD *)v15 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v14;
  if (v14 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v16 = *(_QWORD *)(v5[227] + 1968);
  v50 = 0;
  v51 = v2;
  v52 = 0x1000000FFFFFFFFLL;
  v53 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v14, 6, (uint64_t)&v50);
  v18 = *(_QWORD *)(v5[227] + 2160);
  v19 = *(_QWORD *)(a2 + 3296);
  if (!v19)
    goto LABEL_21;
  v20 = *(_DWORD *)(v19 - 8);
  v21 = ((unint64_t)&WebCore::JSWebTransportReceiveStream::s_info
       + ~((_QWORD)&WebCore::JSWebTransportReceiveStream::s_info << 32)) ^ (((unint64_t)&WebCore::JSWebTransportReceiveStream::s_info
                                                                           + ~((_QWORD)&WebCore::JSWebTransportReceiveStream::s_info << 32)) >> 22);
  v22 = 9 * ((v21 + ~(v21 << 13)) ^ ((v21 + ~(v21 << 13)) >> 8));
  v23 = (v22 ^ (v22 >> 15)) + ~((v22 ^ (v22 >> 15)) << 27);
  v24 = v20 & ((v23 >> 31) ^ v23);
  v25 = *(char ***)(v19 + 16 * v24);
  if (v25 != &WebCore::JSWebTransportReceiveStream::s_info)
  {
    v26 = 1;
    while (v25)
    {
      v24 = ((_DWORD)v24 + v26) & v20;
      v25 = *(char ***)(v19 + 16 * v24);
      ++v26;
      if (v25 == &WebCore::JSWebTransportReceiveStream::s_info)
        goto LABEL_20;
    }
LABEL_21:
    v28 = WebCore::JSReadableStream::prototype((WebCore::JSReadableStream *)a1, (JSC::VM *)a2, v17);
    v29 = v28;
    LODWORD(v50) = 23;
    if ((v28 & 0xFFFE000000000002) == 0)
    {
      v30 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v28);
      if (v30)
        JSC::JSObject::didBecomePrototype(v30, (JSC::VM *)a1);
    }
    v31 = (uint64_t *)(a1 + 38904);
    v32 = *v5;
    if (*v5 >= (unint64_t)v5[1])
    {
      v32 = v5[2];
      if ((v32 & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        v32 = JSC::LocalAllocator::allocateSlowCase();
LABEL_26:
        *(_DWORD *)v32 = 0;
        MEMORY[0x19AEA4278](v32, a1, a2, v29, &v50, &WebCore::JSWebTransportReceiveStreamPrototype::s_info, 0, 0);
        if (*(_BYTE *)(a1 + 755))
          __dmb(0xAu);
        *(_DWORD *)(v32 + 16) |= 0x80000u;
        v33 = *v31;
        if (*(_QWORD *)(a1 + 38904) >= *(_QWORD *)(a1 + 38912))
        {
          v33 = *(_QWORD *)(a1 + 38920);
          if ((v33 & 1) != 0)
          {
            JSC::sanitizeStackForVM();
            v33 = JSC::LocalAllocator::allocateSlowCase();
LABEL_30:
            *(_DWORD *)v33 = 0;
            v34 = *(_DWORD *)(v32 + 8);
            *(_DWORD *)v33 = v32 >> 4;
            *(_DWORD *)(v33 + 4) = v34;
            *(_QWORD *)(v33 + 8) = 0;
            if (*(_BYTE *)(a1 + 755))
              __dmb(0xAu);
            JSC::reifyStaticProperties<2u>((JSC::VM *)a1, (uint64_t)&WebCore::JSWebTransportReceiveStream::s_info, (uint64_t)&WebCore::JSWebTransportReceiveStreamPrototypeTableValues, (JSC::JSObject *)v33);
            v35 = *(_QWORD *)(v5[227] + 2776);
            WTF::StringImpl::createWithoutCopyingNonEmpty();
            v37 = JSC::JSString::create(a1, &v50);
            v38 = v50;
            v50 = 0;
            if (v38)
            {
              if (*(_DWORD *)v38 == 2)
                WTF::StringImpl::destroy(v38, v36);
              else
                *(_DWORD *)v38 -= 2;
            }
            v39 = (JSC::Structure *)(16 * (*(_DWORD *)v33 & 0xFFFFFFFE));
            v59 = *(_DWORD *)v33;
            v58 = v39;
            v40 = JSC::Structure::outOfLineCapacity(v39);
            v56 = 0;
            v57 = v40;
            v50 = (WTF::StringImpl *)&v57;
            v51 = v33;
            v52 = a1;
            v53 = &v59;
            v54 = &v58;
            v55 = &v56;
            JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v39, (JSC::VM *)a1, v35, 6, (uint64_t)&v50);
            if ((*(_BYTE *)((16 * *(unsigned int *)v33) | 0x12) & 8) != 0)
              JSC::VM::invalidateStructureChainIntegrity();
            JSC::JSObject::putDirectOffset(v33, a1, v56, v37);
            *((_DWORD *)v39 + 4) |= 0x10u;
            LODWORD(v50) = 23;
            if ((v33 & 0xFFFE000000000002) == 0)
            {
              v41 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v33);
              if (v41)
                JSC::JSObject::didBecomePrototype(v41, (JSC::VM *)a1);
            }
            v42 = *v5;
            v9 = (JSC::Heap *)(a1 + 192);
            if (*v5 >= (unint64_t)v5[1])
            {
              v42 = v5[2];
              if ((v42 & 1) != 0)
              {
                JSC::sanitizeStackForVM();
                v42 = JSC::LocalAllocator::allocateSlowCase();
                goto LABEL_40;
              }
              v49 = *(_QWORD *)(v42 + 8) ^ v5[3];
              v5[1] = v42 + HIDWORD(v49);
              v5[2] = v42 + (int)v49;
            }
            *v5 = v42 + 128;
LABEL_40:
            *(_DWORD *)v42 = 0;
            MEMORY[0x19AEA4278](v42, a1, a2, v33, &v50, &WebCore::JSWebTransportReceiveStream::s_info, 0, 0);
            if (*(_BYTE *)(a1 + 755))
              __dmb(0xAu);
            v27 = WebCore::cacheDOMStructure((JSCell *)a2, v42, (uint64_t)&WebCore::JSWebTransportReceiveStream::s_info);
            goto LABEL_43;
          }
          v48 = *(_QWORD *)(v33 + 8) ^ *(_QWORD *)(a1 + 38928);
          *(_QWORD *)(a1 + 38912) = v33 + HIDWORD(v48);
          *(_QWORD *)(a1 + 38920) = v33 + (int)v48;
        }
        *v31 = v33 + 16;
        goto LABEL_30;
      }
      v47 = *(_QWORD *)(v32 + 8) ^ v5[3];
      v5[1] = v32 + HIDWORD(v47);
      v5[2] = v32 + (int)v47;
    }
    *v5 = v32 + 128;
    goto LABEL_26;
  }
LABEL_20:
  v27 = *(_QWORD *)(v19 + 16 * v24 + 8);
  if (!v27)
    goto LABEL_21;
LABEL_43:
  v43 = *(_QWORD *)(v27 + 48);
  v50 = 0;
  v51 = v2;
  v52 = 0x1000000FFFFFFFFLL;
  v53 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v18, v43, 14, (uint64_t)&v50);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2328) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath(v9, (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsWebTransportReceiveStreamConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSWebTransportReceiveStreamPrototype::s_info != (char **)(16
                                                                         * *(unsigned int *)(16
                                                                                           * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                           + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportReceiveStream>,(WebCore::DOMConstructorID)291>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSWebTransportSendStream::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSWritableStream::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSWritableStream::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSWritableStream::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportSendStream>,(WebCore::DOMConstructorID)292>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  JSC::Heap *v9;
  uint64_t SlowCase;
  _QWORD *v11;
  unint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char **v25;
  int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  JSC::JSObject *v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  uint64_t v37;
  WTF::StringImpl *v38;
  JSC::Structure *v39;
  int v40;
  JSC::JSObject *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  WTF::StringImpl *v50;
  unint64_t v51;
  uint64_t v52;
  int *v53;
  JSC::Structure **v54;
  int *v55;
  int v56;
  int v57;
  JSC::Structure *v58;
  int v59;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2336);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWritableStream>,(WebCore::DOMConstructorID)225>(a1, a2);
  v7 = v6;
  LODWORD(v50) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  v9 = (JSC::Heap *)(a1 + 192);
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v45 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v45);
    v5[2] = SlowCase + (int)v45;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v50, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportSendStream>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v11 = (_QWORD *)v5[165];
  v2 = v11[2846];
  if (v2 < v11[2847])
    goto LABEL_10;
  v2 = v11[2848];
  if ((v2 & 1) == 0)
  {
    v46 = *(_QWORD *)(v2 + 8) ^ v11[2849];
    v11[2847] = v2 + HIDWORD(v46);
    v11[2848] = v2 + (int)v46;
LABEL_10:
    v11[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v12 = *(_QWORD *)(v5[227] + 1768);
  v50 = 0;
  v51 = v2;
  v52 = 0x1000000FFFFFFFFLL;
  v53 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v12, 0xFFFE000000000000, 6, (uint64_t)&v50);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v14 = JSC::JSString::create(a1, &v50);
  v15 = v50;
  v50 = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v13);
    else
      *(_DWORD *)v15 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v14;
  if (v14 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v16 = *(_QWORD *)(v5[227] + 1968);
  v50 = 0;
  v51 = v2;
  v52 = 0x1000000FFFFFFFFLL;
  v53 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v14, 6, (uint64_t)&v50);
  v18 = *(_QWORD *)(v5[227] + 2160);
  v19 = *(_QWORD *)(a2 + 3296);
  if (!v19)
    goto LABEL_21;
  v20 = *(_DWORD *)(v19 - 8);
  v21 = ((unint64_t)&WebCore::JSWebTransportSendStream::s_info
       + ~((_QWORD)&WebCore::JSWebTransportSendStream::s_info << 32)) ^ (((unint64_t)&WebCore::JSWebTransportSendStream::s_info
                                                                        + ~((_QWORD)&WebCore::JSWebTransportSendStream::s_info << 32)) >> 22);
  v22 = 9 * ((v21 + ~(v21 << 13)) ^ ((v21 + ~(v21 << 13)) >> 8));
  v23 = (v22 ^ (v22 >> 15)) + ~((v22 ^ (v22 >> 15)) << 27);
  v24 = v20 & ((v23 >> 31) ^ v23);
  v25 = *(char ***)(v19 + 16 * v24);
  if (v25 != &WebCore::JSWebTransportSendStream::s_info)
  {
    v26 = 1;
    while (v25)
    {
      v24 = ((_DWORD)v24 + v26) & v20;
      v25 = *(char ***)(v19 + 16 * v24);
      ++v26;
      if (v25 == &WebCore::JSWebTransportSendStream::s_info)
        goto LABEL_20;
    }
LABEL_21:
    v28 = WebCore::JSWritableStream::prototype((WebCore::JSWritableStream *)a1, (JSC::VM *)a2, v17);
    v29 = v28;
    LODWORD(v50) = 23;
    if ((v28 & 0xFFFE000000000002) == 0)
    {
      v30 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v28);
      if (v30)
        JSC::JSObject::didBecomePrototype(v30, (JSC::VM *)a1);
    }
    v31 = (uint64_t *)(a1 + 38904);
    v32 = *v5;
    if (*v5 >= (unint64_t)v5[1])
    {
      v32 = v5[2];
      if ((v32 & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        v32 = JSC::LocalAllocator::allocateSlowCase();
LABEL_26:
        *(_DWORD *)v32 = 0;
        MEMORY[0x19AEA4278](v32, a1, a2, v29, &v50, &WebCore::JSWebTransportSendStreamPrototype::s_info, 0, 0);
        if (*(_BYTE *)(a1 + 755))
          __dmb(0xAu);
        *(_DWORD *)(v32 + 16) |= 0x80000u;
        v33 = *v31;
        if (*(_QWORD *)(a1 + 38904) >= *(_QWORD *)(a1 + 38912))
        {
          v33 = *(_QWORD *)(a1 + 38920);
          if ((v33 & 1) != 0)
          {
            JSC::sanitizeStackForVM();
            v33 = JSC::LocalAllocator::allocateSlowCase();
LABEL_30:
            *(_DWORD *)v33 = 0;
            v34 = *(_DWORD *)(v32 + 8);
            *(_DWORD *)v33 = v32 >> 4;
            *(_DWORD *)(v33 + 4) = v34;
            *(_QWORD *)(v33 + 8) = 0;
            if (*(_BYTE *)(a1 + 755))
              __dmb(0xAu);
            JSC::reifyStaticProperties<3u>((JSC::VM *)a1, (uint64_t)&WebCore::JSWebTransportSendStream::s_info, &WebCore::JSWebTransportSendStreamPrototypeTableValues, (JSC::JSObject *)v33);
            v35 = *(_QWORD *)(v5[227] + 2776);
            WTF::StringImpl::createWithoutCopyingNonEmpty();
            v37 = JSC::JSString::create(a1, &v50);
            v38 = v50;
            v50 = 0;
            if (v38)
            {
              if (*(_DWORD *)v38 == 2)
                WTF::StringImpl::destroy(v38, v36);
              else
                *(_DWORD *)v38 -= 2;
            }
            v39 = (JSC::Structure *)(16 * (*(_DWORD *)v33 & 0xFFFFFFFE));
            v59 = *(_DWORD *)v33;
            v58 = v39;
            v40 = JSC::Structure::outOfLineCapacity(v39);
            v56 = 0;
            v57 = v40;
            v50 = (WTF::StringImpl *)&v57;
            v51 = v33;
            v52 = a1;
            v53 = &v59;
            v54 = &v58;
            v55 = &v56;
            JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v39, (JSC::VM *)a1, v35, 6, (uint64_t)&v50);
            if ((*(_BYTE *)((16 * *(unsigned int *)v33) | 0x12) & 8) != 0)
              JSC::VM::invalidateStructureChainIntegrity();
            JSC::JSObject::putDirectOffset(v33, a1, v56, v37);
            *((_DWORD *)v39 + 4) |= 0x10u;
            LODWORD(v50) = 23;
            if ((v33 & 0xFFFE000000000002) == 0)
            {
              v41 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v33);
              if (v41)
                JSC::JSObject::didBecomePrototype(v41, (JSC::VM *)a1);
            }
            v42 = *v5;
            v9 = (JSC::Heap *)(a1 + 192);
            if (*v5 >= (unint64_t)v5[1])
            {
              v42 = v5[2];
              if ((v42 & 1) != 0)
              {
                JSC::sanitizeStackForVM();
                v42 = JSC::LocalAllocator::allocateSlowCase();
                goto LABEL_40;
              }
              v49 = *(_QWORD *)(v42 + 8) ^ v5[3];
              v5[1] = v42 + HIDWORD(v49);
              v5[2] = v42 + (int)v49;
            }
            *v5 = v42 + 128;
LABEL_40:
            *(_DWORD *)v42 = 0;
            MEMORY[0x19AEA4278](v42, a1, a2, v33, &v50, &WebCore::JSWebTransportSendStream::s_info, 0, 0);
            if (*(_BYTE *)(a1 + 755))
              __dmb(0xAu);
            v27 = WebCore::cacheDOMStructure((JSCell *)a2, v42, (uint64_t)&WebCore::JSWebTransportSendStream::s_info);
            goto LABEL_43;
          }
          v48 = *(_QWORD *)(v33 + 8) ^ *(_QWORD *)(a1 + 38928);
          *(_QWORD *)(a1 + 38912) = v33 + HIDWORD(v48);
          *(_QWORD *)(a1 + 38920) = v33 + (int)v48;
        }
        *v31 = v33 + 16;
        goto LABEL_30;
      }
      v47 = *(_QWORD *)(v32 + 8) ^ v5[3];
      v5[1] = v32 + HIDWORD(v47);
      v5[2] = v32 + (int)v47;
    }
    *v5 = v32 + 128;
    goto LABEL_26;
  }
LABEL_20:
  v27 = *(_QWORD *)(v19 + 16 * v24 + 8);
  if (!v27)
    goto LABEL_21;
LABEL_43:
  v43 = *(_QWORD *)(v27 + 48);
  v50 = 0;
  v51 = v2;
  v52 = 0x1000000FFFFFFFFLL;
  v53 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v18, v43, 14, (uint64_t)&v50);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2336) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath(v9, (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsWebTransportSendStreamConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSWebTransportSendStreamPrototype::s_info != (char **)(16
                                                                      * *(unsigned int *)(16
                                                                                        * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                        + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportSendStream>,(WebCore::DOMConstructorID)292>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsWebTransportSendStream_sendOrder(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a2 + 24);
  if (!*(_BYTE *)(v2 + 32))
    return 2;
  v3 = *(_QWORD *)(v2 + 24);
  if (v3 == (int)v3)
    return v3 | 0xFFFE000000000000;
  else
    return COERCE__INT64((double)v3) + 0x2000000000000;
}

BOOL WebCore::setJSWebTransportSendStream_sendOrder(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  char v12;
  double v13;
  double v14;
  char hasExceptionsAfterHandlingTraps;
  double v17;
  JSC::VM *v18;
  unint64_t v19;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSWebTransportSendStream::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSWebTransportSendStream::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  if ((a3 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v11 = 0;
    v12 = 0;
  }
  else
  {
    v19 = a3;
    if (a3 < 0xFFFE000000000000)
    {
      if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v18 = v4;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v19, a1);
        v4 = v18;
      }
      else
      {
        *(_QWORD *)&v13 = a3 - 0x2000000000000;
      }
      if (*((_DWORD *)v4 + 20))
      {
        v17 = v13;
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
        v13 = v17;
        if ((hasExceptionsAfterHandlingTraps & 1) != 0)
          return 0;
      }
      if (fabs(v13) == INFINITY)
      {
        v11 = 0;
      }
      else
      {
        v14 = fmod(trunc(v13), 1.84467441e19);
        if (v14 >= 0.0)
          v11 = (unint64_t)v14;
        else
          v11 = -(uint64_t)(unint64_t)-v14;
      }
    }
    else
    {
      v11 = (int)a3;
    }
    v12 = 1;
  }
  *(_QWORD *)(v10 + 24) = v11;
  *(_BYTE *)(v10 + 32) = v12;
  return 1;
}

void WebCore::convertDictionary<WebCore::WebTransportSendStreamOptions>(uint64_t a1, JSC::JSGlobalObject *a2, JSC::JSCell *this)
{
  JSC::VM *v4;
  uint64_t Object;
  JSC::Structure *v7;
  WTF::StringImpl *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  JSC::VM *v15;
  double v16;
  double v17;
  char hasExceptionsAfterHandlingTraps;
  double v19;
  _BYTE v20[7];
  WTF::StringImpl *v21;

  v4 = (JSC::VM *)*((_QWORD *)a2 + 7);
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
    {
      JSC::throwTypeError();
    }
    else
    {
      v7 = (JSC::Structure *)Object;
      WTF::AtomStringImpl::addLiteral();
      v9 = JSC::JSObject::get(v7, a2, (unint64_t)v21);
      if (v21)
      {
        if (*(_DWORD *)v21 == 2)
          WTF::StringImpl::destroy(v21, v8);
        else
          *(_DWORD *)v21 -= 2;
      }
      if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
        goto LABEL_25;
      if ((v9 | 8) == 0xA)
        goto LABEL_9;
      v21 = (WTF::StringImpl *)v9;
      if (v9 >= 0xFFFE000000000000)
      {
        v14 = (int)v9;
LABEL_23:
        v11 = v14 & 0xFFFFFFFFFFFFFF00;
        v12 = v14;
        v10 = 1;
        goto LABEL_10;
      }
      v15 = (JSC::VM *)*((_QWORD *)a2 + 7);
      if (v9 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v21, a2);
      else
        *(_QWORD *)&v16 = v9 - 0x2000000000000;
      if (!*((_DWORD *)v15 + 20)
        || (v19 = v16,
            hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v15),
            v16 = v19,
            (hasExceptionsAfterHandlingTraps & 1) == 0))
      {
        if (fabs(v16) == INFINITY)
        {
          v14 = 0;
        }
        else
        {
          v17 = fmod(trunc(v16), 1.84467441e19);
          if (v17 >= 0.0)
            v14 = (unint64_t)v17;
          else
            v14 = -(uint64_t)(unint64_t)-v17;
        }
        goto LABEL_23;
      }
    }
LABEL_25:
    v13 = 1;
    goto LABEL_11;
  }
LABEL_9:
  v10 = 0;
  v11 = 0;
  v12 = 0;
LABEL_10:
  v13 = 0;
  *(_QWORD *)(a1 + 8) = v12 | v11;
  *(_BYTE *)(a1 + 16) = v10;
  *(_DWORD *)(a1 + 17) = *(_DWORD *)v20;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)&v20[3];
LABEL_11:
  *(_DWORD *)(a1 + 24) = v13;
}

void WebCore::JSWebGLRenderbufferOwner::~JSWebGLRenderbufferOwner(WebCore::JSWebGLRenderbufferOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSWebGLRenderingContextOwner::~JSWebGLRenderingContextOwner(WebCore::JSWebGLRenderingContextOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSWebGLSamplerOwner::~JSWebGLSamplerOwner(WebCore::JSWebGLSamplerOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSWebGLShaderOwner::~JSWebGLShaderOwner(WebCore::JSWebGLShaderOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSWebGLShaderPrecisionFormatOwner::~JSWebGLShaderPrecisionFormatOwner(WebCore::JSWebGLShaderPrecisionFormatOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSWebGLStencilTexturingOwner::~JSWebGLStencilTexturingOwner(WebCore::JSWebGLStencilTexturingOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSWebGLSyncOwner::~JSWebGLSyncOwner(WebCore::JSWebGLSyncOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSWebGLTextureOwner::~JSWebGLTextureOwner(WebCore::JSWebGLTextureOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSWebGLTimerQueryEXTOwner::~JSWebGLTimerQueryEXTOwner(WebCore::JSWebGLTimerQueryEXTOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSWebGLTransformFeedbackOwner::~JSWebGLTransformFeedbackOwner(WebCore::JSWebGLTransformFeedbackOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSWebGLUniformLocationOwner::~JSWebGLUniformLocationOwner(WebCore::JSWebGLUniformLocationOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSWebGLVertexArrayObjectOwner::~JSWebGLVertexArrayObjectOwner(WebCore::JSWebGLVertexArrayObjectOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSWebGLVertexArrayObjectOESOwner::~JSWebGLVertexArrayObjectOESOwner(WebCore::JSWebGLVertexArrayObjectOESOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSWebKitMediaKeyErrorOwner::~JSWebKitMediaKeyErrorOwner(WebCore::JSWebKitMediaKeyErrorOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSWebKitMediaKeySessionOwner::~JSWebKitMediaKeySessionOwner(WebCore::JSWebKitMediaKeySessionOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSWebKitMediaKeysOwner::~JSWebKitMediaKeysOwner(WebCore::JSWebKitMediaKeysOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSWebKitNamespaceOwner::~JSWebKitNamespaceOwner(WebCore::JSWebKitNamespaceOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSWebKitPointOwner::~JSWebKitPointOwner(WebCore::JSWebKitPointOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSWebLockOwner::~JSWebLockOwner(WebCore::JSWebLockOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

BOOL WebCore::JSWebLockGrantedCallback::hasCallback(WebCore::JSWebLockGrantedCallback *this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *((_QWORD *)this + 3);
  return v1 && (v2 = *(_QWORD *)(v1 + 16)) != 0 && (*(_BYTE *)(v2 + 8) & 3) == 0 && *(_QWORD *)v2 != 0;
}

void WebCore::JSWebLockManagerOwner::~JSWebLockManagerOwner(WebCore::JSWebLockManagerOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSWebSocketOwner::~JSWebSocketOwner(WebCore::JSWebSocketOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSWebTransportOwner::~JSWebTransportOwner(WebCore::JSWebTransportOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSWebTransportBidirectionalStreamOwner::~JSWebTransportBidirectionalStreamOwner(WebCore::JSWebTransportBidirectionalStreamOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSWebTransportDatagramDuplexStreamOwner::~JSWebTransportDatagramDuplexStreamOwner(WebCore::JSWebTransportDatagramDuplexStreamOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_activeTexture(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  JSValue v15;
  WebCore::InspectorInstrumentation *v16;
  WebCore::ScriptExecutionContext *v17;
  uint64_t v18;
  WebCore::InspectorCanvasAgent *v19;
  WebCore::InspectorInstrumentation *v20;
  WebCore::ScriptExecutionContext *v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  WTF::StringImpl *v25;
  JSC::VM *v26;
  _QWORD v27[2];
  WTF::StringImpl *v28;
  _DWORD v29[2];
  _QWORD v30[2];
  char v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "WebGLRenderingContext", "activeTexture");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "WebGLRenderingContext", "activeTexture");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v15.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v15);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v29);
    if (v29[1])
    {
      return 0;
    }
    else
    {
      if (*(_BYTE *)(v11 + 33))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v12 = v29[0];
        v16 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v16
          && (v18 = WebCore::InspectorInstrumentation::instrumentingAgents(v16, v17)) != 0
          && (v19 = *(WebCore::InspectorCanvasAgent **)(v18 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v19, (WebCore::CanvasRenderingContext *)(v11 + 8), v12, (uint64_t)v30);
        }
        else
        {
          LOBYTE(v30[0]) = 0;
          v31 = 0;
        }
        v27[0] = v30;
        v27[1] = 1;
        v20 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v20)
        {
          v22 = WebCore::InspectorInstrumentation::instrumentingAgents(v20, v21);
          if (v22)
          {
            v23 = *(_QWORD *)(v22 + 96);
            if (v23)
              WebCore::InspectorCanvasAgent::recordAction(v23, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v28, v27);
          }
        }
        if (v31)
        {
          v24 = (_DWORD *)v30[0];
          v30[0] = 0;
          if (v24)
          {
            if (*v24 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v24;
          }
        }
        v25 = v28;
        v28 = 0;
        if (v25)
        {
          if (*(_DWORD *)v25 == 2)
            WTF::StringImpl::destroy(v25, v21);
          else
            *(_DWORD *)v25 -= 2;
        }
      }
      else
      {
        v12 = v29[0];
      }
      if (!*(_BYTE *)(v11 + 364))
      {
        v13 = (v12 - 33984);
        if (*(_DWORD *)(v11 + 204) <= v13)
        {
          WebCore::WebGLRenderingContextBase::synthesizeGLError((WTF::StringImpl *)v11, 1280, (uint64_t)"activeTexture", 14, (uint64_t)"texture unit out of range", 26);
        }
        else
        {
          *(_QWORD *)(v11 + 208) = v13;
          (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(v11 + 88) + 24))(*(_QWORD *)(v11 + 88), v12);
        }
      }
      return 10;
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_attachShader(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  WebCore::WebGLProgram *v24;
  uint64_t v25;
  uint64_t v26;
  _BOOL4 v27;
  char **v28;
  BOOL v29;
  WebCore::WebGLShader *v31;
  JSValue v32;
  WebCore::InspectorInstrumentation *v33;
  WebCore::ScriptExecutionContext *v34;
  uint64_t v35;
  uint64_t v36;
  WebCore::InspectorInstrumentation *v37;
  WebCore::ScriptExecutionContext *v38;
  uint64_t v39;
  uint64_t v40;
  WebCore::InspectorInstrumentation *v41;
  WebCore::ScriptExecutionContext *v42;
  uint64_t v43;
  uint64_t v44;
  _DWORD *v45;
  _DWORD *v46;
  WTF::StringImpl *v47;
  JSC::VM *v48;
  _QWORD v49[2];
  WTF::StringImpl *v50;
  _QWORD v51[2];
  char v52;
  _DWORD *v53;
  char v54;
  uint64_t v55;

  v55 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v48 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v48, "WebGLRenderingContext", "attachShader");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v48, "WebGLRenderingContext", "attachShader");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v32.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v32);
  }
  else
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    v51[0] = v9;
    if ((v17 & 0xFFFE000000000002) != 0)
      goto LABEL_24;
    v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v20 = (char **)(16 * v18);
    if ((_DWORD)v18)
      v21 = v20 == &WebCore::JSWebGLProgram::s_info;
    else
      v21 = 1;
    if (!v21)
    {
      do
      {
        v20 = (char **)v20[2];
        v19 = v20 != 0;
      }
      while (v20 != &WebCore::JSWebGLProgram::s_info && v20 != 0);
    }
    if (v19 && (v24 = *(WebCore::WebGLProgram **)(v17 + 24)) != 0)
    {
      v25 = *((_QWORD *)a2 + 7);
      v51[0] = v9;
      if ((v25 & 0xFFFE000000000002) != 0)
        goto LABEL_37;
      v26 = *(unsigned int *)(16 * (*(_DWORD *)v25 & 0xFFFFFFFE) + 0x4C);
      v27 = *(_DWORD *)(16 * (*(_DWORD *)v25 & 0xFFFFFFFE) + 0x4C) != 0;
      v28 = (char **)(16 * v26);
      if ((_DWORD)v26)
        v29 = v28 == &WebCore::JSWebGLShader::s_info;
      else
        v29 = 1;
      if (!v29)
      {
        do
        {
          v28 = (char **)v28[2];
          v27 = v28 != 0;
        }
        while (v28 != &WebCore::JSWebGLShader::s_info && v28 != 0);
      }
      if (v27 && (v31 = *(WebCore::WebGLShader **)(v25 + 24)) != 0)
      {
        if (*(_BYTE *)(v16 + 33))
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v33 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
          if (v33
            && (v35 = WebCore::InspectorInstrumentation::instrumentingAgents(v33, v34)) != 0
            && (v36 = *(_QWORD *)(v35 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v36, (WTF::StringImpl *)(v16 + 8), (uint64_t)v24, (uint64_t)v51);
          }
          else
          {
            LOBYTE(v51[0]) = 0;
            v52 = 0;
          }
          v37 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
          if (v37
            && (v39 = WebCore::InspectorInstrumentation::instrumentingAgents(v37, v38)) != 0
            && (v40 = *(_QWORD *)(v39 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v40, (WebCore::CanvasRenderingContext *)(v16 + 8), v31, (uint64_t)&v53);
          }
          else
          {
            LOBYTE(v53) = 0;
            v54 = 0;
          }
          v49[0] = v51;
          v49[1] = 2;
          v41 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
          if (v41)
          {
            v43 = WebCore::InspectorInstrumentation::instrumentingAgents(v41, v42);
            if (v43)
            {
              v44 = *(_QWORD *)(v43 + 96);
              if (v44)
                WebCore::InspectorCanvasAgent::recordAction(v44, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v50, v49);
            }
          }
          if (v54)
          {
            v45 = v53;
            v53 = 0;
            if (v45)
            {
              if (*v45 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v45;
            }
          }
          if (v52)
          {
            v46 = (_DWORD *)v51[0];
            v51[0] = 0;
            if (v46)
            {
              if (*v46 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v46;
            }
          }
          v47 = v50;
          v50 = 0;
          if (v47)
          {
            if (*(_DWORD *)v47 == 2)
              WTF::StringImpl::destroy(v47, v42);
            else
              *(_DWORD *)v47 -= 2;
          }
        }
        WebCore::WebGLRenderingContextBase::attachShader((WTF::StringImpl *)v16, v24, v31);
        return 10;
      }
      else
      {
LABEL_37:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v51, 1, "shader", 7, "WebGLRenderingContext", 22, a8, "attachShader", 13, "WebGLShader", 12);
        return 0;
      }
    }
    else
    {
LABEL_24:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v51, 0, "program", 8, "WebGLRenderingContext", 22, a8, "attachShader", 13, "WebGLProgram", 13);
      return 0;
    }
  }
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_bindAttribLocation(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  WebCore::WebGLProgram *v25;
  uint64_t v26;
  JSC::VM *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  int v33;
  JSValue v36;
  WTF::StringImpl *v37;
  char hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  WebCore::InspectorInstrumentation *v44;
  WebCore::ScriptExecutionContext *v45;
  uint64_t v46;
  WebCore::InspectorCanvasAgent *v47;
  WebCore::InspectorInstrumentation *v48;
  WebCore::ScriptExecutionContext *v49;
  uint64_t v50;
  WebCore::InspectorCanvasAgent *v51;
  WebCore::InspectorInstrumentation *v52;
  WebCore::ScriptExecutionContext *v53;
  uint64_t v54;
  uint64_t v55;
  _DWORD *v56;
  _DWORD *v57;
  WTF::StringImpl *v58;
  WTF::StringImpl *v59;
  WebCore *v60;
  JSC::JSGlobalObject *v61;
  JSC::CallFrame *v62;
  JSC::VM *v63;
  WTF::StringImpl *v64[2];
  WTF::StringImpl *v65;
  WTF::StringImpl *v66;
  int v67;
  unsigned int v68[2];
  WTF::StringImpl *v69[2];
  char v70;
  _DWORD *v71;
  char v72;
  _DWORD *v73;
  char v74;
  uint64_t v75;

  v75 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v63 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v63, "WebGLRenderingContext", "bindAttribLocation");
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSWebGLRenderingContext::s_info && v14 != 0);
  }
  if (!v13)
    return WebCore::throwThisTypeError((int)this, (int)&v63, "WebGLRenderingContext", "bindAttribLocation");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v36.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v36);
  }
  v17 = *(_QWORD *)(v10 + 24);
  v18 = *((_QWORD *)a2 + 6);
  v69[0] = v9;
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_24;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSWebGLProgram::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSWebGLProgram::s_info && v21 != 0);
  }
  if (!v20 || (v25 = *(WebCore::WebGLProgram **)(v18 + 24)) == 0)
  {
LABEL_24:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v69, 0, "program", 8, "WebGLRenderingContext", 22, a8, "bindAttribLocation", 19, "WebGLProgram", 13);
    return 0;
  }
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v68);
  if (v68[1])
    return 0;
  v26 = *((_QWORD *)a2 + 8);
  v69[0] = (WTF::StringImpl *)v26;
  v27 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v26 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v26 + 5) == 2)
  {
    v28 = *(WTF::StringImpl **)(v26 + 8);
    if ((v28 & 1) != 0)
    {
      v28 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v26, this);
      if (!v28)
        goto LABEL_32;
    }
    else if (!v28)
    {
LABEL_32:
      v64[0] = v28;
      goto LABEL_33;
    }
    *(_DWORD *)v28 += 2;
    goto LABEL_32;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v69, this);
LABEL_33:
  if (*((_DWORD *)v27 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v27);
    v29 = v64[0];
    if ((hasExceptionsAfterHandlingTraps & 1) != 0)
    {
      v67 = 1;
      v64[0] = 0;
      if (v29)
      {
        if (*(_DWORD *)v29 == 2)
        {
          WTF::StringImpl::destroy(v29, v37);
          v33 = v67;
          v24 = 0;
          goto LABEL_41;
        }
        *(_DWORD *)v29 -= 2;
      }
      v24 = 0;
      v33 = 1;
      goto LABEL_42;
    }
  }
  else
  {
    v29 = v64[0];
  }
  v66 = v29;
  v67 = 0;
  if (*(_BYTE *)(v17 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v65 = v69[0];
    v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v39
      && (v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40)) != 0
      && (v42 = *(_QWORD *)(v41 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v42, (WTF::StringImpl *)(v17 + 8), (uint64_t)v25, (uint64_t)v69);
    }
    else
    {
      LOBYTE(v69[0]) = 0;
      v70 = 0;
    }
    v43 = v68[0];
    v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v44
      && (v46 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, v45)) != 0
      && (v47 = *(WebCore::InspectorCanvasAgent **)(v46 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v47, (WebCore::CanvasRenderingContext *)(v17 + 8), v43, (uint64_t)&v71);
    }
    else
    {
      LOBYTE(v71) = 0;
      v72 = 0;
    }
    v48 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v48
      && (v50 = WebCore::InspectorInstrumentation::instrumentingAgents(v48, v49)) != 0
      && (v51 = *(WebCore::InspectorCanvasAgent **)(v50 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v51, (WebCore::CanvasRenderingContext *)(v17 + 8), (int **)&v66, (uint64_t)&v73);
    }
    else
    {
      LOBYTE(v73) = 0;
      v74 = 0;
    }
    v64[0] = (WTF::StringImpl *)v69;
    v64[1] = (WTF::StringImpl *)3;
    v52 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v52)
    {
      v54 = WebCore::InspectorInstrumentation::instrumentingAgents(v52, v53);
      if (v54)
      {
        v55 = *(_QWORD *)(v54 + 96);
        if (v55)
          WebCore::InspectorCanvasAgent::recordAction(v55, (WebCore::CanvasRenderingContext *)(v17 + 8), (const WTF::StringImpl *)&v65, v64);
      }
    }
    if (v74)
    {
      v56 = v73;
      v73 = 0;
      if (v56)
      {
        if (*v56 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v56;
      }
    }
    if (v72)
    {
      v57 = v71;
      v71 = 0;
      if (v57)
      {
        if (*v57 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v57;
      }
    }
    if (v70)
    {
      v58 = v69[0];
      v69[0] = 0;
      if (v58)
      {
        if (*(_DWORD *)v58 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*(_DWORD *)v58;
      }
    }
    v59 = v65;
    v65 = 0;
    if (v59)
    {
      if (*(_DWORD *)v59 == 2)
        WTF::StringImpl::destroy(v59, v53);
      else
        *(_DWORD *)v59 -= 2;
    }
  }
  if (!v67)
  {
    v30 = v66;
    v66 = 0;
    v69[0] = v30;
    WebCore::WebGLRenderingContextBase::bindAttribLocation((WTF::StringImpl *)v17, v25, v68[0], (const WTF::String *)v69);
    v32 = v69[0];
    v69[0] = 0;
    if (v32)
    {
      if (*(_DWORD *)v32 == 2)
        WTF::StringImpl::destroy(v32, v31);
      else
        *(_DWORD *)v32 -= 2;
    }
    v33 = v67;
    v24 = 10;
LABEL_41:
    if (v33 != -1)
LABEL_42:
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E333EAB8[v33])(v69, &v66);
    return (_BYTE *)v24;
  }
  v60 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsWebGLRenderingContextPrototypeFunction_bindBuffer(v60, v61, v62);
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_bindBuffer(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::WebGLBuffer *v15;
  uint64_t v16;
  _BOOL4 v17;
  char **v18;
  BOOL v19;
  uint64_t v22;
  JSValue v23;
  WebCore::InspectorInstrumentation *v24;
  WebCore::ScriptExecutionContext *v25;
  uint64_t v26;
  WebCore::InspectorCanvasAgent *v27;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  uint64_t v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  _DWORD *v37;
  WTF::StringImpl *v38;
  JSC::VM *v39;
  _QWORD v40[2];
  WTF::StringImpl *v41;
  unsigned int v42[2];
  _QWORD v43[2];
  char v44;
  _DWORD *v45;
  char v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v39 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v39, "WebGLRenderingContext", "bindBuffer");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v39, "WebGLRenderingContext", "bindBuffer");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v23.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v23);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v42);
    if (v42[1])
    {
      return 0;
    }
    else
    {
      v14 = *((_QWORD *)a2 + 7);
      if ((v14 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v15 = 0;
      }
      else
      {
        v43[0] = *((_QWORD *)this + 7);
        if ((v14 & 0xFFFE000000000002) != 0)
          goto LABEL_27;
        v16 = *(unsigned int *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C);
        v17 = *(_DWORD *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C) != 0;
        v18 = (char **)(16 * v16);
        if ((_DWORD)v16)
          v19 = v18 == &WebCore::JSWebGLBuffer::s_info;
        else
          v19 = 1;
        if (!v19)
        {
          do
          {
            v18 = (char **)v18[2];
            v17 = v18 != 0;
          }
          while (v18 != &WebCore::JSWebGLBuffer::s_info && v18 != 0);
        }
        if (!v17 || (v15 = *(WebCore::WebGLBuffer **)(v14 + 24)) == 0)
        {
LABEL_27:
          WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v43, 1, "buffer", 7, "WebGLRenderingContext", 22, v13, "bindBuffer", 11, "WebGLBuffer", 12);
          return 0;
        }
      }
      if (*(_BYTE *)(v12 + 33))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v22 = v42[0];
        v24 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
        if (v24
          && (v26 = WebCore::InspectorInstrumentation::instrumentingAgents(v24, v25)) != 0
          && (v27 = *(WebCore::InspectorCanvasAgent **)(v26 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v27, (WebCore::CanvasRenderingContext *)(v12 + 8), v22, (uint64_t)v43);
        }
        else
        {
          LOBYTE(v43[0]) = 0;
          v44 = 0;
        }
        v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
        if (v28
          && (v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29)) != 0
          && (v31 = *(_QWORD *)(v30 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v31, (WebCore::CanvasRenderingContext *)(v12 + 8), v15, (uint64_t)&v45);
        }
        else
        {
          LOBYTE(v45) = 0;
          v46 = 0;
        }
        v40[0] = v43;
        v40[1] = 2;
        v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
        if (v32)
        {
          v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33);
          if (v34)
          {
            v35 = *(_QWORD *)(v34 + 96);
            if (v35)
              WebCore::InspectorCanvasAgent::recordAction(v35, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v41, v40);
          }
        }
        if (v46)
        {
          v36 = v45;
          v45 = 0;
          if (v36)
          {
            if (*v36 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v36;
          }
        }
        if (v44)
        {
          v37 = (_DWORD *)v43[0];
          v43[0] = 0;
          if (v37)
          {
            if (*v37 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v37;
          }
        }
        v38 = v41;
        v41 = 0;
        if (v38)
        {
          if (*(_DWORD *)v38 == 2)
            WTF::StringImpl::destroy(v38, v33);
          else
            *(_DWORD *)v38 -= 2;
        }
      }
      else
      {
        v22 = v42[0];
      }
      WebCore::WebGLRenderingContextBase::bindBuffer((WTF::StringImpl *)v12, v22, v15);
      return 10;
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_bindFramebuffer(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WebCore::WebGLFramebuffer *v16;
  uint64_t v17;
  _BOOL4 v18;
  char **v19;
  BOOL v20;
  uint64_t v23;
  JSValue v24;
  WebCore::InspectorInstrumentation *v25;
  WebCore::ScriptExecutionContext *v26;
  uint64_t v27;
  WebCore::InspectorCanvasAgent *v28;
  WebCore::InspectorInstrumentation *v29;
  WebCore::ScriptExecutionContext *v30;
  uint64_t v31;
  uint64_t v32;
  WebCore::InspectorInstrumentation *v33;
  WebCore::ScriptExecutionContext *v34;
  uint64_t v35;
  uint64_t v36;
  _DWORD *v37;
  _DWORD *v38;
  WTF::StringImpl *v39;
  JSC::VM *v40;
  _QWORD v41[2];
  WTF::StringImpl *v42;
  unsigned int v43[2];
  _QWORD v44[2];
  char v45;
  _DWORD *v46;
  char v47;
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v40 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v40, "WebGLRenderingContext", "bindFramebuffer");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v40, "WebGLRenderingContext", "bindFramebuffer");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v24.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v24);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v43);
    if (v43[1])
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      if ((v15 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v16 = 0;
      }
      else
      {
        v44[0] = *((_QWORD *)this + 7);
        if ((v15 & 0xFFFE000000000002) != 0)
          goto LABEL_27;
        v17 = *(unsigned int *)(16 * (*(_DWORD *)v15 & 0xFFFFFFFE) + 0x4C);
        v18 = *(_DWORD *)(16 * (*(_DWORD *)v15 & 0xFFFFFFFE) + 0x4C) != 0;
        v19 = (char **)(16 * v17);
        if ((_DWORD)v17)
          v20 = v19 == &WebCore::JSWebGLFramebuffer::s_info;
        else
          v20 = 1;
        if (!v20)
        {
          do
          {
            v19 = (char **)v19[2];
            v18 = v19 != 0;
          }
          while (v19 != &WebCore::JSWebGLFramebuffer::s_info && v19 != 0);
        }
        if (!v18 || (v16 = *(WebCore::WebGLFramebuffer **)(v15 + 24)) == 0)
        {
LABEL_27:
          WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v44, 1, "framebuffer", 12, "WebGLRenderingContext", 22, v14, "bindFramebuffer", 16, "WebGLFramebuffer", 17);
          return 0;
        }
      }
      if (*(_BYTE *)(v12 + 33))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v23 = v43[0];
        v25 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
        if (v25
          && (v27 = WebCore::InspectorInstrumentation::instrumentingAgents(v25, v26)) != 0
          && (v28 = *(WebCore::InspectorCanvasAgent **)(v27 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v28, (WebCore::CanvasRenderingContext *)(v12 + 8), v23, (uint64_t)v44);
        }
        else
        {
          LOBYTE(v44[0]) = 0;
          v45 = 0;
        }
        v29 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
        if (v29
          && (v31 = WebCore::InspectorInstrumentation::instrumentingAgents(v29, v30)) != 0
          && (v32 = *(_QWORD *)(v31 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v32, (WebCore::CanvasRenderingContext *)(v12 + 8), v16, (uint64_t)&v46);
        }
        else
        {
          LOBYTE(v46) = 0;
          v47 = 0;
        }
        v41[0] = v44;
        v41[1] = 2;
        v33 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
        if (v33)
        {
          v35 = WebCore::InspectorInstrumentation::instrumentingAgents(v33, v34);
          if (v35)
          {
            v36 = *(_QWORD *)(v35 + 96);
            if (v36)
              WebCore::InspectorCanvasAgent::recordAction(v36, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v42, v41);
          }
        }
        if (v47)
        {
          v37 = v46;
          v46 = 0;
          if (v37)
          {
            if (*v37 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v37;
          }
        }
        if (v45)
        {
          v38 = (_DWORD *)v44[0];
          v44[0] = 0;
          if (v38)
          {
            if (*v38 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v38;
          }
        }
        v39 = v42;
        v42 = 0;
        if (v39)
        {
          if (*(_DWORD *)v39 == 2)
            WTF::StringImpl::destroy(v39, v34);
          else
            *(_DWORD *)v39 -= 2;
        }
      }
      else
      {
        v23 = v43[0];
      }
      WebCore::WebGLRenderingContextBase::bindFramebuffer((WTF::StringImpl *)v12, v23, v16, v13);
      return 10;
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_bindRenderbuffer(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WebCore::WebGLRenderbuffer *v16;
  uint64_t v17;
  _BOOL4 v18;
  char **v19;
  BOOL v20;
  uint64_t v23;
  JSValue v24;
  WebCore::InspectorInstrumentation *v25;
  WebCore::ScriptExecutionContext *v26;
  uint64_t v27;
  WebCore::InspectorCanvasAgent *v28;
  WebCore::InspectorInstrumentation *v29;
  WebCore::ScriptExecutionContext *v30;
  uint64_t v31;
  uint64_t v32;
  WebCore::InspectorInstrumentation *v33;
  WebCore::ScriptExecutionContext *v34;
  uint64_t v35;
  uint64_t v36;
  _DWORD *v37;
  _DWORD *v38;
  WTF::StringImpl *v39;
  JSC::VM *v40;
  _QWORD v41[2];
  WTF::StringImpl *v42;
  unsigned int v43[2];
  _QWORD v44[2];
  char v45;
  _DWORD *v46;
  char v47;
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v40 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v40, "WebGLRenderingContext", "bindRenderbuffer");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v40, "WebGLRenderingContext", "bindRenderbuffer");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v24.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v24);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v43);
    if (v43[1])
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      if ((v15 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v16 = 0;
      }
      else
      {
        v44[0] = *((_QWORD *)this + 7);
        if ((v15 & 0xFFFE000000000002) != 0)
          goto LABEL_27;
        v17 = *(unsigned int *)(16 * (*(_DWORD *)v15 & 0xFFFFFFFE) + 0x4C);
        v18 = *(_DWORD *)(16 * (*(_DWORD *)v15 & 0xFFFFFFFE) + 0x4C) != 0;
        v19 = (char **)(16 * v17);
        if ((_DWORD)v17)
          v20 = v19 == &WebCore::JSWebGLRenderbuffer::s_info;
        else
          v20 = 1;
        if (!v20)
        {
          do
          {
            v19 = (char **)v19[2];
            v18 = v19 != 0;
          }
          while (v19 != &WebCore::JSWebGLRenderbuffer::s_info && v19 != 0);
        }
        if (!v18 || (v16 = *(WebCore::WebGLRenderbuffer **)(v15 + 24)) == 0)
        {
LABEL_27:
          WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v44, 1, "renderbuffer", 13, "WebGLRenderingContext", 22, v14, "bindRenderbuffer", 17, "WebGLRenderbuffer", 18);
          return 0;
        }
      }
      if (*(_BYTE *)(v12 + 33))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v23 = v43[0];
        v25 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
        if (v25
          && (v27 = WebCore::InspectorInstrumentation::instrumentingAgents(v25, v26)) != 0
          && (v28 = *(WebCore::InspectorCanvasAgent **)(v27 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v28, (WebCore::CanvasRenderingContext *)(v12 + 8), v23, (uint64_t)v44);
        }
        else
        {
          LOBYTE(v44[0]) = 0;
          v45 = 0;
        }
        v29 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
        if (v29
          && (v31 = WebCore::InspectorInstrumentation::instrumentingAgents(v29, v30)) != 0
          && (v32 = *(_QWORD *)(v31 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v32, (WebCore::CanvasRenderingContext *)(v12 + 8), v16, (uint64_t)&v46);
        }
        else
        {
          LOBYTE(v46) = 0;
          v47 = 0;
        }
        v41[0] = v44;
        v41[1] = 2;
        v33 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
        if (v33)
        {
          v35 = WebCore::InspectorInstrumentation::instrumentingAgents(v33, v34);
          if (v35)
          {
            v36 = *(_QWORD *)(v35 + 96);
            if (v36)
              WebCore::InspectorCanvasAgent::recordAction(v36, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v42, v41);
          }
        }
        if (v47)
        {
          v37 = v46;
          v46 = 0;
          if (v37)
          {
            if (*v37 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v37;
          }
        }
        if (v45)
        {
          v38 = (_DWORD *)v44[0];
          v44[0] = 0;
          if (v38)
          {
            if (*v38 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v38;
          }
        }
        v39 = v42;
        v42 = 0;
        if (v39)
        {
          if (*(_DWORD *)v39 == 2)
            WTF::StringImpl::destroy(v39, v34);
          else
            *(_DWORD *)v39 -= 2;
        }
      }
      else
      {
        v23 = v43[0];
      }
      WebCore::WebGLRenderingContextBase::bindRenderbuffer((WTF::StringImpl *)v12, v23, v16, v13);
      return 10;
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_bindTexture(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::WebGLTexture *v15;
  uint64_t v16;
  _BOOL4 v17;
  char **v18;
  BOOL v19;
  uint64_t v22;
  JSValue v23;
  WebCore::InspectorInstrumentation *v24;
  WebCore::ScriptExecutionContext *v25;
  uint64_t v26;
  WebCore::InspectorCanvasAgent *v27;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  uint64_t v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  _DWORD *v37;
  WTF::StringImpl *v38;
  JSC::VM *v39;
  _QWORD v40[2];
  WTF::StringImpl *v41;
  unsigned int v42[2];
  _QWORD v43[2];
  char v44;
  _DWORD *v45;
  char v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v39 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v39, "WebGLRenderingContext", "bindTexture");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v39, "WebGLRenderingContext", "bindTexture");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v23.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v23);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v42);
    if (v42[1])
    {
      return 0;
    }
    else
    {
      v14 = *((_QWORD *)a2 + 7);
      if ((v14 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v15 = 0;
      }
      else
      {
        v43[0] = *((_QWORD *)this + 7);
        if ((v14 & 0xFFFE000000000002) != 0)
          goto LABEL_27;
        v16 = *(unsigned int *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C);
        v17 = *(_DWORD *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C) != 0;
        v18 = (char **)(16 * v16);
        if ((_DWORD)v16)
          v19 = v18 == &WebCore::JSWebGLTexture::s_info;
        else
          v19 = 1;
        if (!v19)
        {
          do
          {
            v18 = (char **)v18[2];
            v17 = v18 != 0;
          }
          while (v18 != &WebCore::JSWebGLTexture::s_info && v18 != 0);
        }
        if (!v17 || (v15 = *(WebCore::WebGLTexture **)(v14 + 24)) == 0)
        {
LABEL_27:
          WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v43, 1, "texture", 8, "WebGLRenderingContext", 22, v13, "bindTexture", 12, "WebGLTexture", 13);
          return 0;
        }
      }
      if (*(_BYTE *)(v12 + 33))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v22 = v42[0];
        v24 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
        if (v24
          && (v26 = WebCore::InspectorInstrumentation::instrumentingAgents(v24, v25)) != 0
          && (v27 = *(WebCore::InspectorCanvasAgent **)(v26 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v27, (WebCore::CanvasRenderingContext *)(v12 + 8), v22, (uint64_t)v43);
        }
        else
        {
          LOBYTE(v43[0]) = 0;
          v44 = 0;
        }
        v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
        if (v28
          && (v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29)) != 0
          && (v31 = *(_QWORD *)(v30 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v31, (WebCore::CanvasRenderingContext *)(v12 + 8), v15, (uint64_t)&v45);
        }
        else
        {
          LOBYTE(v45) = 0;
          v46 = 0;
        }
        v40[0] = v43;
        v40[1] = 2;
        v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
        if (v32)
        {
          v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33);
          if (v34)
          {
            v35 = *(_QWORD *)(v34 + 96);
            if (v35)
              WebCore::InspectorCanvasAgent::recordAction(v35, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v41, v40);
          }
        }
        if (v46)
        {
          v36 = v45;
          v45 = 0;
          if (v36)
          {
            if (*v36 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v36;
          }
        }
        if (v44)
        {
          v37 = (_DWORD *)v43[0];
          v43[0] = 0;
          if (v37)
          {
            if (*v37 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v37;
          }
        }
        v38 = v41;
        v41 = 0;
        if (v38)
        {
          if (*(_DWORD *)v38 == 2)
            WTF::StringImpl::destroy(v38, v33);
          else
            *(_DWORD *)v38 -= 2;
        }
      }
      else
      {
        v22 = v42[0];
      }
      WebCore::WebGLRenderingContextBase::bindTexture((WTF::StringImpl *)v12, v22, v15);
      return 10;
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_blendColor(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  float v15;
  unint64_t v16;
  JSC::VM *v17;
  double v18;
  float v19;
  unint64_t v20;
  JSC::VM *v21;
  double v22;
  float v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  float v27;
  JSValue v29;
  int v30;
  int v31;
  int v32;
  int v33;
  WebCore::InspectorInstrumentation *v34;
  WebCore::ScriptExecutionContext *v35;
  uint64_t v36;
  WebCore::InspectorCanvasAgent *v37;
  WebCore::InspectorInstrumentation *v38;
  WebCore::ScriptExecutionContext *v39;
  uint64_t v40;
  WebCore::InspectorCanvasAgent *v41;
  WebCore::InspectorInstrumentation *v42;
  WebCore::ScriptExecutionContext *v43;
  uint64_t v44;
  WebCore::InspectorCanvasAgent *v45;
  WebCore::InspectorInstrumentation *v46;
  WebCore::ScriptExecutionContext *v47;
  uint64_t v48;
  WebCore::InspectorCanvasAgent *v49;
  WebCore::InspectorInstrumentation *v50;
  WebCore::ScriptExecutionContext *v51;
  uint64_t v52;
  uint64_t v53;
  _DWORD *v54;
  _DWORD *v55;
  _DWORD *v56;
  _DWORD *v57;
  WTF::StringImpl *v58;
  double v59;
  double v60;
  double v61;
  double v62;
  JSC::VM *v63;
  _QWORD v64[2];
  WTF::StringImpl *v65;
  _QWORD v66[2];
  char v67;
  _DWORD *v68;
  char v69;
  _DWORD *v70;
  char v71;
  _DWORD *v72;
  char v73;
  uint64_t v74;

  v74 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v63 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v63, "WebGLRenderingContext", "blendColor");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v63, "WebGLRenderingContext", "blendColor");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v29.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v29);
  }
  v12 = *(_QWORD *)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  v66[0] = v13;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v66, this);
    v14 = v59;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  if (v14 < -3.40282347e38)
  {
    *(float *)&v30 = -INFINITY;
  }
  else
  {
    if (v14 <= 3.40282347e38)
    {
      v15 = v14;
      goto LABEL_20;
    }
    *(float *)&v30 = INFINITY;
  }
  v15 = *(float *)&v30;
LABEL_20:
  v16 = *((_QWORD *)a2 + 7);
  v66[0] = v16;
  v17 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v16 >= 0xFFFE000000000000)
  {
    v18 = (double)(int)v16;
  }
  else if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v66, this);
    v18 = v60;
  }
  else
  {
    *(_QWORD *)&v18 = v16 - 0x2000000000000;
  }
  if (*((_DWORD *)v17 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) != 0)
    return 0;
  if (v18 < -3.40282347e38)
  {
    *(float *)&v31 = -INFINITY;
  }
  else
  {
    if (v18 <= 3.40282347e38)
    {
      v19 = v18;
      goto LABEL_27;
    }
    *(float *)&v31 = INFINITY;
  }
  v19 = *(float *)&v31;
LABEL_27:
  v20 = *((_QWORD *)a2 + 8);
  v66[0] = v20;
  v21 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v20 >= 0xFFFE000000000000)
  {
    v22 = (double)(int)v20;
  }
  else if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v66, this);
    v22 = v61;
  }
  else
  {
    *(_QWORD *)&v22 = v20 - 0x2000000000000;
  }
  if (*((_DWORD *)v21 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) != 0)
    return 0;
  if (v22 < -3.40282347e38)
  {
    *(float *)&v32 = -INFINITY;
  }
  else
  {
    if (v22 <= 3.40282347e38)
    {
      v23 = v22;
      goto LABEL_34;
    }
    *(float *)&v32 = INFINITY;
  }
  v23 = *(float *)&v32;
LABEL_34:
  v24 = *((_QWORD *)a2 + 9);
  v66[0] = v24;
  v25 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v24 >= 0xFFFE000000000000)
  {
    v26 = (double)(int)v24;
  }
  else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v66, this);
    v26 = v62;
  }
  else
  {
    *(_QWORD *)&v26 = v24 - 0x2000000000000;
  }
  if (*((_DWORD *)v25 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v25) & 1) != 0)
    return 0;
  if (v26 < -3.40282347e38)
  {
    *(float *)&v33 = -INFINITY;
LABEL_74:
    v27 = *(float *)&v33;
    goto LABEL_41;
  }
  if (v26 > 3.40282347e38)
  {
    *(float *)&v33 = INFINITY;
    goto LABEL_74;
  }
  v27 = v26;
LABEL_41:
  if (*(_BYTE *)(v12 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v34 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v34
      && (v36 = WebCore::InspectorInstrumentation::instrumentingAgents(v34, v35)) != 0
      && (v37 = *(WebCore::InspectorCanvasAgent **)(v36 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v37, (WebCore::CanvasRenderingContext *)(v12 + 8), v15, (uint64_t)v66);
    }
    else
    {
      LOBYTE(v66[0]) = 0;
      v67 = 0;
    }
    v38 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v38
      && (v40 = WebCore::InspectorInstrumentation::instrumentingAgents(v38, v39)) != 0
      && (v41 = *(WebCore::InspectorCanvasAgent **)(v40 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v41, (WebCore::CanvasRenderingContext *)(v12 + 8), v19, (uint64_t)&v68);
    }
    else
    {
      LOBYTE(v68) = 0;
      v69 = 0;
    }
    v42 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v42
      && (v44 = WebCore::InspectorInstrumentation::instrumentingAgents(v42, v43)) != 0
      && (v45 = *(WebCore::InspectorCanvasAgent **)(v44 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v45, (WebCore::CanvasRenderingContext *)(v12 + 8), v23, (uint64_t)&v70);
    }
    else
    {
      LOBYTE(v70) = 0;
      v71 = 0;
    }
    v46 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v46
      && (v48 = WebCore::InspectorInstrumentation::instrumentingAgents(v46, v47)) != 0
      && (v49 = *(WebCore::InspectorCanvasAgent **)(v48 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v49, (WebCore::CanvasRenderingContext *)(v12 + 8), v27, (uint64_t)&v72);
    }
    else
    {
      LOBYTE(v72) = 0;
      v73 = 0;
    }
    v64[0] = v66;
    v64[1] = 4;
    v50 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v50)
    {
      v52 = WebCore::InspectorInstrumentation::instrumentingAgents(v50, v51);
      if (v52)
      {
        v53 = *(_QWORD *)(v52 + 96);
        if (v53)
          WebCore::InspectorCanvasAgent::recordAction(v53, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v65, v64);
      }
    }
    if (v73)
    {
      v54 = v72;
      v72 = 0;
      if (v54)
      {
        if (*v54 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v54;
      }
    }
    if (v71)
    {
      v55 = v70;
      v70 = 0;
      if (v55)
      {
        if (*v55 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v55;
      }
    }
    if (v69)
    {
      v56 = v68;
      v68 = 0;
      if (v56)
      {
        if (*v56 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v56;
      }
    }
    if (v67)
    {
      v57 = (_DWORD *)v66[0];
      v66[0] = 0;
      if (v57)
      {
        if (*v57 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v57;
      }
    }
    v58 = v65;
    v65 = 0;
    if (v58)
    {
      if (*(_DWORD *)v58 == 2)
        WTF::StringImpl::destroy(v58, v51);
      else
        *(_DWORD *)v58 -= 2;
    }
  }
  if (!*(_BYTE *)(v12 + 364))
    (*(void (**)(_QWORD, float, float, float, float))(**(_QWORD **)(v12 + 88) + 80))(*(_QWORD *)(v12 + 88), v15, v19, v23, v27);
  return 10;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_blendEquation(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  JSValue v13;
  unsigned int v14;
  WebCore::InspectorInstrumentation *v15;
  WebCore::ScriptExecutionContext *v16;
  uint64_t v17;
  WebCore::InspectorCanvasAgent *v18;
  WebCore::InspectorInstrumentation *v19;
  WebCore::ScriptExecutionContext *v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  WTF::StringImpl *v24;
  JSC::VM *v25;
  _QWORD v26[2];
  WTF::StringImpl *v27;
  _DWORD v28[2];
  _QWORD v29[2];
  char v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "WebGLRenderingContext", "blendEquation");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "WebGLRenderingContext", "blendEquation");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v28);
    if (v28[1])
    {
      return 0;
    }
    else
    {
      if (*(_BYTE *)(v11 + 33))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v14 = v28[0];
        v15 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v15
          && (v17 = WebCore::InspectorInstrumentation::instrumentingAgents(v15, v16)) != 0
          && (v18 = *(WebCore::InspectorCanvasAgent **)(v17 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v18, (WebCore::CanvasRenderingContext *)(v11 + 8), v14, (uint64_t)v29);
        }
        else
        {
          LOBYTE(v29[0]) = 0;
          v30 = 0;
        }
        v26[0] = v29;
        v26[1] = 1;
        v19 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v19)
        {
          v21 = WebCore::InspectorInstrumentation::instrumentingAgents(v19, v20);
          if (v21)
          {
            v22 = *(_QWORD *)(v21 + 96);
            if (v22)
              WebCore::InspectorCanvasAgent::recordAction(v22, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v27, v26);
          }
        }
        if (v30)
        {
          v23 = (_DWORD *)v29[0];
          v29[0] = 0;
          if (v23)
          {
            if (*v23 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v23;
          }
        }
        v24 = v27;
        v27 = 0;
        if (v24)
        {
          if (*(_DWORD *)v24 == 2)
            WTF::StringImpl::destroy(v24, v20);
          else
            *(_DWORD *)v24 -= 2;
        }
      }
      if (!*(_BYTE *)(v11 + 364))
        (*(void (**)(_QWORD, _QWORD))(**(_QWORD **)(v11 + 88) + 88))(*(_QWORD *)(v11 + 88), v28[0]);
      return 10;
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_blendEquationSeparate(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  JSValue v14;
  unsigned int v15;
  WebCore::InspectorInstrumentation *v16;
  WebCore::ScriptExecutionContext *v17;
  uint64_t v18;
  WebCore::InspectorCanvasAgent *v19;
  unsigned int v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  WebCore::InspectorCanvasAgent *v24;
  WebCore::InspectorInstrumentation *v25;
  WebCore::ScriptExecutionContext *v26;
  uint64_t v27;
  uint64_t v28;
  _DWORD *v29;
  _DWORD *v30;
  WTF::StringImpl *v31;
  JSC::VM *v32;
  _QWORD v33[2];
  WTF::StringImpl *v34;
  _DWORD v35[2];
  _DWORD v36[2];
  _QWORD v37[2];
  char v38;
  _DWORD *v39;
  char v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v32 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v32, "WebGLRenderingContext", "blendEquationSeparate");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v32, "WebGLRenderingContext", "blendEquationSeparate");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v14.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v14);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v36);
    if (v36[1])
    {
      return 0;
    }
    else
    {
      WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v35);
      if (v35[1])
      {
        return 0;
      }
      else
      {
        if (*(_BYTE *)(v12 + 33))
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v15 = v36[0];
          v16 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
          if (v16
            && (v18 = WebCore::InspectorInstrumentation::instrumentingAgents(v16, v17)) != 0
            && (v19 = *(WebCore::InspectorCanvasAgent **)(v18 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v19, (WebCore::CanvasRenderingContext *)(v12 + 8), v15, (uint64_t)v37);
          }
          else
          {
            LOBYTE(v37[0]) = 0;
            v38 = 0;
          }
          v20 = v35[0];
          v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
          if (v21
            && (v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22)) != 0
            && (v24 = *(WebCore::InspectorCanvasAgent **)(v23 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v24, (WebCore::CanvasRenderingContext *)(v12 + 8), v20, (uint64_t)&v39);
          }
          else
          {
            LOBYTE(v39) = 0;
            v40 = 0;
          }
          v33[0] = v37;
          v33[1] = 2;
          v25 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
          if (v25)
          {
            v27 = WebCore::InspectorInstrumentation::instrumentingAgents(v25, v26);
            if (v27)
            {
              v28 = *(_QWORD *)(v27 + 96);
              if (v28)
                WebCore::InspectorCanvasAgent::recordAction(v28, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v34, v33);
            }
          }
          if (v40)
          {
            v29 = v39;
            v39 = 0;
            if (v29)
            {
              if (*v29 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v29;
            }
          }
          if (v38)
          {
            v30 = (_DWORD *)v37[0];
            v37[0] = 0;
            if (v30)
            {
              if (*v30 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v30;
            }
          }
          v31 = v34;
          v34 = 0;
          if (v31)
          {
            if (*(_DWORD *)v31 == 2)
              WTF::StringImpl::destroy(v31, v26);
            else
              *(_DWORD *)v31 -= 2;
          }
        }
        if (!*(_BYTE *)(v12 + 364))
          (*(void (**)(_QWORD, _QWORD, _QWORD))(**(_QWORD **)(v12 + 88) + 96))(*(_QWORD *)(v12 + 88), v36[0], v35[0]);
        return 10;
      }
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_blendFunc(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  JSValue v14;
  unsigned int v15;
  WebCore::InspectorInstrumentation *v16;
  WebCore::ScriptExecutionContext *v17;
  uint64_t v18;
  WebCore::InspectorCanvasAgent *v19;
  unsigned int v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  WebCore::InspectorCanvasAgent *v24;
  WebCore::InspectorInstrumentation *v25;
  WebCore::ScriptExecutionContext *v26;
  uint64_t v27;
  uint64_t v28;
  _DWORD *v29;
  _DWORD *v30;
  WTF::StringImpl *v31;
  JSC::VM *v32;
  _QWORD v33[2];
  WTF::StringImpl *v34;
  _DWORD v35[2];
  _DWORD v36[2];
  _QWORD v37[2];
  char v38;
  _DWORD *v39;
  char v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v32 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v32, "WebGLRenderingContext", "blendFunc");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v32, "WebGLRenderingContext", "blendFunc");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v14.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v14);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v36);
    if (v36[1])
    {
      return 0;
    }
    else
    {
      WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v35);
      if (v35[1])
      {
        return 0;
      }
      else
      {
        if (*(_BYTE *)(v12 + 33))
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v15 = v36[0];
          v16 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
          if (v16
            && (v18 = WebCore::InspectorInstrumentation::instrumentingAgents(v16, v17)) != 0
            && (v19 = *(WebCore::InspectorCanvasAgent **)(v18 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v19, (WebCore::CanvasRenderingContext *)(v12 + 8), v15, (uint64_t)v37);
          }
          else
          {
            LOBYTE(v37[0]) = 0;
            v38 = 0;
          }
          v20 = v35[0];
          v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
          if (v21
            && (v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22)) != 0
            && (v24 = *(WebCore::InspectorCanvasAgent **)(v23 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v24, (WebCore::CanvasRenderingContext *)(v12 + 8), v20, (uint64_t)&v39);
          }
          else
          {
            LOBYTE(v39) = 0;
            v40 = 0;
          }
          v33[0] = v37;
          v33[1] = 2;
          v25 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
          if (v25)
          {
            v27 = WebCore::InspectorInstrumentation::instrumentingAgents(v25, v26);
            if (v27)
            {
              v28 = *(_QWORD *)(v27 + 96);
              if (v28)
                WebCore::InspectorCanvasAgent::recordAction(v28, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v34, v33);
            }
          }
          if (v40)
          {
            v29 = v39;
            v39 = 0;
            if (v29)
            {
              if (*v29 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v29;
            }
          }
          if (v38)
          {
            v30 = (_DWORD *)v37[0];
            v37[0] = 0;
            if (v30)
            {
              if (*v30 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v30;
            }
          }
          v31 = v34;
          v34 = 0;
          if (v31)
          {
            if (*(_DWORD *)v31 == 2)
              WTF::StringImpl::destroy(v31, v26);
            else
              *(_DWORD *)v31 -= 2;
          }
        }
        if (!*(_BYTE *)(v12 + 364))
          (*(void (**)(_QWORD, _QWORD, _QWORD))(**(_QWORD **)(v12 + 88) + 104))(*(_QWORD *)(v12 + 88), v36[0], v35[0]);
        return 10;
      }
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_blendFuncSeparate(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  JSValue v14;
  unsigned int v15;
  WebCore::InspectorInstrumentation *v16;
  WebCore::ScriptExecutionContext *v17;
  uint64_t v18;
  WebCore::InspectorCanvasAgent *v19;
  unsigned int v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  WebCore::InspectorCanvasAgent *v24;
  unsigned int v25;
  WebCore::InspectorInstrumentation *v26;
  WebCore::ScriptExecutionContext *v27;
  uint64_t v28;
  WebCore::InspectorCanvasAgent *v29;
  unsigned int v30;
  WebCore::InspectorInstrumentation *v31;
  WebCore::ScriptExecutionContext *v32;
  uint64_t v33;
  WebCore::InspectorCanvasAgent *v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  uint64_t v38;
  _DWORD *v39;
  _DWORD *v40;
  _DWORD *v41;
  _DWORD *v42;
  WTF::StringImpl *v43;
  JSC::VM *v44;
  _QWORD v45[2];
  WTF::StringImpl *v46;
  _DWORD v47[2];
  _DWORD v48[2];
  _DWORD v49[2];
  _DWORD v50[2];
  _QWORD v51[2];
  char v52;
  _DWORD *v53;
  char v54;
  _DWORD *v55;
  char v56;
  _DWORD *v57;
  char v58;
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v44 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v44, "WebGLRenderingContext", "blendFuncSeparate");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v44, "WebGLRenderingContext", "blendFuncSeparate");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v14.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v14);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v50);
    if (v50[1])
    {
      return 0;
    }
    else
    {
      WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v49);
      if (v49[1])
      {
        return 0;
      }
      else
      {
        WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 8), v48);
        if (v48[1])
        {
          return 0;
        }
        else
        {
          WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 9), v47);
          if (v47[1])
          {
            return 0;
          }
          else
          {
            if (*(_BYTE *)(v12 + 33))
            {
              WTF::StringImpl::createWithoutCopyingNonEmpty();
              v46 = (WTF::StringImpl *)v51[0];
              v15 = v50[0];
              v16 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v16
                && (v18 = WebCore::InspectorInstrumentation::instrumentingAgents(v16, v17)) != 0
                && (v19 = *(WebCore::InspectorCanvasAgent **)(v18 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v19, (WebCore::CanvasRenderingContext *)(v12 + 8), v15, (uint64_t)v51);
              }
              else
              {
                LOBYTE(v51[0]) = 0;
                v52 = 0;
              }
              v20 = v49[0];
              v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v21
                && (v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22)) != 0
                && (v24 = *(WebCore::InspectorCanvasAgent **)(v23 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v24, (WebCore::CanvasRenderingContext *)(v12 + 8), v20, (uint64_t)&v53);
              }
              else
              {
                LOBYTE(v53) = 0;
                v54 = 0;
              }
              v25 = v48[0];
              v26 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v26
                && (v28 = WebCore::InspectorInstrumentation::instrumentingAgents(v26, v27)) != 0
                && (v29 = *(WebCore::InspectorCanvasAgent **)(v28 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v29, (WebCore::CanvasRenderingContext *)(v12 + 8), v25, (uint64_t)&v55);
              }
              else
              {
                LOBYTE(v55) = 0;
                v56 = 0;
              }
              v30 = v47[0];
              v31 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v31
                && (v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v31, v32)) != 0
                && (v34 = *(WebCore::InspectorCanvasAgent **)(v33 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v34, (WebCore::CanvasRenderingContext *)(v12 + 8), v30, (uint64_t)&v57);
              }
              else
              {
                LOBYTE(v57) = 0;
                v58 = 0;
              }
              v45[0] = v51;
              v45[1] = 4;
              v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v35)
              {
                v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36);
                if (v37)
                {
                  v38 = *(_QWORD *)(v37 + 96);
                  if (v38)
                    WebCore::InspectorCanvasAgent::recordAction(v38, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v46, v45);
                }
              }
              if (v58)
              {
                v39 = v57;
                v57 = 0;
                if (v39)
                {
                  if (*v39 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v39;
                }
              }
              if (v56)
              {
                v40 = v55;
                v55 = 0;
                if (v40)
                {
                  if (*v40 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v40;
                }
              }
              if (v54)
              {
                v41 = v53;
                v53 = 0;
                if (v41)
                {
                  if (*v41 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v41;
                }
              }
              if (v52)
              {
                v42 = (_DWORD *)v51[0];
                v51[0] = 0;
                if (v42)
                {
                  if (*v42 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v42;
                }
              }
              v43 = v46;
              v46 = 0;
              if (v43)
              {
                if (*(_DWORD *)v43 == 2)
                  WTF::StringImpl::destroy(v43, v36);
                else
                  *(_DWORD *)v43 -= 2;
              }
            }
            if (!*(_BYTE *)(v12 + 364))
              (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(**(_QWORD **)(v12 + 88) + 112))(*(_QWORD *)(v12 + 88), v50[0], v49[0], v48[0], v47[0]);
            return 10;
          }
        }
      }
    }
  }
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_bufferData(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSWebGLRenderingContext *a4)
{
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  JSValue v14;
  unsigned int v15;
  JSC::VM *v16;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v16 = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v16, "WebGLRenderingContext", "bufferData");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v16, "WebGLRenderingContext", "bufferData");
  if ((unint64_t)(*((int *)a2 + 8) - 4) > 0xFFFFFFFFFFFFFFFCLL)
  {
    v14.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v5, this, v14);
  }
  else
  {
    v12 = *((_QWORD *)a2 + 7);
    if ((v12 & 0xFFFFFFFFFFFFFFF7) == 2)
      return (_BYTE *)WebCore::jsWebGLRenderingContextPrototypeFunction_bufferData1Body(this, a2, *(JSC::CallFrame **)(v6 + 24), a4);
    if ((v12 & 0xFFFE000000000002) == 0
      && (v15 = *(unsigned __int8 *)(v12 + 5), v15 >= 0x17)
      && (v15 == 38 || v15 - 39 <= 0xB))
    {
      return (_BYTE *)WebCore::jsWebGLRenderingContextPrototypeFunction_bufferData1Body(this, a2, *(JSC::CallFrame **)(v6 + 24), a4);
    }
    else
    {
      return (_BYTE *)WebCore::jsWebGL2RenderingContextPrototypeFunction_bufferData3Body((JSC::VM **)this, a2, *(JSC::CallFrame **)(v6 + 24), a4);
    }
  }
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_bufferSubData(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  WTF::DeferrableRefCountedBase *v13;
  uint64_t v14;
  JSC::VM *v15;
  double v16;
  double v17;
  uint64_t v18;
  int v19;
  WTF::DeferrableRefCountedBase *v20;
  uint64_t v21;
  int v22;
  uint64_t v24;
  int v25;
  JSValue v27;
  unsigned int v28;
  WebCore::InspectorInstrumentation *v29;
  WebCore::ScriptExecutionContext *v30;
  uint64_t v31;
  WebCore::InspectorCanvasAgent *v32;
  WebCore::InspectorInstrumentation *v33;
  WebCore::ScriptExecutionContext *v34;
  uint64_t v35;
  WebCore::InspectorCanvasAgent *v36;
  WebCore::InspectorInstrumentation *v37;
  WebCore::ScriptExecutionContext *v38;
  uint64_t v39;
  uint64_t v40;
  WebCore::InspectorInstrumentation *v41;
  WebCore::ScriptExecutionContext *v42;
  uint64_t v43;
  uint64_t v44;
  _DWORD *v45;
  _DWORD *v46;
  WTF::DeferrableRefCountedBase *v47;
  WTF::StringImpl *v48;
  double v49;
  JSC::VM *v50;
  _QWORD v51[2];
  WTF::StringImpl *v52;
  _DWORD v53[2];
  WTF::DeferrableRefCountedBase *v54;
  int v55;
  char v56;
  _DWORD *v57;
  char v58;
  _DWORD *v59;
  char v60;
  WTF::DeferrableRefCountedBase *v61;
  int v62;
  int v63;
  uint64_t v64;

  v64 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v50 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v50, "WebGLRenderingContext", "bufferSubData");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v50, "WebGLRenderingContext", "bufferSubData");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v27.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v27);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v53);
  if (v53[1])
    return 0;
  v13 = (WTF::DeferrableRefCountedBase *)*((_QWORD *)a2 + 7);
  v54 = v13;
  if ((unint64_t)v13 < 0xFFFE000000000000)
  {
    v15 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((unint64_t)v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v54, this);
      v16 = v49;
    }
    else
    {
      *(_QWORD *)&v16 = (char *)v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v15 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) != 0)
      return 0;
    if (fabs(v16) == INFINITY)
    {
      v14 = 0;
    }
    else
    {
      v17 = fmod(trunc(v16), 1.84467441e19);
      if (v17 >= 0.0)
        v14 = (unint64_t)v17;
      else
        v14 = -(uint64_t)(unint64_t)-v17;
    }
  }
  else
  {
    v14 = (int)v13;
  }
  v18 = *((_QWORD *)a2 + 8);
  v51[0] = *((_QWORD *)this + 7);
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_28;
  v19 = *(unsigned __int8 *)(v18 + 5);
  if (v19 != 38)
  {
    if ((v19 - 39) > 0xB)
      goto LABEL_28;
    if ((*(_BYTE *)(v18 + 40) & 6) != 0)
      goto LABEL_28;
    JSC::JSArrayBufferView::possiblySharedImpl((JSC::JSArrayBufferView *)v18);
    if (!v54)
      goto LABEL_28;
    v61 = v54;
    v62 = 1;
    v63 = 0;
    goto LABEL_32;
  }
  v20 = *(WTF::DeferrableRefCountedBase **)(v18 + 16);
  if (v20 && !*((_BYTE *)v20 + 64))
  {
    *(_DWORD *)v20 += 2;
    v55 = 0;
    v54 = 0;
    v61 = v20;
    v62 = 0;
    v63 = 0;
    _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN3JSC11ArrayBufferENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15ArrayBufferViewENSC_ISH_EENSE_ISH_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSG_SK_EEEEEEDcSO_DpT0_((uint64_t)&v52, &v54);
    v22 = v63;
    if (v63)
    {
LABEL_93:
      v21 = 0;
      goto LABEL_39;
    }
LABEL_32:
    if (*(_BYTE *)(v12 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v52 = v54;
      v28 = v53[0];
      v29 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
      if (v29
        && (v31 = WebCore::InspectorInstrumentation::instrumentingAgents(v29, v30)) != 0
        && (v32 = *(WebCore::InspectorCanvasAgent **)(v31 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v32, (WebCore::CanvasRenderingContext *)(v12 + 8), v28, (uint64_t)&v54);
      }
      else
      {
        LOBYTE(v54) = 0;
        v56 = 0;
      }
      v33 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
      if (v33
        && (v35 = WebCore::InspectorInstrumentation::instrumentingAgents(v33, v34)) != 0
        && (v36 = *(WebCore::InspectorCanvasAgent **)(v35 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v36, (WebCore::CanvasRenderingContext *)(v12 + 8), v14, (uint64_t)&v57);
      }
      else
      {
        LOBYTE(v57) = 0;
        v58 = 0;
      }
      if (v63)
      {
LABEL_92:
        std::__throw_bad_variant_access[abi:sn180100]();
        goto LABEL_93;
      }
      v37 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
      if (v37
        && (v39 = WebCore::InspectorInstrumentation::instrumentingAgents(v37, v38)) != 0
        && (v40 = *(_QWORD *)(v39 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v40, v12 + 8, (uint64_t)&v61);
      }
      else
      {
        LOBYTE(v59) = 0;
        v60 = 0;
      }
      v51[0] = &v54;
      v51[1] = 3;
      v41 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
      if (v41)
      {
        v43 = WebCore::InspectorInstrumentation::instrumentingAgents(v41, v42);
        if (v43)
        {
          v44 = *(_QWORD *)(v43 + 96);
          if (v44)
            WebCore::InspectorCanvasAgent::recordAction(v44, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v52, v51);
        }
      }
      if (v60)
      {
        v45 = v59;
        v59 = 0;
        if (v45)
        {
          if (*v45 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v45;
        }
      }
      if (v58)
      {
        v46 = v57;
        v57 = 0;
        if (v46)
        {
          if (*v46 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v46;
        }
      }
      if (v56)
      {
        v47 = v54;
        v54 = 0;
        if (v47)
        {
          if (*(_DWORD *)v47 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*(_DWORD *)v47;
        }
      }
      v48 = v52;
      v52 = 0;
      if (v48)
      {
        if (*(_DWORD *)v48 == 2)
          WTF::StringImpl::destroy(v48, v42);
        else
          *(_DWORD *)v48 -= 2;
      }
    }
    if (!v63)
    {
      v24 = v53[0];
      LOBYTE(v54) = 0;
      v55 = -1;
      v25 = v62;
      if (v62 != -1)
      {
        ((void (*)(_QWORD *, WTF::DeferrableRefCountedBase **, WTF::DeferrableRefCountedBase **))off_1E333E438[v62])(v51, &v54, &v61);
        v55 = v25;
      }
      WebCore::WebGLRenderingContextBase::bufferSubData((WTF::StringImpl *)v12, v24, v14, (uint64_t)&v54);
      if (v55 != -1)
        ((void (*)(_QWORD *, WTF::DeferrableRefCountedBase **))off_1E333E428[v55])(v51, &v54);
      v22 = v63;
      v21 = 10;
LABEL_39:
      if (v22 == -1)
        return (_BYTE *)v21;
      goto LABEL_29;
    }
    goto LABEL_92;
  }
LABEL_28:
  JSC::throwTypeError();
  v21 = 0;
  v22 = 1;
  v63 = 1;
LABEL_29:
  ((void (*)(WTF::DeferrableRefCountedBase **, WTF::DeferrableRefCountedBase **))off_1E333E448[v22])(&v54, &v61);
  return (_BYTE *)v21;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_checkFramebufferStatus(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  JSValue v15;
  WebCore::InspectorInstrumentation *v16;
  WebCore::ScriptExecutionContext *v17;
  uint64_t v18;
  WebCore::InspectorCanvasAgent *v19;
  WebCore::InspectorInstrumentation *v20;
  WebCore::ScriptExecutionContext *v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  WTF::StringImpl *v25;
  JSC::VM *v26;
  _QWORD v27[2];
  WTF::StringImpl *v28;
  _DWORD v29[2];
  _QWORD v30[2];
  char v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "WebGLRenderingContext", "checkFramebufferStatus");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v26, "WebGLRenderingContext", "checkFramebufferStatus");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v15.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v15);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v29);
    if (v29[1])
    {
      return 0;
    }
    else
    {
      if (*(_BYTE *)(v11 + 33))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v12 = v29[0];
        v16 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v16
          && (v18 = WebCore::InspectorInstrumentation::instrumentingAgents(v16, v17)) != 0
          && (v19 = *(WebCore::InspectorCanvasAgent **)(v18 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v19, (WebCore::CanvasRenderingContext *)(v11 + 8), v12, (uint64_t)v30);
        }
        else
        {
          LOBYTE(v30[0]) = 0;
          v31 = 0;
        }
        v27[0] = v30;
        v27[1] = 1;
        v20 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v20)
        {
          v22 = WebCore::InspectorInstrumentation::instrumentingAgents(v20, v21);
          if (v22)
          {
            v23 = *(_QWORD *)(v22 + 96);
            if (v23)
              WebCore::InspectorCanvasAgent::recordAction(v23, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v28, v27);
          }
        }
        if (v31)
        {
          v24 = (_DWORD *)v30[0];
          v30[0] = 0;
          if (v24)
          {
            if (*v24 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v24;
          }
        }
        v25 = v28;
        v28 = 0;
        if (v25)
        {
          if (*(_DWORD *)v25 == 2)
            WTF::StringImpl::destroy(v25, v21);
          else
            *(_DWORD *)v25 -= 2;
        }
      }
      else
      {
        v12 = v29[0];
      }
      if (*(_BYTE *)(v11 + 364))
      {
        v13 = 36061;
      }
      else if (((*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v11 + 296))(v11, v12) & 1) != 0)
      {
        v13 = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(v11 + 88) + 120))(*(_QWORD *)(v11 + 88), v12);
        if ((v13 & 0x80000000) != 0)
          return (_BYTE *)(COERCE__INT64((double)v13) + 0x2000000000000);
      }
      else
      {
        WebCore::WebGLRenderingContextBase::synthesizeGLError((WTF::StringImpl *)v11, 1280, (uint64_t)"checkFramebufferStatus", 23, (uint64_t)"invalid target", 15);
        v13 = 0;
      }
      return (_BYTE *)(v13 | 0xFFFE000000000000);
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_clear(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  __n128 v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;
  uint64_t v16;
  int32x2_t *v18;
  JSValue v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  WebCore::InspectorCanvasAgent *v24;
  WebCore::InspectorInstrumentation *v25;
  WebCore::ScriptExecutionContext *v26;
  uint64_t v27;
  uint64_t v28;
  _DWORD *v29;
  WTF::StringImpl *v30;
  JSC::VM *v31;
  _QWORD v32[2];
  WTF::StringImpl *v33;
  _DWORD v34[2];
  _QWORD v35[2];
  char v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v31 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v31, "WebGLRenderingContext", "clear");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v31, "WebGLRenderingContext", "clear");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v20);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v34);
    if (v34[1])
    {
      return 0;
    }
    else
    {
      if (*(_BYTE *)(v11 + 33))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v16 = v34[0];
        v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v21
          && (v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22)) != 0
          && (v24 = *(WebCore::InspectorCanvasAgent **)(v23 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v24, (WebCore::CanvasRenderingContext *)(v11 + 8), v16, (uint64_t)v35);
        }
        else
        {
          LOBYTE(v35[0]) = 0;
          v36 = 0;
        }
        v32[0] = v35;
        v32[1] = 1;
        v25 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v25)
        {
          v27 = WebCore::InspectorInstrumentation::instrumentingAgents(v25, v26);
          if (v27)
          {
            v28 = *(_QWORD *)(v27 + 96);
            if (v28)
              WebCore::InspectorCanvasAgent::recordAction(v28, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v33, v32);
          }
        }
        if (v36)
        {
          v29 = (_DWORD *)v35[0];
          v35[0] = 0;
          if (v29)
          {
            if (*v29 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v29;
          }
        }
        v30 = v33;
        v33 = 0;
        if (v30)
        {
          if (*(_DWORD *)v30 == 2)
            WTF::StringImpl::destroy(v30, v26);
          else
            *(_DWORD *)v30 -= 2;
        }
      }
      else
      {
        v16 = v34[0];
      }
      if (!*(_BYTE *)(v11 + 364))
      {
        if (!WebCore::WebGLRenderingContextBase::clearIfComposited(v11, 0, v16, v12, v13, v14, v15))
          (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(v11 + 88) + 128))(*(_QWORD *)(v11 + 88), v16);
        if (!*(_BYTE *)(v11 + 425)
          && !(*(_QWORD *)(v11 + 176)
             ? WTF::RefPtr<WebCore::WebGLFramebuffer,WTF::RawPtrTraits<WebCore::WebGLFramebuffer>,WTF::DefaultRefDerefTraits<WebCore::WebGLFramebuffer>>::unspecifiedBoolTypeInstance
             : 0))
        {
          *(_BYTE *)(v11 + 432) = 1;
          if (*(_BYTE *)(v11 + 434))
            *(_BYTE *)(v11 + 434) = 0;
          v18 = *(int32x2_t **)(v11 + 40);
          v35[0] = 0;
          v35[1] = vcvt_f32_s32(v18[1]);
          v36 = 1;
          (*(void (**)(int32x2_t *, _QWORD *, _QWORD))(*(_QWORD *)v18 + 104))(v18, v35, 0);
        }
      }
      return 10;
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_clearColor(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  float v15;
  unint64_t v16;
  JSC::VM *v17;
  double v18;
  float v19;
  unint64_t v20;
  JSC::VM *v21;
  double v22;
  float v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  float v27;
  JSValue v29;
  int v30;
  int v31;
  int v32;
  int v33;
  WebCore::InspectorInstrumentation *v34;
  WebCore::ScriptExecutionContext *v35;
  uint64_t v36;
  WebCore::InspectorCanvasAgent *v37;
  WebCore::InspectorInstrumentation *v38;
  WebCore::ScriptExecutionContext *v39;
  uint64_t v40;
  WebCore::InspectorCanvasAgent *v41;
  WebCore::InspectorInstrumentation *v42;
  WebCore::ScriptExecutionContext *v43;
  uint64_t v44;
  WebCore::InspectorCanvasAgent *v45;
  WebCore::InspectorInstrumentation *v46;
  WebCore::ScriptExecutionContext *v47;
  uint64_t v48;
  WebCore::InspectorCanvasAgent *v49;
  WebCore::InspectorInstrumentation *v50;
  WebCore::ScriptExecutionContext *v51;
  uint64_t v52;
  uint64_t v53;
  _DWORD *v54;
  _DWORD *v55;
  _DWORD *v56;
  _DWORD *v57;
  WTF::StringImpl *v58;
  double v59;
  double v60;
  double v61;
  double v62;
  JSC::VM *v63;
  _QWORD v64[2];
  WTF::StringImpl *v65;
  _QWORD v66[2];
  char v67;
  _DWORD *v68;
  char v69;
  _DWORD *v70;
  char v71;
  _DWORD *v72;
  char v73;
  uint64_t v74;

  v74 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v63 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v63, "WebGLRenderingContext", "clearColor");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v63, "WebGLRenderingContext", "clearColor");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v29.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v29);
  }
  v12 = *(_QWORD *)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  v66[0] = v13;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v66, this);
    v14 = v59;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  if (v14 < -3.40282347e38)
  {
    *(float *)&v30 = -INFINITY;
  }
  else
  {
    if (v14 <= 3.40282347e38)
    {
      v15 = v14;
      goto LABEL_20;
    }
    *(float *)&v30 = INFINITY;
  }
  v15 = *(float *)&v30;
LABEL_20:
  v16 = *((_QWORD *)a2 + 7);
  v66[0] = v16;
  v17 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v16 >= 0xFFFE000000000000)
  {
    v18 = (double)(int)v16;
  }
  else if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v66, this);
    v18 = v60;
  }
  else
  {
    *(_QWORD *)&v18 = v16 - 0x2000000000000;
  }
  if (*((_DWORD *)v17 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) != 0)
    return 0;
  if (v18 < -3.40282347e38)
  {
    *(float *)&v31 = -INFINITY;
  }
  else
  {
    if (v18 <= 3.40282347e38)
    {
      v19 = v18;
      goto LABEL_27;
    }
    *(float *)&v31 = INFINITY;
  }
  v19 = *(float *)&v31;
LABEL_27:
  v20 = *((_QWORD *)a2 + 8);
  v66[0] = v20;
  v21 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v20 >= 0xFFFE000000000000)
  {
    v22 = (double)(int)v20;
  }
  else if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v66, this);
    v22 = v61;
  }
  else
  {
    *(_QWORD *)&v22 = v20 - 0x2000000000000;
  }
  if (*((_DWORD *)v21 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) != 0)
    return 0;
  if (v22 < -3.40282347e38)
  {
    *(float *)&v32 = -INFINITY;
  }
  else
  {
    if (v22 <= 3.40282347e38)
    {
      v23 = v22;
      goto LABEL_34;
    }
    *(float *)&v32 = INFINITY;
  }
  v23 = *(float *)&v32;
LABEL_34:
  v24 = *((_QWORD *)a2 + 9);
  v66[0] = v24;
  v25 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v24 >= 0xFFFE000000000000)
  {
    v26 = (double)(int)v24;
  }
  else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v66, this);
    v26 = v62;
  }
  else
  {
    *(_QWORD *)&v26 = v24 - 0x2000000000000;
  }
  if (*((_DWORD *)v25 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v25) & 1) != 0)
    return 0;
  if (v26 < -3.40282347e38)
  {
    *(float *)&v33 = -INFINITY;
LABEL_74:
    v27 = *(float *)&v33;
    goto LABEL_41;
  }
  if (v26 > 3.40282347e38)
  {
    *(float *)&v33 = INFINITY;
    goto LABEL_74;
  }
  v27 = v26;
LABEL_41:
  if (*(_BYTE *)(v12 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v34 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v34
      && (v36 = WebCore::InspectorInstrumentation::instrumentingAgents(v34, v35)) != 0
      && (v37 = *(WebCore::InspectorCanvasAgent **)(v36 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v37, (WebCore::CanvasRenderingContext *)(v12 + 8), v15, (uint64_t)v66);
    }
    else
    {
      LOBYTE(v66[0]) = 0;
      v67 = 0;
    }
    v38 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v38
      && (v40 = WebCore::InspectorInstrumentation::instrumentingAgents(v38, v39)) != 0
      && (v41 = *(WebCore::InspectorCanvasAgent **)(v40 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v41, (WebCore::CanvasRenderingContext *)(v12 + 8), v19, (uint64_t)&v68);
    }
    else
    {
      LOBYTE(v68) = 0;
      v69 = 0;
    }
    v42 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v42
      && (v44 = WebCore::InspectorInstrumentation::instrumentingAgents(v42, v43)) != 0
      && (v45 = *(WebCore::InspectorCanvasAgent **)(v44 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v45, (WebCore::CanvasRenderingContext *)(v12 + 8), v23, (uint64_t)&v70);
    }
    else
    {
      LOBYTE(v70) = 0;
      v71 = 0;
    }
    v46 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v46
      && (v48 = WebCore::InspectorInstrumentation::instrumentingAgents(v46, v47)) != 0
      && (v49 = *(WebCore::InspectorCanvasAgent **)(v48 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v49, (WebCore::CanvasRenderingContext *)(v12 + 8), v27, (uint64_t)&v72);
    }
    else
    {
      LOBYTE(v72) = 0;
      v73 = 0;
    }
    v64[0] = v66;
    v64[1] = 4;
    v50 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v50)
    {
      v52 = WebCore::InspectorInstrumentation::instrumentingAgents(v50, v51);
      if (v52)
      {
        v53 = *(_QWORD *)(v52 + 96);
        if (v53)
          WebCore::InspectorCanvasAgent::recordAction(v53, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v65, v64);
      }
    }
    if (v73)
    {
      v54 = v72;
      v72 = 0;
      if (v54)
      {
        if (*v54 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v54;
      }
    }
    if (v71)
    {
      v55 = v70;
      v70 = 0;
      if (v55)
      {
        if (*v55 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v55;
      }
    }
    if (v69)
    {
      v56 = v68;
      v68 = 0;
      if (v56)
      {
        if (*v56 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v56;
      }
    }
    if (v67)
    {
      v57 = (_DWORD *)v66[0];
      v66[0] = 0;
      if (v57)
      {
        if (*v57 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v57;
      }
    }
    v58 = v65;
    v65 = 0;
    if (v58)
    {
      if (*(_DWORD *)v58 == 2)
        WTF::StringImpl::destroy(v58, v51);
      else
        *(_DWORD *)v58 -= 2;
    }
  }
  if (!*(_BYTE *)(v12 + 364))
  {
    *(float *)(v12 + 388) = v15;
    *(float *)(v12 + 392) = v19;
    *(float *)(v12 + 396) = v23;
    *(float *)(v12 + 400) = v27;
    (*(void (**)(_QWORD))(**(_QWORD **)(v12 + 88) + 136))(*(_QWORD *)(v12 + 88));
  }
  return 10;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_clearDepth(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  unint64_t v12;
  double v13;
  float v14;
  JSValue v16;
  int v17;
  WebCore::InspectorInstrumentation *v18;
  WebCore::ScriptExecutionContext *v19;
  uint64_t v20;
  WebCore::InspectorCanvasAgent *v21;
  WebCore::InspectorInstrumentation *v22;
  WebCore::ScriptExecutionContext *v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  WTF::StringImpl *v27;
  double v28;
  JSC::VM *v29;
  _QWORD v30[2];
  WTF::StringImpl *v31;
  _QWORD v32[2];
  char v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v29 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v29, "WebGLRenderingContext", "clearDepth");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v29, "WebGLRenderingContext", "clearDepth");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v16.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v16);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v32[0] = v12;
  if (v12 >= 0xFFFE000000000000)
  {
    v13 = (double)(int)v12;
  }
  else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v32, this);
    v13 = v28;
  }
  else
  {
    *(_QWORD *)&v13 = v12 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  if (v13 < -3.40282347e38)
  {
    *(float *)&v17 = -INFINITY;
LABEL_35:
    v14 = *(float *)&v17;
    goto LABEL_20;
  }
  if (v13 > 3.40282347e38)
  {
    *(float *)&v17 = INFINITY;
    goto LABEL_35;
  }
  v14 = v13;
LABEL_20:
  if (*(_BYTE *)(v11 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v18 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
    if (v18
      && (v20 = WebCore::InspectorInstrumentation::instrumentingAgents(v18, v19)) != 0
      && (v21 = *(WebCore::InspectorCanvasAgent **)(v20 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v21, (WebCore::CanvasRenderingContext *)(v11 + 8), v14, (uint64_t)v32);
    }
    else
    {
      LOBYTE(v32[0]) = 0;
      v33 = 0;
    }
    v30[0] = v32;
    v30[1] = 1;
    v22 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
    if (v22)
    {
      v24 = WebCore::InspectorInstrumentation::instrumentingAgents(v22, v23);
      if (v24)
      {
        v25 = *(_QWORD *)(v24 + 96);
        if (v25)
          WebCore::InspectorCanvasAgent::recordAction(v25, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v31, v30);
      }
    }
    if (v33)
    {
      v26 = (_DWORD *)v32[0];
      v32[0] = 0;
      if (v26)
      {
        if (*v26 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v26;
      }
    }
    v27 = v31;
    v31 = 0;
    if (v27)
    {
      if (*(_DWORD *)v27 == 2)
        WTF::StringImpl::destroy(v27, v23);
      else
        *(_DWORD *)v27 -= 2;
    }
  }
  if (!*(_BYTE *)(v11 + 364))
  {
    *(float *)(v11 + 408) = v14;
    (*(void (**)(_QWORD, float))(**(_QWORD **)(v11 + 88) + 144))(*(_QWORD *)(v11 + 88), v14);
  }
  return 10;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_clearStencil(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unsigned int v18;
  JSValue v19;
  WebCore::InspectorInstrumentation *v20;
  WebCore::ScriptExecutionContext *v21;
  uint64_t v22;
  WebCore::InspectorCanvasAgent *v23;
  WebCore::InspectorInstrumentation *v24;
  WebCore::ScriptExecutionContext *v25;
  uint64_t v26;
  uint64_t v27;
  _DWORD *v28;
  WTF::StringImpl *v29;
  unint64_t v30;
  JSC::VM *v31;
  _QWORD v32[2];
  WTF::StringImpl *v33;
  _QWORD v34[2];
  char v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v31 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v31, "WebGLRenderingContext", "clearStencil");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v31, "WebGLRenderingContext", "clearStencil");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v19);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    v12 = *((_QWORD *)a2 + 6);
    v34[0] = v12;
    if (v12 < 0xFFFE000000000000)
    {
      v15 = v12 - 0x2000000000000;
      if (v12 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v34, this);
        v15 = v30;
      }
      v16 = (v15 >> 52) & 0x7FF;
      if ((v16 - 1023) <= 0x53)
      {
        v17 = v15 >> (51 - (v15 >> 52));
        if (v16 > 0x433)
          LODWORD(v17) = v15 << ((v15 >> 52) - 51);
        if (v16 >= 0x41F)
          v18 = v17;
        else
          v18 = (((1 << ((v15 >> 52) + 1)) - 1) & v17) + (1 << ((v15 >> 52) + 1));
        if ((v15 & 0x8000000000000000) == 0)
          v13 = v18;
        else
          v13 = -v18;
      }
      else
      {
        v13 = 0;
      }
    }
    else
    {
      v13 = v12;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      if (*(_BYTE *)(v11 + 33))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v20 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v20
          && (v22 = WebCore::InspectorInstrumentation::instrumentingAgents(v20, v21)) != 0
          && (v23 = *(WebCore::InspectorCanvasAgent **)(v22 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v23, (WebCore::CanvasRenderingContext *)(v11 + 8), v13, (uint64_t)v34);
        }
        else
        {
          LOBYTE(v34[0]) = 0;
          v35 = 0;
        }
        v32[0] = v34;
        v32[1] = 1;
        v24 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v24)
        {
          v26 = WebCore::InspectorInstrumentation::instrumentingAgents(v24, v25);
          if (v26)
          {
            v27 = *(_QWORD *)(v26 + 96);
            if (v27)
              WebCore::InspectorCanvasAgent::recordAction(v27, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v33, v32);
          }
        }
        if (v35)
        {
          v28 = (_DWORD *)v34[0];
          v34[0] = 0;
          if (v28)
          {
            if (*v28 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v28;
          }
        }
        v29 = v33;
        v33 = 0;
        if (v29)
        {
          if (*(_DWORD *)v29 == 2)
            WTF::StringImpl::destroy(v29, v25);
          else
            *(_DWORD *)v29 -= 2;
        }
      }
      if (!*(_BYTE *)(v11 + 364))
      {
        *(_DWORD *)(v11 + 412) = v13;
        (*(void (**)(_QWORD, unint64_t, JSC::CallFrame *))(**(_QWORD **)(v11 + 88) + 152))(*(_QWORD *)(v11 + 88), v13, a3);
      }
      return 10;
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_colorMask(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  uint64_t v15;
  unint64_t v16;
  _BOOL8 v17;
  unint64_t v18;
  _BOOL8 v19;
  unint64_t v20;
  double v21;
  _BOOL8 v22;
  JSValue v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char hasExceptionsAfterHandlingTraps;
  WTF::JSONImpl::Value *v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  WebCore::InspectorCanvasAgent *v33;
  WebCore::InspectorInstrumentation *v34;
  WebCore::ScriptExecutionContext *v35;
  uint64_t v36;
  WebCore::InspectorCanvasAgent *v37;
  WebCore::InspectorInstrumentation *v38;
  WebCore::ScriptExecutionContext *v39;
  uint64_t v40;
  WebCore::InspectorCanvasAgent *v41;
  WebCore::InspectorInstrumentation *v42;
  WebCore::ScriptExecutionContext *v43;
  uint64_t v44;
  WebCore::InspectorCanvasAgent *v45;
  WebCore::InspectorInstrumentation *v46;
  WebCore::ScriptExecutionContext *v47;
  uint64_t v48;
  uint64_t v49;
  _DWORD *v50;
  _DWORD *v51;
  _DWORD *v52;
  _DWORD *v53;
  WTF::StringImpl *v54;
  BOOL v55;
  int v56;
  uint64_t v57;
  int *v58;
  int v59;
  BOOL v60;
  int v61;
  uint64_t v62;
  int *v63;
  int v64;
  BOOL v65;
  int v66;
  uint64_t v67;
  int *v68;
  int v69;
  BOOL v70;
  int v71;
  uint64_t v72;
  int *v73;
  int v74;
  unsigned int v75;
  JSC::VM *v76;
  _QWORD v77[2];
  WTF::StringImpl *v78;
  _QWORD v79[2];
  char v80;
  _DWORD *v81;
  char v82;
  _DWORD *v83;
  char v84;
  _DWORD *v85;
  char v86;
  uint64_t v87;

  v87 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v76 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v76, "WebGLRenderingContext", "colorMask");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v76, "WebGLRenderingContext", "colorMask");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v24.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v24);
  }
  v12 = *(_QWORD *)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  if (v13 >= 0xFFFE000000000000)
  {
    v55 = (_DWORD)v13 == 0;
    goto LABEL_157;
  }
  *(_QWORD *)&v14 = v13 - 0x2000000000000;
  if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v13 & 0xFFFE000000000002) != 0)
    {
      v15 = v13 == 7;
      goto LABEL_17;
    }
    v56 = *(unsigned __int8 *)(v13 + 5);
    if (v56 == 3)
    {
      v59 = *(_DWORD *)(v13 + 8);
    }
    else
    {
      if (v56 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v15 = 1;
          goto LABEL_17;
        }
        v55 = *(_QWORD *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
        goto LABEL_157;
      }
      v57 = *(_QWORD *)(v13 + 8);
      if ((v57 & 1) != 0)
        v58 = (int *)(v13 + 16);
      else
        v58 = (int *)(v57 + 4);
      v59 = *v58;
    }
    v55 = v59 == 0;
LABEL_157:
    v15 = !v55;
    goto LABEL_17;
  }
  v15 = v14 > 0.0 || v14 < 0.0;
LABEL_17:
  if (*((_DWORD *)v4 + 20))
  {
    v25 = v15;
    if ((JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    v4 = (JSC::VM *)*((_QWORD *)this + 7);
    v15 = v25;
  }
  v16 = *((_QWORD *)a2 + 7);
  if (v16 >= 0xFFFE000000000000)
  {
    v60 = (_DWORD)v16 == 0;
    goto LABEL_161;
  }
  if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v16 & 0xFFFE000000000002) != 0)
    {
      v17 = v16 == 7;
      goto LABEL_22;
    }
    v61 = *(unsigned __int8 *)(v16 + 5);
    if (v61 == 3)
    {
      v64 = *(_DWORD *)(v16 + 8);
    }
    else
    {
      if (v61 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v17 = 1;
          goto LABEL_22;
        }
        v60 = *(_QWORD *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
        goto LABEL_161;
      }
      v62 = *(_QWORD *)(v16 + 8);
      if ((v62 & 1) != 0)
        v63 = (int *)(v16 + 16);
      else
        v63 = (int *)(v62 + 4);
      v64 = *v63;
    }
    v60 = v64 == 0;
LABEL_161:
    v17 = !v60;
    goto LABEL_22;
  }
  v17 = COERCE_DOUBLE(v16 - 0x2000000000000) > 0.0 || COERCE_DOUBLE(v16 - 0x2000000000000) < 0.0;
LABEL_22:
  if (*((_DWORD *)v4 + 20))
  {
    v26 = v15;
    if ((JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    v4 = (JSC::VM *)*((_QWORD *)this + 7);
    v15 = v26;
  }
  v18 = *((_QWORD *)a2 + 8);
  if (v18 >= 0xFFFE000000000000)
  {
    v65 = (_DWORD)v18 == 0;
    goto LABEL_165;
  }
  if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v18 & 0xFFFE000000000002) != 0)
    {
      v19 = v18 == 7;
      goto LABEL_27;
    }
    v66 = *(unsigned __int8 *)(v18 + 5);
    if (v66 == 3)
    {
      v69 = *(_DWORD *)(v18 + 8);
    }
    else
    {
      if (v66 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v19 = 1;
          goto LABEL_27;
        }
        v65 = *(_QWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
        goto LABEL_165;
      }
      v67 = *(_QWORD *)(v18 + 8);
      if ((v67 & 1) != 0)
        v68 = (int *)(v18 + 16);
      else
        v68 = (int *)(v67 + 4);
      v69 = *v68;
    }
    v65 = v69 == 0;
LABEL_165:
    v19 = !v65;
    goto LABEL_27;
  }
  v19 = COERCE_DOUBLE(v18 - 0x2000000000000) > 0.0 || COERCE_DOUBLE(v18 - 0x2000000000000) < 0.0;
LABEL_27:
  if (*((_DWORD *)v4 + 20))
  {
    v75 = v15;
    if ((JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
      return 0;
    v4 = (JSC::VM *)*((_QWORD *)this + 7);
    v15 = v75;
  }
  v20 = *((_QWORD *)a2 + 9);
  if (v20 >= 0xFFFE000000000000)
  {
    v70 = (_DWORD)v20 == 0;
    goto LABEL_151;
  }
  *(_QWORD *)&v21 = v20 - 0x2000000000000;
  if (v20 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
  {
    if (v21 <= 0.0)
    {
      v22 = v21 < 0.0;
      goto LABEL_32;
    }
    goto LABEL_155;
  }
  if ((v20 & 0xFFFE000000000002) != 0)
  {
    v22 = v20 == 7;
    goto LABEL_32;
  }
  v71 = *(unsigned __int8 *)(v20 + 5);
  if (v71 == 3)
  {
    v74 = *(_DWORD *)(v20 + 8);
LABEL_150:
    v70 = v74 == 0;
    goto LABEL_151;
  }
  if (v71 == 2)
  {
    v72 = *(_QWORD *)(v20 + 8);
    if ((v72 & 1) != 0)
      v73 = (int *)(v20 + 16);
    else
      v73 = (int *)(v72 + 4);
    v74 = *v73;
    goto LABEL_150;
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE) + 0xA) & 1) == 0)
  {
LABEL_155:
    v22 = 1;
    goto LABEL_32;
  }
  v70 = *(_QWORD *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_151:
  v22 = !v70;
LABEL_32:
  if (*((_DWORD *)v4 + 20))
  {
    v27 = v15;
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v15 = v27;
    if ((hasExceptionsAfterHandlingTraps & 1) != 0)
      return 0;
  }
  if (*(_BYTE *)(v12 + 33))
  {
    v29 = (WTF::JSONImpl::Value *)v15;
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v30
      && (v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31)) != 0
      && (v33 = *(WebCore::InspectorCanvasAgent **)(v32 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v33, (WebCore::CanvasRenderingContext *)(v12 + 8), v29, (uint64_t)v79);
    }
    else
    {
      LOBYTE(v79[0]) = 0;
      v80 = 0;
    }
    v34 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v34
      && (v36 = WebCore::InspectorInstrumentation::instrumentingAgents(v34, v35)) != 0
      && (v37 = *(WebCore::InspectorCanvasAgent **)(v36 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v37, (WebCore::CanvasRenderingContext *)(v12 + 8), (WTF::JSONImpl::Value *)v17, (uint64_t)&v81);
    }
    else
    {
      LOBYTE(v81) = 0;
      v82 = 0;
    }
    v38 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v38
      && (v40 = WebCore::InspectorInstrumentation::instrumentingAgents(v38, v39)) != 0
      && (v41 = *(WebCore::InspectorCanvasAgent **)(v40 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v41, (WebCore::CanvasRenderingContext *)(v12 + 8), (WTF::JSONImpl::Value *)v19, (uint64_t)&v83);
    }
    else
    {
      LOBYTE(v83) = 0;
      v84 = 0;
    }
    v42 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v42
      && (v44 = WebCore::InspectorInstrumentation::instrumentingAgents(v42, v43)) != 0
      && (v45 = *(WebCore::InspectorCanvasAgent **)(v44 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v45, (WebCore::CanvasRenderingContext *)(v12 + 8), (WTF::JSONImpl::Value *)v22, (uint64_t)&v85);
    }
    else
    {
      LOBYTE(v85) = 0;
      v86 = 0;
    }
    v77[0] = v79;
    v77[1] = 4;
    v46 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v46)
    {
      v48 = WebCore::InspectorInstrumentation::instrumentingAgents(v46, v47);
      if (v48)
      {
        v49 = *(_QWORD *)(v48 + 96);
        if (v49)
          WebCore::InspectorCanvasAgent::recordAction(v49, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v78, v77);
      }
    }
    v15 = (uint64_t)v29;
    if (v86)
    {
      v50 = v85;
      v85 = 0;
      if (v50)
      {
        if (*v50 == 1)
        {
          WTF::JSONImpl::Value::operator delete();
          v15 = (uint64_t)v29;
        }
        else
        {
          --*v50;
        }
      }
    }
    if (v84)
    {
      v51 = v83;
      v83 = 0;
      if (v51)
      {
        if (*v51 == 1)
        {
          WTF::JSONImpl::Value::operator delete();
          v15 = (uint64_t)v29;
        }
        else
        {
          --*v51;
        }
      }
    }
    if (v82)
    {
      v52 = v81;
      v81 = 0;
      if (v52)
      {
        if (*v52 == 1)
        {
          WTF::JSONImpl::Value::operator delete();
          v15 = (uint64_t)v29;
        }
        else
        {
          --*v52;
        }
      }
    }
    if (v80)
    {
      v53 = (_DWORD *)v79[0];
      v79[0] = 0;
      if (v53)
      {
        if (*v53 == 1)
        {
          WTF::JSONImpl::Value::operator delete();
          v15 = (uint64_t)v29;
        }
        else
        {
          --*v53;
        }
      }
    }
    v54 = v78;
    v78 = 0;
    if (v54)
    {
      if (*(_DWORD *)v54 == 2)
      {
        WTF::StringImpl::destroy(v54, (WTF::StringImpl *)v15);
        LOBYTE(v15) = (_BYTE)v29;
      }
      else
      {
        *(_DWORD *)v54 -= 2;
      }
    }
  }
  if (!*(_BYTE *)(v12 + 364))
  {
    *(_BYTE *)(v12 + 416) = v15;
    *(_BYTE *)(v12 + 417) = v17;
    *(_BYTE *)(v12 + 418) = v19;
    *(_BYTE *)(v12 + 419) = v22;
    (*(void (**)(_QWORD))(**(_QWORD **)(v12 + 88) + 160))(*(_QWORD *)(v12 + 88));
  }
  return 10;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_compileShader(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  WTF::StringImpl *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  JSValue v32;
  WebCore::InspectorInstrumentation *v33;
  WebCore::ScriptExecutionContext *v34;
  uint64_t v35;
  uint64_t v36;
  WebCore::InspectorInstrumentation *v37;
  WebCore::ScriptExecutionContext *v38;
  uint64_t v39;
  uint64_t v40;
  _DWORD *v41;
  WTF::StringImpl *v42;
  JSC::VM *v43;
  _QWORD v44[2];
  WTF::StringImpl *v45;
  _QWORD v46[2];
  char v47;
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v43 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v43, "WebGLRenderingContext", "compileShader");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v43, "WebGLRenderingContext", "compileShader");
  if (*((_DWORD *)a2 + 8) != 1)
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    v46[0] = v9;
    if ((v17 & 0xFFFE000000000002) != 0)
      goto LABEL_24;
    v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v20 = (char **)(16 * v18);
    if ((_DWORD)v18)
      v21 = v20 == &WebCore::JSWebGLShader::s_info;
    else
      v21 = 1;
    if (!v21)
    {
      do
      {
        v20 = (char **)v20[2];
        v19 = v20 != 0;
      }
      while (v20 != &WebCore::JSWebGLShader::s_info && v20 != 0);
    }
    if (!v19 || (v24 = *(_QWORD *)(v17 + 24)) == 0)
    {
LABEL_24:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v46, 0, "shader", 7, "WebGLRenderingContext", 22, a8, "compileShader", 14, "WebGLShader", 12);
      return 0;
    }
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v33 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v33
        && (v35 = WebCore::InspectorInstrumentation::instrumentingAgents(v33, v34)) != 0
        && (v36 = *(_QWORD *)(v35 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v36, (WebCore::CanvasRenderingContext *)(v16 + 8), (WebCore::WebGLShader *)v24, (uint64_t)v46);
      }
      else
      {
        LOBYTE(v46[0]) = 0;
        v47 = 0;
      }
      v44[0] = v46;
      v44[1] = 1;
      v37 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v37)
      {
        v39 = WebCore::InspectorInstrumentation::instrumentingAgents(v37, v38);
        if (v39)
        {
          v40 = *(_QWORD *)(v39 + 96);
          if (v40)
            WebCore::InspectorCanvasAgent::recordAction(v40, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v45, v44);
        }
      }
      if (v47)
      {
        v41 = (_DWORD *)v46[0];
        v46[0] = 0;
        if (v41)
        {
          if (*v41 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v41;
        }
      }
      v42 = v45;
      v45 = 0;
      if (v42)
      {
        if (*(_DWORD *)v42 == 2)
          WTF::StringImpl::destroy(v42, v38);
        else
          *(_DWORD *)v42 -= 2;
      }
    }
    if (*(_BYTE *)(v16 + 364))
      return 10;
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      v26 = *(_QWORD *)(v25 + 8);
      if (v26)
        v25 = v26 - 8;
      else
        v25 = 0;
    }
    if (v25 == v16)
    {
      v31 = *(unsigned int *)(v24 + 24);
      if ((_DWORD)v31)
      {
        (*(void (**)(_QWORD, uint64_t, JSC::CallFrame *))(**(_QWORD **)(v16 + 88) + 168))(*(_QWORD *)(v16 + 88), v31, a3);
        return 10;
      }
      v27 = "attempt to use a deleted object";
      v28 = (WTF::StringImpl *)v16;
      v29 = 1281;
      v30 = 32;
    }
    else
    {
      v27 = "object does not belong to this context";
      v28 = (WTF::StringImpl *)v16;
      v29 = 1282;
      v30 = 39;
    }
    WebCore::WebGLRenderingContextBase::synthesizeGLError(v28, v29, (uint64_t)"compileShader", 14, (uint64_t)v27, v30);
    return 10;
  }
  v32.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
  return JSC::VM::throwException(v9, this, v32);
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_texImage2D(JSC::VM **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WebCore *v3;
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  unint64_t v12;
  uint64_t v13;
  JSC::ArrayBufferView *v14;
  JSC::VM *v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t (*v23)();
  int v24;
  int v25;
  int v26;
  unsigned int v27;
  JSC::ArrayBufferView *v28;
  JSC::VM *v29;
  unsigned int v30;
  JSC::ArrayBufferView *v31;
  JSC::VM *v32;
  JSC::ArrayBufferView *v33;
  JSC::VM *v34;
  JSC::ArrayBufferView *v35;
  JSC::VM *v36;
  uint64_t v37;
  JSC::JSArrayBufferView *v38;
  JSValue v39;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  _QWORD *v45;
  JSC::ArrayBufferView *v46;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unsigned int v52;
  unint64_t v53;
  int v54;
  int v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  int v63;
  unint64_t v64;
  int v65;
  int v66;
  unint64_t v67;
  int v68;
  int v69;
  unint64_t v70;
  int v71;
  int v72;
  unsigned int v73;
  WebCore::InspectorInstrumentation *v74;
  WebCore::ScriptExecutionContext *v75;
  uint64_t v76;
  WebCore::InspectorCanvasAgent *v77;
  WTF::StringImpl *v78;
  WTF::StringImpl *v79;
  JSValue v80;
  WTF::StringImpl *v81;
  unsigned int v82;
  WebCore::InspectorInstrumentation *v83;
  WebCore::ScriptExecutionContext *v84;
  uint64_t v85;
  WebCore::InspectorCanvasAgent *v86;
  WebCore::InspectorInstrumentation *v87;
  WebCore::ScriptExecutionContext *v88;
  uint64_t v89;
  WebCore::InspectorCanvasAgent *v90;
  unsigned int v91;
  WebCore::InspectorInstrumentation *v92;
  WebCore::ScriptExecutionContext *v93;
  uint64_t v94;
  WebCore::InspectorCanvasAgent *v95;
  unsigned int v96;
  WebCore::InspectorInstrumentation *v97;
  WebCore::ScriptExecutionContext *v98;
  uint64_t v99;
  WebCore::InspectorCanvasAgent *v100;
  unsigned int v101;
  WebCore::InspectorInstrumentation *v102;
  WebCore::ScriptExecutionContext *v103;
  uint64_t v104;
  WebCore::InspectorCanvasAgent *v105;
  WebCore::InspectorInstrumentation *v106;
  WebCore::ScriptExecutionContext *v107;
  uint64_t v108;
  uint64_t v109;
  WebCore::InspectorInstrumentation *v110;
  WebCore::ScriptExecutionContext *v111;
  uint64_t v112;
  uint64_t v113;
  _DWORD *v114;
  _DWORD *v115;
  _DWORD *v116;
  _DWORD *v117;
  _DWORD *v118;
  JSC::ArrayBufferView *v119;
  WTF::StringImpl *v120;
  WebCore::InspectorInstrumentation *v121;
  WebCore::ScriptExecutionContext *v122;
  uint64_t v123;
  WebCore::InspectorCanvasAgent *v124;
  unsigned int v125;
  WebCore::InspectorInstrumentation *v126;
  WebCore::ScriptExecutionContext *v127;
  uint64_t v128;
  WebCore::InspectorCanvasAgent *v129;
  WebCore::InspectorInstrumentation *v130;
  WebCore::ScriptExecutionContext *v131;
  uint64_t v132;
  WebCore::InspectorCanvasAgent *v133;
  WebCore::InspectorInstrumentation *v134;
  WebCore::ScriptExecutionContext *v135;
  uint64_t v136;
  WebCore::InspectorCanvasAgent *v137;
  WebCore::InspectorInstrumentation *v138;
  WebCore::ScriptExecutionContext *v139;
  uint64_t v140;
  WebCore::InspectorCanvasAgent *v141;
  unsigned int v142;
  WebCore::InspectorInstrumentation *v143;
  WebCore::ScriptExecutionContext *v144;
  uint64_t v145;
  WebCore::InspectorCanvasAgent *v146;
  unsigned int v147;
  WebCore::InspectorInstrumentation *v148;
  WebCore::ScriptExecutionContext *v149;
  uint64_t v150;
  WebCore::InspectorCanvasAgent *v151;
  WebCore::InspectorInstrumentation *v152;
  WebCore::ScriptExecutionContext *v153;
  uint64_t v154;
  uint64_t v155;
  WebCore::InspectorInstrumentation *v156;
  WebCore::ScriptExecutionContext *v157;
  uint64_t v158;
  uint64_t v159;
  _DWORD *v160;
  _DWORD *v161;
  _DWORD *v162;
  _DWORD *v163;
  _DWORD *v164;
  _DWORD *v165;
  _DWORD *v166;
  _DWORD *v167;
  JSC::ArrayBufferView *v168;
  WTF::StringImpl *v169;
  unint64_t v170;
  unint64_t v171;
  unint64_t v172;
  unint64_t v173;
  unint64_t v174;
  WebCore::CanvasRenderingContext *v175;
  WebCore::CanvasRenderingContext *v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  int v180[2];
  unsigned int v181;
  WebCore *v182;
  uint64_t v183;
  int v184;
  WebCore::CanvasRenderingContext *v185;
  _QWORD v186[2];
  _DWORD v187[2];
  _DWORD v188[2];
  WTF::StringImpl *v189;
  WTF::StringImpl *v190;
  uint64_t v191;
  _DWORD v192[2];
  int v193;
  JSC::ArrayBufferView **v194;
  uint64_t v195;
  char v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  int v200;
  JSC::ArrayBufferView **v201;
  JSC::ArrayBufferView **v202;
  uint64_t v203;
  unsigned int v204;
  int v205;
  JSC::ArrayBufferView *v206;
  WTF::StringImpl *v207;
  int v208;
  int v209;
  _DWORD *v210;
  int v211;
  uint64_t v212;
  _DWORD v213[3];
  uint64_t v214;
  uint64_t v215;
  _QWORD v216[2];
  char v217;
  _QWORD v218[2];
  char v219;
  _DWORD *v220;
  char v221;
  _DWORD *v222;
  char v223;
  _DWORD *v224;
  char v225;
  _DWORD *v226;
  char v227;
  uint64_t v228;

  v3 = (WebCore *)this;
  v228 = *MEMORY[0x1E0C80C00];
  v4 = this[7];
  v186[0] = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)v186, "WebGLRenderingContext", "texImage2D");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)v186, "WebGLRenderingContext", "texImage2D");
  v186[1] = v4;
  v12 = *((int *)a2 + 8) - 1;
  if (v12 >= 9)
    v12 = 9;
  if (v12 == 9)
  {
    v183 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>((JSC::JSGlobalObject *)this, *((_QWORD *)a2 + 6), v192);
    if (v192[1])
      return 0;
    v28 = (JSC::ArrayBufferView *)*((_QWORD *)a2 + 7);
    v206 = v28;
    v29 = (JSC::VM *)*((_QWORD *)v3 + 7);
    if ((unint64_t)v28 < 0xFFFE000000000000)
    {
      v50 = (unint64_t)v28 - 0x2000000000000;
      if ((unint64_t)v28 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v206, v3);
        v50 = v171;
      }
      v51 = (v50 >> 52) & 0x7FF;
      v52 = v51 - 1023;
      v53 = v50 >> (51 - (v50 >> 52));
      if (v51 > 0x433)
        LODWORD(v53) = v50 << ((v50 >> 52) - 51);
      if (v51 >= 0x41F)
        v54 = v53;
      else
        v54 = (((1 << ((v50 >> 52) + 1)) - 1) & v53) + (1 << ((v50 >> 52) + 1));
      if ((v50 & 0x8000000000000000) == 0)
        v55 = v54;
      else
        v55 = -v54;
      if (v52 <= 0x53)
        v30 = v55;
      else
        v30 = 0;
    }
    else
    {
      v30 = v28;
    }
    if (*((_DWORD *)v29 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v29))
      return 0;
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(v3, *((_QWORD *)a2 + 8), &v201);
    if (HIDWORD(v201))
      return 0;
    v31 = (JSC::ArrayBufferView *)*((_QWORD *)a2 + 9);
    v206 = v31;
    v32 = (JSC::VM *)*((_QWORD *)v3 + 7);
    if ((unint64_t)v31 < 0xFFFE000000000000)
    {
      v56 = (unint64_t)v31 - 0x2000000000000;
      if ((unint64_t)v31 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v206, v3);
        v56 = v172;
      }
      v57 = (v56 >> 52) & 0x7FF;
      if ((v57 - 1023) <= 0x53)
      {
        v64 = v56 >> (51 - (v56 >> 52));
        if (v57 > 0x433)
          LODWORD(v64) = v56 << ((v56 >> 52) - 51);
        if (v57 >= 0x41F)
          v65 = v64;
        else
          v65 = (((1 << ((v56 >> 52) + 1)) - 1) & v64) + (1 << ((v56 >> 52) + 1));
        if ((v56 & 0x8000000000000000) == 0)
          v66 = v65;
        else
          v66 = -v65;
        v181 = v66;
      }
      else
      {
        v181 = 0;
      }
    }
    else
    {
      v181 = v31;
    }
    if (*((_DWORD *)v32 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v32))
      return 0;
    v33 = (JSC::ArrayBufferView *)*((_QWORD *)a2 + 10);
    v206 = v33;
    v34 = (JSC::VM *)*((_QWORD *)v3 + 7);
    if ((unint64_t)v33 < 0xFFFE000000000000)
    {
      v58 = (unint64_t)v33 - 0x2000000000000;
      if ((unint64_t)v33 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v206, v3);
        v58 = v173;
      }
      v59 = (v58 >> 52) & 0x7FF;
      if ((v59 - 1023) <= 0x53)
      {
        v67 = v58 >> (51 - (v58 >> 52));
        if (v59 > 0x433)
          LODWORD(v67) = v58 << ((v58 >> 52) - 51);
        if (v59 >= 0x41F)
          v68 = v67;
        else
          v68 = (((1 << ((v58 >> 52) + 1)) - 1) & v67) + (1 << ((v58 >> 52) + 1));
        if ((v58 & 0x8000000000000000) == 0)
          v69 = v68;
        else
          v69 = -v68;
        v178 = v69;
      }
      else
      {
        v178 = 0;
      }
    }
    else
    {
      v178 = v33;
    }
    v179 = v30;
    if (*((_DWORD *)v34 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v34))
      return 0;
    v35 = (JSC::ArrayBufferView *)*((_QWORD *)a2 + 11);
    v206 = v35;
    v36 = (JSC::VM *)*((_QWORD *)v3 + 7);
    if ((unint64_t)v35 < 0xFFFE000000000000)
    {
      v60 = (unint64_t)v35 - 0x2000000000000;
      if ((unint64_t)v35 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v206, v3);
        v60 = v174;
      }
      v61 = (v60 >> 52) & 0x7FF;
      if ((v61 - 1023) <= 0x53)
      {
        v70 = v60 >> (51 - (v60 >> 52));
        if (v61 > 0x433)
          LODWORD(v70) = v60 << ((v60 >> 52) - 51);
        if (v61 >= 0x41F)
          v71 = v70;
        else
          v71 = (((1 << ((v60 >> 52) + 1)) - 1) & v70) + (1 << ((v60 >> 52) + 1));
        if ((v60 & 0x8000000000000000) == 0)
          v72 = v71;
        else
          v72 = -v71;
        v177 = v72;
      }
      else
      {
        v177 = 0;
      }
    }
    else
    {
      v177 = (int)v35;
    }
    if (*((_DWORD *)v36 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v36))
      return 0;
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(v3, *((_QWORD *)a2 + 12), &v199);
    if (v200)
      return 0;
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(v3, *((_QWORD *)a2 + 13), &v197);
    if (v198)
      return 0;
    v38 = (JSC::JSArrayBufferView *)*((_QWORD *)a2 + 14);
    if (((unint64_t)v38 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v194 = 0;
      LODWORD(v195) = 0;
      goto LABEL_80;
    }
    v194 = (JSC::ArrayBufferView **)*((_QWORD *)v3 + 7);
    if (((unint64_t)v38 & 0xFFFE000000000002) != 0
      || *((unsigned __int8 *)v38 + 5) - 39 > 0xB
      || (*((_BYTE *)v38 + 40) & 6) != 0)
    {
      v189 = 0;
    }
    else
    {
      JSC::JSArrayBufferView::possiblySharedImpl(v38);
      if (v189)
      {
        v42 = 0;
        v206 = v189;
        LODWORD(v207) = 0;
LABEL_73:
        LOBYTE(v202) = 0;
        LODWORD(v203) = -1;
        ((void (*)(JSC::ArrayBufferView ***, JSC::ArrayBufferView ***, JSC::ArrayBufferView **))off_1E333E4F8[v42])(&v194, &v202, &v206);
        LODWORD(v203) = v42;
        if ((_DWORD)v207 != -1)
        {
          ((void (*)(JSC::ArrayBufferView ***, JSC::ArrayBufferView **))off_1E333E4E8[v207])(&v194, &v206);
          v42 = v203;
        }
        if (v42)
        {
          v43 = 1;
          LODWORD(v195) = 1;
          if (v42 == -1)
          {
            v41 = 0;
            goto LABEL_87;
          }
        }
        else
        {
          v44 = (uint64_t)v202;
          v202 = 0;
          v194 = (JSC::ArrayBufferView **)v44;
          LODWORD(v195) = 0;
        }
        ((void (*)(JSC::ArrayBufferView **, JSC::ArrayBufferView ***))off_1E333E4E8[v42])(&v206, &v202);
        v43 = v195;
        if ((_DWORD)v195)
          goto LABEL_364;
LABEL_80:
        v45 = (_QWORD *)v183;
        if (*(_BYTE *)(v183 + 33))
        {
          v176 = (WebCore::CanvasRenderingContext *)(v183 + 8);
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v189 = v206;
          v82 = v192[0];
          v83 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v183 + 40) + 144))(*(_QWORD *)(v183 + 40));
          if (v83
            && (v85 = WebCore::InspectorInstrumentation::instrumentingAgents(v83, v84)) != 0
            && (v86 = *(WebCore::InspectorCanvasAgent **)(v85 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v86, v176, v82, (uint64_t)&v206);
          }
          else
          {
            LOBYTE(v206) = 0;
            LOBYTE(v208) = 0;
          }
          v121 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v183 + 40)
                                                                                        + 144))(*(_QWORD *)(v183 + 40));
          if (v121
            && (v123 = WebCore::InspectorInstrumentation::instrumentingAgents(v121, v122)) != 0
            && (v124 = *(WebCore::InspectorCanvasAgent **)(v123 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v124, v176, v179, (uint64_t)&v210);
          }
          else
          {
            LOBYTE(v210) = 0;
            BYTE4(v212) = 0;
          }
          v125 = v201;
          v126 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v183 + 40)
                                                                                        + 144))(*(_QWORD *)(v183 + 40));
          if (v126
            && (v128 = WebCore::InspectorInstrumentation::instrumentingAgents(v126, v127)) != 0
            && (v129 = *(WebCore::InspectorCanvasAgent **)(v128 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v129, v176, v125, (uint64_t)&v213[1]);
          }
          else
          {
            LOBYTE(v213[1]) = 0;
            LOBYTE(v215) = 0;
          }
          v130 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v183 + 40)
                                                                                        + 144))(*(_QWORD *)(v183 + 40));
          if (v130
            && (v132 = WebCore::InspectorInstrumentation::instrumentingAgents(v130, v131)) != 0
            && (v133 = *(WebCore::InspectorCanvasAgent **)(v132 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v133, v176, v181, (uint64_t)v216);
          }
          else
          {
            LOBYTE(v216[0]) = 0;
            v217 = 0;
          }
          v134 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v183 + 40)
                                                                                        + 144))(*(_QWORD *)(v183 + 40));
          if (v134
            && (v136 = WebCore::InspectorInstrumentation::instrumentingAgents(v134, v135)) != 0
            && (v137 = *(WebCore::InspectorCanvasAgent **)(v136 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v137, v176, v178, (uint64_t)v218);
          }
          else
          {
            LOBYTE(v218[0]) = 0;
            v219 = 0;
          }
          v138 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v183 + 40)
                                                                                        + 144))(*(_QWORD *)(v183 + 40));
          if (v138
            && (v140 = WebCore::InspectorInstrumentation::instrumentingAgents(v138, v139)) != 0
            && (v141 = *(WebCore::InspectorCanvasAgent **)(v140 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v141, v176, v177, (uint64_t)&v220);
          }
          else
          {
            LOBYTE(v220) = 0;
            v221 = 0;
          }
          v142 = v199;
          v143 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v183 + 40)
                                                                                        + 144))(*(_QWORD *)(v183 + 40));
          if (v143
            && (v145 = WebCore::InspectorInstrumentation::instrumentingAgents(v143, v144)) != 0
            && (v146 = *(WebCore::InspectorCanvasAgent **)(v145 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v146, v176, v142, (uint64_t)&v222);
          }
          else
          {
            LOBYTE(v222) = 0;
            v223 = 0;
          }
          v147 = v197;
          v148 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v183 + 40)
                                                                                        + 144))(*(_QWORD *)(v183 + 40));
          if (v148
            && (v150 = WebCore::InspectorInstrumentation::instrumentingAgents(v148, v149)) != 0
            && (v151 = *(WebCore::InspectorCanvasAgent **)(v150 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v151, v176, v147, (uint64_t)&v224);
          }
          else
          {
            LOBYTE(v224) = 0;
            v225 = 0;
          }
          if ((_DWORD)v195)
            goto LABEL_363;
          v152 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v183 + 40)
                                                                                        + 144))(*(_QWORD *)(v183 + 40));
          if (v152
            && (v154 = WebCore::InspectorInstrumentation::instrumentingAgents(v152, v153)) != 0
            && (v155 = *(_QWORD *)(v154 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v155, v176, (uint64_t *)&v194, (uint64_t)&v226);
          }
          else
          {
            LOBYTE(v226) = 0;
            v227 = 0;
          }
          v202 = &v206;
          v203 = 9;
          v156 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v183 + 40)
                                                                                        + 144))(*(_QWORD *)(v183 + 40));
          if (v156)
          {
            v158 = WebCore::InspectorInstrumentation::instrumentingAgents(v156, v157);
            if (v158)
            {
              v159 = *(_QWORD *)(v158 + 96);
              if (v159)
                WebCore::InspectorCanvasAgent::recordAction(v159, v176, (const WTF::StringImpl *)&v189, &v202);
            }
          }
          if (v227)
          {
            v160 = v226;
            v226 = 0;
            if (v160)
            {
              if (*v160 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v160;
              v45 = (_QWORD *)v183;
            }
          }
          if (v225)
          {
            v161 = v224;
            v224 = 0;
            if (v161)
            {
              if (*v161 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v161;
              v45 = (_QWORD *)v183;
            }
          }
          if (v223)
          {
            v162 = v222;
            v222 = 0;
            if (v162)
            {
              if (*v162 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v162;
              v45 = (_QWORD *)v183;
            }
          }
          if (v221)
          {
            v163 = v220;
            v220 = 0;
            if (v163)
            {
              if (*v163 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v163;
              v45 = (_QWORD *)v183;
            }
          }
          if (v219)
          {
            v164 = (_DWORD *)v218[0];
            v218[0] = 0;
            if (v164)
            {
              if (*v164 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v164;
              v45 = (_QWORD *)v183;
            }
          }
          if (v217)
          {
            v165 = (_DWORD *)v216[0];
            v216[0] = 0;
            if (v165)
            {
              if (*v165 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v165;
              v45 = (_QWORD *)v183;
            }
          }
          if ((_BYTE)v215)
          {
            v166 = *(_DWORD **)&v213[1];
            *(_QWORD *)&v213[1] = 0;
            if (v166)
            {
              if (*v166 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v166;
              v45 = (_QWORD *)v183;
            }
          }
          if (BYTE4(v212))
          {
            v167 = v210;
            v210 = 0;
            if (v167)
            {
              if (*v167 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v167;
              v45 = (_QWORD *)v183;
            }
          }
          if ((_BYTE)v208)
          {
            v168 = v206;
            v206 = 0;
            if (v168)
            {
              if (*(_DWORD *)v168 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*(_DWORD *)v168;
              v45 = (_QWORD *)v183;
            }
          }
          v169 = v189;
          v189 = 0;
          if (v169)
          {
            if (*(_DWORD *)v169 == 2)
              WTF::StringImpl::destroy(v169, v157);
            else
              *(_DWORD *)v169 -= 2;
          }
        }
        if (!(_DWORD)v195)
        {
          v46 = (JSC::ArrayBufferView *)v194;
          v194 = 0;
          v206 = v46;
          WebCore::WebGLRenderingContextBase::texImageArrayBufferViewHelper(v45, 0, v192[0], v179, v201, v181, v178, 1, v177, v199, v197, 0, 0, 0, &v206, 0, 0);
          if (v46)
          {
            if (*(_DWORD *)v46 == 1)
              JSC::ArrayBufferView::operator delete();
            else
              --*(_DWORD *)v46;
          }
          v43 = v195;
          v41 = 10;
LABEL_86:
          if (v43 == -1)
            return (_BYTE *)v41;
LABEL_87:
          ((void (*)(JSC::ArrayBufferView **, JSC::ArrayBufferView ***))off_1E333E508[v43])(&v206, &v194);
          return (_BYTE *)v41;
        }
        goto LABEL_363;
      }
    }
    WebCore::throwArgumentTypeError((uint64_t)v3, (uint64_t)&v194, 8, "pixels", 7, "WebGLRenderingContext", 22, v37, "texImage2D", 11, "ArrayBufferView", 16);
    v42 = 1;
    LODWORD(v207) = 1;
    v189 = 0;
    goto LABEL_73;
  }
  if (v12 != 6)
  {
    if (v12 > 5)
      return (_BYTE *)JSC::throwTypeError();
    v39.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, v3, v39);
  }
  v13 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>((JSC::JSGlobalObject *)this, *((_QWORD *)a2 + 6), &v199);
  if (v200)
    return 0;
  v175 = v4;
  v14 = (JSC::ArrayBufferView *)*((_QWORD *)a2 + 7);
  v206 = v14;
  v15 = (JSC::VM *)*((_QWORD *)v3 + 7);
  if ((unint64_t)v14 < 0xFFFE000000000000)
  {
    v48 = (unint64_t)v14 - 0x2000000000000;
    if ((unint64_t)v14 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v206, v3);
      v48 = v170;
    }
    v49 = (v48 >> 52) & 0x7FF;
    if ((v49 - 1023) <= 0x53)
    {
      v62 = v48 >> (51 - (v48 >> 52));
      if (v49 > 0x433)
        LODWORD(v62) = v48 << ((v48 >> 52) - 51);
      if (v49 >= 0x41F)
        v63 = v62;
      else
        v63 = (((1 << ((v48 >> 52) + 1)) - 1) & v62) + (1 << ((v48 >> 52) + 1));
      if ((v48 & 0x8000000000000000) == 0)
        v16 = v63;
      else
        v16 = -v63;
    }
    else
    {
      v16 = 0;
    }
  }
  else
  {
    v16 = (int)v14;
  }
  if (*((_DWORD *)v15 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v15))
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(v3, *((_QWORD *)a2 + 8), &v197);
  if (v198)
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(v3, *((_QWORD *)a2 + 9), v188);
  if (v188[1])
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(v3, *((_QWORD *)a2 + 10), v187);
  if (v187[1])
    return 0;
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::ImageBitmap>,WebCore::IDLInterface<WebCore::ImageData>,WebCore::IDLInterface<WebCore::HTMLImageElement>,WebCore::IDLInterface<WebCore::HTMLCanvasElement>,WebCore::IDLInterface<WebCore::HTMLVideoElement>,WebCore::IDLInterface<WebCore::OffscreenCanvas>,WebCore::IDLInterface<WebCore::WebCodecsVideoFrame>>>::convert((unint64_t *)v3, *((_QWORD *)a2 + 11), (uint64_t)&v202);
  v17 = v205;
  if (!v205)
  {
    if (!*(_BYTE *)(v13 + 33))
      goto LABEL_25;
    v185 = (WebCore::CanvasRenderingContext *)(v13 + 8);
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v189 = v206;
    v73 = v199;
    v74 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 40) + 144))(*(_QWORD *)(v13 + 40));
    if (v74
      && (v76 = WebCore::InspectorInstrumentation::instrumentingAgents(v74, v75)) != 0
      && (v77 = *(WebCore::InspectorCanvasAgent **)(v76 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v77, v185, v73, (uint64_t)&v206);
    }
    else
    {
      LOBYTE(v206) = 0;
      LOBYTE(v208) = 0;
    }
    v87 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 40) + 144))(*(_QWORD *)(v13 + 40));
    if (v87
      && (v89 = WebCore::InspectorInstrumentation::instrumentingAgents(v87, v88)) != 0
      && (v90 = *(WebCore::InspectorCanvasAgent **)(v89 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v90, v185, v16, (uint64_t)&v210);
    }
    else
    {
      LOBYTE(v210) = 0;
      BYTE4(v212) = 0;
    }
    v91 = v197;
    v92 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 40) + 144))(*(_QWORD *)(v13 + 40));
    if (v92
      && (v94 = WebCore::InspectorInstrumentation::instrumentingAgents(v92, v93)) != 0
      && (v95 = *(WebCore::InspectorCanvasAgent **)(v94 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v95, v185, v91, (uint64_t)&v213[1]);
    }
    else
    {
      LOBYTE(v213[1]) = 0;
      LOBYTE(v215) = 0;
    }
    v96 = v188[0];
    v97 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 40) + 144))(*(_QWORD *)(v13 + 40));
    if (v97
      && (v99 = WebCore::InspectorInstrumentation::instrumentingAgents(v97, v98)) != 0
      && (v100 = *(WebCore::InspectorCanvasAgent **)(v99 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v100, v185, v96, (uint64_t)v216);
    }
    else
    {
      LOBYTE(v216[0]) = 0;
      v217 = 0;
    }
    v101 = v187[0];
    v102 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 40) + 144))(*(_QWORD *)(v13 + 40));
    if (v102
      && (v104 = WebCore::InspectorInstrumentation::instrumentingAgents(v102, v103)) != 0
      && (v105 = *(WebCore::InspectorCanvasAgent **)(v104 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v105, v185, v101, (uint64_t)v218);
    }
    else
    {
      LOBYTE(v218[0]) = 0;
      v219 = 0;
    }
    if (!v205)
    {
      v106 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 40) + 144))(*(_QWORD *)(v13 + 40));
      if (v106
        && (v108 = WebCore::InspectorInstrumentation::instrumentingAgents(v106, v107)) != 0
        && (v109 = *(_QWORD *)(v108 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v109, (uint64_t)v185, (uint64_t)&v203);
      }
      else
      {
        LOBYTE(v220) = 0;
        v221 = 0;
      }
      v194 = &v206;
      v195 = 6;
      v110 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 40) + 144))(*(_QWORD *)(v13 + 40));
      if (v110)
      {
        v112 = WebCore::InspectorInstrumentation::instrumentingAgents(v110, v111);
        if (v112)
        {
          v113 = *(_QWORD *)(v112 + 96);
          if (v113)
            WebCore::InspectorCanvasAgent::recordAction(v113, v185, (const WTF::StringImpl *)&v189, &v194);
        }
      }
      if (v221)
      {
        v114 = v220;
        v220 = 0;
        if (v114)
        {
          if (*v114 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v114;
        }
      }
      if (v219)
      {
        v115 = (_DWORD *)v218[0];
        v218[0] = 0;
        if (v115)
        {
          if (*v115 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v115;
        }
      }
      if (v217)
      {
        v116 = (_DWORD *)v216[0];
        v216[0] = 0;
        if (v116)
        {
          if (*v116 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v116;
        }
      }
      if ((_BYTE)v215)
      {
        v117 = *(_DWORD **)&v213[1];
        *(_QWORD *)&v213[1] = 0;
        if (v117)
        {
          if (*v117 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v117;
        }
      }
      if (BYTE4(v212))
      {
        v118 = v210;
        v210 = 0;
        if (v118)
        {
          if (*v118 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v118;
        }
      }
      if ((_BYTE)v208)
      {
        v119 = v206;
        v206 = 0;
        if (v119)
        {
          if (*(_DWORD *)v119 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*(_DWORD *)v119;
        }
      }
      v120 = v189;
      v189 = 0;
      if (v120)
      {
        if (*(_DWORD *)v120 == 2)
          WTF::StringImpl::destroy(v120, v111);
        else
          *(_DWORD *)v120 -= 2;
      }
LABEL_25:
      v184 = v16;
      if (!v205)
      {
        v18 = v199;
        v19 = v197;
        v20 = v188[0];
        v21 = v187[0];
        LOBYTE(v192[0]) = 0;
        v193 = -1;
        v22 = v204;
        if (v204 == -1)
        {
          LOBYTE(v194) = 0;
          LODWORD(v195) = -1;
        }
        else
        {
          *(_QWORD *)v180 = v13;
          v182 = v3;
          v23 = off_1E333E4A0[v204];
          v24 = v187[0];
          v25 = v188[0];
          v26 = v197;
          v27 = v199;
          ((void (*)(JSC::ArrayBufferView **, _DWORD *, uint64_t *))v23)(&v206, v192, &v203);
          v193 = v22;
          LOBYTE(v194) = 0;
          LODWORD(v195) = -1;
          ((void (*)(JSC::ArrayBufferView **, JSC::ArrayBufferView ***, _DWORD *))v23)(&v206, &v194, v192);
          v18 = v27;
          v19 = v26;
          v20 = v25;
          v21 = v24;
          v13 = *(_QWORD *)v180;
          v3 = v182;
          LODWORD(v195) = v22;
        }
        v196 = 1;
        if (*(_BYTE *)(v13 + 364))
        {
          v189 = 0;
          v190 = 0;
          v191 = 0;
LABEL_60:
          if ((_DWORD)v195 != -1)
            ((void (*)(JSC::ArrayBufferView **, JSC::ArrayBufferView ***))off_1E333E468[v195])(&v206, &v194);
          LODWORD(v195) = -1;
LABEL_63:
          if (v193 != -1)
            ((void (*)(JSC::ArrayBufferView **, _DWORD *))off_1E333E468[v193])(&v206, v192);
          if (!(_BYTE)v191)
          {
            v41 = 10;
LABEL_67:
            v17 = v205;
            goto LABEL_68;
          }
          v78 = (WTF::StringImpl *)v189;
          LOBYTE(v206) = (_BYTE)v189;
          v79 = v190;
          v190 = 0;
          v207 = v79;
          if (!*((_QWORD *)v175 + 2))
          {
            v80.super.isa = (Class)WebCore::createDOMException(v3, (JSC::JSGlobalObject *)v189, (JSC::JSGlobalObject *)&v207);
            JSC::VM::throwException(v175, v3, v80);
            v79 = v207;
          }
          v207 = 0;
          if (v79)
          {
            if (*(_DWORD *)v79 == 2)
              WTF::StringImpl::destroy(v79, v78);
            else
              *(_DWORD *)v79 -= 2;
          }
          if ((_BYTE)v191)
          {
            v81 = v190;
            v190 = 0;
            if (v81)
            {
              if (*(_DWORD *)v81 != 2)
              {
                v41 = 0;
                *(_DWORD *)v81 -= 2;
                goto LABEL_67;
              }
              WTF::StringImpl::destroy(v81, v78);
            }
          }
          v41 = 0;
          goto LABEL_67;
        }
        v206 = (JSC::ArrayBufferView *)v13;
        LODWORD(v207) = 0;
        HIDWORD(v207) = v18;
        v208 = v184;
        v209 = v19;
        LODWORD(v210) = 0;
        HIDWORD(v210) = v20;
        memset(v213, 0, sizeof(v213));
        v212 = 0;
        v211 = v21;
        v214 = -1;
        v215 = 1;
        if ((_DWORD)v22 != -1)
        {
          v201 = &v206;
          ((void (*)(WTF::StringImpl **__return_ptr, JSC::ArrayBufferView ***, JSC::ArrayBufferView ***))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIZN7WebCore25WebGLRenderingContextBase20texImageSourceHelperENS7_18TexImageFunctionIDEjiiijjiiiRKNS6_7IntRectEiiONS_7variantIJN3WTF6RefPtrINS6_11ImageBitmapENSD_12RawPtrTraitsISF_EENSD_21DefaultRefDerefTraitsISF_EEEENSE_INS6_9ImageDataENSG_ISL_EENSI_ISL_EEEENSE_INS6_16HTMLImageElementENSG_ISP_EENSI_ISP_EEEENSE_INS6_17HTMLCanvasElementENSG_IST_EENSI_IST_EEEENSE_INS6_16HTMLVideoElementENSG_ISX_EENSI_ISX_EEEENSE_INS6_15OffscreenCanvasENSG_IS11_EENSI_IS11_EEEENSE_INS6_19WebCodecsVideoFrameENSG_IS15_EENSI_IS15_EEEEEEEE3__0EEJRNS0_6__implIJSK_SO_SS_SW_S10_S14_S18_EEEEEEDcOT_DpOT0____fmatrix[v22])(&v189, &v201, &v194);
          if (!v196)
            goto LABEL_63;
          goto LABEL_60;
        }
      }
    }
LABEL_363:
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_364:
    v41 = 0;
    goto LABEL_86;
  }
  v41 = 0;
LABEL_68:
  if (v17 != -1)
    ((void (*)(JSC::ArrayBufferView **, uint64_t *))off_1E333E4D8[v17])(&v206, &v203);
  return (_BYTE *)v41;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_texSubImage2D(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  unint64_t v12;
  uint64_t v13;
  JSC::ArrayBufferView *v14;
  JSC::VM *v15;
  int v16;
  JSC::ArrayBufferView *v17;
  JSC::VM *v18;
  int v19;
  JSC::ArrayBufferView *v20;
  JSC::VM *v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t (*v27)();
  int v28;
  int v29;
  int v30;
  JSC::ArrayBufferView *v31;
  JSC::VM *v32;
  unsigned int v33;
  JSC::ArrayBufferView *v34;
  JSC::VM *v35;
  int v36;
  JSC::ArrayBufferView *v37;
  JSC::VM *v38;
  JSC::ArrayBufferView *v39;
  JSC::VM *v40;
  JSC::ArrayBufferView *v41;
  JSC::VM *v42;
  uint64_t v43;
  JSC::JSArrayBufferView *v44;
  JSValue v45;
  uint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  _QWORD *v51;
  JSC::ArrayBufferView *v52;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unsigned int v58;
  unint64_t v59;
  int v60;
  int v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  int v75;
  unint64_t v76;
  int v77;
  unint64_t v78;
  int v79;
  unint64_t v80;
  int v81;
  int v82;
  unint64_t v83;
  int v84;
  int v85;
  unint64_t v86;
  int v87;
  int v88;
  unint64_t v89;
  int v90;
  int v91;
  unsigned int v92;
  WebCore::InspectorInstrumentation *v93;
  WebCore::ScriptExecutionContext *v94;
  uint64_t v95;
  WebCore::InspectorCanvasAgent *v96;
  WTF::StringImpl *v97;
  WTF::StringImpl *v98;
  JSValue v99;
  WTF::StringImpl *v100;
  unsigned int v101;
  WebCore::InspectorInstrumentation *v102;
  WebCore::ScriptExecutionContext *v103;
  uint64_t v104;
  WebCore::InspectorCanvasAgent *v105;
  WebCore::InspectorInstrumentation *v106;
  WebCore::ScriptExecutionContext *v107;
  uint64_t v108;
  WebCore::InspectorCanvasAgent *v109;
  WebCore::InspectorInstrumentation *v110;
  WebCore::ScriptExecutionContext *v111;
  uint64_t v112;
  WebCore::InspectorCanvasAgent *v113;
  WebCore::InspectorInstrumentation *v114;
  WebCore::ScriptExecutionContext *v115;
  uint64_t v116;
  WebCore::InspectorCanvasAgent *v117;
  unsigned int v118;
  WebCore::InspectorInstrumentation *v119;
  WebCore::ScriptExecutionContext *v120;
  uint64_t v121;
  WebCore::InspectorCanvasAgent *v122;
  unsigned int v123;
  WebCore::InspectorInstrumentation *v124;
  WebCore::ScriptExecutionContext *v125;
  uint64_t v126;
  WebCore::InspectorCanvasAgent *v127;
  WebCore::InspectorInstrumentation *v128;
  WebCore::ScriptExecutionContext *v129;
  uint64_t v130;
  uint64_t v131;
  WebCore::InspectorInstrumentation *v132;
  WebCore::ScriptExecutionContext *v133;
  uint64_t v134;
  uint64_t v135;
  _DWORD *v136;
  _DWORD *v137;
  _DWORD *v138;
  _DWORD *v139;
  _DWORD *v140;
  _DWORD *v141;
  JSC::ArrayBufferView *v142;
  WTF::StringImpl *v143;
  WebCore::InspectorInstrumentation *v144;
  WebCore::ScriptExecutionContext *v145;
  uint64_t v146;
  WebCore::InspectorCanvasAgent *v147;
  WebCore::InspectorInstrumentation *v148;
  WebCore::ScriptExecutionContext *v149;
  uint64_t v150;
  WebCore::InspectorCanvasAgent *v151;
  WebCore::InspectorInstrumentation *v152;
  WebCore::ScriptExecutionContext *v153;
  uint64_t v154;
  WebCore::InspectorCanvasAgent *v155;
  WebCore::InspectorInstrumentation *v156;
  WebCore::ScriptExecutionContext *v157;
  uint64_t v158;
  WebCore::InspectorCanvasAgent *v159;
  WebCore::InspectorInstrumentation *v160;
  WebCore::ScriptExecutionContext *v161;
  uint64_t v162;
  WebCore::InspectorCanvasAgent *v163;
  unsigned int v164;
  WebCore::InspectorInstrumentation *v165;
  WebCore::ScriptExecutionContext *v166;
  uint64_t v167;
  WebCore::InspectorCanvasAgent *v168;
  unsigned int v169;
  WebCore::InspectorInstrumentation *v170;
  WebCore::ScriptExecutionContext *v171;
  uint64_t v172;
  WebCore::InspectorCanvasAgent *v173;
  WebCore::InspectorInstrumentation *v174;
  WebCore::ScriptExecutionContext *v175;
  uint64_t v176;
  uint64_t v177;
  WebCore::InspectorInstrumentation *v178;
  WebCore::ScriptExecutionContext *v179;
  uint64_t v180;
  uint64_t v181;
  _DWORD *v182;
  _DWORD *v183;
  _DWORD *v184;
  _DWORD *v185;
  _DWORD *v186;
  _DWORD *v187;
  _DWORD *v188;
  _DWORD *v189;
  JSC::ArrayBufferView *v190;
  WTF::StringImpl *v191;
  unint64_t v192;
  unint64_t v193;
  unint64_t v194;
  unint64_t v195;
  unint64_t v196;
  unint64_t v197;
  unint64_t v198;
  unint64_t v199;
  JSC::VM *v200;
  WebCore::CanvasRenderingContext *v201;
  int v202[2];
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  int v210;
  int v211[2];
  WebCore::CanvasRenderingContext *v212;
  _QWORD v213[2];
  _DWORD v214[2];
  _DWORD v215[2];
  WTF::StringImpl *v216;
  WTF::StringImpl *v217;
  uint64_t v218;
  _DWORD v219[2];
  int v220;
  JSC::ArrayBufferView **v221;
  uint64_t v222;
  char v223;
  unsigned int v224;
  int v225;
  JSC::ArrayBufferView **v226;
  JSC::ArrayBufferView **v227;
  uint64_t v228;
  unsigned int v229;
  int v230;
  JSC::ArrayBufferView *v231;
  WTF::StringImpl *v232;
  int v233;
  int v234;
  _DWORD *v235;
  int v236;
  int v237;
  int v238;
  int v239;
  __int128 v240;
  uint64_t v241;
  _QWORD v242[2];
  char v243;
  _QWORD v244[2];
  char v245;
  _QWORD v246[2];
  char v247;
  _DWORD *v248;
  char v249;
  _DWORD *v250;
  char v251;
  _DWORD *v252;
  char v253;
  uint64_t v254;

  v254 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v213[0] = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)v213, "WebGLRenderingContext", "texSubImage2D");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)v213, "WebGLRenderingContext", "texSubImage2D");
  v213[1] = v4;
  v12 = *((int *)a2 + 8) - 1;
  if (v12 >= 9)
    v12 = 9;
  if (v12 == 9)
  {
    *(_QWORD *)v211 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v219);
    if (v219[1])
      return 0;
    v31 = (JSC::ArrayBufferView *)*((_QWORD *)a2 + 7);
    v231 = v31;
    v32 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((unint64_t)v31 < 0xFFFE000000000000)
    {
      v56 = (unint64_t)v31 - 0x2000000000000;
      if ((unint64_t)v31 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v231, this);
        v56 = v193;
      }
      v57 = (v56 >> 52) & 0x7FF;
      v58 = v57 - 1023;
      v59 = v56 >> (51 - (v56 >> 52));
      if (v57 > 0x433)
        LODWORD(v59) = v56 << ((v56 >> 52) - 51);
      if (v57 >= 0x41F)
        v60 = v59;
      else
        v60 = (((1 << ((v56 >> 52) + 1)) - 1) & v59) + (1 << ((v56 >> 52) + 1));
      if ((v56 & 0x8000000000000000) == 0)
        v61 = v60;
      else
        v61 = -v60;
      if (v58 <= 0x53)
        v33 = v61;
      else
        v33 = 0;
    }
    else
    {
      v33 = v31;
    }
    if (*((_DWORD *)v32 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v32))
      return 0;
    v34 = (JSC::ArrayBufferView *)*((_QWORD *)a2 + 8);
    v231 = v34;
    v35 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((unint64_t)v34 < 0xFFFE000000000000)
    {
      v64 = (unint64_t)v34 - 0x2000000000000;
      if ((unint64_t)v34 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v231, this);
        v64 = v195;
      }
      v65 = (v64 >> 52) & 0x7FF;
      if ((v65 - 1023) <= 0x53)
      {
        v78 = v64 >> (51 - (v64 >> 52));
        if (v65 > 0x433)
          LODWORD(v78) = v64 << ((v64 >> 52) - 51);
        if (v65 >= 0x41F)
          v79 = v78;
        else
          v79 = (((1 << ((v64 >> 52) + 1)) - 1) & v78) + (1 << ((v64 >> 52) + 1));
        if ((v64 & 0x8000000000000000) == 0)
          v36 = v79;
        else
          v36 = -v79;
      }
      else
      {
        v36 = 0;
      }
    }
    else
    {
      v36 = (int)v34;
    }
    if (*((_DWORD *)v35 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v35))
      return 0;
    v37 = (JSC::ArrayBufferView *)*((_QWORD *)a2 + 9);
    v231 = v37;
    v38 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((unint64_t)v37 < 0xFFFE000000000000)
    {
      v68 = (unint64_t)v37 - 0x2000000000000;
      if ((unint64_t)v37 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v231, this);
        v68 = v197;
      }
      v69 = (v68 >> 52) & 0x7FF;
      if ((v69 - 1023) <= 0x53)
      {
        v83 = v68 >> (51 - (v68 >> 52));
        if (v69 > 0x433)
          LODWORD(v83) = v68 << ((v68 >> 52) - 51);
        if (v69 >= 0x41F)
          v84 = v83;
        else
          v84 = (((1 << ((v68 >> 52) + 1)) - 1) & v83) + (1 << ((v68 >> 52) + 1));
        if ((v68 & 0x8000000000000000) == 0)
          v85 = v84;
        else
          v85 = -v84;
        v207 = v85;
      }
      else
      {
        v207 = 0;
      }
    }
    else
    {
      v207 = (int)v37;
    }
    v209 = v36;
    if (*((_DWORD *)v38 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v38))
      return 0;
    v39 = (JSC::ArrayBufferView *)*((_QWORD *)a2 + 10);
    v231 = v39;
    v40 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((unint64_t)v39 < 0xFFFE000000000000)
    {
      v70 = (unint64_t)v39 - 0x2000000000000;
      if ((unint64_t)v39 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v231, this);
        v70 = v198;
      }
      v71 = (v70 >> 52) & 0x7FF;
      if ((v71 - 1023) <= 0x53)
      {
        v86 = v70 >> (51 - (v70 >> 52));
        if (v71 > 0x433)
          LODWORD(v86) = v70 << ((v70 >> 52) - 51);
        if (v71 >= 0x41F)
          v87 = v86;
        else
          v87 = (((1 << ((v70 >> 52) + 1)) - 1) & v86) + (1 << ((v70 >> 52) + 1));
        if ((v70 & 0x8000000000000000) == 0)
          v88 = v87;
        else
          v88 = -v87;
        v204 = v88;
      }
      else
      {
        v204 = 0;
      }
    }
    else
    {
      v204 = v39;
    }
    v205 = v33;
    if (*((_DWORD *)v40 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v40))
      return 0;
    v41 = (JSC::ArrayBufferView *)*((_QWORD *)a2 + 11);
    v231 = v41;
    v42 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((unint64_t)v41 < 0xFFFE000000000000)
    {
      v72 = (unint64_t)v41 - 0x2000000000000;
      if ((unint64_t)v41 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v231, this);
        v72 = v199;
      }
      v73 = (v72 >> 52) & 0x7FF;
      if ((v73 - 1023) <= 0x53)
      {
        v89 = v72 >> (51 - (v72 >> 52));
        if (v73 > 0x433)
          LODWORD(v89) = v72 << ((v72 >> 52) - 51);
        if (v73 >= 0x41F)
          v90 = v89;
        else
          v90 = (((1 << ((v72 >> 52) + 1)) - 1) & v89) + (1 << ((v72 >> 52) + 1));
        if ((v72 & 0x8000000000000000) == 0)
          v91 = v90;
        else
          v91 = -v90;
        v203 = v91;
      }
      else
      {
        v203 = 0;
      }
    }
    else
    {
      v203 = v41;
    }
    if (*((_DWORD *)v42 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v42))
      return 0;
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 12), &v226);
    if (HIDWORD(v226))
      return 0;
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 13), &v224);
    if (v225)
      return 0;
    v44 = (JSC::JSArrayBufferView *)*((_QWORD *)a2 + 14);
    if (((unint64_t)v44 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v221 = 0;
      LODWORD(v222) = 0;
      goto LABEL_87;
    }
    v221 = (JSC::ArrayBufferView **)*((_QWORD *)this + 7);
    if (((unint64_t)v44 & 0xFFFE000000000002) != 0
      || *((unsigned __int8 *)v44 + 5) - 39 > 0xB
      || (*((_BYTE *)v44 + 40) & 6) != 0)
    {
      v216 = 0;
    }
    else
    {
      JSC::JSArrayBufferView::possiblySharedImpl(v44);
      if (v216)
      {
        v48 = 0;
        v231 = v216;
        LODWORD(v232) = 0;
LABEL_80:
        LOBYTE(v227) = 0;
        LODWORD(v228) = -1;
        ((void (*)(JSC::ArrayBufferView ***, JSC::ArrayBufferView ***, JSC::ArrayBufferView **))off_1E333E4F8[v48])(&v221, &v227, &v231);
        LODWORD(v228) = v48;
        if ((_DWORD)v232 != -1)
        {
          ((void (*)(JSC::ArrayBufferView ***, JSC::ArrayBufferView **))off_1E333E4E8[v232])(&v221, &v231);
          v48 = v228;
        }
        if (v48)
        {
          v49 = 1;
          LODWORD(v222) = 1;
          if (v48 == -1)
          {
            v47 = 0;
            goto LABEL_94;
          }
        }
        else
        {
          v50 = (uint64_t)v227;
          v227 = 0;
          v221 = (JSC::ArrayBufferView **)v50;
          LODWORD(v222) = 0;
        }
        ((void (*)(JSC::ArrayBufferView **, JSC::ArrayBufferView ***))off_1E333E4E8[v48])(&v231, &v227);
        v49 = v222;
        if ((_DWORD)v222)
          goto LABEL_422;
LABEL_87:
        v51 = *(_QWORD **)v211;
        if (*(_BYTE *)(*(_QWORD *)v211 + 33))
        {
          v201 = (WebCore::CanvasRenderingContext *)(*(_QWORD *)v211 + 8);
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v216 = v231;
          v101 = v219[0];
          v102 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)v211 + 40)
                                                                                        + 144))(*(_QWORD *)(*(_QWORD *)v211 + 40));
          if (v102
            && (v104 = WebCore::InspectorInstrumentation::instrumentingAgents(v102, v103)) != 0
            && (v105 = *(WebCore::InspectorCanvasAgent **)(v104 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v105, v201, v101, (uint64_t)&v231);
          }
          else
          {
            LOBYTE(v231) = 0;
            LOBYTE(v233) = 0;
          }
          v144 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)v211 + 40)
                                                                                        + 144))(*(_QWORD *)(*(_QWORD *)v211 + 40));
          if (v144
            && (v146 = WebCore::InspectorInstrumentation::instrumentingAgents(v144, v145)) != 0
            && (v147 = *(WebCore::InspectorCanvasAgent **)(v146 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v147, v201, v205, (uint64_t)&v235);
          }
          else
          {
            LOBYTE(v235) = 0;
            LOBYTE(v238) = 0;
          }
          v148 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)v211 + 40)
                                                                                        + 144))(*(_QWORD *)(*(_QWORD *)v211 + 40));
          if (v148
            && (v150 = WebCore::InspectorInstrumentation::instrumentingAgents(v148, v149)) != 0
            && (v151 = *(WebCore::InspectorCanvasAgent **)(v150 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v151, v201, v209, (uint64_t)&v240);
          }
          else
          {
            LOBYTE(v240) = 0;
            LOBYTE(v241) = 0;
          }
          v152 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)v211 + 40)
                                                                                        + 144))(*(_QWORD *)(*(_QWORD *)v211 + 40));
          if (v152
            && (v154 = WebCore::InspectorInstrumentation::instrumentingAgents(v152, v153)) != 0
            && (v155 = *(WebCore::InspectorCanvasAgent **)(v154 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v155, v201, v207, (uint64_t)v242);
          }
          else
          {
            LOBYTE(v242[0]) = 0;
            v243 = 0;
          }
          v156 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)v211 + 40)
                                                                                        + 144))(*(_QWORD *)(*(_QWORD *)v211 + 40));
          if (v156
            && (v158 = WebCore::InspectorInstrumentation::instrumentingAgents(v156, v157)) != 0
            && (v159 = *(WebCore::InspectorCanvasAgent **)(v158 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v159, v201, v204, (uint64_t)v244);
          }
          else
          {
            LOBYTE(v244[0]) = 0;
            v245 = 0;
          }
          v160 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)v211 + 40)
                                                                                        + 144))(*(_QWORD *)(*(_QWORD *)v211 + 40));
          if (v160
            && (v162 = WebCore::InspectorInstrumentation::instrumentingAgents(v160, v161)) != 0
            && (v163 = *(WebCore::InspectorCanvasAgent **)(v162 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v163, v201, v203, (uint64_t)v246);
          }
          else
          {
            LOBYTE(v246[0]) = 0;
            v247 = 0;
          }
          v164 = v226;
          v165 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)v211 + 40)
                                                                                        + 144))(*(_QWORD *)(*(_QWORD *)v211 + 40));
          if (v165
            && (v167 = WebCore::InspectorInstrumentation::instrumentingAgents(v165, v166)) != 0
            && (v168 = *(WebCore::InspectorCanvasAgent **)(v167 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v168, v201, v164, (uint64_t)&v248);
          }
          else
          {
            LOBYTE(v248) = 0;
            v249 = 0;
          }
          v169 = v224;
          v170 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)v211 + 40)
                                                                                        + 144))(*(_QWORD *)(*(_QWORD *)v211 + 40));
          if (v170
            && (v172 = WebCore::InspectorInstrumentation::instrumentingAgents(v170, v171)) != 0
            && (v173 = *(WebCore::InspectorCanvasAgent **)(v172 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v173, v201, v169, (uint64_t)&v250);
          }
          else
          {
            LOBYTE(v250) = 0;
            v251 = 0;
          }
          if ((_DWORD)v222)
            goto LABEL_421;
          v174 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)v211 + 40)
                                                                                        + 144))(*(_QWORD *)(*(_QWORD *)v211 + 40));
          if (v174
            && (v176 = WebCore::InspectorInstrumentation::instrumentingAgents(v174, v175)) != 0
            && (v177 = *(_QWORD *)(v176 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v177, v201, (uint64_t *)&v221, (uint64_t)&v252);
          }
          else
          {
            LOBYTE(v252) = 0;
            v253 = 0;
          }
          v227 = &v231;
          v228 = 9;
          v178 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)v211 + 40)
                                                                                        + 144))(*(_QWORD *)(*(_QWORD *)v211 + 40));
          if (v178)
          {
            v180 = WebCore::InspectorInstrumentation::instrumentingAgents(v178, v179);
            if (v180)
            {
              v181 = *(_QWORD *)(v180 + 96);
              if (v181)
                WebCore::InspectorCanvasAgent::recordAction(v181, v201, (const WTF::StringImpl *)&v216, &v227);
            }
          }
          if (v253)
          {
            v182 = v252;
            v252 = 0;
            if (v182)
            {
              if (*v182 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v182;
              v51 = *(_QWORD **)v211;
            }
          }
          if (v251)
          {
            v183 = v250;
            v250 = 0;
            if (v183)
            {
              if (*v183 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v183;
              v51 = *(_QWORD **)v211;
            }
          }
          if (v249)
          {
            v184 = v248;
            v248 = 0;
            if (v184)
            {
              if (*v184 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v184;
              v51 = *(_QWORD **)v211;
            }
          }
          if (v247)
          {
            v185 = (_DWORD *)v246[0];
            v246[0] = 0;
            if (v185)
            {
              if (*v185 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v185;
              v51 = *(_QWORD **)v211;
            }
          }
          if (v245)
          {
            v186 = (_DWORD *)v244[0];
            v244[0] = 0;
            if (v186)
            {
              if (*v186 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v186;
              v51 = *(_QWORD **)v211;
            }
          }
          if (v243)
          {
            v187 = (_DWORD *)v242[0];
            v242[0] = 0;
            if (v187)
            {
              if (*v187 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v187;
              v51 = *(_QWORD **)v211;
            }
          }
          if ((_BYTE)v241)
          {
            v188 = (_DWORD *)v240;
            *(_QWORD *)&v240 = 0;
            if (v188)
            {
              if (*v188 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v188;
              v51 = *(_QWORD **)v211;
            }
          }
          if ((_BYTE)v238)
          {
            v189 = v235;
            v235 = 0;
            if (v189)
            {
              if (*v189 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v189;
              v51 = *(_QWORD **)v211;
            }
          }
          if ((_BYTE)v233)
          {
            v190 = v231;
            v231 = 0;
            if (v190)
            {
              if (*(_DWORD *)v190 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*(_DWORD *)v190;
              v51 = *(_QWORD **)v211;
            }
          }
          v191 = v216;
          v216 = 0;
          if (v191)
          {
            if (*(_DWORD *)v191 == 2)
              WTF::StringImpl::destroy(v191, v179);
            else
              *(_DWORD *)v191 -= 2;
          }
        }
        if (!(_DWORD)v222)
        {
          v52 = (JSC::ArrayBufferView *)v221;
          v221 = 0;
          v231 = v52;
          WebCore::WebGLRenderingContextBase::texImageArrayBufferViewHelper(v51, 1, v219[0], v205, 0, v204, v203, 1, 0, v226, v224, v209, v207, 0, &v231, 1, 0);
          if (v52)
          {
            if (*(_DWORD *)v52 == 1)
              JSC::ArrayBufferView::operator delete();
            else
              --*(_DWORD *)v52;
          }
          v49 = v222;
          v47 = 10;
LABEL_93:
          if (v49 == -1)
            return (_BYTE *)v47;
LABEL_94:
          ((void (*)(JSC::ArrayBufferView **, JSC::ArrayBufferView ***))off_1E333E508[v49])(&v231, &v221);
          return (_BYTE *)v47;
        }
        goto LABEL_421;
      }
    }
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v221, 8, "pixels", 7, "WebGLRenderingContext", 22, v43, "texSubImage2D", 14, "ArrayBufferView", 16);
    v48 = 1;
    LODWORD(v232) = 1;
    v216 = 0;
    goto LABEL_80;
  }
  if (v12 != 7)
  {
    if (v12 > 6)
      return (_BYTE *)JSC::throwTypeError();
    v45.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v45);
  }
  v13 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), &v224);
  if (v225)
    return 0;
  v200 = v4;
  v14 = (JSC::ArrayBufferView *)*((_QWORD *)a2 + 7);
  v231 = v14;
  v15 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((unint64_t)v14 < 0xFFFE000000000000)
  {
    v54 = (unint64_t)v14 - 0x2000000000000;
    if ((unint64_t)v14 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v231, this);
      v54 = v192;
    }
    v55 = (v54 >> 52) & 0x7FF;
    if ((v55 - 1023) <= 0x53)
    {
      v74 = v54 >> (51 - (v54 >> 52));
      if (v55 > 0x433)
        LODWORD(v74) = v54 << ((v54 >> 52) - 51);
      if (v55 >= 0x41F)
        v75 = v74;
      else
        v75 = (((1 << ((v54 >> 52) + 1)) - 1) & v74) + (1 << ((v54 >> 52) + 1));
      if ((v54 & 0x8000000000000000) == 0)
        v16 = v75;
      else
        v16 = -v75;
    }
    else
    {
      v16 = 0;
    }
  }
  else
  {
    v16 = (int)v14;
  }
  if (*((_DWORD *)v15 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v15))
    return 0;
  v17 = (JSC::ArrayBufferView *)*((_QWORD *)a2 + 8);
  v231 = v17;
  v18 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((unint64_t)v17 < 0xFFFE000000000000)
  {
    v62 = (unint64_t)v17 - 0x2000000000000;
    if ((unint64_t)v17 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v231, this);
      v62 = v194;
    }
    v63 = (v62 >> 52) & 0x7FF;
    if ((v63 - 1023) <= 0x53)
    {
      v76 = v62 >> (51 - (v62 >> 52));
      if (v63 > 0x433)
        LODWORD(v76) = v62 << ((v62 >> 52) - 51);
      if (v63 >= 0x41F)
        v77 = v76;
      else
        v77 = (((1 << ((v62 >> 52) + 1)) - 1) & v76) + (1 << ((v62 >> 52) + 1));
      if ((v62 & 0x8000000000000000) == 0)
        v19 = v77;
      else
        v19 = -v77;
    }
    else
    {
      v19 = 0;
    }
  }
  else
  {
    v19 = (int)v17;
  }
  if (*((_DWORD *)v18 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v18))
    return 0;
  v20 = (JSC::ArrayBufferView *)*((_QWORD *)a2 + 9);
  v231 = v20;
  v21 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((unint64_t)v20 < 0xFFFE000000000000)
  {
    v66 = (unint64_t)v20 - 0x2000000000000;
    if ((unint64_t)v20 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v231, this);
      v66 = v196;
    }
    v67 = (v66 >> 52) & 0x7FF;
    if ((v67 - 1023) <= 0x53)
    {
      v80 = v66 >> (51 - (v66 >> 52));
      if (v67 > 0x433)
        LODWORD(v80) = v66 << ((v66 >> 52) - 51);
      if (v67 >= 0x41F)
        v81 = v80;
      else
        v81 = (((1 << ((v66 >> 52) + 1)) - 1) & v80) + (1 << ((v66 >> 52) + 1));
      if ((v66 & 0x8000000000000000) == 0)
        v82 = v81;
      else
        v82 = -v81;
      v208 = v82;
    }
    else
    {
      v208 = 0;
    }
  }
  else
  {
    v208 = (int)v20;
  }
  v210 = v19;
  if (*((_DWORD *)v21 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v21))
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 10), v215);
  if (v215[1])
    return 0;
  v206 = v16;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 11), v214);
  if (v214[1])
    return 0;
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::ImageBitmap>,WebCore::IDLInterface<WebCore::ImageData>,WebCore::IDLInterface<WebCore::HTMLImageElement>,WebCore::IDLInterface<WebCore::HTMLCanvasElement>,WebCore::IDLInterface<WebCore::HTMLVideoElement>,WebCore::IDLInterface<WebCore::OffscreenCanvas>,WebCore::IDLInterface<WebCore::WebCodecsVideoFrame>>>::convert((unint64_t *)this, *((_QWORD *)a2 + 12), (uint64_t)&v227);
  v22 = v230;
  if (!v230)
  {
    if (!*(_BYTE *)(v13 + 33))
      goto LABEL_30;
    v212 = (WebCore::CanvasRenderingContext *)(v13 + 8);
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v216 = v231;
    v92 = v224;
    v93 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 40) + 144))(*(_QWORD *)(v13 + 40));
    if (v93
      && (v95 = WebCore::InspectorInstrumentation::instrumentingAgents(v93, v94)) != 0
      && (v96 = *(WebCore::InspectorCanvasAgent **)(v95 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v96, v212, v92, (uint64_t)&v231);
    }
    else
    {
      LOBYTE(v231) = 0;
      LOBYTE(v233) = 0;
    }
    v106 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 40) + 144))(*(_QWORD *)(v13 + 40));
    if (v106
      && (v108 = WebCore::InspectorInstrumentation::instrumentingAgents(v106, v107)) != 0
      && (v109 = *(WebCore::InspectorCanvasAgent **)(v108 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v109, v212, v16, (uint64_t)&v235);
    }
    else
    {
      LOBYTE(v235) = 0;
      LOBYTE(v238) = 0;
    }
    v110 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 40) + 144))(*(_QWORD *)(v13 + 40));
    if (v110
      && (v112 = WebCore::InspectorInstrumentation::instrumentingAgents(v110, v111)) != 0
      && (v113 = *(WebCore::InspectorCanvasAgent **)(v112 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v113, v212, v19, (uint64_t)&v240);
    }
    else
    {
      LOBYTE(v240) = 0;
      LOBYTE(v241) = 0;
    }
    v114 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 40) + 144))(*(_QWORD *)(v13 + 40));
    if (v114
      && (v116 = WebCore::InspectorInstrumentation::instrumentingAgents(v114, v115)) != 0
      && (v117 = *(WebCore::InspectorCanvasAgent **)(v116 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v117, v212, v208, (uint64_t)v242);
    }
    else
    {
      LOBYTE(v242[0]) = 0;
      v243 = 0;
    }
    v118 = v215[0];
    v119 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 40) + 144))(*(_QWORD *)(v13 + 40));
    if (v119
      && (v121 = WebCore::InspectorInstrumentation::instrumentingAgents(v119, v120)) != 0
      && (v122 = *(WebCore::InspectorCanvasAgent **)(v121 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v122, v212, v118, (uint64_t)v244);
    }
    else
    {
      LOBYTE(v244[0]) = 0;
      v245 = 0;
    }
    v123 = v214[0];
    v124 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 40) + 144))(*(_QWORD *)(v13 + 40));
    if (v124
      && (v126 = WebCore::InspectorInstrumentation::instrumentingAgents(v124, v125)) != 0
      && (v127 = *(WebCore::InspectorCanvasAgent **)(v126 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v127, v212, v123, (uint64_t)v246);
    }
    else
    {
      LOBYTE(v246[0]) = 0;
      v247 = 0;
    }
    if (!v230)
    {
      v128 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 40) + 144))(*(_QWORD *)(v13 + 40));
      if (v128
        && (v130 = WebCore::InspectorInstrumentation::instrumentingAgents(v128, v129)) != 0
        && (v131 = *(_QWORD *)(v130 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v131, (uint64_t)v212, (uint64_t)&v228);
      }
      else
      {
        LOBYTE(v248) = 0;
        v249 = 0;
      }
      v221 = &v231;
      v222 = 7;
      v132 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 40) + 144))(*(_QWORD *)(v13 + 40));
      if (v132)
      {
        v134 = WebCore::InspectorInstrumentation::instrumentingAgents(v132, v133);
        if (v134)
        {
          v135 = *(_QWORD *)(v134 + 96);
          if (v135)
            WebCore::InspectorCanvasAgent::recordAction(v135, v212, (const WTF::StringImpl *)&v216, &v221);
        }
      }
      if (v249)
      {
        v136 = v248;
        v248 = 0;
        if (v136)
        {
          if (*v136 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v136;
        }
      }
      if (v247)
      {
        v137 = (_DWORD *)v246[0];
        v246[0] = 0;
        if (v137)
        {
          if (*v137 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v137;
        }
      }
      if (v245)
      {
        v138 = (_DWORD *)v244[0];
        v244[0] = 0;
        if (v138)
        {
          if (*v138 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v138;
        }
      }
      if (v243)
      {
        v139 = (_DWORD *)v242[0];
        v242[0] = 0;
        if (v139)
        {
          if (*v139 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v139;
        }
      }
      if ((_BYTE)v241)
      {
        v140 = (_DWORD *)v240;
        *(_QWORD *)&v240 = 0;
        if (v140)
        {
          if (*v140 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v140;
        }
      }
      if ((_BYTE)v238)
      {
        v141 = v235;
        v235 = 0;
        if (v141)
        {
          if (*v141 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v141;
        }
      }
      if ((_BYTE)v233)
      {
        v142 = v231;
        v231 = 0;
        if (v142)
        {
          if (*(_DWORD *)v142 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*(_DWORD *)v142;
        }
      }
      v143 = v216;
      v216 = 0;
      if (v143)
      {
        if (*(_DWORD *)v143 == 2)
          WTF::StringImpl::destroy(v143, v133);
        else
          *(_DWORD *)v143 -= 2;
      }
LABEL_30:
      if (!v230)
      {
        v23 = v224;
        v24 = v215[0];
        v25 = v214[0];
        LOBYTE(v219[0]) = 0;
        v220 = -1;
        v26 = v229;
        if (v229 == -1)
        {
          LOBYTE(v221) = 0;
          LODWORD(v222) = -1;
        }
        else
        {
          *(_QWORD *)v202 = v13;
          v27 = off_1E333E4A0[v229];
          v28 = v215[0];
          v29 = v214[0];
          v30 = v224;
          ((void (*)(JSC::ArrayBufferView **, _DWORD *, uint64_t *))v27)(&v231, v219, &v228);
          v220 = v26;
          LOBYTE(v221) = 0;
          LODWORD(v222) = -1;
          ((void (*)(JSC::ArrayBufferView **, JSC::ArrayBufferView ***, _DWORD *))v27)(&v231, &v221, v219);
          v23 = v30;
          v25 = v29;
          v24 = v28;
          v13 = *(_QWORD *)v202;
          LODWORD(v222) = v26;
        }
        v223 = 1;
        if (*(_BYTE *)(v13 + 364))
        {
          v216 = 0;
          v217 = 0;
          v218 = 0;
LABEL_67:
          if ((_DWORD)v222 != -1)
            ((void (*)(JSC::ArrayBufferView **, JSC::ArrayBufferView ***))off_1E333E468[v222])(&v231, &v221);
          LODWORD(v222) = -1;
LABEL_70:
          if (v220 != -1)
            ((void (*)(JSC::ArrayBufferView **, _DWORD *))off_1E333E468[v220])(&v231, v219);
          if (!(_BYTE)v218)
          {
            v47 = 10;
LABEL_74:
            v22 = v230;
            goto LABEL_75;
          }
          v97 = (WTF::StringImpl *)v216;
          LOBYTE(v231) = (_BYTE)v216;
          v98 = v217;
          v217 = 0;
          v232 = v98;
          if (!*((_QWORD *)v200 + 2))
          {
            v99.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v216, (JSC::JSGlobalObject *)&v232);
            JSC::VM::throwException(v200, this, v99);
            v98 = v232;
          }
          v232 = 0;
          if (v98)
          {
            if (*(_DWORD *)v98 == 2)
              WTF::StringImpl::destroy(v98, v97);
            else
              *(_DWORD *)v98 -= 2;
          }
          if ((_BYTE)v218)
          {
            v100 = v217;
            v217 = 0;
            if (v100)
            {
              if (*(_DWORD *)v100 != 2)
              {
                v47 = 0;
                *(_DWORD *)v100 -= 2;
                goto LABEL_74;
              }
              WTF::StringImpl::destroy(v100, v97);
            }
          }
          v47 = 0;
          goto LABEL_74;
        }
        v231 = (JSC::ArrayBufferView *)v13;
        LODWORD(v232) = 1;
        HIDWORD(v232) = v23;
        v233 = v206;
        v234 = 0;
        LODWORD(v235) = 0;
        HIDWORD(v235) = v24;
        v236 = v25;
        v237 = v210;
        v238 = v208;
        v239 = 0;
        v240 = xmmword_1968C18F0;
        v241 = 1;
        if ((_DWORD)v26 != -1)
        {
          v226 = &v231;
          ((void (*)(WTF::StringImpl **__return_ptr, JSC::ArrayBufferView ***, JSC::ArrayBufferView ***))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIZN7WebCore25WebGLRenderingContextBase20texImageSourceHelperENS7_18TexImageFunctionIDEjiiijjiiiRKNS6_7IntRectEiiONS_7variantIJN3WTF6RefPtrINS6_11ImageBitmapENSD_12RawPtrTraitsISF_EENSD_21DefaultRefDerefTraitsISF_EEEENSE_INS6_9ImageDataENSG_ISL_EENSI_ISL_EEEENSE_INS6_16HTMLImageElementENSG_ISP_EENSI_ISP_EEEENSE_INS6_17HTMLCanvasElementENSG_IST_EENSI_IST_EEEENSE_INS6_16HTMLVideoElementENSG_ISX_EENSI_ISX_EEEENSE_INS6_15OffscreenCanvasENSG_IS11_EENSI_IS11_EEEENSE_INS6_19WebCodecsVideoFrameENSG_IS15_EENSI_IS15_EEEEEEEE3__0EEJRNS0_6__implIJSK_SO_SS_SW_S10_S14_S18_EEEEEEDcOT_DpOT0____fmatrix[v26])(&v216, &v226, &v221);
          if (!v223)
            goto LABEL_70;
          goto LABEL_67;
        }
      }
    }
LABEL_421:
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_422:
    v47 = 0;
    goto LABEL_93;
  }
  v47 = 0;
LABEL_75:
  if (v22 != -1)
    ((void (*)(JSC::ArrayBufferView **, uint64_t *))off_1E333E4D8[v22])(&v231, &v228);
  return (_BYTE *)v47;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_compressedTexImage2D(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  JSC::VM *v14;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  JSC::VM *v18;
  uint64_t v19;
  unint64_t v20;
  JSC::VM *v21;
  int v22;
  unint64_t v23;
  JSC::VM *v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  JSC::ArrayBufferView *v28;
  uint64_t v29;
  unint64_t v31;
  uint64_t v32;
  unsigned int v33;
  unint64_t v34;
  int v35;
  int v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unsigned int v44;
  unint64_t v45;
  int v46;
  unint64_t v47;
  unsigned int v48;
  JSValue v50;
  unsigned int v51;
  WebCore::InspectorInstrumentation *v52;
  WebCore::ScriptExecutionContext *v53;
  uint64_t v54;
  WebCore::InspectorCanvasAgent *v55;
  WebCore::InspectorInstrumentation *v56;
  WebCore::ScriptExecutionContext *v57;
  uint64_t v58;
  WebCore::InspectorCanvasAgent *v59;
  unsigned int v60;
  WebCore::InspectorInstrumentation *v61;
  WebCore::ScriptExecutionContext *v62;
  uint64_t v63;
  WebCore::InspectorCanvasAgent *v64;
  WebCore::InspectorInstrumentation *v65;
  WebCore::ScriptExecutionContext *v66;
  uint64_t v67;
  WebCore::InspectorCanvasAgent *v68;
  WebCore::InspectorInstrumentation *v69;
  WebCore::ScriptExecutionContext *v70;
  uint64_t v71;
  WebCore::InspectorCanvasAgent *v72;
  WebCore::InspectorInstrumentation *v73;
  WebCore::ScriptExecutionContext *v74;
  uint64_t v75;
  WebCore::InspectorCanvasAgent *v76;
  WebCore::InspectorInstrumentation *v77;
  WebCore::ScriptExecutionContext *v78;
  uint64_t v79;
  uint64_t v80;
  WebCore::InspectorInstrumentation *v81;
  WebCore::ScriptExecutionContext *v82;
  uint64_t v83;
  uint64_t v84;
  _DWORD *v85;
  _DWORD *v86;
  _DWORD *v87;
  _DWORD *v88;
  _DWORD *v89;
  _DWORD *v90;
  WTF::StringImpl *v91;
  WTF::StringImpl *v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  JSC::VM *v96;
  unint64_t v97;
  WebCore *v98;
  JSC::JSGlobalObject *v99;
  JSC::CallFrame *v100;
  WebCore::CanvasRenderingContext *v101;
  unsigned int v102;
  unsigned int v103;
  JSC::VM *v104;
  _QWORD v105[2];
  WTF::StringImpl *v106;
  JSC::ArrayBufferView *v107;
  int v108;
  unsigned int v109[2];
  unsigned int v110[2];
  WTF::StringImpl *v111;
  int v112;
  char v113;
  _DWORD *v114;
  char v115;
  _DWORD *v116;
  char v117;
  _DWORD *v118;
  char v119;
  _DWORD *v120;
  char v121;
  _DWORD *v122;
  char v123;
  _DWORD *v124;
  char v125;
  uint64_t v126;

  v126 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v104 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v104, "WebGLRenderingContext", "compressedTexImage2D");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v104, "WebGLRenderingContext", "compressedTexImage2D");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 6)
  {
    v50.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v50);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v110);
  if (v110[1])
    return 0;
  v13 = *((_QWORD *)a2 + 7);
  v111 = (WTF::StringImpl *)v13;
  v14 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v13 < 0xFFFE000000000000)
  {
    v31 = v13 - 0x2000000000000;
    if (v13 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v111, this);
      v31 = v93;
    }
    v32 = (v31 >> 52) & 0x7FF;
    v33 = v32 - 1023;
    v34 = v31 >> (51 - (v31 >> 52));
    if (v32 > 0x433)
      LODWORD(v34) = v31 << ((v31 >> 52) - 51);
    if (v32 >= 0x41F)
      v35 = v34;
    else
      v35 = (((1 << ((v31 >> 52) + 1)) - 1) & v34) + (1 << ((v31 >> 52) + 1));
    if ((v31 & 0x8000000000000000) == 0)
      v36 = v35;
    else
      v36 = -v35;
    if (v33 <= 0x53)
      v15 = v36;
    else
      v15 = 0;
  }
  else
  {
    v15 = v13;
  }
  if (*((_DWORD *)v14 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v14))
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 8), v109);
  if (v109[1])
    return 0;
  v17 = *((_QWORD *)a2 + 9);
  v111 = (WTF::StringImpl *)v17;
  v18 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v17 < 0xFFFE000000000000)
  {
    v37 = v17 - 0x2000000000000;
    if (v17 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v111, this);
      v37 = v94;
    }
    v38 = (v37 >> 52) & 0x7FF;
    if ((v38 - 1023) <= 0x53)
    {
      v43 = v37 >> (51 - (v37 >> 52));
      if (v38 > 0x433)
        LODWORD(v43) = v37 << ((v37 >> 52) - 51);
      if (v38 >= 0x41F)
        v44 = v43;
      else
        v44 = (((1 << ((v37 >> 52) + 1)) - 1) & v43) + (1 << ((v37 >> 52) + 1));
      if ((v37 & 0x8000000000000000) == 0)
        v19 = v44;
      else
        v19 = -v44;
    }
    else
    {
      v19 = 0;
    }
  }
  else
  {
    v19 = v17;
  }
  if (*((_DWORD *)v18 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v18))
    return 0;
  v103 = v15;
  v20 = *((_QWORD *)a2 + 10);
  v111 = (WTF::StringImpl *)v20;
  v21 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v20 < 0xFFFE000000000000)
  {
    v39 = v20 - 0x2000000000000;
    if (v20 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v111, this);
      v39 = v95;
    }
    v40 = (v39 >> 52) & 0x7FF;
    if ((v40 - 1023) <= 0x53)
    {
      v45 = v39 >> (51 - (v39 >> 52));
      if (v40 > 0x433)
        LODWORD(v45) = v39 << ((v39 >> 52) - 51);
      if (v40 >= 0x41F)
        v46 = v45;
      else
        v46 = (((1 << ((v39 >> 52) + 1)) - 1) & v45) + (1 << ((v39 >> 52) + 1));
      if ((v39 & 0x8000000000000000) == 0)
        v22 = v46;
      else
        v22 = -v46;
    }
    else
    {
      v22 = 0;
    }
  }
  else
  {
    v22 = v20;
  }
  if (*((_DWORD *)v21 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v21))
    return 0;
  v102 = v22;
  v23 = *((_QWORD *)a2 + 11);
  v111 = (WTF::StringImpl *)v23;
  v24 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v23 < 0xFFFE000000000000)
  {
    v41 = v23 - 0x2000000000000;
    if (v23 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      v96 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v111, this);
      v24 = v96;
      v41 = v97;
    }
    v42 = (v41 >> 52) & 0x7FF;
    if ((v42 - 1023) <= 0x53)
    {
      v47 = v41 >> (51 - (v41 >> 52));
      if (v42 > 0x433)
        LODWORD(v47) = v41 << ((v41 >> 52) - 51);
      if (v42 >= 0x41F)
        v48 = v47;
      else
        v48 = (((1 << ((v41 >> 52) + 1)) - 1) & v47) + (1 << ((v41 >> 52) + 1));
      if ((v41 & 0x8000000000000000) == 0)
        v25 = v48;
      else
        v25 = -v48;
    }
    else
    {
      v25 = 0;
    }
  }
  else
  {
    v25 = v23;
  }
  if (*((_DWORD *)v24 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v24))
    return 0;
  v26 = *((_QWORD *)a2 + 12);
  v107 = (JSC::ArrayBufferView *)*((_QWORD *)this + 7);
  if ((v26 & 0xFFFE000000000002) != 0
    || *(unsigned __int8 *)(v26 + 5) - 39 > 0xB
    || (*(_BYTE *)(v26 + 40) & 6) != 0)
  {
    v105[0] = 0;
LABEL_31:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v107, 6, "data", 5, "WebGLRenderingContext", 22, v16, "compressedTexImage2D", 21, "ArrayBufferView", 16);
    v27 = 1;
    v112 = 1;
    v105[0] = 0;
    goto LABEL_34;
  }
  JSC::JSArrayBufferView::possiblySharedImpl((JSC::JSArrayBufferView *)v26);
  if (!v105[0])
    goto LABEL_31;
  v27 = 0;
  v111 = (WTF::StringImpl *)v105[0];
  v112 = 0;
LABEL_34:
  LOBYTE(v107) = 0;
  v108 = -1;
  ((void (*)(_QWORD *, JSC::ArrayBufferView **, WTF::StringImpl **))off_1E333E4F8[v27])(v105, &v107, &v111);
  v108 = v27;
  if (v112 != -1)
  {
    ((void (*)(_QWORD *, WTF::StringImpl **))off_1E333E4E8[v112])(v105, &v111);
    v27 = v108;
  }
  if (v27)
  {
    v29 = 0;
LABEL_42:
    if (v108 != -1)
      ((void (*)(WTF::StringImpl **, JSC::ArrayBufferView **))off_1E333E4E8[v108])(&v111, &v107);
    return (_BYTE *)v29;
  }
  if (*(_BYTE *)(v12 + 33))
  {
    v101 = (WebCore::CanvasRenderingContext *)(v12 + 8);
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v106 = v111;
    v51 = v110[0];
    v52 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v52
      && (v54 = WebCore::InspectorInstrumentation::instrumentingAgents(v52, v53)) != 0
      && (v55 = *(WebCore::InspectorCanvasAgent **)(v54 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v55, v101, v51, (uint64_t)&v111);
    }
    else
    {
      LOBYTE(v111) = 0;
      v113 = 0;
    }
    v56 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v56
      && (v58 = WebCore::InspectorInstrumentation::instrumentingAgents(v56, v57)) != 0
      && (v59 = *(WebCore::InspectorCanvasAgent **)(v58 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v59, v101, v103, (uint64_t)&v114);
    }
    else
    {
      LOBYTE(v114) = 0;
      v115 = 0;
    }
    v60 = v109[0];
    v61 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v61
      && (v63 = WebCore::InspectorInstrumentation::instrumentingAgents(v61, v62)) != 0
      && (v64 = *(WebCore::InspectorCanvasAgent **)(v63 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v64, v101, v60, (uint64_t)&v116);
    }
    else
    {
      LOBYTE(v116) = 0;
      v117 = 0;
    }
    v65 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v65
      && (v67 = WebCore::InspectorInstrumentation::instrumentingAgents(v65, v66)) != 0
      && (v68 = *(WebCore::InspectorCanvasAgent **)(v67 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v68, v101, v19, (uint64_t)&v118);
    }
    else
    {
      LOBYTE(v118) = 0;
      v119 = 0;
    }
    v69 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v69
      && (v71 = WebCore::InspectorInstrumentation::instrumentingAgents(v69, v70)) != 0
      && (v72 = *(WebCore::InspectorCanvasAgent **)(v71 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v72, v101, v102, (uint64_t)&v120);
    }
    else
    {
      LOBYTE(v120) = 0;
      v121 = 0;
    }
    v73 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v73
      && (v75 = WebCore::InspectorInstrumentation::instrumentingAgents(v73, v74)) != 0
      && (v76 = *(WebCore::InspectorCanvasAgent **)(v75 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v76, v101, v25, (uint64_t)&v122);
    }
    else
    {
      LOBYTE(v122) = 0;
      v123 = 0;
    }
    if (v108)
      goto LABEL_188;
    v77 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v77
      && (v79 = WebCore::InspectorInstrumentation::instrumentingAgents(v77, v78)) != 0
      && (v80 = *(_QWORD *)(v79 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v80, (uint64_t)v101, (uint64_t)&v124);
    }
    else
    {
      LOBYTE(v124) = 0;
      v125 = 0;
    }
    v105[0] = &v111;
    v105[1] = 7;
    v81 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v81)
    {
      v83 = WebCore::InspectorInstrumentation::instrumentingAgents(v81, v82);
      if (v83)
      {
        v84 = *(_QWORD *)(v83 + 96);
        if (v84)
          WebCore::InspectorCanvasAgent::recordAction(v84, v101, (const WTF::StringImpl *)&v106, v105);
      }
    }
    if (v125)
    {
      v85 = v124;
      v124 = 0;
      if (v85)
      {
        if (*v85 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v85;
      }
    }
    if (v123)
    {
      v86 = v122;
      v122 = 0;
      if (v86)
      {
        if (*v86 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v86;
      }
    }
    if (v121)
    {
      v87 = v120;
      v120 = 0;
      if (v87)
      {
        if (*v87 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v87;
      }
    }
    if (v119)
    {
      v88 = v118;
      v118 = 0;
      if (v88)
      {
        if (*v88 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v88;
      }
    }
    if (v117)
    {
      v89 = v116;
      v116 = 0;
      if (v89)
      {
        if (*v89 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v89;
      }
    }
    if (v115)
    {
      v90 = v114;
      v114 = 0;
      if (v90)
      {
        if (*v90 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v90;
      }
    }
    if (v113)
    {
      v91 = v111;
      v111 = 0;
      if (v91)
      {
        if (*(_DWORD *)v91 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*(_DWORD *)v91;
      }
    }
    v92 = v106;
    v106 = 0;
    if (v92)
    {
      if (*(_DWORD *)v92 == 2)
        WTF::StringImpl::destroy(v92, v82);
      else
        *(_DWORD *)v92 -= 2;
    }
  }
  if (!v108)
  {
    v28 = v107;
    v107 = 0;
    WebCore::WebGLRenderingContextBase::compressedTexImage2D((WTF::StringImpl *)v12, v110[0], v103, v109[0], v19, v102, v25, v28);
    if (*(_DWORD *)v28 == 1)
      JSC::ArrayBufferView::operator delete();
    else
      --*(_DWORD *)v28;
    v29 = 10;
    goto LABEL_42;
  }
LABEL_188:
  v98 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsWebGLRenderingContextPrototypeFunction_compressedTexSubImage2D(v98, v99, v100);
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_compressedTexSubImage2D(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  unint64_t v12;
  JSC::VM *v13;
  unsigned int v14;
  unint64_t v15;
  JSC::VM *v16;
  int v17;
  unint64_t v18;
  JSC::VM *v19;
  uint64_t v20;
  unint64_t v21;
  JSC::VM *v22;
  int v23;
  unint64_t v24;
  JSC::VM *v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  WTF::StringImpl *v29;
  JSC::ArrayBufferView *v30;
  uint64_t v31;
  unint64_t v33;
  uint64_t v34;
  unsigned int v35;
  unint64_t v36;
  int v37;
  int v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  unint64_t v49;
  unsigned int v50;
  unint64_t v51;
  int v52;
  unint64_t v53;
  int v54;
  int v55;
  JSValue v57;
  unsigned int v58;
  WebCore::InspectorInstrumentation *v59;
  WebCore::ScriptExecutionContext *v60;
  uint64_t v61;
  WebCore::InspectorCanvasAgent *v62;
  WebCore::InspectorInstrumentation *v63;
  WebCore::ScriptExecutionContext *v64;
  uint64_t v65;
  WebCore::InspectorCanvasAgent *v66;
  WebCore::InspectorInstrumentation *v67;
  WebCore::ScriptExecutionContext *v68;
  uint64_t v69;
  WebCore::InspectorCanvasAgent *v70;
  WebCore::InspectorInstrumentation *v71;
  WebCore::ScriptExecutionContext *v72;
  uint64_t v73;
  WebCore::InspectorCanvasAgent *v74;
  WebCore::InspectorInstrumentation *v75;
  WebCore::ScriptExecutionContext *v76;
  uint64_t v77;
  WebCore::InspectorCanvasAgent *v78;
  WebCore::InspectorInstrumentation *v79;
  WebCore::ScriptExecutionContext *v80;
  uint64_t v81;
  WebCore::InspectorCanvasAgent *v82;
  unsigned int v83;
  WebCore::InspectorInstrumentation *v84;
  WebCore::ScriptExecutionContext *v85;
  uint64_t v86;
  WebCore::InspectorCanvasAgent *v87;
  WebCore::InspectorInstrumentation *v88;
  WebCore::ScriptExecutionContext *v89;
  uint64_t v90;
  uint64_t v91;
  WebCore::InspectorInstrumentation *v92;
  WebCore::ScriptExecutionContext *v93;
  uint64_t v94;
  uint64_t v95;
  _DWORD *v96;
  _DWORD *v97;
  _DWORD *v98;
  _DWORD *v99;
  _DWORD *v100;
  _DWORD *v101;
  _DWORD *v102;
  WTF::StringImpl *v103;
  WTF::StringImpl *v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  WebCore *v110;
  JSC::JSGlobalObject *v111;
  JSC::CallFrame *v112;
  WebCore::CanvasRenderingContext *v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  WebCore::WebGLRenderingContextBase *v118;
  JSC::VM *v119;
  _QWORD v120[2];
  WTF::StringImpl *v121;
  JSC::ArrayBufferView *v122;
  int v123;
  unsigned int v124[2];
  unsigned int v125[2];
  WTF::StringImpl *v126;
  int v127;
  char v128;
  _DWORD *v129;
  char v130;
  _DWORD *v131;
  char v132;
  _DWORD *v133;
  char v134;
  _DWORD *v135;
  char v136;
  _DWORD *v137;
  char v138;
  _DWORD *v139;
  char v140;
  _DWORD *v141;
  char v142;
  uint64_t v143;

  v143 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v119 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v119, "WebGLRenderingContext", "compressedTexSubImage2D");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v119, "WebGLRenderingContext", "compressedTexSubImage2D");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 7)
  {
    v57.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v57);
  }
  v118 = *(WebCore::WebGLRenderingContextBase **)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v125);
  if (v125[1])
    return 0;
  v12 = *((_QWORD *)a2 + 7);
  v126 = (WTF::StringImpl *)v12;
  v13 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v12 < 0xFFFE000000000000)
  {
    v33 = v12 - 0x2000000000000;
    if (v12 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v126, this);
      v33 = v105;
    }
    v34 = (v33 >> 52) & 0x7FF;
    v35 = v34 - 1023;
    v36 = v33 >> (51 - (v33 >> 52));
    if (v34 > 0x433)
      LODWORD(v36) = v33 << ((v33 >> 52) - 51);
    if (v34 >= 0x41F)
      v37 = v36;
    else
      v37 = (((1 << ((v33 >> 52) + 1)) - 1) & v36) + (1 << ((v33 >> 52) + 1));
    if ((v33 & 0x8000000000000000) == 0)
      v38 = v37;
    else
      v38 = -v37;
    if (v35 <= 0x53)
      v14 = v38;
    else
      v14 = 0;
  }
  else
  {
    v14 = v12;
  }
  if (*((_DWORD *)v13 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v13))
    return 0;
  v15 = *((_QWORD *)a2 + 8);
  v126 = (WTF::StringImpl *)v15;
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v15 < 0xFFFE000000000000)
  {
    v39 = v15 - 0x2000000000000;
    if (v15 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v126, this);
      v39 = v106;
    }
    v40 = (v39 >> 52) & 0x7FF;
    if ((v40 - 1023) <= 0x53)
    {
      v47 = v39 >> (51 - (v39 >> 52));
      if (v40 > 0x433)
        LODWORD(v47) = v39 << ((v39 >> 52) - 51);
      if (v40 >= 0x41F)
        v48 = v47;
      else
        v48 = (((1 << ((v39 >> 52) + 1)) - 1) & v47) + (1 << ((v39 >> 52) + 1));
      if ((v39 & 0x8000000000000000) == 0)
        v17 = v48;
      else
        v17 = -v48;
    }
    else
    {
      v17 = 0;
    }
  }
  else
  {
    v17 = v15;
  }
  if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
    return 0;
  v117 = v17;
  v18 = *((_QWORD *)a2 + 9);
  v126 = (WTF::StringImpl *)v18;
  v19 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v18 < 0xFFFE000000000000)
  {
    v41 = v18 - 0x2000000000000;
    if (v18 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v126, this);
      v41 = v107;
    }
    v42 = (v41 >> 52) & 0x7FF;
    if ((v42 - 1023) <= 0x53)
    {
      v49 = v41 >> (51 - (v41 >> 52));
      if (v42 > 0x433)
        LODWORD(v49) = v41 << ((v41 >> 52) - 51);
      if (v42 >= 0x41F)
        v50 = v49;
      else
        v50 = (((1 << ((v41 >> 52) + 1)) - 1) & v49) + (1 << ((v41 >> 52) + 1));
      if ((v41 & 0x8000000000000000) == 0)
        v20 = v50;
      else
        v20 = -v50;
    }
    else
    {
      v20 = 0;
    }
  }
  else
  {
    v20 = v18;
  }
  if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
    return 0;
  v116 = v14;
  v21 = *((_QWORD *)a2 + 10);
  v126 = (WTF::StringImpl *)v21;
  v22 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v21 < 0xFFFE000000000000)
  {
    v43 = v21 - 0x2000000000000;
    if (v21 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v126, this);
      v43 = v108;
    }
    v44 = (v43 >> 52) & 0x7FF;
    if ((v44 - 1023) <= 0x53)
    {
      v51 = v43 >> (51 - (v43 >> 52));
      if (v44 > 0x433)
        LODWORD(v51) = v43 << ((v43 >> 52) - 51);
      if (v44 >= 0x41F)
        v52 = v51;
      else
        v52 = (((1 << ((v43 >> 52) + 1)) - 1) & v51) + (1 << ((v43 >> 52) + 1));
      if ((v43 & 0x8000000000000000) == 0)
        v23 = v52;
      else
        v23 = -v52;
    }
    else
    {
      v23 = 0;
    }
  }
  else
  {
    v23 = v21;
  }
  if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
    return 0;
  v114 = v23;
  v24 = *((_QWORD *)a2 + 11);
  v126 = (WTF::StringImpl *)v24;
  v25 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v24 < 0xFFFE000000000000)
  {
    v45 = v24 - 0x2000000000000;
    if (v24 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v126, this);
      v45 = v109;
    }
    v46 = (v45 >> 52) & 0x7FF;
    if ((v46 - 1023) <= 0x53)
    {
      v53 = v45 >> (51 - (v45 >> 52));
      if (v46 > 0x433)
        LODWORD(v53) = v45 << ((v45 >> 52) - 51);
      if (v46 >= 0x41F)
        v54 = v53;
      else
        v54 = (((1 << ((v45 >> 52) + 1)) - 1) & v53) + (1 << ((v45 >> 52) + 1));
      if ((v45 & 0x8000000000000000) == 0)
        v55 = v54;
      else
        v55 = -v54;
      v115 = v55;
    }
    else
    {
      v115 = 0;
    }
  }
  else
  {
    v115 = v24;
  }
  if (*((_DWORD *)v25 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v25))
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 12), v124);
  if (v124[1])
    return 0;
  v27 = *((_QWORD *)a2 + 13);
  v122 = (JSC::ArrayBufferView *)*((_QWORD *)this + 7);
  if ((v27 & 0xFFFE000000000002) != 0
    || *(unsigned __int8 *)(v27 + 5) - 39 > 0xB
    || (*(_BYTE *)(v27 + 40) & 6) != 0)
  {
    v120[0] = 0;
LABEL_34:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v122, 7, "data", 5, "WebGLRenderingContext", 22, v26, "compressedTexSubImage2D", 24, "ArrayBufferView", 16);
    v28 = 1;
    v127 = 1;
    v120[0] = 0;
    goto LABEL_37;
  }
  JSC::JSArrayBufferView::possiblySharedImpl((JSC::JSArrayBufferView *)v27);
  if (!v120[0])
    goto LABEL_34;
  v28 = 0;
  v126 = (WTF::StringImpl *)v120[0];
  v127 = 0;
LABEL_37:
  LOBYTE(v122) = 0;
  v123 = -1;
  ((void (*)(_QWORD *, JSC::ArrayBufferView **, WTF::StringImpl **))off_1E333E4F8[v28])(v120, &v122, &v126);
  v123 = v28;
  if (v127 != -1)
  {
    ((void (*)(_QWORD *, WTF::StringImpl **))off_1E333E4E8[v127])(v120, &v126);
    v28 = v123;
  }
  if (v28)
  {
    v31 = 0;
LABEL_45:
    if (v123 != -1)
      ((void (*)(WTF::StringImpl **, JSC::ArrayBufferView **))off_1E333E4E8[v123])(&v126, &v122);
    return (_BYTE *)v31;
  }
  v29 = v118;
  if (*((_BYTE *)v118 + 33))
  {
    v113 = (WebCore::WebGLRenderingContextBase *)((char *)v118 + 8);
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v121 = v126;
    v58 = v125[0];
    v59 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v118 + 5) + 144))(*((_QWORD *)v118 + 5));
    if (v59
      && (v61 = WebCore::InspectorInstrumentation::instrumentingAgents(v59, v60)) != 0
      && (v62 = *(WebCore::InspectorCanvasAgent **)(v61 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v62, v113, v58, (uint64_t)&v126);
    }
    else
    {
      LOBYTE(v126) = 0;
      v128 = 0;
    }
    v63 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v118 + 5) + 144))(*((_QWORD *)v118 + 5));
    if (v63
      && (v65 = WebCore::InspectorInstrumentation::instrumentingAgents(v63, v64)) != 0
      && (v66 = *(WebCore::InspectorCanvasAgent **)(v65 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v66, v113, v116, (uint64_t)&v129);
    }
    else
    {
      LOBYTE(v129) = 0;
      v130 = 0;
    }
    v67 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v118 + 5) + 144))(*((_QWORD *)v118 + 5));
    if (v67
      && (v69 = WebCore::InspectorInstrumentation::instrumentingAgents(v67, v68)) != 0
      && (v70 = *(WebCore::InspectorCanvasAgent **)(v69 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v70, v113, v117, (uint64_t)&v131);
    }
    else
    {
      LOBYTE(v131) = 0;
      v132 = 0;
    }
    v71 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v118 + 5) + 144))(*((_QWORD *)v118 + 5));
    if (v71
      && (v73 = WebCore::InspectorInstrumentation::instrumentingAgents(v71, v72)) != 0
      && (v74 = *(WebCore::InspectorCanvasAgent **)(v73 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v74, v113, v20, (uint64_t)&v133);
    }
    else
    {
      LOBYTE(v133) = 0;
      v134 = 0;
    }
    v75 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v118 + 5) + 144))(*((_QWORD *)v118 + 5));
    if (v75
      && (v77 = WebCore::InspectorInstrumentation::instrumentingAgents(v75, v76)) != 0
      && (v78 = *(WebCore::InspectorCanvasAgent **)(v77 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v78, v113, v114, (uint64_t)&v135);
    }
    else
    {
      LOBYTE(v135) = 0;
      v136 = 0;
    }
    v79 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v118 + 5) + 144))(*((_QWORD *)v118 + 5));
    if (v79
      && (v81 = WebCore::InspectorInstrumentation::instrumentingAgents(v79, v80)) != 0
      && (v82 = *(WebCore::InspectorCanvasAgent **)(v81 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v82, v113, v115, (uint64_t)&v137);
    }
    else
    {
      LOBYTE(v137) = 0;
      v138 = 0;
    }
    v83 = v124[0];
    v84 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v118 + 5) + 144))(*((_QWORD *)v118 + 5));
    if (v84
      && (v86 = WebCore::InspectorInstrumentation::instrumentingAgents(v84, v85)) != 0
      && (v87 = *(WebCore::InspectorCanvasAgent **)(v86 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v87, v113, v83, (uint64_t)&v139);
    }
    else
    {
      LOBYTE(v139) = 0;
      v140 = 0;
    }
    if (v123)
      goto LABEL_217;
    v88 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v118 + 5) + 144))(*((_QWORD *)v118 + 5));
    if (v88
      && (v90 = WebCore::InspectorInstrumentation::instrumentingAgents(v88, v89)) != 0
      && (v91 = *(_QWORD *)(v90 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v91, (uint64_t)v113, (uint64_t)&v141);
    }
    else
    {
      LOBYTE(v141) = 0;
      v142 = 0;
    }
    v120[0] = &v126;
    v120[1] = 8;
    v92 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v118 + 5) + 144))(*((_QWORD *)v118 + 5));
    if (v92)
    {
      v94 = WebCore::InspectorInstrumentation::instrumentingAgents(v92, v93);
      if (v94)
      {
        v95 = *(_QWORD *)(v94 + 96);
        if (v95)
          WebCore::InspectorCanvasAgent::recordAction(v95, v113, (const WTF::StringImpl *)&v121, v120);
      }
    }
    if (v142)
    {
      v96 = v141;
      v141 = 0;
      if (v96)
      {
        if (*v96 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v96;
      }
    }
    if (v140)
    {
      v97 = v139;
      v139 = 0;
      if (v97)
      {
        if (*v97 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v97;
      }
    }
    if (v138)
    {
      v98 = v137;
      v137 = 0;
      if (v98)
      {
        if (*v98 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v98;
      }
    }
    if (v136)
    {
      v99 = v135;
      v135 = 0;
      if (v99)
      {
        if (*v99 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v99;
      }
    }
    if (v134)
    {
      v100 = v133;
      v133 = 0;
      if (v100)
      {
        if (*v100 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v100;
      }
    }
    if (v132)
    {
      v101 = v131;
      v131 = 0;
      if (v101)
      {
        if (*v101 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v101;
      }
    }
    if (v130)
    {
      v102 = v129;
      v129 = 0;
      if (v102)
      {
        if (*v102 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v102;
      }
    }
    if (v128)
    {
      v103 = v126;
      v126 = 0;
      if (v103)
      {
        if (*(_DWORD *)v103 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*(_DWORD *)v103;
      }
    }
    v104 = v121;
    v121 = 0;
    if (v104)
    {
      if (*(_DWORD *)v104 == 2)
        WTF::StringImpl::destroy(v104, v93);
      else
        *(_DWORD *)v104 -= 2;
    }
    v29 = v118;
  }
  if (!v123)
  {
    v30 = v122;
    v122 = 0;
    WebCore::WebGLRenderingContextBase::compressedTexSubImage2D(v29, v125[0], v116, v117, v20, v114, v115, v124[0], v30);
    if (*(_DWORD *)v30 == 1)
      JSC::ArrayBufferView::operator delete();
    else
      --*(_DWORD *)v30;
    v31 = 10;
    goto LABEL_45;
  }
LABEL_217:
  v110 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsWebGLRenderingContextPrototypeFunction_copyTexImage2D(v110, v111, v112);
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_copyTexImage2D(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  unint64_t v12;
  JSC::VM *v13;
  unsigned int v14;
  unint64_t v15;
  JSC::VM *v16;
  uint64_t v17;
  unint64_t v18;
  JSC::VM *v19;
  uint64_t v20;
  unint64_t v21;
  JSC::VM *v22;
  uint64_t v23;
  unint64_t v24;
  JSC::VM *v25;
  uint64_t v26;
  unint64_t v27;
  JSC::VM *v28;
  int v29;
  WTF::StringImpl *v30;
  unint64_t v32;
  uint64_t v33;
  unsigned int v34;
  unint64_t v35;
  int v36;
  int v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unsigned int v49;
  unint64_t v50;
  unsigned int v51;
  unint64_t v52;
  unsigned int v53;
  unint64_t v54;
  unsigned int v55;
  unint64_t v56;
  int v57;
  JSValue v58;
  JSC::VM *v59;
  uint64_t v60;
  int v61;
  JSC::VM *v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  JSC::VM *v66;
  uint64_t v67;
  uint64_t v68;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v70;
  uint64_t v71;
  int v72;
  JSC::VM *v73;
  uint64_t v74;
  int v75;
  unsigned int v76;
  WebCore::InspectorInstrumentation *v77;
  WebCore::ScriptExecutionContext *v78;
  uint64_t v79;
  WebCore::InspectorCanvasAgent *v80;
  WebCore::InspectorInstrumentation *v81;
  WebCore::ScriptExecutionContext *v82;
  uint64_t v83;
  WebCore::InspectorCanvasAgent *v84;
  unsigned int v85;
  WebCore::InspectorInstrumentation *v86;
  WebCore::ScriptExecutionContext *v87;
  uint64_t v88;
  WebCore::InspectorCanvasAgent *v89;
  WebCore::InspectorInstrumentation *v90;
  WebCore::ScriptExecutionContext *v91;
  uint64_t v92;
  WebCore::InspectorCanvasAgent *v93;
  WebCore::InspectorInstrumentation *v94;
  WebCore::ScriptExecutionContext *v95;
  uint64_t v96;
  WebCore::InspectorCanvasAgent *v97;
  WebCore::InspectorInstrumentation *v98;
  WebCore::ScriptExecutionContext *v99;
  uint64_t v100;
  WebCore::InspectorCanvasAgent *v101;
  WebCore::InspectorInstrumentation *v102;
  WebCore::ScriptExecutionContext *v103;
  uint64_t v104;
  WebCore::InspectorCanvasAgent *v105;
  WebCore::InspectorInstrumentation *v106;
  WebCore::ScriptExecutionContext *v107;
  uint64_t v108;
  WebCore::InspectorCanvasAgent *v109;
  WebCore::InspectorInstrumentation *v110;
  WebCore::ScriptExecutionContext *v111;
  uint64_t v112;
  uint64_t v113;
  _DWORD *v114;
  _DWORD *v115;
  _DWORD *v116;
  _DWORD *v117;
  _DWORD *v118;
  _DWORD *v119;
  _DWORD *v120;
  _DWORD *v121;
  WTF::StringImpl *v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  JSC::JSGlobalObject *v130;
  uint64_t v131;
  unint64_t v132;
  unsigned int v133;
  unsigned int v134;
  WebCore::CanvasRenderingContext *v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  WebCore::WebGLRenderingContextBase *v149;
  JSC::VM *v150;
  _QWORD v151[2];
  WTF::StringImpl *v152;
  unsigned int v153[2];
  unsigned int v154[2];
  _QWORD v155[2];
  char v156;
  _DWORD *v157;
  char v158;
  _DWORD *v159;
  char v160;
  _DWORD *v161;
  char v162;
  _DWORD *v163;
  char v164;
  _DWORD *v165;
  char v166;
  _DWORD *v167;
  char v168;
  _DWORD *v169;
  char v170;
  uint64_t v171;

  v171 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v150 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v150, "WebGLRenderingContext", "copyTexImage2D");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v150, "WebGLRenderingContext", "copyTexImage2D");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 7)
  {
    v58.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v58);
  }
  else
  {
    v149 = *(WebCore::WebGLRenderingContextBase **)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v154);
    if (v154[1])
    {
      return 0;
    }
    else
    {
      v12 = *((_QWORD *)a2 + 7);
      v155[0] = v12;
      v13 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v12 < 0xFFFE000000000000)
      {
        v32 = v12 - 0x2000000000000;
        if (v12 - 0x2000000000000 >= 0xFFFC000000000000)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v155, this);
          v32 = v123;
        }
        v33 = (v32 >> 52) & 0x7FF;
        v34 = v33 - 1023;
        v35 = v32 >> (51 - (v32 >> 52));
        if (v33 > 0x433)
          LODWORD(v35) = v32 << ((v32 >> 52) - 51);
        if (v33 >= 0x41F)
          v36 = v35;
        else
          v36 = (((1 << ((v32 >> 52) + 1)) - 1) & v35) + (1 << ((v32 >> 52) + 1));
        if ((v32 & 0x8000000000000000) == 0)
          v37 = v36;
        else
          v37 = -v36;
        if (v34 <= 0x53)
          v14 = v37;
        else
          v14 = 0;
      }
      else
      {
        v14 = v12;
      }
      if (*((_DWORD *)v13 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v13))
      {
        return 0;
      }
      else
      {
        WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 8), v153);
        if (v153[1])
        {
          return 0;
        }
        else
        {
          v15 = *((_QWORD *)a2 + 9);
          v155[0] = v15;
          v16 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v15 < 0xFFFE000000000000)
          {
            v38 = v15 - 0x2000000000000;
            if (v15 - 0x2000000000000 >= 0xFFFC000000000000)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v155, this);
              v38 = v124;
            }
            v39 = (v38 >> 52) & 0x7FF;
            if ((v39 - 1023) <= 0x53)
            {
              v48 = v38 >> (51 - (v38 >> 52));
              if (v39 > 0x433)
                LODWORD(v48) = v38 << ((v38 >> 52) - 51);
              if (v39 >= 0x41F)
                v49 = v48;
              else
                v49 = (((1 << ((v38 >> 52) + 1)) - 1) & v48) + (1 << ((v38 >> 52) + 1));
              if ((v38 & 0x8000000000000000) == 0)
                v17 = v49;
              else
                v17 = -v49;
            }
            else
            {
              v17 = 0;
            }
          }
          else
          {
            v17 = v15;
          }
          if (*((_DWORD *)v16 + 20)
            && (v59 = v16, v60 = v17, v61 = JSC::VM::hasExceptionsAfterHandlingTraps(v59), v17 = v60, v61))
          {
            return 0;
          }
          else
          {
            v18 = *((_QWORD *)a2 + 10);
            v155[0] = v18;
            v19 = (JSC::VM *)*((_QWORD *)this + 7);
            if (v18 < 0xFFFE000000000000)
            {
              v40 = v18 - 0x2000000000000;
              if (v18 - 0x2000000000000 >= 0xFFFC000000000000)
              {
                v125 = v17;
                JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v155, this);
                v17 = v125;
                v40 = v126;
              }
              v41 = (v40 >> 52) & 0x7FF;
              if ((v41 - 1023) <= 0x53)
              {
                v50 = v40 >> (51 - (v40 >> 52));
                if (v41 > 0x433)
                  LODWORD(v50) = v40 << ((v40 >> 52) - 51);
                if (v41 >= 0x41F)
                  v51 = v50;
                else
                  v51 = (((1 << ((v40 >> 52) + 1)) - 1) & v50) + (1 << ((v40 >> 52) + 1));
                if ((v40 & 0x8000000000000000) == 0)
                  v20 = v51;
                else
                  v20 = -v51;
              }
              else
              {
                v20 = 0;
              }
            }
            else
            {
              v20 = v18;
            }
            if (*((_DWORD *)v19 + 20)
              && (v62 = v19,
                  v63 = v17,
                  v64 = v20,
                  v65 = JSC::VM::hasExceptionsAfterHandlingTraps(v62),
                  v20 = v64,
                  v17 = v63,
                  v65))
            {
              return 0;
            }
            else
            {
              v21 = *((_QWORD *)a2 + 11);
              v155[0] = v21;
              v22 = (JSC::VM *)*((_QWORD *)this + 7);
              if (v21 < 0xFFFE000000000000)
              {
                v42 = v21 - 0x2000000000000;
                if (v21 - 0x2000000000000 >= 0xFFFC000000000000)
                {
                  v139 = v17;
                  v134 = v20;
                  JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v155, this);
                  v20 = v134;
                  v17 = v139;
                  v42 = v127;
                }
                v43 = (v42 >> 52) & 0x7FF;
                if ((v43 - 1023) <= 0x53)
                {
                  v52 = v42 >> (51 - (v42 >> 52));
                  if (v43 > 0x433)
                    LODWORD(v52) = v42 << ((v42 >> 52) - 51);
                  if (v43 >= 0x41F)
                    v53 = v52;
                  else
                    v53 = (((1 << ((v42 >> 52) + 1)) - 1) & v52) + (1 << ((v42 >> 52) + 1));
                  if ((v42 & 0x8000000000000000) == 0)
                    v23 = v53;
                  else
                    v23 = -v53;
                }
                else
                {
                  v23 = 0;
                }
              }
              else
              {
                v23 = v21;
              }
              if (!*((_DWORD *)v22 + 20))
                goto LABEL_27;
              v66 = v22;
              v67 = v17;
              v68 = v20;
              v142 = v23;
              hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v66);
              v23 = v142;
              v20 = v68;
              v17 = v67;
              if (hasExceptionsAfterHandlingTraps)
              {
                return 0;
              }
              else
              {
LABEL_27:
                v148 = v14;
                v24 = *((_QWORD *)a2 + 12);
                v155[0] = v24;
                v25 = (JSC::VM *)*((_QWORD *)this + 7);
                if (v24 < 0xFFFE000000000000)
                {
                  v44 = v24 - 0x2000000000000;
                  if (v24 - 0x2000000000000 >= 0xFFFC000000000000)
                  {
                    v140 = v17;
                    v146 = v23;
                    v128 = v20;
                    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v155, this);
                    v17 = v140;
                    v23 = v146;
                    v20 = v128;
                    v44 = v129;
                  }
                  v45 = (v44 >> 52) & 0x7FF;
                  if ((v45 - 1023) <= 0x53)
                  {
                    v54 = v44 >> (51 - (v44 >> 52));
                    if (v45 > 0x433)
                      LODWORD(v54) = v44 << ((v44 >> 52) - 51);
                    if (v45 >= 0x41F)
                      v55 = v54;
                    else
                      v55 = (((1 << ((v44 >> 52) + 1)) - 1) & v54) + (1 << ((v44 >> 52) + 1));
                    if ((v44 & 0x8000000000000000) == 0)
                      v26 = v55;
                    else
                      v26 = -v55;
                  }
                  else
                  {
                    v26 = 0;
                  }
                }
                else
                {
                  v26 = v24;
                }
                if (!*((_DWORD *)v25 + 20))
                  goto LABEL_30;
                v70 = v25;
                v136 = v17;
                v143 = v23;
                v71 = v20;
                v72 = JSC::VM::hasExceptionsAfterHandlingTraps(v70);
                v17 = v136;
                v23 = v143;
                v20 = v71;
                if (v72)
                {
                  return 0;
                }
                else
                {
LABEL_30:
                  v27 = *((_QWORD *)a2 + 13);
                  v155[0] = v27;
                  v28 = (JSC::VM *)*((_QWORD *)this + 7);
                  if (v27 < 0xFFFE000000000000)
                  {
                    v46 = v27 - 0x2000000000000;
                    if (v27 - 0x2000000000000 >= 0xFFFC000000000000)
                    {
                      v130 = this;
                      v141 = v17;
                      v147 = v23;
                      v131 = v20;
                      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v155, v130);
                      v17 = v141;
                      v23 = v147;
                      v20 = v131;
                      v46 = v132;
                    }
                    v47 = (v46 >> 52) & 0x7FF;
                    if ((v47 - 1023) <= 0x53)
                    {
                      v56 = v46 >> (51 - (v46 >> 52));
                      if (v47 > 0x433)
                        LODWORD(v56) = v46 << ((v46 >> 52) - 51);
                      if (v47 >= 0x41F)
                        v57 = v56;
                      else
                        v57 = (((1 << ((v46 >> 52) + 1)) - 1) & v56) + (1 << ((v46 >> 52) + 1));
                      if ((v46 & 0x8000000000000000) == 0)
                        v29 = v57;
                      else
                        v29 = -v57;
                    }
                    else
                    {
                      v29 = 0;
                    }
                  }
                  else
                  {
                    v29 = v27;
                  }
                  if (!*((_DWORD *)v28 + 20))
                    goto LABEL_33;
                  v73 = v28;
                  v137 = v17;
                  v144 = v23;
                  v74 = v20;
                  v75 = JSC::VM::hasExceptionsAfterHandlingTraps(v73);
                  v17 = v137;
                  v23 = v144;
                  v20 = v74;
                  if (v75)
                  {
                    return 0;
                  }
                  else
                  {
LABEL_33:
                    v30 = v149;
                    if (*((_BYTE *)v149 + 33))
                    {
                      v138 = v17;
                      v145 = v23;
                      v133 = v20;
                      v135 = (WebCore::WebGLRenderingContextBase *)((char *)v149 + 8);
                      WTF::StringImpl::createWithoutCopyingNonEmpty();
                      v152 = (WTF::StringImpl *)v155[0];
                      v76 = v154[0];
                      v77 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v149 + 5) + 144))(*((_QWORD *)v149 + 5));
                      if (v77
                        && (v79 = WebCore::InspectorInstrumentation::instrumentingAgents(v77, v78)) != 0
                        && (v80 = *(WebCore::InspectorCanvasAgent **)(v79 + 96)) != 0)
                      {
                        WebCore::InspectorCanvasAgent::processArgument(v80, v135, v76, (uint64_t)v155);
                      }
                      else
                      {
                        LOBYTE(v155[0]) = 0;
                        v156 = 0;
                      }
                      v81 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v149 + 5) + 144))(*((_QWORD *)v149 + 5));
                      if (v81
                        && (v83 = WebCore::InspectorInstrumentation::instrumentingAgents(v81, v82)) != 0
                        && (v84 = *(WebCore::InspectorCanvasAgent **)(v83 + 96)) != 0)
                      {
                        WebCore::InspectorCanvasAgent::processArgument(v84, v135, v148, (uint64_t)&v157);
                      }
                      else
                      {
                        LOBYTE(v157) = 0;
                        v158 = 0;
                      }
                      v85 = v153[0];
                      v86 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v149 + 5) + 144))(*((_QWORD *)v149 + 5));
                      if (v86
                        && (v88 = WebCore::InspectorInstrumentation::instrumentingAgents(v86, v87)) != 0
                        && (v89 = *(WebCore::InspectorCanvasAgent **)(v88 + 96)) != 0)
                      {
                        WebCore::InspectorCanvasAgent::processArgument(v89, v135, v85, (uint64_t)&v159);
                      }
                      else
                      {
                        LOBYTE(v159) = 0;
                        v160 = 0;
                      }
                      v30 = v149;
                      v90 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v149 + 5) + 144))(*((_QWORD *)v149 + 5));
                      if (v90
                        && (v92 = WebCore::InspectorInstrumentation::instrumentingAgents(v90, v91)) != 0
                        && (v93 = *(WebCore::InspectorCanvasAgent **)(v92 + 96)) != 0)
                      {
                        WebCore::InspectorCanvasAgent::processArgument(v93, v135, v138, (uint64_t)&v161);
                      }
                      else
                      {
                        LOBYTE(v161) = 0;
                        v162 = 0;
                      }
                      v94 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v149 + 5) + 144))(*((_QWORD *)v149 + 5));
                      if (v94
                        && (v96 = WebCore::InspectorInstrumentation::instrumentingAgents(v94, v95)) != 0
                        && (v97 = *(WebCore::InspectorCanvasAgent **)(v96 + 96)) != 0)
                      {
                        WebCore::InspectorCanvasAgent::processArgument(v97, v135, v133, (uint64_t)&v163);
                      }
                      else
                      {
                        LOBYTE(v163) = 0;
                        v164 = 0;
                      }
                      v98 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v149 + 5) + 144))(*((_QWORD *)v149 + 5));
                      if (v98
                        && (v100 = WebCore::InspectorInstrumentation::instrumentingAgents(v98, v99)) != 0
                        && (v101 = *(WebCore::InspectorCanvasAgent **)(v100 + 96)) != 0)
                      {
                        WebCore::InspectorCanvasAgent::processArgument(v101, v135, v145, (uint64_t)&v165);
                      }
                      else
                      {
                        LOBYTE(v165) = 0;
                        v166 = 0;
                      }
                      v102 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v149 + 5) + 144))(*((_QWORD *)v149 + 5));
                      if (v102
                        && (v104 = WebCore::InspectorInstrumentation::instrumentingAgents(v102, v103)) != 0
                        && (v105 = *(WebCore::InspectorCanvasAgent **)(v104 + 96)) != 0)
                      {
                        WebCore::InspectorCanvasAgent::processArgument(v105, v135, v26, (uint64_t)&v167);
                      }
                      else
                      {
                        LOBYTE(v167) = 0;
                        v168 = 0;
                      }
                      v106 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v149 + 5) + 144))(*((_QWORD *)v149 + 5));
                      if (v106
                        && (v108 = WebCore::InspectorInstrumentation::instrumentingAgents(v106, v107)) != 0
                        && (v109 = *(WebCore::InspectorCanvasAgent **)(v108 + 96)) != 0)
                      {
                        WebCore::InspectorCanvasAgent::processArgument(v109, v135, v29, (uint64_t)&v169);
                      }
                      else
                      {
                        LOBYTE(v169) = 0;
                        v170 = 0;
                      }
                      v151[0] = v155;
                      v151[1] = 8;
                      v110 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v149 + 5) + 144))(*((_QWORD *)v149 + 5));
                      if (v110)
                      {
                        v112 = WebCore::InspectorInstrumentation::instrumentingAgents(v110, v111);
                        if (v112)
                        {
                          v113 = *(_QWORD *)(v112 + 96);
                          if (v113)
                            WebCore::InspectorCanvasAgent::recordAction(v113, v135, (const WTF::StringImpl *)&v152, v151);
                        }
                      }
                      v17 = v138;
                      v23 = v145;
                      v20 = v133;
                      if (v170)
                      {
                        v114 = v169;
                        v169 = 0;
                        if (v114)
                        {
                          if (*v114 == 1)
                          {
                            WTF::JSONImpl::Value::operator delete();
                            v17 = v138;
                            v23 = v145;
                            v20 = v133;
                          }
                          else
                          {
                            --*v114;
                          }
                        }
                      }
                      if (v168)
                      {
                        v115 = v167;
                        v167 = 0;
                        if (v115)
                        {
                          if (*v115 == 1)
                          {
                            WTF::JSONImpl::Value::operator delete();
                            v17 = v138;
                            v23 = v145;
                            v20 = v133;
                          }
                          else
                          {
                            --*v115;
                          }
                        }
                      }
                      if (v166)
                      {
                        v116 = v165;
                        v165 = 0;
                        if (v116)
                        {
                          if (*v116 == 1)
                          {
                            WTF::JSONImpl::Value::operator delete();
                            v17 = v138;
                            v23 = v145;
                            v20 = v133;
                          }
                          else
                          {
                            --*v116;
                          }
                        }
                      }
                      if (v164)
                      {
                        v117 = v163;
                        v163 = 0;
                        if (v117)
                        {
                          if (*v117 == 1)
                          {
                            WTF::JSONImpl::Value::operator delete();
                            v17 = v138;
                            v23 = v145;
                            v20 = v133;
                          }
                          else
                          {
                            --*v117;
                          }
                        }
                      }
                      if (v162)
                      {
                        v118 = v161;
                        v161 = 0;
                        if (v118)
                        {
                          if (*v118 == 1)
                          {
                            WTF::JSONImpl::Value::operator delete();
                            v17 = v138;
                            v23 = v145;
                            v20 = v133;
                          }
                          else
                          {
                            --*v118;
                          }
                        }
                      }
                      if (v160)
                      {
                        v119 = v159;
                        v159 = 0;
                        if (v119)
                        {
                          if (*v119 == 1)
                          {
                            WTF::JSONImpl::Value::operator delete();
                            v17 = v138;
                            v23 = v145;
                            v20 = v133;
                          }
                          else
                          {
                            --*v119;
                          }
                        }
                      }
                      if (v158)
                      {
                        v120 = v157;
                        v157 = 0;
                        if (v120)
                        {
                          if (*v120 == 1)
                          {
                            WTF::JSONImpl::Value::operator delete();
                            v17 = v138;
                            v23 = v145;
                            v20 = v133;
                          }
                          else
                          {
                            --*v120;
                          }
                        }
                      }
                      if (v156)
                      {
                        v121 = (_DWORD *)v155[0];
                        v155[0] = 0;
                        if (v121)
                        {
                          if (*v121 == 1)
                          {
                            WTF::JSONImpl::Value::operator delete();
                            v17 = v138;
                            v23 = v145;
                            v20 = v133;
                          }
                          else
                          {
                            --*v121;
                          }
                        }
                      }
                      v122 = v152;
                      v152 = 0;
                      if (v122)
                      {
                        if (*(_DWORD *)v122 == 2)
                        {
                          WTF::StringImpl::destroy(v122, v111);
                          v17 = v138;
                          v23 = v145;
                          v20 = v133;
                        }
                        else
                        {
                          *(_DWORD *)v122 -= 2;
                        }
                      }
                    }
                    WebCore::WebGLRenderingContextBase::copyTexImage2D(v30, v154[0], v148, v153[0], v17, v20, v23, v26, v29);
                    return 10;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_copyTexSubImage2D(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  unint64_t v12;
  JSC::VM *v13;
  unint64_t v14;
  unint64_t v15;
  JSC::VM *v16;
  unint64_t v17;
  unint64_t v18;
  JSC::VM *v19;
  unint64_t v20;
  unint64_t v21;
  JSC::VM *v22;
  unint64_t v23;
  unint64_t v24;
  JSC::VM *v25;
  unint64_t v26;
  unint64_t v27;
  JSC::VM *v28;
  unint64_t v29;
  unint64_t v30;
  JSC::VM *v31;
  int v32;
  WTF::StringImpl *v33;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  __n128 v41;
  unint64_t v42;
  uint64_t v43;
  unsigned int v44;
  unint64_t v45;
  unsigned int v46;
  unsigned int v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unsigned int v61;
  unint64_t v62;
  unsigned int v63;
  unint64_t v64;
  unsigned int v65;
  unint64_t v66;
  unsigned int v67;
  unint64_t v68;
  unsigned int v69;
  unint64_t v70;
  int v71;
  JSValue v72;
  unint64_t v73;
  int v74;
  unint64_t v75;
  int v76;
  unint64_t v77;
  int v78;
  unint64_t v79;
  int v80;
  unint64_t v81;
  int v82;
  unint64_t v83;
  int v84;
  JSC::VM *v85;
  unint64_t v86;
  unint64_t v87;
  int hasExceptionsAfterHandlingTraps;
  unint64_t v89;
  WebCore::CanvasRenderingContext *v90;
  unsigned int v91;
  WebCore::InspectorInstrumentation *v92;
  WebCore::ScriptExecutionContext *v93;
  uint64_t v94;
  WebCore::InspectorCanvasAgent *v95;
  WebCore::InspectorInstrumentation *v96;
  WebCore::ScriptExecutionContext *v97;
  uint64_t v98;
  WebCore::InspectorCanvasAgent *v99;
  WebCore::InspectorInstrumentation *v100;
  WebCore::ScriptExecutionContext *v101;
  uint64_t v102;
  WebCore::InspectorCanvasAgent *v103;
  WebCore::InspectorInstrumentation *v104;
  WebCore::ScriptExecutionContext *v105;
  uint64_t v106;
  WebCore::InspectorCanvasAgent *v107;
  WebCore::InspectorInstrumentation *v108;
  WebCore::ScriptExecutionContext *v109;
  uint64_t v110;
  WebCore::InspectorCanvasAgent *v111;
  WebCore::InspectorInstrumentation *v112;
  WebCore::ScriptExecutionContext *v113;
  uint64_t v114;
  WebCore::InspectorCanvasAgent *v115;
  WebCore::InspectorInstrumentation *v116;
  WebCore::ScriptExecutionContext *v117;
  uint64_t v118;
  WebCore::InspectorCanvasAgent *v119;
  WebCore::InspectorInstrumentation *v120;
  WebCore::ScriptExecutionContext *v121;
  uint64_t v122;
  WebCore::InspectorCanvasAgent *v123;
  WebCore::InspectorInstrumentation *v124;
  WebCore::ScriptExecutionContext *v125;
  uint64_t v126;
  uint64_t v127;
  _DWORD *v128;
  _DWORD *v129;
  _DWORD *v130;
  _DWORD *v131;
  _DWORD *v132;
  _DWORD *v133;
  _DWORD *v134;
  _DWORD *v135;
  WTF::StringImpl *v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  JSC::JSGlobalObject *v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  uint64_t v156;
  JSC::VM *v157;
  _QWORD v158[2];
  WTF::StringImpl *v159;
  int v160[2];
  _QWORD v161[2];
  char v162;
  _DWORD *v163;
  char v164;
  _DWORD *v165;
  char v166;
  _DWORD *v167;
  char v168;
  _DWORD *v169;
  char v170;
  _DWORD *v171;
  char v172;
  _DWORD *v173;
  char v174;
  _DWORD *v175;
  char v176;
  uint64_t v177;

  v177 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v157 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v157, "WebGLRenderingContext", "copyTexSubImage2D");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v157, "WebGLRenderingContext", "copyTexSubImage2D");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 7)
  {
    v72.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v72);
  }
  else
  {
    v156 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v160);
    if (v160[1])
    {
      return 0;
    }
    else
    {
      v12 = *((_QWORD *)a2 + 7);
      v161[0] = v12;
      v13 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v12 < 0xFFFE000000000000)
      {
        v42 = v12 - 0x2000000000000;
        if (v12 - 0x2000000000000 >= 0xFFFC000000000000)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v161, this);
          v42 = v137;
        }
        v43 = (v42 >> 52) & 0x7FF;
        v44 = v43 - 1023;
        v45 = v42 >> (51 - (v42 >> 52));
        if (v43 > 0x433)
          LODWORD(v45) = v42 << ((v42 >> 52) - 51);
        if (v43 >= 0x41F)
          v46 = v45;
        else
          v46 = (((1 << ((v42 >> 52) + 1)) - 1) & v45) + (1 << ((v42 >> 52) + 1));
        if ((v42 & 0x8000000000000000) == 0)
          v47 = v46;
        else
          v47 = -v46;
        if (v44 <= 0x53)
          v14 = v47;
        else
          v14 = 0;
      }
      else
      {
        v14 = v12;
      }
      if (*((_DWORD *)v13 + 20) && (v73 = v14, v74 = JSC::VM::hasExceptionsAfterHandlingTraps(v13), v14 = v73, v74))
      {
        return 0;
      }
      else
      {
        v15 = *((_QWORD *)a2 + 8);
        v161[0] = v15;
        v16 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v15 < 0xFFFE000000000000)
        {
          v48 = v15 - 0x2000000000000;
          if (v15 - 0x2000000000000 >= 0xFFFC000000000000)
          {
            v138 = v14;
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v161, this);
            v14 = v138;
            v48 = v139;
          }
          v49 = (v48 >> 52) & 0x7FF;
          if ((v49 - 1023) <= 0x53)
          {
            v60 = v48 >> (51 - (v48 >> 52));
            if (v49 > 0x433)
              LODWORD(v60) = v48 << ((v48 >> 52) - 51);
            if (v49 >= 0x41F)
              v61 = v60;
            else
              v61 = (((1 << ((v48 >> 52) + 1)) - 1) & v60) + (1 << ((v48 >> 52) + 1));
            if ((v48 & 0x8000000000000000) == 0)
              v17 = v61;
            else
              v17 = -v61;
          }
          else
          {
            v17 = 0;
          }
        }
        else
        {
          v17 = v15;
        }
        if (*((_DWORD *)v16 + 20) && (v75 = v14, v76 = JSC::VM::hasExceptionsAfterHandlingTraps(v16), v14 = v75, v76))
        {
          return 0;
        }
        else
        {
          v18 = *((_QWORD *)a2 + 9);
          v161[0] = v18;
          v19 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v18 < 0xFFFE000000000000)
          {
            v50 = v18 - 0x2000000000000;
            if (v18 - 0x2000000000000 >= 0xFFFC000000000000)
            {
              v140 = v14;
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v161, this);
              v14 = v140;
              v50 = v141;
            }
            v51 = (v50 >> 52) & 0x7FF;
            if ((v51 - 1023) <= 0x53)
            {
              v62 = v50 >> (51 - (v50 >> 52));
              if (v51 > 0x433)
                LODWORD(v62) = v50 << ((v50 >> 52) - 51);
              if (v51 >= 0x41F)
                v63 = v62;
              else
                v63 = (((1 << ((v50 >> 52) + 1)) - 1) & v62) + (1 << ((v50 >> 52) + 1));
              if ((v50 & 0x8000000000000000) == 0)
                v20 = v63;
              else
                v20 = -v63;
            }
            else
            {
              v20 = 0;
            }
          }
          else
          {
            v20 = v18;
          }
          if (*((_DWORD *)v19 + 20) && (v77 = v14, v78 = JSC::VM::hasExceptionsAfterHandlingTraps(v19), v14 = v77, v78))
          {
            return 0;
          }
          else
          {
            v21 = *((_QWORD *)a2 + 10);
            v161[0] = v21;
            v22 = (JSC::VM *)*((_QWORD *)this + 7);
            if (v21 < 0xFFFE000000000000)
            {
              v52 = v21 - 0x2000000000000;
              if (v21 - 0x2000000000000 >= 0xFFFC000000000000)
              {
                v142 = v14;
                JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v161, this);
                v14 = v142;
                v52 = v143;
              }
              v53 = (v52 >> 52) & 0x7FF;
              if ((v53 - 1023) <= 0x53)
              {
                v64 = v52 >> (51 - (v52 >> 52));
                if (v53 > 0x433)
                  LODWORD(v64) = v52 << ((v52 >> 52) - 51);
                if (v53 >= 0x41F)
                  v65 = v64;
                else
                  v65 = (((1 << ((v52 >> 52) + 1)) - 1) & v64) + (1 << ((v52 >> 52) + 1));
                if ((v52 & 0x8000000000000000) == 0)
                  v23 = v65;
                else
                  v23 = -v65;
              }
              else
              {
                v23 = 0;
              }
            }
            else
            {
              v23 = v21;
            }
            if (*((_DWORD *)v22 + 20)
              && (v79 = v14, v80 = JSC::VM::hasExceptionsAfterHandlingTraps(v22), v14 = v79, v80))
            {
              return 0;
            }
            else
            {
              v24 = *((_QWORD *)a2 + 11);
              v161[0] = v24;
              v25 = (JSC::VM *)*((_QWORD *)this + 7);
              if (v24 < 0xFFFE000000000000)
              {
                v54 = v24 - 0x2000000000000;
                if (v24 - 0x2000000000000 >= 0xFFFC000000000000)
                {
                  v144 = v14;
                  JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v161, this);
                  v14 = v144;
                  v54 = v145;
                }
                v55 = (v54 >> 52) & 0x7FF;
                if ((v55 - 1023) <= 0x53)
                {
                  v66 = v54 >> (51 - (v54 >> 52));
                  if (v55 > 0x433)
                    LODWORD(v66) = v54 << ((v54 >> 52) - 51);
                  if (v55 >= 0x41F)
                    v67 = v66;
                  else
                    v67 = (((1 << ((v54 >> 52) + 1)) - 1) & v66) + (1 << ((v54 >> 52) + 1));
                  if ((v54 & 0x8000000000000000) == 0)
                    v26 = v67;
                  else
                    v26 = -v67;
                }
                else
                {
                  v26 = 0;
                }
              }
              else
              {
                v26 = v24;
              }
              if (*((_DWORD *)v25 + 20)
                && (v81 = v14, v82 = JSC::VM::hasExceptionsAfterHandlingTraps(v25), v14 = v81, v82))
              {
                return 0;
              }
              else
              {
                v27 = *((_QWORD *)a2 + 12);
                v161[0] = v27;
                v28 = (JSC::VM *)*((_QWORD *)this + 7);
                if (v27 < 0xFFFE000000000000)
                {
                  v56 = v27 - 0x2000000000000;
                  if (v27 - 0x2000000000000 >= 0xFFFC000000000000)
                  {
                    v154 = v14;
                    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v161, this);
                    v20 = v20;
                    v14 = v154;
                    v56 = v146;
                  }
                  v57 = (v56 >> 52) & 0x7FF;
                  if ((v57 - 1023) <= 0x53)
                  {
                    v68 = v56 >> (51 - (v56 >> 52));
                    if (v57 > 0x433)
                      LODWORD(v68) = v56 << ((v56 >> 52) - 51);
                    if (v57 >= 0x41F)
                      v69 = v68;
                    else
                      v69 = (((1 << ((v56 >> 52) + 1)) - 1) & v68) + (1 << ((v56 >> 52) + 1));
                    if ((v56 & 0x8000000000000000) == 0)
                      v29 = v69;
                    else
                      v29 = -v69;
                  }
                  else
                  {
                    v29 = 0;
                  }
                }
                else
                {
                  v29 = v27;
                }
                if (*((_DWORD *)v28 + 20)
                  && (v152 = v14,
                      v83 = v29,
                      v84 = JSC::VM::hasExceptionsAfterHandlingTraps(v28),
                      v29 = v83,
                      v14 = v152,
                      v84))
                {
                  return 0;
                }
                else
                {
                  v30 = *((_QWORD *)a2 + 13);
                  v161[0] = v30;
                  v31 = (JSC::VM *)*((_QWORD *)this + 7);
                  if (v30 < 0xFFFE000000000000)
                  {
                    v58 = v30 - 0x2000000000000;
                    if (v30 - 0x2000000000000 >= 0xFFFC000000000000)
                    {
                      v147 = this;
                      v148 = v14;
                      v149 = v29;
                      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v161, v147);
                      v29 = v149;
                      v14 = v148;
                      v58 = v150;
                    }
                    v59 = (v58 >> 52) & 0x7FF;
                    if ((v59 - 1023) <= 0x53)
                    {
                      v70 = v58 >> (51 - (v58 >> 52));
                      if (v59 > 0x433)
                        LODWORD(v70) = v58 << ((v58 >> 52) - 51);
                      if (v59 >= 0x41F)
                        v71 = v70;
                      else
                        v71 = (((1 << ((v58 >> 52) + 1)) - 1) & v70) + (1 << ((v58 >> 52) + 1));
                      if ((v58 & 0x8000000000000000) == 0)
                        v32 = v71;
                      else
                        v32 = -v71;
                    }
                    else
                    {
                      v32 = 0;
                    }
                  }
                  else
                  {
                    v32 = v30;
                  }
                  if (!*((_DWORD *)v31 + 20))
                    goto LABEL_35;
                  v85 = v31;
                  v86 = v14;
                  v155 = v32;
                  v87 = v29;
                  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v85);
                  v29 = v87;
                  v32 = v155;
                  v14 = v86;
                  if (hasExceptionsAfterHandlingTraps)
                  {
                    return 0;
                  }
                  else
                  {
LABEL_35:
                    v33 = (WTF::StringImpl *)v156;
                    if (*(_BYTE *)(v156 + 33))
                    {
                      v89 = v29;
                      v151 = v20;
                      v153 = v14;
                      v90 = (WebCore::CanvasRenderingContext *)(v156 + 8);
                      WTF::StringImpl::createWithoutCopyingNonEmpty();
                      v159 = (WTF::StringImpl *)v161[0];
                      v91 = v160[0];
                      v92 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v156 + 40) + 144))(*(_QWORD *)(v156 + 40));
                      if (v92
                        && (v94 = WebCore::InspectorInstrumentation::instrumentingAgents(v92, v93)) != 0
                        && (v95 = *(WebCore::InspectorCanvasAgent **)(v94 + 96)) != 0)
                      {
                        WebCore::InspectorCanvasAgent::processArgument(v95, v90, v91, (uint64_t)v161);
                      }
                      else
                      {
                        LOBYTE(v161[0]) = 0;
                        v162 = 0;
                      }
                      v96 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v156 + 40) + 144))(*(_QWORD *)(v156 + 40));
                      if (v96
                        && (v98 = WebCore::InspectorInstrumentation::instrumentingAgents(v96, v97)) != 0
                        && (v99 = *(WebCore::InspectorCanvasAgent **)(v98 + 96)) != 0)
                      {
                        WebCore::InspectorCanvasAgent::processArgument(v99, v90, v153, (uint64_t)&v163);
                      }
                      else
                      {
                        LOBYTE(v163) = 0;
                        v164 = 0;
                      }
                      v100 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v156 + 40) + 144))(*(_QWORD *)(v156 + 40));
                      if (v100
                        && (v102 = WebCore::InspectorInstrumentation::instrumentingAgents(v100, v101)) != 0
                        && (v103 = *(WebCore::InspectorCanvasAgent **)(v102 + 96)) != 0)
                      {
                        WebCore::InspectorCanvasAgent::processArgument(v103, v90, v17, (uint64_t)&v165);
                      }
                      else
                      {
                        LOBYTE(v165) = 0;
                        v166 = 0;
                      }
                      v104 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v156 + 40) + 144))(*(_QWORD *)(v156 + 40));
                      if (v104
                        && (v106 = WebCore::InspectorInstrumentation::instrumentingAgents(v104, v105)) != 0
                        && (v107 = *(WebCore::InspectorCanvasAgent **)(v106 + 96)) != 0)
                      {
                        WebCore::InspectorCanvasAgent::processArgument(v107, v90, v151, (uint64_t)&v167);
                      }
                      else
                      {
                        LOBYTE(v167) = 0;
                        v168 = 0;
                      }
                      v108 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v156 + 40) + 144))(*(_QWORD *)(v156 + 40));
                      if (v108
                        && (v110 = WebCore::InspectorInstrumentation::instrumentingAgents(v108, v109)) != 0
                        && (v111 = *(WebCore::InspectorCanvasAgent **)(v110 + 96)) != 0)
                      {
                        WebCore::InspectorCanvasAgent::processArgument(v111, v90, v23, (uint64_t)&v169);
                      }
                      else
                      {
                        LOBYTE(v169) = 0;
                        v170 = 0;
                      }
                      v112 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v156 + 40) + 144))(*(_QWORD *)(v156 + 40));
                      if (v112
                        && (v114 = WebCore::InspectorInstrumentation::instrumentingAgents(v112, v113)) != 0
                        && (v115 = *(WebCore::InspectorCanvasAgent **)(v114 + 96)) != 0)
                      {
                        WebCore::InspectorCanvasAgent::processArgument(v115, v90, v26, (uint64_t)&v171);
                      }
                      else
                      {
                        LOBYTE(v171) = 0;
                        v172 = 0;
                      }
                      v116 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v156 + 40) + 144))(*(_QWORD *)(v156 + 40));
                      if (v116
                        && (v118 = WebCore::InspectorInstrumentation::instrumentingAgents(v116, v117)) != 0
                        && (v119 = *(WebCore::InspectorCanvasAgent **)(v118 + 96)) != 0)
                      {
                        WebCore::InspectorCanvasAgent::processArgument(v119, v90, v89, (uint64_t)&v173);
                      }
                      else
                      {
                        LOBYTE(v173) = 0;
                        v174 = 0;
                      }
                      v120 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v156 + 40) + 144))(*(_QWORD *)(v156 + 40));
                      if (v120
                        && (v122 = WebCore::InspectorInstrumentation::instrumentingAgents(v120, v121)) != 0
                        && (v123 = *(WebCore::InspectorCanvasAgent **)(v122 + 96)) != 0)
                      {
                        WebCore::InspectorCanvasAgent::processArgument(v123, v90, v32, (uint64_t)&v175);
                      }
                      else
                      {
                        LOBYTE(v175) = 0;
                        v176 = 0;
                      }
                      v158[0] = v161;
                      v158[1] = 8;
                      v124 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v156 + 40) + 144))(*(_QWORD *)(v156 + 40));
                      if (v124)
                      {
                        v126 = WebCore::InspectorInstrumentation::instrumentingAgents(v124, v125);
                        if (v126)
                        {
                          v127 = *(_QWORD *)(v126 + 96);
                          if (v127)
                            WebCore::InspectorCanvasAgent::recordAction(v127, v90, (const WTF::StringImpl *)&v159, v158);
                        }
                      }
                      v14 = v153;
                      v23 = v23;
                      v20 = v151;
                      v26 = v26;
                      v29 = v89;
                      if (v176)
                      {
                        v128 = v175;
                        v175 = 0;
                        if (v128)
                        {
                          if (*v128 == 1)
                          {
                            WTF::JSONImpl::Value::operator delete();
                            v29 = v89;
                            v26 = v26;
                            v23 = v23;
                            v20 = v151;
                            v14 = v153;
                          }
                          else
                          {
                            --*v128;
                          }
                        }
                      }
                      if (v174)
                      {
                        v129 = v173;
                        v173 = 0;
                        if (v129)
                        {
                          if (*v129 == 1)
                          {
                            WTF::JSONImpl::Value::operator delete();
                            v29 = v89;
                            v26 = v26;
                            v23 = v23;
                            v20 = v151;
                            v14 = v153;
                          }
                          else
                          {
                            --*v129;
                          }
                        }
                      }
                      if (v172)
                      {
                        v130 = v171;
                        v171 = 0;
                        if (v130)
                        {
                          if (*v130 == 1)
                          {
                            WTF::JSONImpl::Value::operator delete();
                            v29 = v89;
                            v26 = v26;
                            v23 = v23;
                            v20 = v151;
                            v14 = v153;
                          }
                          else
                          {
                            --*v130;
                          }
                        }
                      }
                      if (v170)
                      {
                        v131 = v169;
                        v169 = 0;
                        if (v131)
                        {
                          if (*v131 == 1)
                          {
                            WTF::JSONImpl::Value::operator delete();
                            v29 = v89;
                            v26 = v26;
                            v23 = v23;
                            v20 = v151;
                            v14 = v153;
                          }
                          else
                          {
                            --*v131;
                          }
                        }
                      }
                      if (v168)
                      {
                        v132 = v167;
                        v167 = 0;
                        if (v132)
                        {
                          if (*v132 == 1)
                          {
                            WTF::JSONImpl::Value::operator delete();
                            v29 = v89;
                            v26 = v26;
                            v23 = v23;
                            v20 = v151;
                            v14 = v153;
                          }
                          else
                          {
                            --*v132;
                          }
                        }
                      }
                      if (v166)
                      {
                        v133 = v165;
                        v165 = 0;
                        if (v133)
                        {
                          if (*v133 == 1)
                          {
                            WTF::JSONImpl::Value::operator delete();
                            v29 = v89;
                            v26 = v26;
                            v23 = v23;
                            v20 = v151;
                            v14 = v153;
                          }
                          else
                          {
                            --*v133;
                          }
                        }
                      }
                      if (v164)
                      {
                        v134 = v163;
                        v163 = 0;
                        if (v134)
                        {
                          if (*v134 == 1)
                          {
                            WTF::JSONImpl::Value::operator delete();
                            v29 = v89;
                            v26 = v26;
                            v23 = v23;
                            v20 = v151;
                            v14 = v153;
                          }
                          else
                          {
                            --*v134;
                          }
                        }
                      }
                      if (v162)
                      {
                        v135 = (_DWORD *)v161[0];
                        v161[0] = 0;
                        if (v135)
                        {
                          if (*v135 == 1)
                          {
                            WTF::JSONImpl::Value::operator delete();
                            v29 = v89;
                            v26 = v26;
                            v23 = v23;
                            v20 = v151;
                            v14 = v153;
                          }
                          else
                          {
                            --*v135;
                          }
                        }
                      }
                      v136 = v159;
                      v159 = 0;
                      if (v136)
                      {
                        if (*(_DWORD *)v136 == 2)
                        {
                          WTF::StringImpl::destroy(v136, v125);
                          v29 = v89;
                          v26 = v26;
                          v23 = v23;
                          v20 = v151;
                          v14 = v153;
                        }
                        else
                        {
                          *(_DWORD *)v136 -= 2;
                        }
                      }
                      v33 = (WTF::StringImpl *)v156;
                    }
                    if (*((_BYTE *)v33 + 364))
                    {
                      return 10;
                    }
                    else
                    {
                      v35 = v29;
                      v36 = v14;
                      v37 = v160[0];
                      WebCore::WebGLRenderingContextBase::validateTexture2DBinding(v33, (uint64_t)"copyTexSubImage2D", 18, v160[0], v161);
                      if (v161[0])
                      {
                        if (*(_DWORD *)(v161[0] + 8) == 1)
                          (*(void (**)(void))(*(_QWORD *)v161[0] + 8))();
                        else
                          --*(_DWORD *)(v161[0] + 8);
                        WebCore::WebGLRenderingContextBase::clearIfComposited(v156, 1, 0, v38, v39, v40, v41);
                        (*(void (**)(_QWORD, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, int))(**(_QWORD **)(v156 + 88) + 184))(*(_QWORD *)(v156 + 88), v37, v36, v17, v20, v23, v26, v35, v32);
                      }
                      return 10;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

unint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_createBuffer(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  WebCore::InspectorInstrumentation *v16;
  uint64_t v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  unsigned int *v21[2];
  WTF::StringImpl *v22;

  v4 = *((_QWORD *)a2 + 5);
  v20 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "WebGLRenderingContext", "createBuffer");
  v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v6 = *(unsigned int *)(v5 + 0x4C);
  v7 = *(_DWORD *)(v5 + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "WebGLRenderingContext", "createBuffer");
  v11 = *(_QWORD *)(v4 + 24);
  if (*(_BYTE *)(v11 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v21[0] = 0;
    v21[1] = 0;
    v16 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
    if (v16)
    {
      v17 = WebCore::InspectorInstrumentation::instrumentingAgents(v16, a2);
      if (v17)
      {
        v18 = *(_QWORD *)(v17 + 96);
        if (v18)
          WebCore::InspectorCanvasAgent::recordAction(v18, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v22, v21);
      }
    }
    v19 = v22;
    v22 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, a2);
      else
        *(_DWORD *)v19 -= 2;
    }
    v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  }
  if (*(_BYTE *)(v11 + 364))
    return 2;
  v13 = *(_QWORD *)(v5 + 40);
  WebCore::WebGLBuffer::create((WebCore::WebGLBuffer *)v11, a2, v21);
  v14 = v21[0];
  if (!v21[0])
    return 2;
  v12 = WebCore::wrap<WebCore::WebGLBuffer>((uint64_t)this, v13, (WTF *)v21[0]);
  if (v14[2] == 1)
    (*(void (**)(unsigned int *))(*(_QWORD *)v14 + 8))(v14);
  else
    --v14[2];
  return v12;
}

unint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_createFramebuffer(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  WebCore::InspectorInstrumentation *v16;
  uint64_t v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  unsigned int *v21[2];
  WTF::StringImpl *v22;

  v4 = *((_QWORD *)a2 + 5);
  v20 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "WebGLRenderingContext", "createFramebuffer");
  v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v6 = *(unsigned int *)(v5 + 0x4C);
  v7 = *(_DWORD *)(v5 + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "WebGLRenderingContext", "createFramebuffer");
  v11 = *(_QWORD *)(v4 + 24);
  if (*(_BYTE *)(v11 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v21[0] = 0;
    v21[1] = 0;
    v16 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
    if (v16)
    {
      v17 = WebCore::InspectorInstrumentation::instrumentingAgents(v16, a2);
      if (v17)
      {
        v18 = *(_QWORD *)(v17 + 96);
        if (v18)
          WebCore::InspectorCanvasAgent::recordAction(v18, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v22, v21);
      }
    }
    v19 = v22;
    v22 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, a2);
      else
        *(_DWORD *)v19 -= 2;
    }
    v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  }
  if (*(_BYTE *)(v11 + 364))
    return 2;
  v13 = *(_QWORD *)(v5 + 40);
  WebCore::WebGLFramebuffer::create((WebCore::WebGLFramebuffer *)v11, a2, v21);
  v14 = v21[0];
  if (!v21[0])
    return 2;
  v12 = WebCore::wrap<WebCore::WebGLFramebuffer>((uint64_t)this, v13, (WTF *)v21[0]);
  if (v14[2] == 1)
    (*(void (**)(unsigned int *))(*(_QWORD *)v14 + 8))(v14);
  else
    --v14[2];
  return v12;
}

unint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_createProgram(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  WebCore::WebGLProgram *v13;
  unint64_t v14;
  WebCore::InspectorInstrumentation *v16;
  WebCore::ScriptExecutionContext *v17;
  uint64_t v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WebCore::WebGLProgram *v22[2];
  WTF::StringImpl *v23;

  v4 = *((_QWORD *)a2 + 5);
  v21 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v21, "WebGLRenderingContext", "createProgram");
  v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v6 = *(unsigned int *)(v5 + 0x4C);
  v7 = *(_DWORD *)(v5 + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v21, "WebGLRenderingContext", "createProgram");
  v11 = *(_QWORD *)(v4 + 24);
  if (*(_BYTE *)(v11 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v22[0] = 0;
    v22[1] = 0;
    v16 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
    if (v16)
    {
      v18 = WebCore::InspectorInstrumentation::instrumentingAgents(v16, v17);
      if (v18)
      {
        v19 = *(_QWORD *)(v18 + 96);
        if (v19)
          WebCore::InspectorCanvasAgent::recordAction(v19, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v23, v22);
      }
    }
    v20 = v23;
    v23 = 0;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
        WTF::StringImpl::destroy(v20, v17);
      else
        *(_DWORD *)v20 -= 2;
    }
    v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  }
  v12 = *(_QWORD *)(v5 + 40);
  WebCore::WebGLRenderingContextBase::createProgram(v11, v22);
  v13 = v22[0];
  if (!v22[0])
    return 2;
  v14 = WebCore::wrap<WebCore::WebGLProgram>((uint64_t)this, v12, v22[0]);
  if (*((_DWORD *)v13 + 2) == 1)
    (*(void (**)(WebCore::WebGLProgram *))(*(_QWORD *)v13 + 8))(v13);
  else
    --*((_DWORD *)v13 + 2);
  return v14;
}

unint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_createRenderbuffer(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  WTF *v13;
  unint64_t v14;
  WebCore::InspectorInstrumentation *v16;
  WebCore::ScriptExecutionContext *v17;
  uint64_t v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF *v22[2];
  WTF::StringImpl *v23;

  v4 = *((_QWORD *)a2 + 5);
  v21 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v21, "WebGLRenderingContext", "createRenderbuffer");
  v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v6 = *(unsigned int *)(v5 + 0x4C);
  v7 = *(_DWORD *)(v5 + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v21, "WebGLRenderingContext", "createRenderbuffer");
  v11 = *(_QWORD *)(v4 + 24);
  if (*(_BYTE *)(v11 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v22[0] = 0;
    v22[1] = 0;
    v16 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
    if (v16)
    {
      v18 = WebCore::InspectorInstrumentation::instrumentingAgents(v16, v17);
      if (v18)
      {
        v19 = *(_QWORD *)(v18 + 96);
        if (v19)
          WebCore::InspectorCanvasAgent::recordAction(v19, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v23, v22);
      }
    }
    v20 = v23;
    v23 = 0;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
        WTF::StringImpl::destroy(v20, v17);
      else
        *(_DWORD *)v20 -= 2;
    }
    v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  }
  v12 = *(_QWORD *)(v5 + 40);
  WebCore::WebGLRenderingContextBase::createRenderbuffer(v11, (uint64_t *)v22);
  v13 = v22[0];
  if (!v22[0])
    return 2;
  v14 = WebCore::wrap<WebCore::WebGLRenderbuffer>((uint64_t)this, v12, v22[0]);
  if (*((_DWORD *)v13 + 2) == 1)
    (*(void (**)(WTF *))(*(_QWORD *)v13 + 8))(v13);
  else
    --*((_DWORD *)v13 + 2);
  return v14;
}

unint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_createShader(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  WTF *v14;
  unint64_t v15;
  JSValue v18;
  WebCore::InspectorInstrumentation *v19;
  WebCore::ScriptExecutionContext *v20;
  uint64_t v21;
  WebCore::InspectorCanvasAgent *v22;
  WebCore::InspectorInstrumentation *v23;
  WebCore::ScriptExecutionContext *v24;
  uint64_t v25;
  uint64_t v26;
  WTF *v27;
  WTF::StringImpl *v28;
  JSC::VM *v29;
  _QWORD v30[2];
  WTF::StringImpl *v31;
  unsigned int v32[2];
  WTF *v33[2];
  char v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v29 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v29, "WebGLRenderingContext", "createShader");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v29, "WebGLRenderingContext", "createShader");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v18);
  }
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v32);
  if (v32[1])
    return 0;
  if (*(_BYTE *)(v11 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v13 = v32[0];
    v19 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
    if (v19
      && (v21 = WebCore::InspectorInstrumentation::instrumentingAgents(v19, v20)) != 0
      && (v22 = *(WebCore::InspectorCanvasAgent **)(v21 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v22, (WebCore::CanvasRenderingContext *)(v11 + 8), v13, (uint64_t)v33);
    }
    else
    {
      LOBYTE(v33[0]) = 0;
      v34 = 0;
    }
    v30[0] = v33;
    v30[1] = 1;
    v23 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
    if (v23)
    {
      v25 = WebCore::InspectorInstrumentation::instrumentingAgents(v23, v24);
      if (v25)
      {
        v26 = *(_QWORD *)(v25 + 96);
        if (v26)
          WebCore::InspectorCanvasAgent::recordAction(v26, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v31, v30);
      }
    }
    if (v34)
    {
      v27 = v33[0];
      v33[0] = 0;
      if (v27)
      {
        if (*(_DWORD *)v27 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*(_DWORD *)v27;
      }
    }
    v28 = v31;
    v31 = 0;
    if (v28)
    {
      if (*(_DWORD *)v28 == 2)
        WTF::StringImpl::destroy(v28, v24);
      else
        *(_DWORD *)v28 -= 2;
    }
    v12 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  }
  else
  {
    v12 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
    v13 = v32[0];
  }
  WebCore::WebGLRenderingContextBase::createShader(v11, v13, (uint64_t *)v33);
  v14 = v33[0];
  if (!v33[0])
    return 2;
  v15 = WebCore::wrap<WebCore::WebGLShader>((uint64_t)this, v12, v33[0]);
  if (*((_DWORD *)v14 + 2) == 1)
    (*(void (**)(WTF *))(*(_QWORD *)v14 + 8))(v14);
  else
    --*((_DWORD *)v14 + 2);
  return v15;
}

unint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_createTexture(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  WebCore::InspectorInstrumentation *v16;
  uint64_t v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  unsigned int *v21[2];
  WTF::StringImpl *v22;

  v4 = *((_QWORD *)a2 + 5);
  v20 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "WebGLRenderingContext", "createTexture");
  v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v6 = *(unsigned int *)(v5 + 0x4C);
  v7 = *(_DWORD *)(v5 + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "WebGLRenderingContext", "createTexture");
  v11 = *(_QWORD *)(v4 + 24);
  if (*(_BYTE *)(v11 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v21[0] = 0;
    v21[1] = 0;
    v16 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
    if (v16)
    {
      v17 = WebCore::InspectorInstrumentation::instrumentingAgents(v16, a2);
      if (v17)
      {
        v18 = *(_QWORD *)(v17 + 96);
        if (v18)
          WebCore::InspectorCanvasAgent::recordAction(v18, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v22, v21);
      }
    }
    v19 = v22;
    v22 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, a2);
      else
        *(_DWORD *)v19 -= 2;
    }
    v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  }
  if (*(_BYTE *)(v11 + 364))
    return 2;
  v13 = *(_QWORD *)(v5 + 40);
  WebCore::WebGLTexture::create((WebCore::WebGLTexture *)v11, a2, v21);
  v14 = v21[0];
  if (!v21[0])
    return 2;
  v12 = WebCore::wrap<WebCore::WebGLTexture>((uint64_t)this, v13, (WTF *)v21[0]);
  if (v14[2] == 1)
    (*(void (**)(unsigned int *))(*(_QWORD *)v14 + 8))(v14);
  else
    --v14[2];
  return v12;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_cullFace(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  JSValue v13;
  unsigned int v14;
  WebCore::InspectorInstrumentation *v15;
  WebCore::ScriptExecutionContext *v16;
  uint64_t v17;
  WebCore::InspectorCanvasAgent *v18;
  WebCore::InspectorInstrumentation *v19;
  WebCore::ScriptExecutionContext *v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  WTF::StringImpl *v24;
  JSC::VM *v25;
  _QWORD v26[2];
  WTF::StringImpl *v27;
  _DWORD v28[2];
  _QWORD v29[2];
  char v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "WebGLRenderingContext", "cullFace");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "WebGLRenderingContext", "cullFace");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v28);
    if (v28[1])
    {
      return 0;
    }
    else
    {
      if (*(_BYTE *)(v11 + 33))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v14 = v28[0];
        v15 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v15
          && (v17 = WebCore::InspectorInstrumentation::instrumentingAgents(v15, v16)) != 0
          && (v18 = *(WebCore::InspectorCanvasAgent **)(v17 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v18, (WebCore::CanvasRenderingContext *)(v11 + 8), v14, (uint64_t)v29);
        }
        else
        {
          LOBYTE(v29[0]) = 0;
          v30 = 0;
        }
        v26[0] = v29;
        v26[1] = 1;
        v19 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v19)
        {
          v21 = WebCore::InspectorInstrumentation::instrumentingAgents(v19, v20);
          if (v21)
          {
            v22 = *(_QWORD *)(v21 + 96);
            if (v22)
              WebCore::InspectorCanvasAgent::recordAction(v22, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v27, v26);
          }
        }
        if (v30)
        {
          v23 = (_DWORD *)v29[0];
          v29[0] = 0;
          if (v23)
          {
            if (*v23 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v23;
          }
        }
        v24 = v27;
        v27 = 0;
        if (v24)
        {
          if (*(_DWORD *)v24 == 2)
            WTF::StringImpl::destroy(v24, v20);
          else
            *(_DWORD *)v24 -= 2;
        }
      }
      if (!*(_BYTE *)(v11 + 364))
        (*(void (**)(_QWORD, _QWORD))(**(_QWORD **)(v11 + 88) + 240))(*(_QWORD *)(v11 + 88), v28[0]);
      return 10;
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_deleteBuffer(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  WebCore::WebGLBuffer *v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  WTF::Lock *v26;
  int v27;
  JSValue v28;
  WebCore::InspectorInstrumentation *v29;
  WebCore::ScriptExecutionContext *v30;
  uint64_t v31;
  uint64_t v32;
  WebCore::InspectorInstrumentation *v33;
  WebCore::ScriptExecutionContext *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  WTF::StringImpl *v38;
  unsigned __int8 *v39;
  _QWORD v40[2];
  WTF::StringImpl *v41;
  unsigned __int8 *v42;
  char v43;
  char v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v9 = (unsigned __int8 *)*((_QWORD *)this + 7);
  v39 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v39, "WebGLRenderingContext", "deleteBuffer");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v39, "WebGLRenderingContext", "deleteBuffer");
  if (*((_DWORD *)a2 + 8) != 1)
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v18 = 0;
    }
    else
    {
      v42 = v9;
      if ((v17 & 0xFFFE000000000002) != 0)
        goto LABEL_26;
      v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
      v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
      v21 = (char **)(16 * v19);
      if ((_DWORD)v19)
        v22 = v21 == &WebCore::JSWebGLBuffer::s_info;
      else
        v22 = 1;
      if (!v22)
      {
        do
        {
          v21 = (char **)v21[2];
          v20 = v21 != 0;
        }
        while (v21 != &WebCore::JSWebGLBuffer::s_info && v21 != 0);
      }
      if (!v20 || (v18 = *(WebCore::WebGLBuffer **)(v17 + 24)) == 0)
      {
LABEL_26:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v42, 0, "buffer", 7, "WebGLRenderingContext", 22, a8, "deleteBuffer", 13, "WebGLBuffer", 12);
        return 0;
      }
    }
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v29 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v29
        && (v31 = WebCore::InspectorInstrumentation::instrumentingAgents(v29, v30)) != 0
        && (v32 = *(_QWORD *)(v31 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v32, (WebCore::CanvasRenderingContext *)(v16 + 8), v18, (uint64_t)&v42);
      }
      else
      {
        LOBYTE(v42) = 0;
        v44 = 0;
      }
      v40[0] = &v42;
      v40[1] = 1;
      v33 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v33)
      {
        v35 = WebCore::InspectorInstrumentation::instrumentingAgents(v33, v34);
        if (v35)
        {
          v36 = *(_QWORD *)(v35 + 96);
          if (v36)
            WebCore::InspectorCanvasAgent::recordAction(v36, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v41, v40);
        }
      }
      if (v44)
      {
        v37 = v42;
        v42 = 0;
        if (v37)
        {
          if (*(_DWORD *)v37 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*(_DWORD *)v37;
        }
      }
      v38 = v41;
      v41 = 0;
      if (v38)
      {
        if (*(_DWORD *)v38 == 2)
          WTF::StringImpl::destroy(v38, v34);
        else
          *(_DWORD *)v38 -= 2;
      }
    }
    v42 = (unsigned __int8 *)(v16 + 96);
    v43 = 1;
    if (__ldaxr((unsigned __int8 *)(v16 + 96)))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)(v16 + 96)))
    {
      goto LABEL_33;
    }
    MEMORY[0x19AEA534C]();
LABEL_33:
    if (WebCore::WebGLRenderingContextBase::deleteObject(v16, (uint64_t)&v42, v18))
      (*(void (**)(uint64_t, unsigned __int8 **, WebCore::WebGLBuffer *))(*(_QWORD *)v16 + 256))(v16, &v42, v18);
    if (!v43)
      return 10;
    v26 = (WTF::Lock *)v42;
    v27 = __ldxr(v42);
    if (v27 == 1)
    {
      if (!__stlxr(0, v42))
        return 10;
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow(v26);
    return 10;
  }
  v28.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
  return JSC::VM::throwException((JSC::VM *)v9, this, v28);
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_deleteFramebuffer(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  WebCore::WebGLFramebuffer *v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  JSValue v25;
  WebCore::InspectorInstrumentation *v26;
  WebCore::ScriptExecutionContext *v27;
  uint64_t v28;
  uint64_t v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  WTF::StringImpl *v35;
  JSC::VM *v36;
  _QWORD v37[2];
  WTF::StringImpl *v38;
  _QWORD v39[2];
  char v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v36 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v36, "WebGLRenderingContext", "deleteFramebuffer");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v36, "WebGLRenderingContext", "deleteFramebuffer");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v25);
  }
  else
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v18 = 0;
    }
    else
    {
      v39[0] = v9;
      if ((v17 & 0xFFFE000000000002) != 0)
        goto LABEL_26;
      v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
      v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
      v21 = (char **)(16 * v19);
      if ((_DWORD)v19)
        v22 = v21 == &WebCore::JSWebGLFramebuffer::s_info;
      else
        v22 = 1;
      if (!v22)
      {
        do
        {
          v21 = (char **)v21[2];
          v20 = v21 != 0;
        }
        while (v21 != &WebCore::JSWebGLFramebuffer::s_info && v21 != 0);
      }
      if (!v20 || (v18 = *(WebCore::WebGLFramebuffer **)(v17 + 24)) == 0)
      {
LABEL_26:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v39, 0, "framebuffer", 12, "WebGLRenderingContext", 22, a8, "deleteFramebuffer", 18, "WebGLFramebuffer", 17);
        return 0;
      }
    }
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v26 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v26
        && (v28 = WebCore::InspectorInstrumentation::instrumentingAgents(v26, v27)) != 0
        && (v29 = *(_QWORD *)(v28 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v29, (WebCore::CanvasRenderingContext *)(v16 + 8), v18, (uint64_t)v39);
      }
      else
      {
        LOBYTE(v39[0]) = 0;
        v40 = 0;
      }
      v37[0] = v39;
      v37[1] = 1;
      v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v30)
      {
        v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31);
        if (v32)
        {
          v33 = *(_QWORD *)(v32 + 96);
          if (v33)
            WebCore::InspectorCanvasAgent::recordAction(v33, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v38, v37);
        }
      }
      if (v40)
      {
        v34 = (_DWORD *)v39[0];
        v39[0] = 0;
        if (v34)
        {
          if (*v34 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v34;
        }
      }
      v35 = v38;
      v38 = 0;
      if (v35)
      {
        if (*(_DWORD *)v35 == 2)
          WTF::StringImpl::destroy(v35, v31);
        else
          *(_DWORD *)v35 -= 2;
      }
    }
    WebCore::WebGLRenderingContextBase::deleteFramebuffer((WebCore::WebGLRenderingContextBase *)v16, v18);
    return 10;
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_deleteProgram(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  WebCore::WebGLProgram *v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  JSValue v25;
  WebCore::InspectorInstrumentation *v26;
  WebCore::ScriptExecutionContext *v27;
  uint64_t v28;
  uint64_t v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  WTF::StringImpl *v35;
  JSC::VM *v36;
  _QWORD v37[2];
  WTF::StringImpl *v38;
  _QWORD v39[2];
  char v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v36 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v36, "WebGLRenderingContext", "deleteProgram");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v36, "WebGLRenderingContext", "deleteProgram");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v25);
  }
  else
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v18 = 0;
    }
    else
    {
      v39[0] = v9;
      if ((v17 & 0xFFFE000000000002) != 0)
        goto LABEL_26;
      v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
      v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
      v21 = (char **)(16 * v19);
      if ((_DWORD)v19)
        v22 = v21 == &WebCore::JSWebGLProgram::s_info;
      else
        v22 = 1;
      if (!v22)
      {
        do
        {
          v21 = (char **)v21[2];
          v20 = v21 != 0;
        }
        while (v21 != &WebCore::JSWebGLProgram::s_info && v21 != 0);
      }
      if (!v20 || (v18 = *(WebCore::WebGLProgram **)(v17 + 24)) == 0)
      {
LABEL_26:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v39, 0, "program", 8, "WebGLRenderingContext", 22, a8, "deleteProgram", 14, "WebGLProgram", 13);
        return 0;
      }
    }
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v26 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v26
        && (v28 = WebCore::InspectorInstrumentation::instrumentingAgents(v26, v27)) != 0
        && (v29 = *(_QWORD *)(v28 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v29, (WTF::StringImpl *)(v16 + 8), (uint64_t)v18, (uint64_t)v39);
      }
      else
      {
        LOBYTE(v39[0]) = 0;
        v40 = 0;
      }
      v37[0] = v39;
      v37[1] = 1;
      v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v30)
      {
        v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31);
        if (v32)
        {
          v33 = *(_QWORD *)(v32 + 96);
          if (v33)
            WebCore::InspectorCanvasAgent::recordAction(v33, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v38, v37);
        }
      }
      if (v40)
      {
        v34 = (_DWORD *)v39[0];
        v39[0] = 0;
        if (v34)
        {
          if (*v34 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v34;
        }
      }
      v35 = v38;
      v38 = 0;
      if (v35)
      {
        if (*(_DWORD *)v35 == 2)
          WTF::StringImpl::destroy(v35, v31);
        else
          *(_DWORD *)v35 -= 2;
      }
    }
    WebCore::WebGLRenderingContextBase::deleteProgram((WebCore::WebGLRenderingContextBase *)v16, v18);
    return 10;
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_deleteRenderbuffer(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  WebCore::WebGLRenderbuffer *v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  JSValue v25;
  WebCore::InspectorInstrumentation *v26;
  WebCore::ScriptExecutionContext *v27;
  uint64_t v28;
  uint64_t v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  WTF::StringImpl *v35;
  JSC::VM *v36;
  _QWORD v37[2];
  WTF::StringImpl *v38;
  _QWORD v39[2];
  char v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v36 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v36, "WebGLRenderingContext", "deleteRenderbuffer");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v36, "WebGLRenderingContext", "deleteRenderbuffer");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v25);
  }
  else
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v18 = 0;
    }
    else
    {
      v39[0] = v9;
      if ((v17 & 0xFFFE000000000002) != 0)
        goto LABEL_26;
      v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
      v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
      v21 = (char **)(16 * v19);
      if ((_DWORD)v19)
        v22 = v21 == &WebCore::JSWebGLRenderbuffer::s_info;
      else
        v22 = 1;
      if (!v22)
      {
        do
        {
          v21 = (char **)v21[2];
          v20 = v21 != 0;
        }
        while (v21 != &WebCore::JSWebGLRenderbuffer::s_info && v21 != 0);
      }
      if (!v20 || (v18 = *(WebCore::WebGLRenderbuffer **)(v17 + 24)) == 0)
      {
LABEL_26:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v39, 0, "renderbuffer", 13, "WebGLRenderingContext", 22, a8, "deleteRenderbuffer", 19, "WebGLRenderbuffer", 18);
        return 0;
      }
    }
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v26 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v26
        && (v28 = WebCore::InspectorInstrumentation::instrumentingAgents(v26, v27)) != 0
        && (v29 = *(_QWORD *)(v28 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v29, (WebCore::CanvasRenderingContext *)(v16 + 8), v18, (uint64_t)v39);
      }
      else
      {
        LOBYTE(v39[0]) = 0;
        v40 = 0;
      }
      v37[0] = v39;
      v37[1] = 1;
      v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v30)
      {
        v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31);
        if (v32)
        {
          v33 = *(_QWORD *)(v32 + 96);
          if (v33)
            WebCore::InspectorCanvasAgent::recordAction(v33, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v38, v37);
        }
      }
      if (v40)
      {
        v34 = (_DWORD *)v39[0];
        v39[0] = 0;
        if (v34)
        {
          if (*v34 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v34;
        }
      }
      v35 = v38;
      v38 = 0;
      if (v35)
      {
        if (*(_DWORD *)v35 == 2)
          WTF::StringImpl::destroy(v35, v31);
        else
          *(_DWORD *)v35 -= 2;
      }
    }
    WebCore::WebGLRenderingContextBase::deleteRenderbuffer((WebCore::WebGLRenderingContextBase *)v16, v18);
    return 10;
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_deleteShader(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  WebCore::WebGLShader *v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  WTF::Lock *v26;
  int v27;
  JSValue v28;
  WebCore::InspectorInstrumentation *v29;
  WebCore::ScriptExecutionContext *v30;
  uint64_t v31;
  uint64_t v32;
  WebCore::InspectorInstrumentation *v33;
  WebCore::ScriptExecutionContext *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  WTF::StringImpl *v38;
  unsigned __int8 *v39;
  _QWORD v40[2];
  WTF::StringImpl *v41;
  unsigned __int8 *v42;
  char v43;
  char v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v9 = (unsigned __int8 *)*((_QWORD *)this + 7);
  v39 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v39, "WebGLRenderingContext", "deleteShader");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v39, "WebGLRenderingContext", "deleteShader");
  if (*((_DWORD *)a2 + 8) != 1)
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v18 = 0;
    }
    else
    {
      v42 = v9;
      if ((v17 & 0xFFFE000000000002) != 0)
        goto LABEL_26;
      v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
      v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
      v21 = (char **)(16 * v19);
      if ((_DWORD)v19)
        v22 = v21 == &WebCore::JSWebGLShader::s_info;
      else
        v22 = 1;
      if (!v22)
      {
        do
        {
          v21 = (char **)v21[2];
          v20 = v21 != 0;
        }
        while (v21 != &WebCore::JSWebGLShader::s_info && v21 != 0);
      }
      if (!v20 || (v18 = *(WebCore::WebGLShader **)(v17 + 24)) == 0)
      {
LABEL_26:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v42, 0, "shader", 7, "WebGLRenderingContext", 22, a8, "deleteShader", 13, "WebGLShader", 12);
        return 0;
      }
    }
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v29 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v29
        && (v31 = WebCore::InspectorInstrumentation::instrumentingAgents(v29, v30)) != 0
        && (v32 = *(_QWORD *)(v31 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v32, (WebCore::CanvasRenderingContext *)(v16 + 8), v18, (uint64_t)&v42);
      }
      else
      {
        LOBYTE(v42) = 0;
        v44 = 0;
      }
      v40[0] = &v42;
      v40[1] = 1;
      v33 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v33)
      {
        v35 = WebCore::InspectorInstrumentation::instrumentingAgents(v33, v34);
        if (v35)
        {
          v36 = *(_QWORD *)(v35 + 96);
          if (v36)
            WebCore::InspectorCanvasAgent::recordAction(v36, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v41, v40);
        }
      }
      if (v44)
      {
        v37 = v42;
        v42 = 0;
        if (v37)
        {
          if (*(_DWORD *)v37 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*(_DWORD *)v37;
        }
      }
      v38 = v41;
      v41 = 0;
      if (v38)
      {
        if (*(_DWORD *)v38 == 2)
          WTF::StringImpl::destroy(v38, v34);
        else
          *(_DWORD *)v38 -= 2;
      }
    }
    v42 = (unsigned __int8 *)(v16 + 96);
    v43 = 1;
    if (__ldaxr((unsigned __int8 *)(v16 + 96)))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)(v16 + 96)))
    {
      goto LABEL_33;
    }
    MEMORY[0x19AEA534C]();
LABEL_33:
    WebCore::WebGLRenderingContextBase::deleteObject(v16, (uint64_t)&v42, v18);
    if (v43)
    {
      v26 = (WTF::Lock *)v42;
      v27 = __ldxr(v42);
      if (v27 == 1)
      {
        if (!__stlxr(0, v42))
          return 10;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow(v26);
    }
    return 10;
  }
  v28.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
  return JSC::VM::throwException((JSC::VM *)v9, this, v28);
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_deleteTexture(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  WebCore::WebGLTexture *v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  JSValue v25;
  WebCore::InspectorInstrumentation *v26;
  WebCore::ScriptExecutionContext *v27;
  uint64_t v28;
  uint64_t v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  WTF::StringImpl *v35;
  JSC::VM *v36;
  _QWORD v37[2];
  WTF::StringImpl *v38;
  _QWORD v39[2];
  char v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v36 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v36, "WebGLRenderingContext", "deleteTexture");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v36, "WebGLRenderingContext", "deleteTexture");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v25);
  }
  else
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v18 = 0;
    }
    else
    {
      v39[0] = v9;
      if ((v17 & 0xFFFE000000000002) != 0)
        goto LABEL_26;
      v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
      v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
      v21 = (char **)(16 * v19);
      if ((_DWORD)v19)
        v22 = v21 == &WebCore::JSWebGLTexture::s_info;
      else
        v22 = 1;
      if (!v22)
      {
        do
        {
          v21 = (char **)v21[2];
          v20 = v21 != 0;
        }
        while (v21 != &WebCore::JSWebGLTexture::s_info && v21 != 0);
      }
      if (!v20 || (v18 = *(WebCore::WebGLTexture **)(v17 + 24)) == 0)
      {
LABEL_26:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v39, 0, "texture", 8, "WebGLRenderingContext", 22, a8, "deleteTexture", 14, "WebGLTexture", 13);
        return 0;
      }
    }
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v26 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v26
        && (v28 = WebCore::InspectorInstrumentation::instrumentingAgents(v26, v27)) != 0
        && (v29 = *(_QWORD *)(v28 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v29, (WebCore::CanvasRenderingContext *)(v16 + 8), v18, (uint64_t)v39);
      }
      else
      {
        LOBYTE(v39[0]) = 0;
        v40 = 0;
      }
      v37[0] = v39;
      v37[1] = 1;
      v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v30)
      {
        v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31);
        if (v32)
        {
          v33 = *(_QWORD *)(v32 + 96);
          if (v33)
            WebCore::InspectorCanvasAgent::recordAction(v33, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v38, v37);
        }
      }
      if (v40)
      {
        v34 = (_DWORD *)v39[0];
        v39[0] = 0;
        if (v34)
        {
          if (*v34 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v34;
        }
      }
      v35 = v38;
      v38 = 0;
      if (v35)
      {
        if (*(_DWORD *)v35 == 2)
          WTF::StringImpl::destroy(v35, v31);
        else
          *(_DWORD *)v35 -= 2;
      }
    }
    WebCore::WebGLRenderingContextBase::deleteTexture((WebCore::WebGLRenderingContextBase *)v16, v18);
    return 10;
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_depthFunc(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  JSValue v13;
  unsigned int v14;
  WebCore::InspectorInstrumentation *v15;
  WebCore::ScriptExecutionContext *v16;
  uint64_t v17;
  WebCore::InspectorCanvasAgent *v18;
  WebCore::InspectorInstrumentation *v19;
  WebCore::ScriptExecutionContext *v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  WTF::StringImpl *v24;
  JSC::VM *v25;
  _QWORD v26[2];
  WTF::StringImpl *v27;
  _DWORD v28[2];
  _QWORD v29[2];
  char v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "WebGLRenderingContext", "depthFunc");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "WebGLRenderingContext", "depthFunc");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v28);
    if (v28[1])
    {
      return 0;
    }
    else
    {
      if (*(_BYTE *)(v11 + 33))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v14 = v28[0];
        v15 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v15
          && (v17 = WebCore::InspectorInstrumentation::instrumentingAgents(v15, v16)) != 0
          && (v18 = *(WebCore::InspectorCanvasAgent **)(v17 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v18, (WebCore::CanvasRenderingContext *)(v11 + 8), v14, (uint64_t)v29);
        }
        else
        {
          LOBYTE(v29[0]) = 0;
          v30 = 0;
        }
        v26[0] = v29;
        v26[1] = 1;
        v19 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v19)
        {
          v21 = WebCore::InspectorInstrumentation::instrumentingAgents(v19, v20);
          if (v21)
          {
            v22 = *(_QWORD *)(v21 + 96);
            if (v22)
              WebCore::InspectorCanvasAgent::recordAction(v22, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v27, v26);
          }
        }
        if (v30)
        {
          v23 = (_DWORD *)v29[0];
          v29[0] = 0;
          if (v23)
          {
            if (*v23 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v23;
          }
        }
        v24 = v27;
        v27 = 0;
        if (v24)
        {
          if (*(_DWORD *)v24 == 2)
            WTF::StringImpl::destroy(v24, v20);
          else
            *(_DWORD *)v24 -= 2;
        }
      }
      if (!*(_BYTE *)(v11 + 364))
        (*(void (**)(_QWORD, _QWORD))(**(_QWORD **)(v11 + 88) + 296))(*(_QWORD *)(v11 + 88), v28[0]);
      return 10;
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_depthMask(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  unint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  JSValue v16;
  WebCore::InspectorInstrumentation *v17;
  WebCore::ScriptExecutionContext *v18;
  uint64_t v19;
  WebCore::InspectorCanvasAgent *v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD *v25;
  WTF::StringImpl *v26;
  BOOL v27;
  BOOL v28;
  _BOOL4 v29;
  int v30;
  uint64_t v31;
  int *v32;
  int v33;
  JSC::VM *v34;
  _QWORD v35[2];
  WTF::StringImpl *v36;
  _QWORD v37[2];
  char v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v34 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v34, "WebGLRenderingContext", "depthMask");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v34, "WebGLRenderingContext", "depthMask");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v16.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v16);
  }
  v11 = *((_QWORD *)a2 + 6);
  if (v11 >= 0xFFFE000000000000)
  {
    v27 = (_DWORD)v11 == 0;
    goto LABEL_59;
  }
  *(_QWORD *)&v12 = v11 - 0x2000000000000;
  if (v11 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v11 & 0xFFFE000000000002) != 0)
    {
      v13 = v11 == 7;
      goto LABEL_17;
    }
    v30 = *(unsigned __int8 *)(v11 + 5);
    if (v30 == 3)
    {
      v33 = *(_DWORD *)(v11 + 8);
    }
    else
    {
      if (v30 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v13 = 1;
          goto LABEL_17;
        }
        v27 = *(_QWORD *)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
        goto LABEL_59;
      }
      v31 = *(_QWORD *)(v11 + 8);
      if ((v31 & 1) != 0)
        v32 = (int *)(v11 + 16);
      else
        v32 = (int *)(v31 + 4);
      v33 = *v32;
    }
    v27 = v33 == 0;
LABEL_59:
    v13 = !v27;
    goto LABEL_17;
  }
  v28 = v12 <= 0.0;
  v29 = v12 < 0.0;
  v13 = !v28 || v29;
LABEL_17:
  v14 = *(_QWORD *)(v5 + 24);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  if (*(_BYTE *)(v14 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v17 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v14 + 40) + 144))(*(_QWORD *)(v14 + 40));
    if (v17
      && (v19 = WebCore::InspectorInstrumentation::instrumentingAgents(v17, v18)) != 0
      && (v20 = *(WebCore::InspectorCanvasAgent **)(v19 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v20, (WebCore::CanvasRenderingContext *)(v14 + 8), (WTF::JSONImpl::Value *)v13, (uint64_t)v37);
    }
    else
    {
      LOBYTE(v37[0]) = 0;
      v38 = 0;
    }
    v35[0] = v37;
    v35[1] = 1;
    v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v14 + 40) + 144))(*(_QWORD *)(v14 + 40));
    if (v21)
    {
      v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22);
      if (v23)
      {
        v24 = *(_QWORD *)(v23 + 96);
        if (v24)
          WebCore::InspectorCanvasAgent::recordAction(v24, (WebCore::CanvasRenderingContext *)(v14 + 8), (const WTF::StringImpl *)&v36, v35);
      }
    }
    if (v38)
    {
      v25 = (_DWORD *)v37[0];
      v37[0] = 0;
      if (v25)
      {
        if (*v25 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v25;
      }
    }
    v26 = v36;
    v36 = 0;
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
        WTF::StringImpl::destroy(v26, v22);
      else
        *(_DWORD *)v26 -= 2;
    }
  }
  if (!*(_BYTE *)(v14 + 364))
  {
    *(_BYTE *)(v14 + 424) = v13;
    (*(void (**)(_QWORD, uint64_t, JSC::CallFrame *))(**(_QWORD **)(v14 + 88) + 304))(*(_QWORD *)(v14 + 88), v13, a3);
  }
  return 10;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_depthRange(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  float v15;
  unint64_t v16;
  JSC::VM *v17;
  double v18;
  float v19;
  JSValue v21;
  int v22;
  int v23;
  WebCore::InspectorInstrumentation *v24;
  WebCore::ScriptExecutionContext *v25;
  uint64_t v26;
  WebCore::InspectorCanvasAgent *v27;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  WebCore::InspectorCanvasAgent *v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  _DWORD *v37;
  WTF::StringImpl *v38;
  double v39;
  double v40;
  JSC::VM *v41;
  _QWORD v42[2];
  WTF::StringImpl *v43;
  _QWORD v44[2];
  char v45;
  _DWORD *v46;
  char v47;
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v41 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v41, "WebGLRenderingContext", "depthRange");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v41, "WebGLRenderingContext", "depthRange");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v21);
  }
  v12 = *(_QWORD *)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  v44[0] = v13;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v44, this);
    v14 = v39;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  if (v14 < -3.40282347e38)
  {
    *(float *)&v22 = -INFINITY;
  }
  else
  {
    if (v14 <= 3.40282347e38)
    {
      v15 = v14;
      goto LABEL_20;
    }
    *(float *)&v22 = INFINITY;
  }
  v15 = *(float *)&v22;
LABEL_20:
  v16 = *((_QWORD *)a2 + 7);
  v44[0] = v16;
  v17 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v16 >= 0xFFFE000000000000)
  {
    v18 = (double)(int)v16;
  }
  else if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v44, this);
    v18 = v40;
  }
  else
  {
    *(_QWORD *)&v18 = v16 - 0x2000000000000;
  }
  if (*((_DWORD *)v17 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) != 0)
    return 0;
  if (v18 < -3.40282347e38)
  {
    *(float *)&v23 = -INFINITY;
LABEL_50:
    v19 = *(float *)&v23;
    goto LABEL_27;
  }
  if (v18 > 3.40282347e38)
  {
    *(float *)&v23 = INFINITY;
    goto LABEL_50;
  }
  v19 = v18;
LABEL_27:
  if (*(_BYTE *)(v12 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v24 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v24
      && (v26 = WebCore::InspectorInstrumentation::instrumentingAgents(v24, v25)) != 0
      && (v27 = *(WebCore::InspectorCanvasAgent **)(v26 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v27, (WebCore::CanvasRenderingContext *)(v12 + 8), v15, (uint64_t)v44);
    }
    else
    {
      LOBYTE(v44[0]) = 0;
      v45 = 0;
    }
    v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v28
      && (v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29)) != 0
      && (v31 = *(WebCore::InspectorCanvasAgent **)(v30 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v31, (WebCore::CanvasRenderingContext *)(v12 + 8), v19, (uint64_t)&v46);
    }
    else
    {
      LOBYTE(v46) = 0;
      v47 = 0;
    }
    v42[0] = v44;
    v42[1] = 2;
    v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v32)
    {
      v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33);
      if (v34)
      {
        v35 = *(_QWORD *)(v34 + 96);
        if (v35)
          WebCore::InspectorCanvasAgent::recordAction(v35, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v43, v42);
      }
    }
    if (v47)
    {
      v36 = v46;
      v46 = 0;
      if (v36)
      {
        if (*v36 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v36;
      }
    }
    if (v45)
    {
      v37 = (_DWORD *)v44[0];
      v44[0] = 0;
      if (v37)
      {
        if (*v37 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v37;
      }
    }
    v38 = v43;
    v43 = 0;
    if (v38)
    {
      if (*(_DWORD *)v38 == 2)
        WTF::StringImpl::destroy(v38, v33);
      else
        *(_DWORD *)v38 -= 2;
    }
  }
  if (!*(_BYTE *)(v12 + 364))
  {
    if (v15 <= v19)
      (*(void (**)(_QWORD, float, float))(**(_QWORD **)(v12 + 88) + 312))(*(_QWORD *)(v12 + 88), v15, v19);
    else
      WebCore::WebGLRenderingContextBase::synthesizeGLError((WTF::StringImpl *)v12, 1282, (uint64_t)"depthRange", 11, (uint64_t)"zNear > zFar", 13);
  }
  return 10;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_detachShader(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  WebCore::WebGLProgram *v24;
  uint64_t v25;
  uint64_t v26;
  _BOOL4 v27;
  char **v28;
  BOOL v29;
  WebCore::WebGLShader *v31;
  JSValue v32;
  WebCore::InspectorInstrumentation *v33;
  WebCore::ScriptExecutionContext *v34;
  uint64_t v35;
  uint64_t v36;
  WebCore::InspectorInstrumentation *v37;
  WebCore::ScriptExecutionContext *v38;
  uint64_t v39;
  uint64_t v40;
  WebCore::InspectorInstrumentation *v41;
  WebCore::ScriptExecutionContext *v42;
  uint64_t v43;
  uint64_t v44;
  _DWORD *v45;
  _DWORD *v46;
  WTF::StringImpl *v47;
  JSC::VM *v48;
  _QWORD v49[2];
  WTF::StringImpl *v50;
  _QWORD v51[2];
  char v52;
  _DWORD *v53;
  char v54;
  uint64_t v55;

  v55 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v48 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v48, "WebGLRenderingContext", "detachShader");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v48, "WebGLRenderingContext", "detachShader");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v32.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v32);
  }
  else
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    v51[0] = v9;
    if ((v17 & 0xFFFE000000000002) != 0)
      goto LABEL_24;
    v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v20 = (char **)(16 * v18);
    if ((_DWORD)v18)
      v21 = v20 == &WebCore::JSWebGLProgram::s_info;
    else
      v21 = 1;
    if (!v21)
    {
      do
      {
        v20 = (char **)v20[2];
        v19 = v20 != 0;
      }
      while (v20 != &WebCore::JSWebGLProgram::s_info && v20 != 0);
    }
    if (v19 && (v24 = *(WebCore::WebGLProgram **)(v17 + 24)) != 0)
    {
      v25 = *((_QWORD *)a2 + 7);
      v51[0] = v9;
      if ((v25 & 0xFFFE000000000002) != 0)
        goto LABEL_37;
      v26 = *(unsigned int *)(16 * (*(_DWORD *)v25 & 0xFFFFFFFE) + 0x4C);
      v27 = *(_DWORD *)(16 * (*(_DWORD *)v25 & 0xFFFFFFFE) + 0x4C) != 0;
      v28 = (char **)(16 * v26);
      if ((_DWORD)v26)
        v29 = v28 == &WebCore::JSWebGLShader::s_info;
      else
        v29 = 1;
      if (!v29)
      {
        do
        {
          v28 = (char **)v28[2];
          v27 = v28 != 0;
        }
        while (v28 != &WebCore::JSWebGLShader::s_info && v28 != 0);
      }
      if (v27 && (v31 = *(WebCore::WebGLShader **)(v25 + 24)) != 0)
      {
        if (*(_BYTE *)(v16 + 33))
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v33 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
          if (v33
            && (v35 = WebCore::InspectorInstrumentation::instrumentingAgents(v33, v34)) != 0
            && (v36 = *(_QWORD *)(v35 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v36, (WTF::StringImpl *)(v16 + 8), (uint64_t)v24, (uint64_t)v51);
          }
          else
          {
            LOBYTE(v51[0]) = 0;
            v52 = 0;
          }
          v37 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
          if (v37
            && (v39 = WebCore::InspectorInstrumentation::instrumentingAgents(v37, v38)) != 0
            && (v40 = *(_QWORD *)(v39 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v40, (WebCore::CanvasRenderingContext *)(v16 + 8), v31, (uint64_t)&v53);
          }
          else
          {
            LOBYTE(v53) = 0;
            v54 = 0;
          }
          v49[0] = v51;
          v49[1] = 2;
          v41 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
          if (v41)
          {
            v43 = WebCore::InspectorInstrumentation::instrumentingAgents(v41, v42);
            if (v43)
            {
              v44 = *(_QWORD *)(v43 + 96);
              if (v44)
                WebCore::InspectorCanvasAgent::recordAction(v44, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v50, v49);
            }
          }
          if (v54)
          {
            v45 = v53;
            v53 = 0;
            if (v45)
            {
              if (*v45 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v45;
            }
          }
          if (v52)
          {
            v46 = (_DWORD *)v51[0];
            v51[0] = 0;
            if (v46)
            {
              if (*v46 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v46;
            }
          }
          v47 = v50;
          v50 = 0;
          if (v47)
          {
            if (*(_DWORD *)v47 == 2)
              WTF::StringImpl::destroy(v47, v42);
            else
              *(_DWORD *)v47 -= 2;
          }
        }
        WebCore::WebGLRenderingContextBase::detachShader((WTF::StringImpl *)v16, v24, v31);
        return 10;
      }
      else
      {
LABEL_37:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v51, 1, "shader", 7, "WebGLRenderingContext", 22, a8, "detachShader", 13, "WebGLShader", 12);
        return 0;
      }
    }
    else
    {
LABEL_24:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v51, 0, "program", 8, "WebGLRenderingContext", 22, a8, "detachShader", 13, "WebGLProgram", 13);
      return 0;
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_disable(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  JSValue v14;
  WebCore::InspectorInstrumentation *v15;
  WebCore::ScriptExecutionContext *v16;
  uint64_t v17;
  WebCore::InspectorCanvasAgent *v18;
  WebCore::InspectorInstrumentation *v19;
  WebCore::ScriptExecutionContext *v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  WTF::StringImpl *v24;
  JSC::VM *v25;
  _QWORD v26[2];
  WTF::StringImpl *v27;
  _DWORD v28[2];
  _QWORD v29[2];
  char v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "WebGLRenderingContext", "disable");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "WebGLRenderingContext", "disable");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v14.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v14);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v28);
    if (v28[1])
    {
      return 0;
    }
    else
    {
      if (*(_BYTE *)(v11 + 33))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v12 = v28[0];
        v15 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v15
          && (v17 = WebCore::InspectorInstrumentation::instrumentingAgents(v15, v16)) != 0
          && (v18 = *(WebCore::InspectorCanvasAgent **)(v17 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v18, (WebCore::CanvasRenderingContext *)(v11 + 8), v12, (uint64_t)v29);
        }
        else
        {
          LOBYTE(v29[0]) = 0;
          v30 = 0;
        }
        v26[0] = v29;
        v26[1] = 1;
        v19 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v19)
        {
          v21 = WebCore::InspectorInstrumentation::instrumentingAgents(v19, v20);
          if (v21)
          {
            v22 = *(_QWORD *)(v21 + 96);
            if (v22)
              WebCore::InspectorCanvasAgent::recordAction(v22, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v27, v26);
          }
        }
        if (v30)
        {
          v23 = (_DWORD *)v29[0];
          v29[0] = 0;
          if (v23)
          {
            if (*v23 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v23;
          }
        }
        v24 = v27;
        v27 = 0;
        if (v24)
        {
          if (*(_DWORD *)v24 == 2)
            WTF::StringImpl::destroy(v24, v20);
          else
            *(_DWORD *)v24 -= 2;
        }
      }
      else
      {
        v12 = v28[0];
      }
      if (!*(_BYTE *)(v11 + 364)
        && (*(unsigned int (**)(uint64_t, const char *, uint64_t, uint64_t))(*(_QWORD *)v11 + 312))(v11, "disable", 8, v12))
      {
        if ((_DWORD)v12 == 35977)
        {
          *(_BYTE *)(v11 + 425) = 0;
        }
        else if ((_DWORD)v12 == 3089)
        {
          *(_BYTE *)(v11 + 404) = 0;
        }
        (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(v11 + 88) + 328))(*(_QWORD *)(v11 + 88), v12);
      }
      return 10;
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_disableVertexAttribArray(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  JSValue v16;
  WebCore::InspectorInstrumentation *v17;
  WebCore::ScriptExecutionContext *v18;
  uint64_t v19;
  WebCore::InspectorCanvasAgent *v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD *v25;
  JSC::VM *v26;
  _QWORD v27[2];
  WTF::StringImpl *v28;
  _DWORD v29[2];
  _QWORD v30[2];
  char v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "WebGLRenderingContext", "disableVertexAttribArray");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "WebGLRenderingContext", "disableVertexAttribArray");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v16.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v16);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    result = WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v29);
    if (v29[1])
    {
      return 0;
    }
    else
    {
      if (*(_BYTE *)(v11 + 33))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v13 = v29[0];
        v17 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v17
          && (v19 = WebCore::InspectorInstrumentation::instrumentingAgents(v17, v18)) != 0
          && (v20 = *(WebCore::InspectorCanvasAgent **)(v19 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v20, (WebCore::CanvasRenderingContext *)(v11 + 8), v13, (uint64_t)v30);
        }
        else
        {
          LOBYTE(v30[0]) = 0;
          v31 = 0;
        }
        v27[0] = v30;
        v27[1] = 1;
        v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v21)
        {
          v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22);
          if (v23)
          {
            v24 = *(_QWORD *)(v23 + 96);
            if (v24)
              WebCore::InspectorCanvasAgent::recordAction(v24, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v28, v27);
          }
        }
        if (v31)
        {
          v25 = (_DWORD *)v30[0];
          v30[0] = 0;
          if (v25)
          {
            if (*v25 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v25;
          }
        }
        result = (uint64_t)v28;
        v28 = 0;
        if (result)
        {
          if (*(_DWORD *)result == 2)
            result = WTF::StringImpl::destroy((WTF::StringImpl *)result, v22);
          else
            *(_DWORD *)result -= 2;
        }
      }
      else
      {
        v13 = v29[0];
      }
      if (*(_BYTE *)(v11 + 364))
        return 10;
      if (*(_DWORD *)(v11 + 164) <= v13)
      {
        WebCore::WebGLRenderingContextBase::synthesizeGLError((WTF::StringImpl *)v11, 1281, (uint64_t)"disableVertexAttribArray", 25, (uint64_t)"index out of range", 19);
        return 10;
      }
      v14 = *(_QWORD *)(v11 + 144);
      if (*(unsigned int *)(v14 + 68) > (unint64_t)(int)v13)
      {
        v15 = (_BYTE *)(*(_QWORD *)(v14 + 56) + 56 * (int)v13);
        if (*v15)
        {
          *v15 = 0;
          if (*(_BYTE *)(v14 + 73))
            *(_BYTE *)(v14 + 73) = 0;
        }
        (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(v11 + 88) + 336))(*(_QWORD *)(v11 + 88), v13);
        return 10;
      }
      __break(0xC471u);
    }
  }
  return result;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_drawArrays(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  __n128 v13;
  __n128 v14;
  __n128 v15;
  __n128 v16;
  unint64_t v17;
  JSC::VM *v18;
  uint64_t v19;
  unint64_t v20;
  JSC::VM *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unint64_t v28;
  unsigned int v29;
  unsigned int v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unsigned int v34;
  JSValue v35;
  WebCore::InspectorInstrumentation *v36;
  WebCore::ScriptExecutionContext *v37;
  uint64_t v38;
  WebCore::InspectorCanvasAgent *v39;
  WebCore::InspectorInstrumentation *v40;
  WebCore::ScriptExecutionContext *v41;
  uint64_t v42;
  WebCore::InspectorCanvasAgent *v43;
  WebCore::InspectorInstrumentation *v44;
  WebCore::ScriptExecutionContext *v45;
  uint64_t v46;
  WebCore::InspectorCanvasAgent *v47;
  WebCore::InspectorInstrumentation *v48;
  WebCore::ScriptExecutionContext *v49;
  uint64_t v50;
  uint64_t v51;
  _DWORD *v52;
  _DWORD *v53;
  _DWORD *v54;
  WTF::StringImpl *v55;
  JSC::VM *v56;
  _QWORD v57[2];
  WTF::StringImpl *v58;
  unsigned int v59[2];
  _QWORD v60[2];
  char v61;
  _DWORD *v62;
  char v63;
  _DWORD *v64;
  char v65;
  uint64_t v66;

  v66 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v56 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v56, "WebGLRenderingContext", "drawArrays");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v56, "WebGLRenderingContext", "drawArrays");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v35.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v35);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v59);
    if (v59[1])
    {
      return 0;
    }
    else
    {
      v17 = *((_QWORD *)a2 + 7);
      v60[0] = v17;
      v18 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v17 < 0xFFFE000000000000)
      {
        v25 = v17 - 0x2000000000000;
        if (v17 - 0x2000000000000 >= 0xFFFC000000000000)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v60, this);
          v25 = v13.n128_u64[0];
        }
        v26 = (v25 >> 52) & 0x7FF;
        v27 = v26 - 1023;
        v28 = v25 >> (51 - (v25 >> 52));
        if (v26 > 0x433)
          LODWORD(v28) = v25 << ((v25 >> 52) - 51);
        if (v26 >= 0x41F)
          v29 = v28;
        else
          v29 = (((1 << ((v25 >> 52) + 1)) - 1) & v28) + (1 << ((v25 >> 52) + 1));
        if ((v25 & 0x8000000000000000) == 0)
          v30 = v29;
        else
          v30 = -v29;
        if (v27 <= 0x53)
          v19 = v30;
        else
          v19 = 0;
      }
      else
      {
        v19 = v17;
      }
      if (*((_DWORD *)v18 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v18))
      {
        return 0;
      }
      else
      {
        v20 = *((_QWORD *)a2 + 8);
        v60[0] = v20;
        v21 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v20 < 0xFFFE000000000000)
        {
          v31 = v20 - 0x2000000000000;
          if (v20 - 0x2000000000000 >= 0xFFFC000000000000)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v60, this);
            v31 = v13.n128_u64[0];
          }
          v32 = (v31 >> 52) & 0x7FF;
          if ((v32 - 1023) <= 0x53)
          {
            v33 = v31 >> (51 - (v31 >> 52));
            if (v32 > 0x433)
              LODWORD(v33) = v31 << ((v31 >> 52) - 51);
            if (v32 >= 0x41F)
              v34 = v33;
            else
              v34 = (((1 << ((v31 >> 52) + 1)) - 1) & v33) + (1 << ((v31 >> 52) + 1));
            if ((v31 & 0x8000000000000000) == 0)
              v22 = v34;
            else
              v22 = -v34;
          }
          else
          {
            v22 = 0;
          }
        }
        else
        {
          v22 = v20;
        }
        if (*((_DWORD *)v21 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v21))
        {
          return 0;
        }
        else
        {
          if (*(_BYTE *)(v12 + 33))
          {
            WTF::StringImpl::createWithoutCopyingNonEmpty();
            v23 = v59[0];
            v36 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                         + 144))(*(_QWORD *)(v12 + 40));
            if (v36
              && (v38 = WebCore::InspectorInstrumentation::instrumentingAgents(v36, v37)) != 0
              && (v39 = *(WebCore::InspectorCanvasAgent **)(v38 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v39, (WebCore::CanvasRenderingContext *)(v12 + 8), v23, (uint64_t)v60);
            }
            else
            {
              LOBYTE(v60[0]) = 0;
              v61 = 0;
            }
            v40 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                         + 144))(*(_QWORD *)(v12 + 40));
            if (v40
              && (v42 = WebCore::InspectorInstrumentation::instrumentingAgents(v40, v41)) != 0
              && (v43 = *(WebCore::InspectorCanvasAgent **)(v42 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v43, (WebCore::CanvasRenderingContext *)(v12 + 8), v19, (uint64_t)&v62);
            }
            else
            {
              LOBYTE(v62) = 0;
              v63 = 0;
            }
            v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                         + 144))(*(_QWORD *)(v12 + 40));
            if (v44
              && (v46 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, v45)) != 0
              && (v47 = *(WebCore::InspectorCanvasAgent **)(v46 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v47, (WebCore::CanvasRenderingContext *)(v12 + 8), v22, (uint64_t)&v64);
            }
            else
            {
              LOBYTE(v64) = 0;
              v65 = 0;
            }
            v57[0] = v60;
            v57[1] = 3;
            v48 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                         + 144))(*(_QWORD *)(v12 + 40));
            if (v48)
            {
              v50 = WebCore::InspectorInstrumentation::instrumentingAgents(v48, v49);
              if (v50)
              {
                v51 = *(_QWORD *)(v50 + 96);
                if (v51)
                  WebCore::InspectorCanvasAgent::recordAction(v51, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v58, v57);
              }
            }
            if (v65)
            {
              v52 = v64;
              v64 = 0;
              if (v52)
              {
                if (*v52 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v52;
              }
            }
            if (v63)
            {
              v53 = v62;
              v62 = 0;
              if (v53)
              {
                if (*v53 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v53;
              }
            }
            if (v61)
            {
              v54 = (_DWORD *)v60[0];
              v60[0] = 0;
              if (v54)
              {
                if (*v54 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v54;
              }
            }
            v55 = v58;
            v58 = 0;
            if (v55)
            {
              if (*(_DWORD *)v55 == 2)
                WTF::StringImpl::destroy(v55, v49);
              else
                *(_DWORD *)v55 -= 2;
            }
          }
          else
          {
            v23 = v59[0];
          }
          WebCore::WebGLRenderingContextBase::drawArrays(v12, v23, v19, v22, v13, v14, v15, v16);
          return 10;
        }
      }
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_drawElements(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  JSC::VM *v14;
  uint64_t v15;
  __n128 v16;
  __n128 v17;
  __n128 v18;
  __n128 v19;
  unint64_t v20;
  uint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unint64_t v28;
  unsigned int v29;
  unsigned int v30;
  JSValue v31;
  unsigned int v32;
  WebCore::InspectorInstrumentation *v33;
  WebCore::ScriptExecutionContext *v34;
  uint64_t v35;
  WebCore::InspectorCanvasAgent *v36;
  WebCore::InspectorInstrumentation *v37;
  WebCore::ScriptExecutionContext *v38;
  uint64_t v39;
  WebCore::InspectorCanvasAgent *v40;
  unsigned int v41;
  WebCore::InspectorInstrumentation *v42;
  WebCore::ScriptExecutionContext *v43;
  uint64_t v44;
  WebCore::InspectorCanvasAgent *v45;
  WebCore::InspectorInstrumentation *v46;
  WebCore::ScriptExecutionContext *v47;
  uint64_t v48;
  WebCore::InspectorCanvasAgent *v49;
  WebCore::InspectorInstrumentation *v50;
  WebCore::ScriptExecutionContext *v51;
  uint64_t v52;
  uint64_t v53;
  _DWORD *v54;
  _DWORD *v55;
  _DWORD *v56;
  _DWORD *v57;
  WTF::StringImpl *v58;
  unint64_t v59;
  JSC::VM *v60;
  _QWORD v61[2];
  WTF::StringImpl *v62;
  unsigned int v63[2];
  unsigned int v64[2];
  _QWORD v65[2];
  char v66;
  _DWORD *v67;
  char v68;
  _DWORD *v69;
  char v70;
  _DWORD *v71;
  char v72;
  uint64_t v73;

  v73 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v60 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v60, "WebGLRenderingContext", "drawElements");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v60, "WebGLRenderingContext", "drawElements");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v31.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v31);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v64);
  if (v64[1])
    return 0;
  v13 = *((_QWORD *)a2 + 7);
  v65[0] = v13;
  v14 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v13 < 0xFFFE000000000000)
  {
    v25 = v13 - 0x2000000000000;
    if (v13 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v65, this);
      v25 = v59;
    }
    v26 = (v25 >> 52) & 0x7FF;
    v27 = v26 - 1023;
    v28 = v25 >> (51 - (v25 >> 52));
    if (v26 > 0x433)
      LODWORD(v28) = v25 << ((v25 >> 52) - 51);
    if (v26 >= 0x41F)
      v29 = v28;
    else
      v29 = (((1 << ((v25 >> 52) + 1)) - 1) & v28) + (1 << ((v25 >> 52) + 1));
    if ((v25 & 0x8000000000000000) == 0)
      v30 = v29;
    else
      v30 = -v29;
    if (v27 <= 0x53)
      v15 = v30;
    else
      v15 = 0;
  }
  else
  {
    v15 = v13;
  }
  if (*((_DWORD *)v14 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v14))
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 8), v63);
  if (v63[1])
    return 0;
  v20 = *((_QWORD *)a2 + 9);
  v65[0] = v20;
  if (v20 < 0xFFFE000000000000)
  {
    v22 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v65, this);
      v23 = v16.n128_f64[0];
    }
    else
    {
      *(_QWORD *)&v23 = v20 - 0x2000000000000;
    }
    if (*((_DWORD *)v22 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v22) & 1) != 0)
      return 0;
    v16.n128_f64[0] = fabs(v23);
    v17.n128_u64[0] = 0x7FF0000000000000;
    if (v16.n128_f64[0] == INFINITY)
    {
      v21 = 0;
    }
    else
    {
      v16.n128_f64[0] = fmod(trunc(v23), 1.84467441e19);
      v17.n128_f64[0] = -v16.n128_f64[0];
      if (v16.n128_f64[0] < 0.0)
        v21 = -(uint64_t)(unint64_t)-v16.n128_f64[0];
      else
        v21 = (unint64_t)v16.n128_f64[0];
    }
  }
  else
  {
    v21 = (int)v20;
  }
  if (*(_BYTE *)(v12 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v62 = (WTF::StringImpl *)v65[0];
    v32 = v64[0];
    v33 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v33
      && (v35 = WebCore::InspectorInstrumentation::instrumentingAgents(v33, v34)) != 0
      && (v36 = *(WebCore::InspectorCanvasAgent **)(v35 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v36, (WebCore::CanvasRenderingContext *)(v12 + 8), v32, (uint64_t)v65);
    }
    else
    {
      LOBYTE(v65[0]) = 0;
      v66 = 0;
    }
    v37 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v37
      && (v39 = WebCore::InspectorInstrumentation::instrumentingAgents(v37, v38)) != 0
      && (v40 = *(WebCore::InspectorCanvasAgent **)(v39 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v40, (WebCore::CanvasRenderingContext *)(v12 + 8), v15, (uint64_t)&v67);
    }
    else
    {
      LOBYTE(v67) = 0;
      v68 = 0;
    }
    v41 = v63[0];
    v42 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v42
      && (v44 = WebCore::InspectorInstrumentation::instrumentingAgents(v42, v43)) != 0
      && (v45 = *(WebCore::InspectorCanvasAgent **)(v44 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v45, (WebCore::CanvasRenderingContext *)(v12 + 8), v41, (uint64_t)&v69);
    }
    else
    {
      LOBYTE(v69) = 0;
      v70 = 0;
    }
    v46 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v46
      && (v48 = WebCore::InspectorInstrumentation::instrumentingAgents(v46, v47)) != 0
      && (v49 = *(WebCore::InspectorCanvasAgent **)(v48 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v49, (WebCore::CanvasRenderingContext *)(v12 + 8), v21, (uint64_t)&v71);
    }
    else
    {
      LOBYTE(v71) = 0;
      v72 = 0;
    }
    v61[0] = v65;
    v61[1] = 4;
    v50 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v50)
    {
      v52 = WebCore::InspectorInstrumentation::instrumentingAgents(v50, v51);
      if (v52)
      {
        v53 = *(_QWORD *)(v52 + 96);
        if (v53)
          WebCore::InspectorCanvasAgent::recordAction(v53, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v62, v61);
      }
    }
    if (v72)
    {
      v54 = v71;
      v71 = 0;
      if (v54)
      {
        if (*v54 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v54;
      }
    }
    if (v70)
    {
      v55 = v69;
      v69 = 0;
      if (v55)
      {
        if (*v55 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v55;
      }
    }
    if (v68)
    {
      v56 = v67;
      v67 = 0;
      if (v56)
      {
        if (*v56 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v56;
      }
    }
    if (v66)
    {
      v57 = (_DWORD *)v65[0];
      v65[0] = 0;
      if (v57)
      {
        if (*v57 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v57;
      }
    }
    v58 = v62;
    v62 = 0;
    if (v58)
    {
      if (*(_DWORD *)v58 == 2)
        WTF::StringImpl::destroy(v58, v51);
      else
        *(_DWORD *)v58 -= 2;
    }
  }
  WebCore::WebGLRenderingContextBase::drawElements(v12, v64[0], v15, v63[0], v21, v16, v17, v18, v19);
  return 10;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_enable(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  JSValue v14;
  WebCore::InspectorInstrumentation *v15;
  WebCore::ScriptExecutionContext *v16;
  uint64_t v17;
  WebCore::InspectorCanvasAgent *v18;
  WebCore::InspectorInstrumentation *v19;
  WebCore::ScriptExecutionContext *v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  WTF::StringImpl *v24;
  JSC::VM *v25;
  _QWORD v26[2];
  WTF::StringImpl *v27;
  _DWORD v28[2];
  _QWORD v29[2];
  char v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "WebGLRenderingContext", "enable");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "WebGLRenderingContext", "enable");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v14.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v14);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v28);
    if (v28[1])
    {
      return 0;
    }
    else
    {
      if (*(_BYTE *)(v11 + 33))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v12 = v28[0];
        v15 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v15
          && (v17 = WebCore::InspectorInstrumentation::instrumentingAgents(v15, v16)) != 0
          && (v18 = *(WebCore::InspectorCanvasAgent **)(v17 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v18, (WebCore::CanvasRenderingContext *)(v11 + 8), v12, (uint64_t)v29);
        }
        else
        {
          LOBYTE(v29[0]) = 0;
          v30 = 0;
        }
        v26[0] = v29;
        v26[1] = 1;
        v19 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v19)
        {
          v21 = WebCore::InspectorInstrumentation::instrumentingAgents(v19, v20);
          if (v21)
          {
            v22 = *(_QWORD *)(v21 + 96);
            if (v22)
              WebCore::InspectorCanvasAgent::recordAction(v22, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v27, v26);
          }
        }
        if (v30)
        {
          v23 = (_DWORD *)v29[0];
          v29[0] = 0;
          if (v23)
          {
            if (*v23 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v23;
          }
        }
        v24 = v27;
        v27 = 0;
        if (v24)
        {
          if (*(_DWORD *)v24 == 2)
            WTF::StringImpl::destroy(v24, v20);
          else
            *(_DWORD *)v24 -= 2;
        }
      }
      else
      {
        v12 = v28[0];
      }
      if (!*(_BYTE *)(v11 + 364)
        && (*(unsigned int (**)(uint64_t, const char *, uint64_t, uint64_t))(*(_QWORD *)v11 + 312))(v11, "enable", 7, v12))
      {
        if ((_DWORD)v12 == 35977)
        {
          *(_BYTE *)(v11 + 425) = 1;
        }
        else if ((_DWORD)v12 == 3089)
        {
          *(_BYTE *)(v11 + 404) = 1;
        }
        (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(v11 + 88) + 360))(*(_QWORD *)(v11 + 88), v12);
      }
      return 10;
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_enableVertexAttribArray(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t (*v18)();
  JSValue v19;
  WebCore::InspectorInstrumentation *v20;
  WebCore::ScriptExecutionContext *v21;
  uint64_t v22;
  WebCore::InspectorCanvasAgent *v23;
  WebCore::InspectorInstrumentation *v24;
  WebCore::ScriptExecutionContext *v25;
  uint64_t v26;
  uint64_t v27;
  _DWORD *v28;
  JSC::VM *v29;
  _QWORD v30[2];
  WTF::StringImpl *v31;
  _DWORD v32[2];
  _QWORD v33[2];
  char v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v29 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v29, "WebGLRenderingContext", "enableVertexAttribArray");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v29, "WebGLRenderingContext", "enableVertexAttribArray");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v19);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    result = WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v32);
    if (v32[1])
    {
      return 0;
    }
    else
    {
      if (*(_BYTE *)(v11 + 33))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v13 = v32[0];
        v20 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v20
          && (v22 = WebCore::InspectorInstrumentation::instrumentingAgents(v20, v21)) != 0
          && (v23 = *(WebCore::InspectorCanvasAgent **)(v22 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v23, (WebCore::CanvasRenderingContext *)(v11 + 8), v13, (uint64_t)v33);
        }
        else
        {
          LOBYTE(v33[0]) = 0;
          v34 = 0;
        }
        v30[0] = v33;
        v30[1] = 1;
        v24 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v24)
        {
          v26 = WebCore::InspectorInstrumentation::instrumentingAgents(v24, v25);
          if (v26)
          {
            v27 = *(_QWORD *)(v26 + 96);
            if (v27)
              WebCore::InspectorCanvasAgent::recordAction(v27, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v31, v30);
          }
        }
        if (v34)
        {
          v28 = (_DWORD *)v33[0];
          v33[0] = 0;
          if (v28)
          {
            if (*v28 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v28;
          }
        }
        result = (uint64_t)v31;
        v31 = 0;
        if (result)
        {
          if (*(_DWORD *)result == 2)
            result = WTF::StringImpl::destroy((WTF::StringImpl *)result, v25);
          else
            *(_DWORD *)result -= 2;
        }
      }
      else
      {
        v13 = v32[0];
      }
      if (*(_BYTE *)(v11 + 364))
        return 10;
      if (*(_DWORD *)(v11 + 164) <= v13)
      {
        WebCore::WebGLRenderingContextBase::synthesizeGLError((WTF::StringImpl *)v11, 1281, (uint64_t)"enableVertexAttribArray", 24, (uint64_t)"index out of range", 19);
        return 10;
      }
      v14 = *(_QWORD *)(v11 + 144);
      if (*(unsigned int *)(v14 + 68) > (unint64_t)(int)v13)
      {
        v15 = *(_QWORD *)(v14 + 56);
        v16 = (_BYTE *)(v15 + 56 * (int)v13);
        if (!*v16)
        {
          *v16 = 1;
          v17 = *(_QWORD *)(v15 + 56 * (int)v13 + 8);
          v18 = WTF::RefPtr<WebCore::WebGLBuffer,WTF::RawPtrTraits<WebCore::WebGLBuffer>,WTF::DefaultRefDerefTraits<WebCore::WebGLBuffer>>::unspecifiedBoolTypeInstance;
          if (!v17)
            v18 = 0;
          if (v18 && *(_DWORD *)(v17 + 24))
          {
            if (*(_BYTE *)(v14 + 73))
              *(_BYTE *)(v14 + 73) = 0;
          }
          else
          {
            *(_WORD *)(v14 + 72) = 256;
          }
        }
        (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(v11 + 88) + 368))(*(_QWORD *)(v11 + 88), v13);
        return 10;
      }
      __break(0xC471u);
    }
  }
  return result;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_finish(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::InspectorInstrumentation *v11;
  WebCore::ScriptExecutionContext *v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  _QWORD v17[2];
  WTF::StringImpl *v18;

  v3 = *((_QWORD *)a2 + 5);
  v16 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "WebGLRenderingContext", "finish");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSWebGLRenderingContext::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "WebGLRenderingContext", "finish");
  v9 = *(_QWORD *)(v3 + 24);
  if (*(_BYTE *)(v9 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v17[0] = 0;
    v17[1] = 0;
    v11 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 40) + 144))(*(_QWORD *)(v9 + 40));
    if (v11)
    {
      v13 = WebCore::InspectorInstrumentation::instrumentingAgents(v11, v12);
      if (v13)
      {
        v14 = *(_QWORD *)(v13 + 96);
        if (v14)
          WebCore::InspectorCanvasAgent::recordAction(v14, (WebCore::CanvasRenderingContext *)(v9 + 8), (const WTF::StringImpl *)&v18, v17);
      }
    }
    v15 = v18;
    v18 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v12);
      else
        *(_DWORD *)v15 -= 2;
    }
  }
  if (!*(_BYTE *)(v9 + 364))
    (*(void (**)(_QWORD))(**(_QWORD **)(v9 + 88) + 376))(*(_QWORD *)(v9 + 88));
  return 10;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_flush(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::InspectorInstrumentation *v11;
  WebCore::ScriptExecutionContext *v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  _QWORD v17[2];
  WTF::StringImpl *v18;

  v3 = *((_QWORD *)a2 + 5);
  v16 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "WebGLRenderingContext", "flush");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSWebGLRenderingContext::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "WebGLRenderingContext", "flush");
  v9 = *(_QWORD *)(v3 + 24);
  if (*(_BYTE *)(v9 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v17[0] = 0;
    v17[1] = 0;
    v11 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 40) + 144))(*(_QWORD *)(v9 + 40));
    if (v11)
    {
      v13 = WebCore::InspectorInstrumentation::instrumentingAgents(v11, v12);
      if (v13)
      {
        v14 = *(_QWORD *)(v13 + 96);
        if (v14)
          WebCore::InspectorCanvasAgent::recordAction(v14, (WebCore::CanvasRenderingContext *)(v9 + 8), (const WTF::StringImpl *)&v18, v17);
      }
    }
    v15 = v18;
    v18 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v12);
      else
        *(_DWORD *)v15 -= 2;
    }
  }
  if (!*(_BYTE *)(v9 + 364))
    (*(void (**)(_QWORD))(**(_QWORD **)(v9 + 88) + 384))(*(_QWORD *)(v9 + 88));
  return 10;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_framebufferRenderbuffer(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::WebGLRenderbuffer *v15;
  uint64_t v16;
  _BOOL4 v17;
  char **v18;
  BOOL v19;
  JSValue v22;
  unsigned int v23;
  WebCore::InspectorInstrumentation *v24;
  WebCore::ScriptExecutionContext *v25;
  uint64_t v26;
  WebCore::InspectorCanvasAgent *v27;
  unsigned int v28;
  WebCore::InspectorInstrumentation *v29;
  WebCore::ScriptExecutionContext *v30;
  uint64_t v31;
  WebCore::InspectorCanvasAgent *v32;
  unsigned int v33;
  WebCore::InspectorInstrumentation *v34;
  WebCore::ScriptExecutionContext *v35;
  uint64_t v36;
  WebCore::InspectorCanvasAgent *v37;
  WebCore::InspectorInstrumentation *v38;
  WebCore::ScriptExecutionContext *v39;
  uint64_t v40;
  uint64_t v41;
  WebCore::InspectorInstrumentation *v42;
  WebCore::ScriptExecutionContext *v43;
  uint64_t v44;
  uint64_t v45;
  _DWORD *v46;
  _DWORD *v47;
  _DWORD *v48;
  _DWORD *v49;
  WTF::StringImpl *v50;
  JSC::VM *v51;
  _QWORD v52[2];
  WTF::StringImpl *v53;
  unsigned int v54[2];
  unsigned int v55[2];
  unsigned int v56[2];
  _QWORD v57[2];
  char v58;
  _DWORD *v59;
  char v60;
  _DWORD *v61;
  char v62;
  _DWORD *v63;
  char v64;
  uint64_t v65;

  v65 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v51 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v51, "WebGLRenderingContext", "framebufferRenderbuffer");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v51, "WebGLRenderingContext", "framebufferRenderbuffer");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v22.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v22);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v56);
    if (v56[1])
    {
      return 0;
    }
    else
    {
      WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v55);
      if (v55[1])
      {
        return 0;
      }
      else
      {
        WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 8), v54);
        if (v54[1])
        {
          return 0;
        }
        else
        {
          v14 = *((_QWORD *)a2 + 9);
          if ((v14 & 0xFFFFFFFFFFFFFFF7) == 2)
          {
            v15 = 0;
          }
          else
          {
            v57[0] = *((_QWORD *)this + 7);
            if ((v14 & 0xFFFE000000000002) != 0)
              goto LABEL_29;
            v16 = *(unsigned int *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C);
            v17 = *(_DWORD *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C) != 0;
            v18 = (char **)(16 * v16);
            if ((_DWORD)v16)
              v19 = v18 == &WebCore::JSWebGLRenderbuffer::s_info;
            else
              v19 = 1;
            if (!v19)
            {
              do
              {
                v18 = (char **)v18[2];
                v17 = v18 != 0;
              }
              while (v18 != &WebCore::JSWebGLRenderbuffer::s_info && v18 != 0);
            }
            if (!v17 || (v15 = *(WebCore::WebGLRenderbuffer **)(v14 + 24)) == 0)
            {
LABEL_29:
              WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v57, 3, "renderbuffer", 13, "WebGLRenderingContext", 22, v13, "framebufferRenderbuffer", 24, "WebGLRenderbuffer", 18);
              return 0;
            }
          }
          if (*(_BYTE *)(v12 + 33))
          {
            WTF::StringImpl::createWithoutCopyingNonEmpty();
            v53 = (WTF::StringImpl *)v57[0];
            v23 = v56[0];
            v24 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                         + 144))(*(_QWORD *)(v12 + 40));
            if (v24
              && (v26 = WebCore::InspectorInstrumentation::instrumentingAgents(v24, v25)) != 0
              && (v27 = *(WebCore::InspectorCanvasAgent **)(v26 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v27, (WebCore::CanvasRenderingContext *)(v12 + 8), v23, (uint64_t)v57);
            }
            else
            {
              LOBYTE(v57[0]) = 0;
              v58 = 0;
            }
            v28 = v55[0];
            v29 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                         + 144))(*(_QWORD *)(v12 + 40));
            if (v29
              && (v31 = WebCore::InspectorInstrumentation::instrumentingAgents(v29, v30)) != 0
              && (v32 = *(WebCore::InspectorCanvasAgent **)(v31 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v32, (WebCore::CanvasRenderingContext *)(v12 + 8), v28, (uint64_t)&v59);
            }
            else
            {
              LOBYTE(v59) = 0;
              v60 = 0;
            }
            v33 = v54[0];
            v34 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                         + 144))(*(_QWORD *)(v12 + 40));
            if (v34
              && (v36 = WebCore::InspectorInstrumentation::instrumentingAgents(v34, v35)) != 0
              && (v37 = *(WebCore::InspectorCanvasAgent **)(v36 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v37, (WebCore::CanvasRenderingContext *)(v12 + 8), v33, (uint64_t)&v61);
            }
            else
            {
              LOBYTE(v61) = 0;
              v62 = 0;
            }
            v38 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                         + 144))(*(_QWORD *)(v12 + 40));
            if (v38
              && (v40 = WebCore::InspectorInstrumentation::instrumentingAgents(v38, v39)) != 0
              && (v41 = *(_QWORD *)(v40 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v41, (WebCore::CanvasRenderingContext *)(v12 + 8), v15, (uint64_t)&v63);
            }
            else
            {
              LOBYTE(v63) = 0;
              v64 = 0;
            }
            v52[0] = v57;
            v52[1] = 4;
            v42 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                         + 144))(*(_QWORD *)(v12 + 40));
            if (v42)
            {
              v44 = WebCore::InspectorInstrumentation::instrumentingAgents(v42, v43);
              if (v44)
              {
                v45 = *(_QWORD *)(v44 + 96);
                if (v45)
                  WebCore::InspectorCanvasAgent::recordAction(v45, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v53, v52);
              }
            }
            if (v64)
            {
              v46 = v63;
              v63 = 0;
              if (v46)
              {
                if (*v46 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v46;
              }
            }
            if (v62)
            {
              v47 = v61;
              v61 = 0;
              if (v47)
              {
                if (*v47 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v47;
              }
            }
            if (v60)
            {
              v48 = v59;
              v59 = 0;
              if (v48)
              {
                if (*v48 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v48;
              }
            }
            if (v58)
            {
              v49 = (_DWORD *)v57[0];
              v57[0] = 0;
              if (v49)
              {
                if (*v49 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v49;
              }
            }
            v50 = v53;
            v53 = 0;
            if (v50)
            {
              if (*(_DWORD *)v50 == 2)
                WTF::StringImpl::destroy(v50, v43);
              else
                *(_DWORD *)v50 -= 2;
            }
          }
          WebCore::WebGLRenderingContextBase::framebufferRenderbuffer((WTF::StringImpl *)v12, v56[0], v55[0], v54[0], v15);
          return 10;
        }
      }
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_framebufferTexture2D(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  JSC::VM *v15;
  WebCore::WebGLTexture *v16;
  uint64_t v17;
  _BOOL4 v18;
  char **v19;
  BOOL v20;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unsigned int v28;
  JSValue v29;
  unsigned int v30;
  WebCore::InspectorInstrumentation *v31;
  WebCore::ScriptExecutionContext *v32;
  uint64_t v33;
  WebCore::InspectorCanvasAgent *v34;
  unsigned int v35;
  WebCore::InspectorInstrumentation *v36;
  WebCore::ScriptExecutionContext *v37;
  uint64_t v38;
  WebCore::InspectorCanvasAgent *v39;
  unsigned int v40;
  WebCore::InspectorInstrumentation *v41;
  WebCore::ScriptExecutionContext *v42;
  uint64_t v43;
  WebCore::InspectorCanvasAgent *v44;
  WebCore::InspectorInstrumentation *v45;
  WebCore::ScriptExecutionContext *v46;
  uint64_t v47;
  uint64_t v48;
  WebCore::InspectorInstrumentation *v49;
  WebCore::ScriptExecutionContext *v50;
  uint64_t v51;
  WebCore::InspectorCanvasAgent *v52;
  WebCore::InspectorInstrumentation *v53;
  WebCore::ScriptExecutionContext *v54;
  uint64_t v55;
  uint64_t v56;
  _DWORD *v57;
  _DWORD *v58;
  _DWORD *v59;
  _DWORD *v60;
  _DWORD *v61;
  WTF::StringImpl *v62;
  JSC::VM *v63;
  unint64_t v64;
  JSC::VM *v65;
  _QWORD v66[2];
  WTF::StringImpl *v67;
  unsigned int v68[2];
  unsigned int v69[2];
  unsigned int v70[2];
  _QWORD v71[2];
  char v72;
  _DWORD *v73;
  char v74;
  _DWORD *v75;
  char v76;
  _DWORD *v77;
  char v78;
  _DWORD *v79;
  char v80;
  uint64_t v81;

  v81 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v65 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v65, "WebGLRenderingContext", "framebufferTexture2D");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v65, "WebGLRenderingContext", "framebufferTexture2D");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 4)
  {
    v29.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v29);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v70);
    if (v70[1])
    {
      return 0;
    }
    else
    {
      WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v69);
      if (v69[1])
      {
        return 0;
      }
      else
      {
        WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 8), v68);
        if (v68[1])
        {
          return 0;
        }
        else
        {
          v14 = *((_QWORD *)a2 + 9);
          v15 = (JSC::VM *)*((_QWORD *)this + 7);
          if ((v14 & 0xFFFFFFFFFFFFFFF7) == 2)
          {
            v16 = 0;
          }
          else
          {
            v71[0] = *((_QWORD *)this + 7);
            if ((v14 & 0xFFFE000000000002) != 0)
              goto LABEL_29;
            v17 = *(unsigned int *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C);
            v18 = *(_DWORD *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C) != 0;
            v19 = (char **)(16 * v17);
            if ((_DWORD)v17)
              v20 = v19 == &WebCore::JSWebGLTexture::s_info;
            else
              v20 = 1;
            if (!v20)
            {
              do
              {
                v19 = (char **)v19[2];
                v18 = v19 != 0;
              }
              while (v19 != &WebCore::JSWebGLTexture::s_info && v19 != 0);
            }
            if (!v18 || (v16 = *(WebCore::WebGLTexture **)(v14 + 24)) == 0)
            {
LABEL_29:
              WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v71, 3, "texture", 8, "WebGLRenderingContext", 22, v13, "framebufferTexture2D", 21, "WebGLTexture", 13);
              return 0;
            }
          }
          v23 = *((_QWORD *)a2 + 10);
          v71[0] = v23;
          if (v23 < 0xFFFE000000000000)
          {
            v25 = v23 - 0x2000000000000;
            if (v23 - 0x2000000000000 >= 0xFFFC000000000000)
            {
              v63 = v15;
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v71, this);
              v15 = v63;
              v25 = v64;
            }
            v26 = (v25 >> 52) & 0x7FF;
            if ((v26 - 1023) <= 0x53)
            {
              v27 = v25 >> (51 - (v25 >> 52));
              if (v26 > 0x433)
                LODWORD(v27) = v25 << ((v25 >> 52) - 51);
              if (v26 >= 0x41F)
                v28 = v27;
              else
                v28 = (((1 << ((v25 >> 52) + 1)) - 1) & v27) + (1 << ((v25 >> 52) + 1));
              if ((v25 & 0x8000000000000000) == 0)
                v24 = v28;
              else
                v24 = -v28;
            }
            else
            {
              v24 = 0;
            }
          }
          else
          {
            v24 = v23;
          }
          if (*((_DWORD *)v15 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v15))
          {
            return 0;
          }
          else
          {
            if (*(_BYTE *)(v12 + 33))
            {
              WTF::StringImpl::createWithoutCopyingNonEmpty();
              v67 = (WTF::StringImpl *)v71[0];
              v30 = v70[0];
              v31 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v31
                && (v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v31, v32)) != 0
                && (v34 = *(WebCore::InspectorCanvasAgent **)(v33 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v34, (WebCore::CanvasRenderingContext *)(v12 + 8), v30, (uint64_t)v71);
              }
              else
              {
                LOBYTE(v71[0]) = 0;
                v72 = 0;
              }
              v35 = v69[0];
              v36 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v36
                && (v38 = WebCore::InspectorInstrumentation::instrumentingAgents(v36, v37)) != 0
                && (v39 = *(WebCore::InspectorCanvasAgent **)(v38 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v39, (WebCore::CanvasRenderingContext *)(v12 + 8), v35, (uint64_t)&v73);
              }
              else
              {
                LOBYTE(v73) = 0;
                v74 = 0;
              }
              v40 = v68[0];
              v41 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v41
                && (v43 = WebCore::InspectorInstrumentation::instrumentingAgents(v41, v42)) != 0
                && (v44 = *(WebCore::InspectorCanvasAgent **)(v43 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v44, (WebCore::CanvasRenderingContext *)(v12 + 8), v40, (uint64_t)&v75);
              }
              else
              {
                LOBYTE(v75) = 0;
                v76 = 0;
              }
              v45 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v45
                && (v47 = WebCore::InspectorInstrumentation::instrumentingAgents(v45, v46)) != 0
                && (v48 = *(_QWORD *)(v47 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v48, (WebCore::CanvasRenderingContext *)(v12 + 8), v16, (uint64_t)&v77);
              }
              else
              {
                LOBYTE(v77) = 0;
                v78 = 0;
              }
              v49 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v49
                && (v51 = WebCore::InspectorInstrumentation::instrumentingAgents(v49, v50)) != 0
                && (v52 = *(WebCore::InspectorCanvasAgent **)(v51 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v52, (WebCore::CanvasRenderingContext *)(v12 + 8), v24, (uint64_t)&v79);
              }
              else
              {
                LOBYTE(v79) = 0;
                v80 = 0;
              }
              v66[0] = v71;
              v66[1] = 5;
              v53 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v53)
              {
                v55 = WebCore::InspectorInstrumentation::instrumentingAgents(v53, v54);
                if (v55)
                {
                  v56 = *(_QWORD *)(v55 + 96);
                  if (v56)
                    WebCore::InspectorCanvasAgent::recordAction(v56, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v67, v66);
                }
              }
              if (v80)
              {
                v57 = v79;
                v79 = 0;
                if (v57)
                {
                  if (*v57 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v57;
                }
              }
              if (v78)
              {
                v58 = v77;
                v77 = 0;
                if (v58)
                {
                  if (*v58 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v58;
                }
              }
              if (v76)
              {
                v59 = v75;
                v75 = 0;
                if (v59)
                {
                  if (*v59 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v59;
                }
              }
              if (v74)
              {
                v60 = v73;
                v73 = 0;
                if (v60)
                {
                  if (*v60 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v60;
                }
              }
              if (v72)
              {
                v61 = (_DWORD *)v71[0];
                v71[0] = 0;
                if (v61)
                {
                  if (*v61 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v61;
                }
              }
              v62 = v67;
              v67 = 0;
              if (v62)
              {
                if (*(_DWORD *)v62 == 2)
                  WTF::StringImpl::destroy(v62, v54);
                else
                  *(_DWORD *)v62 -= 2;
              }
            }
            WebCore::WebGLRenderingContextBase::framebufferTexture2D((WTF::StringImpl *)v12, v70[0], v69[0], v68[0], v16, v24);
            return 10;
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_frontFace(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  JSValue v13;
  unsigned int v14;
  WebCore::InspectorInstrumentation *v15;
  WebCore::ScriptExecutionContext *v16;
  uint64_t v17;
  WebCore::InspectorCanvasAgent *v18;
  WebCore::InspectorInstrumentation *v19;
  WebCore::ScriptExecutionContext *v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  WTF::StringImpl *v24;
  JSC::VM *v25;
  _QWORD v26[2];
  WTF::StringImpl *v27;
  _DWORD v28[2];
  _QWORD v29[2];
  char v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "WebGLRenderingContext", "frontFace");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "WebGLRenderingContext", "frontFace");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v28);
    if (v28[1])
    {
      return 0;
    }
    else
    {
      if (*(_BYTE *)(v11 + 33))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v14 = v28[0];
        v15 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v15
          && (v17 = WebCore::InspectorInstrumentation::instrumentingAgents(v15, v16)) != 0
          && (v18 = *(WebCore::InspectorCanvasAgent **)(v17 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v18, (WebCore::CanvasRenderingContext *)(v11 + 8), v14, (uint64_t)v29);
        }
        else
        {
          LOBYTE(v29[0]) = 0;
          v30 = 0;
        }
        v26[0] = v29;
        v26[1] = 1;
        v19 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v19)
        {
          v21 = WebCore::InspectorInstrumentation::instrumentingAgents(v19, v20);
          if (v21)
          {
            v22 = *(_QWORD *)(v21 + 96);
            if (v22)
              WebCore::InspectorCanvasAgent::recordAction(v22, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v27, v26);
          }
        }
        if (v30)
        {
          v23 = (_DWORD *)v29[0];
          v29[0] = 0;
          if (v23)
          {
            if (*v23 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v23;
          }
        }
        v24 = v27;
        v27 = 0;
        if (v24)
        {
          if (*(_DWORD *)v24 == 2)
            WTF::StringImpl::destroy(v24, v20);
          else
            *(_DWORD *)v24 -= 2;
        }
      }
      if (!*(_BYTE *)(v11 + 364))
        (*(void (**)(_QWORD, _QWORD))(**(_QWORD **)(v11 + 88) + 408))(*(_QWORD *)(v11 + 88), v28[0]);
      return 10;
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_generateMipmap(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  JSValue v14;
  WebCore::InspectorInstrumentation *v15;
  WebCore::ScriptExecutionContext *v16;
  uint64_t v17;
  WebCore::InspectorCanvasAgent *v18;
  WebCore::InspectorInstrumentation *v19;
  WebCore::ScriptExecutionContext *v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  WTF::StringImpl *v24;
  JSC::VM *v25;
  _QWORD v26[2];
  WTF::StringImpl *v27;
  _DWORD v28[2];
  _QWORD v29[2];
  char v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "WebGLRenderingContext", "generateMipmap");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "WebGLRenderingContext", "generateMipmap");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v14.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v14);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v28);
    if (v28[1])
    {
      return 0;
    }
    else
    {
      if (*(_BYTE *)(v11 + 33))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v12 = v28[0];
        v15 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v15
          && (v17 = WebCore::InspectorInstrumentation::instrumentingAgents(v15, v16)) != 0
          && (v18 = *(WebCore::InspectorCanvasAgent **)(v17 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v18, (WebCore::CanvasRenderingContext *)(v11 + 8), v12, (uint64_t)v29);
        }
        else
        {
          LOBYTE(v29[0]) = 0;
          v30 = 0;
        }
        v26[0] = v29;
        v26[1] = 1;
        v19 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v19)
        {
          v21 = WebCore::InspectorInstrumentation::instrumentingAgents(v19, v20);
          if (v21)
          {
            v22 = *(_QWORD *)(v21 + 96);
            if (v22)
              WebCore::InspectorCanvasAgent::recordAction(v22, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v27, v26);
          }
        }
        if (v30)
        {
          v23 = (_DWORD *)v29[0];
          v29[0] = 0;
          if (v23)
          {
            if (*v23 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v23;
          }
        }
        v24 = v27;
        v27 = 0;
        if (v24)
        {
          if (*(_DWORD *)v24 == 2)
            WTF::StringImpl::destroy(v24, v20);
          else
            *(_DWORD *)v24 -= 2;
        }
      }
      else
      {
        v12 = v28[0];
      }
      if (!*(_BYTE *)(v11 + 364))
      {
        WebCore::WebGLRenderingContextBase::validateTextureBinding((WTF::StringImpl *)v11, (uint64_t)"generateMipmap", 15, v12, v29);
        if (v29[0])
        {
          if (*(_DWORD *)(v29[0] + 8) == 1)
            (*(void (**)(void))(*(_QWORD *)v29[0] + 8))();
          else
            --*(_DWORD *)(v29[0] + 8);
          (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(v11 + 88) + 416))(*(_QWORD *)(v11 + 88), v12);
        }
      }
      return 10;
    }
  }
}

unint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_getActiveAttrib(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  unint64_t v23;
  WebCore::WebGLProgram *v24;
  uint64_t v25;
  uint64_t v26;
  WTF *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v30;
  JSValue v32;
  WebCore::InspectorInstrumentation *v33;
  WebCore::ScriptExecutionContext *v34;
  uint64_t v35;
  uint64_t v36;
  WebCore::InspectorInstrumentation *v37;
  WebCore::ScriptExecutionContext *v38;
  uint64_t v39;
  WebCore::InspectorCanvasAgent *v40;
  WebCore::InspectorInstrumentation *v41;
  WebCore::ScriptExecutionContext *v42;
  uint64_t v43;
  uint64_t v44;
  _DWORD *v45;
  WTF *v46;
  WTF::StringImpl *v47;
  JSC::VM *v48;
  _QWORD v49[2];
  WTF::StringImpl *v50;
  unsigned int v51[2];
  WTF *v52[2];
  char v53;
  _DWORD *v54;
  char v55;
  uint64_t v56;

  v56 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v48 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v48, "WebGLRenderingContext", "getActiveAttrib");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v48, "WebGLRenderingContext", "getActiveAttrib");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v32.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v32);
  }
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  v52[0] = v9;
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_24;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSWebGLProgram::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSWebGLProgram::s_info && v20 != 0);
  }
  if (v19 && (v24 = *(WebCore::WebGLProgram **)(v17 + 24)) != 0)
  {
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v51);
    if (v51[1])
    {
      return 0;
    }
    else
    {
      if (*(_BYTE *)(v16 + 33))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v33 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
        if (v33
          && (v35 = WebCore::InspectorInstrumentation::instrumentingAgents(v33, v34)) != 0
          && (v36 = *(_QWORD *)(v35 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v36, (WTF::StringImpl *)(v16 + 8), (uint64_t)v24, (uint64_t)v52);
        }
        else
        {
          LOBYTE(v52[0]) = 0;
          v53 = 0;
        }
        v26 = v51[0];
        v37 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
        if (v37
          && (v39 = WebCore::InspectorInstrumentation::instrumentingAgents(v37, v38)) != 0
          && (v40 = *(WebCore::InspectorCanvasAgent **)(v39 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v40, (WebCore::CanvasRenderingContext *)(v16 + 8), v26, (uint64_t)&v54);
        }
        else
        {
          LOBYTE(v54) = 0;
          v55 = 0;
        }
        v49[0] = v52;
        v49[1] = 2;
        v41 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
        if (v41)
        {
          v43 = WebCore::InspectorInstrumentation::instrumentingAgents(v41, v42);
          if (v43)
          {
            v44 = *(_QWORD *)(v43 + 96);
            if (v44)
              WebCore::InspectorCanvasAgent::recordAction(v44, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v50, v49);
          }
        }
        if (v55)
        {
          v45 = v54;
          v54 = 0;
          if (v45)
          {
            if (*v45 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v45;
          }
        }
        if (v53)
        {
          v46 = v52[0];
          v52[0] = 0;
          if (v46)
          {
            if (*(_DWORD *)v46 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*(_DWORD *)v46;
          }
        }
        v47 = v50;
        v50 = 0;
        if (v47)
        {
          if (*(_DWORD *)v47 == 2)
            WTF::StringImpl::destroy(v47, v42);
          else
            *(_DWORD *)v47 -= 2;
        }
        v25 = *(_QWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
      }
      else
      {
        v25 = *(_QWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
        v26 = v51[0];
      }
      WebCore::WebGLRenderingContextBase::getActiveAttrib((WTF::StringImpl *)v16, v24, v26, (uint64_t *)v52);
      v27 = v52[0];
      if (v52[0])
      {
        v23 = WebCore::wrap<WebCore::WebGLActiveInfo>((uint64_t)this, v25, v52[0]);
        if (*(_DWORD *)v27 == 1)
        {
          v30 = (WTF::StringImpl *)*((_QWORD *)v27 + 1);
          *((_QWORD *)v27 + 1) = 0;
          if (v30)
          {
            if (*(_DWORD *)v30 == 2)
              WTF::StringImpl::destroy(v30, v28);
            else
              *(_DWORD *)v30 -= 2;
          }
          WTF::fastFree(v27, v28);
        }
        else
        {
          --*(_DWORD *)v27;
        }
      }
      else
      {
        return 2;
      }
    }
  }
  else
  {
LABEL_24:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v52, 0, "program", 8, "WebGLRenderingContext", 22, a8, "getActiveAttrib", 16, "WebGLProgram", 13);
    return 0;
  }
  return v23;
}

unint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_getActiveUniform(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  unint64_t v23;
  WebCore::WebGLProgram *v24;
  uint64_t v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  WTF *v28;
  WTF::StringImpl *v30;
  JSValue v32;
  WebCore::InspectorInstrumentation *v33;
  WebCore::ScriptExecutionContext *v34;
  uint64_t v35;
  uint64_t v36;
  WebCore::InspectorInstrumentation *v37;
  WebCore::ScriptExecutionContext *v38;
  uint64_t v39;
  WebCore::InspectorCanvasAgent *v40;
  WebCore::InspectorInstrumentation *v41;
  WebCore::ScriptExecutionContext *v42;
  uint64_t v43;
  uint64_t v44;
  _DWORD *v45;
  WTF *v46;
  WTF::StringImpl *v47;
  JSC::VM *v48;
  _QWORD v49[2];
  WTF::StringImpl *v50;
  unsigned int v51[2];
  WTF *v52[2];
  char v53;
  _DWORD *v54;
  char v55;
  uint64_t v56;

  v56 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v48 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v48, "WebGLRenderingContext", "getActiveUniform");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v48, "WebGLRenderingContext", "getActiveUniform");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v32.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v32);
  }
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  v52[0] = v9;
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_24;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSWebGLProgram::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSWebGLProgram::s_info && v20 != 0);
  }
  if (v19 && (v24 = *(WebCore::WebGLProgram **)(v17 + 24)) != 0)
  {
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v51);
    if (v51[1])
    {
      return 0;
    }
    else
    {
      if (*(_BYTE *)(v16 + 33))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v33 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
        if (v33
          && (v35 = WebCore::InspectorInstrumentation::instrumentingAgents(v33, v34)) != 0
          && (v36 = *(_QWORD *)(v35 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v36, (WTF::StringImpl *)(v16 + 8), (uint64_t)v24, (uint64_t)v52);
        }
        else
        {
          LOBYTE(v52[0]) = 0;
          v53 = 0;
        }
        v26 = v51[0];
        v37 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
        if (v37
          && (v39 = WebCore::InspectorInstrumentation::instrumentingAgents(v37, v38)) != 0
          && (v40 = *(WebCore::InspectorCanvasAgent **)(v39 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v40, (WebCore::CanvasRenderingContext *)(v16 + 8), v26, (uint64_t)&v54);
        }
        else
        {
          LOBYTE(v54) = 0;
          v55 = 0;
        }
        v49[0] = v52;
        v49[1] = 2;
        v41 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
        if (v41)
        {
          v43 = WebCore::InspectorInstrumentation::instrumentingAgents(v41, v42);
          if (v43)
          {
            v44 = *(_QWORD *)(v43 + 96);
            if (v44)
              WebCore::InspectorCanvasAgent::recordAction(v44, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v50, v49);
          }
        }
        if (v55)
        {
          v45 = v54;
          v54 = 0;
          if (v45)
          {
            if (*v45 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v45;
          }
        }
        if (v53)
        {
          v46 = v52[0];
          v52[0] = 0;
          if (v46)
          {
            if (*(_DWORD *)v46 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*(_DWORD *)v46;
          }
        }
        v47 = v50;
        v50 = 0;
        if (v47)
        {
          if (*(_DWORD *)v47 == 2)
            WTF::StringImpl::destroy(v47, v42);
          else
            *(_DWORD *)v47 -= 2;
        }
        v25 = *(_QWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
      }
      else
      {
        v25 = *(_QWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
        v26 = v51[0];
      }
      WebCore::WebGLRenderingContextBase::getActiveUniform(v16, v24, v26, (uint64_t *)v52);
      if (v52[0])
      {
        v23 = WebCore::wrap<WebCore::WebGLActiveInfo>((uint64_t)this, v25, v52[0]);
        v28 = v52[0];
        v52[0] = 0;
        if (v28)
        {
          if (*(_DWORD *)v28 == 1)
          {
            v30 = (WTF::StringImpl *)*((_QWORD *)v28 + 1);
            *((_QWORD *)v28 + 1) = 0;
            if (v30)
            {
              if (*(_DWORD *)v30 == 2)
                WTF::StringImpl::destroy(v30, v27);
              else
                *(_DWORD *)v30 -= 2;
            }
            WTF::fastFree(v28, v27);
          }
          else
          {
            --*(_DWORD *)v28;
          }
        }
      }
      else
      {
        return 2;
      }
    }
  }
  else
  {
LABEL_24:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v52, 0, "program", 8, "WebGLRenderingContext", 22, a8, "getActiveUniform", 17, "WebGLProgram", 13);
    return 0;
  }
  return v23;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_getAttachedShaders(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  WebCore::WebGLProgram *v25;
  uint64_t v26;
  void *v27;
  WTF *v28;
  uint64_t v29;
  _DWORD *v30;
  WTF *v31;
  JSValue v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  uint64_t v38;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  uint64_t v42;
  WTF *v43;
  WTF::StringImpl *v44;
  JSC::VM *v45;
  _QWORD v46[2];
  WTF::StringImpl *v47;
  WTF *v48;
  int v49;
  unsigned int v50;
  char v51;
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v45 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v45, "WebGLRenderingContext", "getAttachedShaders");
  v11 = 16 * (*(_DWORD *)v10 & 0xFFFFFFFE);
  v12 = *(unsigned int *)(v11 + 0x4C);
  v13 = *(_DWORD *)(v11 + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSWebGLRenderingContext::s_info && v14 != 0);
  }
  if (!v13)
    return WebCore::throwThisTypeError((int)this, (int)&v45, "WebGLRenderingContext", "getAttachedShaders");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v34.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v34);
  }
  v17 = *(_QWORD *)(v10 + 24);
  v18 = *((_QWORD *)a2 + 6);
  v48 = v9;
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_24;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSWebGLProgram::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSWebGLProgram::s_info && v21 != 0);
  }
  if (v20 && (v25 = *(WebCore::WebGLProgram **)(v18 + 24)) != 0)
  {
    if (*(_BYTE *)(v17 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
      if (v35
        && (v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36)) != 0
        && (v38 = *(_QWORD *)(v37 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v38, (WTF::StringImpl *)(v17 + 8), (uint64_t)v25, (uint64_t)&v48);
      }
      else
      {
        LOBYTE(v48) = 0;
        v51 = 0;
      }
      v46[0] = &v48;
      v46[1] = 1;
      v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
      if (v39)
      {
        v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40);
        if (v41)
        {
          v42 = *(_QWORD *)(v41 + 96);
          if (v42)
            WebCore::InspectorCanvasAgent::recordAction(v42, (WebCore::CanvasRenderingContext *)(v17 + 8), (const WTF::StringImpl *)&v47, v46);
        }
      }
      if (v51)
      {
        v43 = v48;
        v48 = 0;
        if (v43)
        {
          if (*(_DWORD *)v43 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*(_DWORD *)v43;
        }
      }
      v44 = v47;
      v47 = 0;
      if (v44)
      {
        if (*(_DWORD *)v44 == 2)
          WTF::StringImpl::destroy(v44, v40);
        else
          *(_DWORD *)v44 -= 2;
      }
      v11 = 16 * (*(_DWORD *)v10 & 0xFFFFFFFE);
    }
    v26 = *(_QWORD *)(v11 + 40);
    WebCore::WebGLRenderingContextBase::getAttachedShaders((WTF::StringImpl *)v17, v25, (uint64_t)&v48);
    v24 = WebCore::JSConverter<WebCore::IDLNullable<WebCore::IDLSequence<WebCore::IDLInterface<WebCore::WebGLShader>>>>::convert<std::optional<WTF::Vector<WTF::Ref<WebCore::WebGLShader,WTF::RawPtrTraits<WebCore::WebGLShader>,WTF::DefaultRefDerefTraits<WebCore::WebGLShader>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>>>((uint64_t)this, v26, (uint64_t)&v48);
    if (v51)
    {
      if (v50)
      {
        v28 = v48;
        v29 = 8 * v50;
        do
        {
          v30 = *(_DWORD **)v28;
          *(_QWORD *)v28 = 0;
          if (v30)
          {
            if (v30[2] == 1)
              (*(void (**)(_DWORD *))(*(_QWORD *)v30 + 8))(v30);
            else
              --v30[2];
          }
          v28 = (WTF *)((char *)v28 + 8);
          v29 -= 8;
        }
        while (v29);
      }
      v31 = v48;
      if (v48)
      {
        v48 = 0;
        v49 = 0;
        WTF::fastFree(v31, v27);
      }
    }
  }
  else
  {
LABEL_24:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v48, 0, "program", 8, "WebGLRenderingContext", 22, a8, "getAttachedShaders", 19, "WebGLProgram", 13);
    return 0;
  }
  return (_BYTE *)v24;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_getAttribLocation(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  unint64_t v23;
  WebCore::WebGLProgram *v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  int v30;
  JSValue v33;
  WTF::StringImpl *v34;
  int hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v36;
  WebCore::ScriptExecutionContext *v37;
  uint64_t v38;
  uint64_t v39;
  WebCore::InspectorInstrumentation *v40;
  WebCore::ScriptExecutionContext *v41;
  uint64_t v42;
  WebCore::InspectorCanvasAgent *v43;
  WebCore::InspectorInstrumentation *v44;
  WebCore::ScriptExecutionContext *v45;
  uint64_t v46;
  uint64_t v47;
  _DWORD *v48;
  WTF::StringImpl *v49;
  WTF::StringImpl *v50;
  WebCore *v51;
  JSC::JSGlobalObject *v52;
  JSC::CallFrame *v53;
  JSC::VM *v54;
  WTF::StringImpl *v55[2];
  WTF::StringImpl *v56;
  WTF::StringImpl *v57;
  int v58;
  WTF::StringImpl *v59[2];
  char v60;
  _DWORD *v61;
  char v62;
  uint64_t v63;

  v63 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v54 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v54, "WebGLRenderingContext", "getAttribLocation");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return WebCore::throwThisTypeError((int)this, (int)&v54, "WebGLRenderingContext", "getAttribLocation");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v33.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v33);
  }
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  v59[0] = v9;
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_24;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSWebGLProgram::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSWebGLProgram::s_info && v20 != 0);
  }
  if (!v19 || (v24 = *(WebCore::WebGLProgram **)(v17 + 24)) == 0)
  {
LABEL_24:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v59, 0, "program", 8, "WebGLRenderingContext", 22, a8, "getAttribLocation", 18, "WebGLProgram", 13);
    return 0;
  }
  v25 = *((_QWORD *)a2 + 7);
  v59[0] = (WTF::StringImpl *)v25;
  if ((v25 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v25 + 5) == 2)
  {
    v26 = *(WTF::StringImpl **)(v25 + 8);
    if ((v26 & 1) != 0)
    {
      v26 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v25, this);
      if (!v26)
        goto LABEL_31;
    }
    else if (!v26)
    {
LABEL_31:
      v55[0] = v26;
      goto LABEL_32;
    }
    *(_DWORD *)v26 += 2;
    goto LABEL_31;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v59, this);
LABEL_32:
  if (*((_DWORD *)v9 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v9);
    v27 = v55[0];
    if (hasExceptionsAfterHandlingTraps)
    {
      v58 = 1;
      v55[0] = 0;
      if (v27)
      {
        if (*(_DWORD *)v27 == 2)
          WTF::StringImpl::destroy(v27, v34);
        else
          *(_DWORD *)v27 -= 2;
      }
      v23 = 0;
      v30 = 1;
LABEL_39:
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E333EAB8[v30])(v59, &v57);
      return (_BYTE *)v23;
    }
  }
  else
  {
    v27 = v55[0];
  }
  v57 = v27;
  v58 = 0;
  if (!*(_BYTE *)(v16 + 33))
  {
LABEL_35:
    v57 = 0;
    v59[0] = v27;
    v23 = WebCore::WebGLRenderingContextBase::getAttribLocation((WebCore::WebGLRenderingContextBase *)v16, v24, (const WTF::String *)v59) | 0xFFFE000000000000;
    v29 = v59[0];
    v59[0] = 0;
    if (v29)
    {
      if (*(_DWORD *)v29 == 2)
        WTF::StringImpl::destroy(v29, v28);
      else
        *(_DWORD *)v29 -= 2;
    }
    v30 = v58;
    if (v58 == -1)
      return (_BYTE *)v23;
    goto LABEL_39;
  }
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v36 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
  if (v36
    && (v38 = WebCore::InspectorInstrumentation::instrumentingAgents(v36, v37)) != 0
    && (v39 = *(_QWORD *)(v38 + 96)) != 0)
  {
    WebCore::InspectorCanvasAgent::processArgument(v39, (WTF::StringImpl *)(v16 + 8), (uint64_t)v24, (uint64_t)v59);
  }
  else
  {
    LOBYTE(v59[0]) = 0;
    v60 = 0;
  }
  v40 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
  if (v40
    && (v42 = WebCore::InspectorInstrumentation::instrumentingAgents(v40, v41)) != 0
    && (v43 = *(WebCore::InspectorCanvasAgent **)(v42 + 96)) != 0)
  {
    WebCore::InspectorCanvasAgent::processArgument(v43, (WebCore::CanvasRenderingContext *)(v16 + 8), (int **)&v57, (uint64_t)&v61);
  }
  else
  {
    LOBYTE(v61) = 0;
    v62 = 0;
  }
  v55[0] = (WTF::StringImpl *)v59;
  v55[1] = (WTF::StringImpl *)2;
  v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
  if (v44)
  {
    v46 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, v45);
    if (v46)
    {
      v47 = *(_QWORD *)(v46 + 96);
      if (v47)
        WebCore::InspectorCanvasAgent::recordAction(v47, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v56, v55);
    }
  }
  if (v62)
  {
    v48 = v61;
    v61 = 0;
    if (v48)
    {
      if (*v48 == 1)
        WTF::JSONImpl::Value::operator delete();
      else
        --*v48;
    }
  }
  if (v60)
  {
    v49 = v59[0];
    v59[0] = 0;
    if (v49)
    {
      if (*(_DWORD *)v49 == 1)
        WTF::JSONImpl::Value::operator delete();
      else
        --*(_DWORD *)v49;
    }
  }
  v50 = v56;
  v56 = 0;
  if (v50)
  {
    if (*(_DWORD *)v50 == 2)
      WTF::StringImpl::destroy(v50, v45);
    else
      *(_DWORD *)v50 -= 2;
  }
  if (!v58)
  {
    v27 = v57;
    goto LABEL_35;
  }
  v51 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsWebGLRenderingContextPrototypeFunction_getBufferParameter(v51, v52, v53);
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_getBufferParameter(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  JSValue v19;
  WebCore::InspectorInstrumentation *v20;
  WebCore::ScriptExecutionContext *v21;
  uint64_t v22;
  WebCore::InspectorCanvasAgent *v23;
  WebCore::InspectorInstrumentation *v24;
  WebCore::ScriptExecutionContext *v25;
  uint64_t v26;
  WebCore::InspectorCanvasAgent *v27;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  uint64_t v31;
  _DWORD *v32;
  _DWORD *v33;
  WTF::StringImpl *v34;
  JSC::VM *v35;
  _QWORD v36[2];
  int v37;
  unsigned int v38[2];
  unsigned int v39[2];
  WTF::StringImpl *v40;
  _QWORD v41[2];
  uint64_t v42;
  _QWORD v43[2];
  uint64_t v44;
  WebCore *v45;
  uint64_t v46;
  WebCore *v47;
  uint64_t v48;
  WebCore *v49;
  uint64_t v50;
  WebCore *v51;
  uint64_t v52;
  WebCore *v53;
  uint64_t v54;
  WebCore *v55;
  uint64_t v56;
  WebCore *v57;
  uint64_t v58;
  WebCore *v59;
  uint64_t v60;
  WebCore *v61;
  uint64_t v62;
  WebCore *v63;
  uint64_t v64;
  WebCore *v65;
  uint64_t v66;
  WebCore *v67;
  uint64_t v68;
  WebCore *v69;
  uint64_t v70;
  WebCore *v71;
  uint64_t v72;
  uint64_t v73;

  v73 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v35 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v35, "WebGLRenderingContext", "getBufferParameter");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v35, "WebGLRenderingContext", "getBufferParameter");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v19);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v39);
  if (v39[1])
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v38);
  if (v38[1])
    return 0;
  if (*(_BYTE *)(v12 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v13 = v39[0];
    v20 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v20
      && (v22 = WebCore::InspectorInstrumentation::instrumentingAgents(v20, v21)) != 0
      && (v23 = *(WebCore::InspectorCanvasAgent **)(v22 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v23, (WebCore::CanvasRenderingContext *)(v12 + 8), v13, (uint64_t)v41);
    }
    else
    {
      LOBYTE(v41[0]) = 0;
      LOBYTE(v42) = 0;
    }
    v14 = v38[0];
    v24 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v24
      && (v26 = WebCore::InspectorInstrumentation::instrumentingAgents(v24, v25)) != 0
      && (v27 = *(WebCore::InspectorCanvasAgent **)(v26 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v27, (WebCore::CanvasRenderingContext *)(v12 + 8), v14, (uint64_t)v43);
    }
    else
    {
      LOBYTE(v43[0]) = 0;
      LOBYTE(v44) = 0;
    }
    v36[0] = v41;
    v36[1] = 2;
    v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v28)
    {
      v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29);
      if (v30)
      {
        v31 = *(_QWORD *)(v30 + 96);
        if (v31)
          WebCore::InspectorCanvasAgent::recordAction(v31, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v40, v36);
      }
    }
    if ((_BYTE)v44)
    {
      v32 = (_DWORD *)v43[0];
      v43[0] = 0;
      if (v32)
      {
        if (*v32 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v32;
      }
    }
    if ((_BYTE)v42)
    {
      v33 = (_DWORD *)v41[0];
      v41[0] = 0;
      if (v33)
      {
        if (*v33 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v33;
      }
    }
    v34 = v40;
    v40 = 0;
    if (v34)
    {
      if (*(_DWORD *)v34 == 2)
        WTF::StringImpl::destroy(v34, v29);
      else
        *(_DWORD *)v34 -= 2;
    }
  }
  else
  {
    v13 = v39[0];
    v14 = v38[0];
  }
  v15 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  WebCore::WebGLRenderingContextBase::getBufferParameter((WTF::StringImpl *)v12, v13, v14, (uint64_t)v36);
  v41[0] = this;
  v41[1] = v15;
  v42 = v15;
  v43[0] = v15;
  v43[1] = this;
  v44 = v15;
  v45 = this;
  v46 = v15;
  v47 = this;
  v48 = v15;
  v49 = this;
  v50 = v15;
  v51 = this;
  v52 = v15;
  v53 = this;
  v54 = v15;
  v55 = this;
  v56 = v15;
  v57 = this;
  v58 = v15;
  v59 = this;
  v60 = v15;
  v61 = this;
  v62 = v15;
  v63 = this;
  v64 = v15;
  v65 = this;
  v66 = v15;
  v67 = this;
  v68 = v15;
  v69 = this;
  v70 = v15;
  v71 = this;
  v72 = v15;
  if (v37 == -1)
    std::__throw_bad_variant_access[abi:sn180100]();
  v40 = (WTF::StringImpl *)v41;
  v16 = ((uint64_t (*)(WTF::StringImpl **, _QWORD *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore16convertToJSValueERN3JSC14JSGlobalObjectERNS8_17JSDOMGlobalObjectERKNS_7variantIJDnbijxyfNS6_6StringENS6_6VectorIbLm0ENS6_15CrashOnOverflowELm16ENS6_10FastMallocEEENSG_IiLm0ESH_Lm16ESI_EENSG_IjLm0ESH_Lm16ESI_EENS6_6RefPtrINS9_21GenericTypedArrayViewINS9_14Float32AdaptorEEENS6_12RawPtrTraitsISP_EENS6_21DefaultRefDerefTraitsISP_EEEENSM_INSN_INS9_12Int32AdaptorEEENSQ_ISW_EENSS_ISW_EEEENSM_INSN_INS9_13Uint32AdaptorEEENSQ_IS11_EENSS_IS11_EEEENSM_INSN_INS9_12Uint8AdaptorEEENSQ_IS16_EENSS_IS16_EEEENSM_INS8_11WebGLBufferENSQ_IS1A_EENSS_IS1A_EEEENSM_INS8_16WebGLFramebufferENSQ_IS1E_EENSS_IS1E_EEEENSM_INS8_12WebGLProgramENSQ_IS1I_EENSS_IS1I_EEEENSM_INS8_10WebGLQueryENSQ_IS1M_EENSS_IS1M_EEEENSM_INS8_17WebGLRenderbufferENSQ_IS1Q_EENSS_IS1Q_EEEENSM_INS8_12WebGLSamplerENSQ_IS1U_EENSS_IS1U_EEEENSM_INS8_12WebGLTextureENSQ_IS1Y_EENSS_IS1Y_EEEENSM_INS8_18WebGLTimerQueryEXTENSQ_IS22_EENSS_IS22_EEEENSM_INS8_22WebGLTransformFeedbackENSQ_IS26_EENSS_IS26_EEEENSM_INS8_22WebGLVertexArrayObjectENSQ_IS2A_EENSS_IS2A_EEEENSM_INS8_25WebGLVertexArrayObjectOESENSQ_IS2E_EENSS_IS2E_EEEEEEEE3__0JZNS8_16convertToJSValueESB_SD_S2K_E3__1ZNS8_16convertToJSValueESB_SD_S2K_E3__2ZNS8_16convertToJSValueESB_SD_S2K_E3__3ZNS8_16convertToJSValueESB_SD_S2K_E3__4ZNS8_16convertToJSValueESB_SD_S2K_E3__5ZNS8_16convertToJSValueESB_SD_S2K_E3__6ZNS8_16convertToJSValueESB_SD_S2K_E3__7ZNS8_16convertToJSValueESB_SD_S2K_E3__8ZNS8_16convertToJSValueESB_SD_S2K_E3__9ZNS8_16convertToJSValueESB_SD_S2K_E4__10ZNS8_16convertToJSValueESB_SD_S2K_E4__11ZNS8_16convertToJSValueESB_SD_S2K_E4__12ZNS8_16convertToJSValueESB_SD_S2K_E4__13ZNS8_16convertToJSValueESB_SD_S2K_E4__14ZNS8_16convertToJSValueESB_SD_S2K_E4__15ZNS8_16convertToJSValueESB_SD_S2K_E4__16ZNS8_16convertToJSValueESB_SD_S2K_E4__17ZNS8_16convertToJSValueESB_SD_S2K_E4__18ZNS8_16convertToJSValueESB_SD_S2K_E4__19ZNS8_16convertToJSValueESB_SD_S2K_E4__20ZNS8_16convertToJSValueESB_SD_S2K_E4__21ZNS8_16convertToJSValueESB_SD_S2K_E4__22ZNS8_16convertToJSValueESB_SD_S2K_E4__23ZNS8_16convertToJSValueESB_SD_S2K_E4__24ZNS8_16convertToJSValueESB_SD_S2K_E4__25EEEEEJRKNS0_6__implIJDnbijxyfSF_SJ_SK_SL_SU_SZ_S14_S19_S1D_S1H_S1L_S1P_S1T_S1X_S21_S25_S29_S2D_S2H_EEEEEEDcOT_DpOT0____fmatrix[v37])(&v40, v36);
  if (v37 != -1)
    off_1E333E518[v37](v41, v36);
  return (_BYTE *)v16;
}

unint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_getContextAttributes(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  char v13;
  WebCore::JSDOMGlobalObject *v14;
  WebCore::InspectorInstrumentation *v15;
  WebCore::ScriptExecutionContext *v16;
  uint64_t v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  WTF::StringImpl *v23;

  v4 = *((_QWORD *)a2 + 5);
  v20 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "WebGLRenderingContext", "getContextAttributes");
  v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v6 = *(unsigned int *)(v5 + 0x4C);
  v7 = *(_DWORD *)(v5 + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "WebGLRenderingContext", "getContextAttributes");
  v11 = *(_QWORD *)(v4 + 24);
  if (*(_BYTE *)(v11 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v21 = 0;
    v22 = 0;
    v15 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
    if (v15)
    {
      v17 = WebCore::InspectorInstrumentation::instrumentingAgents(v15, v16);
      if (v17)
      {
        v18 = *(_QWORD *)(v17 + 96);
        if (v18)
          WebCore::InspectorCanvasAgent::recordAction(v18, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v23, &v21);
      }
    }
    v19 = v23;
    v23 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v16);
      else
        *(_DWORD *)v19 -= 2;
    }
    v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  }
  if (*(_BYTE *)(v11 + 364))
    return 2;
  v13 = *(_BYTE *)(v11 + 376);
  v14 = *(WebCore::JSDOMGlobalObject **)(v5 + 40);
  v21 = *(_QWORD *)(v11 + 368);
  LOBYTE(v22) = v13;
  return WebCore::convertDictionaryToJS((uint64_t)this, v14, &v21);
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_getError(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  unsigned int Error;
  WebCore::InspectorInstrumentation *v12;
  WebCore::ScriptExecutionContext *v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  _QWORD v18[2];
  WTF::StringImpl *v19;

  v3 = *((_QWORD *)a2 + 5);
  v17 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v17, "WebGLRenderingContext", "getError");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSWebGLRenderingContext::s_info && v6 != 0);
  }
  if (!v5)
    return WebCore::throwThisTypeError((int)this, (int)&v17, "WebGLRenderingContext", "getError");
  v9 = *(_QWORD *)(v3 + 24);
  if (*(_BYTE *)(v9 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v18[0] = 0;
    v18[1] = 0;
    v12 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 40) + 144))(*(_QWORD *)(v9 + 40));
    if (v12)
    {
      v14 = WebCore::InspectorInstrumentation::instrumentingAgents(v12, v13);
      if (v14)
      {
        v15 = *(_QWORD *)(v14 + 96);
        if (v15)
          WebCore::InspectorCanvasAgent::recordAction(v15, (WebCore::CanvasRenderingContext *)(v9 + 8), (const WTF::StringImpl *)&v19, v18);
      }
    }
    v16 = v19;
    v19 = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v13);
      else
        *(_DWORD *)v16 -= 2;
    }
  }
  Error = WebCore::WebGLRenderingContextBase::getError((WebCore::WebGLRenderingContextBase *)v9);
  if ((Error & 0x80000000) != 0)
    return (_BYTE *)(COERCE__INT64((double)Error) + 0x2000000000000);
  else
    return (_BYTE *)(Error | 0xFFFE000000000000);
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_getSupportedExtensions(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF *v15;
  WTF *v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  WebCore::InspectorInstrumentation *v20;
  WebCore::ScriptExecutionContext *v21;
  uint64_t v22;
  uint64_t v23;
  WTF::StringImpl *v24;
  uint64_t v25;
  WTF *v26;
  uint64_t v27;
  char v28;
  WTF::StringImpl *v29;

  v4 = *((_QWORD *)a2 + 5);
  v25 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "WebGLRenderingContext", "getSupportedExtensions");
  v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v6 = *(unsigned int *)(v5 + 0x4C);
  v7 = *(_DWORD *)(v5 + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "WebGLRenderingContext", "getSupportedExtensions");
  v11 = *(_QWORD *)(v4 + 24);
  if (*(_BYTE *)(v11 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v26 = 0;
    v27 = 0;
    v20 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
    if (v20)
    {
      v22 = WebCore::InspectorInstrumentation::instrumentingAgents(v20, v21);
      if (v22)
      {
        v23 = *(_QWORD *)(v22 + 96);
        if (v23)
          WebCore::InspectorCanvasAgent::recordAction(v23, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v29, &v26);
      }
    }
    v24 = v29;
    v29 = 0;
    if (v24)
    {
      if (*(_DWORD *)v24 == 2)
        WTF::StringImpl::destroy(v24, v21);
      else
        *(_DWORD *)v24 -= 2;
    }
    v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  }
  v12 = *(_QWORD *)(v5 + 40);
  WebCore::WebGLRenderingContext::getSupportedExtensions(v11, (uint64_t)&v26);
  v14 = WebCore::JSConverter<WebCore::IDLNullable<WebCore::IDLSequence<WebCore::IDLDOMString>>>::convert<std::optional<WTF::Vector<WTF::String,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>>>((uint64_t)this, v12, (uint64_t)&v26);
  if (v28)
  {
    if (HIDWORD(v27))
    {
      v17 = v26;
      v18 = 8 * HIDWORD(v27);
      do
      {
        v19 = *(WTF::StringImpl **)v17;
        *(_QWORD *)v17 = 0;
        if (v19)
        {
          if (*(_DWORD *)v19 == 2)
            WTF::StringImpl::destroy(v19, v13);
          else
            *(_DWORD *)v19 -= 2;
        }
        v17 = (WTF *)((char *)v17 + 8);
        v18 -= 8;
      }
      while (v18);
    }
    v15 = v26;
    if (v26)
    {
      v26 = 0;
      LODWORD(v27) = 0;
      WTF::fastFree(v15, v13);
    }
  }
  return (_BYTE *)v14;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_getExtension(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  unint64_t v18;
  WTF::StringImpl *v19;
  _DWORD *v20;
  WTF::StringImpl *v21;
  int v22;
  JSValue v25;
  WTF::StringImpl *v26;
  char hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  WebCore::InspectorCanvasAgent *v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  WTF::StringImpl *v37;
  JSC::VM *v38;
  WTF::StringImpl *v39[2];
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  int v42;
  _DWORD *v43;
  char v44;
  char v45;
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v38 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v38, "WebGLRenderingContext", "getExtension");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v38, "WebGLRenderingContext", "getExtension");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v25);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v43 = (_DWORD *)v12;
  if ((v12 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v12 + 5) == 2)
  {
    v13 = *(WTF::StringImpl **)(v12 + 8);
    if ((v13 & 1) != 0)
    {
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
      if (!v13)
        goto LABEL_18;
    }
    else if (!v13)
    {
LABEL_18:
      v39[0] = v13;
      goto LABEL_19;
    }
    *(_DWORD *)v13 += 2;
    goto LABEL_18;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v43, this);
LABEL_19:
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v14 = v39[0];
    if ((hasExceptionsAfterHandlingTraps & 1) != 0)
    {
      v42 = 1;
      v39[0] = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
        {
          WTF::StringImpl::destroy(v14, v26);
          v22 = v42;
          v18 = 0;
          goto LABEL_35;
        }
        *(_DWORD *)v14 -= 2;
      }
      v18 = 0;
      v22 = 1;
      goto LABEL_36;
    }
  }
  else
  {
    v14 = v39[0];
  }
  v41 = v14;
  v42 = 0;
  if (*(_BYTE *)(v11 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
    if (v28
      && (v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29)) != 0
      && (v31 = *(WebCore::InspectorCanvasAgent **)(v30 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v31, (WebCore::CanvasRenderingContext *)(v11 + 8), (int **)&v41, (uint64_t)&v43);
    }
    else
    {
      LOBYTE(v43) = 0;
      v45 = 0;
    }
    v39[0] = (WTF::StringImpl *)&v43;
    v39[1] = (WTF::StringImpl *)1;
    v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
    if (v32)
    {
      v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33);
      if (v34)
      {
        v35 = *(_QWORD *)(v34 + 96);
        if (v35)
          WebCore::InspectorCanvasAgent::recordAction(v35, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v40, v39);
      }
    }
    if (v45)
    {
      v36 = v43;
      v43 = 0;
      if (v36)
      {
        if (*v36 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v36;
      }
    }
    v37 = v40;
    v40 = 0;
    if (v37)
    {
      if (*(_DWORD *)v37 == 2)
        goto LABEL_70;
      *(_DWORD *)v37 -= 2;
    }
    while (v42)
    {
      v37 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_70:
      WTF::StringImpl::destroy(v37, v33);
    }
  }
  v15 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v40 = v41;
  v41 = 0;
  WebCore::WebGLRenderingContext::getExtension(v11, (const WTF::String *)&v40, (uint64_t)&v43);
  if (v44)
  {
    v17 = (WTF::StringImpl *)v43;
    ++v43[2];
    v39[0] = v17;
    v18 = WebCore::convertToJSValue((uint64_t)this, v15, v39);
    v19 = v39[0];
    v39[0] = 0;
    if (v19)
    {
      if (*((_DWORD *)v19 + 2) == 1)
        (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v19 + 8))(v19);
      else
        --*((_DWORD *)v19 + 2);
    }
    if (v44)
    {
      v20 = v43;
      v43 = 0;
      if (v20)
      {
        if (v20[2] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v20 + 8))(v20);
        else
          --v20[2];
      }
    }
  }
  else
  {
    v18 = 2;
  }
  v21 = v40;
  v40 = 0;
  if (v21)
  {
    if (*(_DWORD *)v21 == 2)
      WTF::StringImpl::destroy(v21, v16);
    else
      *(_DWORD *)v21 -= 2;
  }
  v22 = v42;
LABEL_35:
  if (v22 != -1)
LABEL_36:
    ((void (*)(_DWORD **, WTF::StringImpl **))off_1E333EAB8[v22])(&v43, &v41);
  return (_BYTE *)v18;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_getFramebufferAttachmentParameter(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  JSValue v17;
  unsigned int v18;
  WebCore::InspectorInstrumentation *v19;
  WebCore::ScriptExecutionContext *v20;
  uint64_t v21;
  WebCore::InspectorCanvasAgent *v22;
  unsigned int v23;
  WebCore::InspectorInstrumentation *v24;
  WebCore::ScriptExecutionContext *v25;
  uint64_t v26;
  WebCore::InspectorCanvasAgent *v27;
  unsigned int v28;
  WebCore::InspectorInstrumentation *v29;
  WebCore::ScriptExecutionContext *v30;
  uint64_t v31;
  WebCore::InspectorCanvasAgent *v32;
  WebCore::InspectorInstrumentation *v33;
  WebCore::ScriptExecutionContext *v34;
  uint64_t v35;
  uint64_t v36;
  _DWORD *v37;
  _DWORD *v38;
  _DWORD *v39;
  WTF::StringImpl *v40;
  JSC::VM *v41;
  _QWORD v42[2];
  int v43;
  unsigned int v44[2];
  unsigned int v45[2];
  unsigned int v46[2];
  WTF::StringImpl *v47;
  _QWORD v48[2];
  uint64_t v49;
  _QWORD v50[2];
  uint64_t v51;
  _QWORD v52[2];
  WebCore *v53;
  uint64_t v54;
  WebCore *v55;
  uint64_t v56;
  WebCore *v57;
  uint64_t v58;
  WebCore *v59;
  uint64_t v60;
  WebCore *v61;
  uint64_t v62;
  WebCore *v63;
  uint64_t v64;
  WebCore *v65;
  uint64_t v66;
  WebCore *v67;
  uint64_t v68;
  WebCore *v69;
  uint64_t v70;
  WebCore *v71;
  uint64_t v72;
  WebCore *v73;
  uint64_t v74;
  WebCore *v75;
  uint64_t v76;
  WebCore *v77;
  uint64_t v78;
  uint64_t v79;

  v79 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v41 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v41, "WebGLRenderingContext", "getFramebufferAttachmentParameter");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v41, "WebGLRenderingContext", "getFramebufferAttachmentParameter");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v17.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v17);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v46);
  if (v46[1])
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v45);
  if (v45[1])
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 8), v44);
  if (v44[1])
    return 0;
  if (*(_BYTE *)(v12 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v18 = v46[0];
    v19 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v19
      && (v21 = WebCore::InspectorInstrumentation::instrumentingAgents(v19, v20)) != 0
      && (v22 = *(WebCore::InspectorCanvasAgent **)(v21 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v22, (WebCore::CanvasRenderingContext *)(v12 + 8), v18, (uint64_t)v48);
    }
    else
    {
      LOBYTE(v48[0]) = 0;
      LOBYTE(v49) = 0;
    }
    v23 = v45[0];
    v24 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v24
      && (v26 = WebCore::InspectorInstrumentation::instrumentingAgents(v24, v25)) != 0
      && (v27 = *(WebCore::InspectorCanvasAgent **)(v26 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v27, (WebCore::CanvasRenderingContext *)(v12 + 8), v23, (uint64_t)v50);
    }
    else
    {
      LOBYTE(v50[0]) = 0;
      LOBYTE(v51) = 0;
    }
    v28 = v44[0];
    v29 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v29
      && (v31 = WebCore::InspectorInstrumentation::instrumentingAgents(v29, v30)) != 0
      && (v32 = *(WebCore::InspectorCanvasAgent **)(v31 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v32, (WebCore::CanvasRenderingContext *)(v12 + 8), v28, (uint64_t)v52);
    }
    else
    {
      LOBYTE(v52[0]) = 0;
      LOBYTE(v53) = 0;
    }
    v42[0] = v48;
    v42[1] = 3;
    v33 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v33)
    {
      v35 = WebCore::InspectorInstrumentation::instrumentingAgents(v33, v34);
      if (v35)
      {
        v36 = *(_QWORD *)(v35 + 96);
        if (v36)
          WebCore::InspectorCanvasAgent::recordAction(v36, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v47, v42);
      }
    }
    if ((_BYTE)v53)
    {
      v37 = (_DWORD *)v52[0];
      v52[0] = 0;
      if (v37)
      {
        if (*v37 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v37;
      }
    }
    if ((_BYTE)v51)
    {
      v38 = (_DWORD *)v50[0];
      v50[0] = 0;
      if (v38)
      {
        if (*v38 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v38;
      }
    }
    if ((_BYTE)v49)
    {
      v39 = (_DWORD *)v48[0];
      v48[0] = 0;
      if (v39)
      {
        if (*v39 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v39;
      }
    }
    v40 = v47;
    v47 = 0;
    if (v40)
    {
      if (*(_DWORD *)v40 == 2)
        WTF::StringImpl::destroy(v40, v34);
      else
        *(_DWORD *)v40 -= 2;
    }
  }
  v13 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  WebCore::WebGLRenderingContext::getFramebufferAttachmentParameter((WTF::StringImpl *)v12, v45[0], v44[0], (uint64_t)v42);
  v48[0] = this;
  v48[1] = v13;
  v49 = v13;
  v50[0] = v13;
  v50[1] = this;
  v51 = v13;
  v52[0] = this;
  v52[1] = v13;
  v53 = this;
  v54 = v13;
  v55 = this;
  v56 = v13;
  v57 = this;
  v58 = v13;
  v59 = this;
  v60 = v13;
  v61 = this;
  v62 = v13;
  v63 = this;
  v64 = v13;
  v65 = this;
  v66 = v13;
  v67 = this;
  v68 = v13;
  v69 = this;
  v70 = v13;
  v71 = this;
  v72 = v13;
  v73 = this;
  v74 = v13;
  v75 = this;
  v76 = v13;
  v77 = this;
  v78 = v13;
  if (v43 == -1)
    std::__throw_bad_variant_access[abi:sn180100]();
  v47 = (WTF::StringImpl *)v48;
  v14 = ((uint64_t (*)(WTF::StringImpl **, _QWORD *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore16convertToJSValueERN3JSC14JSGlobalObjectERNS8_17JSDOMGlobalObjectERKNS_7variantIJDnbijxyfNS6_6StringENS6_6VectorIbLm0ENS6_15CrashOnOverflowELm16ENS6_10FastMallocEEENSG_IiLm0ESH_Lm16ESI_EENSG_IjLm0ESH_Lm16ESI_EENS6_6RefPtrINS9_21GenericTypedArrayViewINS9_14Float32AdaptorEEENS6_12RawPtrTraitsISP_EENS6_21DefaultRefDerefTraitsISP_EEEENSM_INSN_INS9_12Int32AdaptorEEENSQ_ISW_EENSS_ISW_EEEENSM_INSN_INS9_13Uint32AdaptorEEENSQ_IS11_EENSS_IS11_EEEENSM_INSN_INS9_12Uint8AdaptorEEENSQ_IS16_EENSS_IS16_EEEENSM_INS8_11WebGLBufferENSQ_IS1A_EENSS_IS1A_EEEENSM_INS8_16WebGLFramebufferENSQ_IS1E_EENSS_IS1E_EEEENSM_INS8_12WebGLProgramENSQ_IS1I_EENSS_IS1I_EEEENSM_INS8_10WebGLQueryENSQ_IS1M_EENSS_IS1M_EEEENSM_INS8_17WebGLRenderbufferENSQ_IS1Q_EENSS_IS1Q_EEEENSM_INS8_12WebGLSamplerENSQ_IS1U_EENSS_IS1U_EEEENSM_INS8_12WebGLTextureENSQ_IS1Y_EENSS_IS1Y_EEEENSM_INS8_18WebGLTimerQueryEXTENSQ_IS22_EENSS_IS22_EEEENSM_INS8_22WebGLTransformFeedbackENSQ_IS26_EENSS_IS26_EEEENSM_INS8_22WebGLVertexArrayObjectENSQ_IS2A_EENSS_IS2A_EEEENSM_INS8_25WebGLVertexArrayObjectOESENSQ_IS2E_EENSS_IS2E_EEEEEEEE3__0JZNS8_16convertToJSValueESB_SD_S2K_E3__1ZNS8_16convertToJSValueESB_SD_S2K_E3__2ZNS8_16convertToJSValueESB_SD_S2K_E3__3ZNS8_16convertToJSValueESB_SD_S2K_E3__4ZNS8_16convertToJSValueESB_SD_S2K_E3__5ZNS8_16convertToJSValueESB_SD_S2K_E3__6ZNS8_16convertToJSValueESB_SD_S2K_E3__7ZNS8_16convertToJSValueESB_SD_S2K_E3__8ZNS8_16convertToJSValueESB_SD_S2K_E3__9ZNS8_16convertToJSValueESB_SD_S2K_E4__10ZNS8_16convertToJSValueESB_SD_S2K_E4__11ZNS8_16convertToJSValueESB_SD_S2K_E4__12ZNS8_16convertToJSValueESB_SD_S2K_E4__13ZNS8_16convertToJSValueESB_SD_S2K_E4__14ZNS8_16convertToJSValueESB_SD_S2K_E4__15ZNS8_16convertToJSValueESB_SD_S2K_E4__16ZNS8_16convertToJSValueESB_SD_S2K_E4__17ZNS8_16convertToJSValueESB_SD_S2K_E4__18ZNS8_16convertToJSValueESB_SD_S2K_E4__19ZNS8_16convertToJSValueESB_SD_S2K_E4__20ZNS8_16convertToJSValueESB_SD_S2K_E4__21ZNS8_16convertToJSValueESB_SD_S2K_E4__22ZNS8_16convertToJSValueESB_SD_S2K_E4__23ZNS8_16convertToJSValueESB_SD_S2K_E4__24ZNS8_16convertToJSValueESB_SD_S2K_E4__25EEEEEJRKNS0_6__implIJDnbijxyfSF_SJ_SK_SL_SU_SZ_S14_S19_S1D_S1H_S1L_S1P_S1T_S1X_S21_S25_S29_S2D_S2H_EEEEEEDcOT_DpOT0____fmatrix[v43])(&v47, v42);
  if (v43 != -1)
    off_1E333E518[v43](v48, v42);
  return (_BYTE *)v14;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_getParameter(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  JSValue v17;
  WebCore::InspectorInstrumentation *v18;
  WebCore::ScriptExecutionContext *v19;
  uint64_t v20;
  WebCore::InspectorCanvasAgent *v21;
  WebCore::InspectorInstrumentation *v22;
  WebCore::ScriptExecutionContext *v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  WTF::StringImpl *v27;
  JSC::VM *v28;
  _QWORD v29[2];
  int v30;
  unsigned int v31[2];
  WTF::StringImpl *v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  WebCore *v36;
  uint64_t v37;
  WebCore *v38;
  uint64_t v39;
  WebCore *v40;
  uint64_t v41;
  WebCore *v42;
  uint64_t v43;
  WebCore *v44;
  uint64_t v45;
  WebCore *v46;
  uint64_t v47;
  WebCore *v48;
  uint64_t v49;
  WebCore *v50;
  uint64_t v51;
  WebCore *v52;
  uint64_t v53;
  WebCore *v54;
  uint64_t v55;
  WebCore *v56;
  uint64_t v57;
  WebCore *v58;
  uint64_t v59;
  WebCore *v60;
  uint64_t v61;
  WebCore *v62;
  uint64_t v63;
  WebCore *v64;
  uint64_t v65;
  uint64_t v66;

  v66 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v28 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "WebGLRenderingContext", "getParameter");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "WebGLRenderingContext", "getParameter");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v17.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v17);
  }
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v31);
  if (v31[1])
    return 0;
  if (*(_BYTE *)(v11 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v13 = v31[0];
    v18 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
    if (v18
      && (v20 = WebCore::InspectorInstrumentation::instrumentingAgents(v18, v19)) != 0
      && (v21 = *(WebCore::InspectorCanvasAgent **)(v20 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v21, (WebCore::CanvasRenderingContext *)(v11 + 8), v13, (uint64_t)v33);
    }
    else
    {
      LOBYTE(v33[0]) = 0;
      LOBYTE(v34) = 0;
    }
    v29[0] = v33;
    v29[1] = 1;
    v22 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
    if (v22)
    {
      v24 = WebCore::InspectorInstrumentation::instrumentingAgents(v22, v23);
      if (v24)
      {
        v25 = *(_QWORD *)(v24 + 96);
        if (v25)
          WebCore::InspectorCanvasAgent::recordAction(v25, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v32, v29);
      }
    }
    if ((_BYTE)v34)
    {
      v26 = (_DWORD *)v33[0];
      v33[0] = 0;
      if (v26)
      {
        if (*v26 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v26;
      }
    }
    v27 = v32;
    v32 = 0;
    if (v27)
    {
      if (*(_DWORD *)v27 == 2)
        WTF::StringImpl::destroy(v27, v23);
      else
        *(_DWORD *)v27 -= 2;
    }
    v12 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  }
  else
  {
    v12 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
    v13 = v31[0];
  }
  WebCore::WebGLRenderingContextBase::getParameter(v11, v13, (uint64_t)v29);
  v33[0] = this;
  v33[1] = v12;
  v34 = v12;
  v35 = v12;
  v36 = this;
  v37 = v12;
  v38 = this;
  v39 = v12;
  v40 = this;
  v41 = v12;
  v42 = this;
  v43 = v12;
  v44 = this;
  v45 = v12;
  v46 = this;
  v47 = v12;
  v48 = this;
  v49 = v12;
  v50 = this;
  v51 = v12;
  v52 = this;
  v53 = v12;
  v54 = this;
  v55 = v12;
  v56 = this;
  v57 = v12;
  v58 = this;
  v59 = v12;
  v60 = this;
  v61 = v12;
  v62 = this;
  v63 = v12;
  v64 = this;
  v65 = v12;
  if (v30 == -1)
    std::__throw_bad_variant_access[abi:sn180100]();
  v32 = (WTF::StringImpl *)v33;
  v14 = ((uint64_t (*)(WTF::StringImpl **, _QWORD *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore16convertToJSValueERN3JSC14JSGlobalObjectERNS8_17JSDOMGlobalObjectERKNS_7variantIJDnbijxyfNS6_6StringENS6_6VectorIbLm0ENS6_15CrashOnOverflowELm16ENS6_10FastMallocEEENSG_IiLm0ESH_Lm16ESI_EENSG_IjLm0ESH_Lm16ESI_EENS6_6RefPtrINS9_21GenericTypedArrayViewINS9_14Float32AdaptorEEENS6_12RawPtrTraitsISP_EENS6_21DefaultRefDerefTraitsISP_EEEENSM_INSN_INS9_12Int32AdaptorEEENSQ_ISW_EENSS_ISW_EEEENSM_INSN_INS9_13Uint32AdaptorEEENSQ_IS11_EENSS_IS11_EEEENSM_INSN_INS9_12Uint8AdaptorEEENSQ_IS16_EENSS_IS16_EEEENSM_INS8_11WebGLBufferENSQ_IS1A_EENSS_IS1A_EEEENSM_INS8_16WebGLFramebufferENSQ_IS1E_EENSS_IS1E_EEEENSM_INS8_12WebGLProgramENSQ_IS1I_EENSS_IS1I_EEEENSM_INS8_10WebGLQueryENSQ_IS1M_EENSS_IS1M_EEEENSM_INS8_17WebGLRenderbufferENSQ_IS1Q_EENSS_IS1Q_EEEENSM_INS8_12WebGLSamplerENSQ_IS1U_EENSS_IS1U_EEEENSM_INS8_12WebGLTextureENSQ_IS1Y_EENSS_IS1Y_EEEENSM_INS8_18WebGLTimerQueryEXTENSQ_IS22_EENSS_IS22_EEEENSM_INS8_22WebGLTransformFeedbackENSQ_IS26_EENSS_IS26_EEEENSM_INS8_22WebGLVertexArrayObjectENSQ_IS2A_EENSS_IS2A_EEEENSM_INS8_25WebGLVertexArrayObjectOESENSQ_IS2E_EENSS_IS2E_EEEEEEEE3__0JZNS8_16convertToJSValueESB_SD_S2K_E3__1ZNS8_16convertToJSValueESB_SD_S2K_E3__2ZNS8_16convertToJSValueESB_SD_S2K_E3__3ZNS8_16convertToJSValueESB_SD_S2K_E3__4ZNS8_16convertToJSValueESB_SD_S2K_E3__5ZNS8_16convertToJSValueESB_SD_S2K_E3__6ZNS8_16convertToJSValueESB_SD_S2K_E3__7ZNS8_16convertToJSValueESB_SD_S2K_E3__8ZNS8_16convertToJSValueESB_SD_S2K_E3__9ZNS8_16convertToJSValueESB_SD_S2K_E4__10ZNS8_16convertToJSValueESB_SD_S2K_E4__11ZNS8_16convertToJSValueESB_SD_S2K_E4__12ZNS8_16convertToJSValueESB_SD_S2K_E4__13ZNS8_16convertToJSValueESB_SD_S2K_E4__14ZNS8_16convertToJSValueESB_SD_S2K_E4__15ZNS8_16convertToJSValueESB_SD_S2K_E4__16ZNS8_16convertToJSValueESB_SD_S2K_E4__17ZNS8_16convertToJSValueESB_SD_S2K_E4__18ZNS8_16convertToJSValueESB_SD_S2K_E4__19ZNS8_16convertToJSValueESB_SD_S2K_E4__20ZNS8_16convertToJSValueESB_SD_S2K_E4__21ZNS8_16convertToJSValueESB_SD_S2K_E4__22ZNS8_16convertToJSValueESB_SD_S2K_E4__23ZNS8_16convertToJSValueESB_SD_S2K_E4__24ZNS8_16convertToJSValueESB_SD_S2K_E4__25EEEEEJRKNS0_6__implIJDnbijxyfSF_SJ_SK_SL_SU_SZ_S14_S19_S1D_S1H_S1L_S1P_S1T_S1X_S21_S25_S29_S2D_S2H_EEEEEEDcOT_DpOT0____fmatrix[v30])(&v32, v29);
  if (v30 != -1)
    off_1E333E518[v30](v33, v29);
  return (_BYTE *)v14;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_getProgramParameter(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  WebCore::WebGLProgram *v24;
  uint64_t v25;
  unsigned int v26;
  JSValue v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  uint64_t v33;
  WebCore::InspectorInstrumentation *v34;
  WebCore::ScriptExecutionContext *v35;
  uint64_t v36;
  WebCore::InspectorCanvasAgent *v37;
  WebCore::InspectorInstrumentation *v38;
  WebCore::ScriptExecutionContext *v39;
  uint64_t v40;
  uint64_t v41;
  _DWORD *v42;
  _DWORD *v43;
  WTF::StringImpl *v44;
  WebCore *v45;
  JSC::JSGlobalObject *v46;
  JSC::CallFrame *v47;
  JSC::VM *v48;
  _QWORD v49[2];
  int v50;
  unsigned int v51[2];
  WTF::StringImpl *v52;
  _QWORD v53[2];
  uint64_t v54;
  _QWORD v55[2];
  uint64_t v56;
  WebCore *v57;
  uint64_t v58;
  WebCore *v59;
  uint64_t v60;
  WebCore *v61;
  uint64_t v62;
  WebCore *v63;
  uint64_t v64;
  WebCore *v65;
  uint64_t v66;
  WebCore *v67;
  uint64_t v68;
  WebCore *v69;
  uint64_t v70;
  WebCore *v71;
  uint64_t v72;
  WebCore *v73;
  uint64_t v74;
  WebCore *v75;
  uint64_t v76;
  WebCore *v77;
  uint64_t v78;
  WebCore *v79;
  uint64_t v80;
  WebCore *v81;
  uint64_t v82;
  WebCore *v83;
  uint64_t v84;
  uint64_t v85;

  v85 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v48 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v48, "WebGLRenderingContext", "getProgramParameter");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return WebCore::throwThisTypeError((int)this, (int)&v48, "WebGLRenderingContext", "getProgramParameter");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v29.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v29);
  }
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  v53[0] = v9;
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_24;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSWebGLProgram::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSWebGLProgram::s_info && v20 != 0);
  }
  if (!v19 || (v24 = *(WebCore::WebGLProgram **)(v17 + 24)) == 0)
  {
LABEL_24:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v53, 0, "program", 8, "WebGLRenderingContext", 22, a8, "getProgramParameter", 20, "WebGLProgram", 13);
    return 0;
  }
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v51);
  if (v51[1])
    return 0;
  if (*(_BYTE *)(v16 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
    if (v30
      && (v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31)) != 0
      && (v33 = *(_QWORD *)(v32 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v33, (WTF::StringImpl *)(v16 + 8), (uint64_t)v24, (uint64_t)v53);
    }
    else
    {
      LOBYTE(v53[0]) = 0;
      LOBYTE(v54) = 0;
    }
    v26 = v51[0];
    v34 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
    if (v34
      && (v36 = WebCore::InspectorInstrumentation::instrumentingAgents(v34, v35)) != 0
      && (v37 = *(WebCore::InspectorCanvasAgent **)(v36 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v37, (WebCore::CanvasRenderingContext *)(v16 + 8), v26, (uint64_t)v55);
    }
    else
    {
      LOBYTE(v55[0]) = 0;
      LOBYTE(v56) = 0;
    }
    v49[0] = v53;
    v49[1] = 2;
    v38 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
    if (v38)
    {
      v40 = WebCore::InspectorInstrumentation::instrumentingAgents(v38, v39);
      if (v40)
      {
        v41 = *(_QWORD *)(v40 + 96);
        if (v41)
          WebCore::InspectorCanvasAgent::recordAction(v41, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v52, v49);
      }
    }
    if ((_BYTE)v56)
    {
      v42 = (_DWORD *)v55[0];
      v55[0] = 0;
      if (v42)
      {
        if (*v42 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v42;
      }
    }
    if ((_BYTE)v54)
    {
      v43 = (_DWORD *)v53[0];
      v53[0] = 0;
      if (v43)
      {
        if (*v43 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v43;
      }
    }
    v44 = v52;
    v52 = 0;
    if (v44)
    {
      if (*(_DWORD *)v44 == 2)
        WTF::StringImpl::destroy(v44, v39);
      else
        *(_DWORD *)v44 -= 2;
    }
    v25 = *(_QWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
  }
  else
  {
    v25 = *(_QWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
    v26 = v51[0];
  }
  WebCore::WebGLRenderingContextBase::getProgramParameter((WTF::StringImpl *)v16, v24, v26, (uint64_t)v49);
  v53[0] = this;
  v53[1] = v25;
  v54 = v25;
  v55[0] = v25;
  v55[1] = this;
  v56 = v25;
  v57 = this;
  v58 = v25;
  v59 = this;
  v60 = v25;
  v61 = this;
  v62 = v25;
  v63 = this;
  v64 = v25;
  v65 = this;
  v66 = v25;
  v67 = this;
  v68 = v25;
  v69 = this;
  v70 = v25;
  v71 = this;
  v72 = v25;
  v73 = this;
  v74 = v25;
  v75 = this;
  v76 = v25;
  v77 = this;
  v78 = v25;
  v79 = this;
  v80 = v25;
  v81 = this;
  v82 = v25;
  v83 = this;
  v84 = v25;
  if (v50 != -1)
  {
    v52 = (WTF::StringImpl *)v53;
    v23 = ((uint64_t (*)(WTF::StringImpl **, _QWORD *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore16convertToJSValueERN3JSC14JSGlobalObjectERNS8_17JSDOMGlobalObjectERKNS_7variantIJDnbijxyfNS6_6StringENS6_6VectorIbLm0ENS6_15CrashOnOverflowELm16ENS6_10FastMallocEEENSG_IiLm0ESH_Lm16ESI_EENSG_IjLm0ESH_Lm16ESI_EENS6_6RefPtrINS9_21GenericTypedArrayViewINS9_14Float32AdaptorEEENS6_12RawPtrTraitsISP_EENS6_21DefaultRefDerefTraitsISP_EEEENSM_INSN_INS9_12Int32AdaptorEEENSQ_ISW_EENSS_ISW_EEEENSM_INSN_INS9_13Uint32AdaptorEEENSQ_IS11_EENSS_IS11_EEEENSM_INSN_INS9_12Uint8AdaptorEEENSQ_IS16_EENSS_IS16_EEEENSM_INS8_11WebGLBufferENSQ_IS1A_EENSS_IS1A_EEEENSM_INS8_16WebGLFramebufferENSQ_IS1E_EENSS_IS1E_EEEENSM_INS8_12WebGLProgramENSQ_IS1I_EENSS_IS1I_EEEENSM_INS8_10WebGLQueryENSQ_IS1M_EENSS_IS1M_EEEENSM_INS8_17WebGLRenderbufferENSQ_IS1Q_EENSS_IS1Q_EEEENSM_INS8_12WebGLSamplerENSQ_IS1U_EENSS_IS1U_EEEENSM_INS8_12WebGLTextureENSQ_IS1Y_EENSS_IS1Y_EEEENSM_INS8_18WebGLTimerQueryEXTENSQ_IS22_EENSS_IS22_EEEENSM_INS8_22WebGLTransformFeedbackENSQ_IS26_EENSS_IS26_EEEENSM_INS8_22WebGLVertexArrayObjectENSQ_IS2A_EENSS_IS2A_EEEENSM_INS8_25WebGLVertexArrayObjectOESENSQ_IS2E_EENSS_IS2E_EEEEEEEE3__0JZNS8_16convertToJSValueESB_SD_S2K_E3__1ZNS8_16convertToJSValueESB_SD_S2K_E3__2ZNS8_16convertToJSValueESB_SD_S2K_E3__3ZNS8_16convertToJSValueESB_SD_S2K_E3__4ZNS8_16convertToJSValueESB_SD_S2K_E3__5ZNS8_16convertToJSValueESB_SD_S2K_E3__6ZNS8_16convertToJSValueESB_SD_S2K_E3__7ZNS8_16convertToJSValueESB_SD_S2K_E3__8ZNS8_16convertToJSValueESB_SD_S2K_E3__9ZNS8_16convertToJSValueESB_SD_S2K_E4__10ZNS8_16convertToJSValueESB_SD_S2K_E4__11ZNS8_16convertToJSValueESB_SD_S2K_E4__12ZNS8_16convertToJSValueESB_SD_S2K_E4__13ZNS8_16convertToJSValueESB_SD_S2K_E4__14ZNS8_16convertToJSValueESB_SD_S2K_E4__15ZNS8_16convertToJSValueESB_SD_S2K_E4__16ZNS8_16convertToJSValueESB_SD_S2K_E4__17ZNS8_16convertToJSValueESB_SD_S2K_E4__18ZNS8_16convertToJSValueESB_SD_S2K_E4__19ZNS8_16convertToJSValueESB_SD_S2K_E4__20ZNS8_16convertToJSValueESB_SD_S2K_E4__21ZNS8_16convertToJSValueESB_SD_S2K_E4__22ZNS8_16convertToJSValueESB_SD_S2K_E4__23ZNS8_16convertToJSValueESB_SD_S2K_E4__24ZNS8_16convertToJSValueESB_SD_S2K_E4__25EEEEEJRKNS0_6__implIJDnbijxyfSF_SJ_SK_SL_SU_SZ_S14_S19_S1D_S1H_S1L_S1P_S1T_S1X_S21_S25_S29_S2D_S2H_EEEEEEDcOT_DpOT0____fmatrix[v50])(&v52, v49);
    if (v50 != -1)
      off_1E333E518[v50](v53, v49);
    return (_BYTE *)v23;
  }
  v45 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsWebGLRenderingContextPrototypeFunction_getProgramInfoLog(v45, v46, v47);
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_getProgramInfoLog(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  WebCore::WebGLProgram *v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  uint64_t v27;
  uint64_t *v28;
  int v29;
  unsigned __int8 *v31;
  unsigned int v32;
  unsigned int v33;
  JSValue v35;
  WebCore::InspectorInstrumentation *v36;
  WebCore::ScriptExecutionContext *v37;
  uint64_t v38;
  uint64_t v39;
  WebCore::InspectorInstrumentation *v40;
  WebCore::ScriptExecutionContext *v41;
  uint64_t v42;
  uint64_t v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  JSC::VM *v46;
  _QWORD v47[2];
  WTF::StringImpl *v48;
  WTF::StringImpl *v49[2];
  char v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v46 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v46, "WebGLRenderingContext", "getProgramInfoLog");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v46, "WebGLRenderingContext", "getProgramInfoLog");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v35.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v35);
  }
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  v49[0] = v9;
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_24;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSWebGLProgram::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSWebGLProgram::s_info && v20 != 0);
  }
  if (!v19 || (v24 = *(WebCore::WebGLProgram **)(v17 + 24)) == 0)
  {
LABEL_24:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v49, 0, "program", 8, "WebGLRenderingContext", 22, a8, "getProgramInfoLog", 18, "WebGLProgram", 13);
    return 0;
  }
  if (*(_BYTE *)(v16 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v36 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
    if (v36
      && (v38 = WebCore::InspectorInstrumentation::instrumentingAgents(v36, v37)) != 0
      && (v39 = *(_QWORD *)(v38 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v39, (WTF::StringImpl *)(v16 + 8), (uint64_t)v24, (uint64_t)v49);
    }
    else
    {
      LOBYTE(v49[0]) = 0;
      v50 = 0;
    }
    v47[0] = v49;
    v47[1] = 1;
    v40 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
    if (v40)
    {
      v42 = WebCore::InspectorInstrumentation::instrumentingAgents(v40, v41);
      if (v42)
      {
        v43 = *(_QWORD *)(v42 + 96);
        if (v43)
          WebCore::InspectorCanvasAgent::recordAction(v43, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v48, v47);
      }
    }
    if (v50)
    {
      v44 = v49[0];
      v49[0] = 0;
      if (v44)
      {
        if (*(_DWORD *)v44 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*(_DWORD *)v44;
      }
    }
    v45 = v48;
    v48 = 0;
    if (v45)
    {
      if (*(_DWORD *)v45 == 2)
        WTF::StringImpl::destroy(v45, v41);
      else
        *(_DWORD *)v45 -= 2;
    }
  }
  WebCore::WebGLRenderingContextBase::getProgramInfoLog((WTF::StringImpl *)v16, v24, v49);
  v26 = v49[0];
  if (!v49[0])
    return 2;
  v27 = *((_QWORD *)this + 7);
  v28 = (uint64_t *)(v27 + 41968);
  v29 = *((_DWORD *)v49[0] + 1);
  if (v29)
  {
    if (v29 != 1)
    {
LABEL_30:
      v23 = *(_QWORD *)(v27 + 64760);
      if (!v23 || v49[0] != *(WTF::StringImpl **)(v23 + 8))
        v23 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_33;
    }
    v31 = (unsigned __int8 *)*((_QWORD *)v49[0] + 1);
    if ((*((_BYTE *)v49[0] + 16) & 4) != 0)
    {
      v32 = *v31;
    }
    else
    {
      v33 = *(unsigned __int16 *)v31;
      if (v33 > 0xFF)
        goto LABEL_30;
      v32 = v33;
    }
    v28 = (uint64_t *)(v27 + 8 * v32 + 42216);
  }
  v23 = *v28;
LABEL_33:
  if (*(_DWORD *)v26 == 2)
    WTF::StringImpl::destroy(v26, v25);
  else
    *(_DWORD *)v26 -= 2;
  return v23;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_getRenderbufferParameter(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  JSValue v19;
  WebCore::InspectorInstrumentation *v20;
  WebCore::ScriptExecutionContext *v21;
  uint64_t v22;
  WebCore::InspectorCanvasAgent *v23;
  WebCore::InspectorInstrumentation *v24;
  WebCore::ScriptExecutionContext *v25;
  uint64_t v26;
  WebCore::InspectorCanvasAgent *v27;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  uint64_t v31;
  _DWORD *v32;
  _DWORD *v33;
  WTF::StringImpl *v34;
  JSC::VM *v35;
  _QWORD v36[2];
  int v37;
  unsigned int v38[2];
  unsigned int v39[2];
  WTF::StringImpl *v40;
  _QWORD v41[2];
  uint64_t v42;
  _QWORD v43[2];
  uint64_t v44;
  WebCore *v45;
  uint64_t v46;
  WebCore *v47;
  uint64_t v48;
  WebCore *v49;
  uint64_t v50;
  WebCore *v51;
  uint64_t v52;
  WebCore *v53;
  uint64_t v54;
  WebCore *v55;
  uint64_t v56;
  WebCore *v57;
  uint64_t v58;
  WebCore *v59;
  uint64_t v60;
  WebCore *v61;
  uint64_t v62;
  WebCore *v63;
  uint64_t v64;
  WebCore *v65;
  uint64_t v66;
  WebCore *v67;
  uint64_t v68;
  WebCore *v69;
  uint64_t v70;
  WebCore *v71;
  uint64_t v72;
  uint64_t v73;

  v73 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v35 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v35, "WebGLRenderingContext", "getRenderbufferParameter");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v35, "WebGLRenderingContext", "getRenderbufferParameter");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v19);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v39);
  if (v39[1])
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v38);
  if (v38[1])
    return 0;
  if (*(_BYTE *)(v12 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v13 = v39[0];
    v20 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v20
      && (v22 = WebCore::InspectorInstrumentation::instrumentingAgents(v20, v21)) != 0
      && (v23 = *(WebCore::InspectorCanvasAgent **)(v22 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v23, (WebCore::CanvasRenderingContext *)(v12 + 8), v13, (uint64_t)v41);
    }
    else
    {
      LOBYTE(v41[0]) = 0;
      LOBYTE(v42) = 0;
    }
    v14 = v38[0];
    v24 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v24
      && (v26 = WebCore::InspectorInstrumentation::instrumentingAgents(v24, v25)) != 0
      && (v27 = *(WebCore::InspectorCanvasAgent **)(v26 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v27, (WebCore::CanvasRenderingContext *)(v12 + 8), v14, (uint64_t)v43);
    }
    else
    {
      LOBYTE(v43[0]) = 0;
      LOBYTE(v44) = 0;
    }
    v36[0] = v41;
    v36[1] = 2;
    v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v28)
    {
      v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29);
      if (v30)
      {
        v31 = *(_QWORD *)(v30 + 96);
        if (v31)
          WebCore::InspectorCanvasAgent::recordAction(v31, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v40, v36);
      }
    }
    if ((_BYTE)v44)
    {
      v32 = (_DWORD *)v43[0];
      v43[0] = 0;
      if (v32)
      {
        if (*v32 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v32;
      }
    }
    if ((_BYTE)v42)
    {
      v33 = (_DWORD *)v41[0];
      v41[0] = 0;
      if (v33)
      {
        if (*v33 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v33;
      }
    }
    v34 = v40;
    v40 = 0;
    if (v34)
    {
      if (*(_DWORD *)v34 == 2)
        WTF::StringImpl::destroy(v34, v29);
      else
        *(_DWORD *)v34 -= 2;
    }
  }
  else
  {
    v13 = v39[0];
    v14 = v38[0];
  }
  v15 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  WebCore::WebGLRenderingContextBase::getRenderbufferParameter((WTF::StringImpl *)v12, v13, v14, (uint64_t)v36);
  v41[0] = this;
  v41[1] = v15;
  v42 = v15;
  v43[0] = v15;
  v43[1] = this;
  v44 = v15;
  v45 = this;
  v46 = v15;
  v47 = this;
  v48 = v15;
  v49 = this;
  v50 = v15;
  v51 = this;
  v52 = v15;
  v53 = this;
  v54 = v15;
  v55 = this;
  v56 = v15;
  v57 = this;
  v58 = v15;
  v59 = this;
  v60 = v15;
  v61 = this;
  v62 = v15;
  v63 = this;
  v64 = v15;
  v65 = this;
  v66 = v15;
  v67 = this;
  v68 = v15;
  v69 = this;
  v70 = v15;
  v71 = this;
  v72 = v15;
  if (v37 == -1)
    std::__throw_bad_variant_access[abi:sn180100]();
  v40 = (WTF::StringImpl *)v41;
  v16 = ((uint64_t (*)(WTF::StringImpl **, _QWORD *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore16convertToJSValueERN3JSC14JSGlobalObjectERNS8_17JSDOMGlobalObjectERKNS_7variantIJDnbijxyfNS6_6StringENS6_6VectorIbLm0ENS6_15CrashOnOverflowELm16ENS6_10FastMallocEEENSG_IiLm0ESH_Lm16ESI_EENSG_IjLm0ESH_Lm16ESI_EENS6_6RefPtrINS9_21GenericTypedArrayViewINS9_14Float32AdaptorEEENS6_12RawPtrTraitsISP_EENS6_21DefaultRefDerefTraitsISP_EEEENSM_INSN_INS9_12Int32AdaptorEEENSQ_ISW_EENSS_ISW_EEEENSM_INSN_INS9_13Uint32AdaptorEEENSQ_IS11_EENSS_IS11_EEEENSM_INSN_INS9_12Uint8AdaptorEEENSQ_IS16_EENSS_IS16_EEEENSM_INS8_11WebGLBufferENSQ_IS1A_EENSS_IS1A_EEEENSM_INS8_16WebGLFramebufferENSQ_IS1E_EENSS_IS1E_EEEENSM_INS8_12WebGLProgramENSQ_IS1I_EENSS_IS1I_EEEENSM_INS8_10WebGLQueryENSQ_IS1M_EENSS_IS1M_EEEENSM_INS8_17WebGLRenderbufferENSQ_IS1Q_EENSS_IS1Q_EEEENSM_INS8_12WebGLSamplerENSQ_IS1U_EENSS_IS1U_EEEENSM_INS8_12WebGLTextureENSQ_IS1Y_EENSS_IS1Y_EEEENSM_INS8_18WebGLTimerQueryEXTENSQ_IS22_EENSS_IS22_EEEENSM_INS8_22WebGLTransformFeedbackENSQ_IS26_EENSS_IS26_EEEENSM_INS8_22WebGLVertexArrayObjectENSQ_IS2A_EENSS_IS2A_EEEENSM_INS8_25WebGLVertexArrayObjectOESENSQ_IS2E_EENSS_IS2E_EEEEEEEE3__0JZNS8_16convertToJSValueESB_SD_S2K_E3__1ZNS8_16convertToJSValueESB_SD_S2K_E3__2ZNS8_16convertToJSValueESB_SD_S2K_E3__3ZNS8_16convertToJSValueESB_SD_S2K_E3__4ZNS8_16convertToJSValueESB_SD_S2K_E3__5ZNS8_16convertToJSValueESB_SD_S2K_E3__6ZNS8_16convertToJSValueESB_SD_S2K_E3__7ZNS8_16convertToJSValueESB_SD_S2K_E3__8ZNS8_16convertToJSValueESB_SD_S2K_E3__9ZNS8_16convertToJSValueESB_SD_S2K_E4__10ZNS8_16convertToJSValueESB_SD_S2K_E4__11ZNS8_16convertToJSValueESB_SD_S2K_E4__12ZNS8_16convertToJSValueESB_SD_S2K_E4__13ZNS8_16convertToJSValueESB_SD_S2K_E4__14ZNS8_16convertToJSValueESB_SD_S2K_E4__15ZNS8_16convertToJSValueESB_SD_S2K_E4__16ZNS8_16convertToJSValueESB_SD_S2K_E4__17ZNS8_16convertToJSValueESB_SD_S2K_E4__18ZNS8_16convertToJSValueESB_SD_S2K_E4__19ZNS8_16convertToJSValueESB_SD_S2K_E4__20ZNS8_16convertToJSValueESB_SD_S2K_E4__21ZNS8_16convertToJSValueESB_SD_S2K_E4__22ZNS8_16convertToJSValueESB_SD_S2K_E4__23ZNS8_16convertToJSValueESB_SD_S2K_E4__24ZNS8_16convertToJSValueESB_SD_S2K_E4__25EEEEEJRKNS0_6__implIJDnbijxyfSF_SJ_SK_SL_SU_SZ_S14_S19_S1D_S1H_S1L_S1P_S1T_S1X_S21_S25_S29_S2D_S2H_EEEEEEDcOT_DpOT0____fmatrix[v37])(&v40, v36);
  if (v37 != -1)
    off_1E333E518[v37](v41, v36);
  return (_BYTE *)v16;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_getShaderParameter(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  WebCore::WebGLShader *v24;
  uint64_t v25;
  unsigned int v26;
  JSValue v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  uint64_t v33;
  WebCore::InspectorInstrumentation *v34;
  WebCore::ScriptExecutionContext *v35;
  uint64_t v36;
  WebCore::InspectorCanvasAgent *v37;
  WebCore::InspectorInstrumentation *v38;
  WebCore::ScriptExecutionContext *v39;
  uint64_t v40;
  uint64_t v41;
  _DWORD *v42;
  _DWORD *v43;
  WTF::StringImpl *v44;
  WebCore *v45;
  JSC::JSGlobalObject *v46;
  JSC::CallFrame *v47;
  JSC::VM *v48;
  _QWORD v49[2];
  int v50;
  unsigned int v51[2];
  WTF::StringImpl *v52;
  _QWORD v53[2];
  uint64_t v54;
  _QWORD v55[2];
  uint64_t v56;
  WebCore *v57;
  uint64_t v58;
  WebCore *v59;
  uint64_t v60;
  WebCore *v61;
  uint64_t v62;
  WebCore *v63;
  uint64_t v64;
  WebCore *v65;
  uint64_t v66;
  WebCore *v67;
  uint64_t v68;
  WebCore *v69;
  uint64_t v70;
  WebCore *v71;
  uint64_t v72;
  WebCore *v73;
  uint64_t v74;
  WebCore *v75;
  uint64_t v76;
  WebCore *v77;
  uint64_t v78;
  WebCore *v79;
  uint64_t v80;
  WebCore *v81;
  uint64_t v82;
  WebCore *v83;
  uint64_t v84;
  uint64_t v85;

  v85 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v48 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v48, "WebGLRenderingContext", "getShaderParameter");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return WebCore::throwThisTypeError((int)this, (int)&v48, "WebGLRenderingContext", "getShaderParameter");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v29.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v29);
  }
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  v53[0] = v9;
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_24;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSWebGLShader::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSWebGLShader::s_info && v20 != 0);
  }
  if (!v19 || (v24 = *(WebCore::WebGLShader **)(v17 + 24)) == 0)
  {
LABEL_24:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v53, 0, "shader", 7, "WebGLRenderingContext", 22, a8, "getShaderParameter", 19, "WebGLShader", 12);
    return 0;
  }
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v51);
  if (v51[1])
    return 0;
  if (*(_BYTE *)(v16 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
    if (v30
      && (v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31)) != 0
      && (v33 = *(_QWORD *)(v32 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v33, (WebCore::CanvasRenderingContext *)(v16 + 8), v24, (uint64_t)v53);
    }
    else
    {
      LOBYTE(v53[0]) = 0;
      LOBYTE(v54) = 0;
    }
    v26 = v51[0];
    v34 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
    if (v34
      && (v36 = WebCore::InspectorInstrumentation::instrumentingAgents(v34, v35)) != 0
      && (v37 = *(WebCore::InspectorCanvasAgent **)(v36 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v37, (WebCore::CanvasRenderingContext *)(v16 + 8), v26, (uint64_t)v55);
    }
    else
    {
      LOBYTE(v55[0]) = 0;
      LOBYTE(v56) = 0;
    }
    v49[0] = v53;
    v49[1] = 2;
    v38 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
    if (v38)
    {
      v40 = WebCore::InspectorInstrumentation::instrumentingAgents(v38, v39);
      if (v40)
      {
        v41 = *(_QWORD *)(v40 + 96);
        if (v41)
          WebCore::InspectorCanvasAgent::recordAction(v41, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v52, v49);
      }
    }
    if ((_BYTE)v56)
    {
      v42 = (_DWORD *)v55[0];
      v55[0] = 0;
      if (v42)
      {
        if (*v42 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v42;
      }
    }
    if ((_BYTE)v54)
    {
      v43 = (_DWORD *)v53[0];
      v53[0] = 0;
      if (v43)
      {
        if (*v43 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v43;
      }
    }
    v44 = v52;
    v52 = 0;
    if (v44)
    {
      if (*(_DWORD *)v44 == 2)
        WTF::StringImpl::destroy(v44, v39);
      else
        *(_DWORD *)v44 -= 2;
    }
    v25 = *(_QWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
  }
  else
  {
    v25 = *(_QWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
    v26 = v51[0];
  }
  WebCore::WebGLRenderingContextBase::getShaderParameter((WTF::StringImpl *)v16, v24, v26, v49);
  v53[0] = this;
  v53[1] = v25;
  v54 = v25;
  v55[0] = v25;
  v55[1] = this;
  v56 = v25;
  v57 = this;
  v58 = v25;
  v59 = this;
  v60 = v25;
  v61 = this;
  v62 = v25;
  v63 = this;
  v64 = v25;
  v65 = this;
  v66 = v25;
  v67 = this;
  v68 = v25;
  v69 = this;
  v70 = v25;
  v71 = this;
  v72 = v25;
  v73 = this;
  v74 = v25;
  v75 = this;
  v76 = v25;
  v77 = this;
  v78 = v25;
  v79 = this;
  v80 = v25;
  v81 = this;
  v82 = v25;
  v83 = this;
  v84 = v25;
  if (v50 != -1)
  {
    v52 = (WTF::StringImpl *)v53;
    v23 = ((uint64_t (*)(WTF::StringImpl **, _QWORD *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore16convertToJSValueERN3JSC14JSGlobalObjectERNS8_17JSDOMGlobalObjectERKNS_7variantIJDnbijxyfNS6_6StringENS6_6VectorIbLm0ENS6_15CrashOnOverflowELm16ENS6_10FastMallocEEENSG_IiLm0ESH_Lm16ESI_EENSG_IjLm0ESH_Lm16ESI_EENS6_6RefPtrINS9_21GenericTypedArrayViewINS9_14Float32AdaptorEEENS6_12RawPtrTraitsISP_EENS6_21DefaultRefDerefTraitsISP_EEEENSM_INSN_INS9_12Int32AdaptorEEENSQ_ISW_EENSS_ISW_EEEENSM_INSN_INS9_13Uint32AdaptorEEENSQ_IS11_EENSS_IS11_EEEENSM_INSN_INS9_12Uint8AdaptorEEENSQ_IS16_EENSS_IS16_EEEENSM_INS8_11WebGLBufferENSQ_IS1A_EENSS_IS1A_EEEENSM_INS8_16WebGLFramebufferENSQ_IS1E_EENSS_IS1E_EEEENSM_INS8_12WebGLProgramENSQ_IS1I_EENSS_IS1I_EEEENSM_INS8_10WebGLQueryENSQ_IS1M_EENSS_IS1M_EEEENSM_INS8_17WebGLRenderbufferENSQ_IS1Q_EENSS_IS1Q_EEEENSM_INS8_12WebGLSamplerENSQ_IS1U_EENSS_IS1U_EEEENSM_INS8_12WebGLTextureENSQ_IS1Y_EENSS_IS1Y_EEEENSM_INS8_18WebGLTimerQueryEXTENSQ_IS22_EENSS_IS22_EEEENSM_INS8_22WebGLTransformFeedbackENSQ_IS26_EENSS_IS26_EEEENSM_INS8_22WebGLVertexArrayObjectENSQ_IS2A_EENSS_IS2A_EEEENSM_INS8_25WebGLVertexArrayObjectOESENSQ_IS2E_EENSS_IS2E_EEEEEEEE3__0JZNS8_16convertToJSValueESB_SD_S2K_E3__1ZNS8_16convertToJSValueESB_SD_S2K_E3__2ZNS8_16convertToJSValueESB_SD_S2K_E3__3ZNS8_16convertToJSValueESB_SD_S2K_E3__4ZNS8_16convertToJSValueESB_SD_S2K_E3__5ZNS8_16convertToJSValueESB_SD_S2K_E3__6ZNS8_16convertToJSValueESB_SD_S2K_E3__7ZNS8_16convertToJSValueESB_SD_S2K_E3__8ZNS8_16convertToJSValueESB_SD_S2K_E3__9ZNS8_16convertToJSValueESB_SD_S2K_E4__10ZNS8_16convertToJSValueESB_SD_S2K_E4__11ZNS8_16convertToJSValueESB_SD_S2K_E4__12ZNS8_16convertToJSValueESB_SD_S2K_E4__13ZNS8_16convertToJSValueESB_SD_S2K_E4__14ZNS8_16convertToJSValueESB_SD_S2K_E4__15ZNS8_16convertToJSValueESB_SD_S2K_E4__16ZNS8_16convertToJSValueESB_SD_S2K_E4__17ZNS8_16convertToJSValueESB_SD_S2K_E4__18ZNS8_16convertToJSValueESB_SD_S2K_E4__19ZNS8_16convertToJSValueESB_SD_S2K_E4__20ZNS8_16convertToJSValueESB_SD_S2K_E4__21ZNS8_16convertToJSValueESB_SD_S2K_E4__22ZNS8_16convertToJSValueESB_SD_S2K_E4__23ZNS8_16convertToJSValueESB_SD_S2K_E4__24ZNS8_16convertToJSValueESB_SD_S2K_E4__25EEEEEJRKNS0_6__implIJDnbijxyfSF_SJ_SK_SL_SU_SZ_S14_S19_S1D_S1H_S1L_S1P_S1T_S1X_S21_S25_S29_S2D_S2H_EEEEEEDcOT_DpOT0____fmatrix[v50])(&v52, v49);
    if (v50 != -1)
      off_1E333E518[v50](v53, v49);
    return (_BYTE *)v23;
  }
  v45 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsWebGLRenderingContextPrototypeFunction_getShaderInfoLog(v45, v46, v47);
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_getShaderInfoLog(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  WebCore::WebGLShader *v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  uint64_t v27;
  uint64_t *v28;
  int v29;
  unsigned __int8 *v31;
  unsigned int v32;
  unsigned int v33;
  JSValue v35;
  WebCore::InspectorInstrumentation *v36;
  WebCore::ScriptExecutionContext *v37;
  uint64_t v38;
  uint64_t v39;
  WebCore::InspectorInstrumentation *v40;
  WebCore::ScriptExecutionContext *v41;
  uint64_t v42;
  uint64_t v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  JSC::VM *v46;
  _QWORD v47[2];
  WTF::StringImpl *v48;
  WTF::StringImpl *v49[2];
  char v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v46 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v46, "WebGLRenderingContext", "getShaderInfoLog");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v46, "WebGLRenderingContext", "getShaderInfoLog");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v35.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v35);
  }
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  v49[0] = v9;
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_24;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSWebGLShader::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSWebGLShader::s_info && v20 != 0);
  }
  if (!v19 || (v24 = *(WebCore::WebGLShader **)(v17 + 24)) == 0)
  {
LABEL_24:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v49, 0, "shader", 7, "WebGLRenderingContext", 22, a8, "getShaderInfoLog", 17, "WebGLShader", 12);
    return 0;
  }
  if (*(_BYTE *)(v16 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v36 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
    if (v36
      && (v38 = WebCore::InspectorInstrumentation::instrumentingAgents(v36, v37)) != 0
      && (v39 = *(_QWORD *)(v38 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v39, (WebCore::CanvasRenderingContext *)(v16 + 8), v24, (uint64_t)v49);
    }
    else
    {
      LOBYTE(v49[0]) = 0;
      v50 = 0;
    }
    v47[0] = v49;
    v47[1] = 1;
    v40 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
    if (v40)
    {
      v42 = WebCore::InspectorInstrumentation::instrumentingAgents(v40, v41);
      if (v42)
      {
        v43 = *(_QWORD *)(v42 + 96);
        if (v43)
          WebCore::InspectorCanvasAgent::recordAction(v43, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v48, v47);
      }
    }
    if (v50)
    {
      v44 = v49[0];
      v49[0] = 0;
      if (v44)
      {
        if (*(_DWORD *)v44 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*(_DWORD *)v44;
      }
    }
    v45 = v48;
    v48 = 0;
    if (v45)
    {
      if (*(_DWORD *)v45 == 2)
        WTF::StringImpl::destroy(v45, v41);
      else
        *(_DWORD *)v45 -= 2;
    }
  }
  WebCore::WebGLRenderingContextBase::getShaderInfoLog((WTF::StringImpl *)v16, v24, v49);
  v26 = v49[0];
  if (!v49[0])
    return 2;
  v27 = *((_QWORD *)this + 7);
  v28 = (uint64_t *)(v27 + 41968);
  v29 = *((_DWORD *)v49[0] + 1);
  if (v29)
  {
    if (v29 != 1)
    {
LABEL_30:
      v23 = *(_QWORD *)(v27 + 64760);
      if (!v23 || v49[0] != *(WTF::StringImpl **)(v23 + 8))
        v23 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_33;
    }
    v31 = (unsigned __int8 *)*((_QWORD *)v49[0] + 1);
    if ((*((_BYTE *)v49[0] + 16) & 4) != 0)
    {
      v32 = *v31;
    }
    else
    {
      v33 = *(unsigned __int16 *)v31;
      if (v33 > 0xFF)
        goto LABEL_30;
      v32 = v33;
    }
    v28 = (uint64_t *)(v27 + 8 * v32 + 42216);
  }
  v23 = *v28;
LABEL_33:
  if (*(_DWORD *)v26 == 2)
    WTF::StringImpl::destroy(v26, v25);
  else
    *(_DWORD *)v26 -= 2;
  return v23;
}

unint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_getShaderPrecisionFormat(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;
  const char *v21;
  WTF::StringImpl *v22;
  uint64_t v23;
  JSValue v26;
  WebCore::InspectorInstrumentation *v27;
  WebCore::ScriptExecutionContext *v28;
  uint64_t v29;
  WebCore::InspectorCanvasAgent *v30;
  WebCore::InspectorInstrumentation *v31;
  WebCore::ScriptExecutionContext *v32;
  uint64_t v33;
  WebCore::InspectorCanvasAgent *v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  uint64_t v38;
  _DWORD *v39;
  _DWORD *v40;
  WTF::StringImpl *v41;
  JSC::VM *v42;
  _QWORD v43[2];
  WTF::StringImpl *v44;
  _DWORD v45[2];
  _DWORD v46[2];
  _QWORD v47[2];
  char v48;
  _DWORD *v49;
  char v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v42 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v42, "WebGLRenderingContext", "getShaderPrecisionFormat");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v42, "WebGLRenderingContext", "getShaderPrecisionFormat");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v26.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v26);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v46);
  if (v46[1])
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v45);
  if (v45[1])
    return 0;
  if (*(_BYTE *)(v12 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v13 = v46[0];
    v27 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v27
      && (v29 = WebCore::InspectorInstrumentation::instrumentingAgents(v27, v28)) != 0
      && (v30 = *(WebCore::InspectorCanvasAgent **)(v29 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v30, (WebCore::CanvasRenderingContext *)(v12 + 8), v13, (uint64_t)v47);
    }
    else
    {
      LOBYTE(v47[0]) = 0;
      v48 = 0;
    }
    v14 = v45[0];
    v31 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v31
      && (v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v31, v32)) != 0
      && (v34 = *(WebCore::InspectorCanvasAgent **)(v33 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v34, (WebCore::CanvasRenderingContext *)(v12 + 8), v14, (uint64_t)&v49);
    }
    else
    {
      LOBYTE(v49) = 0;
      v50 = 0;
    }
    v43[0] = v47;
    v43[1] = 2;
    v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v35)
    {
      v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36);
      if (v37)
      {
        v38 = *(_QWORD *)(v37 + 96);
        if (v38)
          WebCore::InspectorCanvasAgent::recordAction(v38, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v44, v43);
      }
    }
    if (v50)
    {
      v39 = v49;
      v49 = 0;
      if (v39)
      {
        if (*v39 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v39;
      }
    }
    if (v48)
    {
      v40 = (_DWORD *)v47[0];
      v47[0] = 0;
      if (v40)
      {
        if (*v40 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v40;
      }
    }
    v41 = v44;
    v44 = 0;
    if (v41)
    {
      if (*(_DWORD *)v41 == 2)
        WTF::StringImpl::destroy(v41, v36);
      else
        *(_DWORD *)v41 -= 2;
    }
  }
  else
  {
    v13 = v46[0];
    v14 = v45[0];
  }
  if (*(_BYTE *)(v12 + 364))
    return 2;
  if (v13 >> 1 != 17816)
  {
    v21 = "invalid shader type";
    v22 = (WTF::StringImpl *)v12;
    v23 = 20;
LABEL_24:
    WebCore::WebGLRenderingContextBase::synthesizeGLError(v22, 1280, (uint64_t)"getShaderPrecisionFormat", 25, (uint64_t)v21, v23);
    return 2;
  }
  if ((v14 - 36336) >= 6)
  {
    v21 = "invalid precision type";
    v22 = (WTF::StringImpl *)v12;
    v23 = 23;
    goto LABEL_24;
  }
  v15 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v47[0] = 0;
  LODWORD(v43[0]) = 0;
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD *, _QWORD *))(**(_QWORD **)(v12 + 88) + 568))(*(_QWORD *)(v12 + 88), v13, v14, v47, v43);
  v16 = v43[0];
  v17 = v47[0];
  v18 = WTF::fastMalloc((WTF *)0x10);
  *(_DWORD *)v18 = 1;
  *(_QWORD *)(v18 + 4) = v17;
  *(_DWORD *)(v18 + 12) = v16;
  v20 = WebCore::wrap<WebCore::WebGLShaderPrecisionFormat>((uint64_t)this, v15, (WTF *)v18);
  if (*(_DWORD *)v18 == 1)
    WTF::fastFree((WTF *)v18, v19);
  else
    --*(_DWORD *)v18;
  return v20;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_getShaderSource(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  WTF::StringImpl *v28;
  int v29;
  uint64_t v30;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t *v36;
  unsigned __int8 *v37;
  unsigned int v38;
  JSValue v40;
  unsigned int v41;
  WebCore::InspectorInstrumentation *v42;
  WebCore::ScriptExecutionContext *v43;
  uint64_t v44;
  uint64_t v45;
  WebCore::InspectorInstrumentation *v46;
  uint64_t v47;
  uint64_t v48;
  _DWORD *v49;
  WTF::StringImpl *v50;
  JSC::VM *v51;
  _QWORD v52[2];
  WTF::StringImpl *v53;
  _QWORD v54[2];
  char v55;
  uint64_t v56;

  v56 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v51 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v51, "WebGLRenderingContext", "getShaderSource");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v51, "WebGLRenderingContext", "getShaderSource");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v40.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v40);
  }
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  v54[0] = v9;
  if ((v17 & 0xFFFE000000000002) == 0)
  {
    v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v20 = (char **)(16 * v18);
    if ((_DWORD)v18)
      v21 = v20 == &WebCore::JSWebGLShader::s_info;
    else
      v21 = 1;
    if (!v21)
    {
      do
      {
        v20 = (char **)v20[2];
        v19 = v20 != 0;
      }
      while (v20 != &WebCore::JSWebGLShader::s_info && v20 != 0);
    }
    if (v19)
    {
      v24 = *(_QWORD *)(v17 + 24);
      if (v24)
      {
        if (*(_BYTE *)(v16 + 33))
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v42 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
          if (v42
            && (v44 = WebCore::InspectorInstrumentation::instrumentingAgents(v42, v43)) != 0
            && (v45 = *(_QWORD *)(v44 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v45, (WebCore::CanvasRenderingContext *)(v16 + 8), (WebCore::WebGLShader *)v24, (uint64_t)v54);
          }
          else
          {
            LOBYTE(v54[0]) = 0;
            v55 = 0;
          }
          v52[0] = v54;
          v52[1] = 1;
          v46 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
          if (v46)
          {
            v47 = WebCore::InspectorInstrumentation::instrumentingAgents(v46, a2);
            if (v47)
            {
              v48 = *(_QWORD *)(v47 + 96);
              if (v48)
                WebCore::InspectorCanvasAgent::recordAction(v48, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v53, v52);
            }
          }
          if (v55)
          {
            v49 = (_DWORD *)v54[0];
            v54[0] = 0;
            if (v49)
            {
              if (*v49 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v49;
            }
          }
          v50 = v53;
          v53 = 0;
          if (v50)
          {
            if (*(_DWORD *)v50 == 2)
              WTF::StringImpl::destroy(v50, a2);
            else
              *(_DWORD *)v50 -= 2;
          }
        }
        if (*(_BYTE *)(v16 + 364))
          return 2;
        v25 = *(_QWORD *)(v24 + 16);
        if (v25)
        {
          v26 = *(_QWORD *)(v25 + 8);
          if (v26)
            v25 = v26 - 8;
          else
            v25 = 0;
        }
        if (v25 != v16)
        {
          v27 = "object does not belong to this context";
          v28 = (WTF::StringImpl *)v16;
          v29 = 1282;
          v30 = 39;
LABEL_34:
          WebCore::WebGLRenderingContextBase::synthesizeGLError(v28, v29, (uint64_t)"getShaderSource", 16, (uint64_t)v27, v30);
          return 2;
        }
        if (!*(_DWORD *)(v24 + 24))
        {
          v27 = "attempt to use a deleted object";
          v28 = (WTF::StringImpl *)v16;
          v29 = 1281;
          v30 = 32;
          goto LABEL_34;
        }
        v32 = *(_QWORD *)(v24 + 40);
        if (!v32)
        {
          v32 = *MEMORY[0x1E0CBF738];
          if (!*MEMORY[0x1E0CBF738])
            return 2;
        }
        v33 = *(_DWORD *)v32;
        v34 = *(_DWORD *)(v32 + 4);
        *(_DWORD *)v32 += 2;
        v35 = *((_QWORD *)this + 7);
        v36 = (uint64_t *)(v35 + 41968);
        if (v34)
        {
          if (v34 != 1)
          {
LABEL_42:
            v23 = *(_QWORD *)(v35 + 64760);
            if (!v23 || v32 != *(_QWORD *)(v23 + 8))
            {
              v23 = JSC::jsStringWithCacheSlowCase();
              v33 = *(_DWORD *)v32 - 2;
            }
            if (v33)
              goto LABEL_46;
            goto LABEL_52;
          }
          v37 = *(unsigned __int8 **)(v32 + 8);
          if ((*(_BYTE *)(v32 + 16) & 4) != 0)
          {
            v38 = *v37;
          }
          else
          {
            v41 = *(unsigned __int16 *)v37;
            if (v41 > 0xFF)
              goto LABEL_42;
            v38 = v41;
          }
          v36 = (uint64_t *)(v35 + 8 * v38 + 42216);
        }
        v23 = *v36;
        if (v33)
        {
LABEL_46:
          *(_DWORD *)v32 = v33;
          return v23;
        }
LABEL_52:
        WTF::StringImpl::destroy((WTF::StringImpl *)v32, a2);
        return v23;
      }
    }
  }
  WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v54, 0, "shader", 7, "WebGLRenderingContext", 22, a8, "getShaderSource", 16, "WebGLShader", 12);
  return 0;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_getTexParameter(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  JSValue v19;
  WebCore::InspectorInstrumentation *v20;
  WebCore::ScriptExecutionContext *v21;
  uint64_t v22;
  WebCore::InspectorCanvasAgent *v23;
  WebCore::InspectorInstrumentation *v24;
  WebCore::ScriptExecutionContext *v25;
  uint64_t v26;
  WebCore::InspectorCanvasAgent *v27;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  uint64_t v31;
  _DWORD *v32;
  _DWORD *v33;
  WTF::StringImpl *v34;
  JSC::VM *v35;
  _QWORD v36[2];
  int v37;
  unsigned int v38[2];
  unsigned int v39[2];
  WTF::StringImpl *v40;
  _QWORD v41[2];
  uint64_t v42;
  _QWORD v43[2];
  uint64_t v44;
  WebCore *v45;
  uint64_t v46;
  WebCore *v47;
  uint64_t v48;
  WebCore *v49;
  uint64_t v50;
  WebCore *v51;
  uint64_t v52;
  WebCore *v53;
  uint64_t v54;
  WebCore *v55;
  uint64_t v56;
  WebCore *v57;
  uint64_t v58;
  WebCore *v59;
  uint64_t v60;
  WebCore *v61;
  uint64_t v62;
  WebCore *v63;
  uint64_t v64;
  WebCore *v65;
  uint64_t v66;
  WebCore *v67;
  uint64_t v68;
  WebCore *v69;
  uint64_t v70;
  WebCore *v71;
  uint64_t v72;
  uint64_t v73;

  v73 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v35 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v35, "WebGLRenderingContext", "getTexParameter");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v35, "WebGLRenderingContext", "getTexParameter");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v19);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v39);
  if (v39[1])
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v38);
  if (v38[1])
    return 0;
  if (*(_BYTE *)(v12 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v13 = v39[0];
    v20 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v20
      && (v22 = WebCore::InspectorInstrumentation::instrumentingAgents(v20, v21)) != 0
      && (v23 = *(WebCore::InspectorCanvasAgent **)(v22 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v23, (WebCore::CanvasRenderingContext *)(v12 + 8), v13, (uint64_t)v41);
    }
    else
    {
      LOBYTE(v41[0]) = 0;
      LOBYTE(v42) = 0;
    }
    v14 = v38[0];
    v24 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v24
      && (v26 = WebCore::InspectorInstrumentation::instrumentingAgents(v24, v25)) != 0
      && (v27 = *(WebCore::InspectorCanvasAgent **)(v26 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v27, (WebCore::CanvasRenderingContext *)(v12 + 8), v14, (uint64_t)v43);
    }
    else
    {
      LOBYTE(v43[0]) = 0;
      LOBYTE(v44) = 0;
    }
    v36[0] = v41;
    v36[1] = 2;
    v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v28)
    {
      v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29);
      if (v30)
      {
        v31 = *(_QWORD *)(v30 + 96);
        if (v31)
          WebCore::InspectorCanvasAgent::recordAction(v31, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v40, v36);
      }
    }
    if ((_BYTE)v44)
    {
      v32 = (_DWORD *)v43[0];
      v43[0] = 0;
      if (v32)
      {
        if (*v32 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v32;
      }
    }
    if ((_BYTE)v42)
    {
      v33 = (_DWORD *)v41[0];
      v41[0] = 0;
      if (v33)
      {
        if (*v33 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v33;
      }
    }
    v34 = v40;
    v40 = 0;
    if (v34)
    {
      if (*(_DWORD *)v34 == 2)
        WTF::StringImpl::destroy(v34, v29);
      else
        *(_DWORD *)v34 -= 2;
    }
  }
  else
  {
    v13 = v39[0];
    v14 = v38[0];
  }
  v15 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  WebCore::WebGLRenderingContextBase::getTexParameter((WebCore::WebGLRenderingContextBase *)v12, v13, v14, (uint64_t)v36);
  v41[0] = this;
  v41[1] = v15;
  v42 = v15;
  v43[0] = v15;
  v43[1] = this;
  v44 = v15;
  v45 = this;
  v46 = v15;
  v47 = this;
  v48 = v15;
  v49 = this;
  v50 = v15;
  v51 = this;
  v52 = v15;
  v53 = this;
  v54 = v15;
  v55 = this;
  v56 = v15;
  v57 = this;
  v58 = v15;
  v59 = this;
  v60 = v15;
  v61 = this;
  v62 = v15;
  v63 = this;
  v64 = v15;
  v65 = this;
  v66 = v15;
  v67 = this;
  v68 = v15;
  v69 = this;
  v70 = v15;
  v71 = this;
  v72 = v15;
  if (v37 == -1)
    std::__throw_bad_variant_access[abi:sn180100]();
  v40 = (WTF::StringImpl *)v41;
  v16 = ((uint64_t (*)(WTF::StringImpl **, _QWORD *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore16convertToJSValueERN3JSC14JSGlobalObjectERNS8_17JSDOMGlobalObjectERKNS_7variantIJDnbijxyfNS6_6StringENS6_6VectorIbLm0ENS6_15CrashOnOverflowELm16ENS6_10FastMallocEEENSG_IiLm0ESH_Lm16ESI_EENSG_IjLm0ESH_Lm16ESI_EENS6_6RefPtrINS9_21GenericTypedArrayViewINS9_14Float32AdaptorEEENS6_12RawPtrTraitsISP_EENS6_21DefaultRefDerefTraitsISP_EEEENSM_INSN_INS9_12Int32AdaptorEEENSQ_ISW_EENSS_ISW_EEEENSM_INSN_INS9_13Uint32AdaptorEEENSQ_IS11_EENSS_IS11_EEEENSM_INSN_INS9_12Uint8AdaptorEEENSQ_IS16_EENSS_IS16_EEEENSM_INS8_11WebGLBufferENSQ_IS1A_EENSS_IS1A_EEEENSM_INS8_16WebGLFramebufferENSQ_IS1E_EENSS_IS1E_EEEENSM_INS8_12WebGLProgramENSQ_IS1I_EENSS_IS1I_EEEENSM_INS8_10WebGLQueryENSQ_IS1M_EENSS_IS1M_EEEENSM_INS8_17WebGLRenderbufferENSQ_IS1Q_EENSS_IS1Q_EEEENSM_INS8_12WebGLSamplerENSQ_IS1U_EENSS_IS1U_EEEENSM_INS8_12WebGLTextureENSQ_IS1Y_EENSS_IS1Y_EEEENSM_INS8_18WebGLTimerQueryEXTENSQ_IS22_EENSS_IS22_EEEENSM_INS8_22WebGLTransformFeedbackENSQ_IS26_EENSS_IS26_EEEENSM_INS8_22WebGLVertexArrayObjectENSQ_IS2A_EENSS_IS2A_EEEENSM_INS8_25WebGLVertexArrayObjectOESENSQ_IS2E_EENSS_IS2E_EEEEEEEE3__0JZNS8_16convertToJSValueESB_SD_S2K_E3__1ZNS8_16convertToJSValueESB_SD_S2K_E3__2ZNS8_16convertToJSValueESB_SD_S2K_E3__3ZNS8_16convertToJSValueESB_SD_S2K_E3__4ZNS8_16convertToJSValueESB_SD_S2K_E3__5ZNS8_16convertToJSValueESB_SD_S2K_E3__6ZNS8_16convertToJSValueESB_SD_S2K_E3__7ZNS8_16convertToJSValueESB_SD_S2K_E3__8ZNS8_16convertToJSValueESB_SD_S2K_E3__9ZNS8_16convertToJSValueESB_SD_S2K_E4__10ZNS8_16convertToJSValueESB_SD_S2K_E4__11ZNS8_16convertToJSValueESB_SD_S2K_E4__12ZNS8_16convertToJSValueESB_SD_S2K_E4__13ZNS8_16convertToJSValueESB_SD_S2K_E4__14ZNS8_16convertToJSValueESB_SD_S2K_E4__15ZNS8_16convertToJSValueESB_SD_S2K_E4__16ZNS8_16convertToJSValueESB_SD_S2K_E4__17ZNS8_16convertToJSValueESB_SD_S2K_E4__18ZNS8_16convertToJSValueESB_SD_S2K_E4__19ZNS8_16convertToJSValueESB_SD_S2K_E4__20ZNS8_16convertToJSValueESB_SD_S2K_E4__21ZNS8_16convertToJSValueESB_SD_S2K_E4__22ZNS8_16convertToJSValueESB_SD_S2K_E4__23ZNS8_16convertToJSValueESB_SD_S2K_E4__24ZNS8_16convertToJSValueESB_SD_S2K_E4__25EEEEEJRKNS0_6__implIJDnbijxyfSF_SJ_SK_SL_SU_SZ_S14_S19_S1D_S1H_S1L_S1P_S1T_S1X_S21_S25_S29_S2D_S2H_EEEEEEDcOT_DpOT0____fmatrix[v37])(&v40, v36);
  if (v37 != -1)
    off_1E333E518[v37](v41, v36);
  return (_BYTE *)v16;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_getUniform(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BOOL4 v28;
  char **v29;
  BOOL v30;
  uint64_t v32;
  uint64_t v33;
  JSValue v36;
  WebCore::InspectorInstrumentation *v37;
  WebCore::ScriptExecutionContext *v38;
  uint64_t v39;
  uint64_t v40;
  WebCore::InspectorInstrumentation *v41;
  WebCore::ScriptExecutionContext *v42;
  uint64_t v43;
  uint64_t v44;
  WebCore::InspectorInstrumentation *v45;
  WebCore::ScriptExecutionContext *v46;
  uint64_t v47;
  uint64_t v48;
  _DWORD *v49;
  _DWORD *v50;
  WTF::StringImpl *v51;
  WebCore *v52;
  JSC::JSGlobalObject *v53;
  JSC::CallFrame *v54;
  _DWORD *v55;
  JSC::VM *v56;
  _QWORD v57[2];
  int v58;
  WTF::StringImpl *v59;
  _QWORD v60[2];
  uint64_t v61;
  _QWORD v62[2];
  uint64_t v63;
  WebCore *v64;
  uint64_t v65;
  WebCore *v66;
  uint64_t v67;
  WebCore *v68;
  uint64_t v69;
  WebCore *v70;
  uint64_t v71;
  WebCore *v72;
  uint64_t v73;
  WebCore *v74;
  uint64_t v75;
  WebCore *v76;
  uint64_t v77;
  WebCore *v78;
  uint64_t v79;
  WebCore *v80;
  uint64_t v81;
  WebCore *v82;
  uint64_t v83;
  WebCore *v84;
  uint64_t v85;
  WebCore *v86;
  uint64_t v87;
  WebCore *v88;
  uint64_t v89;
  WebCore *v90;
  uint64_t v91;
  uint64_t v92;

  v92 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v56 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v56, "WebGLRenderingContext", "getUniform");
  v11 = 16 * (*(_DWORD *)v10 & 0xFFFFFFFE);
  v12 = *(unsigned int *)(v11 + 0x4C);
  v13 = *(_DWORD *)(v11 + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSWebGLRenderingContext::s_info && v14 != 0);
  }
  if (!v13)
    return WebCore::throwThisTypeError((int)this, (int)&v56, "WebGLRenderingContext", "getUniform");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v36.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v36);
  }
  v17 = *(_QWORD *)(v10 + 24);
  v18 = *((_QWORD *)a2 + 6);
  v60[0] = v9;
  if ((v18 & 0xFFFE000000000002) != 0)
    goto LABEL_24;
  v19 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
  v20 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSWebGLProgram::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSWebGLProgram::s_info && v21 != 0);
  }
  if (!v20 || (v25 = *(_QWORD *)(v18 + 24)) == 0)
  {
LABEL_24:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v60, 0, "program", 8, "WebGLRenderingContext", 22, a8, "getUniform", 11, "WebGLProgram", 13);
    return 0;
  }
  v26 = *((_QWORD *)a2 + 7);
  v60[0] = v9;
  if ((v26 & 0xFFFE000000000002) != 0)
    goto LABEL_37;
  v27 = *(unsigned int *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0x4C);
  v28 = *(_DWORD *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0x4C) != 0;
  v29 = (char **)(16 * v27);
  if ((_DWORD)v27)
    v30 = v29 == &WebCore::JSWebGLUniformLocation::s_info;
  else
    v30 = 1;
  if (!v30)
  {
    do
    {
      v29 = (char **)v29[2];
      v28 = v29 != 0;
    }
    while (v29 != &WebCore::JSWebGLUniformLocation::s_info && v29 != 0);
  }
  if (!v28 || (v32 = *(_QWORD *)(v26 + 24)) == 0)
  {
LABEL_37:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v60, 1, "location", 9, "WebGLRenderingContext", 22, a8, "getUniform", 11, "WebGLUniformLocation", 21);
    return 0;
  }
  if (*(_BYTE *)(v17 + 33))
  {
    v55 = (_DWORD *)v10;
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v37 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v37
      && (v39 = WebCore::InspectorInstrumentation::instrumentingAgents(v37, v38)) != 0
      && (v40 = *(_QWORD *)(v39 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v40, (WTF::StringImpl *)(v17 + 8), v25, (uint64_t)v60);
    }
    else
    {
      LOBYTE(v60[0]) = 0;
      LOBYTE(v61) = 0;
    }
    v41 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v41
      && (v43 = WebCore::InspectorInstrumentation::instrumentingAgents(v41, v42)) != 0
      && (v44 = *(_QWORD *)(v43 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v44, (WTF::StringImpl *)(v17 + 8), v32, (uint64_t)v62);
    }
    else
    {
      LOBYTE(v62[0]) = 0;
      LOBYTE(v63) = 0;
    }
    v57[0] = v60;
    v57[1] = 2;
    v45 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v45)
    {
      v47 = WebCore::InspectorInstrumentation::instrumentingAgents(v45, v46);
      if (v47)
      {
        v48 = *(_QWORD *)(v47 + 96);
        if (v48)
          WebCore::InspectorCanvasAgent::recordAction(v48, (WebCore::CanvasRenderingContext *)(v17 + 8), (const WTF::StringImpl *)&v59, v57);
      }
    }
    if ((_BYTE)v63)
    {
      v49 = (_DWORD *)v62[0];
      v62[0] = 0;
      if (v49)
      {
        if (*v49 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v49;
      }
    }
    if ((_BYTE)v61)
    {
      v50 = (_DWORD *)v60[0];
      v60[0] = 0;
      if (v50)
      {
        if (*v50 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v50;
      }
    }
    v51 = v59;
    v59 = 0;
    if (v51)
    {
      if (*(_DWORD *)v51 == 2)
        WTF::StringImpl::destroy(v51, v46);
      else
        *(_DWORD *)v51 -= 2;
    }
    v33 = *(_QWORD *)(16 * (*v55 & 0xFFFFFFFE) + 0x28);
  }
  else
  {
    v33 = *(_QWORD *)(v11 + 40);
  }
  WebCore::WebGLRenderingContextBase::getUniform(v17, v25, v32, (uint64_t)v57);
  v60[0] = this;
  v60[1] = v33;
  v61 = v33;
  v62[0] = v33;
  v62[1] = this;
  v63 = v33;
  v64 = this;
  v65 = v33;
  v66 = this;
  v67 = v33;
  v68 = this;
  v69 = v33;
  v70 = this;
  v71 = v33;
  v72 = this;
  v73 = v33;
  v74 = this;
  v75 = v33;
  v76 = this;
  v77 = v33;
  v78 = this;
  v79 = v33;
  v80 = this;
  v81 = v33;
  v82 = this;
  v83 = v33;
  v84 = this;
  v85 = v33;
  v86 = this;
  v87 = v33;
  v88 = this;
  v89 = v33;
  v90 = this;
  v91 = v33;
  if (v58 != -1)
  {
    v59 = (WTF::StringImpl *)v60;
    v24 = ((uint64_t (*)(WTF::StringImpl **, _QWORD *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore16convertToJSValueERN3JSC14JSGlobalObjectERNS8_17JSDOMGlobalObjectERKNS_7variantIJDnbijxyfNS6_6StringENS6_6VectorIbLm0ENS6_15CrashOnOverflowELm16ENS6_10FastMallocEEENSG_IiLm0ESH_Lm16ESI_EENSG_IjLm0ESH_Lm16ESI_EENS6_6RefPtrINS9_21GenericTypedArrayViewINS9_14Float32AdaptorEEENS6_12RawPtrTraitsISP_EENS6_21DefaultRefDerefTraitsISP_EEEENSM_INSN_INS9_12Int32AdaptorEEENSQ_ISW_EENSS_ISW_EEEENSM_INSN_INS9_13Uint32AdaptorEEENSQ_IS11_EENSS_IS11_EEEENSM_INSN_INS9_12Uint8AdaptorEEENSQ_IS16_EENSS_IS16_EEEENSM_INS8_11WebGLBufferENSQ_IS1A_EENSS_IS1A_EEEENSM_INS8_16WebGLFramebufferENSQ_IS1E_EENSS_IS1E_EEEENSM_INS8_12WebGLProgramENSQ_IS1I_EENSS_IS1I_EEEENSM_INS8_10WebGLQueryENSQ_IS1M_EENSS_IS1M_EEEENSM_INS8_17WebGLRenderbufferENSQ_IS1Q_EENSS_IS1Q_EEEENSM_INS8_12WebGLSamplerENSQ_IS1U_EENSS_IS1U_EEEENSM_INS8_12WebGLTextureENSQ_IS1Y_EENSS_IS1Y_EEEENSM_INS8_18WebGLTimerQueryEXTENSQ_IS22_EENSS_IS22_EEEENSM_INS8_22WebGLTransformFeedbackENSQ_IS26_EENSS_IS26_EEEENSM_INS8_22WebGLVertexArrayObjectENSQ_IS2A_EENSS_IS2A_EEEENSM_INS8_25WebGLVertexArrayObjectOESENSQ_IS2E_EENSS_IS2E_EEEEEEEE3__0JZNS8_16convertToJSValueESB_SD_S2K_E3__1ZNS8_16convertToJSValueESB_SD_S2K_E3__2ZNS8_16convertToJSValueESB_SD_S2K_E3__3ZNS8_16convertToJSValueESB_SD_S2K_E3__4ZNS8_16convertToJSValueESB_SD_S2K_E3__5ZNS8_16convertToJSValueESB_SD_S2K_E3__6ZNS8_16convertToJSValueESB_SD_S2K_E3__7ZNS8_16convertToJSValueESB_SD_S2K_E3__8ZNS8_16convertToJSValueESB_SD_S2K_E3__9ZNS8_16convertToJSValueESB_SD_S2K_E4__10ZNS8_16convertToJSValueESB_SD_S2K_E4__11ZNS8_16convertToJSValueESB_SD_S2K_E4__12ZNS8_16convertToJSValueESB_SD_S2K_E4__13ZNS8_16convertToJSValueESB_SD_S2K_E4__14ZNS8_16convertToJSValueESB_SD_S2K_E4__15ZNS8_16convertToJSValueESB_SD_S2K_E4__16ZNS8_16convertToJSValueESB_SD_S2K_E4__17ZNS8_16convertToJSValueESB_SD_S2K_E4__18ZNS8_16convertToJSValueESB_SD_S2K_E4__19ZNS8_16convertToJSValueESB_SD_S2K_E4__20ZNS8_16convertToJSValueESB_SD_S2K_E4__21ZNS8_16convertToJSValueESB_SD_S2K_E4__22ZNS8_16convertToJSValueESB_SD_S2K_E4__23ZNS8_16convertToJSValueESB_SD_S2K_E4__24ZNS8_16convertToJSValueESB_SD_S2K_E4__25EEEEEJRKNS0_6__implIJDnbijxyfSF_SJ_SK_SL_SU_SZ_S14_S19_S1D_S1H_S1L_S1P_S1T_S1X_S21_S25_S29_S2D_S2H_EEEEEEDcOT_DpOT0____fmatrix[v58])(&v59, v57);
    if (v58 != -1)
      off_1E333E518[v58](v60, v57);
    return (_BYTE *)v24;
  }
  v52 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsWebGLRenderingContextPrototypeFunction_getUniformLocation(v52, v53, v54);
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_getUniformLocation(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  unint64_t v23;
  WebCore::WebGLProgram *v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  uint64_t v28;
  WTF::StringImpl *v29;
  void *v30;
  WTF *v31;
  WTF::StringImpl *v32;
  int v33;
  _DWORD *v35;
  JSValue v37;
  WTF::StringImpl *v38;
  char hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v40;
  WebCore::ScriptExecutionContext *v41;
  uint64_t v42;
  uint64_t v43;
  WebCore::InspectorInstrumentation *v44;
  WebCore::ScriptExecutionContext *v45;
  uint64_t v46;
  WebCore::InspectorCanvasAgent *v47;
  WebCore::InspectorInstrumentation *v48;
  WebCore::ScriptExecutionContext *v49;
  uint64_t v50;
  uint64_t v51;
  _DWORD *v52;
  WTF *v53;
  WTF::StringImpl *v54;
  JSC::VM *v55;
  WTF::StringImpl *v56[2];
  WTF *v57;
  WTF::StringImpl *v58;
  int v59;
  WTF *v60[2];
  char v61;
  _DWORD *v62;
  char v63;
  uint64_t v64;

  v64 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v55 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v55, "WebGLRenderingContext", "getUniformLocation");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return WebCore::throwThisTypeError((int)this, (int)&v55, "WebGLRenderingContext", "getUniformLocation");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v37.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v37);
  }
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  v60[0] = v9;
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_24;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSWebGLProgram::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSWebGLProgram::s_info && v20 != 0);
  }
  if (!v19 || (v24 = *(WebCore::WebGLProgram **)(v17 + 24)) == 0)
  {
LABEL_24:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v60, 0, "program", 8, "WebGLRenderingContext", 22, a8, "getUniformLocation", 19, "WebGLProgram", 13);
    return 0;
  }
  v25 = *((_QWORD *)a2 + 7);
  v60[0] = (WTF *)v25;
  if ((v25 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v25 + 5) == 2)
  {
    v26 = *(WTF::StringImpl **)(v25 + 8);
    if ((v26 & 1) != 0)
    {
      v26 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v25, this);
      if (!v26)
        goto LABEL_31;
    }
    else if (!v26)
    {
LABEL_31:
      v56[0] = v26;
      goto LABEL_32;
    }
    *(_DWORD *)v26 += 2;
    goto LABEL_31;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v60, this);
LABEL_32:
  if (*((_DWORD *)v9 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v9);
    v27 = v56[0];
    if ((hasExceptionsAfterHandlingTraps & 1) != 0)
    {
      v59 = 1;
      v56[0] = 0;
      if (v27)
      {
        if (*(_DWORD *)v27 == 2)
        {
          WTF::StringImpl::destroy(v27, v38);
          v33 = v59;
          v23 = 0;
          goto LABEL_44;
        }
        *(_DWORD *)v27 -= 2;
      }
      v23 = 0;
      v33 = 1;
      goto LABEL_45;
    }
  }
  else
  {
    v27 = v56[0];
  }
  v58 = v27;
  v59 = 0;
  if (*(_BYTE *)(v16 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v57 = v60[0];
    v40 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
    if (v40
      && (v42 = WebCore::InspectorInstrumentation::instrumentingAgents(v40, v41)) != 0
      && (v43 = *(_QWORD *)(v42 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v43, (WTF::StringImpl *)(v16 + 8), (uint64_t)v24, (uint64_t)v60);
    }
    else
    {
      LOBYTE(v60[0]) = 0;
      v61 = 0;
    }
    v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
    if (v44
      && (v46 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, v45)) != 0
      && (v47 = *(WebCore::InspectorCanvasAgent **)(v46 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v47, (WebCore::CanvasRenderingContext *)(v16 + 8), (int **)&v58, (uint64_t)&v62);
    }
    else
    {
      LOBYTE(v62) = 0;
      v63 = 0;
    }
    v56[0] = (WTF::StringImpl *)v60;
    v56[1] = (WTF::StringImpl *)2;
    v48 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
    if (v48)
    {
      v50 = WebCore::InspectorInstrumentation::instrumentingAgents(v48, v49);
      if (v50)
      {
        v51 = *(_QWORD *)(v50 + 96);
        if (v51)
          WebCore::InspectorCanvasAgent::recordAction(v51, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v57, v56);
      }
    }
    if (v63)
    {
      v52 = v62;
      v62 = 0;
      if (v52)
      {
        if (*v52 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v52;
      }
    }
    if (v61)
    {
      v53 = v60[0];
      v60[0] = 0;
      if (v53)
      {
        if (*(_DWORD *)v53 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*(_DWORD *)v53;
      }
    }
    v54 = v57;
    v57 = 0;
    if (v54)
    {
      if (*(_DWORD *)v54 == 2)
        goto LABEL_91;
      *(_DWORD *)v54 -= 2;
    }
    while (v59)
    {
      v54 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_91:
      WTF::StringImpl::destroy(v54, v49);
    }
  }
  v28 = *(_QWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
  v29 = v58;
  v58 = 0;
  v56[0] = v29;
  WebCore::WebGLRenderingContextBase::getUniformLocation(v16, v24, v56, (uint64_t *)v60);
  if (v60[0])
  {
    v23 = WebCore::wrap<WebCore::WebGLUniformLocation>((uint64_t)this, v28, v60[0]);
    v31 = v60[0];
    v60[0] = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 1)
      {
        v35 = (_DWORD *)*((_QWORD *)v31 + 1);
        *((_QWORD *)v31 + 1) = 0;
        if (v35)
        {
          if (v35[2] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v35 + 8))(v35);
          else
            --v35[2];
        }
        WTF::fastFree(v31, v30);
      }
      else
      {
        --*(_DWORD *)v31;
      }
    }
  }
  else
  {
    v60[0] = 0;
    v23 = 2;
  }
  v32 = v56[0];
  v56[0] = 0;
  if (v32)
  {
    if (*(_DWORD *)v32 == 2)
      WTF::StringImpl::destroy(v32, (WTF::StringImpl *)v30);
    else
      *(_DWORD *)v32 -= 2;
  }
  v33 = v59;
LABEL_44:
  if (v33 != -1)
LABEL_45:
    ((void (*)(WTF **, WTF::StringImpl **))off_1E333EAB8[v33])(v60, &v58);
  return (_BYTE *)v23;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_getVertexAttrib(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  JSValue v19;
  WebCore::InspectorInstrumentation *v20;
  WebCore::ScriptExecutionContext *v21;
  uint64_t v22;
  WebCore::InspectorCanvasAgent *v23;
  WebCore::InspectorInstrumentation *v24;
  WebCore::ScriptExecutionContext *v25;
  uint64_t v26;
  WebCore::InspectorCanvasAgent *v27;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  uint64_t v31;
  _DWORD *v32;
  _DWORD *v33;
  WTF::StringImpl *v34;
  JSC::VM *v35;
  _QWORD v36[2];
  int v37;
  unsigned int v38[2];
  unsigned int v39[2];
  WTF::StringImpl *v40;
  _QWORD v41[2];
  uint64_t v42;
  _QWORD v43[2];
  uint64_t v44;
  WebCore *v45;
  uint64_t v46;
  WebCore *v47;
  uint64_t v48;
  WebCore *v49;
  uint64_t v50;
  WebCore *v51;
  uint64_t v52;
  WebCore *v53;
  uint64_t v54;
  WebCore *v55;
  uint64_t v56;
  WebCore *v57;
  uint64_t v58;
  WebCore *v59;
  uint64_t v60;
  WebCore *v61;
  uint64_t v62;
  WebCore *v63;
  uint64_t v64;
  WebCore *v65;
  uint64_t v66;
  WebCore *v67;
  uint64_t v68;
  WebCore *v69;
  uint64_t v70;
  WebCore *v71;
  uint64_t v72;
  uint64_t v73;

  v73 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v35 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v35, "WebGLRenderingContext", "getVertexAttrib");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v35, "WebGLRenderingContext", "getVertexAttrib");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v19);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v39);
  if (v39[1])
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v38);
  if (v38[1])
    return 0;
  if (*(_BYTE *)(v12 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v13 = v39[0];
    v20 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v20
      && (v22 = WebCore::InspectorInstrumentation::instrumentingAgents(v20, v21)) != 0
      && (v23 = *(WebCore::InspectorCanvasAgent **)(v22 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v23, (WebCore::CanvasRenderingContext *)(v12 + 8), v13, (uint64_t)v41);
    }
    else
    {
      LOBYTE(v41[0]) = 0;
      LOBYTE(v42) = 0;
    }
    v14 = v38[0];
    v24 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v24
      && (v26 = WebCore::InspectorInstrumentation::instrumentingAgents(v24, v25)) != 0
      && (v27 = *(WebCore::InspectorCanvasAgent **)(v26 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v27, (WebCore::CanvasRenderingContext *)(v12 + 8), v14, (uint64_t)v43);
    }
    else
    {
      LOBYTE(v43[0]) = 0;
      LOBYTE(v44) = 0;
    }
    v36[0] = v41;
    v36[1] = 2;
    v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v28)
    {
      v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29);
      if (v30)
      {
        v31 = *(_QWORD *)(v30 + 96);
        if (v31)
          WebCore::InspectorCanvasAgent::recordAction(v31, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v40, v36);
      }
    }
    if ((_BYTE)v44)
    {
      v32 = (_DWORD *)v43[0];
      v43[0] = 0;
      if (v32)
      {
        if (*v32 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v32;
      }
    }
    if ((_BYTE)v42)
    {
      v33 = (_DWORD *)v41[0];
      v41[0] = 0;
      if (v33)
      {
        if (*v33 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v33;
      }
    }
    v34 = v40;
    v40 = 0;
    if (v34)
    {
      if (*(_DWORD *)v34 == 2)
        WTF::StringImpl::destroy(v34, v29);
      else
        *(_DWORD *)v34 -= 2;
    }
  }
  else
  {
    v13 = v39[0];
    v14 = v38[0];
  }
  v15 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  WebCore::WebGLRenderingContextBase::getVertexAttrib(v12, v13, v14, (uint64_t)v36);
  v41[0] = this;
  v41[1] = v15;
  v42 = v15;
  v43[0] = v15;
  v43[1] = this;
  v44 = v15;
  v45 = this;
  v46 = v15;
  v47 = this;
  v48 = v15;
  v49 = this;
  v50 = v15;
  v51 = this;
  v52 = v15;
  v53 = this;
  v54 = v15;
  v55 = this;
  v56 = v15;
  v57 = this;
  v58 = v15;
  v59 = this;
  v60 = v15;
  v61 = this;
  v62 = v15;
  v63 = this;
  v64 = v15;
  v65 = this;
  v66 = v15;
  v67 = this;
  v68 = v15;
  v69 = this;
  v70 = v15;
  v71 = this;
  v72 = v15;
  if (v37 == -1)
    std::__throw_bad_variant_access[abi:sn180100]();
  v40 = (WTF::StringImpl *)v41;
  v16 = ((uint64_t (*)(WTF::StringImpl **, _QWORD *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore16convertToJSValueERN3JSC14JSGlobalObjectERNS8_17JSDOMGlobalObjectERKNS_7variantIJDnbijxyfNS6_6StringENS6_6VectorIbLm0ENS6_15CrashOnOverflowELm16ENS6_10FastMallocEEENSG_IiLm0ESH_Lm16ESI_EENSG_IjLm0ESH_Lm16ESI_EENS6_6RefPtrINS9_21GenericTypedArrayViewINS9_14Float32AdaptorEEENS6_12RawPtrTraitsISP_EENS6_21DefaultRefDerefTraitsISP_EEEENSM_INSN_INS9_12Int32AdaptorEEENSQ_ISW_EENSS_ISW_EEEENSM_INSN_INS9_13Uint32AdaptorEEENSQ_IS11_EENSS_IS11_EEEENSM_INSN_INS9_12Uint8AdaptorEEENSQ_IS16_EENSS_IS16_EEEENSM_INS8_11WebGLBufferENSQ_IS1A_EENSS_IS1A_EEEENSM_INS8_16WebGLFramebufferENSQ_IS1E_EENSS_IS1E_EEEENSM_INS8_12WebGLProgramENSQ_IS1I_EENSS_IS1I_EEEENSM_INS8_10WebGLQueryENSQ_IS1M_EENSS_IS1M_EEEENSM_INS8_17WebGLRenderbufferENSQ_IS1Q_EENSS_IS1Q_EEEENSM_INS8_12WebGLSamplerENSQ_IS1U_EENSS_IS1U_EEEENSM_INS8_12WebGLTextureENSQ_IS1Y_EENSS_IS1Y_EEEENSM_INS8_18WebGLTimerQueryEXTENSQ_IS22_EENSS_IS22_EEEENSM_INS8_22WebGLTransformFeedbackENSQ_IS26_EENSS_IS26_EEEENSM_INS8_22WebGLVertexArrayObjectENSQ_IS2A_EENSS_IS2A_EEEENSM_INS8_25WebGLVertexArrayObjectOESENSQ_IS2E_EENSS_IS2E_EEEEEEEE3__0JZNS8_16convertToJSValueESB_SD_S2K_E3__1ZNS8_16convertToJSValueESB_SD_S2K_E3__2ZNS8_16convertToJSValueESB_SD_S2K_E3__3ZNS8_16convertToJSValueESB_SD_S2K_E3__4ZNS8_16convertToJSValueESB_SD_S2K_E3__5ZNS8_16convertToJSValueESB_SD_S2K_E3__6ZNS8_16convertToJSValueESB_SD_S2K_E3__7ZNS8_16convertToJSValueESB_SD_S2K_E3__8ZNS8_16convertToJSValueESB_SD_S2K_E3__9ZNS8_16convertToJSValueESB_SD_S2K_E4__10ZNS8_16convertToJSValueESB_SD_S2K_E4__11ZNS8_16convertToJSValueESB_SD_S2K_E4__12ZNS8_16convertToJSValueESB_SD_S2K_E4__13ZNS8_16convertToJSValueESB_SD_S2K_E4__14ZNS8_16convertToJSValueESB_SD_S2K_E4__15ZNS8_16convertToJSValueESB_SD_S2K_E4__16ZNS8_16convertToJSValueESB_SD_S2K_E4__17ZNS8_16convertToJSValueESB_SD_S2K_E4__18ZNS8_16convertToJSValueESB_SD_S2K_E4__19ZNS8_16convertToJSValueESB_SD_S2K_E4__20ZNS8_16convertToJSValueESB_SD_S2K_E4__21ZNS8_16convertToJSValueESB_SD_S2K_E4__22ZNS8_16convertToJSValueESB_SD_S2K_E4__23ZNS8_16convertToJSValueESB_SD_S2K_E4__24ZNS8_16convertToJSValueESB_SD_S2K_E4__25EEEEEJRKNS0_6__implIJDnbijxyfSF_SJ_SK_SL_SU_SZ_S14_S19_S1D_S1H_S1L_S1P_S1T_S1X_S21_S25_S29_S2D_S2H_EEEEEEDcOT_DpOT0____fmatrix[v37])(&v40, v36);
  if (v37 != -1)
    off_1E333E518[v37](v41, v36);
  return (_BYTE *)v16;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_getVertexAttribOffset(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  JSValue v16;
  unsigned int v17;
  WebCore::InspectorInstrumentation *v18;
  WebCore::ScriptExecutionContext *v19;
  uint64_t v20;
  WebCore::InspectorCanvasAgent *v21;
  unsigned int v22;
  WebCore::InspectorInstrumentation *v23;
  WebCore::ScriptExecutionContext *v24;
  uint64_t v25;
  WebCore::InspectorCanvasAgent *v26;
  WebCore::InspectorInstrumentation *v27;
  WebCore::ScriptExecutionContext *v28;
  uint64_t v29;
  uint64_t v30;
  _DWORD *v31;
  _DWORD *v32;
  WTF::StringImpl *v33;
  JSC::VM *v34;
  _QWORD v35[2];
  WTF::StringImpl *v36;
  _DWORD v37[2];
  _DWORD v38[2];
  _QWORD v39[2];
  char v40;
  _DWORD *v41;
  char v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v34 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v34, "WebGLRenderingContext", "getVertexAttribOffset");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v34, "WebGLRenderingContext", "getVertexAttribOffset");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v16.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v16);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v38);
    if (v38[1])
    {
      return 0;
    }
    else
    {
      WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v37);
      if (v37[1])
      {
        return 0;
      }
      else
      {
        if (*(_BYTE *)(v12 + 33))
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v17 = v38[0];
          v18 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
          if (v18
            && (v20 = WebCore::InspectorInstrumentation::instrumentingAgents(v18, v19)) != 0
            && (v21 = *(WebCore::InspectorCanvasAgent **)(v20 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v21, (WebCore::CanvasRenderingContext *)(v12 + 8), v17, (uint64_t)v39);
          }
          else
          {
            LOBYTE(v39[0]) = 0;
            v40 = 0;
          }
          v22 = v37[0];
          v23 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
          if (v23
            && (v25 = WebCore::InspectorInstrumentation::instrumentingAgents(v23, v24)) != 0
            && (v26 = *(WebCore::InspectorCanvasAgent **)(v25 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v26, (WebCore::CanvasRenderingContext *)(v12 + 8), v22, (uint64_t)&v41);
          }
          else
          {
            LOBYTE(v41) = 0;
            v42 = 0;
          }
          v35[0] = v39;
          v35[1] = 2;
          v27 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
          if (v27)
          {
            v29 = WebCore::InspectorInstrumentation::instrumentingAgents(v27, v28);
            if (v29)
            {
              v30 = *(_QWORD *)(v29 + 96);
              if (v30)
                WebCore::InspectorCanvasAgent::recordAction(v30, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v36, v35);
            }
          }
          if (v42)
          {
            v31 = v41;
            v41 = 0;
            if (v31)
            {
              if (*v31 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v31;
            }
          }
          if (v40)
          {
            v32 = (_DWORD *)v39[0];
            v39[0] = 0;
            if (v32)
            {
              if (*v32 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v32;
            }
          }
          v33 = v36;
          v36 = 0;
          if (v33)
          {
            if (*(_DWORD *)v33 == 2)
              WTF::StringImpl::destroy(v33, v28);
            else
              *(_DWORD *)v33 -= 2;
          }
        }
        if (*(_BYTE *)(v12 + 364))
        {
          v13 = 0;
          return (_BYTE *)(v13 | 0xFFFE000000000000);
        }
        v14 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(**(_QWORD **)(v12 + 88) + 632))(*(_QWORD *)(v12 + 88), v38[0], v37[0]);
        v13 = v14;
        if (v14 == (int)v14)
          return (_BYTE *)(v13 | 0xFFFE000000000000);
        return (_BYTE *)(COERCE__INT64((double)v14) + 0x2000000000000);
      }
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_hint(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  JSValue v16;
  WebCore::InspectorInstrumentation *v17;
  WebCore::ScriptExecutionContext *v18;
  uint64_t v19;
  WebCore::InspectorCanvasAgent *v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  WebCore::InspectorCanvasAgent *v24;
  WebCore::InspectorInstrumentation *v25;
  WebCore::ScriptExecutionContext *v26;
  uint64_t v27;
  uint64_t v28;
  _DWORD *v29;
  _DWORD *v30;
  WTF::StringImpl *v31;
  JSC::VM *v32;
  _QWORD v33[2];
  WTF::StringImpl *v34;
  _DWORD v35[2];
  _DWORD v36[2];
  _QWORD v37[2];
  char v38;
  _DWORD *v39;
  char v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v32 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v32, "WebGLRenderingContext", "hint");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v32, "WebGLRenderingContext", "hint");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v16.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v16);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v36);
    if (v36[1])
    {
      return 0;
    }
    else
    {
      WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v35);
      if (v35[1])
      {
        return 0;
      }
      else
      {
        if (*(_BYTE *)(v12 + 33))
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v13 = v36[0];
          v17 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
          if (v17
            && (v19 = WebCore::InspectorInstrumentation::instrumentingAgents(v17, v18)) != 0
            && (v20 = *(WebCore::InspectorCanvasAgent **)(v19 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v20, (WebCore::CanvasRenderingContext *)(v12 + 8), v13, (uint64_t)v37);
          }
          else
          {
            LOBYTE(v37[0]) = 0;
            v38 = 0;
          }
          v14 = v35[0];
          v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
          if (v21
            && (v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22)) != 0
            && (v24 = *(WebCore::InspectorCanvasAgent **)(v23 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v24, (WebCore::CanvasRenderingContext *)(v12 + 8), v14, (uint64_t)&v39);
          }
          else
          {
            LOBYTE(v39) = 0;
            v40 = 0;
          }
          v33[0] = v37;
          v33[1] = 2;
          v25 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
          if (v25)
          {
            v27 = WebCore::InspectorInstrumentation::instrumentingAgents(v25, v26);
            if (v27)
            {
              v28 = *(_QWORD *)(v27 + 96);
              if (v28)
                WebCore::InspectorCanvasAgent::recordAction(v28, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v34, v33);
            }
          }
          if (v40)
          {
            v29 = v39;
            v39 = 0;
            if (v29)
            {
              if (*v29 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v29;
            }
          }
          if (v38)
          {
            v30 = (_DWORD *)v37[0];
            v37[0] = 0;
            if (v30)
            {
              if (*v30 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v30;
            }
          }
          v31 = v34;
          v34 = 0;
          if (v31)
          {
            if (*(_DWORD *)v31 == 2)
              WTF::StringImpl::destroy(v31, v26);
            else
              *(_DWORD *)v31 -= 2;
          }
        }
        else
        {
          v13 = v36[0];
          v14 = v35[0];
        }
        if (!*(_BYTE *)(v12 + 364))
        {
          if ((_DWORD)v13 == 33170
            || (_DWORD)v13 == 35723
            && (*(_QWORD *)(v12 + 656)
             || ((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v12 + 8) + 40))(v12 + 8) & 1) != 0))
          {
            (*(void (**)(_QWORD, uint64_t, uint64_t))(**(_QWORD **)(v12 + 88) + 640))(*(_QWORD *)(v12 + 88), v13, v14);
          }
          else
          {
            WebCore::WebGLRenderingContextBase::synthesizeGLError((WTF::StringImpl *)v12, 1280, (uint64_t)"hint", 5, (uint64_t)"invalid target", 15);
          }
        }
        return 10;
      }
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_isBuffer(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t v25;
  uint64_t v26;
  JSValue v27;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  uint64_t v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  WTF::StringImpl *v37;
  JSC::VM *v38;
  _QWORD v39[2];
  WTF::StringImpl *v40;
  _QWORD v41[2];
  char v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v38 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v38, "WebGLRenderingContext", "isBuffer");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v38, "WebGLRenderingContext", "isBuffer");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v27.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v27);
  }
  else
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v18 = 0;
    }
    else
    {
      v41[0] = v9;
      if ((v17 & 0xFFFE000000000002) != 0)
        goto LABEL_26;
      v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
      v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
      v21 = (char **)(16 * v19);
      if ((_DWORD)v19)
        v22 = v21 == &WebCore::JSWebGLBuffer::s_info;
      else
        v22 = 1;
      if (!v22)
      {
        do
        {
          v21 = (char **)v21[2];
          v20 = v21 != 0;
        }
        while (v21 != &WebCore::JSWebGLBuffer::s_info && v21 != 0);
      }
      if (!v20 || (v18 = *(_QWORD *)(v17 + 24)) == 0)
      {
LABEL_26:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v41, 0, "buffer", 7, "WebGLRenderingContext", 22, a8, "isBuffer", 9, "WebGLBuffer", 12);
        return 0;
      }
    }
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v28
        && (v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29)) != 0
        && (v31 = *(_QWORD *)(v30 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v31, (WebCore::CanvasRenderingContext *)(v16 + 8), (WebCore::WebGLBuffer *)v18, (uint64_t)v41);
      }
      else
      {
        LOBYTE(v41[0]) = 0;
        v42 = 0;
      }
      v39[0] = v41;
      v39[1] = 1;
      v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v32)
      {
        v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33);
        if (v34)
        {
          v35 = *(_QWORD *)(v34 + 96);
          if (v35)
            WebCore::InspectorCanvasAgent::recordAction(v35, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v40, v39);
        }
      }
      if (v42)
      {
        v36 = (_DWORD *)v41[0];
        v41[0] = 0;
        if (v36)
        {
          if (*v36 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v36;
        }
      }
      v37 = v40;
      v40 = 0;
      if (v37)
      {
        if (*(_DWORD *)v37 == 2)
          WTF::StringImpl::destroy(v37, v33);
        else
          *(_DWORD *)v37 -= 2;
      }
    }
    if (!v18 || *(_BYTE *)(v16 + 364))
      return 6;
    v25 = *(_QWORD *)(v18 + 16);
    if (v25)
    {
      v26 = *(_QWORD *)(v25 + 8);
      if (v26)
        v25 = v26 - 8;
      else
        v25 = 0;
    }
    if (v25 == v16
      && *(_DWORD *)(v18 + 24)
      && !*(_BYTE *)(v18 + 32)
      && *(_DWORD *)(v18 + 36)
      && (*(unsigned int (**)(_QWORD))(**(_QWORD **)(v16 + 88) + 648))(*(_QWORD *)(v16 + 88)))
    {
      return 7;
    }
    else
    {
      return 6;
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_isContextLost(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::InspectorInstrumentation *v11;
  WebCore::ScriptExecutionContext *v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  _QWORD v17[2];
  WTF::StringImpl *v18;

  v3 = *((_QWORD *)a2 + 5);
  v16 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "WebGLRenderingContext", "isContextLost");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSWebGLRenderingContext::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "WebGLRenderingContext", "isContextLost");
  v9 = *(_QWORD *)(v3 + 24);
  if (*(_BYTE *)(v9 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v17[0] = 0;
    v17[1] = 0;
    v11 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 40) + 144))(*(_QWORD *)(v9 + 40));
    if (v11)
    {
      v13 = WebCore::InspectorInstrumentation::instrumentingAgents(v11, v12);
      if (v13)
      {
        v14 = *(_QWORD *)(v13 + 96);
        if (v14)
          WebCore::InspectorCanvasAgent::recordAction(v14, (WebCore::CanvasRenderingContext *)(v9 + 8), (const WTF::StringImpl *)&v18, v17);
      }
    }
    v15 = v18;
    v18 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v12);
      else
        *(_DWORD *)v15 -= 2;
    }
  }
  if (*(_BYTE *)(v9 + 364))
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_isEnabled(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  JSValue v14;
  WebCore::InspectorInstrumentation *v15;
  WebCore::ScriptExecutionContext *v16;
  uint64_t v17;
  WebCore::InspectorCanvasAgent *v18;
  WebCore::InspectorInstrumentation *v19;
  WebCore::ScriptExecutionContext *v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  WTF::StringImpl *v24;
  JSC::VM *v25;
  _QWORD v26[2];
  WTF::StringImpl *v27;
  _DWORD v28[2];
  _QWORD v29[2];
  char v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "WebGLRenderingContext", "isEnabled");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "WebGLRenderingContext", "isEnabled");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v14.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v14);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v28);
    if (v28[1])
    {
      return 0;
    }
    else
    {
      if (*(_BYTE *)(v11 + 33))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v12 = v28[0];
        v15 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v15
          && (v17 = WebCore::InspectorInstrumentation::instrumentingAgents(v15, v16)) != 0
          && (v18 = *(WebCore::InspectorCanvasAgent **)(v17 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v18, (WebCore::CanvasRenderingContext *)(v11 + 8), v12, (uint64_t)v29);
        }
        else
        {
          LOBYTE(v29[0]) = 0;
          v30 = 0;
        }
        v26[0] = v29;
        v26[1] = 1;
        v19 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v19)
        {
          v21 = WebCore::InspectorInstrumentation::instrumentingAgents(v19, v20);
          if (v21)
          {
            v22 = *(_QWORD *)(v21 + 96);
            if (v22)
              WebCore::InspectorCanvasAgent::recordAction(v22, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v27, v26);
          }
        }
        if (v30)
        {
          v23 = (_DWORD *)v29[0];
          v29[0] = 0;
          if (v23)
          {
            if (*v23 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v23;
          }
        }
        v24 = v27;
        v27 = 0;
        if (v24)
        {
          if (*(_DWORD *)v24 == 2)
            WTF::StringImpl::destroy(v24, v20);
          else
            *(_DWORD *)v24 -= 2;
        }
      }
      else
      {
        v12 = v28[0];
      }
      if (!*(_BYTE *)(v11 + 364)
        && (*(unsigned int (**)(uint64_t, const char *, uint64_t, uint64_t))(*(_QWORD *)v11 + 312))(v11, "isEnabled", 10, v12)&& (*(unsigned int (**)(_QWORD, uint64_t))(**(_QWORD **)(v11 + 88) + 656))(*(_QWORD *)(v11 + 88), v12))
      {
        return 7;
      }
      else
      {
        return 6;
      }
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_isFramebuffer(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t v25;
  uint64_t v26;
  JSValue v27;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  uint64_t v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  WTF::StringImpl *v37;
  JSC::VM *v38;
  _QWORD v39[2];
  WTF::StringImpl *v40;
  _QWORD v41[2];
  char v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v38 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v38, "WebGLRenderingContext", "isFramebuffer");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v38, "WebGLRenderingContext", "isFramebuffer");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v27.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v27);
  }
  else
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v18 = 0;
    }
    else
    {
      v41[0] = v9;
      if ((v17 & 0xFFFE000000000002) != 0)
        goto LABEL_26;
      v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
      v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
      v21 = (char **)(16 * v19);
      if ((_DWORD)v19)
        v22 = v21 == &WebCore::JSWebGLFramebuffer::s_info;
      else
        v22 = 1;
      if (!v22)
      {
        do
        {
          v21 = (char **)v21[2];
          v20 = v21 != 0;
        }
        while (v21 != &WebCore::JSWebGLFramebuffer::s_info && v21 != 0);
      }
      if (!v20 || (v18 = *(_QWORD *)(v17 + 24)) == 0)
      {
LABEL_26:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v41, 0, "framebuffer", 12, "WebGLRenderingContext", 22, a8, "isFramebuffer", 14, "WebGLFramebuffer", 17);
        return 0;
      }
    }
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v28
        && (v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29)) != 0
        && (v31 = *(_QWORD *)(v30 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v31, (WebCore::CanvasRenderingContext *)(v16 + 8), (WebCore::WebGLFramebuffer *)v18, (uint64_t)v41);
      }
      else
      {
        LOBYTE(v41[0]) = 0;
        v42 = 0;
      }
      v39[0] = v41;
      v39[1] = 1;
      v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v32)
      {
        v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33);
        if (v34)
        {
          v35 = *(_QWORD *)(v34 + 96);
          if (v35)
            WebCore::InspectorCanvasAgent::recordAction(v35, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v40, v39);
        }
      }
      if (v42)
      {
        v36 = (_DWORD *)v41[0];
        v41[0] = 0;
        if (v36)
        {
          if (*v36 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v36;
        }
      }
      v37 = v40;
      v40 = 0;
      if (v37)
      {
        if (*(_DWORD *)v37 == 2)
          WTF::StringImpl::destroy(v37, v33);
        else
          *(_DWORD *)v37 -= 2;
      }
    }
    if (!v18 || *(_BYTE *)(v16 + 364))
      return 6;
    v25 = *(_QWORD *)(v18 + 16);
    if (v25)
    {
      v26 = *(_QWORD *)(v25 + 8);
      if (v26)
        v25 = v26 - 8;
      else
        v25 = 0;
    }
    if (v25 == v16
      && *(_DWORD *)(v18 + 24)
      && !*(_BYTE *)(v18 + 32)
      && *(_BYTE *)(v18 + 48)
      && (*(unsigned int (**)(_QWORD))(**(_QWORD **)(v16 + 88) + 664))(*(_QWORD *)(v16 + 88)))
    {
      return 7;
    }
    else
    {
      return 6;
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_isProgram(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  JSValue v28;
  WebCore::InspectorInstrumentation *v29;
  WebCore::ScriptExecutionContext *v30;
  uint64_t v31;
  uint64_t v32;
  WebCore::InspectorInstrumentation *v33;
  WebCore::ScriptExecutionContext *v34;
  uint64_t v35;
  uint64_t v36;
  _DWORD *v37;
  WTF::StringImpl *v38;
  JSC::VM *v39;
  _QWORD v40[2];
  WTF::StringImpl *v41;
  _QWORD v42[2];
  char v43;
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v39 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v39, "WebGLRenderingContext", "isProgram");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v39, "WebGLRenderingContext", "isProgram");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v28.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v28);
  }
  else
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v18 = 0;
    }
    else
    {
      v42[0] = v9;
      if ((v17 & 0xFFFE000000000002) != 0)
        goto LABEL_26;
      v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
      v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
      v21 = (char **)(16 * v19);
      if ((_DWORD)v19)
        v22 = v21 == &WebCore::JSWebGLProgram::s_info;
      else
        v22 = 1;
      if (!v22)
      {
        do
        {
          v21 = (char **)v21[2];
          v20 = v21 != 0;
        }
        while (v21 != &WebCore::JSWebGLProgram::s_info && v21 != 0);
      }
      if (!v20 || (v18 = *(_QWORD *)(v17 + 24)) == 0)
      {
LABEL_26:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v42, 0, "program", 8, "WebGLRenderingContext", 22, a8, "isProgram", 10, "WebGLProgram", 13);
        return 0;
      }
    }
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v29 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v29
        && (v31 = WebCore::InspectorInstrumentation::instrumentingAgents(v29, v30)) != 0
        && (v32 = *(_QWORD *)(v31 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v32, (WTF::StringImpl *)(v16 + 8), v18, (uint64_t)v42);
      }
      else
      {
        LOBYTE(v42[0]) = 0;
        v43 = 0;
      }
      v40[0] = v42;
      v40[1] = 1;
      v33 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v33)
      {
        v35 = WebCore::InspectorInstrumentation::instrumentingAgents(v33, v34);
        if (v35)
        {
          v36 = *(_QWORD *)(v35 + 96);
          if (v36)
            WebCore::InspectorCanvasAgent::recordAction(v36, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v41, v40);
        }
      }
      if (v43)
      {
        v37 = (_DWORD *)v42[0];
        v42[0] = 0;
        if (v37)
        {
          if (*v37 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v37;
        }
      }
      v38 = v41;
      v41 = 0;
      if (v38)
      {
        if (*(_DWORD *)v38 == 2)
          WTF::StringImpl::destroy(v38, v34);
        else
          *(_DWORD *)v38 -= 2;
      }
    }
    if (!v18 || *(_BYTE *)(v16 + 364))
      return 6;
    v25 = *(_QWORD *)(v18 + 16);
    if (v25)
    {
      v26 = *(_QWORD *)(v25 + 8);
      if (v26)
        v25 = v26 - 8;
      else
        v25 = 0;
    }
    if (v25 == v16
      && (v27 = *(unsigned int *)(v18 + 24), (_DWORD)v27)
      && (*(unsigned int (**)(_QWORD, uint64_t, JSC::CallFrame *))(**(_QWORD **)(v16 + 88) + 672))(*(_QWORD *)(v16 + 88), v27, a3))
    {
      return 7;
    }
    else
    {
      return 6;
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_isRenderbuffer(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t v25;
  uint64_t v26;
  JSValue v27;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  uint64_t v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  WTF::StringImpl *v37;
  JSC::VM *v38;
  _QWORD v39[2];
  WTF::StringImpl *v40;
  _QWORD v41[2];
  char v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v38 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v38, "WebGLRenderingContext", "isRenderbuffer");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v38, "WebGLRenderingContext", "isRenderbuffer");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v27.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v27);
  }
  else
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v18 = 0;
    }
    else
    {
      v41[0] = v9;
      if ((v17 & 0xFFFE000000000002) != 0)
        goto LABEL_26;
      v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
      v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
      v21 = (char **)(16 * v19);
      if ((_DWORD)v19)
        v22 = v21 == &WebCore::JSWebGLRenderbuffer::s_info;
      else
        v22 = 1;
      if (!v22)
      {
        do
        {
          v21 = (char **)v21[2];
          v20 = v21 != 0;
        }
        while (v21 != &WebCore::JSWebGLRenderbuffer::s_info && v21 != 0);
      }
      if (!v20 || (v18 = *(_QWORD *)(v17 + 24)) == 0)
      {
LABEL_26:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v41, 0, "renderbuffer", 13, "WebGLRenderingContext", 22, a8, "isRenderbuffer", 15, "WebGLRenderbuffer", 18);
        return 0;
      }
    }
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v28
        && (v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29)) != 0
        && (v31 = *(_QWORD *)(v30 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v31, (WebCore::CanvasRenderingContext *)(v16 + 8), (WebCore::WebGLRenderbuffer *)v18, (uint64_t)v41);
      }
      else
      {
        LOBYTE(v41[0]) = 0;
        v42 = 0;
      }
      v39[0] = v41;
      v39[1] = 1;
      v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v32)
      {
        v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33);
        if (v34)
        {
          v35 = *(_QWORD *)(v34 + 96);
          if (v35)
            WebCore::InspectorCanvasAgent::recordAction(v35, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v40, v39);
        }
      }
      if (v42)
      {
        v36 = (_DWORD *)v41[0];
        v41[0] = 0;
        if (v36)
        {
          if (*v36 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v36;
        }
      }
      v37 = v40;
      v40 = 0;
      if (v37)
      {
        if (*(_DWORD *)v37 == 2)
          WTF::StringImpl::destroy(v37, v33);
        else
          *(_DWORD *)v37 -= 2;
      }
    }
    if (!v18 || *(_BYTE *)(v16 + 364))
      return 6;
    v25 = *(_QWORD *)(v18 + 16);
    if (v25)
    {
      v26 = *(_QWORD *)(v25 + 8);
      if (v26)
        v25 = v26 - 8;
      else
        v25 = 0;
    }
    if (v25 == v16
      && *(_DWORD *)(v18 + 24)
      && !*(_BYTE *)(v18 + 32)
      && *(_BYTE *)(v18 + 49)
      && (*(unsigned int (**)(_QWORD))(**(_QWORD **)(v16 + 88) + 680))(*(_QWORD *)(v16 + 88)))
    {
      return 7;
    }
    else
    {
      return 6;
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_isShader(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  JSValue v28;
  WebCore::InspectorInstrumentation *v29;
  WebCore::ScriptExecutionContext *v30;
  uint64_t v31;
  uint64_t v32;
  WebCore::InspectorInstrumentation *v33;
  WebCore::ScriptExecutionContext *v34;
  uint64_t v35;
  uint64_t v36;
  _DWORD *v37;
  WTF::StringImpl *v38;
  JSC::VM *v39;
  _QWORD v40[2];
  WTF::StringImpl *v41;
  _QWORD v42[2];
  char v43;
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v39 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v39, "WebGLRenderingContext", "isShader");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v39, "WebGLRenderingContext", "isShader");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v28.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v28);
  }
  else
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v18 = 0;
    }
    else
    {
      v42[0] = v9;
      if ((v17 & 0xFFFE000000000002) != 0)
        goto LABEL_26;
      v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
      v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
      v21 = (char **)(16 * v19);
      if ((_DWORD)v19)
        v22 = v21 == &WebCore::JSWebGLShader::s_info;
      else
        v22 = 1;
      if (!v22)
      {
        do
        {
          v21 = (char **)v21[2];
          v20 = v21 != 0;
        }
        while (v21 != &WebCore::JSWebGLShader::s_info && v21 != 0);
      }
      if (!v20 || (v18 = *(_QWORD *)(v17 + 24)) == 0)
      {
LABEL_26:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v42, 0, "shader", 7, "WebGLRenderingContext", 22, a8, "isShader", 9, "WebGLShader", 12);
        return 0;
      }
    }
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v29 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v29
        && (v31 = WebCore::InspectorInstrumentation::instrumentingAgents(v29, v30)) != 0
        && (v32 = *(_QWORD *)(v31 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v32, (WebCore::CanvasRenderingContext *)(v16 + 8), (WebCore::WebGLShader *)v18, (uint64_t)v42);
      }
      else
      {
        LOBYTE(v42[0]) = 0;
        v43 = 0;
      }
      v40[0] = v42;
      v40[1] = 1;
      v33 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v33)
      {
        v35 = WebCore::InspectorInstrumentation::instrumentingAgents(v33, v34);
        if (v35)
        {
          v36 = *(_QWORD *)(v35 + 96);
          if (v36)
            WebCore::InspectorCanvasAgent::recordAction(v36, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v41, v40);
        }
      }
      if (v43)
      {
        v37 = (_DWORD *)v42[0];
        v42[0] = 0;
        if (v37)
        {
          if (*v37 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v37;
        }
      }
      v38 = v41;
      v41 = 0;
      if (v38)
      {
        if (*(_DWORD *)v38 == 2)
          WTF::StringImpl::destroy(v38, v34);
        else
          *(_DWORD *)v38 -= 2;
      }
    }
    if (!v18 || *(_BYTE *)(v16 + 364))
      return 6;
    v25 = *(_QWORD *)(v18 + 16);
    if (v25)
    {
      v26 = *(_QWORD *)(v25 + 8);
      if (v26)
        v25 = v26 - 8;
      else
        v25 = 0;
    }
    if (v25 == v16
      && (v27 = *(unsigned int *)(v18 + 24), (_DWORD)v27)
      && (*(unsigned int (**)(_QWORD, uint64_t, JSC::CallFrame *))(**(_QWORD **)(v16 + 88) + 688))(*(_QWORD *)(v16 + 88), v27, a3))
    {
      return 7;
    }
    else
    {
      return 6;
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_isTexture(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t v25;
  uint64_t v26;
  JSValue v27;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  uint64_t v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  WTF::StringImpl *v37;
  JSC::VM *v38;
  _QWORD v39[2];
  WTF::StringImpl *v40;
  _QWORD v41[2];
  char v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v38 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v38, "WebGLRenderingContext", "isTexture");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v38, "WebGLRenderingContext", "isTexture");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v27.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v27);
  }
  else
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v18 = 0;
    }
    else
    {
      v41[0] = v9;
      if ((v17 & 0xFFFE000000000002) != 0)
        goto LABEL_26;
      v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
      v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
      v21 = (char **)(16 * v19);
      if ((_DWORD)v19)
        v22 = v21 == &WebCore::JSWebGLTexture::s_info;
      else
        v22 = 1;
      if (!v22)
      {
        do
        {
          v21 = (char **)v21[2];
          v20 = v21 != 0;
        }
        while (v21 != &WebCore::JSWebGLTexture::s_info && v21 != 0);
      }
      if (!v20 || (v18 = *(_QWORD *)(v17 + 24)) == 0)
      {
LABEL_26:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v41, 0, "texture", 8, "WebGLRenderingContext", 22, a8, "isTexture", 10, "WebGLTexture", 13);
        return 0;
      }
    }
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v28
        && (v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29)) != 0
        && (v31 = *(_QWORD *)(v30 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v31, (WebCore::CanvasRenderingContext *)(v16 + 8), (WebCore::WebGLTexture *)v18, (uint64_t)v41);
      }
      else
      {
        LOBYTE(v41[0]) = 0;
        v42 = 0;
      }
      v39[0] = v41;
      v39[1] = 1;
      v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v32)
      {
        v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33);
        if (v34)
        {
          v35 = *(_QWORD *)(v34 + 96);
          if (v35)
            WebCore::InspectorCanvasAgent::recordAction(v35, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v40, v39);
        }
      }
      if (v42)
      {
        v36 = (_DWORD *)v41[0];
        v41[0] = 0;
        if (v36)
        {
          if (*v36 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v36;
        }
      }
      v37 = v40;
      v40 = 0;
      if (v37)
      {
        if (*(_DWORD *)v37 == 2)
          WTF::StringImpl::destroy(v37, v33);
        else
          *(_DWORD *)v37 -= 2;
      }
    }
    if (!v18 || *(_BYTE *)(v16 + 364))
      return 6;
    v25 = *(_QWORD *)(v18 + 16);
    if (v25)
    {
      v26 = *(_QWORD *)(v25 + 8);
      if (v26)
        v25 = v26 - 8;
      else
        v25 = 0;
    }
    if (v25 == v16
      && *(_DWORD *)(v18 + 24)
      && !*(_BYTE *)(v18 + 32)
      && *(_DWORD *)(v18 + 36)
      && (*(unsigned int (**)(_QWORD))(**(_QWORD **)(v16 + 88) + 696))(*(_QWORD *)(v16 + 88)))
    {
      return 7;
    }
    else
    {
      return 6;
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_lineWidth(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  unint64_t v12;
  double v13;
  float v14;
  JSValue v16;
  int v17;
  WebCore::InspectorInstrumentation *v18;
  WebCore::ScriptExecutionContext *v19;
  uint64_t v20;
  WebCore::InspectorCanvasAgent *v21;
  WebCore::InspectorInstrumentation *v22;
  WebCore::ScriptExecutionContext *v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  WTF::StringImpl *v27;
  double v28;
  JSC::VM *v29;
  _QWORD v30[2];
  WTF::StringImpl *v31;
  _QWORD v32[2];
  char v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v29 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v29, "WebGLRenderingContext", "lineWidth");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v29, "WebGLRenderingContext", "lineWidth");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v16.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v16);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v32[0] = v12;
  if (v12 >= 0xFFFE000000000000)
  {
    v13 = (double)(int)v12;
  }
  else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v32, this);
    v13 = v28;
  }
  else
  {
    *(_QWORD *)&v13 = v12 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  if (v13 < -3.40282347e38)
  {
    *(float *)&v17 = -INFINITY;
LABEL_35:
    v14 = *(float *)&v17;
    goto LABEL_20;
  }
  if (v13 > 3.40282347e38)
  {
    *(float *)&v17 = INFINITY;
    goto LABEL_35;
  }
  v14 = v13;
LABEL_20:
  if (*(_BYTE *)(v11 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v18 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
    if (v18
      && (v20 = WebCore::InspectorInstrumentation::instrumentingAgents(v18, v19)) != 0
      && (v21 = *(WebCore::InspectorCanvasAgent **)(v20 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v21, (WebCore::CanvasRenderingContext *)(v11 + 8), v14, (uint64_t)v32);
    }
    else
    {
      LOBYTE(v32[0]) = 0;
      v33 = 0;
    }
    v30[0] = v32;
    v30[1] = 1;
    v22 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
    if (v22)
    {
      v24 = WebCore::InspectorInstrumentation::instrumentingAgents(v22, v23);
      if (v24)
      {
        v25 = *(_QWORD *)(v24 + 96);
        if (v25)
          WebCore::InspectorCanvasAgent::recordAction(v25, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v31, v30);
      }
    }
    if (v33)
    {
      v26 = (_DWORD *)v32[0];
      v32[0] = 0;
      if (v26)
      {
        if (*v26 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v26;
      }
    }
    v27 = v31;
    v31 = 0;
    if (v27)
    {
      if (*(_DWORD *)v27 == 2)
        WTF::StringImpl::destroy(v27, v23);
      else
        *(_DWORD *)v27 -= 2;
    }
  }
  if (!*(_BYTE *)(v11 + 364))
    (*(void (**)(_QWORD, float))(**(_QWORD **)(v11 + 88) + 704))(*(_QWORD *)(v11 + 88), v14);
  return 10;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_linkProgram(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  WTF::StringImpl *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  JSValue v32;
  WebCore::InspectorInstrumentation *v33;
  WebCore::ScriptExecutionContext *v34;
  uint64_t v35;
  uint64_t v36;
  WebCore::InspectorInstrumentation *v37;
  WebCore::ScriptExecutionContext *v38;
  uint64_t v39;
  uint64_t v40;
  _DWORD *v41;
  WTF::StringImpl *v42;
  JSC::VM *v43;
  _QWORD v44[2];
  WTF::StringImpl *v45;
  _QWORD v46[2];
  char v47;
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v43 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v43, "WebGLRenderingContext", "linkProgram");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v43, "WebGLRenderingContext", "linkProgram");
  if (*((_DWORD *)a2 + 8) != 1)
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    v46[0] = v9;
    if ((v17 & 0xFFFE000000000002) != 0)
      goto LABEL_24;
    v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v20 = (char **)(16 * v18);
    if ((_DWORD)v18)
      v21 = v20 == &WebCore::JSWebGLProgram::s_info;
    else
      v21 = 1;
    if (!v21)
    {
      do
      {
        v20 = (char **)v20[2];
        v19 = v20 != 0;
      }
      while (v20 != &WebCore::JSWebGLProgram::s_info && v20 != 0);
    }
    if (!v19 || (v24 = *(_QWORD *)(v17 + 24)) == 0)
    {
LABEL_24:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v46, 0, "program", 8, "WebGLRenderingContext", 22, a8, "linkProgram", 12, "WebGLProgram", 13);
      return 0;
    }
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v33 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v33
        && (v35 = WebCore::InspectorInstrumentation::instrumentingAgents(v33, v34)) != 0
        && (v36 = *(_QWORD *)(v35 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v36, (WTF::StringImpl *)(v16 + 8), v24, (uint64_t)v46);
      }
      else
      {
        LOBYTE(v46[0]) = 0;
        v47 = 0;
      }
      v44[0] = v46;
      v44[1] = 1;
      v37 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v37)
      {
        v39 = WebCore::InspectorInstrumentation::instrumentingAgents(v37, v38);
        if (v39)
        {
          v40 = *(_QWORD *)(v39 + 96);
          if (v40)
            WebCore::InspectorCanvasAgent::recordAction(v40, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v45, v44);
        }
      }
      if (v47)
      {
        v41 = (_DWORD *)v46[0];
        v46[0] = 0;
        if (v41)
        {
          if (*v41 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v41;
        }
      }
      v42 = v45;
      v45 = 0;
      if (v42)
      {
        if (*(_DWORD *)v42 == 2)
          WTF::StringImpl::destroy(v42, v38);
        else
          *(_DWORD *)v42 -= 2;
      }
    }
    if (*(_BYTE *)(v16 + 364))
      return 10;
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      v26 = *(_QWORD *)(v25 + 8);
      if (v26)
        v25 = v26 - 8;
      else
        v25 = 0;
    }
    if (v25 == v16)
    {
      v31 = *(unsigned int *)(v24 + 24);
      if ((_DWORD)v31)
      {
        (*(void (**)(_QWORD, uint64_t, JSC::CallFrame *))(**(_QWORD **)(v16 + 88) + 712))(*(_QWORD *)(v16 + 88), v31, a3);
        ++*(_DWORD *)(v24 + 60);
        *(_BYTE *)(v24 + 80) = 0;
        return 10;
      }
      v27 = "attempt to use a deleted object";
      v28 = (WTF::StringImpl *)v16;
      v29 = 1281;
      v30 = 32;
    }
    else
    {
      v27 = "object does not belong to this context";
      v28 = (WTF::StringImpl *)v16;
      v29 = 1282;
      v30 = 39;
    }
    WebCore::WebGLRenderingContextBase::synthesizeGLError(v28, v29, (uint64_t)"linkProgram", 12, (uint64_t)v27, v30);
    return 10;
  }
  v32.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
  return JSC::VM::throwException(v9, this, v32);
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_pixelStorei(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  JSC::VM *v14;
  unsigned int v15;
  unsigned int v16;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unint64_t v21;
  int v22;
  int v23;
  JSValue v24;
  WebCore::InspectorInstrumentation *v25;
  WebCore::ScriptExecutionContext *v26;
  uint64_t v27;
  WebCore::InspectorCanvasAgent *v28;
  WebCore::InspectorInstrumentation *v29;
  WebCore::ScriptExecutionContext *v30;
  uint64_t v31;
  WebCore::InspectorCanvasAgent *v32;
  WebCore::InspectorInstrumentation *v33;
  WebCore::ScriptExecutionContext *v34;
  uint64_t v35;
  uint64_t v36;
  _DWORD *v37;
  _DWORD *v38;
  WTF::StringImpl *v39;
  unint64_t v40;
  JSC::VM *v41;
  _QWORD v42[2];
  WTF::StringImpl *v43;
  unsigned int v44[2];
  _QWORD v45[2];
  char v46;
  _DWORD *v47;
  char v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v41 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v41, "WebGLRenderingContext", "pixelStorei");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v41, "WebGLRenderingContext", "pixelStorei");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v24.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v24);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v44);
    if (v44[1])
    {
      return 0;
    }
    else
    {
      v13 = *((_QWORD *)a2 + 7);
      v45[0] = v13;
      v14 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v13 < 0xFFFE000000000000)
      {
        v18 = v13 - 0x2000000000000;
        if (v13 - 0x2000000000000 >= 0xFFFC000000000000)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v45, this);
          v18 = v40;
        }
        v19 = (v18 >> 52) & 0x7FF;
        v20 = v19 - 1023;
        v21 = v18 >> (51 - (v18 >> 52));
        if (v19 > 0x433)
          LODWORD(v21) = v18 << ((v18 >> 52) - 51);
        if (v19 >= 0x41F)
          v22 = v21;
        else
          v22 = (((1 << ((v18 >> 52) + 1)) - 1) & v21) + (1 << ((v18 >> 52) + 1));
        if ((v18 & 0x8000000000000000) == 0)
          v23 = v22;
        else
          v23 = -v22;
        if (v20 <= 0x53)
          v15 = v23;
        else
          v15 = 0;
      }
      else
      {
        v15 = v13;
      }
      if (*((_DWORD *)v14 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v14))
      {
        return 0;
      }
      else
      {
        if (*(_BYTE *)(v12 + 33))
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v16 = v44[0];
          v25 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
          if (v25
            && (v27 = WebCore::InspectorInstrumentation::instrumentingAgents(v25, v26)) != 0
            && (v28 = *(WebCore::InspectorCanvasAgent **)(v27 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v28, (WebCore::CanvasRenderingContext *)(v12 + 8), v16, (uint64_t)v45);
          }
          else
          {
            LOBYTE(v45[0]) = 0;
            v46 = 0;
          }
          v29 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
          if (v29
            && (v31 = WebCore::InspectorInstrumentation::instrumentingAgents(v29, v30)) != 0
            && (v32 = *(WebCore::InspectorCanvasAgent **)(v31 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v32, (WebCore::CanvasRenderingContext *)(v12 + 8), v15, (uint64_t)&v47);
          }
          else
          {
            LOBYTE(v47) = 0;
            v48 = 0;
          }
          v42[0] = v45;
          v42[1] = 2;
          v33 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
          if (v33)
          {
            v35 = WebCore::InspectorInstrumentation::instrumentingAgents(v33, v34);
            if (v35)
            {
              v36 = *(_QWORD *)(v35 + 96);
              if (v36)
                WebCore::InspectorCanvasAgent::recordAction(v36, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v43, v42);
            }
          }
          if (v48)
          {
            v37 = v47;
            v47 = 0;
            if (v37)
            {
              if (*v37 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v37;
            }
          }
          if (v46)
          {
            v38 = (_DWORD *)v45[0];
            v45[0] = 0;
            if (v38)
            {
              if (*v38 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v38;
            }
          }
          v39 = v43;
          v43 = 0;
          if (v39)
          {
            if (*(_DWORD *)v39 == 2)
              WTF::StringImpl::destroy(v39, v34);
            else
              *(_DWORD *)v39 -= 2;
          }
        }
        else
        {
          v16 = v44[0];
        }
        WebCore::WebGLRenderingContextBase::pixelStorei((WTF::StringImpl *)v12, v16, v15);
        return 10;
      }
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_polygonOffset(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  float v15;
  unint64_t v16;
  JSC::VM *v17;
  double v18;
  float v19;
  JSValue v21;
  int v22;
  int v23;
  WebCore::InspectorInstrumentation *v24;
  WebCore::ScriptExecutionContext *v25;
  uint64_t v26;
  WebCore::InspectorCanvasAgent *v27;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  WebCore::InspectorCanvasAgent *v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  _DWORD *v37;
  WTF::StringImpl *v38;
  double v39;
  double v40;
  JSC::VM *v41;
  _QWORD v42[2];
  WTF::StringImpl *v43;
  _QWORD v44[2];
  char v45;
  _DWORD *v46;
  char v47;
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v41 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v41, "WebGLRenderingContext", "polygonOffset");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v41, "WebGLRenderingContext", "polygonOffset");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v21);
  }
  v12 = *(_QWORD *)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  v44[0] = v13;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v44, this);
    v14 = v39;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  if (v14 < -3.40282347e38)
  {
    *(float *)&v22 = -INFINITY;
  }
  else
  {
    if (v14 <= 3.40282347e38)
    {
      v15 = v14;
      goto LABEL_20;
    }
    *(float *)&v22 = INFINITY;
  }
  v15 = *(float *)&v22;
LABEL_20:
  v16 = *((_QWORD *)a2 + 7);
  v44[0] = v16;
  v17 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v16 >= 0xFFFE000000000000)
  {
    v18 = (double)(int)v16;
  }
  else if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v44, this);
    v18 = v40;
  }
  else
  {
    *(_QWORD *)&v18 = v16 - 0x2000000000000;
  }
  if (*((_DWORD *)v17 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) != 0)
    return 0;
  if (v18 < -3.40282347e38)
  {
    *(float *)&v23 = -INFINITY;
LABEL_48:
    v19 = *(float *)&v23;
    goto LABEL_27;
  }
  if (v18 > 3.40282347e38)
  {
    *(float *)&v23 = INFINITY;
    goto LABEL_48;
  }
  v19 = v18;
LABEL_27:
  if (*(_BYTE *)(v12 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v24 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v24
      && (v26 = WebCore::InspectorInstrumentation::instrumentingAgents(v24, v25)) != 0
      && (v27 = *(WebCore::InspectorCanvasAgent **)(v26 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v27, (WebCore::CanvasRenderingContext *)(v12 + 8), v15, (uint64_t)v44);
    }
    else
    {
      LOBYTE(v44[0]) = 0;
      v45 = 0;
    }
    v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v28
      && (v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29)) != 0
      && (v31 = *(WebCore::InspectorCanvasAgent **)(v30 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v31, (WebCore::CanvasRenderingContext *)(v12 + 8), v19, (uint64_t)&v46);
    }
    else
    {
      LOBYTE(v46) = 0;
      v47 = 0;
    }
    v42[0] = v44;
    v42[1] = 2;
    v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v32)
    {
      v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33);
      if (v34)
      {
        v35 = *(_QWORD *)(v34 + 96);
        if (v35)
          WebCore::InspectorCanvasAgent::recordAction(v35, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v43, v42);
      }
    }
    if (v47)
    {
      v36 = v46;
      v46 = 0;
      if (v36)
      {
        if (*v36 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v36;
      }
    }
    if (v45)
    {
      v37 = (_DWORD *)v44[0];
      v44[0] = 0;
      if (v37)
      {
        if (*v37 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v37;
      }
    }
    v38 = v43;
    v43 = 0;
    if (v38)
    {
      if (*(_DWORD *)v38 == 2)
        WTF::StringImpl::destroy(v38, v33);
      else
        *(_DWORD *)v38 -= 2;
    }
  }
  if (!*(_BYTE *)(v12 + 364))
    (*(void (**)(_QWORD, float, float))(**(_QWORD **)(v12 + 88) + 728))(*(_QWORD *)(v12 + 88), v15, v19);
  return 10;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_readPixels(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WTF::StringImpl *v12;
  int v13;
  WTF::StringImpl *v14;
  JSC::VM *v15;
  unsigned int v16;
  WTF::StringImpl *v17;
  JSC::VM *v18;
  int v19;
  WTF::StringImpl *v20;
  JSC::VM *v21;
  uint64_t v22;
  uint64_t v23;
  JSC::JSArrayBufferView *v24;
  int v25;
  WTF::StringImpl *v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  WTF::StringImpl *v30;
  uint64_t v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unsigned int v39;
  unint64_t v40;
  int v41;
  int v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int v48;
  unint64_t v49;
  int v50;
  unint64_t v51;
  unsigned int v52;
  JSValue v54;
  WebCore::CanvasRenderingContext *v55;
  WebCore::InspectorInstrumentation *v56;
  WebCore::ScriptExecutionContext *v57;
  uint64_t v58;
  WebCore::InspectorCanvasAgent *v59;
  WebCore::InspectorInstrumentation *v60;
  WebCore::ScriptExecutionContext *v61;
  uint64_t v62;
  WebCore::InspectorCanvasAgent *v63;
  WebCore::InspectorInstrumentation *v64;
  WebCore::ScriptExecutionContext *v65;
  uint64_t v66;
  WebCore::InspectorCanvasAgent *v67;
  WebCore::InspectorInstrumentation *v68;
  WebCore::ScriptExecutionContext *v69;
  uint64_t v70;
  WebCore::InspectorCanvasAgent *v71;
  unsigned int v72;
  WebCore::InspectorInstrumentation *v73;
  WebCore::ScriptExecutionContext *v74;
  uint64_t v75;
  WebCore::InspectorCanvasAgent *v76;
  unsigned int v77;
  WebCore::InspectorInstrumentation *v78;
  WebCore::ScriptExecutionContext *v79;
  uint64_t v80;
  WebCore::InspectorCanvasAgent *v81;
  WebCore::InspectorInstrumentation *v82;
  WebCore::ScriptExecutionContext *v83;
  uint64_t v84;
  uint64_t v85;
  WebCore::InspectorInstrumentation *v86;
  WebCore::ScriptExecutionContext *v87;
  uint64_t v88;
  uint64_t v89;
  _DWORD *v90;
  _DWORD *v91;
  _DWORD *v92;
  _DWORD *v93;
  _DWORD *v94;
  _DWORD *v95;
  WTF::StringImpl *v96;
  WTF::StringImpl *v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  int v102;
  unsigned int v103;
  uint64_t v104;
  JSC::VM *v105;
  WTF::StringImpl *v106;
  int v107;
  _DWORD v108[2];
  _DWORD v109[2];
  WTF::StringImpl **v110;
  uint64_t v111;
  WTF::StringImpl *v112;
  WTF::StringImpl *v113;
  int v114;
  char v115;
  _DWORD *v116;
  char v117;
  _DWORD *v118;
  char v119;
  _DWORD *v120;
  char v121;
  _DWORD *v122;
  char v123;
  _DWORD *v124;
  char v125;
  _DWORD *v126;
  char v127;
  uint64_t v128;

  v128 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v105 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v105, "WebGLRenderingContext", "readPixels");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v105, "WebGLRenderingContext", "readPixels");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 6)
  {
    v54.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v54);
  }
  v104 = *(_QWORD *)(v5 + 24);
  v12 = (WTF::StringImpl *)*((_QWORD *)a2 + 6);
  v113 = v12;
  if ((unint64_t)v12 < 0xFFFE000000000000)
  {
    v35 = (unint64_t)v12 - 0x2000000000000;
    if ((unint64_t)v12 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v113, this);
      v35 = v98;
    }
    v36 = (v35 >> 52) & 0x7FF;
    if ((v36 - 1023) <= 0x53)
    {
      v47 = v35 >> (51 - (v35 >> 52));
      if (v36 > 0x433)
        LODWORD(v47) = v35 << ((v35 >> 52) - 51);
      if (v36 >= 0x41F)
        v48 = v47;
      else
        v48 = (((1 << ((v35 >> 52) + 1)) - 1) & v47) + (1 << ((v35 >> 52) + 1));
      if ((v35 & 0x8000000000000000) == 0)
        v13 = v48;
      else
        v13 = -v48;
    }
    else
    {
      v13 = 0;
    }
  }
  else
  {
    v13 = (int)v12;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  v14 = (WTF::StringImpl *)*((_QWORD *)a2 + 7);
  v113 = v14;
  v15 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((unint64_t)v14 < 0xFFFE000000000000)
  {
    v37 = (unint64_t)v14 - 0x2000000000000;
    if ((unint64_t)v14 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v113, this);
      v37 = v99;
    }
    v38 = (v37 >> 52) & 0x7FF;
    v39 = v38 - 1023;
    v40 = v37 >> (51 - (v37 >> 52));
    if (v38 > 0x433)
      LODWORD(v40) = v37 << ((v37 >> 52) - 51);
    if (v38 >= 0x41F)
      v41 = v40;
    else
      v41 = (((1 << ((v37 >> 52) + 1)) - 1) & v40) + (1 << ((v37 >> 52) + 1));
    if ((v37 & 0x8000000000000000) == 0)
      v42 = v41;
    else
      v42 = -v41;
    if (v39 <= 0x53)
      v16 = v42;
    else
      v16 = 0;
  }
  else
  {
    v16 = v14;
  }
  if (*((_DWORD *)v15 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v15))
    return 0;
  v103 = v16;
  v17 = (WTF::StringImpl *)*((_QWORD *)a2 + 8);
  v113 = v17;
  v18 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((unint64_t)v17 < 0xFFFE000000000000)
  {
    v43 = (unint64_t)v17 - 0x2000000000000;
    if ((unint64_t)v17 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v113, this);
      v43 = v100;
    }
    v44 = (v43 >> 52) & 0x7FF;
    if ((v44 - 1023) <= 0x53)
    {
      v49 = v43 >> (51 - (v43 >> 52));
      if (v44 > 0x433)
        LODWORD(v49) = v43 << ((v43 >> 52) - 51);
      if (v44 >= 0x41F)
        v50 = v49;
      else
        v50 = (((1 << ((v43 >> 52) + 1)) - 1) & v49) + (1 << ((v43 >> 52) + 1));
      if ((v43 & 0x8000000000000000) == 0)
        v19 = v50;
      else
        v19 = -v50;
    }
    else
    {
      v19 = 0;
    }
  }
  else
  {
    v19 = (int)v17;
  }
  if (*((_DWORD *)v18 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v18))
    return 0;
  v102 = v19;
  v20 = (WTF::StringImpl *)*((_QWORD *)a2 + 9);
  v113 = v20;
  v21 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((unint64_t)v20 < 0xFFFE000000000000)
  {
    v45 = (unint64_t)v20 - 0x2000000000000;
    if ((unint64_t)v20 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v113, this);
      v45 = v101;
    }
    v46 = (v45 >> 52) & 0x7FF;
    if ((v46 - 1023) <= 0x53)
    {
      v51 = v45 >> (51 - (v45 >> 52));
      if (v46 > 0x433)
        LODWORD(v51) = v45 << ((v45 >> 52) - 51);
      if (v46 >= 0x41F)
        v52 = v51;
      else
        v52 = (((1 << ((v45 >> 52) + 1)) - 1) & v51) + (1 << ((v45 >> 52) + 1));
      if ((v45 & 0x8000000000000000) == 0)
        v22 = v52;
      else
        v22 = -v52;
    }
    else
    {
      v22 = 0;
    }
  }
  else
  {
    v22 = (uint64_t)v20;
  }
  if (*((_DWORD *)v21 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v21))
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 10), v109);
  if (v109[1])
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 11), v108);
  if (v108[1])
    return 0;
  v24 = (JSC::JSArrayBufferView *)*((_QWORD *)a2 + 12);
  if (((unint64_t)v24 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v106 = 0;
    v107 = 0;
    goto LABEL_45;
  }
  v106 = (WTF::StringImpl *)*((_QWORD *)this + 7);
  if (((unint64_t)v24 & 0xFFFE000000000002) != 0
    || *((unsigned __int8 *)v24 + 5) - 39 > 0xB
    || (*((_BYTE *)v24 + 40) & 6) != 0)
  {
    v112 = 0;
  }
  else
  {
    JSC::JSArrayBufferView::possiblySharedImpl(v24);
    if (v112)
    {
      v25 = 0;
      v113 = v112;
      v114 = 0;
      goto LABEL_38;
    }
  }
  WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v106, 6, "pixels", 7, "WebGLRenderingContext", 22, v23, "readPixels", 11, "ArrayBufferView", 16);
  v25 = 1;
  v114 = 1;
  v26 = v112;
  v112 = 0;
  if (v26)
  {
    if (*(_DWORD *)v26 == 1)
      JSC::ArrayBufferView::operator delete();
    else
      --*(_DWORD *)v26;
  }
LABEL_38:
  LOBYTE(v110) = 0;
  LODWORD(v111) = -1;
  ((void (*)(WTF::StringImpl **, WTF::StringImpl ***, WTF::StringImpl **))off_1E333E4F8[v25])(&v106, &v110, &v113);
  LODWORD(v111) = v25;
  if (v114 != -1)
  {
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E333E4E8[v114])(&v106, &v113);
    v25 = v111;
  }
  if (v25)
  {
    v27 = 1;
    v107 = 1;
    if (v25 == -1)
    {
      v28 = 0;
LABEL_52:
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E333E508[v27])(&v113, &v106);
      return (_BYTE *)v28;
    }
  }
  else
  {
    v29 = (uint64_t)v110;
    v110 = 0;
    v106 = (WTF::StringImpl *)v29;
    v107 = 0;
  }
  ((void (*)(WTF::StringImpl **, WTF::StringImpl ***))off_1E333E4E8[v25])(&v113, &v110);
  v27 = v107;
  if (v107)
    goto LABEL_198;
LABEL_45:
  v30 = (WTF::StringImpl *)v104;
  v31 = v22;
  if (*(_BYTE *)(v104 + 33))
  {
    v55 = (WebCore::CanvasRenderingContext *)(v104 + 8);
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v112 = v113;
    v56 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v104 + 40) + 144))(*(_QWORD *)(v104 + 40));
    if (v56
      && (v58 = WebCore::InspectorInstrumentation::instrumentingAgents(v56, v57)) != 0
      && (v59 = *(WebCore::InspectorCanvasAgent **)(v58 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v59, (WebCore::CanvasRenderingContext *)(v104 + 8), v13, (uint64_t)&v113);
    }
    else
    {
      LOBYTE(v113) = 0;
      v115 = 0;
    }
    v60 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v104 + 40) + 144))(*(_QWORD *)(v104 + 40));
    if (v60
      && (v62 = WebCore::InspectorInstrumentation::instrumentingAgents(v60, v61)) != 0
      && (v63 = *(WebCore::InspectorCanvasAgent **)(v62 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v63, (WebCore::CanvasRenderingContext *)(v104 + 8), v103, (uint64_t)&v116);
    }
    else
    {
      LOBYTE(v116) = 0;
      v117 = 0;
    }
    v64 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v104 + 40) + 144))(*(_QWORD *)(v104 + 40));
    if (v64
      && (v66 = WebCore::InspectorInstrumentation::instrumentingAgents(v64, v65)) != 0
      && (v67 = *(WebCore::InspectorCanvasAgent **)(v66 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v67, (WebCore::CanvasRenderingContext *)(v104 + 8), v102, (uint64_t)&v118);
    }
    else
    {
      LOBYTE(v118) = 0;
      v119 = 0;
    }
    v68 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v104 + 40) + 144))(*(_QWORD *)(v104 + 40));
    if (v68
      && (v70 = WebCore::InspectorInstrumentation::instrumentingAgents(v68, v69)) != 0
      && (v71 = *(WebCore::InspectorCanvasAgent **)(v70 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v71, (WebCore::CanvasRenderingContext *)(v104 + 8), v31, (uint64_t)&v120);
    }
    else
    {
      LOBYTE(v120) = 0;
      v121 = 0;
    }
    v72 = v109[0];
    v73 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v104 + 40) + 144))(*(_QWORD *)(v104 + 40));
    if (v73
      && (v75 = WebCore::InspectorInstrumentation::instrumentingAgents(v73, v74)) != 0
      && (v76 = *(WebCore::InspectorCanvasAgent **)(v75 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v76, v55, v72, (uint64_t)&v122);
    }
    else
    {
      LOBYTE(v122) = 0;
      v123 = 0;
    }
    v77 = v108[0];
    v78 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v104 + 40) + 144))(*(_QWORD *)(v104 + 40));
    if (v78
      && (v80 = WebCore::InspectorInstrumentation::instrumentingAgents(v78, v79)) != 0
      && (v81 = *(WebCore::InspectorCanvasAgent **)(v80 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v81, v55, v77, (uint64_t)&v124);
    }
    else
    {
      LOBYTE(v124) = 0;
      v125 = 0;
    }
    v30 = (WTF::StringImpl *)v104;
    if (v107)
      goto LABEL_197;
    v82 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v104 + 40) + 144))(*(_QWORD *)(v104 + 40));
    if (v82
      && (v84 = WebCore::InspectorInstrumentation::instrumentingAgents(v82, v83)) != 0
      && (v85 = *(_QWORD *)(v84 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v85, v55, (uint64_t *)&v106, (uint64_t)&v126);
    }
    else
    {
      LOBYTE(v126) = 0;
      v127 = 0;
    }
    v110 = &v113;
    v111 = 7;
    v86 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v104 + 40) + 144))(*(_QWORD *)(v104 + 40));
    if (v86)
    {
      v88 = WebCore::InspectorInstrumentation::instrumentingAgents(v86, v87);
      if (v88)
      {
        v89 = *(_QWORD *)(v88 + 96);
        if (v89)
          WebCore::InspectorCanvasAgent::recordAction(v89, v55, (const WTF::StringImpl *)&v112, &v110);
      }
    }
    if (v127)
    {
      v90 = v126;
      v126 = 0;
      if (v90)
      {
        if (*v90 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v90;
      }
    }
    if (v125)
    {
      v91 = v124;
      v124 = 0;
      if (v91)
      {
        if (*v91 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v91;
      }
    }
    if (v123)
    {
      v92 = v122;
      v122 = 0;
      if (v92)
      {
        if (*v92 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v92;
      }
    }
    if (v121)
    {
      v93 = v120;
      v120 = 0;
      if (v93)
      {
        if (*v93 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v93;
      }
    }
    if (v119)
    {
      v94 = v118;
      v118 = 0;
      if (v94)
      {
        if (*v94 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v94;
      }
    }
    if (v117)
    {
      v95 = v116;
      v116 = 0;
      if (v95)
      {
        if (*v95 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v95;
      }
    }
    if (v115)
    {
      v96 = v113;
      v113 = 0;
      if (v96)
      {
        if (*(_DWORD *)v96 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*(_DWORD *)v96;
      }
    }
    v97 = v112;
    v112 = 0;
    if (v97)
    {
      if (*(_DWORD *)v97 == 2)
        WTF::StringImpl::destroy(v97, v87);
      else
        *(_DWORD *)v97 -= 2;
    }
  }
  if (v107)
  {
LABEL_197:
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_198:
    v28 = 0;
    goto LABEL_51;
  }
  v32 = v106;
  v106 = 0;
  v113 = v32;
  WebCore::WebGLRenderingContextBase::readPixels(v30, v13, v103, v102, v31, (WebCore::GraphicsContextGL *)v109[0], v108[0], (uint64_t *)&v113);
  v33 = v113;
  v113 = 0;
  if (v33)
  {
    if (*(_DWORD *)v33 == 1)
      JSC::ArrayBufferView::operator delete();
    else
      --*(_DWORD *)v33;
  }
  v27 = v107;
  v28 = 10;
LABEL_51:
  if (v27 != -1)
    goto LABEL_52;
  return (_BYTE *)v28;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_renderbufferStorage(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WTF::StringImpl *v12;
  unint64_t v13;
  JSC::VM *v14;
  unint64_t v15;
  unint64_t v16;
  JSC::VM *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t (*v20)();
  const char *v21;
  WTF::StringImpl *v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v30;
  unsigned int v31;
  unint64_t v32;
  unsigned int v33;
  JSValue v34;
  unsigned int v35;
  WebCore::InspectorInstrumentation *v36;
  WebCore::ScriptExecutionContext *v37;
  uint64_t v38;
  WebCore::InspectorCanvasAgent *v39;
  unsigned int v40;
  WebCore::InspectorInstrumentation *v41;
  WebCore::ScriptExecutionContext *v42;
  uint64_t v43;
  WebCore::InspectorCanvasAgent *v44;
  WebCore::InspectorInstrumentation *v45;
  WebCore::ScriptExecutionContext *v46;
  uint64_t v47;
  WebCore::InspectorCanvasAgent *v48;
  WebCore::InspectorInstrumentation *v49;
  WebCore::ScriptExecutionContext *v50;
  uint64_t v51;
  WebCore::InspectorCanvasAgent *v52;
  WebCore::InspectorInstrumentation *v53;
  WebCore::ScriptExecutionContext *v54;
  uint64_t v55;
  uint64_t v56;
  _DWORD *v57;
  _DWORD *v58;
  _DWORD *v59;
  _DWORD *v60;
  WTF::StringImpl *v61;
  JSC::VM *v62;
  unint64_t v63;
  unint64_t v64;
  JSC::VM *v65;
  _QWORD v66[2];
  WTF::StringImpl *v67;
  _DWORD v68[2];
  _DWORD v69[2];
  _QWORD v70[2];
  char v71;
  _DWORD *v72;
  char v73;
  _DWORD *v74;
  char v75;
  _DWORD *v76;
  char v77;
  uint64_t v78;

  v78 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v65 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v65, "WebGLRenderingContext", "renderbufferStorage");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v65, "WebGLRenderingContext", "renderbufferStorage");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v34.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v34);
  }
  v12 = *(WTF::StringImpl **)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v69);
  if (v69[1])
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v68);
  if (v68[1])
    return 0;
  v13 = *((_QWORD *)a2 + 8);
  v70[0] = v13;
  v14 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v13 < 0xFFFE000000000000)
  {
    v25 = v13 - 0x2000000000000;
    if (v13 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      v62 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v70, this);
      v14 = v62;
      v25 = v63;
    }
    v26 = (v25 >> 52) & 0x7FF;
    if ((v26 - 1023) <= 0x53)
    {
      v30 = v25 >> (51 - (v25 >> 52));
      if (v26 > 0x433)
        LODWORD(v30) = v25 << ((v25 >> 52) - 51);
      if (v26 >= 0x41F)
        v31 = v30;
      else
        v31 = (((1 << ((v25 >> 52) + 1)) - 1) & v30) + (1 << ((v25 >> 52) + 1));
      if ((v25 & 0x8000000000000000) == 0)
        v15 = v31;
      else
        v15 = -v31;
    }
    else
    {
      v15 = 0;
    }
  }
  else
  {
    v15 = v13;
  }
  if (*((_DWORD *)v14 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v14))
    return 0;
  v16 = *((_QWORD *)a2 + 9);
  v70[0] = v16;
  v17 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v16 < 0xFFFE000000000000)
  {
    v27 = v16 - 0x2000000000000;
    if (v16 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v70, this);
      v27 = v64;
    }
    v28 = (v27 >> 52) & 0x7FF;
    if ((v28 - 1023) <= 0x53)
    {
      v32 = v27 >> (51 - (v27 >> 52));
      if (v28 > 0x433)
        LODWORD(v32) = v27 << ((v27 >> 52) - 51);
      if (v28 >= 0x41F)
        v33 = v32;
      else
        v33 = (((1 << ((v27 >> 52) + 1)) - 1) & v32) + (1 << ((v27 >> 52) + 1));
      if ((v27 & 0x8000000000000000) == 0)
        v18 = v33;
      else
        v18 = -v33;
    }
    else
    {
      v18 = 0;
    }
  }
  else
  {
    v18 = v16;
  }
  if (!*((_DWORD *)v17 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v17))
  {
    if (*((_BYTE *)v12 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v67 = (WTF::StringImpl *)v70[0];
      v35 = v69[0];
      v36 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v12 + 5) + 144))(*((_QWORD *)v12 + 5));
      if (v36
        && (v38 = WebCore::InspectorInstrumentation::instrumentingAgents(v36, v37)) != 0
        && (v39 = *(WebCore::InspectorCanvasAgent **)(v38 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v39, (WTF::StringImpl *)((char *)v12 + 8), v35, (uint64_t)v70);
      }
      else
      {
        LOBYTE(v70[0]) = 0;
        v71 = 0;
      }
      v40 = v68[0];
      v41 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v12 + 5) + 144))(*((_QWORD *)v12 + 5));
      if (v41
        && (v43 = WebCore::InspectorInstrumentation::instrumentingAgents(v41, v42)) != 0
        && (v44 = *(WebCore::InspectorCanvasAgent **)(v43 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v44, (WTF::StringImpl *)((char *)v12 + 8), v40, (uint64_t)&v72);
      }
      else
      {
        LOBYTE(v72) = 0;
        v73 = 0;
      }
      v45 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v12 + 5) + 144))(*((_QWORD *)v12 + 5));
      if (v45
        && (v47 = WebCore::InspectorInstrumentation::instrumentingAgents(v45, v46)) != 0
        && (v48 = *(WebCore::InspectorCanvasAgent **)(v47 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v48, (WTF::StringImpl *)((char *)v12 + 8), v15, (uint64_t)&v74);
      }
      else
      {
        LOBYTE(v74) = 0;
        v75 = 0;
      }
      v49 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v12 + 5) + 144))(*((_QWORD *)v12 + 5));
      if (v49
        && (v51 = WebCore::InspectorInstrumentation::instrumentingAgents(v49, v50)) != 0
        && (v52 = *(WebCore::InspectorCanvasAgent **)(v51 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v52, (WTF::StringImpl *)((char *)v12 + 8), v18, (uint64_t)&v76);
      }
      else
      {
        LOBYTE(v76) = 0;
        v77 = 0;
      }
      v66[0] = v70;
      v66[1] = 4;
      v53 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v12 + 5) + 144))(*((_QWORD *)v12 + 5));
      if (v53)
      {
        v55 = WebCore::InspectorInstrumentation::instrumentingAgents(v53, v54);
        if (v55)
        {
          v56 = *(_QWORD *)(v55 + 96);
          if (v56)
            WebCore::InspectorCanvasAgent::recordAction(v56, (WTF::StringImpl *)((char *)v12 + 8), (const WTF::StringImpl *)&v67, v66);
        }
      }
      if (v77)
      {
        v57 = v76;
        v76 = 0;
        if (v57)
        {
          if (*v57 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v57;
        }
      }
      if (v75)
      {
        v58 = v74;
        v74 = 0;
        if (v58)
        {
          if (*v58 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v58;
        }
      }
      if (v73)
      {
        v59 = v72;
        v72 = 0;
        if (v59)
        {
          if (*v59 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v59;
        }
      }
      if (v71)
      {
        v60 = (_DWORD *)v70[0];
        v70[0] = 0;
        if (v60)
        {
          if (*v60 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v60;
        }
      }
      v61 = v67;
      v67 = 0;
      if (v61)
      {
        if (*(_DWORD *)v61 == 2)
          WTF::StringImpl::destroy(v61, v54);
        else
          *(_DWORD *)v61 -= 2;
      }
    }
    if (*((_BYTE *)v12 + 364))
      return 10;
    if (v69[0] == 36161)
    {
      v19 = *((_QWORD *)v12 + 23);
      v20 = WTF::RefPtr<WebCore::WebGLRenderbuffer,WTF::RawPtrTraits<WebCore::WebGLRenderbuffer>,WTF::DefaultRefDerefTraits<WebCore::WebGLRenderbuffer>>::unspecifiedBoolTypeInstance;
      if (!v19)
        v20 = 0;
      if (v20 && *(_DWORD *)(v19 + 24))
      {
        if (((v18 | v15) & 0x80000000) == 0)
        {
          (*(void (**)(WTF::StringImpl *, uint64_t, _QWORD, _QWORD, unint64_t, unint64_t, const char *, uint64_t))(*(_QWORD *)v12 + 104))(v12, 36161, 0, v68[0], v15, v18, "renderbufferStorage", 20);
          return 10;
        }
        v21 = "size < 0";
        v22 = v12;
        v23 = 1281;
        v24 = 9;
      }
      else
      {
        v21 = "no bound renderbuffer";
        v22 = v12;
        v23 = 1282;
        v24 = 22;
      }
    }
    else
    {
      v21 = "invalid target";
      v22 = v12;
      v23 = 1280;
      v24 = 15;
    }
    WebCore::WebGLRenderingContextBase::synthesizeGLError(v22, v23, (uint64_t)"renderbufferStorage", 20, (uint64_t)v21, v24);
    return 10;
  }
  return 0;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_sampleCoverage(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  float v15;
  unint64_t v16;
  JSC::VM *v17;
  double v18;
  _BOOL8 v19;
  JSValue v21;
  int v22;
  WebCore::InspectorInstrumentation *v23;
  WebCore::ScriptExecutionContext *v24;
  uint64_t v25;
  WebCore::InspectorCanvasAgent *v26;
  WebCore::InspectorInstrumentation *v27;
  WebCore::ScriptExecutionContext *v28;
  uint64_t v29;
  WebCore::InspectorCanvasAgent *v30;
  WebCore::InspectorInstrumentation *v31;
  WebCore::ScriptExecutionContext *v32;
  uint64_t v33;
  uint64_t v34;
  _DWORD *v35;
  _DWORD *v36;
  WTF::StringImpl *v37;
  double v38;
  BOOL v39;
  int v40;
  uint64_t v41;
  int *v42;
  int v43;
  JSC::VM *v44;
  _QWORD v45[2];
  WTF::StringImpl *v46;
  _QWORD v47[2];
  char v48;
  _DWORD *v49;
  char v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v44 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v44, "WebGLRenderingContext", "sampleCoverage");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v44, "WebGLRenderingContext", "sampleCoverage");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v21);
  }
  v12 = *(_QWORD *)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  v47[0] = v13;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v47, this);
    v14 = v38;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  if (v14 < -3.40282347e38)
  {
    *(float *)&v22 = -INFINITY;
  }
  else
  {
    if (v14 <= 3.40282347e38)
    {
      v15 = v14;
      goto LABEL_20;
    }
    *(float *)&v22 = INFINITY;
  }
  v15 = *(float *)&v22;
LABEL_20:
  v16 = *((_QWORD *)a2 + 7);
  v17 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v16 >= 0xFFFE000000000000)
  {
    v39 = (_DWORD)v16 == 0;
    goto LABEL_83;
  }
  *(_QWORD *)&v18 = v16 - 0x2000000000000;
  if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v16 & 0xFFFE000000000002) != 0)
    {
      v19 = v16 == 7;
      goto LABEL_24;
    }
    v40 = *(unsigned __int8 *)(v16 + 5);
    if (v40 == 3)
    {
      v43 = *(_DWORD *)(v16 + 8);
    }
    else
    {
      if (v40 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v19 = 1;
          goto LABEL_24;
        }
        v39 = *(_QWORD *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
        goto LABEL_83;
      }
      v41 = *(_QWORD *)(v16 + 8);
      if ((v41 & 1) != 0)
        v42 = (int *)(v16 + 16);
      else
        v42 = (int *)(v41 + 4);
      v43 = *v42;
    }
    v39 = v43 == 0;
LABEL_83:
    v19 = !v39;
    goto LABEL_24;
  }
  v19 = v18 > 0.0 || v18 < 0.0;
LABEL_24:
  if (*((_DWORD *)v17 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) != 0)
    return 0;
  if (*(_BYTE *)(v12 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v23 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v23
      && (v25 = WebCore::InspectorInstrumentation::instrumentingAgents(v23, v24)) != 0
      && (v26 = *(WebCore::InspectorCanvasAgent **)(v25 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v26, (WebCore::CanvasRenderingContext *)(v12 + 8), v15, (uint64_t)v47);
    }
    else
    {
      LOBYTE(v47[0]) = 0;
      v48 = 0;
    }
    v27 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v27
      && (v29 = WebCore::InspectorInstrumentation::instrumentingAgents(v27, v28)) != 0
      && (v30 = *(WebCore::InspectorCanvasAgent **)(v29 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v30, (WebCore::CanvasRenderingContext *)(v12 + 8), (WTF::JSONImpl::Value *)v19, (uint64_t)&v49);
    }
    else
    {
      LOBYTE(v49) = 0;
      v50 = 0;
    }
    v45[0] = v47;
    v45[1] = 2;
    v31 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v31)
    {
      v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v31, v32);
      if (v33)
      {
        v34 = *(_QWORD *)(v33 + 96);
        if (v34)
          WebCore::InspectorCanvasAgent::recordAction(v34, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v46, v45);
      }
    }
    if (v50)
    {
      v35 = v49;
      v49 = 0;
      if (v35)
      {
        if (*v35 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v35;
      }
    }
    if (v48)
    {
      v36 = (_DWORD *)v47[0];
      v47[0] = 0;
      if (v36)
      {
        if (*v36 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v36;
      }
    }
    v37 = v46;
    v46 = 0;
    if (v37)
    {
      if (*(_DWORD *)v37 == 2)
        WTF::StringImpl::destroy(v37, v32);
      else
        *(_DWORD *)v37 -= 2;
    }
  }
  if (!*(_BYTE *)(v12 + 364))
    (*(void (**)(_QWORD, _BOOL8, JSC::CallFrame *, float))(**(_QWORD **)(v12 + 88) + 744))(*(_QWORD *)(v12 + 88), v19, a3, v15);
  return 10;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_scissor(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  JSC::VM *v16;
  unint64_t v17;
  unint64_t v18;
  JSC::VM *v19;
  unint64_t v20;
  unint64_t v21;
  JSC::VM *v22;
  unint64_t v23;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unsigned int v29;
  unint64_t v30;
  unsigned int v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unsigned int v38;
  unint64_t v39;
  unsigned int v40;
  unint64_t v41;
  unsigned int v42;
  JSValue v43;
  WebCore::InspectorInstrumentation *v44;
  WebCore::ScriptExecutionContext *v45;
  uint64_t v46;
  WebCore::InspectorCanvasAgent *v47;
  WebCore::InspectorInstrumentation *v48;
  WebCore::ScriptExecutionContext *v49;
  uint64_t v50;
  WebCore::InspectorCanvasAgent *v51;
  WebCore::InspectorInstrumentation *v52;
  WebCore::ScriptExecutionContext *v53;
  uint64_t v54;
  WebCore::InspectorCanvasAgent *v55;
  WebCore::InspectorInstrumentation *v56;
  WebCore::ScriptExecutionContext *v57;
  uint64_t v58;
  WebCore::InspectorCanvasAgent *v59;
  WebCore::InspectorInstrumentation *v60;
  WebCore::ScriptExecutionContext *v61;
  uint64_t v62;
  uint64_t v63;
  _DWORD *v64;
  _DWORD *v65;
  _DWORD *v66;
  _DWORD *v67;
  WTF::StringImpl *v68;
  unint64_t v69;
  unint64_t v70;
  JSC::VM *v71;
  unint64_t v72;
  unint64_t v73;
  JSC::VM *v74;
  _QWORD v75[2];
  WTF::StringImpl *v76;
  _QWORD v77[2];
  char v78;
  _DWORD *v79;
  char v80;
  _DWORD *v81;
  char v82;
  _DWORD *v83;
  char v84;
  uint64_t v85;

  v85 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v74 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v74, "WebGLRenderingContext", "scissor");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v74, "WebGLRenderingContext", "scissor");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v43.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v43);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v77[0] = v13;
    if (v13 < 0xFFFE000000000000)
    {
      v25 = v13 - 0x2000000000000;
      if (v13 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v77, this);
        v25 = v69;
      }
      v26 = (v25 >> 52) & 0x7FF;
      if ((v26 - 1023) <= 0x53)
      {
        v37 = v25 >> (51 - (v25 >> 52));
        if (v26 > 0x433)
          LODWORD(v37) = v25 << ((v25 >> 52) - 51);
        if (v26 >= 0x41F)
          v38 = v37;
        else
          v38 = (((1 << ((v25 >> 52) + 1)) - 1) & v37) + (1 << ((v25 >> 52) + 1));
        if ((v25 & 0x8000000000000000) == 0)
          v14 = v38;
        else
          v14 = -v38;
      }
      else
      {
        v14 = 0;
      }
    }
    else
    {
      v14 = v13;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v77[0] = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 < 0xFFFE000000000000)
      {
        v27 = v15 - 0x2000000000000;
        if (v15 - 0x2000000000000 >= 0xFFFC000000000000)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v77, this);
          v27 = v70;
        }
        v28 = (v27 >> 52) & 0x7FF;
        v29 = v28 - 1023;
        v30 = v27 >> (51 - (v27 >> 52));
        if (v28 > 0x433)
          LODWORD(v30) = v27 << ((v27 >> 52) - 51);
        if (v28 >= 0x41F)
          v31 = v30;
        else
          v31 = (((1 << ((v27 >> 52) + 1)) - 1) & v30) + (1 << ((v27 >> 52) + 1));
        if ((v27 & 0x8000000000000000) == 0)
          v32 = v31;
        else
          v32 = -v31;
        if (v29 <= 0x53)
          v17 = v32;
        else
          v17 = 0;
      }
      else
      {
        v17 = v15;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = *((_QWORD *)a2 + 8);
        v77[0] = v18;
        v19 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v18 < 0xFFFE000000000000)
        {
          v33 = v18 - 0x2000000000000;
          if (v18 - 0x2000000000000 >= 0xFFFC000000000000)
          {
            v71 = (JSC::VM *)*((_QWORD *)this + 7);
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v77, this);
            v19 = v71;
            v33 = v72;
          }
          v34 = (v33 >> 52) & 0x7FF;
          if ((v34 - 1023) <= 0x53)
          {
            v39 = v33 >> (51 - (v33 >> 52));
            if (v34 > 0x433)
              LODWORD(v39) = v33 << ((v33 >> 52) - 51);
            if (v34 >= 0x41F)
              v40 = v39;
            else
              v40 = (((1 << ((v33 >> 52) + 1)) - 1) & v39) + (1 << ((v33 >> 52) + 1));
            if ((v33 & 0x8000000000000000) == 0)
              v20 = v40;
            else
              v20 = -v40;
          }
          else
          {
            v20 = 0;
          }
        }
        else
        {
          v20 = v18;
        }
        if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
        {
          return 0;
        }
        else
        {
          v21 = *((_QWORD *)a2 + 9);
          v77[0] = v21;
          v22 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v21 < 0xFFFE000000000000)
          {
            v35 = v21 - 0x2000000000000;
            if (v21 - 0x2000000000000 >= 0xFFFC000000000000)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v77, this);
              v35 = v73;
            }
            v36 = (v35 >> 52) & 0x7FF;
            if ((v36 - 1023) <= 0x53)
            {
              v41 = v35 >> (51 - (v35 >> 52));
              if (v36 > 0x433)
                LODWORD(v41) = v35 << ((v35 >> 52) - 51);
              if (v36 >= 0x41F)
                v42 = v41;
              else
                v42 = (((1 << ((v35 >> 52) + 1)) - 1) & v41) + (1 << ((v35 >> 52) + 1));
              if ((v35 & 0x8000000000000000) == 0)
                v23 = v42;
              else
                v23 = -v42;
            }
            else
            {
              v23 = 0;
            }
          }
          else
          {
            v23 = v21;
          }
          if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
          {
            return 0;
          }
          else
          {
            if (*(_BYTE *)(v12 + 33))
            {
              WTF::StringImpl::createWithoutCopyingNonEmpty();
              v76 = (WTF::StringImpl *)v77[0];
              v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v44
                && (v46 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, v45)) != 0
                && (v47 = *(WebCore::InspectorCanvasAgent **)(v46 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v47, (WebCore::CanvasRenderingContext *)(v12 + 8), v14, (uint64_t)v77);
              }
              else
              {
                LOBYTE(v77[0]) = 0;
                v78 = 0;
              }
              v48 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v48
                && (v50 = WebCore::InspectorInstrumentation::instrumentingAgents(v48, v49)) != 0
                && (v51 = *(WebCore::InspectorCanvasAgent **)(v50 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v51, (WebCore::CanvasRenderingContext *)(v12 + 8), v17, (uint64_t)&v79);
              }
              else
              {
                LOBYTE(v79) = 0;
                v80 = 0;
              }
              v52 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v52
                && (v54 = WebCore::InspectorInstrumentation::instrumentingAgents(v52, v53)) != 0
                && (v55 = *(WebCore::InspectorCanvasAgent **)(v54 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v55, (WebCore::CanvasRenderingContext *)(v12 + 8), v20, (uint64_t)&v81);
              }
              else
              {
                LOBYTE(v81) = 0;
                v82 = 0;
              }
              v56 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v56
                && (v58 = WebCore::InspectorInstrumentation::instrumentingAgents(v56, v57)) != 0
                && (v59 = *(WebCore::InspectorCanvasAgent **)(v58 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v59, (WebCore::CanvasRenderingContext *)(v12 + 8), v23, (uint64_t)&v83);
              }
              else
              {
                LOBYTE(v83) = 0;
                v84 = 0;
              }
              v75[0] = v77;
              v75[1] = 4;
              v60 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v60)
              {
                v62 = WebCore::InspectorInstrumentation::instrumentingAgents(v60, v61);
                if (v62)
                {
                  v63 = *(_QWORD *)(v62 + 96);
                  if (v63)
                    WebCore::InspectorCanvasAgent::recordAction(v63, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v76, v75);
                }
              }
              if (v84)
              {
                v64 = v83;
                v83 = 0;
                if (v64)
                {
                  if (*v64 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v64;
                }
              }
              if (v82)
              {
                v65 = v81;
                v81 = 0;
                if (v65)
                {
                  if (*v65 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v65;
                }
              }
              if (v80)
              {
                v66 = v79;
                v79 = 0;
                if (v66)
                {
                  if (*v66 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v66;
                }
              }
              if (v78)
              {
                v67 = (_DWORD *)v77[0];
                v77[0] = 0;
                if (v67)
                {
                  if (*v67 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v67;
                }
              }
              v68 = v76;
              v76 = 0;
              if (v68)
              {
                if (*(_DWORD *)v68 == 2)
                  WTF::StringImpl::destroy(v68, v61);
                else
                  *(_DWORD *)v68 -= 2;
              }
            }
            if (!*(_BYTE *)(v12 + 364))
            {
              if (((v23 | v20) & 0x80000000) != 0)
                WebCore::WebGLRenderingContextBase::synthesizeGLError((WTF::StringImpl *)v12, 1281, (uint64_t)"scissor", 8, (uint64_t)"size < 0", 9);
              else
                (*(void (**)(_QWORD, unint64_t, unint64_t, unint64_t, unint64_t))(**(_QWORD **)(v12 + 88) + 752))(*(_QWORD *)(v12 + 88), v14, v17, v20, v23);
            }
            return 10;
          }
        }
      }
    }
  }
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_shaderSource(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  WebCore::WebGLShader *v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  int v30;
  JSValue v33;
  WTF::StringImpl *v34;
  int hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v36;
  WebCore::ScriptExecutionContext *v37;
  uint64_t v38;
  uint64_t v39;
  WebCore::InspectorInstrumentation *v40;
  WebCore::ScriptExecutionContext *v41;
  uint64_t v42;
  WebCore::InspectorCanvasAgent *v43;
  WebCore::InspectorInstrumentation *v44;
  WebCore::ScriptExecutionContext *v45;
  uint64_t v46;
  uint64_t v47;
  _DWORD *v48;
  WTF::StringImpl *v49;
  WTF::StringImpl *v50;
  WebCore *v51;
  JSC::JSGlobalObject *v52;
  JSC::CallFrame *v53;
  JSC::VM *v54;
  WTF::StringImpl *v55[2];
  WTF::StringImpl *v56;
  WTF::StringImpl *v57;
  int v58;
  WTF::StringImpl *v59[2];
  char v60;
  _DWORD *v61;
  char v62;
  uint64_t v63;

  v63 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v54 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v54, "WebGLRenderingContext", "shaderSource");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return WebCore::throwThisTypeError((int)this, (int)&v54, "WebGLRenderingContext", "shaderSource");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v33.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v33);
  }
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  v59[0] = v9;
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_24;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSWebGLShader::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSWebGLShader::s_info && v20 != 0);
  }
  if (!v19 || (v24 = *(WebCore::WebGLShader **)(v17 + 24)) == 0)
  {
LABEL_24:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v59, 0, "shader", 7, "WebGLRenderingContext", 22, a8, "shaderSource", 13, "WebGLShader", 12);
    return 0;
  }
  v25 = *((_QWORD *)a2 + 7);
  v59[0] = (WTF::StringImpl *)v25;
  if ((v25 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v25 + 5) == 2)
  {
    v26 = *(WTF::StringImpl **)(v25 + 8);
    if ((v26 & 1) != 0)
    {
      v26 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v25, this);
      if (!v26)
        goto LABEL_31;
    }
    else if (!v26)
    {
LABEL_31:
      v55[0] = v26;
      goto LABEL_32;
    }
    *(_DWORD *)v26 += 2;
    goto LABEL_31;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v59, this);
LABEL_32:
  if (*((_DWORD *)v9 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v9);
    v27 = v55[0];
    if (hasExceptionsAfterHandlingTraps)
    {
      v58 = 1;
      v55[0] = 0;
      if (v27)
      {
        if (*(_DWORD *)v27 == 2)
          WTF::StringImpl::destroy(v27, v34);
        else
          *(_DWORD *)v27 -= 2;
      }
      v23 = 0;
      v30 = 1;
LABEL_39:
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E333EAB8[v30])(v59, &v57);
      return (_BYTE *)v23;
    }
  }
  else
  {
    v27 = v55[0];
  }
  v57 = v27;
  v58 = 0;
  if (!*(_BYTE *)(v16 + 33))
  {
LABEL_35:
    v57 = 0;
    v59[0] = v27;
    WebCore::WebGLRenderingContextBase::shaderSource((WTF::StringImpl *)v16, v24, (const WTF::String *)v59);
    v29 = v59[0];
    v59[0] = 0;
    if (v29)
    {
      if (*(_DWORD *)v29 == 2)
        WTF::StringImpl::destroy(v29, v28);
      else
        *(_DWORD *)v29 -= 2;
    }
    v30 = v58;
    v23 = 10;
    if (v58 == -1)
      return (_BYTE *)v23;
    goto LABEL_39;
  }
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v36 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
  if (v36
    && (v38 = WebCore::InspectorInstrumentation::instrumentingAgents(v36, v37)) != 0
    && (v39 = *(_QWORD *)(v38 + 96)) != 0)
  {
    WebCore::InspectorCanvasAgent::processArgument(v39, (WebCore::CanvasRenderingContext *)(v16 + 8), v24, (uint64_t)v59);
  }
  else
  {
    LOBYTE(v59[0]) = 0;
    v60 = 0;
  }
  v40 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
  if (v40
    && (v42 = WebCore::InspectorInstrumentation::instrumentingAgents(v40, v41)) != 0
    && (v43 = *(WebCore::InspectorCanvasAgent **)(v42 + 96)) != 0)
  {
    WebCore::InspectorCanvasAgent::processArgument(v43, (WebCore::CanvasRenderingContext *)(v16 + 8), (int **)&v57, (uint64_t)&v61);
  }
  else
  {
    LOBYTE(v61) = 0;
    v62 = 0;
  }
  v55[0] = (WTF::StringImpl *)v59;
  v55[1] = (WTF::StringImpl *)2;
  v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
  if (v44)
  {
    v46 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, v45);
    if (v46)
    {
      v47 = *(_QWORD *)(v46 + 96);
      if (v47)
        WebCore::InspectorCanvasAgent::recordAction(v47, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v56, v55);
    }
  }
  if (v62)
  {
    v48 = v61;
    v61 = 0;
    if (v48)
    {
      if (*v48 == 1)
        WTF::JSONImpl::Value::operator delete();
      else
        --*v48;
    }
  }
  if (v60)
  {
    v49 = v59[0];
    v59[0] = 0;
    if (v49)
    {
      if (*(_DWORD *)v49 == 1)
        WTF::JSONImpl::Value::operator delete();
      else
        --*(_DWORD *)v49;
    }
  }
  v50 = v56;
  v56 = 0;
  if (v50)
  {
    if (*(_DWORD *)v50 == 2)
      WTF::StringImpl::destroy(v50, v45);
    else
      *(_DWORD *)v50 -= 2;
  }
  if (!v58)
  {
    v27 = v57;
    goto LABEL_35;
  }
  v51 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsWebGLRenderingContextPrototypeFunction_stencilFunc(v51, v52, v53);
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_stencilFunc(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  JSC::VM *v14;
  unint64_t v15;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unsigned int v21;
  unsigned int v22;
  JSValue v23;
  unsigned int v24;
  WebCore::InspectorInstrumentation *v25;
  WebCore::ScriptExecutionContext *v26;
  uint64_t v27;
  WebCore::InspectorCanvasAgent *v28;
  WebCore::InspectorInstrumentation *v29;
  WebCore::ScriptExecutionContext *v30;
  uint64_t v31;
  WebCore::InspectorCanvasAgent *v32;
  unsigned int v33;
  WebCore::InspectorInstrumentation *v34;
  WebCore::ScriptExecutionContext *v35;
  uint64_t v36;
  WebCore::InspectorCanvasAgent *v37;
  WebCore::InspectorInstrumentation *v38;
  WebCore::ScriptExecutionContext *v39;
  uint64_t v40;
  uint64_t v41;
  _DWORD *v42;
  _DWORD *v43;
  _DWORD *v44;
  WTF::StringImpl *v45;
  JSC::VM *v46;
  unint64_t v47;
  JSC::VM *v48;
  _QWORD v49[2];
  WTF::StringImpl *v50;
  _DWORD v51[2];
  _DWORD v52[2];
  _QWORD v53[2];
  char v54;
  _DWORD *v55;
  char v56;
  _DWORD *v57;
  char v58;
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v48 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v48, "WebGLRenderingContext", "stencilFunc");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v48, "WebGLRenderingContext", "stencilFunc");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v23.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v23);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v52);
    if (v52[1])
    {
      return 0;
    }
    else
    {
      v13 = *((_QWORD *)a2 + 7);
      v53[0] = v13;
      v14 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v13 < 0xFFFE000000000000)
      {
        v17 = v13 - 0x2000000000000;
        if (v13 - 0x2000000000000 >= 0xFFFC000000000000)
        {
          v46 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v53, this);
          v14 = v46;
          v17 = v47;
        }
        v18 = (v17 >> 52) & 0x7FF;
        v19 = v18 - 1023;
        v20 = v17 >> (51 - (v17 >> 52));
        if (v18 > 0x433)
          LODWORD(v20) = v17 << ((v17 >> 52) - 51);
        if (v18 >= 0x41F)
          v21 = v20;
        else
          v21 = (((1 << ((v17 >> 52) + 1)) - 1) & v20) + (1 << ((v17 >> 52) + 1));
        if ((v17 & 0x8000000000000000) == 0)
          v22 = v21;
        else
          v22 = -v21;
        if (v19 <= 0x53)
          v15 = v22;
        else
          v15 = 0;
      }
      else
      {
        v15 = v13;
      }
      if (*((_DWORD *)v14 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v14))
      {
        return 0;
      }
      else
      {
        WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 8), v51);
        if (v51[1])
        {
          return 0;
        }
        else
        {
          if (*(_BYTE *)(v12 + 33))
          {
            WTF::StringImpl::createWithoutCopyingNonEmpty();
            v24 = v52[0];
            v25 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                         + 144))(*(_QWORD *)(v12 + 40));
            if (v25
              && (v27 = WebCore::InspectorInstrumentation::instrumentingAgents(v25, v26)) != 0
              && (v28 = *(WebCore::InspectorCanvasAgent **)(v27 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v28, (WebCore::CanvasRenderingContext *)(v12 + 8), v24, (uint64_t)v53);
            }
            else
            {
              LOBYTE(v53[0]) = 0;
              v54 = 0;
            }
            v29 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                         + 144))(*(_QWORD *)(v12 + 40));
            if (v29
              && (v31 = WebCore::InspectorInstrumentation::instrumentingAgents(v29, v30)) != 0
              && (v32 = *(WebCore::InspectorCanvasAgent **)(v31 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v32, (WebCore::CanvasRenderingContext *)(v12 + 8), v15, (uint64_t)&v55);
            }
            else
            {
              LOBYTE(v55) = 0;
              v56 = 0;
            }
            v33 = v51[0];
            v34 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                         + 144))(*(_QWORD *)(v12 + 40));
            if (v34
              && (v36 = WebCore::InspectorInstrumentation::instrumentingAgents(v34, v35)) != 0
              && (v37 = *(WebCore::InspectorCanvasAgent **)(v36 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v37, (WebCore::CanvasRenderingContext *)(v12 + 8), v33, (uint64_t)&v57);
            }
            else
            {
              LOBYTE(v57) = 0;
              v58 = 0;
            }
            v49[0] = v53;
            v49[1] = 3;
            v38 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                         + 144))(*(_QWORD *)(v12 + 40));
            if (v38)
            {
              v40 = WebCore::InspectorInstrumentation::instrumentingAgents(v38, v39);
              if (v40)
              {
                v41 = *(_QWORD *)(v40 + 96);
                if (v41)
                  WebCore::InspectorCanvasAgent::recordAction(v41, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v50, v49);
              }
            }
            if (v58)
            {
              v42 = v57;
              v57 = 0;
              if (v42)
              {
                if (*v42 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v42;
              }
            }
            if (v56)
            {
              v43 = v55;
              v55 = 0;
              if (v43)
              {
                if (*v43 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v43;
              }
            }
            if (v54)
            {
              v44 = (_DWORD *)v53[0];
              v53[0] = 0;
              if (v44)
              {
                if (*v44 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v44;
              }
            }
            v45 = v50;
            v50 = 0;
            if (v45)
            {
              if (*(_DWORD *)v45 == 2)
                WTF::StringImpl::destroy(v45, v39);
              else
                *(_DWORD *)v45 -= 2;
            }
          }
          if (!*(_BYTE *)(v12 + 364))
            (*(void (**)(_QWORD, _QWORD, unint64_t, _QWORD))(**(_QWORD **)(v12 + 88) + 768))(*(_QWORD *)(v12 + 88), v52[0], v15, v51[0]);
          return 10;
        }
      }
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_stencilFuncSeparate(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  JSC::VM *v14;
  unint64_t v15;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int v20;
  JSValue v21;
  unsigned int v22;
  WebCore::InspectorInstrumentation *v23;
  WebCore::ScriptExecutionContext *v24;
  uint64_t v25;
  WebCore::InspectorCanvasAgent *v26;
  unsigned int v27;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  WebCore::InspectorCanvasAgent *v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  WebCore::InspectorCanvasAgent *v35;
  unsigned int v36;
  WebCore::InspectorInstrumentation *v37;
  WebCore::ScriptExecutionContext *v38;
  uint64_t v39;
  WebCore::InspectorCanvasAgent *v40;
  WebCore::InspectorInstrumentation *v41;
  WebCore::ScriptExecutionContext *v42;
  uint64_t v43;
  uint64_t v44;
  _DWORD *v45;
  _DWORD *v46;
  _DWORD *v47;
  _DWORD *v48;
  WTF::StringImpl *v49;
  JSC::VM *v50;
  unint64_t v51;
  JSC::VM *v52;
  _QWORD v53[2];
  WTF::StringImpl *v54;
  _DWORD v55[2];
  _DWORD v56[2];
  _DWORD v57[2];
  _QWORD v58[2];
  char v59;
  _DWORD *v60;
  char v61;
  _DWORD *v62;
  char v63;
  _DWORD *v64;
  char v65;
  uint64_t v66;

  v66 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v52 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v52, "WebGLRenderingContext", "stencilFuncSeparate");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v52, "WebGLRenderingContext", "stencilFuncSeparate");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v21);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v57);
    if (v57[1])
    {
      return 0;
    }
    else
    {
      WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v56);
      if (v56[1])
      {
        return 0;
      }
      else
      {
        v13 = *((_QWORD *)a2 + 8);
        v58[0] = v13;
        v14 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v13 < 0xFFFE000000000000)
        {
          v17 = v13 - 0x2000000000000;
          if (v13 - 0x2000000000000 >= 0xFFFC000000000000)
          {
            v50 = (JSC::VM *)*((_QWORD *)this + 7);
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v58, this);
            v14 = v50;
            v17 = v51;
          }
          v18 = (v17 >> 52) & 0x7FF;
          if ((v18 - 1023) <= 0x53)
          {
            v19 = v17 >> (51 - (v17 >> 52));
            if (v18 > 0x433)
              LODWORD(v19) = v17 << ((v17 >> 52) - 51);
            if (v18 >= 0x41F)
              v20 = v19;
            else
              v20 = (((1 << ((v17 >> 52) + 1)) - 1) & v19) + (1 << ((v17 >> 52) + 1));
            if ((v17 & 0x8000000000000000) == 0)
              v15 = v20;
            else
              v15 = -v20;
          }
          else
          {
            v15 = 0;
          }
        }
        else
        {
          v15 = v13;
        }
        if (*((_DWORD *)v14 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v14))
        {
          return 0;
        }
        else
        {
          WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 9), v55);
          if (v55[1])
          {
            return 0;
          }
          else
          {
            if (*(_BYTE *)(v12 + 33))
            {
              WTF::StringImpl::createWithoutCopyingNonEmpty();
              v54 = (WTF::StringImpl *)v58[0];
              v22 = v57[0];
              v23 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v23
                && (v25 = WebCore::InspectorInstrumentation::instrumentingAgents(v23, v24)) != 0
                && (v26 = *(WebCore::InspectorCanvasAgent **)(v25 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v26, (WebCore::CanvasRenderingContext *)(v12 + 8), v22, (uint64_t)v58);
              }
              else
              {
                LOBYTE(v58[0]) = 0;
                v59 = 0;
              }
              v27 = v56[0];
              v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v28
                && (v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29)) != 0
                && (v31 = *(WebCore::InspectorCanvasAgent **)(v30 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v31, (WebCore::CanvasRenderingContext *)(v12 + 8), v27, (uint64_t)&v60);
              }
              else
              {
                LOBYTE(v60) = 0;
                v61 = 0;
              }
              v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v32
                && (v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33)) != 0
                && (v35 = *(WebCore::InspectorCanvasAgent **)(v34 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v35, (WebCore::CanvasRenderingContext *)(v12 + 8), v15, (uint64_t)&v62);
              }
              else
              {
                LOBYTE(v62) = 0;
                v63 = 0;
              }
              v36 = v55[0];
              v37 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v37
                && (v39 = WebCore::InspectorInstrumentation::instrumentingAgents(v37, v38)) != 0
                && (v40 = *(WebCore::InspectorCanvasAgent **)(v39 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v40, (WebCore::CanvasRenderingContext *)(v12 + 8), v36, (uint64_t)&v64);
              }
              else
              {
                LOBYTE(v64) = 0;
                v65 = 0;
              }
              v53[0] = v58;
              v53[1] = 4;
              v41 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v41)
              {
                v43 = WebCore::InspectorInstrumentation::instrumentingAgents(v41, v42);
                if (v43)
                {
                  v44 = *(_QWORD *)(v43 + 96);
                  if (v44)
                    WebCore::InspectorCanvasAgent::recordAction(v44, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v54, v53);
                }
              }
              if (v65)
              {
                v45 = v64;
                v64 = 0;
                if (v45)
                {
                  if (*v45 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v45;
                }
              }
              if (v63)
              {
                v46 = v62;
                v62 = 0;
                if (v46)
                {
                  if (*v46 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v46;
                }
              }
              if (v61)
              {
                v47 = v60;
                v60 = 0;
                if (v47)
                {
                  if (*v47 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v47;
                }
              }
              if (v59)
              {
                v48 = (_DWORD *)v58[0];
                v58[0] = 0;
                if (v48)
                {
                  if (*v48 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v48;
                }
              }
              v49 = v54;
              v54 = 0;
              if (v49)
              {
                if (*(_DWORD *)v49 == 2)
                  WTF::StringImpl::destroy(v49, v42);
                else
                  *(_DWORD *)v49 -= 2;
              }
            }
            if (!*(_BYTE *)(v12 + 364))
              (*(void (**)(_QWORD, _QWORD, _QWORD, unint64_t, _QWORD))(**(_QWORD **)(v12 + 88) + 776))(*(_QWORD *)(v12 + 88), v57[0], v56[0], v15, v55[0]);
            return 10;
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_stencilMask(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  JSValue v13;
  unsigned int v14;
  WebCore::InspectorInstrumentation *v15;
  WebCore::ScriptExecutionContext *v16;
  uint64_t v17;
  WebCore::InspectorCanvasAgent *v18;
  WebCore::InspectorInstrumentation *v19;
  WebCore::ScriptExecutionContext *v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  WTF::StringImpl *v24;
  JSC::VM *v25;
  _QWORD v26[2];
  WTF::StringImpl *v27;
  _DWORD v28[2];
  _QWORD v29[2];
  char v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "WebGLRenderingContext", "stencilMask");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebGLRenderingContext::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "WebGLRenderingContext", "stencilMask");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v13);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v28);
    if (v28[1])
    {
      return 0;
    }
    else
    {
      if (*(_BYTE *)(v11 + 33))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v14 = v28[0];
        v15 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v15
          && (v17 = WebCore::InspectorInstrumentation::instrumentingAgents(v15, v16)) != 0
          && (v18 = *(WebCore::InspectorCanvasAgent **)(v17 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v18, (WebCore::CanvasRenderingContext *)(v11 + 8), v14, (uint64_t)v29);
        }
        else
        {
          LOBYTE(v29[0]) = 0;
          v30 = 0;
        }
        v26[0] = v29;
        v26[1] = 1;
        v19 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 40) + 144))(*(_QWORD *)(v11 + 40));
        if (v19)
        {
          v21 = WebCore::InspectorInstrumentation::instrumentingAgents(v19, v20);
          if (v21)
          {
            v22 = *(_QWORD *)(v21 + 96);
            if (v22)
              WebCore::InspectorCanvasAgent::recordAction(v22, (WebCore::CanvasRenderingContext *)(v11 + 8), (const WTF::StringImpl *)&v27, v26);
          }
        }
        if (v30)
        {
          v23 = (_DWORD *)v29[0];
          v29[0] = 0;
          if (v23)
          {
            if (*v23 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v23;
          }
        }
        v24 = v27;
        v27 = 0;
        if (v24)
        {
          if (*(_DWORD *)v24 == 2)
            WTF::StringImpl::destroy(v24, v20);
          else
            *(_DWORD *)v24 -= 2;
        }
      }
      if (!*(_BYTE *)(v11 + 364))
      {
        *(_DWORD *)(v11 + 420) = v28[0];
        (*(void (**)(_QWORD))(**(_QWORD **)(v11 + 88) + 784))(*(_QWORD *)(v11 + 88));
      }
      return 10;
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_stencilMaskSeparate(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  JSValue v16;
  WebCore::InspectorInstrumentation *v17;
  WebCore::ScriptExecutionContext *v18;
  uint64_t v19;
  WebCore::InspectorCanvasAgent *v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  WebCore::InspectorCanvasAgent *v24;
  WebCore::InspectorInstrumentation *v25;
  WebCore::ScriptExecutionContext *v26;
  uint64_t v27;
  uint64_t v28;
  _DWORD *v29;
  _DWORD *v30;
  WTF::StringImpl *v31;
  JSC::VM *v32;
  _QWORD v33[2];
  WTF::StringImpl *v34;
  _DWORD v35[2];
  _DWORD v36[2];
  _QWORD v37[2];
  char v38;
  _DWORD *v39;
  char v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v32 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v32, "WebGLRenderingContext", "stencilMaskSeparate");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v32, "WebGLRenderingContext", "stencilMaskSeparate");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v16.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v16);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v36);
    if (v36[1])
    {
      return 0;
    }
    else
    {
      WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v35);
      if (v35[1])
      {
        return 0;
      }
      else
      {
        if (*(_BYTE *)(v12 + 33))
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v13 = v36[0];
          v17 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
          if (v17
            && (v19 = WebCore::InspectorInstrumentation::instrumentingAgents(v17, v18)) != 0
            && (v20 = *(WebCore::InspectorCanvasAgent **)(v19 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v20, (WebCore::CanvasRenderingContext *)(v12 + 8), v13, (uint64_t)v37);
          }
          else
          {
            LOBYTE(v37[0]) = 0;
            v38 = 0;
          }
          v14 = v35[0];
          v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
          if (v21
            && (v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22)) != 0
            && (v24 = *(WebCore::InspectorCanvasAgent **)(v23 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v24, (WebCore::CanvasRenderingContext *)(v12 + 8), v14, (uint64_t)&v39);
          }
          else
          {
            LOBYTE(v39) = 0;
            v40 = 0;
          }
          v33[0] = v37;
          v33[1] = 2;
          v25 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
          if (v25)
          {
            v27 = WebCore::InspectorInstrumentation::instrumentingAgents(v25, v26);
            if (v27)
            {
              v28 = *(_QWORD *)(v27 + 96);
              if (v28)
                WebCore::InspectorCanvasAgent::recordAction(v28, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v34, v33);
            }
          }
          if (v40)
          {
            v29 = v39;
            v39 = 0;
            if (v29)
            {
              if (*v29 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v29;
            }
          }
          if (v38)
          {
            v30 = (_DWORD *)v37[0];
            v37[0] = 0;
            if (v30)
            {
              if (*v30 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v30;
            }
          }
          v31 = v34;
          v34 = 0;
          if (v31)
          {
            if (*(_DWORD *)v31 == 2)
              WTF::StringImpl::destroy(v31, v26);
            else
              *(_DWORD *)v31 -= 2;
          }
        }
        else
        {
          v13 = v36[0];
          v14 = v35[0];
        }
        if (!*(_BYTE *)(v12 + 364))
        {
          if ((_DWORD)v13 == 1032 || (_DWORD)v13 == 1028)
            *(_DWORD *)(v12 + 420) = v14;
          (*(void (**)(_QWORD, uint64_t, uint64_t))(**(_QWORD **)(v12 + 88) + 792))(*(_QWORD *)(v12 + 88), v13, v14);
        }
        return 10;
      }
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_stencilOp(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  JSValue v14;
  unsigned int v15;
  WebCore::InspectorInstrumentation *v16;
  WebCore::ScriptExecutionContext *v17;
  uint64_t v18;
  WebCore::InspectorCanvasAgent *v19;
  unsigned int v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  WebCore::InspectorCanvasAgent *v24;
  unsigned int v25;
  WebCore::InspectorInstrumentation *v26;
  WebCore::ScriptExecutionContext *v27;
  uint64_t v28;
  WebCore::InspectorCanvasAgent *v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  _DWORD *v35;
  _DWORD *v36;
  WTF::StringImpl *v37;
  JSC::VM *v38;
  _QWORD v39[2];
  WTF::StringImpl *v40;
  _DWORD v41[2];
  _DWORD v42[2];
  _DWORD v43[2];
  _QWORD v44[2];
  char v45;
  _DWORD *v46;
  char v47;
  _DWORD *v48;
  char v49;
  uint64_t v50;

  v50 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v38 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v38, "WebGLRenderingContext", "stencilOp");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v38, "WebGLRenderingContext", "stencilOp");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v14.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v14);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v43);
    if (v43[1])
    {
      return 0;
    }
    else
    {
      WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v42);
      if (v42[1])
      {
        return 0;
      }
      else
      {
        WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 8), v41);
        if (v41[1])
        {
          return 0;
        }
        else
        {
          if (*(_BYTE *)(v12 + 33))
          {
            WTF::StringImpl::createWithoutCopyingNonEmpty();
            v15 = v43[0];
            v16 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                         + 144))(*(_QWORD *)(v12 + 40));
            if (v16
              && (v18 = WebCore::InspectorInstrumentation::instrumentingAgents(v16, v17)) != 0
              && (v19 = *(WebCore::InspectorCanvasAgent **)(v18 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v19, (WebCore::CanvasRenderingContext *)(v12 + 8), v15, (uint64_t)v44);
            }
            else
            {
              LOBYTE(v44[0]) = 0;
              v45 = 0;
            }
            v20 = v42[0];
            v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                         + 144))(*(_QWORD *)(v12 + 40));
            if (v21
              && (v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22)) != 0
              && (v24 = *(WebCore::InspectorCanvasAgent **)(v23 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v24, (WebCore::CanvasRenderingContext *)(v12 + 8), v20, (uint64_t)&v46);
            }
            else
            {
              LOBYTE(v46) = 0;
              v47 = 0;
            }
            v25 = v41[0];
            v26 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                         + 144))(*(_QWORD *)(v12 + 40));
            if (v26
              && (v28 = WebCore::InspectorInstrumentation::instrumentingAgents(v26, v27)) != 0
              && (v29 = *(WebCore::InspectorCanvasAgent **)(v28 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v29, (WebCore::CanvasRenderingContext *)(v12 + 8), v25, (uint64_t)&v48);
            }
            else
            {
              LOBYTE(v48) = 0;
              v49 = 0;
            }
            v39[0] = v44;
            v39[1] = 3;
            v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                         + 144))(*(_QWORD *)(v12 + 40));
            if (v30)
            {
              v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31);
              if (v32)
              {
                v33 = *(_QWORD *)(v32 + 96);
                if (v33)
                  WebCore::InspectorCanvasAgent::recordAction(v33, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v40, v39);
              }
            }
            if (v49)
            {
              v34 = v48;
              v48 = 0;
              if (v34)
              {
                if (*v34 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v34;
              }
            }
            if (v47)
            {
              v35 = v46;
              v46 = 0;
              if (v35)
              {
                if (*v35 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v35;
              }
            }
            if (v45)
            {
              v36 = (_DWORD *)v44[0];
              v44[0] = 0;
              if (v36)
              {
                if (*v36 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v36;
              }
            }
            v37 = v40;
            v40 = 0;
            if (v37)
            {
              if (*(_DWORD *)v37 == 2)
                WTF::StringImpl::destroy(v37, v31);
              else
                *(_DWORD *)v37 -= 2;
            }
          }
          if (!*(_BYTE *)(v12 + 364))
            (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(**(_QWORD **)(v12 + 88) + 800))(*(_QWORD *)(v12 + 88), v43[0], v42[0], v41[0]);
          return 10;
        }
      }
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_stencilOpSeparate(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  JSValue v14;
  unsigned int v15;
  WebCore::InspectorInstrumentation *v16;
  WebCore::ScriptExecutionContext *v17;
  uint64_t v18;
  WebCore::InspectorCanvasAgent *v19;
  unsigned int v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  WebCore::InspectorCanvasAgent *v24;
  unsigned int v25;
  WebCore::InspectorInstrumentation *v26;
  WebCore::ScriptExecutionContext *v27;
  uint64_t v28;
  WebCore::InspectorCanvasAgent *v29;
  unsigned int v30;
  WebCore::InspectorInstrumentation *v31;
  WebCore::ScriptExecutionContext *v32;
  uint64_t v33;
  WebCore::InspectorCanvasAgent *v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  uint64_t v38;
  _DWORD *v39;
  _DWORD *v40;
  _DWORD *v41;
  _DWORD *v42;
  WTF::StringImpl *v43;
  JSC::VM *v44;
  _QWORD v45[2];
  WTF::StringImpl *v46;
  _DWORD v47[2];
  _DWORD v48[2];
  _DWORD v49[2];
  _DWORD v50[2];
  _QWORD v51[2];
  char v52;
  _DWORD *v53;
  char v54;
  _DWORD *v55;
  char v56;
  _DWORD *v57;
  char v58;
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v44 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v44, "WebGLRenderingContext", "stencilOpSeparate");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v44, "WebGLRenderingContext", "stencilOpSeparate");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v14.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v14);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v50);
    if (v50[1])
    {
      return 0;
    }
    else
    {
      WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v49);
      if (v49[1])
      {
        return 0;
      }
      else
      {
        WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 8), v48);
        if (v48[1])
        {
          return 0;
        }
        else
        {
          WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 9), v47);
          if (v47[1])
          {
            return 0;
          }
          else
          {
            if (*(_BYTE *)(v12 + 33))
            {
              WTF::StringImpl::createWithoutCopyingNonEmpty();
              v46 = (WTF::StringImpl *)v51[0];
              v15 = v50[0];
              v16 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v16
                && (v18 = WebCore::InspectorInstrumentation::instrumentingAgents(v16, v17)) != 0
                && (v19 = *(WebCore::InspectorCanvasAgent **)(v18 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v19, (WebCore::CanvasRenderingContext *)(v12 + 8), v15, (uint64_t)v51);
              }
              else
              {
                LOBYTE(v51[0]) = 0;
                v52 = 0;
              }
              v20 = v49[0];
              v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v21
                && (v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22)) != 0
                && (v24 = *(WebCore::InspectorCanvasAgent **)(v23 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v24, (WebCore::CanvasRenderingContext *)(v12 + 8), v20, (uint64_t)&v53);
              }
              else
              {
                LOBYTE(v53) = 0;
                v54 = 0;
              }
              v25 = v48[0];
              v26 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v26
                && (v28 = WebCore::InspectorInstrumentation::instrumentingAgents(v26, v27)) != 0
                && (v29 = *(WebCore::InspectorCanvasAgent **)(v28 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v29, (WebCore::CanvasRenderingContext *)(v12 + 8), v25, (uint64_t)&v55);
              }
              else
              {
                LOBYTE(v55) = 0;
                v56 = 0;
              }
              v30 = v47[0];
              v31 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v31
                && (v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v31, v32)) != 0
                && (v34 = *(WebCore::InspectorCanvasAgent **)(v33 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v34, (WebCore::CanvasRenderingContext *)(v12 + 8), v30, (uint64_t)&v57);
              }
              else
              {
                LOBYTE(v57) = 0;
                v58 = 0;
              }
              v45[0] = v51;
              v45[1] = 4;
              v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v35)
              {
                v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36);
                if (v37)
                {
                  v38 = *(_QWORD *)(v37 + 96);
                  if (v38)
                    WebCore::InspectorCanvasAgent::recordAction(v38, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v46, v45);
                }
              }
              if (v58)
              {
                v39 = v57;
                v57 = 0;
                if (v39)
                {
                  if (*v39 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v39;
                }
              }
              if (v56)
              {
                v40 = v55;
                v55 = 0;
                if (v40)
                {
                  if (*v40 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v40;
                }
              }
              if (v54)
              {
                v41 = v53;
                v53 = 0;
                if (v41)
                {
                  if (*v41 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v41;
                }
              }
              if (v52)
              {
                v42 = (_DWORD *)v51[0];
                v51[0] = 0;
                if (v42)
                {
                  if (*v42 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v42;
                }
              }
              v43 = v46;
              v46 = 0;
              if (v43)
              {
                if (*(_DWORD *)v43 == 2)
                  WTF::StringImpl::destroy(v43, v36);
                else
                  *(_DWORD *)v43 -= 2;
              }
            }
            if (!*(_BYTE *)(v12 + 364))
              (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(**(_QWORD **)(v12 + 88) + 808))(*(_QWORD *)(v12 + 88), v50[0], v49[0], v48[0], v47[0]);
            return 10;
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_texParameterf(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  JSC::VM *v14;
  double v15;
  float v16;
  uint64_t v17;
  uint64_t v18;
  JSValue v20;
  int v21;
  WebCore::InspectorInstrumentation *v22;
  WebCore::ScriptExecutionContext *v23;
  uint64_t v24;
  WebCore::InspectorCanvasAgent *v25;
  WebCore::InspectorInstrumentation *v26;
  WebCore::ScriptExecutionContext *v27;
  uint64_t v28;
  WebCore::InspectorCanvasAgent *v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  WebCore::InspectorCanvasAgent *v33;
  WebCore::InspectorInstrumentation *v34;
  WebCore::ScriptExecutionContext *v35;
  uint64_t v36;
  uint64_t v37;
  _DWORD *v38;
  _DWORD *v39;
  _DWORD *v40;
  WTF::StringImpl *v41;
  double v42;
  JSC::VM *v43;
  _QWORD v44[2];
  WTF::StringImpl *v45;
  unsigned int v46[2];
  unsigned int v47[2];
  _QWORD v48[2];
  char v49;
  _DWORD *v50;
  char v51;
  _DWORD *v52;
  char v53;
  uint64_t v54;

  v54 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v43 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v43, "WebGLRenderingContext", "texParameterf");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v43, "WebGLRenderingContext", "texParameterf");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v20);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v47);
  if (v47[1])
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v46);
  if (v46[1])
    return 0;
  v13 = *((_QWORD *)a2 + 8);
  v48[0] = v13;
  v14 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v13 >= 0xFFFE000000000000)
  {
    v15 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v48, this);
    v15 = v42;
  }
  else
  {
    *(_QWORD *)&v15 = v13 - 0x2000000000000;
  }
  if (*((_DWORD *)v14 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v14) & 1) != 0)
    return 0;
  if (v15 < -3.40282347e38)
  {
    *(float *)&v21 = -INFINITY;
LABEL_38:
    v16 = *(float *)&v21;
    goto LABEL_22;
  }
  if (v15 > 3.40282347e38)
  {
    *(float *)&v21 = INFINITY;
    goto LABEL_38;
  }
  v16 = v15;
LABEL_22:
  if (*(_BYTE *)(v12 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v17 = v47[0];
    v22 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v22
      && (v24 = WebCore::InspectorInstrumentation::instrumentingAgents(v22, v23)) != 0
      && (v25 = *(WebCore::InspectorCanvasAgent **)(v24 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v25, (WebCore::CanvasRenderingContext *)(v12 + 8), v17, (uint64_t)v48);
    }
    else
    {
      LOBYTE(v48[0]) = 0;
      v49 = 0;
    }
    v18 = v46[0];
    v26 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v26
      && (v28 = WebCore::InspectorInstrumentation::instrumentingAgents(v26, v27)) != 0
      && (v29 = *(WebCore::InspectorCanvasAgent **)(v28 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v29, (WebCore::CanvasRenderingContext *)(v12 + 8), v18, (uint64_t)&v50);
    }
    else
    {
      LOBYTE(v50) = 0;
      v51 = 0;
    }
    v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v30
      && (v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31)) != 0
      && (v33 = *(WebCore::InspectorCanvasAgent **)(v32 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v33, (WebCore::CanvasRenderingContext *)(v12 + 8), v16, (uint64_t)&v52);
    }
    else
    {
      LOBYTE(v52) = 0;
      v53 = 0;
    }
    v44[0] = v48;
    v44[1] = 3;
    v34 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v34)
    {
      v36 = WebCore::InspectorInstrumentation::instrumentingAgents(v34, v35);
      if (v36)
      {
        v37 = *(_QWORD *)(v36 + 96);
        if (v37)
          WebCore::InspectorCanvasAgent::recordAction(v37, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v45, v44);
      }
    }
    if (v53)
    {
      v38 = v52;
      v52 = 0;
      if (v38)
      {
        if (*v38 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v38;
      }
    }
    if (v51)
    {
      v39 = v50;
      v50 = 0;
      if (v39)
      {
        if (*v39 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v39;
      }
    }
    if (v49)
    {
      v40 = (_DWORD *)v48[0];
      v48[0] = 0;
      if (v40)
      {
        if (*v40 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v40;
      }
    }
    v41 = v45;
    v45 = 0;
    if (v41)
    {
      if (*(_DWORD *)v41 == 2)
        WTF::StringImpl::destroy(v41, v35);
      else
        *(_DWORD *)v41 -= 2;
    }
  }
  else
  {
    v17 = v47[0];
    v18 = v46[0];
  }
  WebCore::WebGLRenderingContextBase::texParameter((WTF::StringImpl *)v12, v17, v18, v16, 0, 1);
  return 10;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_texParameteri(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  JSC::VM *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unsigned int v22;
  JSValue v23;
  WebCore::InspectorInstrumentation *v24;
  WebCore::ScriptExecutionContext *v25;
  uint64_t v26;
  WebCore::InspectorCanvasAgent *v27;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  WebCore::InspectorCanvasAgent *v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  WebCore::InspectorCanvasAgent *v35;
  WebCore::InspectorInstrumentation *v36;
  WebCore::ScriptExecutionContext *v37;
  uint64_t v38;
  uint64_t v39;
  _DWORD *v40;
  _DWORD *v41;
  _DWORD *v42;
  WTF::StringImpl *v43;
  unint64_t v44;
  JSC::VM *v45;
  _QWORD v46[2];
  WTF::StringImpl *v47;
  unsigned int v48[2];
  unsigned int v49[2];
  _QWORD v50[2];
  char v51;
  _DWORD *v52;
  char v53;
  _DWORD *v54;
  char v55;
  uint64_t v56;

  v56 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v45 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v45, "WebGLRenderingContext", "texParameteri");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v45, "WebGLRenderingContext", "texParameteri");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v23.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v23);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v49);
    if (v49[1])
    {
      return 0;
    }
    else
    {
      WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 7), v48);
      if (v48[1])
      {
        return 0;
      }
      else
      {
        v13 = *((_QWORD *)a2 + 8);
        v50[0] = v13;
        v14 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v13 < 0xFFFE000000000000)
        {
          v19 = v13 - 0x2000000000000;
          if (v13 - 0x2000000000000 >= 0xFFFC000000000000)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v50, this);
            v19 = v44;
          }
          v20 = (v19 >> 52) & 0x7FF;
          if ((v20 - 1023) <= 0x53)
          {
            v21 = v19 >> (51 - (v19 >> 52));
            if (v20 > 0x433)
              LODWORD(v21) = v19 << ((v19 >> 52) - 51);
            if (v20 >= 0x41F)
              v22 = v21;
            else
              v22 = (((1 << ((v19 >> 52) + 1)) - 1) & v21) + (1 << ((v19 >> 52) + 1));
            if ((v19 & 0x8000000000000000) == 0)
              v15 = v22;
            else
              v15 = -v22;
          }
          else
          {
            v15 = 0;
          }
        }
        else
        {
          v15 = v13;
        }
        if (*((_DWORD *)v14 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v14))
        {
          return 0;
        }
        else
        {
          if (*(_BYTE *)(v12 + 33))
          {
            WTF::StringImpl::createWithoutCopyingNonEmpty();
            v16 = v49[0];
            v24 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                         + 144))(*(_QWORD *)(v12 + 40));
            if (v24
              && (v26 = WebCore::InspectorInstrumentation::instrumentingAgents(v24, v25)) != 0
              && (v27 = *(WebCore::InspectorCanvasAgent **)(v26 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v27, (WebCore::CanvasRenderingContext *)(v12 + 8), v16, (uint64_t)v50);
            }
            else
            {
              LOBYTE(v50[0]) = 0;
              v51 = 0;
            }
            v17 = v48[0];
            v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                         + 144))(*(_QWORD *)(v12 + 40));
            if (v28
              && (v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29)) != 0
              && (v31 = *(WebCore::InspectorCanvasAgent **)(v30 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v31, (WebCore::CanvasRenderingContext *)(v12 + 8), v17, (uint64_t)&v52);
            }
            else
            {
              LOBYTE(v52) = 0;
              v53 = 0;
            }
            v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                         + 144))(*(_QWORD *)(v12 + 40));
            if (v32
              && (v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33)) != 0
              && (v35 = *(WebCore::InspectorCanvasAgent **)(v34 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v35, (WebCore::CanvasRenderingContext *)(v12 + 8), v15, (uint64_t)&v54);
            }
            else
            {
              LOBYTE(v54) = 0;
              v55 = 0;
            }
            v46[0] = v50;
            v46[1] = 3;
            v36 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                         + 144))(*(_QWORD *)(v12 + 40));
            if (v36)
            {
              v38 = WebCore::InspectorInstrumentation::instrumentingAgents(v36, v37);
              if (v38)
              {
                v39 = *(_QWORD *)(v38 + 96);
                if (v39)
                  WebCore::InspectorCanvasAgent::recordAction(v39, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v47, v46);
              }
            }
            if (v55)
            {
              v40 = v54;
              v54 = 0;
              if (v40)
              {
                if (*v40 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v40;
              }
            }
            if (v53)
            {
              v41 = v52;
              v52 = 0;
              if (v41)
              {
                if (*v41 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v41;
              }
            }
            if (v51)
            {
              v42 = (_DWORD *)v50[0];
              v50[0] = 0;
              if (v42)
              {
                if (*v42 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v42;
              }
            }
            v43 = v47;
            v47 = 0;
            if (v43)
            {
              if (*(_DWORD *)v43 == 2)
                WTF::StringImpl::destroy(v43, v37);
              else
                *(_DWORD *)v43 -= 2;
            }
          }
          else
          {
            v16 = v49[0];
            v17 = v48[0];
          }
          WebCore::WebGLRenderingContextBase::texParameter((WTF::StringImpl *)v12, v16, v17, 0.0, v15, 0);
          return 10;
        }
      }
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_uniform1f(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  unint64_t v25;
  double v26;
  float v27;
  uint64_t v28;
  JSValue v31;
  int v32;
  WebCore::InspectorInstrumentation *v33;
  WebCore::ScriptExecutionContext *v34;
  uint64_t v35;
  uint64_t v36;
  WebCore::InspectorInstrumentation *v37;
  WebCore::ScriptExecutionContext *v38;
  uint64_t v39;
  WebCore::InspectorCanvasAgent *v40;
  WebCore::InspectorInstrumentation *v41;
  WebCore::ScriptExecutionContext *v42;
  uint64_t v43;
  uint64_t v44;
  _DWORD *v45;
  _DWORD *v46;
  WTF::StringImpl *v47;
  double v48;
  JSC::VM *v49;
  _QWORD v50[2];
  WTF::StringImpl *v51;
  _QWORD v52[2];
  char v53;
  _DWORD *v54;
  char v55;
  uint64_t v56;

  v56 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v49 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v49, "WebGLRenderingContext", "uniform1f");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v49, "WebGLRenderingContext", "uniform1f");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v31.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v31);
  }
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v18 = 0;
  }
  else
  {
    v52[0] = v9;
    if ((v17 & 0xFFFE000000000002) != 0)
      goto LABEL_26;
    v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v21 = (char **)(16 * v19);
    if ((_DWORD)v19)
      v22 = v21 == &WebCore::JSWebGLUniformLocation::s_info;
    else
      v22 = 1;
    if (!v22)
    {
      do
      {
        v21 = (char **)v21[2];
        v20 = v21 != 0;
      }
      while (v21 != &WebCore::JSWebGLUniformLocation::s_info && v21 != 0);
    }
    if (!v20 || (v18 = *(_QWORD *)(v17 + 24)) == 0)
    {
LABEL_26:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v52, 0, "location", 9, "WebGLRenderingContext", 22, a8, "uniform1f", 10, "WebGLUniformLocation", 21);
      return 0;
    }
  }
  v25 = *((_QWORD *)a2 + 7);
  v52[0] = v25;
  if (v25 >= 0xFFFE000000000000)
  {
    v26 = (double)(int)v25;
  }
  else if (v25 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v52, this);
    v26 = v48;
  }
  else
  {
    *(_QWORD *)&v26 = v25 - 0x2000000000000;
  }
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    return 0;
  if (v26 < -3.40282347e38)
  {
    *(float *)&v32 = -INFINITY;
LABEL_56:
    v27 = *(float *)&v32;
    goto LABEL_35;
  }
  if (v26 > 3.40282347e38)
  {
    *(float *)&v32 = INFINITY;
    goto LABEL_56;
  }
  v27 = v26;
LABEL_35:
  if (*(_BYTE *)(v16 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v33 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
    if (v33
      && (v35 = WebCore::InspectorInstrumentation::instrumentingAgents(v33, v34)) != 0
      && (v36 = *(_QWORD *)(v35 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v36, (WTF::StringImpl *)(v16 + 8), v18, (uint64_t)v52);
    }
    else
    {
      LOBYTE(v52[0]) = 0;
      v53 = 0;
    }
    v37 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
    if (v37
      && (v39 = WebCore::InspectorInstrumentation::instrumentingAgents(v37, v38)) != 0
      && (v40 = *(WebCore::InspectorCanvasAgent **)(v39 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v40, (WebCore::CanvasRenderingContext *)(v16 + 8), v27, (uint64_t)&v54);
    }
    else
    {
      LOBYTE(v54) = 0;
      v55 = 0;
    }
    v50[0] = v52;
    v50[1] = 2;
    v41 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
    if (v41)
    {
      v43 = WebCore::InspectorInstrumentation::instrumentingAgents(v41, v42);
      if (v43)
      {
        v44 = *(_QWORD *)(v43 + 96);
        if (v44)
          WebCore::InspectorCanvasAgent::recordAction(v44, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v51, v50);
      }
    }
    if (v55)
    {
      v45 = v54;
      v54 = 0;
      if (v45)
      {
        if (*v45 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v45;
      }
    }
    if (v53)
    {
      v46 = (_DWORD *)v52[0];
      v52[0] = 0;
      if (v46)
      {
        if (*v46 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v46;
      }
    }
    v47 = v51;
    v51 = 0;
    if (v47)
    {
      if (*(_DWORD *)v47 == 2)
        WTF::StringImpl::destroy(v47, v42);
      else
        *(_DWORD *)v47 -= 2;
    }
  }
  v24 = 10;
  if (v18 && !*(_BYTE *)(v16 + 364))
  {
    v28 = *(_QWORD *)(v18 + 8);
    if (*(_DWORD *)(v28 + 60) != *(_DWORD *)(v18 + 20))
      v28 = 0;
    if (*(_QWORD *)(v16 + 168) == v28)
    {
      (*(void (**)(_QWORD, _QWORD, JSC::CallFrame *, float))(**(_QWORD **)(v16 + 88) + 832))(*(_QWORD *)(v16 + 88), *(unsigned int *)(v18 + 16), a3, v27);
      return 10;
    }
    else
    {
      v24 = 10;
      WebCore::WebGLRenderingContextBase::synthesizeGLError((WTF::StringImpl *)v16, 1282, (uint64_t)"uniform1f", 10, (uint64_t)"location not for current program", 33);
    }
  }
  return v24;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_uniform2f(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BOOL4 v21;
  char **v22;
  BOOL v23;
  uint64_t v25;
  unint64_t v26;
  double v27;
  float v28;
  unint64_t v29;
  JSC::VM *v30;
  double v31;
  float v32;
  uint64_t v33;
  JSValue v36;
  int v37;
  int v38;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  uint64_t v42;
  WebCore::InspectorInstrumentation *v43;
  WebCore::ScriptExecutionContext *v44;
  uint64_t v45;
  WebCore::InspectorCanvasAgent *v46;
  WebCore::InspectorInstrumentation *v47;
  WebCore::ScriptExecutionContext *v48;
  uint64_t v49;
  WebCore::InspectorCanvasAgent *v50;
  WebCore::InspectorInstrumentation *v51;
  WebCore::ScriptExecutionContext *v52;
  uint64_t v53;
  uint64_t v54;
  _DWORD *v55;
  _DWORD *v56;
  _DWORD *v57;
  WTF::StringImpl *v58;
  double v59;
  double v60;
  JSC::VM *v61;
  _QWORD v62[2];
  WTF::StringImpl *v63;
  _QWORD v64[2];
  char v65;
  _DWORD *v66;
  char v67;
  _DWORD *v68;
  char v69;
  uint64_t v70;

  v70 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v61 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v61, "WebGLRenderingContext", "uniform2f");
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSWebGLRenderingContext::s_info && v14 != 0);
  }
  if (!v13)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v61, "WebGLRenderingContext", "uniform2f");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v36.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v36);
  }
  v17 = *(_QWORD *)(v10 + 24);
  v18 = *((_QWORD *)a2 + 6);
  if ((v18 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v19 = 0;
  }
  else
  {
    v64[0] = v9;
    if ((v18 & 0xFFFE000000000002) != 0)
      goto LABEL_26;
    v20 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
    v21 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
    v22 = (char **)(16 * v20);
    if ((_DWORD)v20)
      v23 = v22 == &WebCore::JSWebGLUniformLocation::s_info;
    else
      v23 = 1;
    if (!v23)
    {
      do
      {
        v22 = (char **)v22[2];
        v21 = v22 != 0;
      }
      while (v22 != &WebCore::JSWebGLUniformLocation::s_info && v22 != 0);
    }
    if (!v21 || (v19 = *(_QWORD *)(v18 + 24)) == 0)
    {
LABEL_26:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v64, 0, "location", 9, "WebGLRenderingContext", 22, a8, "uniform2f", 10, "WebGLUniformLocation", 21);
      return 0;
    }
  }
  v26 = *((_QWORD *)a2 + 7);
  v64[0] = v26;
  if (v26 >= 0xFFFE000000000000)
  {
    v27 = (double)(int)v26;
  }
  else if (v26 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v64, this);
    v27 = v59;
  }
  else
  {
    *(_QWORD *)&v27 = v26 - 0x2000000000000;
  }
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    return 0;
  if (v27 < -3.40282347e38)
  {
    *(float *)&v37 = -INFINITY;
  }
  else
  {
    if (v27 <= 3.40282347e38)
    {
      v28 = v27;
      goto LABEL_35;
    }
    *(float *)&v37 = INFINITY;
  }
  v28 = *(float *)&v37;
LABEL_35:
  v29 = *((_QWORD *)a2 + 8);
  v64[0] = v29;
  v30 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v29 >= 0xFFFE000000000000)
  {
    v31 = (double)(int)v29;
  }
  else if (v29 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v64, this);
    v31 = v60;
  }
  else
  {
    *(_QWORD *)&v31 = v29 - 0x2000000000000;
  }
  if (*((_DWORD *)v30 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v30) & 1) != 0)
    return 0;
  if (v31 < -3.40282347e38)
  {
    *(float *)&v38 = -INFINITY;
LABEL_69:
    v32 = *(float *)&v38;
    goto LABEL_42;
  }
  if (v31 > 3.40282347e38)
  {
    *(float *)&v38 = INFINITY;
    goto LABEL_69;
  }
  v32 = v31;
LABEL_42:
  if (*(_BYTE *)(v17 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v39
      && (v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40)) != 0
      && (v42 = *(_QWORD *)(v41 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v42, (WTF::StringImpl *)(v17 + 8), v19, (uint64_t)v64);
    }
    else
    {
      LOBYTE(v64[0]) = 0;
      v65 = 0;
    }
    v43 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v43
      && (v45 = WebCore::InspectorInstrumentation::instrumentingAgents(v43, v44)) != 0
      && (v46 = *(WebCore::InspectorCanvasAgent **)(v45 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v46, (WebCore::CanvasRenderingContext *)(v17 + 8), v28, (uint64_t)&v66);
    }
    else
    {
      LOBYTE(v66) = 0;
      v67 = 0;
    }
    v47 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v47
      && (v49 = WebCore::InspectorInstrumentation::instrumentingAgents(v47, v48)) != 0
      && (v50 = *(WebCore::InspectorCanvasAgent **)(v49 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v50, (WebCore::CanvasRenderingContext *)(v17 + 8), v32, (uint64_t)&v68);
    }
    else
    {
      LOBYTE(v68) = 0;
      v69 = 0;
    }
    v62[0] = v64;
    v62[1] = 3;
    v51 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v51)
    {
      v53 = WebCore::InspectorInstrumentation::instrumentingAgents(v51, v52);
      if (v53)
      {
        v54 = *(_QWORD *)(v53 + 96);
        if (v54)
          WebCore::InspectorCanvasAgent::recordAction(v54, (WebCore::CanvasRenderingContext *)(v17 + 8), (const WTF::StringImpl *)&v63, v62);
      }
    }
    if (v69)
    {
      v55 = v68;
      v68 = 0;
      if (v55)
      {
        if (*v55 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v55;
      }
    }
    if (v67)
    {
      v56 = v66;
      v66 = 0;
      if (v56)
      {
        if (*v56 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v56;
      }
    }
    if (v65)
    {
      v57 = (_DWORD *)v64[0];
      v64[0] = 0;
      if (v57)
      {
        if (*v57 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v57;
      }
    }
    v58 = v63;
    v63 = 0;
    if (v58)
    {
      if (*(_DWORD *)v58 == 2)
        WTF::StringImpl::destroy(v58, v52);
      else
        *(_DWORD *)v58 -= 2;
    }
  }
  v25 = 10;
  if (v19 && !*(_BYTE *)(v17 + 364))
  {
    v33 = *(_QWORD *)(v19 + 8);
    if (*(_DWORD *)(v33 + 60) != *(_DWORD *)(v19 + 20))
      v33 = 0;
    if (*(_QWORD *)(v17 + 168) == v33)
    {
      (*(void (**)(_QWORD, _QWORD, JSC::CallFrame *, float, float))(**(_QWORD **)(v17 + 88) + 864))(*(_QWORD *)(v17 + 88), *(unsigned int *)(v19 + 16), a3, v28, v32);
      return 10;
    }
    else
    {
      v25 = 10;
      WebCore::WebGLRenderingContextBase::synthesizeGLError((WTF::StringImpl *)v17, 1282, (uint64_t)"uniform2f", 10, (uint64_t)"location not for current program", 33);
    }
  }
  return v25;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_uniform3f(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BOOL4 v21;
  char **v22;
  BOOL v23;
  uint64_t v25;
  unint64_t v26;
  double v27;
  float v28;
  unint64_t v29;
  JSC::VM *v30;
  double v31;
  float v32;
  unint64_t v33;
  JSC::VM *v34;
  double v35;
  float v36;
  uint64_t v37;
  JSValue v40;
  int v41;
  int v42;
  int v43;
  WebCore::InspectorInstrumentation *v44;
  WebCore::ScriptExecutionContext *v45;
  uint64_t v46;
  uint64_t v47;
  WebCore::InspectorInstrumentation *v48;
  WebCore::ScriptExecutionContext *v49;
  uint64_t v50;
  WebCore::InspectorCanvasAgent *v51;
  WebCore::InspectorInstrumentation *v52;
  WebCore::ScriptExecutionContext *v53;
  uint64_t v54;
  WebCore::InspectorCanvasAgent *v55;
  WebCore::InspectorInstrumentation *v56;
  WebCore::ScriptExecutionContext *v57;
  uint64_t v58;
  WebCore::InspectorCanvasAgent *v59;
  WebCore::InspectorInstrumentation *v60;
  WebCore::ScriptExecutionContext *v61;
  uint64_t v62;
  uint64_t v63;
  _DWORD *v64;
  _DWORD *v65;
  _DWORD *v66;
  _DWORD *v67;
  WTF::StringImpl *v68;
  double v69;
  double v70;
  double v71;
  JSC::VM *v72;
  _QWORD v73[2];
  WTF::StringImpl *v74;
  _QWORD v75[2];
  char v76;
  _DWORD *v77;
  char v78;
  _DWORD *v79;
  char v80;
  _DWORD *v81;
  char v82;
  uint64_t v83;

  v83 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v72 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v72, "WebGLRenderingContext", "uniform3f");
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSWebGLRenderingContext::s_info && v14 != 0);
  }
  if (!v13)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v72, "WebGLRenderingContext", "uniform3f");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v40.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v40);
  }
  v17 = *(_QWORD *)(v10 + 24);
  v18 = *((_QWORD *)a2 + 6);
  if ((v18 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v19 = 0;
  }
  else
  {
    v75[0] = v9;
    if ((v18 & 0xFFFE000000000002) != 0)
      goto LABEL_26;
    v20 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
    v21 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
    v22 = (char **)(16 * v20);
    if ((_DWORD)v20)
      v23 = v22 == &WebCore::JSWebGLUniformLocation::s_info;
    else
      v23 = 1;
    if (!v23)
    {
      do
      {
        v22 = (char **)v22[2];
        v21 = v22 != 0;
      }
      while (v22 != &WebCore::JSWebGLUniformLocation::s_info && v22 != 0);
    }
    if (!v21 || (v19 = *(_QWORD *)(v18 + 24)) == 0)
    {
LABEL_26:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v75, 0, "location", 9, "WebGLRenderingContext", 22, a8, "uniform3f", 10, "WebGLUniformLocation", 21);
      return 0;
    }
  }
  v26 = *((_QWORD *)a2 + 7);
  v75[0] = v26;
  if (v26 >= 0xFFFE000000000000)
  {
    v27 = (double)(int)v26;
  }
  else if (v26 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v75, this);
    v27 = v69;
  }
  else
  {
    *(_QWORD *)&v27 = v26 - 0x2000000000000;
  }
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    return 0;
  if (v27 < -3.40282347e38)
  {
    *(float *)&v41 = -INFINITY;
  }
  else
  {
    if (v27 <= 3.40282347e38)
    {
      v28 = v27;
      goto LABEL_35;
    }
    *(float *)&v41 = INFINITY;
  }
  v28 = *(float *)&v41;
LABEL_35:
  v29 = *((_QWORD *)a2 + 8);
  v75[0] = v29;
  v30 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v29 >= 0xFFFE000000000000)
  {
    v31 = (double)(int)v29;
  }
  else if (v29 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v75, this);
    v31 = v70;
  }
  else
  {
    *(_QWORD *)&v31 = v29 - 0x2000000000000;
  }
  if (*((_DWORD *)v30 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v30) & 1) != 0)
    return 0;
  if (v31 < -3.40282347e38)
  {
    *(float *)&v42 = -INFINITY;
  }
  else
  {
    if (v31 <= 3.40282347e38)
    {
      v32 = v31;
      goto LABEL_42;
    }
    *(float *)&v42 = INFINITY;
  }
  v32 = *(float *)&v42;
LABEL_42:
  v33 = *((_QWORD *)a2 + 9);
  v75[0] = v33;
  v34 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v33 >= 0xFFFE000000000000)
  {
    v35 = (double)(int)v33;
  }
  else if (v33 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v75, this);
    v35 = v71;
  }
  else
  {
    *(_QWORD *)&v35 = v33 - 0x2000000000000;
  }
  if (*((_DWORD *)v34 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v34) & 1) != 0)
    return 0;
  if (v35 < -3.40282347e38)
  {
    *(float *)&v43 = -INFINITY;
LABEL_82:
    v36 = *(float *)&v43;
    goto LABEL_49;
  }
  if (v35 > 3.40282347e38)
  {
    *(float *)&v43 = INFINITY;
    goto LABEL_82;
  }
  v36 = v35;
LABEL_49:
  if (*(_BYTE *)(v17 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v44
      && (v46 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, v45)) != 0
      && (v47 = *(_QWORD *)(v46 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v47, (WTF::StringImpl *)(v17 + 8), v19, (uint64_t)v75);
    }
    else
    {
      LOBYTE(v75[0]) = 0;
      v76 = 0;
    }
    v48 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v48
      && (v50 = WebCore::InspectorInstrumentation::instrumentingAgents(v48, v49)) != 0
      && (v51 = *(WebCore::InspectorCanvasAgent **)(v50 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v51, (WebCore::CanvasRenderingContext *)(v17 + 8), v28, (uint64_t)&v77);
    }
    else
    {
      LOBYTE(v77) = 0;
      v78 = 0;
    }
    v52 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v52
      && (v54 = WebCore::InspectorInstrumentation::instrumentingAgents(v52, v53)) != 0
      && (v55 = *(WebCore::InspectorCanvasAgent **)(v54 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v55, (WebCore::CanvasRenderingContext *)(v17 + 8), v32, (uint64_t)&v79);
    }
    else
    {
      LOBYTE(v79) = 0;
      v80 = 0;
    }
    v56 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v56
      && (v58 = WebCore::InspectorInstrumentation::instrumentingAgents(v56, v57)) != 0
      && (v59 = *(WebCore::InspectorCanvasAgent **)(v58 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v59, (WebCore::CanvasRenderingContext *)(v17 + 8), v36, (uint64_t)&v81);
    }
    else
    {
      LOBYTE(v81) = 0;
      v82 = 0;
    }
    v73[0] = v75;
    v73[1] = 4;
    v60 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v60)
    {
      v62 = WebCore::InspectorInstrumentation::instrumentingAgents(v60, v61);
      if (v62)
      {
        v63 = *(_QWORD *)(v62 + 96);
        if (v63)
          WebCore::InspectorCanvasAgent::recordAction(v63, (WebCore::CanvasRenderingContext *)(v17 + 8), (const WTF::StringImpl *)&v74, v73);
      }
    }
    if (v82)
    {
      v64 = v81;
      v81 = 0;
      if (v64)
      {
        if (*v64 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v64;
      }
    }
    if (v80)
    {
      v65 = v79;
      v79 = 0;
      if (v65)
      {
        if (*v65 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v65;
      }
    }
    if (v78)
    {
      v66 = v77;
      v77 = 0;
      if (v66)
      {
        if (*v66 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v66;
      }
    }
    if (v76)
    {
      v67 = (_DWORD *)v75[0];
      v75[0] = 0;
      if (v67)
      {
        if (*v67 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v67;
      }
    }
    v68 = v74;
    v74 = 0;
    if (v68)
    {
      if (*(_DWORD *)v68 == 2)
        WTF::StringImpl::destroy(v68, v61);
      else
        *(_DWORD *)v68 -= 2;
    }
  }
  v25 = 10;
  if (v19 && !*(_BYTE *)(v17 + 364))
  {
    v37 = *(_QWORD *)(v19 + 8);
    if (*(_DWORD *)(v37 + 60) != *(_DWORD *)(v19 + 20))
      v37 = 0;
    if (*(_QWORD *)(v17 + 168) == v37)
    {
      (*(void (**)(_QWORD, _QWORD, JSC::CallFrame *, float, float, float))(**(_QWORD **)(v17 + 88) + 896))(*(_QWORD *)(v17 + 88), *(unsigned int *)(v19 + 16), a3, v28, v32, v36);
      return 10;
    }
    else
    {
      v25 = 10;
      WebCore::WebGLRenderingContextBase::synthesizeGLError((WTF::StringImpl *)v17, 1282, (uint64_t)"uniform3f", 10, (uint64_t)"location not for current program", 33);
    }
  }
  return v25;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_uniform4f(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BOOL4 v21;
  char **v22;
  BOOL v23;
  uint64_t v25;
  unint64_t v26;
  double v27;
  float v28;
  unint64_t v29;
  JSC::VM *v30;
  double v31;
  float v32;
  unint64_t v33;
  JSC::VM *v34;
  double v35;
  float v36;
  unint64_t v37;
  JSC::VM *v38;
  double v39;
  float v40;
  uint64_t v41;
  JSValue v44;
  int v45;
  int v46;
  int v47;
  int v48;
  WebCore::InspectorInstrumentation *v49;
  WebCore::ScriptExecutionContext *v50;
  uint64_t v51;
  uint64_t v52;
  WebCore::InspectorInstrumentation *v53;
  WebCore::ScriptExecutionContext *v54;
  uint64_t v55;
  WebCore::InspectorCanvasAgent *v56;
  WebCore::InspectorInstrumentation *v57;
  WebCore::ScriptExecutionContext *v58;
  uint64_t v59;
  WebCore::InspectorCanvasAgent *v60;
  WebCore::InspectorInstrumentation *v61;
  WebCore::ScriptExecutionContext *v62;
  uint64_t v63;
  WebCore::InspectorCanvasAgent *v64;
  WebCore::InspectorInstrumentation *v65;
  WebCore::ScriptExecutionContext *v66;
  uint64_t v67;
  WebCore::InspectorCanvasAgent *v68;
  WebCore::InspectorInstrumentation *v69;
  WebCore::ScriptExecutionContext *v70;
  uint64_t v71;
  uint64_t v72;
  _DWORD *v73;
  _DWORD *v74;
  _DWORD *v75;
  _DWORD *v76;
  _DWORD *v77;
  WTF::StringImpl *v78;
  double v79;
  double v80;
  double v81;
  double v82;
  JSC::VM *v83;
  _QWORD v84[2];
  WTF::StringImpl *v85;
  _QWORD v86[2];
  char v87;
  _DWORD *v88;
  char v89;
  _DWORD *v90;
  char v91;
  _DWORD *v92;
  char v93;
  _DWORD *v94;
  char v95;
  uint64_t v96;

  v96 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v83 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v83, "WebGLRenderingContext", "uniform4f");
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSWebGLRenderingContext::s_info && v14 != 0);
  }
  if (!v13)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v83, "WebGLRenderingContext", "uniform4f");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 4)
  {
    v44.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v44);
  }
  v17 = *(_QWORD *)(v10 + 24);
  v18 = *((_QWORD *)a2 + 6);
  if ((v18 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v19 = 0;
  }
  else
  {
    v86[0] = v9;
    if ((v18 & 0xFFFE000000000002) != 0)
      goto LABEL_26;
    v20 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
    v21 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
    v22 = (char **)(16 * v20);
    if ((_DWORD)v20)
      v23 = v22 == &WebCore::JSWebGLUniformLocation::s_info;
    else
      v23 = 1;
    if (!v23)
    {
      do
      {
        v22 = (char **)v22[2];
        v21 = v22 != 0;
      }
      while (v22 != &WebCore::JSWebGLUniformLocation::s_info && v22 != 0);
    }
    if (!v21 || (v19 = *(_QWORD *)(v18 + 24)) == 0)
    {
LABEL_26:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v86, 0, "location", 9, "WebGLRenderingContext", 22, a8, "uniform4f", 10, "WebGLUniformLocation", 21);
      return 0;
    }
  }
  v26 = *((_QWORD *)a2 + 7);
  v86[0] = v26;
  if (v26 >= 0xFFFE000000000000)
  {
    v27 = (double)(int)v26;
  }
  else if (v26 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v86, this);
    v27 = v79;
  }
  else
  {
    *(_QWORD *)&v27 = v26 - 0x2000000000000;
  }
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    return 0;
  if (v27 < -3.40282347e38)
  {
    *(float *)&v45 = -INFINITY;
  }
  else
  {
    if (v27 <= 3.40282347e38)
    {
      v28 = v27;
      goto LABEL_35;
    }
    *(float *)&v45 = INFINITY;
  }
  v28 = *(float *)&v45;
LABEL_35:
  v29 = *((_QWORD *)a2 + 8);
  v86[0] = v29;
  v30 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v29 >= 0xFFFE000000000000)
  {
    v31 = (double)(int)v29;
  }
  else if (v29 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v86, this);
    v31 = v80;
  }
  else
  {
    *(_QWORD *)&v31 = v29 - 0x2000000000000;
  }
  if (*((_DWORD *)v30 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v30) & 1) != 0)
    return 0;
  if (v31 < -3.40282347e38)
  {
    *(float *)&v46 = -INFINITY;
  }
  else
  {
    if (v31 <= 3.40282347e38)
    {
      v32 = v31;
      goto LABEL_42;
    }
    *(float *)&v46 = INFINITY;
  }
  v32 = *(float *)&v46;
LABEL_42:
  v33 = *((_QWORD *)a2 + 9);
  v86[0] = v33;
  v34 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v33 >= 0xFFFE000000000000)
  {
    v35 = (double)(int)v33;
  }
  else if (v33 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v86, this);
    v35 = v81;
  }
  else
  {
    *(_QWORD *)&v35 = v33 - 0x2000000000000;
  }
  if (*((_DWORD *)v34 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v34) & 1) != 0)
    return 0;
  if (v35 < -3.40282347e38)
  {
    *(float *)&v47 = -INFINITY;
  }
  else
  {
    if (v35 <= 3.40282347e38)
    {
      v36 = v35;
      goto LABEL_49;
    }
    *(float *)&v47 = INFINITY;
  }
  v36 = *(float *)&v47;
LABEL_49:
  v37 = *((_QWORD *)a2 + 10);
  v86[0] = v37;
  v38 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v37 >= 0xFFFE000000000000)
  {
    v39 = (double)(int)v37;
  }
  else if (v37 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v86, this);
    v39 = v82;
  }
  else
  {
    *(_QWORD *)&v39 = v37 - 0x2000000000000;
  }
  if (*((_DWORD *)v38 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v38) & 1) != 0)
    return 0;
  if (v39 < -3.40282347e38)
  {
    *(float *)&v48 = -INFINITY;
LABEL_95:
    v40 = *(float *)&v48;
    goto LABEL_56;
  }
  if (v39 > 3.40282347e38)
  {
    *(float *)&v48 = INFINITY;
    goto LABEL_95;
  }
  v40 = v39;
LABEL_56:
  if (*(_BYTE *)(v17 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v85 = (WTF::StringImpl *)v86[0];
    v49 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v49
      && (v51 = WebCore::InspectorInstrumentation::instrumentingAgents(v49, v50)) != 0
      && (v52 = *(_QWORD *)(v51 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v52, (WTF::StringImpl *)(v17 + 8), v19, (uint64_t)v86);
    }
    else
    {
      LOBYTE(v86[0]) = 0;
      v87 = 0;
    }
    v53 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v53
      && (v55 = WebCore::InspectorInstrumentation::instrumentingAgents(v53, v54)) != 0
      && (v56 = *(WebCore::InspectorCanvasAgent **)(v55 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v56, (WebCore::CanvasRenderingContext *)(v17 + 8), v28, (uint64_t)&v88);
    }
    else
    {
      LOBYTE(v88) = 0;
      v89 = 0;
    }
    v57 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v57
      && (v59 = WebCore::InspectorInstrumentation::instrumentingAgents(v57, v58)) != 0
      && (v60 = *(WebCore::InspectorCanvasAgent **)(v59 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v60, (WebCore::CanvasRenderingContext *)(v17 + 8), v32, (uint64_t)&v90);
    }
    else
    {
      LOBYTE(v90) = 0;
      v91 = 0;
    }
    v61 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v61
      && (v63 = WebCore::InspectorInstrumentation::instrumentingAgents(v61, v62)) != 0
      && (v64 = *(WebCore::InspectorCanvasAgent **)(v63 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v64, (WebCore::CanvasRenderingContext *)(v17 + 8), v36, (uint64_t)&v92);
    }
    else
    {
      LOBYTE(v92) = 0;
      v93 = 0;
    }
    v65 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v65
      && (v67 = WebCore::InspectorInstrumentation::instrumentingAgents(v65, v66)) != 0
      && (v68 = *(WebCore::InspectorCanvasAgent **)(v67 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v68, (WebCore::CanvasRenderingContext *)(v17 + 8), v40, (uint64_t)&v94);
    }
    else
    {
      LOBYTE(v94) = 0;
      v95 = 0;
    }
    v84[0] = v86;
    v84[1] = 5;
    v69 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v69)
    {
      v71 = WebCore::InspectorInstrumentation::instrumentingAgents(v69, v70);
      if (v71)
      {
        v72 = *(_QWORD *)(v71 + 96);
        if (v72)
          WebCore::InspectorCanvasAgent::recordAction(v72, (WebCore::CanvasRenderingContext *)(v17 + 8), (const WTF::StringImpl *)&v85, v84);
      }
    }
    if (v95)
    {
      v73 = v94;
      v94 = 0;
      if (v73)
      {
        if (*v73 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v73;
      }
    }
    if (v93)
    {
      v74 = v92;
      v92 = 0;
      if (v74)
      {
        if (*v74 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v74;
      }
    }
    if (v91)
    {
      v75 = v90;
      v90 = 0;
      if (v75)
      {
        if (*v75 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v75;
      }
    }
    if (v89)
    {
      v76 = v88;
      v88 = 0;
      if (v76)
      {
        if (*v76 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v76;
      }
    }
    if (v87)
    {
      v77 = (_DWORD *)v86[0];
      v86[0] = 0;
      if (v77)
      {
        if (*v77 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v77;
      }
    }
    v78 = v85;
    v85 = 0;
    if (v78)
    {
      if (*(_DWORD *)v78 == 2)
        WTF::StringImpl::destroy(v78, v70);
      else
        *(_DWORD *)v78 -= 2;
    }
  }
  v25 = 10;
  if (v19 && !*(_BYTE *)(v17 + 364))
  {
    v41 = *(_QWORD *)(v19 + 8);
    if (*(_DWORD *)(v41 + 60) != *(_DWORD *)(v19 + 20))
      v41 = 0;
    if (*(_QWORD *)(v17 + 168) == v41)
    {
      (*(void (**)(_QWORD, _QWORD, JSC::CallFrame *, float, float, float, float))(**(_QWORD **)(v17 + 88)
                                                                                           + 928))(*(_QWORD *)(v17 + 88), *(unsigned int *)(v19 + 16), a3, v28, v32, v36, v40);
      return 10;
    }
    else
    {
      v25 = 10;
      WebCore::WebGLRenderingContextBase::synthesizeGLError((WTF::StringImpl *)v17, 1282, (uint64_t)"uniform4f", 10, (uint64_t)"location not for current program", 33);
    }
  }
  return v25;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_uniform1i(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unsigned int v32;
  JSValue v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  uint64_t v38;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  WebCore::InspectorCanvasAgent *v42;
  WebCore::InspectorInstrumentation *v43;
  WebCore::ScriptExecutionContext *v44;
  uint64_t v45;
  uint64_t v46;
  _DWORD *v47;
  _DWORD *v48;
  WTF::StringImpl *v49;
  unint64_t v50;
  JSC::VM *v51;
  _QWORD v52[2];
  WTF::StringImpl *v53;
  _QWORD v54[2];
  char v55;
  _DWORD *v56;
  char v57;
  uint64_t v58;

  v58 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v51 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v51, "WebGLRenderingContext", "uniform1i");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v51, "WebGLRenderingContext", "uniform1i");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v34.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v34);
  }
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v18 = 0;
  }
  else
  {
    v54[0] = v9;
    if ((v17 & 0xFFFE000000000002) != 0)
      goto LABEL_26;
    v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v21 = (char **)(16 * v19);
    if ((_DWORD)v19)
      v22 = v21 == &WebCore::JSWebGLUniformLocation::s_info;
    else
      v22 = 1;
    if (!v22)
    {
      do
      {
        v21 = (char **)v21[2];
        v20 = v21 != 0;
      }
      while (v21 != &WebCore::JSWebGLUniformLocation::s_info && v21 != 0);
    }
    if (!v20 || (v18 = *(_QWORD *)(v17 + 24)) == 0)
    {
LABEL_26:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v54, 0, "location", 9, "WebGLRenderingContext", 22, a8, "uniform1i", 10, "WebGLUniformLocation", 21);
      return 0;
    }
  }
  v25 = *((_QWORD *)a2 + 7);
  v54[0] = v25;
  if (v25 < 0xFFFE000000000000)
  {
    v29 = v25 - 0x2000000000000;
    if (v25 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v54, this);
      v29 = v50;
    }
    v30 = (v29 >> 52) & 0x7FF;
    if ((v30 - 1023) <= 0x53)
    {
      v31 = v29 >> (51 - (v29 >> 52));
      if (v30 > 0x433)
        LODWORD(v31) = v29 << ((v29 >> 52) - 51);
      if (v30 >= 0x41F)
        v32 = v31;
      else
        v32 = (((1 << ((v29 >> 52) + 1)) - 1) & v31) + (1 << ((v29 >> 52) + 1));
      if ((v29 & 0x8000000000000000) == 0)
        v26 = v32;
      else
        v26 = -v32;
    }
    else
    {
      v26 = 0;
    }
  }
  else
  {
    v26 = v25;
  }
  if (*((_DWORD *)v9 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v9))
    return 0;
  if (*(_BYTE *)(v16 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
    if (v35
      && (v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36)) != 0
      && (v38 = *(_QWORD *)(v37 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v38, (WTF::StringImpl *)(v16 + 8), v18, (uint64_t)v54);
    }
    else
    {
      LOBYTE(v54[0]) = 0;
      v55 = 0;
    }
    v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
    if (v39
      && (v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40)) != 0
      && (v42 = *(WebCore::InspectorCanvasAgent **)(v41 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v42, (WebCore::CanvasRenderingContext *)(v16 + 8), v26, (uint64_t)&v56);
    }
    else
    {
      LOBYTE(v56) = 0;
      v57 = 0;
    }
    v52[0] = v54;
    v52[1] = 2;
    v43 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
    if (v43)
    {
      v45 = WebCore::InspectorInstrumentation::instrumentingAgents(v43, v44);
      if (v45)
      {
        v46 = *(_QWORD *)(v45 + 96);
        if (v46)
          WebCore::InspectorCanvasAgent::recordAction(v46, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v53, v52);
      }
    }
    if (v57)
    {
      v47 = v56;
      v56 = 0;
      if (v47)
      {
        if (*v47 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v47;
      }
    }
    if (v55)
    {
      v48 = (_DWORD *)v54[0];
      v54[0] = 0;
      if (v48)
      {
        if (*v48 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v48;
      }
    }
    v49 = v53;
    v53 = 0;
    if (v49)
    {
      if (*(_DWORD *)v49 == 2)
        WTF::StringImpl::destroy(v49, v44);
      else
        *(_DWORD *)v49 -= 2;
    }
  }
  v24 = 10;
  if (v18 && !*(_BYTE *)(v16 + 364))
  {
    v27 = *(_QWORD *)(v18 + 8);
    if (*(_DWORD *)(v27 + 60) != *(_DWORD *)(v18 + 20))
      v27 = 0;
    if (*(_QWORD *)(v16 + 168) == v27)
    {
      (*(void (**)(_QWORD, _QWORD, unint64_t))(**(_QWORD **)(v16 + 88) + 848))(*(_QWORD *)(v16 + 88), *(unsigned int *)(v18 + 16), v26);
      return 10;
    }
    else
    {
      v24 = 10;
      WebCore::WebGLRenderingContextBase::synthesizeGLError((WTF::StringImpl *)v16, 1282, (uint64_t)"uniform1i", 10, (uint64_t)"location not for current program", 33);
    }
  }
  return v24;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_uniform2i(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BOOL4 v21;
  char **v22;
  BOOL v23;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  JSC::VM *v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unsigned int v37;
  unint64_t v38;
  unsigned int v39;
  unsigned int v40;
  unint64_t v41;
  unsigned int v42;
  JSValue v44;
  WebCore::InspectorInstrumentation *v45;
  WebCore::ScriptExecutionContext *v46;
  uint64_t v47;
  uint64_t v48;
  WebCore::InspectorInstrumentation *v49;
  WebCore::ScriptExecutionContext *v50;
  uint64_t v51;
  WebCore::InspectorCanvasAgent *v52;
  WebCore::InspectorInstrumentation *v53;
  WebCore::ScriptExecutionContext *v54;
  uint64_t v55;
  WebCore::InspectorCanvasAgent *v56;
  WebCore::InspectorInstrumentation *v57;
  WebCore::ScriptExecutionContext *v58;
  uint64_t v59;
  uint64_t v60;
  _DWORD *v61;
  _DWORD *v62;
  _DWORD *v63;
  WTF::StringImpl *v64;
  unint64_t v65;
  unint64_t v66;
  JSC::VM *v67;
  _QWORD v68[2];
  WTF::StringImpl *v69;
  _QWORD v70[2];
  char v71;
  _DWORD *v72;
  char v73;
  _DWORD *v74;
  char v75;
  uint64_t v76;

  v76 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v67 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v67, "WebGLRenderingContext", "uniform2i");
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSWebGLRenderingContext::s_info && v14 != 0);
  }
  if (!v13)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v67, "WebGLRenderingContext", "uniform2i");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v44.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v44);
  }
  v17 = *(_QWORD *)(v10 + 24);
  v18 = *((_QWORD *)a2 + 6);
  if ((v18 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v19 = 0;
  }
  else
  {
    v70[0] = v9;
    if ((v18 & 0xFFFE000000000002) != 0)
      goto LABEL_26;
    v20 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
    v21 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
    v22 = (char **)(16 * v20);
    if ((_DWORD)v20)
      v23 = v22 == &WebCore::JSWebGLUniformLocation::s_info;
    else
      v23 = 1;
    if (!v23)
    {
      do
      {
        v22 = (char **)v22[2];
        v21 = v22 != 0;
      }
      while (v22 != &WebCore::JSWebGLUniformLocation::s_info && v22 != 0);
    }
    if (!v21 || (v19 = *(_QWORD *)(v18 + 24)) == 0)
    {
LABEL_26:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v70, 0, "location", 9, "WebGLRenderingContext", 22, a8, "uniform2i", 10, "WebGLUniformLocation", 21);
      return 0;
    }
  }
  v26 = *((_QWORD *)a2 + 7);
  v70[0] = v26;
  if (v26 < 0xFFFE000000000000)
  {
    v33 = v26 - 0x2000000000000;
    if (v26 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v70, this);
      v33 = v65;
    }
    v34 = (v33 >> 52) & 0x7FF;
    if ((v34 - 1023) <= 0x53)
    {
      v41 = v33 >> (51 - (v33 >> 52));
      if (v34 > 0x433)
        LODWORD(v41) = v33 << ((v33 >> 52) - 51);
      if (v34 >= 0x41F)
        v42 = v41;
      else
        v42 = (((1 << ((v33 >> 52) + 1)) - 1) & v41) + (1 << ((v33 >> 52) + 1));
      if ((v33 & 0x8000000000000000) == 0)
        v27 = v42;
      else
        v27 = -v42;
    }
    else
    {
      v27 = 0;
    }
  }
  else
  {
    v27 = v26;
  }
  if (*((_DWORD *)v9 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v9))
    return 0;
  v28 = *((_QWORD *)a2 + 8);
  v70[0] = v28;
  v29 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v28 < 0xFFFE000000000000)
  {
    v35 = v28 - 0x2000000000000;
    if (v28 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v70, this);
      v35 = v66;
    }
    v36 = (v35 >> 52) & 0x7FF;
    v37 = v36 - 1023;
    v38 = v35 >> (51 - (v35 >> 52));
    if (v36 > 0x433)
      LODWORD(v38) = v35 << ((v35 >> 52) - 51);
    if (v36 >= 0x41F)
      v39 = v38;
    else
      v39 = (((1 << ((v35 >> 52) + 1)) - 1) & v38) + (1 << ((v35 >> 52) + 1));
    if ((v35 & 0x8000000000000000) == 0)
      v40 = v39;
    else
      v40 = -v39;
    if (v37 <= 0x53)
      v30 = v40;
    else
      v30 = 0;
  }
  else
  {
    v30 = v28;
  }
  if (*((_DWORD *)v29 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v29))
    return 0;
  if (*(_BYTE *)(v17 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v45 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v45
      && (v47 = WebCore::InspectorInstrumentation::instrumentingAgents(v45, v46)) != 0
      && (v48 = *(_QWORD *)(v47 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v48, (WTF::StringImpl *)(v17 + 8), v19, (uint64_t)v70);
    }
    else
    {
      LOBYTE(v70[0]) = 0;
      v71 = 0;
    }
    v49 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v49
      && (v51 = WebCore::InspectorInstrumentation::instrumentingAgents(v49, v50)) != 0
      && (v52 = *(WebCore::InspectorCanvasAgent **)(v51 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v52, (WebCore::CanvasRenderingContext *)(v17 + 8), v27, (uint64_t)&v72);
    }
    else
    {
      LOBYTE(v72) = 0;
      v73 = 0;
    }
    v53 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v53
      && (v55 = WebCore::InspectorInstrumentation::instrumentingAgents(v53, v54)) != 0
      && (v56 = *(WebCore::InspectorCanvasAgent **)(v55 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v56, (WebCore::CanvasRenderingContext *)(v17 + 8), v30, (uint64_t)&v74);
    }
    else
    {
      LOBYTE(v74) = 0;
      v75 = 0;
    }
    v68[0] = v70;
    v68[1] = 3;
    v57 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v57)
    {
      v59 = WebCore::InspectorInstrumentation::instrumentingAgents(v57, v58);
      if (v59)
      {
        v60 = *(_QWORD *)(v59 + 96);
        if (v60)
          WebCore::InspectorCanvasAgent::recordAction(v60, (WebCore::CanvasRenderingContext *)(v17 + 8), (const WTF::StringImpl *)&v69, v68);
      }
    }
    if (v75)
    {
      v61 = v74;
      v74 = 0;
      if (v61)
      {
        if (*v61 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v61;
      }
    }
    if (v73)
    {
      v62 = v72;
      v72 = 0;
      if (v62)
      {
        if (*v62 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v62;
      }
    }
    if (v71)
    {
      v63 = (_DWORD *)v70[0];
      v70[0] = 0;
      if (v63)
      {
        if (*v63 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v63;
      }
    }
    v64 = v69;
    v69 = 0;
    if (v64)
    {
      if (*(_DWORD *)v64 == 2)
        WTF::StringImpl::destroy(v64, v58);
      else
        *(_DWORD *)v64 -= 2;
    }
  }
  v25 = 10;
  if (v19 && !*(_BYTE *)(v17 + 364))
  {
    v31 = *(_QWORD *)(v19 + 8);
    if (*(_DWORD *)(v31 + 60) != *(_DWORD *)(v19 + 20))
      v31 = 0;
    if (*(_QWORD *)(v17 + 168) == v31)
    {
      (*(void (**)(_QWORD, _QWORD, unint64_t, unint64_t))(**(_QWORD **)(v17 + 88) + 880))(*(_QWORD *)(v17 + 88), *(unsigned int *)(v19 + 16), v27, v30);
      return 10;
    }
    else
    {
      v25 = 10;
      WebCore::WebGLRenderingContextBase::synthesizeGLError((WTF::StringImpl *)v17, 1282, (uint64_t)"uniform2i", 10, (uint64_t)"location not for current program", 33);
    }
  }
  return v25;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_uniform3i(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BOOL4 v21;
  char **v22;
  BOOL v23;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  JSC::VM *v29;
  unint64_t v30;
  unint64_t v31;
  JSC::VM *v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unsigned int v40;
  unint64_t v41;
  unsigned int v42;
  unsigned int v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unsigned int v47;
  unint64_t v48;
  unsigned int v49;
  JSValue v51;
  WebCore::InspectorInstrumentation *v52;
  WebCore::ScriptExecutionContext *v53;
  uint64_t v54;
  uint64_t v55;
  WebCore::InspectorInstrumentation *v56;
  WebCore::ScriptExecutionContext *v57;
  uint64_t v58;
  WebCore::InspectorCanvasAgent *v59;
  WebCore::InspectorInstrumentation *v60;
  WebCore::ScriptExecutionContext *v61;
  uint64_t v62;
  WebCore::InspectorCanvasAgent *v63;
  WebCore::InspectorInstrumentation *v64;
  WebCore::ScriptExecutionContext *v65;
  uint64_t v66;
  WebCore::InspectorCanvasAgent *v67;
  WebCore::InspectorInstrumentation *v68;
  WebCore::ScriptExecutionContext *v69;
  uint64_t v70;
  uint64_t v71;
  _DWORD *v72;
  _DWORD *v73;
  _DWORD *v74;
  _DWORD *v75;
  WTF::StringImpl *v76;
  unint64_t v77;
  JSC::VM *v78;
  unint64_t v79;
  unint64_t v80;
  JSC::VM *v81;
  _QWORD v82[2];
  WTF::StringImpl *v83;
  _QWORD v84[2];
  char v85;
  _DWORD *v86;
  char v87;
  _DWORD *v88;
  char v89;
  _DWORD *v90;
  char v91;
  uint64_t v92;

  v92 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v81 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v81, "WebGLRenderingContext", "uniform3i");
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSWebGLRenderingContext::s_info && v14 != 0);
  }
  if (!v13)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v81, "WebGLRenderingContext", "uniform3i");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v51.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v51);
  }
  v17 = *(_QWORD *)(v10 + 24);
  v18 = *((_QWORD *)a2 + 6);
  if ((v18 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v19 = 0;
  }
  else
  {
    v84[0] = v9;
    if ((v18 & 0xFFFE000000000002) != 0)
      goto LABEL_26;
    v20 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
    v21 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
    v22 = (char **)(16 * v20);
    if ((_DWORD)v20)
      v23 = v22 == &WebCore::JSWebGLUniformLocation::s_info;
    else
      v23 = 1;
    if (!v23)
    {
      do
      {
        v22 = (char **)v22[2];
        v21 = v22 != 0;
      }
      while (v22 != &WebCore::JSWebGLUniformLocation::s_info && v22 != 0);
    }
    if (!v21 || (v19 = *(_QWORD *)(v18 + 24)) == 0)
    {
LABEL_26:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v84, 0, "location", 9, "WebGLRenderingContext", 22, a8, "uniform3i", 10, "WebGLUniformLocation", 21);
      return 0;
    }
  }
  v26 = *((_QWORD *)a2 + 7);
  v84[0] = v26;
  if (v26 < 0xFFFE000000000000)
  {
    v36 = v26 - 0x2000000000000;
    if (v26 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v84, this);
      v36 = v77;
    }
    v37 = (v36 >> 52) & 0x7FF;
    if ((v37 - 1023) <= 0x53)
    {
      v46 = v36 >> (51 - (v36 >> 52));
      if (v37 > 0x433)
        LODWORD(v46) = v36 << ((v36 >> 52) - 51);
      if (v37 >= 0x41F)
        v47 = v46;
      else
        v47 = (((1 << ((v36 >> 52) + 1)) - 1) & v46) + (1 << ((v36 >> 52) + 1));
      if ((v36 & 0x8000000000000000) == 0)
        v27 = v47;
      else
        v27 = -v47;
    }
    else
    {
      v27 = 0;
    }
  }
  else
  {
    v27 = v26;
  }
  if (*((_DWORD *)v9 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v9))
    return 0;
  v28 = *((_QWORD *)a2 + 8);
  v84[0] = v28;
  v29 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v28 < 0xFFFE000000000000)
  {
    v38 = v28 - 0x2000000000000;
    if (v28 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      v78 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v84, this);
      v29 = v78;
      v38 = v79;
    }
    v39 = (v38 >> 52) & 0x7FF;
    v40 = v39 - 1023;
    v41 = v38 >> (51 - (v38 >> 52));
    if (v39 > 0x433)
      LODWORD(v41) = v38 << ((v38 >> 52) - 51);
    if (v39 >= 0x41F)
      v42 = v41;
    else
      v42 = (((1 << ((v38 >> 52) + 1)) - 1) & v41) + (1 << ((v38 >> 52) + 1));
    if ((v38 & 0x8000000000000000) == 0)
      v43 = v42;
    else
      v43 = -v42;
    if (v40 <= 0x53)
      v30 = v43;
    else
      v30 = 0;
  }
  else
  {
    v30 = v28;
  }
  if (*((_DWORD *)v29 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v29))
    return 0;
  v31 = *((_QWORD *)a2 + 9);
  v84[0] = v31;
  v32 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v31 < 0xFFFE000000000000)
  {
    v44 = v31 - 0x2000000000000;
    if (v31 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v84, this);
      v44 = v80;
    }
    v45 = (v44 >> 52) & 0x7FF;
    if ((v45 - 1023) <= 0x53)
    {
      v48 = v44 >> (51 - (v44 >> 52));
      if (v45 > 0x433)
        LODWORD(v48) = v44 << ((v44 >> 52) - 51);
      if (v45 >= 0x41F)
        v49 = v48;
      else
        v49 = (((1 << ((v44 >> 52) + 1)) - 1) & v48) + (1 << ((v44 >> 52) + 1));
      if ((v44 & 0x8000000000000000) == 0)
        v33 = v49;
      else
        v33 = -v49;
    }
    else
    {
      v33 = 0;
    }
  }
  else
  {
    v33 = v31;
  }
  if (*((_DWORD *)v32 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v32))
    return 0;
  if (*(_BYTE *)(v17 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v83 = (WTF::StringImpl *)v84[0];
    v52 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v52
      && (v54 = WebCore::InspectorInstrumentation::instrumentingAgents(v52, v53)) != 0
      && (v55 = *(_QWORD *)(v54 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v55, (WTF::StringImpl *)(v17 + 8), v19, (uint64_t)v84);
    }
    else
    {
      LOBYTE(v84[0]) = 0;
      v85 = 0;
    }
    v56 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v56
      && (v58 = WebCore::InspectorInstrumentation::instrumentingAgents(v56, v57)) != 0
      && (v59 = *(WebCore::InspectorCanvasAgent **)(v58 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v59, (WebCore::CanvasRenderingContext *)(v17 + 8), v27, (uint64_t)&v86);
    }
    else
    {
      LOBYTE(v86) = 0;
      v87 = 0;
    }
    v60 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v60
      && (v62 = WebCore::InspectorInstrumentation::instrumentingAgents(v60, v61)) != 0
      && (v63 = *(WebCore::InspectorCanvasAgent **)(v62 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v63, (WebCore::CanvasRenderingContext *)(v17 + 8), v30, (uint64_t)&v88);
    }
    else
    {
      LOBYTE(v88) = 0;
      v89 = 0;
    }
    v64 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v64
      && (v66 = WebCore::InspectorInstrumentation::instrumentingAgents(v64, v65)) != 0
      && (v67 = *(WebCore::InspectorCanvasAgent **)(v66 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v67, (WebCore::CanvasRenderingContext *)(v17 + 8), v33, (uint64_t)&v90);
    }
    else
    {
      LOBYTE(v90) = 0;
      v91 = 0;
    }
    v82[0] = v84;
    v82[1] = 4;
    v68 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v68)
    {
      v70 = WebCore::InspectorInstrumentation::instrumentingAgents(v68, v69);
      if (v70)
      {
        v71 = *(_QWORD *)(v70 + 96);
        if (v71)
          WebCore::InspectorCanvasAgent::recordAction(v71, (WebCore::CanvasRenderingContext *)(v17 + 8), (const WTF::StringImpl *)&v83, v82);
      }
    }
    if (v91)
    {
      v72 = v90;
      v90 = 0;
      if (v72)
      {
        if (*v72 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v72;
      }
    }
    if (v89)
    {
      v73 = v88;
      v88 = 0;
      if (v73)
      {
        if (*v73 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v73;
      }
    }
    if (v87)
    {
      v74 = v86;
      v86 = 0;
      if (v74)
      {
        if (*v74 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v74;
      }
    }
    if (v85)
    {
      v75 = (_DWORD *)v84[0];
      v84[0] = 0;
      if (v75)
      {
        if (*v75 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v75;
      }
    }
    v76 = v83;
    v83 = 0;
    if (v76)
    {
      if (*(_DWORD *)v76 == 2)
        WTF::StringImpl::destroy(v76, v69);
      else
        *(_DWORD *)v76 -= 2;
    }
  }
  v25 = 10;
  if (v19 && !*(_BYTE *)(v17 + 364))
  {
    v34 = *(_QWORD *)(v19 + 8);
    if (*(_DWORD *)(v34 + 60) != *(_DWORD *)(v19 + 20))
      v34 = 0;
    if (*(_QWORD *)(v17 + 168) == v34)
    {
      (*(void (**)(_QWORD, _QWORD, unint64_t, unint64_t, unint64_t))(**(_QWORD **)(v17 + 88) + 912))(*(_QWORD *)(v17 + 88), *(unsigned int *)(v19 + 16), v27, v30, v33);
      return 10;
    }
    else
    {
      v25 = 10;
      WebCore::WebGLRenderingContextBase::synthesizeGLError((WTF::StringImpl *)v17, 1282, (uint64_t)"uniform3i", 10, (uint64_t)"location not for current program", 33);
    }
  }
  return v25;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_uniform4i(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BOOL4 v21;
  char **v22;
  BOOL v23;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  JSC::VM *v29;
  unint64_t v30;
  unint64_t v31;
  JSC::VM *v32;
  unint64_t v33;
  unint64_t v34;
  JSC::VM *v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unint64_t v44;
  unsigned int v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unsigned int v52;
  unint64_t v53;
  unsigned int v54;
  unint64_t v55;
  unsigned int v56;
  JSValue v58;
  unint64_t v59;
  int hasExceptionsAfterHandlingTraps;
  unint64_t v61;
  unint64_t v62;
  int v63;
  unint64_t v64;
  int v65;
  JSC::VM *v66;
  unint64_t v67;
  int v68;
  WebCore::InspectorInstrumentation *v69;
  WebCore::ScriptExecutionContext *v70;
  uint64_t v71;
  uint64_t v72;
  WebCore::InspectorInstrumentation *v73;
  WebCore::ScriptExecutionContext *v74;
  uint64_t v75;
  WebCore::InspectorCanvasAgent *v76;
  WebCore::InspectorInstrumentation *v77;
  WebCore::ScriptExecutionContext *v78;
  uint64_t v79;
  WebCore::InspectorCanvasAgent *v80;
  WebCore::InspectorInstrumentation *v81;
  WebCore::ScriptExecutionContext *v82;
  uint64_t v83;
  WebCore::InspectorCanvasAgent *v84;
  WebCore::InspectorInstrumentation *v85;
  WebCore::ScriptExecutionContext *v86;
  uint64_t v87;
  WebCore::InspectorCanvasAgent *v88;
  WebCore::InspectorInstrumentation *v89;
  WebCore::ScriptExecutionContext *v90;
  uint64_t v91;
  uint64_t v92;
  _DWORD *v93;
  _DWORD *v94;
  _DWORD *v95;
  _DWORD *v96;
  _DWORD *v97;
  WTF::StringImpl *v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  JSC::JSGlobalObject *v105;
  unint64_t v106;
  unint64_t v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  int v112[2];
  unsigned int v113;
  JSC::VM *v114;
  _QWORD v115[2];
  WTF::StringImpl *v116;
  _QWORD v117[2];
  char v118;
  _DWORD *v119;
  char v120;
  _DWORD *v121;
  char v122;
  _DWORD *v123;
  char v124;
  _DWORD *v125;
  char v126;
  uint64_t v127;

  v127 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v114 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v114, "WebGLRenderingContext", "uniform4i");
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSWebGLRenderingContext::s_info && v14 != 0);
  }
  if (!v13)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v114, "WebGLRenderingContext", "uniform4i");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 4)
  {
    v58.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v58);
  }
  v17 = *(_QWORD *)(v10 + 24);
  v18 = *((_QWORD *)a2 + 6);
  if ((v18 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v19 = 0;
  }
  else
  {
    v117[0] = v9;
    if ((v18 & 0xFFFE000000000002) != 0)
      goto LABEL_26;
    v20 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
    v21 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
    v22 = (char **)(16 * v20);
    if ((_DWORD)v20)
      v23 = v22 == &WebCore::JSWebGLUniformLocation::s_info;
    else
      v23 = 1;
    if (!v23)
    {
      do
      {
        v22 = (char **)v22[2];
        v21 = v22 != 0;
      }
      while (v22 != &WebCore::JSWebGLUniformLocation::s_info && v22 != 0);
    }
    if (!v21 || (v19 = *(_QWORD *)(v18 + 24)) == 0)
    {
LABEL_26:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v117, 0, "location", 9, "WebGLRenderingContext", 22, a8, "uniform4i", 10, "WebGLUniformLocation", 21);
      return 0;
    }
  }
  v26 = *((_QWORD *)a2 + 7);
  v117[0] = v26;
  if (v26 < 0xFFFE000000000000)
  {
    v39 = v26 - 0x2000000000000;
    if (v26 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v117, this);
      v39 = v99;
    }
    v40 = (v39 >> 52) & 0x7FF;
    if ((v40 - 1023) <= 0x53)
    {
      v51 = v39 >> (51 - (v39 >> 52));
      if (v40 > 0x433)
        LODWORD(v51) = v39 << ((v39 >> 52) - 51);
      if (v40 >= 0x41F)
        v52 = v51;
      else
        v52 = (((1 << ((v39 >> 52) + 1)) - 1) & v51) + (1 << ((v39 >> 52) + 1));
      if ((v39 & 0x8000000000000000) == 0)
        v27 = v52;
      else
        v27 = -v52;
    }
    else
    {
      v27 = 0;
    }
  }
  else
  {
    v27 = v26;
  }
  if (*((_DWORD *)v9 + 20))
  {
    v59 = v27;
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v9);
    v27 = v59;
    if (hasExceptionsAfterHandlingTraps)
      return 0;
  }
  v28 = *((_QWORD *)a2 + 8);
  v117[0] = v28;
  v29 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v28 < 0xFFFE000000000000)
  {
    v41 = v28 - 0x2000000000000;
    if (v28 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      v100 = v27;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v117, this);
      v27 = v100;
      v41 = v101;
    }
    v42 = (v41 >> 52) & 0x7FF;
    v43 = v42 - 1023;
    v44 = v41 >> (51 - (v41 >> 52));
    if (v42 > 0x433)
      LODWORD(v44) = v41 << ((v41 >> 52) - 51);
    if (v42 >= 0x41F)
      v45 = v44;
    else
      v45 = (((1 << ((v41 >> 52) + 1)) - 1) & v44) + (1 << ((v41 >> 52) + 1));
    if ((v41 & 0x8000000000000000) == 0)
      v46 = v45;
    else
      v46 = -v45;
    if (v43 <= 0x53)
      v30 = v46;
    else
      v30 = 0;
  }
  else
  {
    v30 = v28;
  }
  if (*((_DWORD *)v29 + 20))
  {
    v61 = v27;
    v62 = v30;
    v63 = JSC::VM::hasExceptionsAfterHandlingTraps(v29);
    v30 = v62;
    v27 = v61;
    if (v63)
      return 0;
  }
  v31 = *((_QWORD *)a2 + 9);
  v117[0] = v31;
  v32 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v31 < 0xFFFE000000000000)
  {
    v47 = v31 - 0x2000000000000;
    if (v31 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      *(_QWORD *)v112 = *((_QWORD *)this + 7);
      v102 = v27;
      v103 = v30;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v117, this);
      v30 = v103;
      v27 = v102;
      v32 = *(JSC::VM **)v112;
      v47 = v104;
    }
    v48 = (v47 >> 52) & 0x7FF;
    if ((v48 - 1023) <= 0x53)
    {
      v53 = v47 >> (51 - (v47 >> 52));
      if (v48 > 0x433)
        LODWORD(v53) = v47 << ((v47 >> 52) - 51);
      if (v48 >= 0x41F)
        v54 = v53;
      else
        v54 = (((1 << ((v47 >> 52) + 1)) - 1) & v53) + (1 << ((v47 >> 52) + 1));
      if ((v47 & 0x8000000000000000) == 0)
        v33 = v54;
      else
        v33 = -v54;
    }
    else
    {
      v33 = 0;
    }
  }
  else
  {
    v33 = v31;
  }
  if (*((_DWORD *)v32 + 20))
  {
    v109 = v27;
    v64 = v30;
    v65 = JSC::VM::hasExceptionsAfterHandlingTraps(v32);
    v30 = v64;
    v27 = v109;
    if (v65)
      return 0;
  }
  v34 = *((_QWORD *)a2 + 10);
  v117[0] = v34;
  v35 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v34 < 0xFFFE000000000000)
  {
    v49 = v34 - 0x2000000000000;
    if (v34 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      v105 = this;
      v113 = v27;
      v106 = v30;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v117, v105);
      v30 = v106;
      v27 = v113;
      v49 = v107;
    }
    v50 = (v49 >> 52) & 0x7FF;
    if ((v50 - 1023) <= 0x53)
    {
      v55 = v49 >> (51 - (v49 >> 52));
      if (v50 > 0x433)
        LODWORD(v55) = v49 << ((v49 >> 52) - 51);
      if (v50 >= 0x41F)
        v56 = v55;
      else
        v56 = (((1 << ((v49 >> 52) + 1)) - 1) & v55) + (1 << ((v49 >> 52) + 1));
      if ((v49 & 0x8000000000000000) == 0)
        v36 = v56;
      else
        v36 = -v56;
    }
    else
    {
      v36 = 0;
    }
  }
  else
  {
    v36 = v34;
  }
  if (*((_DWORD *)v35 + 20))
  {
    v66 = v35;
    v110 = v27;
    v67 = v30;
    v68 = JSC::VM::hasExceptionsAfterHandlingTraps(v66);
    v30 = v67;
    v27 = v110;
    if (v68)
      return 0;
  }
  if (*(_BYTE *)(v17 + 33))
  {
    v108 = v30;
    v111 = v27;
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v116 = (WTF::StringImpl *)v117[0];
    v69 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v69
      && (v71 = WebCore::InspectorInstrumentation::instrumentingAgents(v69, v70)) != 0
      && (v72 = *(_QWORD *)(v71 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v72, (WTF::StringImpl *)(v17 + 8), v19, (uint64_t)v117);
    }
    else
    {
      LOBYTE(v117[0]) = 0;
      v118 = 0;
    }
    v73 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v73
      && (v75 = WebCore::InspectorInstrumentation::instrumentingAgents(v73, v74)) != 0
      && (v76 = *(WebCore::InspectorCanvasAgent **)(v75 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v76, (WebCore::CanvasRenderingContext *)(v17 + 8), v111, (uint64_t)&v119);
    }
    else
    {
      LOBYTE(v119) = 0;
      v120 = 0;
    }
    v77 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v77
      && (v79 = WebCore::InspectorInstrumentation::instrumentingAgents(v77, v78)) != 0
      && (v80 = *(WebCore::InspectorCanvasAgent **)(v79 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v80, (WebCore::CanvasRenderingContext *)(v17 + 8), v108, (uint64_t)&v121);
    }
    else
    {
      LOBYTE(v121) = 0;
      v122 = 0;
    }
    v81 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v81
      && (v83 = WebCore::InspectorInstrumentation::instrumentingAgents(v81, v82)) != 0
      && (v84 = *(WebCore::InspectorCanvasAgent **)(v83 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v84, (WebCore::CanvasRenderingContext *)(v17 + 8), v33, (uint64_t)&v123);
    }
    else
    {
      LOBYTE(v123) = 0;
      v124 = 0;
    }
    v85 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v85
      && (v87 = WebCore::InspectorInstrumentation::instrumentingAgents(v85, v86)) != 0
      && (v88 = *(WebCore::InspectorCanvasAgent **)(v87 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v88, (WebCore::CanvasRenderingContext *)(v17 + 8), v36, (uint64_t)&v125);
    }
    else
    {
      LOBYTE(v125) = 0;
      v126 = 0;
    }
    v115[0] = v117;
    v115[1] = 5;
    v89 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
    if (v89)
    {
      v91 = WebCore::InspectorInstrumentation::instrumentingAgents(v89, v90);
      if (v91)
      {
        v92 = *(_QWORD *)(v91 + 96);
        if (v92)
          WebCore::InspectorCanvasAgent::recordAction(v92, (WebCore::CanvasRenderingContext *)(v17 + 8), (const WTF::StringImpl *)&v116, v115);
      }
    }
    v30 = v108;
    v27 = v111;
    if (v126)
    {
      v93 = v125;
      v125 = 0;
      if (v93)
      {
        if (*v93 == 1)
        {
          WTF::JSONImpl::Value::operator delete();
          v30 = v108;
          v27 = v111;
        }
        else
        {
          --*v93;
        }
      }
    }
    if (v124)
    {
      v94 = v123;
      v123 = 0;
      if (v94)
      {
        if (*v94 == 1)
        {
          WTF::JSONImpl::Value::operator delete();
          v30 = v108;
          v27 = v111;
        }
        else
        {
          --*v94;
        }
      }
    }
    if (v122)
    {
      v95 = v121;
      v121 = 0;
      if (v95)
      {
        if (*v95 == 1)
        {
          WTF::JSONImpl::Value::operator delete();
          v30 = v108;
          v27 = v111;
        }
        else
        {
          --*v95;
        }
      }
    }
    if (v120)
    {
      v96 = v119;
      v119 = 0;
      if (v96)
      {
        if (*v96 == 1)
        {
          WTF::JSONImpl::Value::operator delete();
          v30 = v108;
          v27 = v111;
        }
        else
        {
          --*v96;
        }
      }
    }
    if (v118)
    {
      v97 = (_DWORD *)v117[0];
      v117[0] = 0;
      if (v97)
      {
        if (*v97 == 1)
        {
          WTF::JSONImpl::Value::operator delete();
          v30 = v108;
          v27 = v111;
        }
        else
        {
          --*v97;
        }
      }
    }
    v98 = v116;
    v116 = 0;
    if (v98)
    {
      if (*(_DWORD *)v98 == 2)
      {
        WTF::StringImpl::destroy(v98, v90);
        v30 = v108;
        v27 = v111;
      }
      else
      {
        *(_DWORD *)v98 -= 2;
      }
    }
  }
  v25 = 10;
  if (v19 && !*(_BYTE *)(v17 + 364))
  {
    v37 = *(_QWORD *)(v19 + 8);
    if (*(_DWORD *)(v37 + 60) != *(_DWORD *)(v19 + 20))
      v37 = 0;
    if (*(_QWORD *)(v17 + 168) == v37)
    {
      (*(void (**)(_QWORD, _QWORD, unint64_t, unint64_t, unint64_t, unint64_t))(**(_QWORD **)(v17 + 88) + 944))(*(_QWORD *)(v17 + 88), *(unsigned int *)(v19 + 16), v27, v30, v33, v36);
      return 10;
    }
    else
    {
      v25 = 10;
      WebCore::WebGLRenderingContextBase::synthesizeGLError((WTF::StringImpl *)v17, 1282, (uint64_t)"uniform4i", 10, (uint64_t)"location not for current program", 33);
    }
  }
  return v25;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_uniform1fv(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t (*v27)();
  JSValue v30;
  WebCore::InspectorInstrumentation *v31;
  WebCore::ScriptExecutionContext *v32;
  uint64_t v33;
  uint64_t v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  uint64_t v38;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  uint64_t v42;
  _DWORD *v43;
  _DWORD *v44;
  WTF::StringImpl *v45;
  JSC::VM *v46;
  _QWORD v47[2];
  int v48;
  _QWORD v49[2];
  int v50;
  _QWORD v51[2];
  char v52;
  _DWORD *v53;
  char v54;
  char v55[8];
  _BYTE v56[16];
  int v57;
  int v58;
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v46 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v46, "WebGLRenderingContext", "uniform1fv");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return WebCore::throwThisTypeError((int)this, (int)&v46, "WebGLRenderingContext", "uniform1fv");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v30.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v30);
  }
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v18 = 0;
  }
  else
  {
    v51[0] = v9;
    if ((v17 & 0xFFFE000000000002) != 0)
      goto LABEL_26;
    v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v21 = (char **)(16 * v19);
    if ((_DWORD)v19)
      v22 = v21 == &WebCore::JSWebGLUniformLocation::s_info;
    else
      v22 = 1;
    if (!v22)
    {
      do
      {
        v21 = (char **)v21[2];
        v20 = v21 != 0;
      }
      while (v21 != &WebCore::JSWebGLUniformLocation::s_info && v21 != 0);
    }
    if (!v20 || (v18 = *(_QWORD *)(v17 + 24)) == 0)
    {
LABEL_26:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v51, 0, "location", 9, "WebGLRenderingContext", 22, a8, "uniform1fv", 11, "WebGLUniformLocation", 21);
      return 0;
    }
  }
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLAllowSharedAdaptor<WebCore::IDLFloat32Array>,WebCore::IDLSequence<WebCore::IDLUnrestrictedFloat>>>::convert(this, *((JSC::JSGlobalObject **)a2 + 7), (uint64_t)v55);
  v25 = v58;
  if (v58)
  {
    v24 = 0;
  }
  else
  {
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v31 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v31
        && (v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v31, v32)) != 0
        && (v34 = *(_QWORD *)(v33 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v34, (WTF::StringImpl *)(v16 + 8), v18, (uint64_t)v51);
      }
      else
      {
        LOBYTE(v51[0]) = 0;
        v52 = 0;
      }
      if (v58)
        goto LABEL_76;
      v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v35
        && (v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36)) != 0
        && (v38 = *(_QWORD *)(v37 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v38, v16 + 8, (uint64_t)v56);
      }
      else
      {
        LOBYTE(v53) = 0;
        v54 = 0;
      }
      v49[0] = v51;
      v49[1] = 2;
      v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v39)
      {
        v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40);
        if (v41)
        {
          v42 = *(_QWORD *)(v41 + 96);
          if (v42)
            WebCore::InspectorCanvasAgent::recordAction(v42, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)v47, v49);
        }
      }
      if (v54)
      {
        v43 = v53;
        v53 = 0;
        if (v43)
        {
          if (*v43 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v43;
        }
      }
      if (v52)
      {
        v44 = (_DWORD *)v51[0];
        v51[0] = 0;
        if (v44)
        {
          if (*v44 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v44;
        }
      }
      v45 = (WTF::StringImpl *)v47[0];
      v47[0] = 0;
      if (v45)
      {
        if (*(_DWORD *)v45 == 2)
          goto LABEL_77;
        *(_DWORD *)v45 -= 2;
      }
      while (v58)
      {
LABEL_76:
        v45 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_77:
        WTF::StringImpl::destroy(v45, v40);
      }
    }
    LOBYTE(v47[0]) = 0;
    v48 = -1;
    v26 = v57;
    if (v57 == -1)
    {
      LOBYTE(v49[0]) = 0;
      v50 = -1;
    }
    else
    {
      v27 = off_1E333E5F8[v57];
      ((void (*)(_QWORD *, _QWORD *, _BYTE *))v27)(v51, v47, v56);
      v48 = v26;
      LOBYTE(v49[0]) = 0;
      v50 = -1;
      ((void (*)(_QWORD *, _QWORD *, _QWORD *))v27)(v51, v49, v47);
      v50 = v26;
    }
    if (!*(_BYTE *)(v16 + 364))
    {
      WebCore::WebGLRenderingContextBase::validateUniformMatrixParameters<float,JSC::GenericTypedArrayView<JSC::Float32Adaptor>>((WTF::StringImpl *)v16, (uint64_t)"uniform1fv", 11, v18, 0, (uint64_t)v49, 1, 0, (uint64_t)v51, 0);
      if (v52)
        (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(**(_QWORD **)(v16 + 88) + 840))(*(_QWORD *)(v16 + 88), *(unsigned int *)(v18 + 16), v51[0], v51[1]);
      v26 = v50;
    }
    if (v26 != -1)
      ((void (*)(_QWORD *, _QWORD *))off_1E333E5E8[v26])(v51, v49);
    v50 = -1;
    if (v48 != -1)
      ((void (*)(_QWORD *, _QWORD *))off_1E333E5E8[v48])(v51, v47);
    v25 = v58;
    v24 = 10;
  }
  if (v25 != -1)
    ((void (*)(_QWORD *, _BYTE *))off_1E333E608[v25])(v51, v56);
  return (_BYTE *)v24;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_uniform2fv(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t (*v27)();
  JSValue v30;
  WebCore::InspectorInstrumentation *v31;
  WebCore::ScriptExecutionContext *v32;
  uint64_t v33;
  uint64_t v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  uint64_t v38;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  uint64_t v42;
  _DWORD *v43;
  _DWORD *v44;
  WTF::StringImpl *v45;
  JSC::VM *v46;
  _QWORD v47[2];
  int v48;
  _QWORD v49[2];
  int v50;
  _QWORD v51[2];
  char v52;
  _DWORD *v53;
  char v54;
  char v55[8];
  _BYTE v56[16];
  int v57;
  int v58;
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v46 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v46, "WebGLRenderingContext", "uniform2fv");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return WebCore::throwThisTypeError((int)this, (int)&v46, "WebGLRenderingContext", "uniform2fv");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v30.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v30);
  }
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v18 = 0;
  }
  else
  {
    v51[0] = v9;
    if ((v17 & 0xFFFE000000000002) != 0)
      goto LABEL_26;
    v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v21 = (char **)(16 * v19);
    if ((_DWORD)v19)
      v22 = v21 == &WebCore::JSWebGLUniformLocation::s_info;
    else
      v22 = 1;
    if (!v22)
    {
      do
      {
        v21 = (char **)v21[2];
        v20 = v21 != 0;
      }
      while (v21 != &WebCore::JSWebGLUniformLocation::s_info && v21 != 0);
    }
    if (!v20 || (v18 = *(_QWORD *)(v17 + 24)) == 0)
    {
LABEL_26:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v51, 0, "location", 9, "WebGLRenderingContext", 22, a8, "uniform2fv", 11, "WebGLUniformLocation", 21);
      return 0;
    }
  }
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLAllowSharedAdaptor<WebCore::IDLFloat32Array>,WebCore::IDLSequence<WebCore::IDLUnrestrictedFloat>>>::convert(this, *((JSC::JSGlobalObject **)a2 + 7), (uint64_t)v55);
  v25 = v58;
  if (v58)
  {
    v24 = 0;
  }
  else
  {
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v31 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v31
        && (v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v31, v32)) != 0
        && (v34 = *(_QWORD *)(v33 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v34, (WTF::StringImpl *)(v16 + 8), v18, (uint64_t)v51);
      }
      else
      {
        LOBYTE(v51[0]) = 0;
        v52 = 0;
      }
      if (v58)
        goto LABEL_76;
      v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v35
        && (v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36)) != 0
        && (v38 = *(_QWORD *)(v37 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v38, v16 + 8, (uint64_t)v56);
      }
      else
      {
        LOBYTE(v53) = 0;
        v54 = 0;
      }
      v49[0] = v51;
      v49[1] = 2;
      v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v39)
      {
        v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40);
        if (v41)
        {
          v42 = *(_QWORD *)(v41 + 96);
          if (v42)
            WebCore::InspectorCanvasAgent::recordAction(v42, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)v47, v49);
        }
      }
      if (v54)
      {
        v43 = v53;
        v53 = 0;
        if (v43)
        {
          if (*v43 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v43;
        }
      }
      if (v52)
      {
        v44 = (_DWORD *)v51[0];
        v51[0] = 0;
        if (v44)
        {
          if (*v44 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v44;
        }
      }
      v45 = (WTF::StringImpl *)v47[0];
      v47[0] = 0;
      if (v45)
      {
        if (*(_DWORD *)v45 == 2)
          goto LABEL_77;
        *(_DWORD *)v45 -= 2;
      }
      while (v58)
      {
LABEL_76:
        v45 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_77:
        WTF::StringImpl::destroy(v45, v40);
      }
    }
    LOBYTE(v47[0]) = 0;
    v48 = -1;
    v26 = v57;
    if (v57 == -1)
    {
      LOBYTE(v49[0]) = 0;
      v50 = -1;
    }
    else
    {
      v27 = off_1E333E5F8[v57];
      ((void (*)(_QWORD *, _QWORD *, _BYTE *))v27)(v51, v47, v56);
      v48 = v26;
      LOBYTE(v49[0]) = 0;
      v50 = -1;
      ((void (*)(_QWORD *, _QWORD *, _QWORD *))v27)(v51, v49, v47);
      v50 = v26;
    }
    if (!*(_BYTE *)(v16 + 364))
    {
      WebCore::WebGLRenderingContextBase::validateUniformMatrixParameters<float,JSC::GenericTypedArrayView<JSC::Float32Adaptor>>((WTF::StringImpl *)v16, (uint64_t)"uniform2fv", 11, v18, 0, (uint64_t)v49, 2, 0, (uint64_t)v51, 0);
      if (v52)
        (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(**(_QWORD **)(v16 + 88) + 872))(*(_QWORD *)(v16 + 88), *(unsigned int *)(v18 + 16), v51[0], v51[1]);
      v26 = v50;
    }
    if (v26 != -1)
      ((void (*)(_QWORD *, _QWORD *))off_1E333E5E8[v26])(v51, v49);
    v50 = -1;
    if (v48 != -1)
      ((void (*)(_QWORD *, _QWORD *))off_1E333E5E8[v48])(v51, v47);
    v25 = v58;
    v24 = 10;
  }
  if (v25 != -1)
    ((void (*)(_QWORD *, _BYTE *))off_1E333E608[v25])(v51, v56);
  return (_BYTE *)v24;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_uniform3fv(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t (*v27)();
  JSValue v30;
  WebCore::InspectorInstrumentation *v31;
  WebCore::ScriptExecutionContext *v32;
  uint64_t v33;
  uint64_t v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  uint64_t v38;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  uint64_t v42;
  _DWORD *v43;
  _DWORD *v44;
  WTF::StringImpl *v45;
  JSC::VM *v46;
  _QWORD v47[2];
  int v48;
  _QWORD v49[2];
  int v50;
  _QWORD v51[2];
  char v52;
  _DWORD *v53;
  char v54;
  char v55[8];
  _BYTE v56[16];
  int v57;
  int v58;
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v46 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v46, "WebGLRenderingContext", "uniform3fv");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return WebCore::throwThisTypeError((int)this, (int)&v46, "WebGLRenderingContext", "uniform3fv");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v30.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v30);
  }
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v18 = 0;
  }
  else
  {
    v51[0] = v9;
    if ((v17 & 0xFFFE000000000002) != 0)
      goto LABEL_26;
    v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v21 = (char **)(16 * v19);
    if ((_DWORD)v19)
      v22 = v21 == &WebCore::JSWebGLUniformLocation::s_info;
    else
      v22 = 1;
    if (!v22)
    {
      do
      {
        v21 = (char **)v21[2];
        v20 = v21 != 0;
      }
      while (v21 != &WebCore::JSWebGLUniformLocation::s_info && v21 != 0);
    }
    if (!v20 || (v18 = *(_QWORD *)(v17 + 24)) == 0)
    {
LABEL_26:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v51, 0, "location", 9, "WebGLRenderingContext", 22, a8, "uniform3fv", 11, "WebGLUniformLocation", 21);
      return 0;
    }
  }
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLAllowSharedAdaptor<WebCore::IDLFloat32Array>,WebCore::IDLSequence<WebCore::IDLUnrestrictedFloat>>>::convert(this, *((JSC::JSGlobalObject **)a2 + 7), (uint64_t)v55);
  v25 = v58;
  if (v58)
  {
    v24 = 0;
  }
  else
  {
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v31 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v31
        && (v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v31, v32)) != 0
        && (v34 = *(_QWORD *)(v33 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v34, (WTF::StringImpl *)(v16 + 8), v18, (uint64_t)v51);
      }
      else
      {
        LOBYTE(v51[0]) = 0;
        v52 = 0;
      }
      if (v58)
        goto LABEL_76;
      v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v35
        && (v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36)) != 0
        && (v38 = *(_QWORD *)(v37 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v38, v16 + 8, (uint64_t)v56);
      }
      else
      {
        LOBYTE(v53) = 0;
        v54 = 0;
      }
      v49[0] = v51;
      v49[1] = 2;
      v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v39)
      {
        v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40);
        if (v41)
        {
          v42 = *(_QWORD *)(v41 + 96);
          if (v42)
            WebCore::InspectorCanvasAgent::recordAction(v42, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)v47, v49);
        }
      }
      if (v54)
      {
        v43 = v53;
        v53 = 0;
        if (v43)
        {
          if (*v43 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v43;
        }
      }
      if (v52)
      {
        v44 = (_DWORD *)v51[0];
        v51[0] = 0;
        if (v44)
        {
          if (*v44 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v44;
        }
      }
      v45 = (WTF::StringImpl *)v47[0];
      v47[0] = 0;
      if (v45)
      {
        if (*(_DWORD *)v45 == 2)
          goto LABEL_77;
        *(_DWORD *)v45 -= 2;
      }
      while (v58)
      {
LABEL_76:
        v45 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_77:
        WTF::StringImpl::destroy(v45, v40);
      }
    }
    LOBYTE(v47[0]) = 0;
    v48 = -1;
    v26 = v57;
    if (v57 == -1)
    {
      LOBYTE(v49[0]) = 0;
      v50 = -1;
    }
    else
    {
      v27 = off_1E333E5F8[v57];
      ((void (*)(_QWORD *, _QWORD *, _BYTE *))v27)(v51, v47, v56);
      v48 = v26;
      LOBYTE(v49[0]) = 0;
      v50 = -1;
      ((void (*)(_QWORD *, _QWORD *, _QWORD *))v27)(v51, v49, v47);
      v50 = v26;
    }
    if (!*(_BYTE *)(v16 + 364))
    {
      WebCore::WebGLRenderingContextBase::validateUniformMatrixParameters<float,JSC::GenericTypedArrayView<JSC::Float32Adaptor>>((WTF::StringImpl *)v16, (uint64_t)"uniform3fv", 11, v18, 0, (uint64_t)v49, 3, 0, (uint64_t)v51, 0);
      if (v52)
        (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(**(_QWORD **)(v16 + 88) + 904))(*(_QWORD *)(v16 + 88), *(unsigned int *)(v18 + 16), v51[0], v51[1]);
      v26 = v50;
    }
    if (v26 != -1)
      ((void (*)(_QWORD *, _QWORD *))off_1E333E5E8[v26])(v51, v49);
    v50 = -1;
    if (v48 != -1)
      ((void (*)(_QWORD *, _QWORD *))off_1E333E5E8[v48])(v51, v47);
    v25 = v58;
    v24 = 10;
  }
  if (v25 != -1)
    ((void (*)(_QWORD *, _BYTE *))off_1E333E608[v25])(v51, v56);
  return (_BYTE *)v24;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_uniform4fv(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t (*v27)();
  JSValue v30;
  WebCore::InspectorInstrumentation *v31;
  WebCore::ScriptExecutionContext *v32;
  uint64_t v33;
  uint64_t v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  uint64_t v38;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  uint64_t v42;
  _DWORD *v43;
  _DWORD *v44;
  WTF::StringImpl *v45;
  JSC::VM *v46;
  _QWORD v47[2];
  int v48;
  _QWORD v49[2];
  int v50;
  _QWORD v51[2];
  char v52;
  _DWORD *v53;
  char v54;
  char v55[8];
  _BYTE v56[16];
  int v57;
  int v58;
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v46 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v46, "WebGLRenderingContext", "uniform4fv");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return WebCore::throwThisTypeError((int)this, (int)&v46, "WebGLRenderingContext", "uniform4fv");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v30.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v30);
  }
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v18 = 0;
  }
  else
  {
    v51[0] = v9;
    if ((v17 & 0xFFFE000000000002) != 0)
      goto LABEL_26;
    v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v21 = (char **)(16 * v19);
    if ((_DWORD)v19)
      v22 = v21 == &WebCore::JSWebGLUniformLocation::s_info;
    else
      v22 = 1;
    if (!v22)
    {
      do
      {
        v21 = (char **)v21[2];
        v20 = v21 != 0;
      }
      while (v21 != &WebCore::JSWebGLUniformLocation::s_info && v21 != 0);
    }
    if (!v20 || (v18 = *(_QWORD *)(v17 + 24)) == 0)
    {
LABEL_26:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v51, 0, "location", 9, "WebGLRenderingContext", 22, a8, "uniform4fv", 11, "WebGLUniformLocation", 21);
      return 0;
    }
  }
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLAllowSharedAdaptor<WebCore::IDLFloat32Array>,WebCore::IDLSequence<WebCore::IDLUnrestrictedFloat>>>::convert(this, *((JSC::JSGlobalObject **)a2 + 7), (uint64_t)v55);
  v25 = v58;
  if (v58)
  {
    v24 = 0;
  }
  else
  {
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v31 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v31
        && (v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v31, v32)) != 0
        && (v34 = *(_QWORD *)(v33 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v34, (WTF::StringImpl *)(v16 + 8), v18, (uint64_t)v51);
      }
      else
      {
        LOBYTE(v51[0]) = 0;
        v52 = 0;
      }
      if (v58)
        goto LABEL_76;
      v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v35
        && (v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36)) != 0
        && (v38 = *(_QWORD *)(v37 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v38, v16 + 8, (uint64_t)v56);
      }
      else
      {
        LOBYTE(v53) = 0;
        v54 = 0;
      }
      v49[0] = v51;
      v49[1] = 2;
      v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v39)
      {
        v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40);
        if (v41)
        {
          v42 = *(_QWORD *)(v41 + 96);
          if (v42)
            WebCore::InspectorCanvasAgent::recordAction(v42, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)v47, v49);
        }
      }
      if (v54)
      {
        v43 = v53;
        v53 = 0;
        if (v43)
        {
          if (*v43 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v43;
        }
      }
      if (v52)
      {
        v44 = (_DWORD *)v51[0];
        v51[0] = 0;
        if (v44)
        {
          if (*v44 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v44;
        }
      }
      v45 = (WTF::StringImpl *)v47[0];
      v47[0] = 0;
      if (v45)
      {
        if (*(_DWORD *)v45 == 2)
          goto LABEL_77;
        *(_DWORD *)v45 -= 2;
      }
      while (v58)
      {
LABEL_76:
        v45 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_77:
        WTF::StringImpl::destroy(v45, v40);
      }
    }
    LOBYTE(v47[0]) = 0;
    v48 = -1;
    v26 = v57;
    if (v57 == -1)
    {
      LOBYTE(v49[0]) = 0;
      v50 = -1;
    }
    else
    {
      v27 = off_1E333E5F8[v57];
      ((void (*)(_QWORD *, _QWORD *, _BYTE *))v27)(v51, v47, v56);
      v48 = v26;
      LOBYTE(v49[0]) = 0;
      v50 = -1;
      ((void (*)(_QWORD *, _QWORD *, _QWORD *))v27)(v51, v49, v47);
      v50 = v26;
    }
    if (!*(_BYTE *)(v16 + 364))
    {
      WebCore::WebGLRenderingContextBase::validateUniformMatrixParameters<float,JSC::GenericTypedArrayView<JSC::Float32Adaptor>>((WTF::StringImpl *)v16, (uint64_t)"uniform4fv", 11, v18, 0, (uint64_t)v49, 4, 0, (uint64_t)v51, 0);
      if (v52)
        (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(**(_QWORD **)(v16 + 88) + 936))(*(_QWORD *)(v16 + 88), *(unsigned int *)(v18 + 16), v51[0], v51[1]);
      v26 = v50;
    }
    if (v26 != -1)
      ((void (*)(_QWORD *, _QWORD *))off_1E333E5E8[v26])(v51, v49);
    v50 = -1;
    if (v48 != -1)
      ((void (*)(_QWORD *, _QWORD *))off_1E333E5E8[v48])(v51, v47);
    v25 = v58;
    v24 = 10;
  }
  if (v25 != -1)
    ((void (*)(_QWORD *, _BYTE *))off_1E333E608[v25])(v51, v56);
  return (_BYTE *)v24;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_uniform1iv(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t (*v27)();
  JSValue v30;
  WebCore::InspectorInstrumentation *v31;
  WebCore::ScriptExecutionContext *v32;
  uint64_t v33;
  uint64_t v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  uint64_t v38;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  uint64_t v42;
  _DWORD *v43;
  _DWORD *v44;
  WTF::StringImpl *v45;
  JSC::VM *v46;
  _QWORD v47[2];
  int v48;
  _QWORD v49[2];
  int v50;
  _QWORD v51[2];
  char v52;
  _DWORD *v53;
  char v54;
  char v55[8];
  _BYTE v56[16];
  int v57;
  int v58;
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v46 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v46, "WebGLRenderingContext", "uniform1iv");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return WebCore::throwThisTypeError((int)this, (int)&v46, "WebGLRenderingContext", "uniform1iv");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v30.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v30);
  }
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v18 = 0;
  }
  else
  {
    v51[0] = v9;
    if ((v17 & 0xFFFE000000000002) != 0)
      goto LABEL_26;
    v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v21 = (char **)(16 * v19);
    if ((_DWORD)v19)
      v22 = v21 == &WebCore::JSWebGLUniformLocation::s_info;
    else
      v22 = 1;
    if (!v22)
    {
      do
      {
        v21 = (char **)v21[2];
        v20 = v21 != 0;
      }
      while (v21 != &WebCore::JSWebGLUniformLocation::s_info && v21 != 0);
    }
    if (!v20 || (v18 = *(_QWORD *)(v17 + 24)) == 0)
    {
LABEL_26:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v51, 0, "location", 9, "WebGLRenderingContext", 22, a8, "uniform1iv", 11, "WebGLUniformLocation", 21);
      return 0;
    }
  }
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLAllowSharedAdaptor<WebCore::IDLInt32Array>,WebCore::IDLSequence<WebCore::IDLLong>>>::convert(this, *((JSC::JSGlobalObject **)a2 + 7), (uint64_t)v55);
  v25 = v58;
  if (v58)
  {
    v24 = 0;
  }
  else
  {
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v31 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v31
        && (v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v31, v32)) != 0
        && (v34 = *(_QWORD *)(v33 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v34, (WTF::StringImpl *)(v16 + 8), v18, (uint64_t)v51);
      }
      else
      {
        LOBYTE(v51[0]) = 0;
        v52 = 0;
      }
      if (v58)
        goto LABEL_76;
      v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v35
        && (v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36)) != 0
        && (v38 = *(_QWORD *)(v37 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v38, v16 + 8, (uint64_t)v56);
      }
      else
      {
        LOBYTE(v53) = 0;
        v54 = 0;
      }
      v49[0] = v51;
      v49[1] = 2;
      v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v39)
      {
        v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40);
        if (v41)
        {
          v42 = *(_QWORD *)(v41 + 96);
          if (v42)
            WebCore::InspectorCanvasAgent::recordAction(v42, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)v47, v49);
        }
      }
      if (v54)
      {
        v43 = v53;
        v53 = 0;
        if (v43)
        {
          if (*v43 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v43;
        }
      }
      if (v52)
      {
        v44 = (_DWORD *)v51[0];
        v51[0] = 0;
        if (v44)
        {
          if (*v44 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v44;
        }
      }
      v45 = (WTF::StringImpl *)v47[0];
      v47[0] = 0;
      if (v45)
      {
        if (*(_DWORD *)v45 == 2)
          goto LABEL_77;
        *(_DWORD *)v45 -= 2;
      }
      while (v58)
      {
LABEL_76:
        v45 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_77:
        WTF::StringImpl::destroy(v45, v40);
      }
    }
    LOBYTE(v47[0]) = 0;
    v48 = -1;
    v26 = v57;
    if (v57 == -1)
    {
      LOBYTE(v49[0]) = 0;
      v50 = -1;
    }
    else
    {
      v27 = off_1E333E628[v57];
      ((void (*)(_QWORD *, _QWORD *, _BYTE *))v27)(v51, v47, v56);
      v48 = v26;
      LOBYTE(v49[0]) = 0;
      v50 = -1;
      ((void (*)(_QWORD *, _QWORD *, _QWORD *))v27)(v51, v49, v47);
      v50 = v26;
    }
    if (!*(_BYTE *)(v16 + 364))
    {
      WebCore::WebGLRenderingContextBase::validateUniformMatrixParameters<int,JSC::GenericTypedArrayView<JSC::Int32Adaptor>>((WTF::StringImpl *)v16, (uint64_t)"uniform1iv", 11, v18, 0, (uint64_t)v49, 1, 0, (uint64_t)v51, 0);
      if (v52)
        (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(**(_QWORD **)(v16 + 88) + 856))(*(_QWORD *)(v16 + 88), *(unsigned int *)(v18 + 16), v51[0], v51[1]);
      v26 = v50;
    }
    if (v26 != -1)
      ((void (*)(_QWORD *, _QWORD *))off_1E333E618[v26])(v51, v49);
    v50 = -1;
    if (v48 != -1)
      ((void (*)(_QWORD *, _QWORD *))off_1E333E618[v48])(v51, v47);
    v25 = v58;
    v24 = 10;
  }
  if (v25 != -1)
    ((void (*)(_QWORD *, _BYTE *))off_1E333E638[v25])(v51, v56);
  return (_BYTE *)v24;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_uniform2iv(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t (*v27)();
  JSValue v30;
  WebCore::InspectorInstrumentation *v31;
  WebCore::ScriptExecutionContext *v32;
  uint64_t v33;
  uint64_t v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  uint64_t v38;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  uint64_t v42;
  _DWORD *v43;
  _DWORD *v44;
  WTF::StringImpl *v45;
  JSC::VM *v46;
  _QWORD v47[2];
  int v48;
  _QWORD v49[2];
  int v50;
  _QWORD v51[2];
  char v52;
  _DWORD *v53;
  char v54;
  char v55[8];
  _BYTE v56[16];
  int v57;
  int v58;
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v46 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v46, "WebGLRenderingContext", "uniform2iv");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return WebCore::throwThisTypeError((int)this, (int)&v46, "WebGLRenderingContext", "uniform2iv");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v30.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v30);
  }
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v18 = 0;
  }
  else
  {
    v51[0] = v9;
    if ((v17 & 0xFFFE000000000002) != 0)
      goto LABEL_26;
    v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v21 = (char **)(16 * v19);
    if ((_DWORD)v19)
      v22 = v21 == &WebCore::JSWebGLUniformLocation::s_info;
    else
      v22 = 1;
    if (!v22)
    {
      do
      {
        v21 = (char **)v21[2];
        v20 = v21 != 0;
      }
      while (v21 != &WebCore::JSWebGLUniformLocation::s_info && v21 != 0);
    }
    if (!v20 || (v18 = *(_QWORD *)(v17 + 24)) == 0)
    {
LABEL_26:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v51, 0, "location", 9, "WebGLRenderingContext", 22, a8, "uniform2iv", 11, "WebGLUniformLocation", 21);
      return 0;
    }
  }
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLAllowSharedAdaptor<WebCore::IDLInt32Array>,WebCore::IDLSequence<WebCore::IDLLong>>>::convert(this, *((JSC::JSGlobalObject **)a2 + 7), (uint64_t)v55);
  v25 = v58;
  if (v58)
  {
    v24 = 0;
  }
  else
  {
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v31 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v31
        && (v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v31, v32)) != 0
        && (v34 = *(_QWORD *)(v33 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v34, (WTF::StringImpl *)(v16 + 8), v18, (uint64_t)v51);
      }
      else
      {
        LOBYTE(v51[0]) = 0;
        v52 = 0;
      }
      if (v58)
        goto LABEL_76;
      v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v35
        && (v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36)) != 0
        && (v38 = *(_QWORD *)(v37 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v38, v16 + 8, (uint64_t)v56);
      }
      else
      {
        LOBYTE(v53) = 0;
        v54 = 0;
      }
      v49[0] = v51;
      v49[1] = 2;
      v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v39)
      {
        v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40);
        if (v41)
        {
          v42 = *(_QWORD *)(v41 + 96);
          if (v42)
            WebCore::InspectorCanvasAgent::recordAction(v42, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)v47, v49);
        }
      }
      if (v54)
      {
        v43 = v53;
        v53 = 0;
        if (v43)
        {
          if (*v43 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v43;
        }
      }
      if (v52)
      {
        v44 = (_DWORD *)v51[0];
        v51[0] = 0;
        if (v44)
        {
          if (*v44 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v44;
        }
      }
      v45 = (WTF::StringImpl *)v47[0];
      v47[0] = 0;
      if (v45)
      {
        if (*(_DWORD *)v45 == 2)
          goto LABEL_77;
        *(_DWORD *)v45 -= 2;
      }
      while (v58)
      {
LABEL_76:
        v45 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_77:
        WTF::StringImpl::destroy(v45, v40);
      }
    }
    LOBYTE(v47[0]) = 0;
    v48 = -1;
    v26 = v57;
    if (v57 == -1)
    {
      LOBYTE(v49[0]) = 0;
      v50 = -1;
    }
    else
    {
      v27 = off_1E333E628[v57];
      ((void (*)(_QWORD *, _QWORD *, _BYTE *))v27)(v51, v47, v56);
      v48 = v26;
      LOBYTE(v49[0]) = 0;
      v50 = -1;
      ((void (*)(_QWORD *, _QWORD *, _QWORD *))v27)(v51, v49, v47);
      v50 = v26;
    }
    if (!*(_BYTE *)(v16 + 364))
    {
      WebCore::WebGLRenderingContextBase::validateUniformMatrixParameters<int,JSC::GenericTypedArrayView<JSC::Int32Adaptor>>((WTF::StringImpl *)v16, (uint64_t)"uniform2iv", 11, v18, 0, (uint64_t)v49, 2, 0, (uint64_t)v51, 0);
      if (v52)
        (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(**(_QWORD **)(v16 + 88) + 888))(*(_QWORD *)(v16 + 88), *(unsigned int *)(v18 + 16), v51[0], v51[1]);
      v26 = v50;
    }
    if (v26 != -1)
      ((void (*)(_QWORD *, _QWORD *))off_1E333E618[v26])(v51, v49);
    v50 = -1;
    if (v48 != -1)
      ((void (*)(_QWORD *, _QWORD *))off_1E333E618[v48])(v51, v47);
    v25 = v58;
    v24 = 10;
  }
  if (v25 != -1)
    ((void (*)(_QWORD *, _BYTE *))off_1E333E638[v25])(v51, v56);
  return (_BYTE *)v24;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_uniform3iv(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t (*v27)();
  JSValue v30;
  WebCore::InspectorInstrumentation *v31;
  WebCore::ScriptExecutionContext *v32;
  uint64_t v33;
  uint64_t v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  uint64_t v38;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  uint64_t v42;
  _DWORD *v43;
  _DWORD *v44;
  WTF::StringImpl *v45;
  JSC::VM *v46;
  _QWORD v47[2];
  int v48;
  _QWORD v49[2];
  int v50;
  _QWORD v51[2];
  char v52;
  _DWORD *v53;
  char v54;
  char v55[8];
  _BYTE v56[16];
  int v57;
  int v58;
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v46 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v46, "WebGLRenderingContext", "uniform3iv");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return WebCore::throwThisTypeError((int)this, (int)&v46, "WebGLRenderingContext", "uniform3iv");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v30.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v30);
  }
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v18 = 0;
  }
  else
  {
    v51[0] = v9;
    if ((v17 & 0xFFFE000000000002) != 0)
      goto LABEL_26;
    v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v21 = (char **)(16 * v19);
    if ((_DWORD)v19)
      v22 = v21 == &WebCore::JSWebGLUniformLocation::s_info;
    else
      v22 = 1;
    if (!v22)
    {
      do
      {
        v21 = (char **)v21[2];
        v20 = v21 != 0;
      }
      while (v21 != &WebCore::JSWebGLUniformLocation::s_info && v21 != 0);
    }
    if (!v20 || (v18 = *(_QWORD *)(v17 + 24)) == 0)
    {
LABEL_26:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v51, 0, "location", 9, "WebGLRenderingContext", 22, a8, "uniform3iv", 11, "WebGLUniformLocation", 21);
      return 0;
    }
  }
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLAllowSharedAdaptor<WebCore::IDLInt32Array>,WebCore::IDLSequence<WebCore::IDLLong>>>::convert(this, *((JSC::JSGlobalObject **)a2 + 7), (uint64_t)v55);
  v25 = v58;
  if (v58)
  {
    v24 = 0;
  }
  else
  {
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v31 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v31
        && (v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v31, v32)) != 0
        && (v34 = *(_QWORD *)(v33 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v34, (WTF::StringImpl *)(v16 + 8), v18, (uint64_t)v51);
      }
      else
      {
        LOBYTE(v51[0]) = 0;
        v52 = 0;
      }
      if (v58)
        goto LABEL_76;
      v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v35
        && (v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36)) != 0
        && (v38 = *(_QWORD *)(v37 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v38, v16 + 8, (uint64_t)v56);
      }
      else
      {
        LOBYTE(v53) = 0;
        v54 = 0;
      }
      v49[0] = v51;
      v49[1] = 2;
      v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v39)
      {
        v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40);
        if (v41)
        {
          v42 = *(_QWORD *)(v41 + 96);
          if (v42)
            WebCore::InspectorCanvasAgent::recordAction(v42, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)v47, v49);
        }
      }
      if (v54)
      {
        v43 = v53;
        v53 = 0;
        if (v43)
        {
          if (*v43 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v43;
        }
      }
      if (v52)
      {
        v44 = (_DWORD *)v51[0];
        v51[0] = 0;
        if (v44)
        {
          if (*v44 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v44;
        }
      }
      v45 = (WTF::StringImpl *)v47[0];
      v47[0] = 0;
      if (v45)
      {
        if (*(_DWORD *)v45 == 2)
          goto LABEL_77;
        *(_DWORD *)v45 -= 2;
      }
      while (v58)
      {
LABEL_76:
        v45 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_77:
        WTF::StringImpl::destroy(v45, v40);
      }
    }
    LOBYTE(v47[0]) = 0;
    v48 = -1;
    v26 = v57;
    if (v57 == -1)
    {
      LOBYTE(v49[0]) = 0;
      v50 = -1;
    }
    else
    {
      v27 = off_1E333E628[v57];
      ((void (*)(_QWORD *, _QWORD *, _BYTE *))v27)(v51, v47, v56);
      v48 = v26;
      LOBYTE(v49[0]) = 0;
      v50 = -1;
      ((void (*)(_QWORD *, _QWORD *, _QWORD *))v27)(v51, v49, v47);
      v50 = v26;
    }
    if (!*(_BYTE *)(v16 + 364))
    {
      WebCore::WebGLRenderingContextBase::validateUniformMatrixParameters<int,JSC::GenericTypedArrayView<JSC::Int32Adaptor>>((WTF::StringImpl *)v16, (uint64_t)"uniform3iv", 11, v18, 0, (uint64_t)v49, 3, 0, (uint64_t)v51, 0);
      if (v52)
        (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(**(_QWORD **)(v16 + 88) + 920))(*(_QWORD *)(v16 + 88), *(unsigned int *)(v18 + 16), v51[0], v51[1]);
      v26 = v50;
    }
    if (v26 != -1)
      ((void (*)(_QWORD *, _QWORD *))off_1E333E618[v26])(v51, v49);
    v50 = -1;
    if (v48 != -1)
      ((void (*)(_QWORD *, _QWORD *))off_1E333E618[v48])(v51, v47);
    v25 = v58;
    v24 = 10;
  }
  if (v25 != -1)
    ((void (*)(_QWORD *, _BYTE *))off_1E333E638[v25])(v51, v56);
  return (_BYTE *)v24;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_uniform4iv(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t (*v27)();
  JSValue v30;
  WebCore::InspectorInstrumentation *v31;
  WebCore::ScriptExecutionContext *v32;
  uint64_t v33;
  uint64_t v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  uint64_t v38;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  uint64_t v42;
  _DWORD *v43;
  _DWORD *v44;
  WTF::StringImpl *v45;
  JSC::VM *v46;
  _QWORD v47[2];
  int v48;
  _QWORD v49[2];
  int v50;
  _QWORD v51[2];
  char v52;
  _DWORD *v53;
  char v54;
  char v55[8];
  _BYTE v56[16];
  int v57;
  int v58;
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v46 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v46, "WebGLRenderingContext", "uniform4iv");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return WebCore::throwThisTypeError((int)this, (int)&v46, "WebGLRenderingContext", "uniform4iv");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v30.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v30);
  }
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v18 = 0;
  }
  else
  {
    v51[0] = v9;
    if ((v17 & 0xFFFE000000000002) != 0)
      goto LABEL_26;
    v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v21 = (char **)(16 * v19);
    if ((_DWORD)v19)
      v22 = v21 == &WebCore::JSWebGLUniformLocation::s_info;
    else
      v22 = 1;
    if (!v22)
    {
      do
      {
        v21 = (char **)v21[2];
        v20 = v21 != 0;
      }
      while (v21 != &WebCore::JSWebGLUniformLocation::s_info && v21 != 0);
    }
    if (!v20 || (v18 = *(_QWORD *)(v17 + 24)) == 0)
    {
LABEL_26:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v51, 0, "location", 9, "WebGLRenderingContext", 22, a8, "uniform4iv", 11, "WebGLUniformLocation", 21);
      return 0;
    }
  }
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLAllowSharedAdaptor<WebCore::IDLInt32Array>,WebCore::IDLSequence<WebCore::IDLLong>>>::convert(this, *((JSC::JSGlobalObject **)a2 + 7), (uint64_t)v55);
  v25 = v58;
  if (v58)
  {
    v24 = 0;
  }
  else
  {
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v31 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v31
        && (v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v31, v32)) != 0
        && (v34 = *(_QWORD *)(v33 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v34, (WTF::StringImpl *)(v16 + 8), v18, (uint64_t)v51);
      }
      else
      {
        LOBYTE(v51[0]) = 0;
        v52 = 0;
      }
      if (v58)
        goto LABEL_76;
      v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v35
        && (v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36)) != 0
        && (v38 = *(_QWORD *)(v37 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v38, v16 + 8, (uint64_t)v56);
      }
      else
      {
        LOBYTE(v53) = 0;
        v54 = 0;
      }
      v49[0] = v51;
      v49[1] = 2;
      v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v39)
      {
        v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40);
        if (v41)
        {
          v42 = *(_QWORD *)(v41 + 96);
          if (v42)
            WebCore::InspectorCanvasAgent::recordAction(v42, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)v47, v49);
        }
      }
      if (v54)
      {
        v43 = v53;
        v53 = 0;
        if (v43)
        {
          if (*v43 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v43;
        }
      }
      if (v52)
      {
        v44 = (_DWORD *)v51[0];
        v51[0] = 0;
        if (v44)
        {
          if (*v44 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v44;
        }
      }
      v45 = (WTF::StringImpl *)v47[0];
      v47[0] = 0;
      if (v45)
      {
        if (*(_DWORD *)v45 == 2)
          goto LABEL_77;
        *(_DWORD *)v45 -= 2;
      }
      while (v58)
      {
LABEL_76:
        v45 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_77:
        WTF::StringImpl::destroy(v45, v40);
      }
    }
    LOBYTE(v47[0]) = 0;
    v48 = -1;
    v26 = v57;
    if (v57 == -1)
    {
      LOBYTE(v49[0]) = 0;
      v50 = -1;
    }
    else
    {
      v27 = off_1E333E628[v57];
      ((void (*)(_QWORD *, _QWORD *, _BYTE *))v27)(v51, v47, v56);
      v48 = v26;
      LOBYTE(v49[0]) = 0;
      v50 = -1;
      ((void (*)(_QWORD *, _QWORD *, _QWORD *))v27)(v51, v49, v47);
      v50 = v26;
    }
    if (!*(_BYTE *)(v16 + 364))
    {
      WebCore::WebGLRenderingContextBase::validateUniformMatrixParameters<int,JSC::GenericTypedArrayView<JSC::Int32Adaptor>>((WTF::StringImpl *)v16, (uint64_t)"uniform4iv", 11, v18, 0, (uint64_t)v49, 4, 0, (uint64_t)v51, 0);
      if (v52)
        (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(**(_QWORD **)(v16 + 88) + 952))(*(_QWORD *)(v16 + 88), *(unsigned int *)(v18 + 16), v51[0], v51[1]);
      v26 = v50;
    }
    if (v26 != -1)
      ((void (*)(_QWORD *, _QWORD *))off_1E333E618[v26])(v51, v49);
    v50 = -1;
    if (v48 != -1)
      ((void (*)(_QWORD *, _QWORD *))off_1E333E618[v48])(v51, v47);
    v25 = v58;
    v24 = 10;
  }
  if (v25 != -1)
    ((void (*)(_QWORD *, _BYTE *))off_1E333E638[v25])(v51, v56);
  return (_BYTE *)v24;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_uniformMatrix2fv(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BOOL4 v21;
  char **v22;
  BOOL v23;
  uint64_t v25;
  unint64_t v26;
  double v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t (*v31)();
  JSValue v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  uint64_t v38;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  WebCore::InspectorCanvasAgent *v42;
  WebCore::InspectorInstrumentation *v43;
  WebCore::ScriptExecutionContext *v44;
  uint64_t v45;
  uint64_t v46;
  WebCore::InspectorInstrumentation *v47;
  WebCore::ScriptExecutionContext *v48;
  uint64_t v49;
  uint64_t v50;
  _DWORD *v51;
  _DWORD *v52;
  _DWORD *v53;
  WTF::StringImpl *v54;
  BOOL v55;
  BOOL v56;
  _BOOL4 v57;
  int v58;
  uint64_t v59;
  int *v60;
  int v61;
  JSC::VM *v62;
  _QWORD v63[2];
  int v64;
  _QWORD v65[2];
  int v66;
  _QWORD v67[2];
  char v68;
  _DWORD *v69;
  char v70;
  _DWORD *v71;
  char v72;
  char v73[8];
  _BYTE v74[16];
  int v75;
  int v76;
  uint64_t v77;

  v77 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v62 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v62, "WebGLRenderingContext", "uniformMatrix2fv");
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSWebGLRenderingContext::s_info && v14 != 0);
  }
  if (!v13)
    return WebCore::throwThisTypeError((int)this, (int)&v62, "WebGLRenderingContext", "uniformMatrix2fv");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v34.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v34);
  }
  v17 = *(_QWORD *)(v10 + 24);
  v18 = *((_QWORD *)a2 + 6);
  if ((v18 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v19 = 0;
  }
  else
  {
    v67[0] = v9;
    if ((v18 & 0xFFFE000000000002) != 0)
      goto LABEL_26;
    v20 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
    v21 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
    v22 = (char **)(16 * v20);
    if ((_DWORD)v20)
      v23 = v22 == &WebCore::JSWebGLUniformLocation::s_info;
    else
      v23 = 1;
    if (!v23)
    {
      do
      {
        v22 = (char **)v22[2];
        v21 = v22 != 0;
      }
      while (v22 != &WebCore::JSWebGLUniformLocation::s_info && v22 != 0);
    }
    if (!v21 || (v19 = *(_QWORD *)(v18 + 24)) == 0)
    {
LABEL_26:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v67, 0, "location", 9, "WebGLRenderingContext", 22, a8, "uniformMatrix2fv", 17, "WebGLUniformLocation", 21);
      return 0;
    }
  }
  v26 = *((_QWORD *)a2 + 7);
  if (v26 >= 0xFFFE000000000000)
  {
    v55 = (_DWORD)v26 == 0;
    goto LABEL_112;
  }
  *(_QWORD *)&v27 = v26 - 0x2000000000000;
  if (v26 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v26 & 0xFFFE000000000002) != 0)
    {
      v28 = v26 == 7;
      goto LABEL_32;
    }
    v58 = *(unsigned __int8 *)(v26 + 5);
    if (v58 == 3)
    {
      v61 = *(_DWORD *)(v26 + 8);
    }
    else
    {
      if (v58 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v28 = 1;
          goto LABEL_32;
        }
        v55 = *(_QWORD *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
        goto LABEL_112;
      }
      v59 = *(_QWORD *)(v26 + 8);
      if ((v59 & 1) != 0)
        v60 = (int *)(v26 + 16);
      else
        v60 = (int *)(v59 + 4);
      v61 = *v60;
    }
    v55 = v61 == 0;
LABEL_112:
    v28 = !v55;
    goto LABEL_32;
  }
  v56 = v27 <= 0.0;
  v57 = v27 < 0.0;
  v28 = !v56 || v57;
LABEL_32:
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    return 0;
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLAllowSharedAdaptor<WebCore::IDLFloat32Array>,WebCore::IDLSequence<WebCore::IDLUnrestrictedFloat>>>::convert(this, *((JSC::JSGlobalObject **)a2 + 8), (uint64_t)v73);
  v29 = v76;
  if (v76)
  {
    v25 = 0;
  }
  else
  {
    if (*(_BYTE *)(v17 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v63[0] = v67[0];
      v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
      if (v35
        && (v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36)) != 0
        && (v38 = *(_QWORD *)(v37 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v38, (WTF::StringImpl *)(v17 + 8), v19, (uint64_t)v67);
      }
      else
      {
        LOBYTE(v67[0]) = 0;
        v68 = 0;
      }
      v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
      if (v39
        && (v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40)) != 0
        && (v42 = *(WebCore::InspectorCanvasAgent **)(v41 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v42, (WebCore::CanvasRenderingContext *)(v17 + 8), (WTF::JSONImpl::Value *)v28, (uint64_t)&v69);
      }
      else
      {
        LOBYTE(v69) = 0;
        v70 = 0;
      }
      if (v76)
        goto LABEL_92;
      v43 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
      if (v43
        && (v45 = WebCore::InspectorInstrumentation::instrumentingAgents(v43, v44)) != 0
        && (v46 = *(_QWORD *)(v45 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v46, v17 + 8, (uint64_t)v74);
      }
      else
      {
        LOBYTE(v71) = 0;
        v72 = 0;
      }
      v65[0] = v67;
      v65[1] = 3;
      v47 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
      if (v47)
      {
        v49 = WebCore::InspectorInstrumentation::instrumentingAgents(v47, v48);
        if (v49)
        {
          v50 = *(_QWORD *)(v49 + 96);
          if (v50)
            WebCore::InspectorCanvasAgent::recordAction(v50, (WebCore::CanvasRenderingContext *)(v17 + 8), (const WTF::StringImpl *)v63, v65);
        }
      }
      if (v72)
      {
        v51 = v71;
        v71 = 0;
        if (v51)
        {
          if (*v51 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v51;
        }
      }
      if (v70)
      {
        v52 = v69;
        v69 = 0;
        if (v52)
        {
          if (*v52 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v52;
        }
      }
      if (v68)
      {
        v53 = (_DWORD *)v67[0];
        v67[0] = 0;
        if (v53)
        {
          if (*v53 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v53;
        }
      }
      v54 = (WTF::StringImpl *)v63[0];
      v63[0] = 0;
      if (v54)
      {
        if (*(_DWORD *)v54 == 2)
          goto LABEL_93;
        *(_DWORD *)v54 -= 2;
      }
      while (v76)
      {
LABEL_92:
        v54 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_93:
        WTF::StringImpl::destroy(v54, v48);
      }
    }
    LOBYTE(v63[0]) = 0;
    v64 = -1;
    v30 = v75;
    if (v75 == -1)
    {
      LOBYTE(v65[0]) = 0;
      v66 = -1;
    }
    else
    {
      v31 = off_1E333E5F8[v75];
      ((void (*)(_QWORD *, _QWORD *, _BYTE *))v31)(v67, v63, v74);
      v64 = v30;
      LOBYTE(v65[0]) = 0;
      v66 = -1;
      ((void (*)(_QWORD *, _QWORD *, _QWORD *))v31)(v67, v65, v63);
      v66 = v30;
    }
    if (!*(_BYTE *)(v17 + 364))
    {
      WebCore::WebGLRenderingContextBase::validateUniformMatrixParameters<float,JSC::GenericTypedArrayView<JSC::Float32Adaptor>>((WTF::StringImpl *)v17, (uint64_t)"uniformMatrix2fv", 17, v19, v28, (uint64_t)v65, 4, 0, (uint64_t)v67, 0);
      if (v68)
        (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD, _QWORD))(**(_QWORD **)(v17 + 88) + 960))(*(_QWORD *)(v17 + 88), *(unsigned int *)(v19 + 16), v28, v67[0], v67[1]);
      v30 = v66;
    }
    if (v30 != -1)
      ((void (*)(_QWORD *, _QWORD *))off_1E333E5E8[v30])(v67, v65);
    v66 = -1;
    if (v64 != -1)
      ((void (*)(_QWORD *, _QWORD *))off_1E333E5E8[v64])(v67, v63);
    v29 = v76;
    v25 = 10;
  }
  if (v29 != -1)
    ((void (*)(_QWORD *, _BYTE *))off_1E333E608[v29])(v67, v74);
  return (_BYTE *)v25;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_uniformMatrix3fv(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BOOL4 v21;
  char **v22;
  BOOL v23;
  uint64_t v25;
  unint64_t v26;
  double v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t (*v31)();
  JSValue v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  uint64_t v38;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  WebCore::InspectorCanvasAgent *v42;
  WebCore::InspectorInstrumentation *v43;
  WebCore::ScriptExecutionContext *v44;
  uint64_t v45;
  uint64_t v46;
  WebCore::InspectorInstrumentation *v47;
  WebCore::ScriptExecutionContext *v48;
  uint64_t v49;
  uint64_t v50;
  _DWORD *v51;
  _DWORD *v52;
  _DWORD *v53;
  WTF::StringImpl *v54;
  BOOL v55;
  BOOL v56;
  _BOOL4 v57;
  int v58;
  uint64_t v59;
  int *v60;
  int v61;
  JSC::VM *v62;
  _QWORD v63[2];
  int v64;
  _QWORD v65[2];
  int v66;
  _QWORD v67[2];
  char v68;
  _DWORD *v69;
  char v70;
  _DWORD *v71;
  char v72;
  char v73[8];
  _BYTE v74[16];
  int v75;
  int v76;
  uint64_t v77;

  v77 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v62 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v62, "WebGLRenderingContext", "uniformMatrix3fv");
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSWebGLRenderingContext::s_info && v14 != 0);
  }
  if (!v13)
    return WebCore::throwThisTypeError((int)this, (int)&v62, "WebGLRenderingContext", "uniformMatrix3fv");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v34.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v34);
  }
  v17 = *(_QWORD *)(v10 + 24);
  v18 = *((_QWORD *)a2 + 6);
  if ((v18 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v19 = 0;
  }
  else
  {
    v67[0] = v9;
    if ((v18 & 0xFFFE000000000002) != 0)
      goto LABEL_26;
    v20 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
    v21 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
    v22 = (char **)(16 * v20);
    if ((_DWORD)v20)
      v23 = v22 == &WebCore::JSWebGLUniformLocation::s_info;
    else
      v23 = 1;
    if (!v23)
    {
      do
      {
        v22 = (char **)v22[2];
        v21 = v22 != 0;
      }
      while (v22 != &WebCore::JSWebGLUniformLocation::s_info && v22 != 0);
    }
    if (!v21 || (v19 = *(_QWORD *)(v18 + 24)) == 0)
    {
LABEL_26:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v67, 0, "location", 9, "WebGLRenderingContext", 22, a8, "uniformMatrix3fv", 17, "WebGLUniformLocation", 21);
      return 0;
    }
  }
  v26 = *((_QWORD *)a2 + 7);
  if (v26 >= 0xFFFE000000000000)
  {
    v55 = (_DWORD)v26 == 0;
    goto LABEL_112;
  }
  *(_QWORD *)&v27 = v26 - 0x2000000000000;
  if (v26 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v26 & 0xFFFE000000000002) != 0)
    {
      v28 = v26 == 7;
      goto LABEL_32;
    }
    v58 = *(unsigned __int8 *)(v26 + 5);
    if (v58 == 3)
    {
      v61 = *(_DWORD *)(v26 + 8);
    }
    else
    {
      if (v58 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v28 = 1;
          goto LABEL_32;
        }
        v55 = *(_QWORD *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
        goto LABEL_112;
      }
      v59 = *(_QWORD *)(v26 + 8);
      if ((v59 & 1) != 0)
        v60 = (int *)(v26 + 16);
      else
        v60 = (int *)(v59 + 4);
      v61 = *v60;
    }
    v55 = v61 == 0;
LABEL_112:
    v28 = !v55;
    goto LABEL_32;
  }
  v56 = v27 <= 0.0;
  v57 = v27 < 0.0;
  v28 = !v56 || v57;
LABEL_32:
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    return 0;
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLAllowSharedAdaptor<WebCore::IDLFloat32Array>,WebCore::IDLSequence<WebCore::IDLUnrestrictedFloat>>>::convert(this, *((JSC::JSGlobalObject **)a2 + 8), (uint64_t)v73);
  v29 = v76;
  if (v76)
  {
    v25 = 0;
  }
  else
  {
    if (*(_BYTE *)(v17 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v63[0] = v67[0];
      v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
      if (v35
        && (v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36)) != 0
        && (v38 = *(_QWORD *)(v37 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v38, (WTF::StringImpl *)(v17 + 8), v19, (uint64_t)v67);
      }
      else
      {
        LOBYTE(v67[0]) = 0;
        v68 = 0;
      }
      v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
      if (v39
        && (v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40)) != 0
        && (v42 = *(WebCore::InspectorCanvasAgent **)(v41 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v42, (WebCore::CanvasRenderingContext *)(v17 + 8), (WTF::JSONImpl::Value *)v28, (uint64_t)&v69);
      }
      else
      {
        LOBYTE(v69) = 0;
        v70 = 0;
      }
      if (v76)
        goto LABEL_92;
      v43 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
      if (v43
        && (v45 = WebCore::InspectorInstrumentation::instrumentingAgents(v43, v44)) != 0
        && (v46 = *(_QWORD *)(v45 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v46, v17 + 8, (uint64_t)v74);
      }
      else
      {
        LOBYTE(v71) = 0;
        v72 = 0;
      }
      v65[0] = v67;
      v65[1] = 3;
      v47 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
      if (v47)
      {
        v49 = WebCore::InspectorInstrumentation::instrumentingAgents(v47, v48);
        if (v49)
        {
          v50 = *(_QWORD *)(v49 + 96);
          if (v50)
            WebCore::InspectorCanvasAgent::recordAction(v50, (WebCore::CanvasRenderingContext *)(v17 + 8), (const WTF::StringImpl *)v63, v65);
        }
      }
      if (v72)
      {
        v51 = v71;
        v71 = 0;
        if (v51)
        {
          if (*v51 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v51;
        }
      }
      if (v70)
      {
        v52 = v69;
        v69 = 0;
        if (v52)
        {
          if (*v52 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v52;
        }
      }
      if (v68)
      {
        v53 = (_DWORD *)v67[0];
        v67[0] = 0;
        if (v53)
        {
          if (*v53 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v53;
        }
      }
      v54 = (WTF::StringImpl *)v63[0];
      v63[0] = 0;
      if (v54)
      {
        if (*(_DWORD *)v54 == 2)
          goto LABEL_93;
        *(_DWORD *)v54 -= 2;
      }
      while (v76)
      {
LABEL_92:
        v54 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_93:
        WTF::StringImpl::destroy(v54, v48);
      }
    }
    LOBYTE(v63[0]) = 0;
    v64 = -1;
    v30 = v75;
    if (v75 == -1)
    {
      LOBYTE(v65[0]) = 0;
      v66 = -1;
    }
    else
    {
      v31 = off_1E333E5F8[v75];
      ((void (*)(_QWORD *, _QWORD *, _BYTE *))v31)(v67, v63, v74);
      v64 = v30;
      LOBYTE(v65[0]) = 0;
      v66 = -1;
      ((void (*)(_QWORD *, _QWORD *, _QWORD *))v31)(v67, v65, v63);
      v66 = v30;
    }
    if (!*(_BYTE *)(v17 + 364))
    {
      WebCore::WebGLRenderingContextBase::validateUniformMatrixParameters<float,JSC::GenericTypedArrayView<JSC::Float32Adaptor>>((WTF::StringImpl *)v17, (uint64_t)"uniformMatrix3fv", 17, v19, v28, (uint64_t)v65, 9, 0, (uint64_t)v67, 0);
      if (v68)
        (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD, _QWORD))(**(_QWORD **)(v17 + 88) + 968))(*(_QWORD *)(v17 + 88), *(unsigned int *)(v19 + 16), v28, v67[0], v67[1]);
      v30 = v66;
    }
    if (v30 != -1)
      ((void (*)(_QWORD *, _QWORD *))off_1E333E5E8[v30])(v67, v65);
    v66 = -1;
    if (v64 != -1)
      ((void (*)(_QWORD *, _QWORD *))off_1E333E5E8[v64])(v67, v63);
    v29 = v76;
    v25 = 10;
  }
  if (v29 != -1)
    ((void (*)(_QWORD *, _BYTE *))off_1E333E608[v29])(v67, v74);
  return (_BYTE *)v25;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_uniformMatrix4fv(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BOOL4 v21;
  char **v22;
  BOOL v23;
  uint64_t v25;
  unint64_t v26;
  double v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t (*v31)();
  JSValue v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  uint64_t v38;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  WebCore::InspectorCanvasAgent *v42;
  WebCore::InspectorInstrumentation *v43;
  WebCore::ScriptExecutionContext *v44;
  uint64_t v45;
  uint64_t v46;
  WebCore::InspectorInstrumentation *v47;
  WebCore::ScriptExecutionContext *v48;
  uint64_t v49;
  uint64_t v50;
  _DWORD *v51;
  _DWORD *v52;
  _DWORD *v53;
  WTF::StringImpl *v54;
  BOOL v55;
  BOOL v56;
  _BOOL4 v57;
  int v58;
  uint64_t v59;
  int *v60;
  int v61;
  JSC::VM *v62;
  _QWORD v63[2];
  int v64;
  _QWORD v65[2];
  int v66;
  _QWORD v67[2];
  char v68;
  _DWORD *v69;
  char v70;
  _DWORD *v71;
  char v72;
  char v73[8];
  _BYTE v74[16];
  int v75;
  int v76;
  uint64_t v77;

  v77 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v62 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v62, "WebGLRenderingContext", "uniformMatrix4fv");
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSWebGLRenderingContext::s_info && v14 != 0);
  }
  if (!v13)
    return WebCore::throwThisTypeError((int)this, (int)&v62, "WebGLRenderingContext", "uniformMatrix4fv");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v34.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v34);
  }
  v17 = *(_QWORD *)(v10 + 24);
  v18 = *((_QWORD *)a2 + 6);
  if ((v18 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v19 = 0;
  }
  else
  {
    v67[0] = v9;
    if ((v18 & 0xFFFE000000000002) != 0)
      goto LABEL_26;
    v20 = *(unsigned int *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C);
    v21 = *(_DWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x4C) != 0;
    v22 = (char **)(16 * v20);
    if ((_DWORD)v20)
      v23 = v22 == &WebCore::JSWebGLUniformLocation::s_info;
    else
      v23 = 1;
    if (!v23)
    {
      do
      {
        v22 = (char **)v22[2];
        v21 = v22 != 0;
      }
      while (v22 != &WebCore::JSWebGLUniformLocation::s_info && v22 != 0);
    }
    if (!v21 || (v19 = *(_QWORD *)(v18 + 24)) == 0)
    {
LABEL_26:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v67, 0, "location", 9, "WebGLRenderingContext", 22, a8, "uniformMatrix4fv", 17, "WebGLUniformLocation", 21);
      return 0;
    }
  }
  v26 = *((_QWORD *)a2 + 7);
  if (v26 >= 0xFFFE000000000000)
  {
    v55 = (_DWORD)v26 == 0;
    goto LABEL_112;
  }
  *(_QWORD *)&v27 = v26 - 0x2000000000000;
  if (v26 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v26 & 0xFFFE000000000002) != 0)
    {
      v28 = v26 == 7;
      goto LABEL_32;
    }
    v58 = *(unsigned __int8 *)(v26 + 5);
    if (v58 == 3)
    {
      v61 = *(_DWORD *)(v26 + 8);
    }
    else
    {
      if (v58 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v28 = 1;
          goto LABEL_32;
        }
        v55 = *(_QWORD *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
        goto LABEL_112;
      }
      v59 = *(_QWORD *)(v26 + 8);
      if ((v59 & 1) != 0)
        v60 = (int *)(v26 + 16);
      else
        v60 = (int *)(v59 + 4);
      v61 = *v60;
    }
    v55 = v61 == 0;
LABEL_112:
    v28 = !v55;
    goto LABEL_32;
  }
  v56 = v27 <= 0.0;
  v57 = v27 < 0.0;
  v28 = !v56 || v57;
LABEL_32:
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    return 0;
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLAllowSharedAdaptor<WebCore::IDLFloat32Array>,WebCore::IDLSequence<WebCore::IDLUnrestrictedFloat>>>::convert(this, *((JSC::JSGlobalObject **)a2 + 8), (uint64_t)v73);
  v29 = v76;
  if (v76)
  {
    v25 = 0;
  }
  else
  {
    if (*(_BYTE *)(v17 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v63[0] = v67[0];
      v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
      if (v35
        && (v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36)) != 0
        && (v38 = *(_QWORD *)(v37 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v38, (WTF::StringImpl *)(v17 + 8), v19, (uint64_t)v67);
      }
      else
      {
        LOBYTE(v67[0]) = 0;
        v68 = 0;
      }
      v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
      if (v39
        && (v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40)) != 0
        && (v42 = *(WebCore::InspectorCanvasAgent **)(v41 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v42, (WebCore::CanvasRenderingContext *)(v17 + 8), (WTF::JSONImpl::Value *)v28, (uint64_t)&v69);
      }
      else
      {
        LOBYTE(v69) = 0;
        v70 = 0;
      }
      if (v76)
        goto LABEL_92;
      v43 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
      if (v43
        && (v45 = WebCore::InspectorInstrumentation::instrumentingAgents(v43, v44)) != 0
        && (v46 = *(_QWORD *)(v45 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v46, v17 + 8, (uint64_t)v74);
      }
      else
      {
        LOBYTE(v71) = 0;
        v72 = 0;
      }
      v65[0] = v67;
      v65[1] = 3;
      v47 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v17 + 40) + 144))(*(_QWORD *)(v17 + 40));
      if (v47)
      {
        v49 = WebCore::InspectorInstrumentation::instrumentingAgents(v47, v48);
        if (v49)
        {
          v50 = *(_QWORD *)(v49 + 96);
          if (v50)
            WebCore::InspectorCanvasAgent::recordAction(v50, (WebCore::CanvasRenderingContext *)(v17 + 8), (const WTF::StringImpl *)v63, v65);
        }
      }
      if (v72)
      {
        v51 = v71;
        v71 = 0;
        if (v51)
        {
          if (*v51 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v51;
        }
      }
      if (v70)
      {
        v52 = v69;
        v69 = 0;
        if (v52)
        {
          if (*v52 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v52;
        }
      }
      if (v68)
      {
        v53 = (_DWORD *)v67[0];
        v67[0] = 0;
        if (v53)
        {
          if (*v53 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v53;
        }
      }
      v54 = (WTF::StringImpl *)v63[0];
      v63[0] = 0;
      if (v54)
      {
        if (*(_DWORD *)v54 == 2)
          goto LABEL_93;
        *(_DWORD *)v54 -= 2;
      }
      while (v76)
      {
LABEL_92:
        v54 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_93:
        WTF::StringImpl::destroy(v54, v48);
      }
    }
    LOBYTE(v63[0]) = 0;
    v64 = -1;
    v30 = v75;
    if (v75 == -1)
    {
      LOBYTE(v65[0]) = 0;
      v66 = -1;
    }
    else
    {
      v31 = off_1E333E5F8[v75];
      ((void (*)(_QWORD *, _QWORD *, _BYTE *))v31)(v67, v63, v74);
      v64 = v30;
      LOBYTE(v65[0]) = 0;
      v66 = -1;
      ((void (*)(_QWORD *, _QWORD *, _QWORD *))v31)(v67, v65, v63);
      v66 = v30;
    }
    if (!*(_BYTE *)(v17 + 364))
    {
      WebCore::WebGLRenderingContextBase::validateUniformMatrixParameters<float,JSC::GenericTypedArrayView<JSC::Float32Adaptor>>((WTF::StringImpl *)v17, (uint64_t)"uniformMatrix4fv", 17, v19, v28, (uint64_t)v65, 16, 0, (uint64_t)v67, 0);
      if (v68)
        (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD, _QWORD))(**(_QWORD **)(v17 + 88) + 976))(*(_QWORD *)(v17 + 88), *(unsigned int *)(v19 + 16), v28, v67[0], v67[1]);
      v30 = v66;
    }
    if (v30 != -1)
      ((void (*)(_QWORD *, _QWORD *))off_1E333E5E8[v30])(v67, v65);
    v66 = -1;
    if (v64 != -1)
      ((void (*)(_QWORD *, _QWORD *))off_1E333E5E8[v64])(v67, v63);
    v29 = v76;
    v25 = 10;
  }
  if (v29 != -1)
    ((void (*)(_QWORD *, _BYTE *))off_1E333E608[v29])(v67, v74);
  return (_BYTE *)v25;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_useProgram(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  WebCore::WebGLProgram *v18;
  uint64_t v19;
  _BOOL4 v20;
  char **v21;
  BOOL v22;
  JSValue v25;
  WebCore::InspectorInstrumentation *v26;
  WebCore::ScriptExecutionContext *v27;
  uint64_t v28;
  uint64_t v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  WTF::StringImpl *v35;
  JSC::VM *v36;
  _QWORD v37[2];
  WTF::StringImpl *v38;
  _QWORD v39[2];
  char v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v36 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v36, "WebGLRenderingContext", "useProgram");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v36, "WebGLRenderingContext", "useProgram");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v25.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v25);
  }
  else
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    if ((v17 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v18 = 0;
    }
    else
    {
      v39[0] = v9;
      if ((v17 & 0xFFFE000000000002) != 0)
        goto LABEL_26;
      v19 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
      v20 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
      v21 = (char **)(16 * v19);
      if ((_DWORD)v19)
        v22 = v21 == &WebCore::JSWebGLProgram::s_info;
      else
        v22 = 1;
      if (!v22)
      {
        do
        {
          v21 = (char **)v21[2];
          v20 = v21 != 0;
        }
        while (v21 != &WebCore::JSWebGLProgram::s_info && v21 != 0);
      }
      if (!v20 || (v18 = *(WebCore::WebGLProgram **)(v17 + 24)) == 0)
      {
LABEL_26:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v39, 0, "program", 8, "WebGLRenderingContext", 22, a8, "useProgram", 11, "WebGLProgram", 13);
        return 0;
      }
    }
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v26 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v26
        && (v28 = WebCore::InspectorInstrumentation::instrumentingAgents(v26, v27)) != 0
        && (v29 = *(_QWORD *)(v28 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v29, (WTF::StringImpl *)(v16 + 8), (uint64_t)v18, (uint64_t)v39);
      }
      else
      {
        LOBYTE(v39[0]) = 0;
        v40 = 0;
      }
      v37[0] = v39;
      v37[1] = 1;
      v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v30)
      {
        v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31);
        if (v32)
        {
          v33 = *(_QWORD *)(v32 + 96);
          if (v33)
            WebCore::InspectorCanvasAgent::recordAction(v33, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v38, v37);
        }
      }
      if (v40)
      {
        v34 = (_DWORD *)v39[0];
        v39[0] = 0;
        if (v34)
        {
          if (*v34 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v34;
        }
      }
      v35 = v38;
      v38 = 0;
      if (v35)
      {
        if (*(_DWORD *)v35 == 2)
          WTF::StringImpl::destroy(v35, v31);
        else
          *(_DWORD *)v35 -= 2;
      }
    }
    WebCore::WebGLRenderingContextBase::useProgram((WTF::StringImpl *)v16, v18);
    return 10;
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_validateProgram(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  WTF::StringImpl *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  JSValue v32;
  WebCore::InspectorInstrumentation *v33;
  WebCore::ScriptExecutionContext *v34;
  uint64_t v35;
  uint64_t v36;
  WebCore::InspectorInstrumentation *v37;
  WebCore::ScriptExecutionContext *v38;
  uint64_t v39;
  uint64_t v40;
  _DWORD *v41;
  WTF::StringImpl *v42;
  JSC::VM *v43;
  _QWORD v44[2];
  WTF::StringImpl *v45;
  _QWORD v46[2];
  char v47;
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v43 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v43, "WebGLRenderingContext", "validateProgram");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebGLRenderingContext::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v43, "WebGLRenderingContext", "validateProgram");
  if (*((_DWORD *)a2 + 8) != 1)
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    v46[0] = v9;
    if ((v17 & 0xFFFE000000000002) != 0)
      goto LABEL_24;
    v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v20 = (char **)(16 * v18);
    if ((_DWORD)v18)
      v21 = v20 == &WebCore::JSWebGLProgram::s_info;
    else
      v21 = 1;
    if (!v21)
    {
      do
      {
        v20 = (char **)v20[2];
        v19 = v20 != 0;
      }
      while (v20 != &WebCore::JSWebGLProgram::s_info && v20 != 0);
    }
    if (!v19 || (v24 = *(_QWORD *)(v17 + 24)) == 0)
    {
LABEL_24:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v46, 0, "program", 8, "WebGLRenderingContext", 22, a8, "validateProgram", 16, "WebGLProgram", 13);
      return 0;
    }
    if (*(_BYTE *)(v16 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v33 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v33
        && (v35 = WebCore::InspectorInstrumentation::instrumentingAgents(v33, v34)) != 0
        && (v36 = *(_QWORD *)(v35 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v36, (WTF::StringImpl *)(v16 + 8), v24, (uint64_t)v46);
      }
      else
      {
        LOBYTE(v46[0]) = 0;
        v47 = 0;
      }
      v44[0] = v46;
      v44[1] = 1;
      v37 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 40) + 144))(*(_QWORD *)(v16 + 40));
      if (v37)
      {
        v39 = WebCore::InspectorInstrumentation::instrumentingAgents(v37, v38);
        if (v39)
        {
          v40 = *(_QWORD *)(v39 + 96);
          if (v40)
            WebCore::InspectorCanvasAgent::recordAction(v40, (WebCore::CanvasRenderingContext *)(v16 + 8), (const WTF::StringImpl *)&v45, v44);
        }
      }
      if (v47)
      {
        v41 = (_DWORD *)v46[0];
        v46[0] = 0;
        if (v41)
        {
          if (*v41 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v41;
        }
      }
      v42 = v45;
      v45 = 0;
      if (v42)
      {
        if (*(_DWORD *)v42 == 2)
          WTF::StringImpl::destroy(v42, v38);
        else
          *(_DWORD *)v42 -= 2;
      }
    }
    if (*(_BYTE *)(v16 + 364))
      return 10;
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      v26 = *(_QWORD *)(v25 + 8);
      if (v26)
        v25 = v26 - 8;
      else
        v25 = 0;
    }
    if (v25 == v16)
    {
      v31 = *(unsigned int *)(v24 + 24);
      if ((_DWORD)v31)
      {
        (*(void (**)(_QWORD, uint64_t, JSC::CallFrame *))(**(_QWORD **)(v16 + 88) + 992))(*(_QWORD *)(v16 + 88), v31, a3);
        return 10;
      }
      v27 = "attempt to use a deleted object";
      v28 = (WTF::StringImpl *)v16;
      v29 = 1281;
      v30 = 32;
    }
    else
    {
      v27 = "object does not belong to this context";
      v28 = (WTF::StringImpl *)v16;
      v29 = 1282;
      v30 = 39;
    }
    WebCore::WebGLRenderingContextBase::synthesizeGLError(v28, v29, (uint64_t)"validateProgram", 16, (uint64_t)v27, v30);
    return 10;
  }
  v32.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
  return JSC::VM::throwException(v9, this, v32);
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_vertexAttrib1f(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  JSC::VM *v14;
  double v15;
  float v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  JSValue v20;
  int v21;
  WebCore::InspectorInstrumentation *v22;
  WebCore::ScriptExecutionContext *v23;
  uint64_t v24;
  WebCore::InspectorCanvasAgent *v25;
  WebCore::InspectorInstrumentation *v26;
  WebCore::ScriptExecutionContext *v27;
  uint64_t v28;
  WebCore::InspectorCanvasAgent *v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  _DWORD *v35;
  WTF::StringImpl *v36;
  double v37;
  JSC::VM *v38;
  _QWORD v39[2];
  WTF::StringImpl *v40;
  _DWORD v41[2];
  _QWORD v42[2];
  char v43;
  _DWORD *v44;
  char v45;
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v38 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v38, "WebGLRenderingContext", "vertexAttrib1f");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v38, "WebGLRenderingContext", "vertexAttrib1f");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v20);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v41);
  if (v41[1])
    return 0;
  v13 = *((_QWORD *)a2 + 7);
  v42[0] = v13;
  v14 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v13 >= 0xFFFE000000000000)
  {
    v15 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v42, this);
    v15 = v37;
  }
  else
  {
    *(_QWORD *)&v15 = v13 - 0x2000000000000;
  }
  if (*((_DWORD *)v14 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v14) & 1) != 0)
    return 0;
  if (v15 < -3.40282347e38)
  {
    *(float *)&v21 = -INFINITY;
  }
  else
  {
    if (v15 <= 3.40282347e38)
    {
      v16 = v15;
      goto LABEL_21;
    }
    *(float *)&v21 = INFINITY;
  }
  v16 = *(float *)&v21;
LABEL_21:
  if (*(_BYTE *)(v12 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v17 = v41[0];
    v22 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v22
      && (v24 = WebCore::InspectorInstrumentation::instrumentingAgents(v22, v23)) != 0
      && (v25 = *(WebCore::InspectorCanvasAgent **)(v24 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v25, (WebCore::CanvasRenderingContext *)(v12 + 8), v17, (uint64_t)v42);
    }
    else
    {
      LOBYTE(v42[0]) = 0;
      v43 = 0;
    }
    v26 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v26
      && (v28 = WebCore::InspectorInstrumentation::instrumentingAgents(v26, v27)) != 0
      && (v29 = *(WebCore::InspectorCanvasAgent **)(v28 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v29, (WebCore::CanvasRenderingContext *)(v12 + 8), v16, (uint64_t)&v44);
    }
    else
    {
      LOBYTE(v44) = 0;
      v45 = 0;
    }
    v39[0] = v42;
    v39[1] = 2;
    v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v30)
    {
      v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31);
      if (v32)
      {
        v33 = *(_QWORD *)(v32 + 96);
        if (v33)
          WebCore::InspectorCanvasAgent::recordAction(v33, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v40, v39);
      }
    }
    if (v45)
    {
      v34 = v44;
      v44 = 0;
      if (v34)
      {
        if (*v34 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v34;
      }
    }
    if (v43)
    {
      v35 = (_DWORD *)v42[0];
      v42[0] = 0;
      if (v35)
      {
        if (*v35 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v35;
      }
    }
    v36 = v40;
    v40 = 0;
    if (v36)
    {
      if (*(_DWORD *)v36 == 2)
        WTF::StringImpl::destroy(v36, v31);
      else
        *(_DWORD *)v36 -= 2;
    }
  }
  else
  {
    v17 = v41[0];
  }
  if (*(_BYTE *)(v12 + 364))
    return 10;
  if (*(_DWORD *)(v12 + 164) <= v17)
  {
    WebCore::WebGLRenderingContextBase::synthesizeGLError((WTF::StringImpl *)v12, 1281, (uint64_t)"vertexAttrib1f", 15, (uint64_t)"index out of range", 19);
    return 10;
  }
  result = (*(uint64_t (**)(_QWORD, uint64_t, float))(**(_QWORD **)(v12 + 88) + 1000))(*(_QWORD *)(v12 + 88), v17, v16);
  if (*(_DWORD *)(v12 + 164) > v17)
  {
    v19 = *(_QWORD *)(v12 + 152) + 20 * v17;
    *(_DWORD *)v19 = 5126;
    *(float *)(v19 + 4) = v16;
    *(_QWORD *)(v19 + 8) = 0;
    *(_DWORD *)(v19 + 16) = 1065353216;
    return 10;
  }
  __break(0xC471u);
  return result;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_vertexAttrib2f(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  JSC::VM *v14;
  double v15;
  float v16;
  unint64_t v17;
  JSC::VM *v18;
  double v19;
  float v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  JSValue v24;
  int v25;
  int v26;
  WebCore::InspectorInstrumentation *v27;
  WebCore::ScriptExecutionContext *v28;
  uint64_t v29;
  WebCore::InspectorCanvasAgent *v30;
  WebCore::InspectorInstrumentation *v31;
  WebCore::ScriptExecutionContext *v32;
  uint64_t v33;
  WebCore::InspectorCanvasAgent *v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  WebCore::InspectorCanvasAgent *v38;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  uint64_t v42;
  _DWORD *v43;
  _DWORD *v44;
  _DWORD *v45;
  WTF::StringImpl *v46;
  JSC::VM *v47;
  double v48;
  double v49;
  JSC::VM *v50;
  _QWORD v51[2];
  WTF::StringImpl *v52;
  _DWORD v53[2];
  _QWORD v54[2];
  char v55;
  _DWORD *v56;
  char v57;
  _DWORD *v58;
  char v59;
  uint64_t v60;

  v60 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v50 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v50, "WebGLRenderingContext", "vertexAttrib2f");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v50, "WebGLRenderingContext", "vertexAttrib2f");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v24.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v24);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v53);
  if (v53[1])
    return 0;
  v13 = *((_QWORD *)a2 + 7);
  v54[0] = v13;
  v14 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v13 >= 0xFFFE000000000000)
  {
    v15 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v47 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v54, this);
    v14 = v47;
    v15 = v48;
  }
  else
  {
    *(_QWORD *)&v15 = v13 - 0x2000000000000;
  }
  if (*((_DWORD *)v14 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v14) & 1) != 0)
    return 0;
  if (v15 < -3.40282347e38)
  {
    *(float *)&v25 = -INFINITY;
  }
  else
  {
    if (v15 <= 3.40282347e38)
    {
      v16 = v15;
      goto LABEL_21;
    }
    *(float *)&v25 = INFINITY;
  }
  v16 = *(float *)&v25;
LABEL_21:
  v17 = *((_QWORD *)a2 + 8);
  v54[0] = v17;
  v18 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v17 >= 0xFFFE000000000000)
  {
    v19 = (double)(int)v17;
  }
  else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v54, this);
    v19 = v49;
  }
  else
  {
    *(_QWORD *)&v19 = v17 - 0x2000000000000;
  }
  if (*((_DWORD *)v18 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v18) & 1) != 0)
    return 0;
  if (v19 < -3.40282347e38)
  {
    *(float *)&v26 = -INFINITY;
  }
  else
  {
    if (v19 <= 3.40282347e38)
    {
      v20 = v19;
      goto LABEL_28;
    }
    *(float *)&v26 = INFINITY;
  }
  v20 = *(float *)&v26;
LABEL_28:
  if (*(_BYTE *)(v12 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v21 = v53[0];
    v27 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v27
      && (v29 = WebCore::InspectorInstrumentation::instrumentingAgents(v27, v28)) != 0
      && (v30 = *(WebCore::InspectorCanvasAgent **)(v29 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v30, (WebCore::CanvasRenderingContext *)(v12 + 8), v21, (uint64_t)v54);
    }
    else
    {
      LOBYTE(v54[0]) = 0;
      v55 = 0;
    }
    v31 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v31
      && (v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v31, v32)) != 0
      && (v34 = *(WebCore::InspectorCanvasAgent **)(v33 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v34, (WebCore::CanvasRenderingContext *)(v12 + 8), v16, (uint64_t)&v56);
    }
    else
    {
      LOBYTE(v56) = 0;
      v57 = 0;
    }
    v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v35
      && (v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36)) != 0
      && (v38 = *(WebCore::InspectorCanvasAgent **)(v37 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v38, (WebCore::CanvasRenderingContext *)(v12 + 8), v20, (uint64_t)&v58);
    }
    else
    {
      LOBYTE(v58) = 0;
      v59 = 0;
    }
    v51[0] = v54;
    v51[1] = 3;
    v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v39)
    {
      v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40);
      if (v41)
      {
        v42 = *(_QWORD *)(v41 + 96);
        if (v42)
          WebCore::InspectorCanvasAgent::recordAction(v42, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v52, v51);
      }
    }
    if (v59)
    {
      v43 = v58;
      v58 = 0;
      if (v43)
      {
        if (*v43 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v43;
      }
    }
    if (v57)
    {
      v44 = v56;
      v56 = 0;
      if (v44)
      {
        if (*v44 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v44;
      }
    }
    if (v55)
    {
      v45 = (_DWORD *)v54[0];
      v54[0] = 0;
      if (v45)
      {
        if (*v45 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v45;
      }
    }
    v46 = v52;
    v52 = 0;
    if (v46)
    {
      if (*(_DWORD *)v46 == 2)
        WTF::StringImpl::destroy(v46, v40);
      else
        *(_DWORD *)v46 -= 2;
    }
  }
  else
  {
    v21 = v53[0];
  }
  if (*(_BYTE *)(v12 + 364))
    return 10;
  if (*(_DWORD *)(v12 + 164) <= v21)
  {
    WebCore::WebGLRenderingContextBase::synthesizeGLError((WTF::StringImpl *)v12, 1281, (uint64_t)"vertexAttrib2f", 15, (uint64_t)"index out of range", 19);
    return 10;
  }
  result = (*(uint64_t (**)(_QWORD, uint64_t, float, float))(**(_QWORD **)(v12 + 88) + 1016))(*(_QWORD *)(v12 + 88), v21, v16, v20);
  if (*(_DWORD *)(v12 + 164) > v21)
  {
    v23 = *(_QWORD *)(v12 + 152) + 20 * v21;
    *(_DWORD *)v23 = 5126;
    *(float *)(v23 + 4) = v16;
    *(float *)(v23 + 8) = v20;
    *(_QWORD *)(v23 + 12) = 0x3F80000000000000;
    return 10;
  }
  __break(0xC471u);
  return result;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_vertexAttrib3f(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  JSC::VM *v14;
  double v15;
  float v16;
  unint64_t v17;
  JSC::VM *v18;
  double v19;
  float v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  float v24;
  unsigned int v25;
  uint64_t result;
  uint64_t v27;
  JSValue v28;
  int v29;
  int v30;
  unsigned int v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  WebCore::InspectorCanvasAgent *v35;
  WebCore::InspectorInstrumentation *v36;
  WebCore::ScriptExecutionContext *v37;
  uint64_t v38;
  WebCore::InspectorCanvasAgent *v39;
  WebCore::InspectorInstrumentation *v40;
  WebCore::ScriptExecutionContext *v41;
  uint64_t v42;
  WebCore::InspectorCanvasAgent *v43;
  WebCore::InspectorInstrumentation *v44;
  WebCore::ScriptExecutionContext *v45;
  uint64_t v46;
  WebCore::InspectorCanvasAgent *v47;
  WebCore::InspectorInstrumentation *v48;
  WebCore::ScriptExecutionContext *v49;
  uint64_t v50;
  uint64_t v51;
  _DWORD *v52;
  _DWORD *v53;
  _DWORD *v54;
  _DWORD *v55;
  WTF::StringImpl *v56;
  JSC::VM *v57;
  double v58;
  JSC::VM *v59;
  double v60;
  double v61;
  JSC::VM *v62;
  _QWORD v63[2];
  WTF::StringImpl *v64;
  _DWORD v65[2];
  _QWORD v66[2];
  char v67;
  _DWORD *v68;
  char v69;
  _DWORD *v70;
  char v71;
  _DWORD *v72;
  char v73;
  uint64_t v74;

  v74 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v62 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v62, "WebGLRenderingContext", "vertexAttrib3f");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v62, "WebGLRenderingContext", "vertexAttrib3f");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v28.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v28);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v65);
  if (v65[1])
    return 0;
  v13 = *((_QWORD *)a2 + 7);
  v66[0] = v13;
  v14 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v13 >= 0xFFFE000000000000)
  {
    v15 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v57 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v66, this);
    v14 = v57;
    v15 = v58;
  }
  else
  {
    *(_QWORD *)&v15 = v13 - 0x2000000000000;
  }
  if (*((_DWORD *)v14 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v14) & 1) != 0)
    return 0;
  if (v15 < -3.40282347e38)
  {
    *(float *)&v29 = -INFINITY;
  }
  else
  {
    if (v15 <= 3.40282347e38)
    {
      v16 = v15;
      goto LABEL_21;
    }
    *(float *)&v29 = INFINITY;
  }
  v16 = *(float *)&v29;
LABEL_21:
  v17 = *((_QWORD *)a2 + 8);
  v66[0] = v17;
  v18 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v17 >= 0xFFFE000000000000)
  {
    v19 = (double)(int)v17;
  }
  else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v59 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v66, this);
    v18 = v59;
    v19 = v60;
  }
  else
  {
    *(_QWORD *)&v19 = v17 - 0x2000000000000;
  }
  if (*((_DWORD *)v18 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v18) & 1) != 0)
    return 0;
  if (v19 < -3.40282347e38)
  {
    *(float *)&v30 = -INFINITY;
  }
  else
  {
    if (v19 <= 3.40282347e38)
    {
      v20 = v19;
      goto LABEL_28;
    }
    *(float *)&v30 = INFINITY;
  }
  v20 = *(float *)&v30;
LABEL_28:
  v21 = *((_QWORD *)a2 + 9);
  v66[0] = v21;
  v22 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v21 >= 0xFFFE000000000000)
  {
    v23 = (double)(int)v21;
  }
  else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v66, this);
    v23 = v61;
  }
  else
  {
    *(_QWORD *)&v23 = v21 - 0x2000000000000;
  }
  if (*((_DWORD *)v22 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v22) & 1) != 0)
    return 0;
  if (v23 < -3.40282347e38)
  {
    v24 = -INFINITY;
  }
  else if (v23 <= 3.40282347e38)
  {
    v24 = v23;
  }
  else
  {
    v24 = INFINITY;
  }
  if (*(_BYTE *)(v12 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v64 = (WTF::StringImpl *)v66[0];
    v31 = v65[0];
    v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v32
      && (v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33)) != 0
      && (v35 = *(WebCore::InspectorCanvasAgent **)(v34 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v35, (WebCore::CanvasRenderingContext *)(v12 + 8), v31, (uint64_t)v66);
    }
    else
    {
      LOBYTE(v66[0]) = 0;
      v67 = 0;
    }
    v36 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v36
      && (v38 = WebCore::InspectorInstrumentation::instrumentingAgents(v36, v37)) != 0
      && (v39 = *(WebCore::InspectorCanvasAgent **)(v38 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v39, (WebCore::CanvasRenderingContext *)(v12 + 8), v16, (uint64_t)&v68);
    }
    else
    {
      LOBYTE(v68) = 0;
      v69 = 0;
    }
    v40 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v40
      && (v42 = WebCore::InspectorInstrumentation::instrumentingAgents(v40, v41)) != 0
      && (v43 = *(WebCore::InspectorCanvasAgent **)(v42 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v43, (WebCore::CanvasRenderingContext *)(v12 + 8), v20, (uint64_t)&v70);
    }
    else
    {
      LOBYTE(v70) = 0;
      v71 = 0;
    }
    v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v44
      && (v46 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, v45)) != 0
      && (v47 = *(WebCore::InspectorCanvasAgent **)(v46 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v47, (WebCore::CanvasRenderingContext *)(v12 + 8), v24, (uint64_t)&v72);
    }
    else
    {
      LOBYTE(v72) = 0;
      v73 = 0;
    }
    v63[0] = v66;
    v63[1] = 4;
    v48 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v48)
    {
      v50 = WebCore::InspectorInstrumentation::instrumentingAgents(v48, v49);
      if (v50)
      {
        v51 = *(_QWORD *)(v50 + 96);
        if (v51)
          WebCore::InspectorCanvasAgent::recordAction(v51, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v64, v63);
      }
    }
    if (v73)
    {
      v52 = v72;
      v72 = 0;
      if (v52)
      {
        if (*v52 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v52;
      }
    }
    if (v71)
    {
      v53 = v70;
      v70 = 0;
      if (v53)
      {
        if (*v53 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v53;
      }
    }
    if (v69)
    {
      v54 = v68;
      v68 = 0;
      if (v54)
      {
        if (*v54 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v54;
      }
    }
    if (v67)
    {
      v55 = (_DWORD *)v66[0];
      v66[0] = 0;
      if (v55)
      {
        if (*v55 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v55;
      }
    }
    v56 = v64;
    v64 = 0;
    if (v56)
    {
      if (*(_DWORD *)v56 == 2)
        WTF::StringImpl::destroy(v56, v49);
      else
        *(_DWORD *)v56 -= 2;
    }
  }
  if (*(_BYTE *)(v12 + 364))
    return 10;
  v25 = v65[0];
  if (*(_DWORD *)(v12 + 164) <= v65[0])
  {
    WebCore::WebGLRenderingContextBase::synthesizeGLError((WTF::StringImpl *)v12, 1281, (uint64_t)"vertexAttrib3f", 15, (uint64_t)"index out of range", 19);
    return 10;
  }
  result = (*(uint64_t (**)(_QWORD, _QWORD, float, float, float))(**(_QWORD **)(v12 + 88) + 1032))(*(_QWORD *)(v12 + 88), v65[0], v16, v20, v24);
  if (*(_DWORD *)(v12 + 164) > v25)
  {
    v27 = *(_QWORD *)(v12 + 152) + 20 * v25;
    *(_DWORD *)v27 = 5126;
    *(float *)(v27 + 4) = v16;
    *(float *)(v27 + 8) = v20;
    *(float *)(v27 + 12) = v24;
    *(_DWORD *)(v27 + 16) = 1065353216;
    return 10;
  }
  __break(0xC471u);
  return result;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_vertexAttrib4f(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  JSC::VM *v14;
  double v15;
  float v16;
  unint64_t v17;
  JSC::VM *v18;
  double v19;
  float v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  float v24;
  unint64_t v25;
  JSC::VM *v26;
  double v27;
  float v28;
  unsigned int v29;
  uint64_t result;
  uint64_t v31;
  JSValue v32;
  int v33;
  int v34;
  int v35;
  unsigned int v36;
  WebCore::InspectorInstrumentation *v37;
  WebCore::ScriptExecutionContext *v38;
  uint64_t v39;
  WebCore::InspectorCanvasAgent *v40;
  WebCore::InspectorInstrumentation *v41;
  WebCore::ScriptExecutionContext *v42;
  uint64_t v43;
  WebCore::InspectorCanvasAgent *v44;
  WebCore::InspectorInstrumentation *v45;
  WebCore::ScriptExecutionContext *v46;
  uint64_t v47;
  WebCore::InspectorCanvasAgent *v48;
  WebCore::InspectorInstrumentation *v49;
  WebCore::ScriptExecutionContext *v50;
  uint64_t v51;
  WebCore::InspectorCanvasAgent *v52;
  WebCore::InspectorInstrumentation *v53;
  WebCore::ScriptExecutionContext *v54;
  uint64_t v55;
  WebCore::InspectorCanvasAgent *v56;
  WebCore::InspectorInstrumentation *v57;
  WebCore::ScriptExecutionContext *v58;
  uint64_t v59;
  uint64_t v60;
  _DWORD *v61;
  _DWORD *v62;
  _DWORD *v63;
  _DWORD *v64;
  _DWORD *v65;
  WTF::StringImpl *v66;
  JSC::VM *v67;
  double v68;
  JSC::VM *v69;
  double v70;
  JSC::VM *v71;
  double v72;
  double v73;
  JSC::VM *v74;
  _QWORD v75[2];
  WTF::StringImpl *v76;
  _DWORD v77[2];
  _QWORD v78[2];
  char v79;
  _DWORD *v80;
  char v81;
  _DWORD *v82;
  char v83;
  _DWORD *v84;
  char v85;
  _DWORD *v86;
  char v87;
  uint64_t v88;

  v88 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v74 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v74, "WebGLRenderingContext", "vertexAttrib4f");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v74, "WebGLRenderingContext", "vertexAttrib4f");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 4)
  {
    v32.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v32);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v77);
  if (v77[1])
    return 0;
  v13 = *((_QWORD *)a2 + 7);
  v78[0] = v13;
  v14 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v13 >= 0xFFFE000000000000)
  {
    v15 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v67 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v78, this);
    v14 = v67;
    v15 = v68;
  }
  else
  {
    *(_QWORD *)&v15 = v13 - 0x2000000000000;
  }
  if (*((_DWORD *)v14 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v14) & 1) != 0)
    return 0;
  if (v15 < -3.40282347e38)
  {
    *(float *)&v33 = -INFINITY;
  }
  else
  {
    if (v15 <= 3.40282347e38)
    {
      v16 = v15;
      goto LABEL_21;
    }
    *(float *)&v33 = INFINITY;
  }
  v16 = *(float *)&v33;
LABEL_21:
  v17 = *((_QWORD *)a2 + 8);
  v78[0] = v17;
  v18 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v17 >= 0xFFFE000000000000)
  {
    v19 = (double)(int)v17;
  }
  else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v69 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v78, this);
    v18 = v69;
    v19 = v70;
  }
  else
  {
    *(_QWORD *)&v19 = v17 - 0x2000000000000;
  }
  if (*((_DWORD *)v18 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v18) & 1) != 0)
    return 0;
  if (v19 < -3.40282347e38)
  {
    *(float *)&v34 = -INFINITY;
  }
  else
  {
    if (v19 <= 3.40282347e38)
    {
      v20 = v19;
      goto LABEL_28;
    }
    *(float *)&v34 = INFINITY;
  }
  v20 = *(float *)&v34;
LABEL_28:
  v21 = *((_QWORD *)a2 + 9);
  v78[0] = v21;
  v22 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v21 >= 0xFFFE000000000000)
  {
    v23 = (double)(int)v21;
  }
  else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v71 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v78, this);
    v22 = v71;
    v23 = v72;
  }
  else
  {
    *(_QWORD *)&v23 = v21 - 0x2000000000000;
  }
  if (*((_DWORD *)v22 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v22) & 1) != 0)
    return 0;
  if (v23 < -3.40282347e38)
  {
    *(float *)&v35 = -INFINITY;
  }
  else
  {
    if (v23 <= 3.40282347e38)
    {
      v24 = v23;
      goto LABEL_35;
    }
    *(float *)&v35 = INFINITY;
  }
  v24 = *(float *)&v35;
LABEL_35:
  v25 = *((_QWORD *)a2 + 10);
  v78[0] = v25;
  v26 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v25 >= 0xFFFE000000000000)
  {
    v27 = (double)(int)v25;
  }
  else if (v25 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v78, this);
    v27 = v73;
  }
  else
  {
    *(_QWORD *)&v27 = v25 - 0x2000000000000;
  }
  if (*((_DWORD *)v26 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v26) & 1) != 0)
    return 0;
  if (v27 < -3.40282347e38)
  {
    v28 = -INFINITY;
  }
  else if (v27 <= 3.40282347e38)
  {
    v28 = v27;
  }
  else
  {
    v28 = INFINITY;
  }
  if (*(_BYTE *)(v12 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v76 = (WTF::StringImpl *)v78[0];
    v36 = v77[0];
    v37 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v37
      && (v39 = WebCore::InspectorInstrumentation::instrumentingAgents(v37, v38)) != 0
      && (v40 = *(WebCore::InspectorCanvasAgent **)(v39 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v40, (WebCore::CanvasRenderingContext *)(v12 + 8), v36, (uint64_t)v78);
    }
    else
    {
      LOBYTE(v78[0]) = 0;
      v79 = 0;
    }
    v41 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v41
      && (v43 = WebCore::InspectorInstrumentation::instrumentingAgents(v41, v42)) != 0
      && (v44 = *(WebCore::InspectorCanvasAgent **)(v43 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v44, (WebCore::CanvasRenderingContext *)(v12 + 8), v16, (uint64_t)&v80);
    }
    else
    {
      LOBYTE(v80) = 0;
      v81 = 0;
    }
    v45 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v45
      && (v47 = WebCore::InspectorInstrumentation::instrumentingAgents(v45, v46)) != 0
      && (v48 = *(WebCore::InspectorCanvasAgent **)(v47 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v48, (WebCore::CanvasRenderingContext *)(v12 + 8), v20, (uint64_t)&v82);
    }
    else
    {
      LOBYTE(v82) = 0;
      v83 = 0;
    }
    v49 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v49
      && (v51 = WebCore::InspectorInstrumentation::instrumentingAgents(v49, v50)) != 0
      && (v52 = *(WebCore::InspectorCanvasAgent **)(v51 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v52, (WebCore::CanvasRenderingContext *)(v12 + 8), v24, (uint64_t)&v84);
    }
    else
    {
      LOBYTE(v84) = 0;
      v85 = 0;
    }
    v53 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v53
      && (v55 = WebCore::InspectorInstrumentation::instrumentingAgents(v53, v54)) != 0
      && (v56 = *(WebCore::InspectorCanvasAgent **)(v55 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v56, (WebCore::CanvasRenderingContext *)(v12 + 8), v28, (uint64_t)&v86);
    }
    else
    {
      LOBYTE(v86) = 0;
      v87 = 0;
    }
    v75[0] = v78;
    v75[1] = 5;
    v57 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v57)
    {
      v59 = WebCore::InspectorInstrumentation::instrumentingAgents(v57, v58);
      if (v59)
      {
        v60 = *(_QWORD *)(v59 + 96);
        if (v60)
          WebCore::InspectorCanvasAgent::recordAction(v60, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v76, v75);
      }
    }
    if (v87)
    {
      v61 = v86;
      v86 = 0;
      if (v61)
      {
        if (*v61 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v61;
      }
    }
    if (v85)
    {
      v62 = v84;
      v84 = 0;
      if (v62)
      {
        if (*v62 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v62;
      }
    }
    if (v83)
    {
      v63 = v82;
      v82 = 0;
      if (v63)
      {
        if (*v63 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v63;
      }
    }
    if (v81)
    {
      v64 = v80;
      v80 = 0;
      if (v64)
      {
        if (*v64 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v64;
      }
    }
    if (v79)
    {
      v65 = (_DWORD *)v78[0];
      v78[0] = 0;
      if (v65)
      {
        if (*v65 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v65;
      }
    }
    v66 = v76;
    v76 = 0;
    if (v66)
    {
      if (*(_DWORD *)v66 == 2)
        WTF::StringImpl::destroy(v66, v58);
      else
        *(_DWORD *)v66 -= 2;
    }
  }
  if (*(_BYTE *)(v12 + 364))
    return 10;
  v29 = v77[0];
  if (*(_DWORD *)(v12 + 164) <= v77[0])
  {
    WebCore::WebGLRenderingContextBase::synthesizeGLError((WTF::StringImpl *)v12, 1281, (uint64_t)"vertexAttrib4f", 15, (uint64_t)"index out of range", 19);
    return 10;
  }
  result = (*(uint64_t (**)(_QWORD, _QWORD, float, float, float, float))(**(_QWORD **)(v12 + 88) + 1048))(*(_QWORD *)(v12 + 88), v77[0], v16, v20, v24, v28);
  if (*(_DWORD *)(v12 + 164) > v29)
  {
    v31 = *(_QWORD *)(v12 + 152) + 20 * v29;
    *(_DWORD *)v31 = 5126;
    *(float *)(v31 + 4) = v16;
    *(float *)(v31 + 8) = v20;
    *(float *)(v31 + 12) = v24;
    *(float *)(v31 + 16) = v28;
    return 10;
  }
  __break(0xC471u);
  return result;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_vertexAttrib1fv(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  int v13;
  unsigned int v14;
  int v15;
  uint64_t (*v16)();
  uint64_t v17;
  JSValue v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  WebCore::InspectorCanvasAgent *v24;
  WebCore::InspectorInstrumentation *v25;
  WebCore::ScriptExecutionContext *v26;
  uint64_t v27;
  uint64_t v28;
  WebCore::InspectorInstrumentation *v29;
  WebCore::ScriptExecutionContext *v30;
  uint64_t v31;
  uint64_t v32;
  _DWORD *v33;
  _DWORD *v34;
  WTF::StringImpl *v35;
  JSC::VM *v36;
  WTF::StringImpl *v37;
  _DWORD v38[2];
  _QWORD v39[2];
  int v40;
  _QWORD v41[2];
  int v42;
  _DWORD *v43;
  char v44;
  char v45[8];
  _BYTE v46[16];
  int v47;
  int v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v36 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "WebGLRenderingContext", "vertexAttrib1fv");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "WebGLRenderingContext", "vertexAttrib1fv");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v20);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v38);
  if (v38[1])
    return 0;
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLAllowSharedAdaptor<WebCore::IDLFloat32Array>,WebCore::IDLSequence<WebCore::IDLUnrestrictedFloat>>>::convert(this, *((JSC::JSGlobalObject **)a2 + 7), (uint64_t)v45);
  v13 = v48;
  if (v48)
  {
    v17 = 0;
  }
  else
  {
    if (*(_BYTE *)(v12 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v14 = v38[0];
      v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
      if (v21
        && (v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22)) != 0
        && (v24 = *(WebCore::InspectorCanvasAgent **)(v23 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v24, (WebCore::CanvasRenderingContext *)(v12 + 8), v14, (uint64_t)v41);
      }
      else
      {
        LOBYTE(v41[0]) = 0;
        LOBYTE(v42) = 0;
      }
      if (v48)
        goto LABEL_60;
      v25 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
      if (v25
        && (v27 = WebCore::InspectorInstrumentation::instrumentingAgents(v25, v26)) != 0
        && (v28 = *(_QWORD *)(v27 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v28, v12 + 8, (uint64_t)v46);
      }
      else
      {
        LOBYTE(v43) = 0;
        v44 = 0;
      }
      v39[0] = v41;
      v39[1] = 2;
      v29 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
      if (v29)
      {
        v31 = WebCore::InspectorInstrumentation::instrumentingAgents(v29, v30);
        if (v31)
        {
          v32 = *(_QWORD *)(v31 + 96);
          if (v32)
            WebCore::InspectorCanvasAgent::recordAction(v32, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v37, v39);
        }
      }
      if (v44)
      {
        v33 = v43;
        v43 = 0;
        if (v33)
        {
          if (*v33 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v33;
        }
      }
      if ((_BYTE)v42)
      {
        v34 = (_DWORD *)v41[0];
        v41[0] = 0;
        if (v34)
        {
          if (*v34 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v34;
        }
      }
      v35 = v37;
      v37 = 0;
      if (v35)
      {
        if (*(_DWORD *)v35 == 2)
          goto LABEL_61;
        *(_DWORD *)v35 -= 2;
      }
      while (v48)
      {
LABEL_60:
        v35 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_61:
        WTF::StringImpl::destroy(v35, v30);
      }
    }
    else
    {
      v14 = v38[0];
    }
    LOBYTE(v39[0]) = 0;
    v40 = -1;
    v15 = v47;
    if (v47 == -1)
    {
      LOBYTE(v41[0]) = 0;
      v42 = -1;
    }
    else
    {
      v16 = off_1E333E5F8[v47];
      ((void (*)(WTF::StringImpl **, _QWORD *, _BYTE *))v16)(&v37, v39, v46);
      v40 = v15;
      LOBYTE(v41[0]) = 0;
      v42 = -1;
      ((void (*)(WTF::StringImpl **, _QWORD *, _QWORD *))v16)(&v37, v41, v39);
      v42 = v15;
    }
    WebCore::WebGLRenderingContextBase::vertexAttribfvImpl((WTF::StringImpl *)v12, (uint64_t)"vertexAttrib1fv", 16, v14, (uint64_t)v41, 1);
    if (v42 != -1)
      ((void (*)(WTF::StringImpl **, _QWORD *))off_1E333E5E8[v42])(&v37, v41);
    v42 = -1;
    if (v40 != -1)
      ((void (*)(WTF::StringImpl **, _QWORD *))off_1E333E5E8[v40])(&v37, v39);
    v13 = v48;
    v17 = 10;
  }
  if (v13 != -1)
    ((void (*)(_QWORD *, _BYTE *))off_1E333E608[v13])(v41, v46);
  return (_BYTE *)v17;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_vertexAttrib2fv(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  int v13;
  unsigned int v14;
  int v15;
  uint64_t (*v16)();
  uint64_t v17;
  JSValue v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  WebCore::InspectorCanvasAgent *v24;
  WebCore::InspectorInstrumentation *v25;
  WebCore::ScriptExecutionContext *v26;
  uint64_t v27;
  uint64_t v28;
  WebCore::InspectorInstrumentation *v29;
  WebCore::ScriptExecutionContext *v30;
  uint64_t v31;
  uint64_t v32;
  _DWORD *v33;
  _DWORD *v34;
  WTF::StringImpl *v35;
  JSC::VM *v36;
  WTF::StringImpl *v37;
  _DWORD v38[2];
  _QWORD v39[2];
  int v40;
  _QWORD v41[2];
  int v42;
  _DWORD *v43;
  char v44;
  char v45[8];
  _BYTE v46[16];
  int v47;
  int v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v36 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "WebGLRenderingContext", "vertexAttrib2fv");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "WebGLRenderingContext", "vertexAttrib2fv");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v20);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v38);
  if (v38[1])
    return 0;
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLAllowSharedAdaptor<WebCore::IDLFloat32Array>,WebCore::IDLSequence<WebCore::IDLUnrestrictedFloat>>>::convert(this, *((JSC::JSGlobalObject **)a2 + 7), (uint64_t)v45);
  v13 = v48;
  if (v48)
  {
    v17 = 0;
  }
  else
  {
    if (*(_BYTE *)(v12 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v14 = v38[0];
      v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
      if (v21
        && (v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22)) != 0
        && (v24 = *(WebCore::InspectorCanvasAgent **)(v23 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v24, (WebCore::CanvasRenderingContext *)(v12 + 8), v14, (uint64_t)v41);
      }
      else
      {
        LOBYTE(v41[0]) = 0;
        LOBYTE(v42) = 0;
      }
      if (v48)
        goto LABEL_60;
      v25 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
      if (v25
        && (v27 = WebCore::InspectorInstrumentation::instrumentingAgents(v25, v26)) != 0
        && (v28 = *(_QWORD *)(v27 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v28, v12 + 8, (uint64_t)v46);
      }
      else
      {
        LOBYTE(v43) = 0;
        v44 = 0;
      }
      v39[0] = v41;
      v39[1] = 2;
      v29 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
      if (v29)
      {
        v31 = WebCore::InspectorInstrumentation::instrumentingAgents(v29, v30);
        if (v31)
        {
          v32 = *(_QWORD *)(v31 + 96);
          if (v32)
            WebCore::InspectorCanvasAgent::recordAction(v32, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v37, v39);
        }
      }
      if (v44)
      {
        v33 = v43;
        v43 = 0;
        if (v33)
        {
          if (*v33 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v33;
        }
      }
      if ((_BYTE)v42)
      {
        v34 = (_DWORD *)v41[0];
        v41[0] = 0;
        if (v34)
        {
          if (*v34 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v34;
        }
      }
      v35 = v37;
      v37 = 0;
      if (v35)
      {
        if (*(_DWORD *)v35 == 2)
          goto LABEL_61;
        *(_DWORD *)v35 -= 2;
      }
      while (v48)
      {
LABEL_60:
        v35 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_61:
        WTF::StringImpl::destroy(v35, v30);
      }
    }
    else
    {
      v14 = v38[0];
    }
    LOBYTE(v39[0]) = 0;
    v40 = -1;
    v15 = v47;
    if (v47 == -1)
    {
      LOBYTE(v41[0]) = 0;
      v42 = -1;
    }
    else
    {
      v16 = off_1E333E5F8[v47];
      ((void (*)(WTF::StringImpl **, _QWORD *, _BYTE *))v16)(&v37, v39, v46);
      v40 = v15;
      LOBYTE(v41[0]) = 0;
      v42 = -1;
      ((void (*)(WTF::StringImpl **, _QWORD *, _QWORD *))v16)(&v37, v41, v39);
      v42 = v15;
    }
    WebCore::WebGLRenderingContextBase::vertexAttribfvImpl((WTF::StringImpl *)v12, (uint64_t)"vertexAttrib2fv", 16, v14, (uint64_t)v41, 2);
    if (v42 != -1)
      ((void (*)(WTF::StringImpl **, _QWORD *))off_1E333E5E8[v42])(&v37, v41);
    v42 = -1;
    if (v40 != -1)
      ((void (*)(WTF::StringImpl **, _QWORD *))off_1E333E5E8[v40])(&v37, v39);
    v13 = v48;
    v17 = 10;
  }
  if (v13 != -1)
    ((void (*)(_QWORD *, _BYTE *))off_1E333E608[v13])(v41, v46);
  return (_BYTE *)v17;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_vertexAttrib3fv(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  int v13;
  unsigned int v14;
  int v15;
  uint64_t (*v16)();
  uint64_t v17;
  JSValue v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  WebCore::InspectorCanvasAgent *v24;
  WebCore::InspectorInstrumentation *v25;
  WebCore::ScriptExecutionContext *v26;
  uint64_t v27;
  uint64_t v28;
  WebCore::InspectorInstrumentation *v29;
  WebCore::ScriptExecutionContext *v30;
  uint64_t v31;
  uint64_t v32;
  _DWORD *v33;
  _DWORD *v34;
  WTF::StringImpl *v35;
  JSC::VM *v36;
  WTF::StringImpl *v37;
  _DWORD v38[2];
  _QWORD v39[2];
  int v40;
  _QWORD v41[2];
  int v42;
  _DWORD *v43;
  char v44;
  char v45[8];
  _BYTE v46[16];
  int v47;
  int v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v36 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "WebGLRenderingContext", "vertexAttrib3fv");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "WebGLRenderingContext", "vertexAttrib3fv");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v20);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v38);
  if (v38[1])
    return 0;
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLAllowSharedAdaptor<WebCore::IDLFloat32Array>,WebCore::IDLSequence<WebCore::IDLUnrestrictedFloat>>>::convert(this, *((JSC::JSGlobalObject **)a2 + 7), (uint64_t)v45);
  v13 = v48;
  if (v48)
  {
    v17 = 0;
  }
  else
  {
    if (*(_BYTE *)(v12 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v14 = v38[0];
      v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
      if (v21
        && (v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22)) != 0
        && (v24 = *(WebCore::InspectorCanvasAgent **)(v23 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v24, (WebCore::CanvasRenderingContext *)(v12 + 8), v14, (uint64_t)v41);
      }
      else
      {
        LOBYTE(v41[0]) = 0;
        LOBYTE(v42) = 0;
      }
      if (v48)
        goto LABEL_60;
      v25 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
      if (v25
        && (v27 = WebCore::InspectorInstrumentation::instrumentingAgents(v25, v26)) != 0
        && (v28 = *(_QWORD *)(v27 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v28, v12 + 8, (uint64_t)v46);
      }
      else
      {
        LOBYTE(v43) = 0;
        v44 = 0;
      }
      v39[0] = v41;
      v39[1] = 2;
      v29 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
      if (v29)
      {
        v31 = WebCore::InspectorInstrumentation::instrumentingAgents(v29, v30);
        if (v31)
        {
          v32 = *(_QWORD *)(v31 + 96);
          if (v32)
            WebCore::InspectorCanvasAgent::recordAction(v32, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v37, v39);
        }
      }
      if (v44)
      {
        v33 = v43;
        v43 = 0;
        if (v33)
        {
          if (*v33 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v33;
        }
      }
      if ((_BYTE)v42)
      {
        v34 = (_DWORD *)v41[0];
        v41[0] = 0;
        if (v34)
        {
          if (*v34 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v34;
        }
      }
      v35 = v37;
      v37 = 0;
      if (v35)
      {
        if (*(_DWORD *)v35 == 2)
          goto LABEL_61;
        *(_DWORD *)v35 -= 2;
      }
      while (v48)
      {
LABEL_60:
        v35 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_61:
        WTF::StringImpl::destroy(v35, v30);
      }
    }
    else
    {
      v14 = v38[0];
    }
    LOBYTE(v39[0]) = 0;
    v40 = -1;
    v15 = v47;
    if (v47 == -1)
    {
      LOBYTE(v41[0]) = 0;
      v42 = -1;
    }
    else
    {
      v16 = off_1E333E5F8[v47];
      ((void (*)(WTF::StringImpl **, _QWORD *, _BYTE *))v16)(&v37, v39, v46);
      v40 = v15;
      LOBYTE(v41[0]) = 0;
      v42 = -1;
      ((void (*)(WTF::StringImpl **, _QWORD *, _QWORD *))v16)(&v37, v41, v39);
      v42 = v15;
    }
    WebCore::WebGLRenderingContextBase::vertexAttribfvImpl((WTF::StringImpl *)v12, (uint64_t)"vertexAttrib3fv", 16, v14, (uint64_t)v41, 3);
    if (v42 != -1)
      ((void (*)(WTF::StringImpl **, _QWORD *))off_1E333E5E8[v42])(&v37, v41);
    v42 = -1;
    if (v40 != -1)
      ((void (*)(WTF::StringImpl **, _QWORD *))off_1E333E5E8[v40])(&v37, v39);
    v13 = v48;
    v17 = 10;
  }
  if (v13 != -1)
    ((void (*)(_QWORD *, _BYTE *))off_1E333E608[v13])(v41, v46);
  return (_BYTE *)v17;
}

_BYTE *WebCore::jsWebGLRenderingContextPrototypeFunction_vertexAttrib4fv(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  int v13;
  unsigned int v14;
  int v15;
  uint64_t (*v16)();
  uint64_t v17;
  JSValue v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  WebCore::InspectorCanvasAgent *v24;
  WebCore::InspectorInstrumentation *v25;
  WebCore::ScriptExecutionContext *v26;
  uint64_t v27;
  uint64_t v28;
  WebCore::InspectorInstrumentation *v29;
  WebCore::ScriptExecutionContext *v30;
  uint64_t v31;
  uint64_t v32;
  _DWORD *v33;
  _DWORD *v34;
  WTF::StringImpl *v35;
  JSC::VM *v36;
  WTF::StringImpl *v37;
  _DWORD v38[2];
  _QWORD v39[2];
  int v40;
  _QWORD v41[2];
  int v42;
  _DWORD *v43;
  char v44;
  char v45[8];
  _BYTE v46[16];
  int v47;
  int v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v36 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "WebGLRenderingContext", "vertexAttrib4fv");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "WebGLRenderingContext", "vertexAttrib4fv");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v20);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v38);
  if (v38[1])
    return 0;
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLAllowSharedAdaptor<WebCore::IDLFloat32Array>,WebCore::IDLSequence<WebCore::IDLUnrestrictedFloat>>>::convert(this, *((JSC::JSGlobalObject **)a2 + 7), (uint64_t)v45);
  v13 = v48;
  if (v48)
  {
    v17 = 0;
  }
  else
  {
    if (*(_BYTE *)(v12 + 33))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v14 = v38[0];
      v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
      if (v21
        && (v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22)) != 0
        && (v24 = *(WebCore::InspectorCanvasAgent **)(v23 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v24, (WebCore::CanvasRenderingContext *)(v12 + 8), v14, (uint64_t)v41);
      }
      else
      {
        LOBYTE(v41[0]) = 0;
        LOBYTE(v42) = 0;
      }
      if (v48)
        goto LABEL_60;
      v25 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
      if (v25
        && (v27 = WebCore::InspectorInstrumentation::instrumentingAgents(v25, v26)) != 0
        && (v28 = *(_QWORD *)(v27 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v28, v12 + 8, (uint64_t)v46);
      }
      else
      {
        LOBYTE(v43) = 0;
        v44 = 0;
      }
      v39[0] = v41;
      v39[1] = 2;
      v29 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
      if (v29)
      {
        v31 = WebCore::InspectorInstrumentation::instrumentingAgents(v29, v30);
        if (v31)
        {
          v32 = *(_QWORD *)(v31 + 96);
          if (v32)
            WebCore::InspectorCanvasAgent::recordAction(v32, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v37, v39);
        }
      }
      if (v44)
      {
        v33 = v43;
        v43 = 0;
        if (v33)
        {
          if (*v33 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v33;
        }
      }
      if ((_BYTE)v42)
      {
        v34 = (_DWORD *)v41[0];
        v41[0] = 0;
        if (v34)
        {
          if (*v34 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v34;
        }
      }
      v35 = v37;
      v37 = 0;
      if (v35)
      {
        if (*(_DWORD *)v35 == 2)
          goto LABEL_61;
        *(_DWORD *)v35 -= 2;
      }
      while (v48)
      {
LABEL_60:
        v35 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_61:
        WTF::StringImpl::destroy(v35, v30);
      }
    }
    else
    {
      v14 = v38[0];
    }
    LOBYTE(v39[0]) = 0;
    v40 = -1;
    v15 = v47;
    if (v47 == -1)
    {
      LOBYTE(v41[0]) = 0;
      v42 = -1;
    }
    else
    {
      v16 = off_1E333E5F8[v47];
      ((void (*)(WTF::StringImpl **, _QWORD *, _BYTE *))v16)(&v37, v39, v46);
      v40 = v15;
      LOBYTE(v41[0]) = 0;
      v42 = -1;
      ((void (*)(WTF::StringImpl **, _QWORD *, _QWORD *))v16)(&v37, v41, v39);
      v42 = v15;
    }
    WebCore::WebGLRenderingContextBase::vertexAttribfvImpl((WTF::StringImpl *)v12, (uint64_t)"vertexAttrib4fv", 16, v14, (uint64_t)v41, 4);
    if (v42 != -1)
      ((void (*)(WTF::StringImpl **, _QWORD *))off_1E333E5E8[v42])(&v37, v41);
    v42 = -1;
    if (v40 != -1)
      ((void (*)(WTF::StringImpl **, _QWORD *))off_1E333E5E8[v40])(&v37, v39);
    v13 = v48;
    v17 = 10;
  }
  if (v13 != -1)
    ((void (*)(_QWORD *, _BYTE *))off_1E333E608[v13])(v41, v46);
  return (_BYTE *)v17;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_vertexAttribPointer(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  JSC::VM *v14;
  uint64_t v15;
  unint64_t v16;
  JSC::VM *v17;
  double v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  JSC::VM *v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  unint64_t v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  unsigned int v33;
  unsigned int v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v38;
  unsigned int v39;
  JSValue v40;
  uint64_t v41;
  uint64_t v42;
  int hasExceptionsAfterHandlingTraps;
  unsigned int v44;
  WebCore::InspectorInstrumentation *v45;
  WebCore::ScriptExecutionContext *v46;
  uint64_t v47;
  WebCore::InspectorCanvasAgent *v48;
  WebCore::InspectorInstrumentation *v49;
  WebCore::ScriptExecutionContext *v50;
  uint64_t v51;
  WebCore::InspectorCanvasAgent *v52;
  unsigned int v53;
  WebCore::InspectorInstrumentation *v54;
  WebCore::ScriptExecutionContext *v55;
  uint64_t v56;
  WebCore::InspectorCanvasAgent *v57;
  WebCore::InspectorInstrumentation *v58;
  WebCore::ScriptExecutionContext *v59;
  uint64_t v60;
  WebCore::InspectorCanvasAgent *v61;
  WebCore::InspectorInstrumentation *v62;
  WebCore::ScriptExecutionContext *v63;
  uint64_t v64;
  WebCore::InspectorCanvasAgent *v65;
  WebCore::InspectorInstrumentation *v66;
  WebCore::ScriptExecutionContext *v67;
  uint64_t v68;
  WebCore::InspectorCanvasAgent *v69;
  WebCore::InspectorInstrumentation *v70;
  WebCore::ScriptExecutionContext *v71;
  uint64_t v72;
  uint64_t v73;
  _DWORD *v74;
  _DWORD *v75;
  _DWORD *v76;
  _DWORD *v77;
  _DWORD *v78;
  _DWORD *v79;
  WTF::StringImpl *v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  JSC::JSGlobalObject *v84;
  uint64_t v85;
  uint64_t v86;
  double v87;
  unint64_t v88;
  JSC::VM *v89;
  uint64_t v90;
  unint64_t v91;
  BOOL v92;
  int v93;
  uint64_t v94;
  int *v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  JSC::VM *v100;
  _QWORD v101[2];
  WTF::StringImpl *v102;
  unsigned int v103[2];
  unsigned int v104[2];
  _QWORD v105[2];
  char v106;
  _DWORD *v107;
  char v108;
  _DWORD *v109;
  char v110;
  _DWORD *v111;
  char v112;
  _DWORD *v113;
  char v114;
  _DWORD *v115;
  char v116;
  uint64_t v117;

  v117 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v100 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v100, "WebGLRenderingContext", "vertexAttribPointer");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v100, "WebGLRenderingContext", "vertexAttribPointer");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 5)
  {
    v40.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v40);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v104);
  if (v104[1])
    return 0;
  v13 = *((_QWORD *)a2 + 7);
  v105[0] = v13;
  v14 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v13 < 0xFFFE000000000000)
  {
    v29 = v13 - 0x2000000000000;
    if (v13 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v105, this);
      v29 = v88;
    }
    v30 = (v29 >> 52) & 0x7FF;
    v31 = v30 - 1023;
    v32 = v29 >> (51 - (v29 >> 52));
    if (v30 > 0x433)
      LODWORD(v32) = v29 << ((v29 >> 52) - 51);
    if (v30 >= 0x41F)
      v33 = v32;
    else
      v33 = (((1 << ((v29 >> 52) + 1)) - 1) & v32) + (1 << ((v29 >> 52) + 1));
    if ((v29 & 0x8000000000000000) == 0)
      v34 = v33;
    else
      v34 = -v33;
    if (v31 <= 0x53)
      v15 = v34;
    else
      v15 = 0;
  }
  else
  {
    v15 = v13;
  }
  if (*((_DWORD *)v14 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v14))
    return 0;
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 8), v103);
  if (v103[1])
    return 0;
  v16 = *((_QWORD *)a2 + 9);
  v17 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v16 >= 0xFFFE000000000000)
  {
    v92 = (_DWORD)v16 == 0;
    goto LABEL_161;
  }
  *(_QWORD *)&v18 = v16 - 0x2000000000000;
  if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v16 & 0xFFFE000000000002) != 0)
    {
      v19 = v16 == 7;
      goto LABEL_22;
    }
    v93 = *(unsigned __int8 *)(v16 + 5);
    if (v93 == 3)
    {
      v96 = *(_DWORD *)(v16 + 8);
    }
    else
    {
      if (v93 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v19 = 1;
          goto LABEL_22;
        }
        v92 = *(_QWORD *)(16 * (*(_DWORD *)v16 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
        goto LABEL_161;
      }
      v94 = *(_QWORD *)(v16 + 8);
      if ((v94 & 1) != 0)
        v95 = (int *)(v16 + 16);
      else
        v95 = (int *)(v94 + 4);
      v96 = *v95;
    }
    v92 = v96 == 0;
LABEL_161:
    v19 = !v92;
    goto LABEL_22;
  }
  v19 = v18 > 0.0 || v18 < 0.0;
LABEL_22:
  if (*((_DWORD *)v17 + 20))
  {
    v41 = v19;
    if ((JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) != 0)
      return 0;
    v17 = (JSC::VM *)*((_QWORD *)this + 7);
    v19 = v41;
  }
  v20 = *((_QWORD *)a2 + 10);
  v105[0] = v20;
  if (v20 < 0xFFFE000000000000)
  {
    v35 = v20 - 0x2000000000000;
    if (v20 - 0x2000000000000 >= 0xFFFC000000000000)
    {
      v89 = v17;
      v90 = v19;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v105, this);
      v19 = v90;
      v17 = v89;
      v15 = v15;
      v35 = v91;
    }
    v36 = (v35 >> 52) & 0x7FF;
    if ((v36 - 1023) <= 0x53)
    {
      v38 = v35 >> (51 - (v35 >> 52));
      if (v36 > 0x433)
        LODWORD(v38) = v35 << ((v35 >> 52) - 51);
      if (v36 >= 0x41F)
        v39 = v38;
      else
        v39 = (((1 << ((v35 >> 52) + 1)) - 1) & v38) + (1 << ((v35 >> 52) + 1));
      if ((v35 & 0x8000000000000000) == 0)
        v21 = v39;
      else
        v21 = -v39;
    }
    else
    {
      v21 = 0;
    }
  }
  else
  {
    v21 = v20;
  }
  if (*((_DWORD *)v17 + 20))
  {
    v98 = v19;
    v42 = v21;
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v17);
    v21 = v42;
    v19 = v98;
    if (hasExceptionsAfterHandlingTraps)
      return 0;
  }
  v22 = *((_QWORD *)a2 + 11);
  v105[0] = v22;
  if (v22 < 0xFFFE000000000000)
  {
    v24 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v22 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v84 = this;
      v85 = v19;
      v86 = v21;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v105, v84);
      v21 = v86;
      v19 = v85;
      v25 = v87;
    }
    else
    {
      *(_QWORD *)&v25 = v22 - 0x2000000000000;
    }
    if (*((_DWORD *)v24 + 20))
    {
      v81 = v19;
      v82 = v21;
      v83 = JSC::VM::hasExceptionsAfterHandlingTraps(v24);
      v21 = v82;
      v19 = v81;
      if ((v83 & 1) != 0)
        return 0;
    }
    if (fabs(v25) == INFINITY)
    {
      v23 = 0;
    }
    else
    {
      v26 = v21;
      v27 = v19;
      v28 = fmod(trunc(v25), 1.84467441e19);
      if (v28 >= 0.0)
        v23 = (unint64_t)v28;
      else
        v23 = -(uint64_t)(unint64_t)-v28;
      v19 = v27;
      v21 = v26;
    }
  }
  else
  {
    v23 = (int)v22;
  }
  if (*(_BYTE *)(v12 + 33))
  {
    v97 = v21;
    v99 = v19;
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v102 = (WTF::StringImpl *)v105[0];
    v44 = v104[0];
    v45 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v45
      && (v47 = WebCore::InspectorInstrumentation::instrumentingAgents(v45, v46)) != 0
      && (v48 = *(WebCore::InspectorCanvasAgent **)(v47 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v48, (WebCore::CanvasRenderingContext *)(v12 + 8), v44, (uint64_t)v105);
    }
    else
    {
      LOBYTE(v105[0]) = 0;
      v106 = 0;
    }
    v49 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v49
      && (v51 = WebCore::InspectorInstrumentation::instrumentingAgents(v49, v50)) != 0
      && (v52 = *(WebCore::InspectorCanvasAgent **)(v51 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v52, (WebCore::CanvasRenderingContext *)(v12 + 8), v15, (uint64_t)&v107);
    }
    else
    {
      LOBYTE(v107) = 0;
      v108 = 0;
    }
    v53 = v103[0];
    v54 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v54
      && (v56 = WebCore::InspectorInstrumentation::instrumentingAgents(v54, v55)) != 0
      && (v57 = *(WebCore::InspectorCanvasAgent **)(v56 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v57, (WebCore::CanvasRenderingContext *)(v12 + 8), v53, (uint64_t)&v109);
    }
    else
    {
      LOBYTE(v109) = 0;
      v110 = 0;
    }
    v58 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v58
      && (v60 = WebCore::InspectorInstrumentation::instrumentingAgents(v58, v59)) != 0
      && (v61 = *(WebCore::InspectorCanvasAgent **)(v60 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v61, (WebCore::CanvasRenderingContext *)(v12 + 8), (WTF::JSONImpl::Value *)v99, (uint64_t)&v111);
    }
    else
    {
      LOBYTE(v111) = 0;
      v112 = 0;
    }
    v62 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v62
      && (v64 = WebCore::InspectorInstrumentation::instrumentingAgents(v62, v63)) != 0
      && (v65 = *(WebCore::InspectorCanvasAgent **)(v64 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v65, (WebCore::CanvasRenderingContext *)(v12 + 8), v97, (uint64_t)&v113);
    }
    else
    {
      LOBYTE(v113) = 0;
      v114 = 0;
    }
    v66 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v66
      && (v68 = WebCore::InspectorInstrumentation::instrumentingAgents(v66, v67)) != 0
      && (v69 = *(WebCore::InspectorCanvasAgent **)(v68 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v69, (WebCore::CanvasRenderingContext *)(v12 + 8), v23, (uint64_t)&v115);
    }
    else
    {
      LOBYTE(v115) = 0;
      v116 = 0;
    }
    v101[0] = v105;
    v101[1] = 6;
    v70 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40) + 144))(*(_QWORD *)(v12 + 40));
    if (v70)
    {
      v72 = WebCore::InspectorInstrumentation::instrumentingAgents(v70, v71);
      if (v72)
      {
        v73 = *(_QWORD *)(v72 + 96);
        if (v73)
          WebCore::InspectorCanvasAgent::recordAction(v73, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v102, v101);
      }
    }
    v21 = v97;
    v19 = v99;
    if (v116)
    {
      v74 = v115;
      v115 = 0;
      if (v74)
      {
        if (*v74 == 1)
        {
          WTF::JSONImpl::Value::operator delete();
          v21 = v97;
          v19 = v99;
        }
        else
        {
          --*v74;
        }
      }
    }
    if (v114)
    {
      v75 = v113;
      v113 = 0;
      if (v75)
      {
        if (*v75 == 1)
        {
          WTF::JSONImpl::Value::operator delete();
          v21 = v97;
          v19 = v99;
        }
        else
        {
          --*v75;
        }
      }
    }
    if (v112)
    {
      v76 = v111;
      v111 = 0;
      if (v76)
      {
        if (*v76 == 1)
        {
          WTF::JSONImpl::Value::operator delete();
          v21 = v97;
          v19 = v99;
        }
        else
        {
          --*v76;
        }
      }
    }
    if (v110)
    {
      v77 = v109;
      v109 = 0;
      if (v77)
      {
        if (*v77 == 1)
        {
          WTF::JSONImpl::Value::operator delete();
          v21 = v97;
          v19 = v99;
        }
        else
        {
          --*v77;
        }
      }
    }
    if (v108)
    {
      v78 = v107;
      v107 = 0;
      if (v78)
      {
        if (*v78 == 1)
        {
          WTF::JSONImpl::Value::operator delete();
          v21 = v97;
          v19 = v99;
        }
        else
        {
          --*v78;
        }
      }
    }
    if (v106)
    {
      v79 = (_DWORD *)v105[0];
      v105[0] = 0;
      if (v79)
      {
        if (*v79 == 1)
        {
          WTF::JSONImpl::Value::operator delete();
          v21 = v97;
          v19 = v99;
        }
        else
        {
          --*v79;
        }
      }
    }
    v80 = v102;
    v102 = 0;
    if (v80)
    {
      if (*(_DWORD *)v80 == 2)
      {
        WTF::StringImpl::destroy(v80, v71);
        v21 = v97;
        v19 = v99;
      }
      else
      {
        *(_DWORD *)v80 -= 2;
      }
    }
  }
  WebCore::WebGLRenderingContextBase::vertexAttribPointer((WebCore::WebGLRenderingContextBase *)v12, v104[0], v15, v103[0], v19, v21, v23);
  return 10;
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_viewport(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  JSC::VM *v16;
  unint64_t v17;
  unint64_t v18;
  JSC::VM *v19;
  unint64_t v20;
  unint64_t v21;
  JSC::VM *v22;
  unint64_t v23;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unsigned int v29;
  unint64_t v30;
  unsigned int v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unsigned int v38;
  unint64_t v39;
  unsigned int v40;
  unint64_t v41;
  unsigned int v42;
  JSValue v43;
  WebCore::InspectorInstrumentation *v44;
  WebCore::ScriptExecutionContext *v45;
  uint64_t v46;
  WebCore::InspectorCanvasAgent *v47;
  WebCore::InspectorInstrumentation *v48;
  WebCore::ScriptExecutionContext *v49;
  uint64_t v50;
  WebCore::InspectorCanvasAgent *v51;
  WebCore::InspectorInstrumentation *v52;
  WebCore::ScriptExecutionContext *v53;
  uint64_t v54;
  WebCore::InspectorCanvasAgent *v55;
  WebCore::InspectorInstrumentation *v56;
  WebCore::ScriptExecutionContext *v57;
  uint64_t v58;
  WebCore::InspectorCanvasAgent *v59;
  WebCore::InspectorInstrumentation *v60;
  WebCore::ScriptExecutionContext *v61;
  uint64_t v62;
  uint64_t v63;
  _DWORD *v64;
  _DWORD *v65;
  _DWORD *v66;
  _DWORD *v67;
  WTF::StringImpl *v68;
  unint64_t v69;
  unint64_t v70;
  JSC::VM *v71;
  unint64_t v72;
  unint64_t v73;
  JSC::VM *v74;
  _QWORD v75[2];
  WTF::StringImpl *v76;
  _QWORD v77[2];
  char v78;
  _DWORD *v79;
  char v80;
  _DWORD *v81;
  char v82;
  _DWORD *v83;
  char v84;
  uint64_t v85;

  v85 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v74 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v74, "WebGLRenderingContext", "viewport");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebGLRenderingContext::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebGLRenderingContext::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v74, "WebGLRenderingContext", "viewport");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v43.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v43);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v77[0] = v13;
    if (v13 < 0xFFFE000000000000)
    {
      v25 = v13 - 0x2000000000000;
      if (v13 - 0x2000000000000 >= 0xFFFC000000000000)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v77, this);
        v25 = v69;
      }
      v26 = (v25 >> 52) & 0x7FF;
      if ((v26 - 1023) <= 0x53)
      {
        v37 = v25 >> (51 - (v25 >> 52));
        if (v26 > 0x433)
          LODWORD(v37) = v25 << ((v25 >> 52) - 51);
        if (v26 >= 0x41F)
          v38 = v37;
        else
          v38 = (((1 << ((v25 >> 52) + 1)) - 1) & v37) + (1 << ((v25 >> 52) + 1));
        if ((v25 & 0x8000000000000000) == 0)
          v14 = v38;
        else
          v14 = -v38;
      }
      else
      {
        v14 = 0;
      }
    }
    else
    {
      v14 = v13;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v77[0] = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 < 0xFFFE000000000000)
      {
        v27 = v15 - 0x2000000000000;
        if (v15 - 0x2000000000000 >= 0xFFFC000000000000)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v77, this);
          v27 = v70;
        }
        v28 = (v27 >> 52) & 0x7FF;
        v29 = v28 - 1023;
        v30 = v27 >> (51 - (v27 >> 52));
        if (v28 > 0x433)
          LODWORD(v30) = v27 << ((v27 >> 52) - 51);
        if (v28 >= 0x41F)
          v31 = v30;
        else
          v31 = (((1 << ((v27 >> 52) + 1)) - 1) & v30) + (1 << ((v27 >> 52) + 1));
        if ((v27 & 0x8000000000000000) == 0)
          v32 = v31;
        else
          v32 = -v31;
        if (v29 <= 0x53)
          v17 = v32;
        else
          v17 = 0;
      }
      else
      {
        v17 = v15;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = *((_QWORD *)a2 + 8);
        v77[0] = v18;
        v19 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v18 < 0xFFFE000000000000)
        {
          v33 = v18 - 0x2000000000000;
          if (v18 - 0x2000000000000 >= 0xFFFC000000000000)
          {
            v71 = (JSC::VM *)*((_QWORD *)this + 7);
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v77, this);
            v19 = v71;
            v33 = v72;
          }
          v34 = (v33 >> 52) & 0x7FF;
          if ((v34 - 1023) <= 0x53)
          {
            v39 = v33 >> (51 - (v33 >> 52));
            if (v34 > 0x433)
              LODWORD(v39) = v33 << ((v33 >> 52) - 51);
            if (v34 >= 0x41F)
              v40 = v39;
            else
              v40 = (((1 << ((v33 >> 52) + 1)) - 1) & v39) + (1 << ((v33 >> 52) + 1));
            if ((v33 & 0x8000000000000000) == 0)
              v20 = v40;
            else
              v20 = -v40;
          }
          else
          {
            v20 = 0;
          }
        }
        else
        {
          v20 = v18;
        }
        if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
        {
          return 0;
        }
        else
        {
          v21 = *((_QWORD *)a2 + 9);
          v77[0] = v21;
          v22 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v21 < 0xFFFE000000000000)
          {
            v35 = v21 - 0x2000000000000;
            if (v21 - 0x2000000000000 >= 0xFFFC000000000000)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v77, this);
              v35 = v73;
            }
            v36 = (v35 >> 52) & 0x7FF;
            if ((v36 - 1023) <= 0x53)
            {
              v41 = v35 >> (51 - (v35 >> 52));
              if (v36 > 0x433)
                LODWORD(v41) = v35 << ((v35 >> 52) - 51);
              if (v36 >= 0x41F)
                v42 = v41;
              else
                v42 = (((1 << ((v35 >> 52) + 1)) - 1) & v41) + (1 << ((v35 >> 52) + 1));
              if ((v35 & 0x8000000000000000) == 0)
                v23 = v42;
              else
                v23 = -v42;
            }
            else
            {
              v23 = 0;
            }
          }
          else
          {
            v23 = v21;
          }
          if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
          {
            return 0;
          }
          else
          {
            if (*(_BYTE *)(v12 + 33))
            {
              WTF::StringImpl::createWithoutCopyingNonEmpty();
              v76 = (WTF::StringImpl *)v77[0];
              v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v44
                && (v46 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, v45)) != 0
                && (v47 = *(WebCore::InspectorCanvasAgent **)(v46 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v47, (WebCore::CanvasRenderingContext *)(v12 + 8), v14, (uint64_t)v77);
              }
              else
              {
                LOBYTE(v77[0]) = 0;
                v78 = 0;
              }
              v48 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v48
                && (v50 = WebCore::InspectorInstrumentation::instrumentingAgents(v48, v49)) != 0
                && (v51 = *(WebCore::InspectorCanvasAgent **)(v50 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v51, (WebCore::CanvasRenderingContext *)(v12 + 8), v17, (uint64_t)&v79);
              }
              else
              {
                LOBYTE(v79) = 0;
                v80 = 0;
              }
              v52 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v52
                && (v54 = WebCore::InspectorInstrumentation::instrumentingAgents(v52, v53)) != 0
                && (v55 = *(WebCore::InspectorCanvasAgent **)(v54 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v55, (WebCore::CanvasRenderingContext *)(v12 + 8), v20, (uint64_t)&v81);
              }
              else
              {
                LOBYTE(v81) = 0;
                v82 = 0;
              }
              v56 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v56
                && (v58 = WebCore::InspectorInstrumentation::instrumentingAgents(v56, v57)) != 0
                && (v59 = *(WebCore::InspectorCanvasAgent **)(v58 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v59, (WebCore::CanvasRenderingContext *)(v12 + 8), v23, (uint64_t)&v83);
              }
              else
              {
                LOBYTE(v83) = 0;
                v84 = 0;
              }
              v75[0] = v77;
              v75[1] = 4;
              v60 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 40)
                                                                                           + 144))(*(_QWORD *)(v12 + 40));
              if (v60)
              {
                v62 = WebCore::InspectorInstrumentation::instrumentingAgents(v60, v61);
                if (v62)
                {
                  v63 = *(_QWORD *)(v62 + 96);
                  if (v63)
                    WebCore::InspectorCanvasAgent::recordAction(v63, (WebCore::CanvasRenderingContext *)(v12 + 8), (const WTF::StringImpl *)&v76, v75);
                }
              }
              if (v84)
              {
                v64 = v83;
                v83 = 0;
                if (v64)
                {
                  if (*v64 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v64;
                }
              }
              if (v82)
              {
                v65 = v81;
                v81 = 0;
                if (v65)
                {
                  if (*v65 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v65;
                }
              }
              if (v80)
              {
                v66 = v79;
                v79 = 0;
                if (v66)
                {
                  if (*v66 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v66;
                }
              }
              if (v78)
              {
                v67 = (_DWORD *)v77[0];
                v77[0] = 0;
                if (v67)
                {
                  if (*v67 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v67;
                }
              }
              v68 = v76;
              v76 = 0;
              if (v68)
              {
                if (*(_DWORD *)v68 == 2)
                  WTF::StringImpl::destroy(v68, v61);
                else
                  *(_DWORD *)v68 -= 2;
              }
            }
            if (!*(_BYTE *)(v12 + 364))
            {
              if (((v23 | v20) & 0x80000000) != 0)
                WebCore::WebGLRenderingContextBase::synthesizeGLError((WTF::StringImpl *)v12, 1281, (uint64_t)"viewport", 9, (uint64_t)"size < 0", 9);
              else
                (*(void (**)(_QWORD, unint64_t, unint64_t, unint64_t, unint64_t))(**(_QWORD **)(v12 + 88) + 1072))(*(_QWORD *)(v12 + 88), v14, v17, v20, v23);
            }
            return 10;
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsWebGLRenderingContextPrototypeFunction_bufferData1Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSWebGLRenderingContext *a4)
{
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unsigned int v12;
  WebCore::InspectorInstrumentation *v13;
  WebCore::ScriptExecutionContext *v14;
  uint64_t v15;
  WebCore::InspectorCanvasAgent *v16;
  WebCore::InspectorInstrumentation *v17;
  WebCore::ScriptExecutionContext *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  WebCore::InspectorInstrumentation *v22;
  WebCore::ScriptExecutionContext *v23;
  uint64_t v24;
  WebCore::InspectorCanvasAgent *v25;
  WebCore::InspectorInstrumentation *v26;
  WebCore::ScriptExecutionContext *v27;
  uint64_t v28;
  uint64_t v29;
  _DWORD *v30;
  _DWORD *v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  _QWORD v35[2];
  WTF::StringImpl *v36;
  _DWORD v37[2];
  _DWORD v38[2];
  WTF::StringImpl *v39;
  int v40;
  char v41;
  _DWORD *v42;
  char v43;
  _DWORD *v44;
  char v45;
  char v46[8];
  uint64_t v47;
  int v48;
  char v49;
  int v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v38);
  if (v38[1])
    return 0;
  WebCore::Converter<WebCore::IDLNullable<WebCore::IDLUnion<WebCore::IDLAllowSharedAdaptor<WebCore::IDLArrayBuffer>,WebCore::IDLAllowSharedAdaptor<WebCore::IDLArrayBufferView>>>>::convert(*((_QWORD *)a2 + 7), (uint64_t)this, (uint64_t)v46);
  v7 = v50;
  if (v50)
  {
    v10 = 0;
LABEL_15:
    if (v7 != -1)
      ((void (*)(WTF::StringImpl **, uint64_t *))off_1E333E458[v7])(&v39, &v47);
    return v10;
  }
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 8), v37);
  if (v37[1])
  {
    v10 = 0;
LABEL_14:
    v7 = v50;
    goto LABEL_15;
  }
  if (*((_BYTE *)a3 + 33))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v36 = v39;
    v12 = v38[0];
    v13 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 5) + 144))(*((_QWORD *)a3 + 5));
    if (v13
      && (v15 = WebCore::InspectorInstrumentation::instrumentingAgents(v13, v14)) != 0
      && (v16 = *(WebCore::InspectorCanvasAgent **)(v15 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v16, (JSC::CallFrame *)((char *)a3 + 8), v12, (uint64_t)&v39);
    }
    else
    {
      LOBYTE(v39) = 0;
      v41 = 0;
    }
    if (v50)
      goto LABEL_60;
    v17 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 5) + 144))(*((_QWORD *)a3 + 5));
    if (v17
      && (v19 = WebCore::InspectorInstrumentation::instrumentingAgents(v17, v18)) != 0
      && (v20 = *(_QWORD *)(v19 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v20, (JSC::CallFrame *)((char *)a3 + 8), (uint64_t)&v47, &v42);
    }
    else
    {
      LOBYTE(v42) = 0;
      v43 = 0;
    }
    v21 = v37[0];
    v22 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 5) + 144))(*((_QWORD *)a3 + 5));
    if (v22
      && (v24 = WebCore::InspectorInstrumentation::instrumentingAgents(v22, v23)) != 0
      && (v25 = *(WebCore::InspectorCanvasAgent **)(v24 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v25, (JSC::CallFrame *)((char *)a3 + 8), v21, (uint64_t)&v44);
    }
    else
    {
      LOBYTE(v44) = 0;
      v45 = 0;
    }
    v35[0] = &v39;
    v35[1] = 3;
    v26 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 5) + 144))(*((_QWORD *)a3 + 5));
    if (v26)
    {
      v28 = WebCore::InspectorInstrumentation::instrumentingAgents(v26, v27);
      if (v28)
      {
        v29 = *(_QWORD *)(v28 + 96);
        if (v29)
          WebCore::InspectorCanvasAgent::recordAction(v29, (JSC::CallFrame *)((char *)a3 + 8), (const WTF::StringImpl *)&v36, v35);
      }
    }
    if (v45)
    {
      v30 = v44;
      v44 = 0;
      if (v30)
      {
        if (*v30 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v30;
      }
    }
    if (v43)
    {
      v31 = v42;
      v42 = 0;
      if (v31)
      {
        if (*v31 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v31;
      }
    }
    if (v41)
    {
      v32 = v39;
      v39 = 0;
      if (v32)
      {
        if (*(_DWORD *)v32 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*(_DWORD *)v32;
      }
    }
    v33 = v36;
    v36 = 0;
    if (v33)
    {
      if (*(_DWORD *)v33 == 2)
        WTF::StringImpl::destroy(v33, v27);
      else
        *(_DWORD *)v33 -= 2;
    }
  }
  if (!v50)
  {
    v8 = v38[0];
    LOBYTE(v39) = 0;
    v41 = 0;
    if (v49)
    {
      v40 = -1;
      v9 = v48;
      if (v48 != -1)
      {
        ((void (*)(_QWORD *, WTF::StringImpl **, uint64_t *))off_1E333E438[v48])(v35, &v39, &v47);
        v40 = v9;
      }
      v41 = 1;
    }
    WebCore::WebGLRenderingContextBase::bufferData(a3, v8, (uint64_t)&v39, v37[0]);
    if (v41 && v40 != -1)
      ((void (*)(_QWORD *, WTF::StringImpl **))off_1E333E428[v40])(v35, &v39);
    v10 = 10;
    goto LABEL_14;
  }
LABEL_60:
  v34 = std::__throw_bad_variant_access[abi:sn180100]();
  return _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN3JSC21GenericTypedArrayViewINSA_12Uint8AdaptorEEENS8_12RawPtrTraitsISD_EENS8_21DefaultRefDerefTraitsISD_EEEEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSI_SK_EEEEEEDcSO_DpT0_(v34);
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN3JSC21GenericTypedArrayViewINSA_12Uint8AdaptorEEENS8_12RawPtrTraitsISD_EENS8_21DefaultRefDerefTraitsISD_EEEEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSI_SK_EEEEEEDcSO_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*result == 1)
      return (_DWORD *)JSC::ArrayBufferView::operator delete();
    else
      --*result;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore26WebKitMediaKeyMessageEvent4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  _DWORD *result;

  v3 = (WTF::StringImpl *)*((_QWORD *)a2 + 2);
  *((_QWORD *)a2 + 2) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  result = (_DWORD *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*result == 1)
      return (_DWORD *)JSC::ArrayBufferView::operator delete();
    else
      --*result;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore25WebKitMediaKeyNeededEvent4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, uint64_t a2)
{
  _DWORD *result;

  result = *(_DWORD **)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  if (result)
  {
    if (*result == 1)
      return (_DWORD *)JSC::ArrayBufferView::operator delete();
    else
      --*result;
  }
  return result;
}

_BYTE *WebCore::jsWebKitMediaKeySessionPrototypeFunction_update(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  WTF::MonotonicTime *v16;
  uint64_t v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _DWORD *v26;
  JSValue v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  JSValue v31;
  WTF::StringImpl *v32;
  JSC::VM *v33;
  uint64_t v34;
  int v35;
  _DWORD *v36;
  WTF::StringImpl *v37;
  uint64_t v38;
  WTF::StringImpl *v39;
  char v40;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v33 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v33, "WebKitMediaKeySession", "update");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebKitMediaKeySession::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebKitMediaKeySession::s_info && v13 != 0);
  }
  if (!v12)
    return WebCore::throwThisTypeError((int)this, (int)&v33, "WebKitMediaKeySession", "update");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v28.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v9, this, v28);
  }
  v16 = *(WTF::MonotonicTime **)(v10 + 24);
  v17 = *((_QWORD *)a2 + 6);
  v36 = v9;
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_29;
  if (*(_BYTE *)(v17 + 5) != 40)
    goto LABEL_29;
  JSC::JSGenericTypedArrayView<JSC::Uint8Adaptor>::possiblySharedTypedImpl(v17, &v38);
  v18 = (_DWORD *)v38;
  if (!v38)
    goto LABEL_29;
  v19 = *(_QWORD *)(v38 + 32);
  if (v19)
  {
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      if ((v21 = *(_QWORD *)(MEMORY[0x1E0CC10F8] + 56)) == 0
        || !*(_BYTE *)(MEMORY[0x1E0CC10F8] + 34) && *MEMORY[0x1E0CC10F0]
        || (v20 & 0x3FFFFFFFFLL) + v21)
      {
        if (*(_QWORD *)(v19 + 32)
           ? WTF::RefPtr<JSC::SharedArrayBufferContents,WTF::RawPtrTraits<JSC::SharedArrayBufferContents>,WTF::DefaultRefDerefTraits<JSC::SharedArrayBufferContents>>::unspecifiedBoolTypeInstance
           : 0)
        {
          v38 = 0;
          goto LABEL_27;
        }
      }
    }
  }
  if ((*(_BYTE *)(v38 + 6) & 3) == 0)
  {
    v35 = 0;
    v34 = 0;
    v36 = (_DWORD *)v38;
    WebCore::WebKitMediaKeySession::update(v16, (uint64_t *)&v36, &v38);
    v26 = v36;
    v36 = 0;
    if (v26)
    {
      if (*v26 == 1)
        JSC::ArrayBufferView::operator delete();
      else
        --*v26;
    }
    if (!v40)
    {
      v23 = 10;
LABEL_37:
      v24 = 0;
      goto LABEL_30;
    }
    v29 = (WTF::StringImpl *)v38;
    LOBYTE(v36) = v38;
    v30 = v39;
    v39 = 0;
    v37 = v30;
    if (!*((_QWORD *)v9 + 2))
    {
      v31.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v38, (JSC::JSGlobalObject *)&v37);
      JSC::VM::throwException(v9, this, v31);
      v30 = v37;
    }
    v37 = 0;
    if (v30)
    {
      if (*(_DWORD *)v30 == 2)
        WTF::StringImpl::destroy(v30, v29);
      else
        *(_DWORD *)v30 -= 2;
    }
    if (v40)
    {
      v32 = v39;
      v39 = 0;
      if (v32)
      {
        if (*(_DWORD *)v32 != 2)
        {
          v23 = 0;
          *(_DWORD *)v32 -= 2;
          goto LABEL_37;
        }
        WTF::StringImpl::destroy(v32, v29);
      }
    }
    v23 = 0;
    goto LABEL_37;
  }
LABEL_27:
  if (*v18 == 1)
    JSC::ArrayBufferView::operator delete();
  else
    --*v18;
LABEL_29:
  WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v36, 0, "key", 4, "WebKitMediaKeySession", 22, a8, "update", 7, "Uint8Array", 11);
  v23 = 0;
  v24 = 1;
  v35 = 1;
LABEL_30:
  ((void (*)(uint64_t *, uint64_t *))off_1E333ED28[v24])(&v38, &v34);
  return (_BYTE *)v23;
}

uint64_t WebCore::jsWebKitMediaKeySessionPrototypeFunction_close(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD v16[4];

  v3 = *((_QWORD *)a2 + 5);
  v15 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v15, "WebKitMediaKeySession", "close");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSWebKitMediaKeySession::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSWebKitMediaKeySession::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v15, "WebKitMediaKeySession", "close");
  v9 = *(_QWORD **)(v3 + 24);
  v10 = v9[9];
  v11 = v9[10];
  v16[0] = "WebKitMediaKeySession";
  v16[1] = 22;
  v16[2] = "close";
  v16[3] = v11;
  if (*(_BYTE *)(v10 + 12))
    WTF::Logger::log<WTF::Logger::LogSiteIdentifier>((uint64_t)&WebCore::LogEME, 0, (WTF::Logger::LogSiteIdentifier *)v16);
  v12 = v9[15];
  if (v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v12 + 40))(v12);
    v13 = v9[15];
    v9[15] = 0;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  return 10;
}

WebCore::WebKitMediaKeys *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore15WebKitMediaKeysENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WebCore::WebKitMediaKeys *result;
  WTF *v3;
  void *v4;

  result = *(WebCore::WebKitMediaKeys **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*((_DWORD *)result + 2) == 1)
    {
      WebCore::WebKitMediaKeys::~WebKitMediaKeys(result, a2);
      return (WebCore::WebKitMediaKeys *)WTF::fastFree(v3, v4);
    }
    else
    {
      --*((_DWORD *)result + 2);
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore15WebKitMediaKeysENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::jsWebKitMediaKeysConstructorFunction_isTypeSupported(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  JSC::VM *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  uint64_t v18;
  JSValue v20;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  int v24;
  uint64_t v25;
  int v26;
  WTF::StringImpl *v27;
  int v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v20);
  }
  v6 = *((_QWORD *)a2 + 6);
  v25 = v6;
  if ((v6 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v6 + 5) == 2)
  {
    v7 = *(WTF::StringImpl **)(v6 + 8);
    if ((v7 & 1) != 0)
    {
      v7 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v6, this);
      if (!v7)
        goto LABEL_7;
    }
    else if (!v7)
    {
LABEL_7:
      v30 = v7;
      goto LABEL_8;
    }
    *(_DWORD *)v7 += 2;
    goto LABEL_7;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v25, this);
LABEL_8:
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v8 = v30;
    if (hasExceptionsAfterHandlingTraps)
    {
      v28 = 1;
      v30 = 0;
      if (v8)
      {
        if (*(_DWORD *)v8 == 2)
          WTF::StringImpl::destroy(v8, v22);
        else
          *(_DWORD *)v8 -= 2;
      }
      v14 = 0;
      v18 = 1;
      goto LABEL_33;
    }
  }
  else
  {
    v8 = v30;
  }
  v27 = v8;
  v28 = 0;
  if ((unint64_t)(*((int *)a2 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL || (v9 = *((_QWORD *)a2 + 7), v9 == 10))
  {
    v10 = 0;
    v26 = 0;
    goto LABEL_22;
  }
  v30 = (WTF::StringImpl *)v9;
  v11 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v9 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v9 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v30, this);
    goto LABEL_19;
  }
  v12 = *(WTF::StringImpl **)(v9 + 8);
  if ((v12 & 1) != 0)
  {
    v12 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v9, this);
    if (!v12)
      goto LABEL_18;
    goto LABEL_17;
  }
  if (v12)
LABEL_17:
    *(_DWORD *)v12 += 2;
LABEL_18:
  v29 = v12;
LABEL_19:
  if (*((_DWORD *)v11 + 20))
  {
    v24 = JSC::VM::hasExceptionsAfterHandlingTraps(v11);
    v10 = v29;
    if (v24)
    {
      v26 = 1;
      v29 = 0;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, v23);
        else
          *(_DWORD *)v10 -= 2;
      }
      v14 = 0;
      v17 = 1;
      goto LABEL_32;
    }
  }
  else
  {
    v10 = v29;
  }
  v26 = 0;
LABEL_22:
  v27 = 0;
  v29 = v10;
  v30 = v8;
  v25 = 0;
  if (WebCore::WebKitMediaKeys::isTypeSupported((WebCore::WebKitMediaKeys *)&v30, (const WTF::String *)&v29, a3))v14 = 7;
  else
    v14 = 6;
  v15 = v29;
  v29 = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v13);
    else
      *(_DWORD *)v15 -= 2;
  }
  v16 = v30;
  v30 = 0;
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v13);
    else
      *(_DWORD *)v16 -= 2;
  }
  v17 = 0;
LABEL_32:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E333EAB8[v17])(&v30, &v25);
  v18 = 0;
LABEL_33:
  ((void (*)(uint64_t *, WTF::StringImpl **))off_1E333EAB8[v18])(&v25, &v27);
  return v14;
}

unint64_t WebCore::jsWebKitMediaKeysPrototypeFunction_createSession(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  JSC::VM *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  WebCore::WebKitMediaKeySession *v30;
  JSC::VM *v31;
  WebCore::WebKitMediaKeySession *v32;
  WTF::StringImpl *v33;
  _DWORD *v34;
  WTF::StringImpl *v35;
  bmalloc::api *v36;
  void *v37;
  JSValue v39;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  JSValue v43;
  uint64_t v44;
  JSC::VM *v45;
  _DWORD *v46;
  WTF::StringImpl *v47;
  int v48[2];
  WTF::StringImpl *v49;
  int v50;
  uint64_t v51;
  int v52;
  WTF::StringImpl *v53;
  int v54;
  WTF::StringImpl *v55;
  WTF::StringImpl *v56;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v45 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v45, "WebKitMediaKeys", "createSession");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebKitMediaKeys::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebKitMediaKeys::s_info && v9 != 0);
  }
  if (!v8)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v45, "WebKitMediaKeys", "createSession");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v39.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v39);
  }
  v12 = *(_QWORD *)(v5 + 24);
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v13)
    return 10;
  v15 = v13;
  if (*(_BYTE *)(v13 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x19512B218);
  }
  v16 = *((_QWORD *)a2 + 6);
  *(_QWORD *)v48 = v16;
  v17 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v16 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v16 + 5) == 2)
  {
    v18 = *(WTF::StringImpl **)(v16 + 8);
    if ((v18 & 1) != 0)
    {
      v18 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v16, this);
      if (!v18)
        goto LABEL_20;
    }
    else if (!v18)
    {
LABEL_20:
      v55 = v18;
      goto LABEL_21;
    }
    *(_DWORD *)v18 += 2;
    goto LABEL_20;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v48, this);
LABEL_21:
  if (*((_DWORD *)v17 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v17);
    v19 = v55;
    if (hasExceptionsAfterHandlingTraps)
    {
      v54 = 1;
      v55 = 0;
      if (v19)
      {
        if (*(_DWORD *)v19 == 2)
          WTF::StringImpl::destroy(v19, v41);
        else
          *(_DWORD *)v19 -= 2;
      }
      v27 = 0;
      v28 = 1;
      goto LABEL_41;
    }
  }
  else
  {
    v19 = v55;
  }
  v53 = v19;
  v54 = 0;
  v20 = *((_QWORD *)a2 + 7);
  v55 = (WTF::StringImpl *)*((_QWORD *)this + 7);
  if ((v20 & 0xFFFE000000000002) != 0)
    goto LABEL_39;
  if (*(_BYTE *)(v20 + 5) != 40)
    goto LABEL_39;
  JSC::JSGenericTypedArrayView<JSC::Uint8Adaptor>::possiblySharedTypedImpl(v20, v48);
  v21 = *(_DWORD **)v48;
  if (!*(_QWORD *)v48)
    goto LABEL_39;
  v22 = *(_QWORD *)(*(_QWORD *)v48 + 32);
  if (v22)
  {
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
    {
      if ((v24 = *(_QWORD *)(MEMORY[0x1E0CC10F8] + 56)) == 0
        || !*(_BYTE *)(MEMORY[0x1E0CC10F8] + 34) && *MEMORY[0x1E0CC10F0]
        || (v23 & 0x3FFFFFFFFLL) + v24)
      {
        if (*(_QWORD *)(v22 + 32)
           ? WTF::RefPtr<JSC::SharedArrayBufferContents,WTF::RawPtrTraits<JSC::SharedArrayBufferContents>,WTF::DefaultRefDerefTraits<JSC::SharedArrayBufferContents>>::unspecifiedBoolTypeInstance
           : 0)
        {
          *(_QWORD *)v48 = 0;
          goto LABEL_37;
        }
      }
    }
  }
  if ((*(_BYTE *)(*(_QWORD *)v48 + 6) & 3) != 0)
  {
LABEL_37:
    if (*v21 == 1)
      JSC::ArrayBufferView::operator delete();
    else
      --*v21;
LABEL_39:
    v26 = 1;
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v55, 1, "initData", 9, "WebKitMediaKeys", 16, v14, "createSession", 14, "Uint8Array", 11);
    v27 = 0;
    v52 = 1;
LABEL_40:
    ((void (*)(int *, uint64_t *))off_1E333ED28[v26])(v48, &v51);
    v28 = 0;
LABEL_41:
    ((void (*)(int *, WTF::StringImpl **))off_1E333EAB8[v28])(v48, &v53);
    return v27;
  }
  v30 = (WebCore::WebKitMediaKeySession *)(v15 - 192);
  v52 = 0;
  v31 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v53 = 0;
  v46 = *(_DWORD **)v48;
  v47 = v19;
  v51 = 0;
  WebCore::WebKitMediaKeys::createSession(v12, v30, (uint64_t *)&v47, (uint64_t *)&v46, (uint64_t)v48);
  if (!v50)
  {
    v32 = *(WebCore::WebKitMediaKeySession **)v48;
    *(_QWORD *)v48 = 0;
    v27 = WebCore::wrap<WebCore::WebKitMediaKeySession>((int)this, v31, (uint64_t)v32);
    if (*((_DWORD *)v32 + 6) == 1)
    {
      WebCore::WebKitMediaKeySession::~WebKitMediaKeySession(v32);
      bmalloc::api::isoDeallocate(v36, v37);
    }
    else
    {
      --*((_DWORD *)v32 + 6);
    }
LABEL_46:
    if (v50 != -1)
      ((void (*)(WTF::StringImpl **, int *))off_1E333EDE8[v50])(&v55, v48);
    v50 = -1;
    v34 = v46;
    v46 = 0;
    if (v34)
    {
      if (*v34 == 1)
        JSC::ArrayBufferView::operator delete();
      else
        --*v34;
    }
    v35 = v47;
    v47 = 0;
    if (v35)
    {
      if (*(_DWORD *)v35 == 2)
        WTF::StringImpl::destroy(v35, v33);
      else
        *(_DWORD *)v35 -= 2;
    }
    v26 = 0;
    goto LABEL_40;
  }
  if (v50 == 1)
  {
    v33 = (WTF::StringImpl *)LOBYTE(v48[0]);
    LOBYTE(v55) = v48[0];
    v42 = v49;
    v49 = 0;
    v56 = v42;
    if (!*((_QWORD *)v4 + 2))
    {
      v43.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v48[0]), (JSC::JSGlobalObject *)&v56);
      JSC::VM::throwException(v4, this, v43);
      v42 = v56;
    }
    v56 = 0;
    if (v42)
    {
      if (*(_DWORD *)v42 == 2)
        WTF::StringImpl::destroy(v42, v33);
      else
        *(_DWORD *)v42 -= 2;
    }
    v27 = 0;
    goto LABEL_46;
  }
  v44 = std::__throw_bad_variant_access[abi:sn180100]();
  return _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore21WebKitMediaKeySessionENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(v44);
}

WebCore::WebKitMediaKeySession *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore21WebKitMediaKeySessionENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WebCore::WebKitMediaKeySession **a2)
{
  WebCore::WebKitMediaKeySession *result;
  bmalloc::api *v3;
  void *v4;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*((_DWORD *)result + 6) == 1)
    {
      WebCore::WebKitMediaKeySession::~WebKitMediaKeySession(result);
      return (WebCore::WebKitMediaKeySession *)bmalloc::api::isoDeallocate(v3, v4);
    }
    else
    {
      --*((_DWORD *)result + 6);
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore21WebKitMediaKeySessionENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore37WebKitPlaybackTargetAvailabilityEvent4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

unint64_t WebCore::jsWebLockManagerPrototypeFunction_request(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  JSC::JSGlobalObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  char **v22;
  BOOL v23;
  JSC::VM *v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  unint64_t v31;
  WebCore::JSDOMGlobalObject *v32;
  unsigned int v33;
  WebCore::JSWebLockGrantedCallback *v34;
  void *v35;
  _DWORD *v36;
  WTF::StringImpl *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  JSC::JSCell *v44;
  _DWORD *v45;
  BOOL v46;
  WebCore::AbortSignal *v47;
  BOOL v48;
  BOOL v49;
  JSValue v50;
  uint64_t Object;
  JSC::Structure *v52;
  WTF::StringImpl *v53;
  WTF::StringImpl *v54;
  unint64_t v55;
  JSC::VM *v56;
  double v57;
  BOOL v58;
  WTF::StringImpl *v59;
  WTF::StringImpl *v60;
  uint64_t v61;
  WTF::StringImpl *v62;
  const char **v63;
  int v64;
  const char *v65;
  int v66;
  int v67;
  int v68;
  bmalloc::api *v69;
  void *v70;
  char **v71;
  WTF::StringImpl *v72;
  WTF::StringImpl *v73;
  uint64_t v74;
  WTF::StringImpl *v75;
  WTF::StringImpl *v76;
  unint64_t v77;
  uint64_t v78;
  _BOOL4 v79;
  uint64_t v80;
  uint64_t v82;
  JSC::VM *v83;
  double v84;
  unint64_t v85;
  WebCore::JSDOMGlobalObject *v86;
  unsigned int v87;
  WebCore::JSWebLockGrantedCallback *v88;
  WebCore::AbortSignal *v89;
  void *v90;
  WebCore::JSWebLockGrantedCallback *v91;
  WebCore::AbortSignal *v92;
  WTF::StringImpl *v93;
  uint64_t v94;
  uint64_t v95;
  WebCore::DOMGuardedObject *v96;
  uint64_t v97;
  bmalloc::api *v99;
  void *v100;
  objc_class *v101;
  WebCore::DOMGuardedObject *v102;
  uint16x8_t v103;
  int v104;
  WTF::StringImpl *v105;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v107;
  void *v109;
  bmalloc::api *v110;
  void *v111;
  BOOL v112;
  int v113;
  uint64_t v114;
  int *v115;
  int v116;
  BOOL v117;
  int v118;
  uint64_t v119;
  _DWORD *v120;
  BOOL v122;
  unint64_t v123;
  WTF::StringImpl *v124;
  _QWORD *v125;
  WebCore::DOMGuardedObject *v126;
  WTF::StringImpl *v127;
  int v128;
  WTF::StringImpl *v129;
  WebCore::AbortSignal *v130;
  int v131;
  WTF::StringImpl *v132;
  int v133;
  WebCore::DOMGuardedObject *v134;
  WebCore::AbortSignal *v135;
  WebCore::JSWebLockGrantedCallback *v136;
  _DWORD *v137[2];

  v5 = *((_QWORD *)this + 7);
  v6 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  if (!v7)
  {
    __break(0xC471u);
    JUMPOUT(0x19512BE1CLL);
  }
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v126 = v15;
  v19 = *((_QWORD *)a2 + 5);
  if ((v19 & 0xFFFE000000000002) != 0)
    goto LABEL_186;
  v20 = *(unsigned int *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C);
  v21 = *(_DWORD *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C) != 0;
  v22 = (char **)(16 * v20);
  if ((_DWORD)v20)
    v23 = v22 == &WebCore::JSWebLockManager::s_info;
  else
    v23 = 1;
  if (!v23)
  {
    do
    {
      v22 = (char **)v22[2];
      v21 = v22 != 0;
    }
    while (v22 != &WebCore::JSWebLockManager::s_info && v22 != 0);
  }
  if (!v21)
  {
LABEL_186:
    WebCore::rejectPromiseWithThisTypeError(v15, (WebCore::DeferredPromise *)"LockManager", "request", v17);
    goto LABEL_157;
  }
  v25 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = *((int *)a2 + 8) - 1;
  if (v26 >= 3)
    v26 = 3;
  if (v26 == 3)
  {
    v40 = *(_QWORD **)(v19 + 24);
    v41 = *((_QWORD *)a2 + 6);
    v134 = (WebCore::DOMGuardedObject *)v41;
    if ((v41 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v41 + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v134, this);
LABEL_58:
      if (*((_DWORD *)v25 + 20))
      {
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v25);
        v43 = v129;
        if (hasExceptionsAfterHandlingTraps)
        {
          v133 = 1;
          v129 = 0;
          if (v43)
          {
            if (*(_DWORD *)v43 == 2)
              WTF::StringImpl::destroy(v43, v107);
            else
              *(_DWORD *)v43 -= 2;
          }
          v95 = 1;
          goto LABEL_156;
        }
      }
      else
      {
        v43 = v129;
      }
      v132 = v43;
      v133 = 0;
      v44 = (JSC::JSCell *)*((_QWORD *)a2 + 7);
      v45 = (_DWORD *)*((_QWORD *)this + 7);
      v137[0] = v45;
      v125 = v40;
      v124 = v43;
      if (((unint64_t)v44 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v46 = 0;
        v47 = 0;
        v48 = 0;
        v49 = 1;
        goto LABEL_141;
      }
      v123 = v13;
      if (((unint64_t)v44 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v44)) == 0)
      {
        JSC::throwTypeError();
        goto LABEL_188;
      }
      v52 = (JSC::Structure *)Object;
      WTF::AtomStringImpl::addLiteral();
      v53 = v134;
      v55 = JSC::JSObject::get(v52, this, (unint64_t)v134);
      if (v53)
      {
        if (*(_DWORD *)v53 == 2)
          WTF::StringImpl::destroy(v53, v54);
        else
          *(_DWORD *)v53 -= 2;
      }
      if (v45[20] && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v45))
        goto LABEL_188;
      if (v55 == 10)
      {
        v122 = 0;
        goto LABEL_76;
      }
      v56 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v55 >= 0xFFFE000000000000)
      {
        v112 = (_DWORD)v55 == 0;
        goto LABEL_272;
      }
      *(_QWORD *)&v57 = v55 - 0x2000000000000;
      if (v55 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
      {
        if (v57 <= 0.0)
        {
          v58 = v57 < 0.0;
          goto LABEL_75;
        }
      }
      else
      {
        if ((v55 & 0xFFFE000000000002) != 0)
        {
          v58 = v55 == 7;
          goto LABEL_75;
        }
        v113 = *(unsigned __int8 *)(v55 + 5);
        if (v113 == 3)
        {
          v116 = *(_DWORD *)(v55 + 8);
LABEL_265:
          v112 = v116 == 0;
          goto LABEL_272;
        }
        if (v113 == 2)
        {
          v114 = *(_QWORD *)(v55 + 8);
          if ((v114 & 1) != 0)
            v115 = (int *)(v55 + 16);
          else
            v115 = (int *)(v114 + 4);
          v116 = *v115;
          goto LABEL_265;
        }
        if ((*(_BYTE *)(16 * (*(_DWORD *)v55 & 0xFFFFFFFE) + 0xA) & 1) != 0)
        {
          v112 = *(_QWORD *)(16 * (*(_DWORD *)v55 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_272:
          v58 = !v112;
LABEL_75:
          v122 = v58;
          if (!*((_DWORD *)v56 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v56))
          {
LABEL_76:
            WTF::AtomStringImpl::addLiteral();
            v59 = v134;
            v61 = JSC::JSObject::get(v52, this, (unint64_t)v134);
            if (v59)
            {
              if (*(_DWORD *)v59 == 2)
                WTF::StringImpl::destroy(v59, v60);
              else
                *(_DWORD *)v59 -= 2;
            }
            if (v45[20] && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v45))
              goto LABEL_188;
            if (v61 == 10)
            {
              v49 = 1;
              goto LABEL_110;
            }
            v62 = (WTF::StringImpl *)*((_QWORD *)this + 7);
            v127 = v62;
            v134 = (WebCore::DOMGuardedObject *)v61;
            if ((v61 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v61 + 5) != 2)
            {
              JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v134, this);
              v63 = (const char **)v129;
              if (v129)
                goto LABEL_88;
              goto LABEL_185;
            }
            v63 = *(const char ***)(v61 + 8);
            if ((v63 & 1) != 0)
            {
              v63 = *(const char ***)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v61, this);
              if (!v63)
              {
LABEL_87:
                v129 = (WTF::StringImpl *)v63;
                if (v63)
                {
LABEL_88:
                  v64 = *((_DWORD *)v63 + 4);
                  v65 = v63[1];
                  v66 = *((_DWORD *)v63 + 1);
                  if (v65 == "exclusive" || v66 != 9)
                  {
                    if (v65 != "exclusive" || v66 != 9)
                    {
                      if (v65 == "shared" || v66 != 6)
                      {
                        if (v66 != 6 || v65 != "shared")
                          goto LABEL_94;
                      }
                      else if ((v64 & 4) != 0)
                      {
                        if (*v65 != 115 || *(_DWORD *)(v65 + 1) != 1701994856 || *(_DWORD *)(v65 + 2) != 1684370017)
                          goto LABEL_94;
                      }
                      else
                      {
                        if (*(_WORD *)v65 != 115)
                          goto LABEL_94;
                        if (*(_QWORD *)(v65 + 4) != 0x64006500720061 || *(_QWORD *)(v65 + 2) != 0x65007200610068)
                          goto LABEL_94;
                      }
                      v71 = &off_1E3335708;
LABEL_104:
                      v68 = *((unsigned __int8 *)v71 + 16);
                      v67 = 1;
LABEL_105:
                      v129 = 0;
                      if (*(_DWORD *)v63 == 2)
                        WTF::StringImpl::destroy((WTF::StringImpl *)v63, v60);
                      else
                        *(_DWORD *)v63 -= 2;
                      goto LABEL_107;
                    }
                  }
                  else if ((v64 & 4) != 0)
                  {
                    if (*v65 != 101 || *(_DWORD *)(v65 + 1) != 1970037624 || *(_DWORD *)(v65 + 5) != 1702259059)
                    {
LABEL_94:
                      v67 = 0;
                      v68 = 0;
                      goto LABEL_105;
                    }
                  }
                  else
                  {
                    if (*(_WORD *)v65 != 101)
                      goto LABEL_94;
                    v103 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v65 + 2), (int16x8_t)xmmword_1968C1900);
                    v103.i16[0] = vminvq_u16(v103);
                    if (!v103.i32[0])
                      goto LABEL_94;
                  }
                  v71 = &WebCore::parseEnumerationFromString<WebCore::WebLockMode>(WTF::String const&)::mappings;
                  goto LABEL_104;
                }
LABEL_185:
                v68 = 0;
                v67 = 0;
LABEL_107:
                if (*((_DWORD *)v62 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v62) & 1) != 0)
                  goto LABEL_133;
                if (!v67)
                {
LABEL_132:
                  JSC::throwTypeError();
LABEL_133:
                  v131 = 1;
                  v13 = v123;
LABEL_134:
                  v82 = 1;
LABEL_155:
                  ((void (*)(WebCore::DOMGuardedObject **, WTF::StringImpl **))off_1E333F030[v82])(&v134, &v129);
                  v95 = 0;
LABEL_156:
                  ((void (*)(WebCore::DOMGuardedObject **, WTF::StringImpl **))off_1E333EAB8[v95])(&v134, &v132);
                  goto LABEL_157;
                }
                v49 = v68 != 0;
LABEL_110:
                WTF::AtomStringImpl::addLiteral();
                v72 = v134;
                v74 = JSC::JSObject::get(v52, this, (unint64_t)v134);
                if (v72)
                {
                  if (*(_DWORD *)v72 == 2)
                    WTF::StringImpl::destroy(v72, v73);
                  else
                    *(_DWORD *)v72 -= 2;
                }
                if (v45[20] && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v45))
                  goto LABEL_133;
                if (v74 == 10)
                {
                  v47 = 0;
                  goto LABEL_116;
                }
                v134 = (WebCore::DOMGuardedObject *)*((_QWORD *)this + 7);
                if ((v74 & 0xFFFE000000000002) == 0)
                {
                  v78 = *(unsigned int *)(16 * (*(_DWORD *)v74 & 0xFFFFFFFE) + 0x4C);
                  v79 = *(_DWORD *)(16 * (*(_DWORD *)v74 & 0xFFFFFFFE) + 0x4C) != 0;
                  if ((_DWORD)v78)
                  {
                    v80 = 16 * v78;
                    if ((char **)v80 != &WebCore::JSAbortSignal::s_info)
                    {
                      do
                      {
                        v80 = *(_QWORD *)(v80 + 16);
                        v79 = v80 != 0;
                      }
                      while ((char **)v80 != &WebCore::JSAbortSignal::s_info && v80 != 0);
                    }
                  }
                  if (v79)
                  {
                    v47 = *(WebCore::AbortSignal **)(v74 + 24);
                    if (v47)
                    {
                      ++*((_DWORD *)v47 + 6);
LABEL_116:
                      WTF::AtomStringImpl::addLiteral();
                      v75 = v134;
                      v77 = JSC::JSObject::get(v52, this, (unint64_t)v134);
                      if (v75)
                      {
                        if (*(_DWORD *)v75 == 2)
                          WTF::StringImpl::destroy(v75, v76);
                        else
                          *(_DWORD *)v75 -= 2;
                      }
                      if (v45[20] && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v45) & 1) != 0)
                        goto LABEL_233;
                      if (v77 == 10)
                      {
                        v48 = 0;
                        goto LABEL_122;
                      }
                      v83 = (JSC::VM *)*((_QWORD *)this + 7);
                      if (v77 >= 0xFFFE000000000000)
                      {
                        v117 = (_DWORD)v77 == 0;
                      }
                      else
                      {
                        *(_QWORD *)&v84 = v77 - 0x2000000000000;
                        if (v77 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
                        {
                          if (v84 <= 0.0)
                          {
                            v48 = v84 < 0.0;
                            goto LABEL_139;
                          }
LABEL_270:
                          v48 = 1;
                          goto LABEL_139;
                        }
                        if ((v77 & 0xFFFE000000000002) != 0)
                        {
                          v48 = v77 == 7;
LABEL_139:
                          v13 = v123;
                          if (!*((_DWORD *)v83 + 20))
                            goto LABEL_140;
                          if (JSC::VM::hasExceptionsAfterHandlingTraps(v83))
                          {
LABEL_233:
                            v131 = 1;
                            v13 = v123;
                            if (!v47)
                              goto LABEL_134;
                            if (*((_DWORD *)v47 + 6) == 1)
                            {
                              WebCore::AbortSignal::~AbortSignal(v47, v109);
                              bmalloc::api::isoDeallocate(v110, v111);
                            }
                            else
                            {
                              --*((_DWORD *)v47 + 6);
                            }
                            goto LABEL_189;
                          }
LABEL_122:
                          v13 = v123;
LABEL_140:
                          v46 = v122;
LABEL_141:
                          LOBYTE(v129) = v49;
                          BYTE1(v129) = v46;
                          BYTE2(v129) = v48;
                          v130 = v47;
                          v131 = 0;
                          v85 = *((_QWORD *)a2 + 8);
                          v86 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x28);
                          v137[0] = *((_DWORD **)this + 7);
                          if ((v85 & 0xFFFE000000000002) == 0
                            && (v87 = *(unsigned __int8 *)(v85 + 5), v87 >= 0x17)
                            && ((v87 & 0xFE) == 0x1A
                             || (*(_BYTE *)(v85 + 6) & 4) != 0
                             && ((*(void (**)(WebCore::DOMGuardedObject **__return_ptr, unint64_t))(16 * *(unsigned int *)(16 * (*(_DWORD *)v85 & 0xFFFFFFFE) + 0x4C) + 0x38))(&v134, v85), (_BYTE)v134)))
                          {
                            v88 = (WebCore::JSWebLockGrantedCallback *)WTF::fastMalloc((WTF *)0x20);
                            v128 = 0;
                            v132 = 0;
                            v136 = WebCore::JSWebLockGrantedCallback::JSWebLockGrantedCallback(v88, v85, v86);
                            v137[0] = v124;
                            LOWORD(v134) = (_WORD)v129;
                            BYTE2(v134) = BYTE2(v129);
                            v89 = v130;
                            v130 = 0;
                            v135 = v89;
                            v127 = 0;
                            WebCore::WebLockManager::request(v125, (WTF::StringImpl **)v137, (char *)&v134, (_DWORD **)&v136, (uint64_t *)&v126);
                            v91 = v136;
                            v136 = 0;
                            if (v91)
                            {
                              if (*((_DWORD *)v91 + 4) == 1)
                                (*(void (**)(WebCore::JSWebLockGrantedCallback *))(*(_QWORD *)v91 + 16))(v91);
                              else
                                --*((_DWORD *)v91 + 4);
                            }
                            v92 = v135;
                            v135 = 0;
                            if (v92)
                            {
                              if (*((_DWORD *)v92 + 6) == 1)
                              {
                                WebCore::AbortSignal::~AbortSignal(v92, v90);
                                bmalloc::api::isoDeallocate(v99, v100);
                              }
                              else
                              {
                                --*((_DWORD *)v92 + 6);
                              }
                            }
                            v93 = (WTF::StringImpl *)v137[0];
                            v137[0] = 0;
                            if (v93)
                            {
                              if (*(_DWORD *)v93 == 2)
                                WTF::StringImpl::destroy(v93, (WTF::StringImpl *)v90);
                              else
                                *(_DWORD *)v93 -= 2;
                            }
                            v94 = 0;
                          }
                          else
                          {
                            WebCore::throwArgumentMustBeFunctionError((uint64_t)this, (uint64_t)v137, 2, "grantedCallback", 16, "LockManager", 12, v18, "request", 8);
                            v94 = 1;
                            v128 = 1;
                          }
                          ((void (*)(WebCore::DOMGuardedObject **, WTF::StringImpl **))off_1E333F020[v94])(&v134, &v127);
                          v82 = 0;
                          goto LABEL_155;
                        }
                        v118 = *(unsigned __int8 *)(v77 + 5);
                        if (v118 == 3)
                        {
                          v117 = *(_DWORD *)(v77 + 8) == 0;
                        }
                        else
                        {
                          if (v118 == 2)
                          {
                            v119 = *(_QWORD *)(v77 + 8);
                            if ((v119 & 1) != 0)
                              v120 = (_DWORD *)(v77 + 16);
                            else
                              v120 = (_DWORD *)(v119 + 4);
                            v48 = *v120 != 0;
                            goto LABEL_139;
                          }
                          if ((*(_BYTE *)(16 * (*(_DWORD *)v77 & 0xFFFFFFFE) + 0xA) & 1) == 0)
                            goto LABEL_270;
                          v117 = *(_QWORD *)(16 * (*(_DWORD *)v77 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
                        }
                      }
                      v48 = !v117;
                      goto LABEL_139;
                    }
                  }
                }
                goto LABEL_132;
              }
            }
            else if (!v63)
            {
              goto LABEL_87;
            }
            *(_DWORD *)v63 += 2;
            goto LABEL_87;
          }
LABEL_188:
          v131 = 1;
LABEL_189:
          v13 = v123;
          goto LABEL_134;
        }
      }
      v58 = 1;
      goto LABEL_75;
    }
    v42 = *(WTF::StringImpl **)(v41 + 8);
    if ((v42 & 1) != 0)
    {
      v42 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v41, this);
      if (!v42)
        goto LABEL_57;
    }
    else if (!v42)
    {
LABEL_57:
      v129 = v42;
      goto LABEL_58;
    }
    *(_DWORD *)v42 += 2;
    goto LABEL_57;
  }
  if (v26 == 2)
  {
    v27 = *(_QWORD **)(v19 + 24);
    v28 = *((_QWORD *)a2 + 6);
    v134 = (WebCore::DOMGuardedObject *)v28;
    if ((v28 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v28 + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v134, this);
LABEL_35:
      if (*((_DWORD *)v25 + 20))
      {
        v104 = JSC::VM::hasExceptionsAfterHandlingTraps(v25);
        v30 = v132;
        if (v104)
        {
          LODWORD(v130) = 1;
          v132 = 0;
          if (v30)
          {
            if (*(_DWORD *)v30 == 2)
              WTF::StringImpl::destroy(v30, v105);
            else
              *(_DWORD *)v30 -= 2;
          }
          v39 = 1;
          goto LABEL_51;
        }
      }
      else
      {
        v30 = v132;
      }
      v129 = v30;
      LODWORD(v130) = 0;
      v31 = *((_QWORD *)a2 + 7);
      v32 = *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x28);
      v127 = (WTF::StringImpl *)*((_QWORD *)this + 7);
      if ((v31 & 0xFFFE000000000002) == 0
        && (v33 = *(unsigned __int8 *)(v31 + 5), v33 >= 0x17)
        && ((v33 & 0xFE) == 0x1A
         || (*(_BYTE *)(v31 + 6) & 4) != 0
         && ((*(void (**)(WebCore::DOMGuardedObject **__return_ptr, unint64_t))(16
                                                                                                * *(unsigned int *)(16 * (*(_DWORD *)v31 & 0xFFFFFFFE) + 0x4C)
                                                                                                + 0x38))(&v134, v31), (_BYTE)v134)))
      {
        v34 = (WebCore::JSWebLockGrantedCallback *)WTF::fastMalloc((WTF *)0x20);
        v133 = 0;
        v129 = 0;
        v127 = v30;
        v132 = 0;
        v137[0] = WebCore::JSWebLockGrantedCallback::JSWebLockGrantedCallback(v34, v31, v32);
        LOWORD(v134) = 1;
        BYTE2(v134) = 0;
        v135 = 0;
        WebCore::WebLockManager::request(v27, &v127, (char *)&v134, v137, (uint64_t *)&v126);
        if (v135)
        {
          if (*((_DWORD *)v135 + 6) == 1)
          {
            WebCore::AbortSignal::~AbortSignal(v135, v35);
            bmalloc::api::isoDeallocate(v69, v70);
          }
          else
          {
            --*((_DWORD *)v135 + 6);
          }
        }
        v36 = v137[0];
        v137[0] = 0;
        if (v36)
        {
          if (v36[4] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v36 + 16))(v36);
          else
            --v36[4];
        }
        v37 = v127;
        v127 = 0;
        if (v37)
        {
          if (*(_DWORD *)v37 == 2)
            WTF::StringImpl::destroy(v37, (WTF::StringImpl *)v35);
          else
            *(_DWORD *)v37 -= 2;
        }
        v38 = 0;
      }
      else
      {
        v38 = 1;
        WebCore::throwArgumentMustBeFunctionError((uint64_t)this, (uint64_t)&v127, 1, "grantedCallback", 16, "LockManager", 12, v18, "request", 8);
        v133 = 1;
      }
      ((void (*)(WebCore::DOMGuardedObject **, WTF::StringImpl **))off_1E333F020[v38])(&v134, &v132);
      v39 = 0;
LABEL_51:
      ((void (*)(WebCore::DOMGuardedObject **, WTF::StringImpl **))off_1E333EAB8[v39])(&v134, &v129);
      goto LABEL_157;
    }
    v29 = *(WTF::StringImpl **)(v28 + 8);
    if ((v29 & 1) != 0)
    {
      v29 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v28, this);
      if (!v29)
        goto LABEL_34;
    }
    else if (!v29)
    {
LABEL_34:
      v132 = v29;
      goto LABEL_35;
    }
    *(_DWORD *)v29 += 2;
    goto LABEL_34;
  }
  v50.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v16);
  JSC::VM::throwException(v25, this, v50);
LABEL_157:
  v96 = v126;
  v126 = 0;
  if (v96)
  {
    if (*((_DWORD *)v96 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v96 + 16))(v96);
    else
      --*((_DWORD *)v96 + 4);
  }
  v97 = *(_QWORD *)(v5 + 16);
  if (v97)
  {
    if (*(_QWORD *)(v5 + 24) != v97)
    {
      v101 = *(objc_class **)(v97 + 8);
      JSC::VM::clearException((JSC::VM *)v5);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v134);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v134, v101, 0);
      v102 = v134;
      v134 = 0;
      if (v102)
      {
        if (*((_DWORD *)v102 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v102 + 16))(v102);
        else
          --*((_DWORD *)v102 + 4);
      }
    }
  }
  if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsWebLockManagerPrototypeFunction_query(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  objc_class *v25;
  WebCore::DOMGuardedObject *v26;
  WebCore::DOMGuardedObject *v27;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x19512C434);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v27 = v15;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_32;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSWebLockManager::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSWebLockManager::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_32:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"LockManager", "query", v16);
    v27 = 0;
  }
  else
  {
    WebCore::WebLockManager::query(*(_QWORD **)(v17 + 24), (uint64_t *)&v27);
    v14 = v27;
    v27 = 0;
    if (!v14)
      goto LABEL_28;
  }
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
LABEL_28:
  v23 = *(_QWORD *)(v10 + 16);
  if (v23)
  {
    if (*(_QWORD *)(v10 + 24) != v23)
    {
      v25 = *(objc_class **)(v23 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v27);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v27, v25, 0);
      v26 = v27;
      v27 = 0;
      if (v26)
      {
        if (*((_DWORD *)v26 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v26 + 16))(v26);
        else
          --*((_DWORD *)v26 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore24JSWebLockGrantedCallbackENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

WebCore::AbortSignal *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore14WebLockManager7OptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, _QWORD *a2)
{
  WebCore::AbortSignal *result;
  bmalloc::api *v3;
  void *v4;

  result = (WebCore::AbortSignal *)a2[1];
  a2[1] = 0;
  if (result)
  {
    if (*((_DWORD *)result + 6) == 1)
    {
      WebCore::AbortSignal::~AbortSignal(result, a2);
      return (WebCore::AbortSignal *)bmalloc::api::isoDeallocate(v3, v4);
    }
    else
    {
      --*((_DWORD *)result + 6);
    }
  }
  return result;
}

uint64_t WebCore::toJSNewlyCreated<WebCore::IDLInterface<WebCore::WebSocket>,WebCore::ExceptionOr<WTF::Ref<WebCore::WebSocket,WTF::RawPtrTraits<WebCore::WebSocket>,WTF::DefaultRefDerefTraits<WebCore::WebSocket>>>>(JSC *this, uint64_t a2, JSC::VM **a3, unsigned __int8 *a4)
{
  int v4;
  WebCore::WebSocket *v5;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  bmalloc::api *v11;
  void *v12;
  JSC::JSGlobalObject *v15;
  WTF::StringImpl *v16;
  JSValue v17;
  WebCore::JSWebSocket *v18;
  JSC::VM *v19;
  WebCore::WebSocket *v20;
  WTF::StringImpl *v21;

  v4 = *((_DWORD *)a4 + 4);
  if (!v4)
  {
    v5 = *(WebCore::WebSocket **)a4;
    *(_QWORD *)a4 = 0;
    v20 = v5;
    if (*(uint64_t (***)(WebCore::WebSocket *__hidden))v5 != off_1E336E1E8)
    {
      __break(0xC471u);
      JUMPOUT(0x19512C658);
    }
    v7 = WebCore::getDOMStructure<WebCore::JSWebSocket>(*(WebCore::JSWebSocket **)(a2 + 56), (JSC::VM *)a2);
    v8 = WebCore::JSWebSocket::create(v7, a2, (uint64_t *)&v20);
    WebCore::cacheWrapper<WebCore::WebSocket,WebCore::JSWebSocket>(*(_QWORD *)(a2 + 3320), (uint64_t)v5, v8);
    if (v20)
    {
      if (*((_DWORD *)v20 + 6) == 1)
      {
        WebCore::WebSocket::~WebSocket(v20, v9);
        bmalloc::api::isoDeallocate(v11, v12);
      }
      else
      {
        --*((_DWORD *)v20 + 6);
      }
    }
    return v8;
  }
  if (v4 == 1)
  {
    v15 = (JSC::JSGlobalObject *)*a4;
    LOBYTE(v20) = *a4;
    v16 = (WTF::StringImpl *)*((_QWORD *)a4 + 1);
    *((_QWORD *)a4 + 1) = 0;
    v21 = v16;
    if (!*((_QWORD *)*a3 + 2))
    {
      v17.super.isa = (Class)WebCore::createDOMException(this, v15, (JSC::JSGlobalObject *)&v21);
      JSC::VM::throwException(*a3, this, v17);
      v16 = v21;
    }
    v21 = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v15);
      else
        *(_DWORD *)v16 -= 2;
    }
    return 0;
  }
  v18 = (WebCore::JSWebSocket *)std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::getDOMStructure<WebCore::JSWebSocket>(v18, v19);
}

uint64_t WebCore::getDOMStructure<WebCore::JSWebSocket>(WebCore::JSWebSocket *a1, JSC::VM *a2)
{
  uint64_t result;
  WebCore::JSDOMGlobalObject *v5;
  JSC::JSCell *Prototype;
  uint64_t v7;

  result = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSWebSocket::s_info);
  if (!result)
  {
    Prototype = (JSC::JSCell *)WebCore::JSWebSocket::createPrototype(a1, a2, v5);
    v7 = JSC::Structure::create((uint64_t *)a1, (int)a2, Prototype);
    return WebCore::cacheDOMStructure((JSCell *)a2, v7, (uint64_t)&WebCore::JSWebSocket::s_info);
  }
  return result;
}

WebCore::WebSocket *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore9WebSocketENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WebCore::WebSocket **a2)
{
  WebCore::WebSocket *result;
  bmalloc::api *v3;
  void *v4;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*((_DWORD *)result + 6) == 1)
    {
      WebCore::WebSocket::~WebSocket(result, a2);
      return (WebCore::WebSocket *)bmalloc::api::isoDeallocate(v3, v4);
    }
    else
    {
      --*((_DWORD *)result + 6);
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore9WebSocketENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_BYTE *WebCore::jsWebSocketPrototypeFunction_close(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WTF::StringImpl *v12;
  int v13;
  unint64_t v14;
  int v15;
  int v16;
  double v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  int v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  uint64_t v23;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  JSValue v27;
  WTF::StringImpl *v28;
  char hasExceptionsAfterHandlingTraps;
  double v30;
  uint64_t v31;
  WTF::StringImpl *v32;
  int v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  int v36[2];
  WTF::StringImpl *v37;
  char v38;

  v4 = *((_QWORD *)this + 7);
  v31 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "WebSocket", "close");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSWebSocket::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSWebSocket::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "WebSocket", "close");
  v12 = *(WTF::StringImpl **)(v5 + 24);
  v13 = *((_DWORD *)a2 + 8);
  if (v13 == 1)
  {
    v15 = 0;
LABEL_33:
    v19 = 0;
    v33 = 0;
    goto LABEL_36;
  }
  v14 = *((_QWORD *)a2 + 6);
  if (v14 == 10)
  {
    v15 = 0;
  }
  else
  {
    *(_QWORD *)v36 = *((_QWORD *)a2 + 6);
    if (v14 < 0xFFFE000000000000 || (v14 & 0x80000000) != 0)
    {
      if (v14 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v14;
      }
      else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v36, this);
      }
      else
      {
        *(_QWORD *)&v17 = v14 - 0x2000000000000;
      }
      if (*(_DWORD *)(v4 + 80))
      {
        v30 = v17;
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4);
        v17 = v30;
        if ((hasExceptionsAfterHandlingTraps & 1) != 0)
          return 0;
      }
      if (v17 >= 65535.0)
      {
        LOWORD(v16) = -1;
      }
      else if (v17 <= 0.0)
      {
        LOWORD(v16) = 0;
      }
      else
      {
        v16 = (int)v17;
      }
    }
    else if ((v14 & 0xFFFF0000) != 0)
    {
      LOWORD(v16) = -1;
    }
    else
    {
      LOWORD(v16) = v14;
    }
    v15 = (unsigned __int16)v16 | 0x10000;
    v13 = *((_DWORD *)a2 + 8);
  }
  if ((unint64_t)(v13 - 3) >= 0xFFFFFFFFFFFFFFFELL)
    goto LABEL_33;
  v18 = *((_QWORD *)a2 + 7);
  if (v18 == 10)
    goto LABEL_33;
  WebCore::valueToUSVString(this, v18, (uint64_t)&v32);
  v20 = v33;
  if (!v33)
  {
    v19 = v32;
LABEL_36:
    v32 = 0;
    v34 = v19;
    WebCore::WebSocket::close(v12, v15, (uint64_t)&v34, v36);
    v22 = v34;
    v34 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, v21);
      else
        *(_DWORD *)v22 -= 2;
    }
    if (!v38)
    {
      v23 = 10;
LABEL_41:
      v20 = v33;
      goto LABEL_42;
    }
    v25 = (WTF::StringImpl *)LOBYTE(v36[0]);
    LOBYTE(v34) = v36[0];
    v26 = v37;
    v37 = 0;
    v35 = v26;
    if (!*(_QWORD *)(v4 + 16))
    {
      v27.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v36[0]), (JSC::JSGlobalObject *)&v35);
      JSC::VM::throwException((JSC::VM *)v4, this, v27);
      v26 = v35;
    }
    v35 = 0;
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
        WTF::StringImpl::destroy(v26, v25);
      else
        *(_DWORD *)v26 -= 2;
    }
    if (v38)
    {
      v28 = v37;
      v37 = 0;
      if (v28)
      {
        if (*(_DWORD *)v28 != 2)
        {
          v23 = 0;
          *(_DWORD *)v28 -= 2;
          goto LABEL_41;
        }
        WTF::StringImpl::destroy(v28, v25);
      }
    }
    v23 = 0;
    goto LABEL_41;
  }
  v23 = 0;
LABEL_42:
  if (v20 != -1)
    ((void (*)(int *, WTF::StringImpl **))off_1E333EAB8[v20])(v36, &v32);
  return (_BYTE *)v23;
}

uint64_t WebCore::jsWebSocketPrototypeFunction_send(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  JSValue v16;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  _DWORD *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  BOOL v28;
  int v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  JSValue v44;
  WTF::StringImpl *v45;
  WTF::StringImpl *v46;
  uint64_t v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  WTF *v55;
  int v56;
  WTF::StringImpl *v57;
  WTF::StringImpl *v58;
  WTF::StringImpl *v59;
  JSValue v61;
  WTF::StringImpl *v62;
  WTF::StringImpl *v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  uint64_t v72;
  int v73;
  WTF::StringImpl *v74;
  WTF::StringImpl *v75;
  JSValue v76;
  WTF::StringImpl *v77;
  WTF::StringImpl *v78;
  WTF::StringImpl *v79;
  JSValue v80;
  WTF::StringImpl *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  JSC::VM *v86;
  WTF::StringImpl *v87;
  int v88;
  WTF::StringImpl *v89;
  WTF::StringImpl *v90;
  JSC::VM *v91;
  WTF::StringImpl *v92;
  char v93;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v86 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v86, "WebSocket", "send");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSWebSocket::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSWebSocket::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v86, "WebSocket", "send");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v16.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v16);
  }
  v19 = *((_QWORD *)a2 + 6);
  if ((v19 & 0xFFFE000000000002) == 0)
  {
    v20 = *(unsigned __int8 *)(v19 + 5);
    if (v20 >= 0x17)
    {
      if (v20 == 38)
      {
        v21 = *(_QWORD *)(v10 + 24);
        v91 = v9;
        v22 = (_DWORD *)JSC::JSArrayBuffer::toWrapped((uint64_t)v9, v19);
        if (v22)
        {
          v24 = (uint64_t)v22;
          *v22 += 2;
          v89 = 0;
          WTF::Ref<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>::~Ref((uint64_t *)&v89);
          LODWORD(v90) = 0;
          v89 = 0;
          v91 = (JSC::VM *)v24;
          v25 = *(_DWORD *)(v21 + 80);
          if ((v25 - 2) >= 2)
          {
            if (!v25)
            {
              WTF::Ref<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>::~Ref((uint64_t *)&v91);
              LOBYTE(v91) = 8;
              v92 = 0;
              if (!*((_QWORD *)v9 + 2))
              {
                v44.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)8, (JSC::JSGlobalObject *)&v92);
                JSC::VM::throwException(v9, this, v44);
                v46 = v92;
                v92 = 0;
                if (v46)
                {
                  if (*(_DWORD *)v46 == 2)
                    WTF::StringImpl::destroy(v46, v45);
                  else
                    *(_DWORD *)v46 -= 2;
                }
              }
              v18 = 0;
              v47 = 0;
              goto LABEL_66;
            }
            v48 = *(_DWORD *)(v21 + 128);
            if (*(_BYTE *)(v24 + 64) && (v83 = *(_QWORD *)(v24 + 32)) != 0)
            {
              v84 = *(_QWORD *)(v83 + 32);
              v28 = __CFADD__(v48, (_DWORD)v84);
              v85 = v48 + v84;
              if (v28)
                v85 = -1;
              *(_DWORD *)(v21 + 128) = v85;
              v51 = *(_QWORD *)(v21 + 72);
            }
            else
            {
              v49 = *(_DWORD *)(v24 + 48);
              v28 = __CFADD__(v48, v49);
              v50 = v48 + v49;
              if (v28)
                v50 = -1;
              *(_DWORD *)(v21 + 128) = v50;
              v51 = *(_QWORD *)(v21 + 72);
            }
            (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)v51 + 32))(v51, v24, 0);
          }
          else
          {
            if (*(_BYTE *)(v24 + 64) && (v82 = *(_QWORD *)(v24 + 32)) != 0)
              v26 = *(_QWORD *)(v82 + 32);
            else
              LODWORD(v26) = *(_DWORD *)(v24 + 48);
            v27 = *(_DWORD *)(v21 + 132);
            v28 = __CFADD__(v27, (_DWORD)v26);
            v29 = v27 + v26;
            if (v28)
              v29 = -1;
            if (v26 <= 0x7DuLL)
              v30 = 6;
            else
              v30 = 8;
            if (WORD1(v26))
              v31 = 14;
            else
              v31 = v30;
            v28 = __CFADD__(v29, v31);
            v32 = v29 + v31;
            if (v28)
              v32 = -1;
            *(_DWORD *)(v21 + 132) = v32;
          }
          WTF::Ref<JSC::ArrayBuffer,WTF::RawPtrTraits<JSC::ArrayBuffer>,WTF::DefaultRefDerefTraits<JSC::ArrayBuffer>>::~Ref((uint64_t *)&v91);
          v47 = 0;
          v18 = 10;
        }
        else
        {
          WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v91, 0, "data", 5, "WebSocket", 10, v23, "send", 5, "ArrayBuffer", 12);
          v18 = 0;
          v47 = 1;
          LODWORD(v90) = 1;
        }
LABEL_66:
        ((void (*)(JSC::VM **, WTF::StringImpl **))off_1E333F3A8[v47])(&v91, &v89);
        return v18;
      }
      if (v20 - 39 <= 0xB)
      {
        v33 = *(_QWORD *)(v10 + 24);
        v91 = v9;
        JSC::JSArrayBufferView::toWrapped((JSC::JSArrayBufferView *)v19, &v89);
        v35 = v89;
        if (!v89)
        {
          WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v91, 0, "data", 5, "WebSocket", 10, v34, "send", 5, "ArrayBufferView", 16);
          v88 = 1;
          v77 = v89;
          v89 = 0;
          if (v77)
          {
            if (*(_DWORD *)v77 == 1)
              JSC::ArrayBufferView::operator delete();
            else
              --*(_DWORD *)v77;
          }
          v18 = 0;
          v36 = 1;
          goto LABEL_42;
        }
        v88 = 0;
        v87 = 0;
        WebCore::WebSocket::send(v33, v89, &v91);
        if (*(_DWORD *)v35 == 1)
          JSC::ArrayBufferView::operator delete();
        else
          --*(_DWORD *)v35;
        if (!v93)
        {
          v18 = 10;
LABEL_41:
          v36 = 0;
LABEL_42:
          ((void (*)(JSC::VM **, WTF::StringImpl **))off_1E333E4E8[v36])(&v91, &v87);
          return v18;
        }
        v78 = (WTF::StringImpl *)v91;
        LOBYTE(v89) = (_BYTE)v91;
        v79 = v92;
        v92 = 0;
        v90 = v79;
        if (!*((_QWORD *)v9 + 2))
        {
          v80.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v91, (JSC::JSGlobalObject *)&v90);
          JSC::VM::throwException(v9, this, v80);
          v79 = v90;
        }
        v90 = 0;
        if (v79)
        {
          if (*(_DWORD *)v79 == 2)
            WTF::StringImpl::destroy(v79, v78);
          else
            *(_DWORD *)v79 -= 2;
        }
        if (v93)
        {
          v81 = v92;
          v92 = 0;
          if (v81)
          {
            if (*(_DWORD *)v81 != 2)
            {
              v18 = 0;
              *(_DWORD *)v81 -= 2;
              goto LABEL_41;
            }
            WTF::StringImpl::destroy(v81, v78);
          }
        }
        v18 = 0;
        goto LABEL_41;
      }
      v37 = *(unsigned int *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C);
      v38 = 16 * v37;
      if ((char **)(16 * v37) != &WebCore::JSBlob::s_info
        && *(_DWORD *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C) != 0)
      {
        v52 = 16 * v37;
        do
          v52 = *(_QWORD *)(v52 + 16);
        while ((char **)v52 != &WebCore::JSBlob::s_info && v52 != 0);
        if (v52)
        {
          v40 = *(_QWORD *)(v10 + 24);
          v91 = v9;
          do
            v38 = *(_QWORD *)(v38 + 16);
          while ((char **)v38 != &WebCore::JSBlob::s_info && v38 != 0);
          if (!v38)
            goto LABEL_81;
          goto LABEL_49;
        }
      }
      else if ((_DWORD)v37)
      {
        v40 = *(_QWORD *)(v10 + 24);
        v91 = v9;
LABEL_49:
        v41 = *(_QWORD *)(v19 + 24);
        if (v41)
        {
          v42 = *(_DWORD *)(v40 + 80);
          if ((v42 - 2) < 2)
          {
            if (*(_BYTE *)(v41 + 64))
            {
              LODWORD(v43) = *(_DWORD *)(v41 + 56);
            }
            else
            {
              v66 = WebCore::ThreadableBlobRegistry::blobSize((WebCore::ThreadableBlobRegistry *)(v41 + 80), a2);
              v43 = v66 & ~(v66 >> 63);
              *(_QWORD *)(v41 + 56) = v43;
              *(_BYTE *)(v41 + 64) = 1;
            }
            v67 = *(_DWORD *)(v40 + 132);
            v28 = __CFADD__(v67, (_DWORD)v43);
            v68 = v67 + v43;
            if (v28)
              v68 = -1;
            if (v43 <= 0x7DuLL)
              v69 = 6;
            else
              v69 = 8;
            if (WORD1(v43))
              v70 = 14;
            else
              v70 = v69;
            v28 = __CFADD__(v68, v70);
            v71 = v68 + v70;
            if (v28)
              v71 = -1;
            *(_DWORD *)(v40 + 132) = v71;
            return 10;
          }
          if (v42)
          {
            v64 = *(_DWORD *)(v40 + 128);
            if (*(_BYTE *)(v41 + 64))
            {
              v65 = *(_QWORD *)(v41 + 56);
            }
            else
            {
              v72 = WebCore::ThreadableBlobRegistry::blobSize((WebCore::ThreadableBlobRegistry *)(v41 + 80), a2);
              v65 = v72 & ~(v72 >> 63);
              *(_QWORD *)(v41 + 56) = v65;
              *(_BYTE *)(v41 + 64) = 1;
            }
            v28 = __CFADD__(v64, (_DWORD)v65);
            v73 = v64 + v65;
            if (v28)
              v73 = -1;
            *(_DWORD *)(v40 + 128) = v73;
            (*(void (**)(_QWORD, uint64_t, JSC::CallFrame *))(**(_QWORD **)(v40 + 72) + 40))(*(_QWORD *)(v40 + 72), v41, a3);
            return 10;
          }
          LOBYTE(v91) = 8;
          v92 = 0;
          if (!*((_QWORD *)v9 + 2))
          {
            v61.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)8, (JSC::JSGlobalObject *)&v92);
            JSC::VM::throwException(v9, this, v61);
            v63 = v92;
            v92 = 0;
            if (v63)
            {
              if (*(_DWORD *)v63 == 2)
                WTF::StringImpl::destroy(v63, v62);
              else
                *(_DWORD *)v63 -= 2;
            }
          }
          return 0;
        }
LABEL_81:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v91, 0, "data", 5, "WebSocket", 10, a8, "send", 5, "Blob", 5);
        return 0;
      }
    }
  }
  v55 = *(WTF **)(v10 + 24);
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v87);
  v56 = v88;
  if (v88)
  {
    v18 = 0;
  }
  else
  {
    v57 = v87;
    v87 = 0;
    v89 = v57;
    WebCore::WebSocket::send(v55, &v91);
    v59 = v89;
    v89 = 0;
    if (v59)
    {
      if (*(_DWORD *)v59 == 2)
        WTF::StringImpl::destroy(v59, v58);
      else
        *(_DWORD *)v59 -= 2;
    }
    if (v93)
    {
      v74 = (WTF::StringImpl *)v91;
      LOBYTE(v89) = (_BYTE)v91;
      v75 = v92;
      v90 = v92;
      if (!*((_QWORD *)v9 + 2))
      {
        v76.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v91, (JSC::JSGlobalObject *)&v90);
        JSC::VM::throwException(v9, this, v76);
        v75 = v90;
      }
      v90 = 0;
      if (v75)
      {
        if (*(_DWORD *)v75 == 2)
          WTF::StringImpl::destroy(v75, v74);
        else
          *(_DWORD *)v75 -= 2;
      }
      v18 = 0;
    }
    else
    {
      v18 = 10;
    }
    v56 = v88;
  }
  if (v56 != -1)
    ((void (*)(JSC::VM **, WTF::StringImpl **))off_1E333EAB8[v56])(&v91, &v87);
  return v18;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore12WebTransportENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  int v10;
  uint64_t v11;

  v2 = *a2;
  *a2 = 0;
  if (!v2)
    return result;
  v3 = *(_QWORD *)(v2 + 8);
  if (__ldaxr((unsigned __int8 *)v3))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v3))
  {
    goto LABEL_6;
  }
  result = MEMORY[0x19AEA534C](v3);
LABEL_6:
  v6 = *(_QWORD *)(v3 + 8);
  v7 = v6 - 1;
  *(_QWORD *)(v3 + 8) = v6 - 1;
  if (v6 == 1)
  {
    v11 = *(_QWORD *)(v3 + 16);
    v8 = *(_QWORD *)(v3 + 24);
    *(_QWORD *)(v3 + 24) = 0;
    v9 = v11 != 0;
  }
  else
  {
    v8 = 0;
    v9 = 1;
  }
  v10 = __ldxr((unsigned __int8 *)v3);
  if (v10 != 1)
  {
    __clrex();
LABEL_13:
    result = WTF::Lock::unlockSlow((WTF::Lock *)v3);
    if (v7)
      return result;
    goto LABEL_14;
  }
  if (__stlxr(0, (unsigned __int8 *)v3))
    goto LABEL_13;
  if (v7)
    return result;
LABEL_14:
  if (v8)
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
  if (!v9)
    return WTF::fastFree((WTF *)v3, a2);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore12WebTransportENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore19WebTransportOptionsENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  WTF *result;
  char v9;

  v3 = *(unsigned int *)(a2 + 20);
  if ((_DWORD)v3)
  {
    v4 = 24 * v3;
    v5 = *(_QWORD *)(a2 + 8) + 8;
    do
    {
      v6 = *(unsigned int *)(v5 + 8);
      if ((_DWORD)v6 != -1)
        ((void (*)(char *, uint64_t))off_1E333F820[v6])(&v9, v5);
      *(_DWORD *)(v5 + 8) = -1;
      v7 = *(WTF::StringImpl **)(v5 - 8);
      *(_QWORD *)(v5 - 8) = 0;
      if (v7)
      {
        if (*(_DWORD *)v7 == 2)
          WTF::StringImpl::destroy(v7, (WTF::StringImpl *)a2);
        else
          *(_DWORD *)v7 -= 2;
      }
      v5 += 24;
      v4 -= 24;
    }
    while (v4);
  }
  result = *(WTF **)(a2 + 8);
  if (result)
  {
    *(_QWORD *)(a2 + 8) = 0;
    *(_DWORD *)(a2 + 16) = 0;
    return (WTF *)WTF::fastFree(result, (void *)a2);
  }
  return result;
}

unint64_t WebCore::jsWebTransportPrototypeFunction_getStats(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  objc_class *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x19512D5D4);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_35;
  v18 = 16 * (*(_DWORD *)v17 & 0xFFFFFFFE);
  v19 = *(unsigned int *)(v18 + 76);
  v20 = *(_DWORD *)(v18 + 76) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSWebTransport::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSWebTransport::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_35:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"WebTransport", "getStats", v16);
  }
  else
  {
    v30 = 0;
    WebCore::DeferredPromise::reject((uint64_t)v14, (JSC::JSGlobalObject *)6, (JSC::JSGlobalObject *)&v30, 0);
    v25 = v30;
    v30 = 0;
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, v24);
      else
        *(_DWORD *)v25 -= 2;
    }
  }
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
  v26 = *(_QWORD *)(v10 + 16);
  if (v26)
  {
    if (*(_QWORD *)(v10 + 24) != v26)
    {
      v28 = *(objc_class **)(v26 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v30);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v30, v28, 0);
      v29 = v30;
      v30 = 0;
      if (v29)
      {
        if (*((_DWORD *)v29 + 4) == 1)
          (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v29 + 16))(v29);
        else
          --*((_DWORD *)v29 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

_BYTE *WebCore::jsWebTransportPrototypeFunction_close(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  JSC::JSCell *v12;
  JSC::Structure *v13;
  char v14;
  uint64_t Object;
  WTF::StringImpl **v16;
  WTF::StringImpl *v17;
  int v18;
  WTF::StringImpl *v19;
  unint64_t v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  int v23;
  int v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  uint64_t v28;
  JSC::VM *v30;
  int v31;
  WTF::StringImpl *v32;
  int v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  uint64_t v36;
  JSC::VM *v37;
  char v38;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v30 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v30, "WebTransport", "close");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWebTransport::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWebTransport::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v30, "WebTransport", "close");
  v11 = *(_QWORD *)(v5 + 24);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v13 = 0;
    v37 = v4;
    v14 = 1;
    goto LABEL_19;
  }
  v12 = (JSC::JSCell *)*((_QWORD *)a2 + 6);
  v37 = v4;
  if (((unint64_t)v12 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v13 = 0;
    v14 = 1;
    goto LABEL_19;
  }
  if (((unint64_t)v12 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(v12);
    if (Object)
    {
      v13 = (JSC::Structure *)Object;
      v14 = 0;
LABEL_19:
      v16 = (WTF::StringImpl **)MEMORY[0x1E0CBF738];
      v17 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
      if (*MEMORY[0x1E0CBF738])
        *(_DWORD *)v17 += 2;
      if ((v14 & 1) != 0)
      {
        v18 = 0;
        v36 = 0;
        goto LABEL_36;
      }
      WTF::AtomStringImpl::addLiteral();
      v20 = JSC::JSObject::get(v13, this, (unint64_t)v34);
      if (v34)
      {
        if (*(_DWORD *)v34 == 2)
          WTF::StringImpl::destroy(v34, v19);
        else
          *(_DWORD *)v34 -= 2;
      }
      if (!*((_DWORD *)v4 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v4))
      {
        if (v20 == 10)
        {
          v18 = 0;
          v36 = 0;
        }
        else
        {
          WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, v20, &v36);
          if (HIDWORD(v36))
            goto LABEL_69;
          v18 = v36;
        }
        WTF::AtomStringImpl::addLiteral();
        v21 = JSC::JSObject::get(v13, this, (unint64_t)v34);
        if (v34)
        {
          if (*(_DWORD *)v34 == 2)
            WTF::StringImpl::destroy(v34, a2);
          else
            *(_DWORD *)v34 -= 2;
        }
        if (!*((_DWORD *)v4 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v4))
        {
          if (v21 != 10)
          {
            WebCore::valueToUSVString(this, v21, (uint64_t)&v34);
            v23 = (int)v35;
            if ((_DWORD)v35)
            {
              v24 = 1;
              goto LABEL_45;
            }
            v22 = v34;
LABEL_41:
            v34 = 0;
            if (v17)
            {
              if (*(_DWORD *)v17 == 2)
              {
                WTF::StringImpl::destroy(v17, a2);
                v23 = (int)v35;
              }
              else
              {
                v23 = 0;
                *(_DWORD *)v17 -= 2;
              }
            }
            else
            {
              v23 = 0;
            }
            v24 = 0;
            v17 = 0;
            v31 = v18;
            v32 = v22;
LABEL_45:
            v33 = v24;
            if (v23 != -1)
              ((void (*)(char *, WTF::StringImpl **, JSC::CallFrame *))off_1E333EAB8[v23])(&v38, &v34, a3);
            if (!v17)
              goto LABEL_50;
LABEL_48:
            if (*(_DWORD *)v17 == 2)
            {
              WTF::StringImpl::destroy(v17, a2);
              v24 = v33;
            }
            else
            {
              *(_DWORD *)v17 -= 2;
            }
LABEL_50:
            if (v24)
            {
              v28 = 0;
            }
            else
            {
              LODWORD(v34) = v31;
              v25 = v32;
              v32 = 0;
              v35 = v25;
              WebCore::WebTransport::close(v11, (unsigned int *)&v34);
              v27 = v35;
              v35 = 0;
              if (v27)
              {
                if (*(_DWORD *)v27 == 2)
                  WTF::StringImpl::destroy(v27, v26);
                else
                  *(_DWORD *)v27 -= 2;
              }
              v24 = 0;
              v28 = 10;
            }
            goto LABEL_55;
          }
LABEL_36:
          v22 = *v16;
          if (*v16)
            *(_DWORD *)v22 += 2;
          LODWORD(v35) = 0;
          goto LABEL_41;
        }
      }
LABEL_69:
      v24 = 1;
      v33 = 1;
      if (!v17)
        goto LABEL_50;
      goto LABEL_48;
    }
  }
  JSC::throwTypeError();
  v28 = 0;
  v24 = 1;
  v33 = 1;
LABEL_55:
  ((void (*)(WTF::StringImpl **, int *))off_1E333F5E0[v24])(&v34, &v31);
  return (_BYTE *)v28;
}

unint64_t WebCore::jsWebTransportPrototypeFunction_createBidirectionalStream(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  JSC::JSCell *v26;
  uint64_t v27;
  objc_class *v29;
  WebCore::DOMGuardedObject *v30;
  WebCore::DOMGuardedObject *v31;
  _BYTE v32[16];
  WebCore::DOMGuardedObject *v33[3];
  int v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x19512DC6CLL);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v31 = v15;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_37;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSWebTransport::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSWebTransport::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_37:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"WebTransport", "createBidirectionalStream", v16);
LABEL_31:
    if (*((_DWORD *)v14 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
    else
      --*((_DWORD *)v14 + 4);
    goto LABEL_33;
  }
  v23 = *(_QWORD *)(v17 + 24);
  v24 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v24)
    goto LABEL_31;
  v25 = v24;
  v26 = (JSC::JSCell *)(*((_DWORD *)a2 + 8) == 1 ? 10 : *((_QWORD *)a2 + 6));
  WebCore::convertDictionary<WebCore::WebTransportSendStreamOptions>((uint64_t)v33, this, v26);
  if (v34)
    goto LABEL_31;
  WebCore::WebTransport::createBidirectionalStream(v23, v25, (uint64_t)v32, (uint64_t *)&v31);
  v14 = v31;
  if (v31)
    goto LABEL_31;
LABEL_33:
  v27 = *(_QWORD *)(v10 + 16);
  if (v27)
  {
    if (*(_QWORD *)(v10 + 24) != v27)
    {
      v29 = *(objc_class **)(v27 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, v33);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v33[0], v29, 0);
      v30 = v33[0];
      v33[0] = 0;
      if (v30)
      {
        if (*((_DWORD *)v30 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v30 + 16))(v30);
        else
          --*((_DWORD *)v30 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsWebTransportPrototypeFunction_createUnidirectionalStream(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char **v20;
  BOOL v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  JSC::JSCell *v26;
  uint64_t v27;
  objc_class *v29;
  WebCore::DOMGuardedObject *v30;
  WebCore::DOMGuardedObject *v31;
  _BYTE v32[16];
  WebCore::DOMGuardedObject *v33[3];
  int v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x19512DF40);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v31 = v15;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_37;
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSWebTransport::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSWebTransport::s_info && v20 != 0);
  }
  if (!v19)
  {
LABEL_37:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"WebTransport", "createUnidirectionalStream", v16);
LABEL_31:
    if (*((_DWORD *)v14 + 4) == 1)
      (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
    else
      --*((_DWORD *)v14 + 4);
    goto LABEL_33;
  }
  v23 = *(_QWORD *)(v17 + 24);
  v24 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v24)
    goto LABEL_31;
  v25 = v24;
  v26 = (JSC::JSCell *)(*((_DWORD *)a2 + 8) == 1 ? 10 : *((_QWORD *)a2 + 6));
  WebCore::convertDictionary<WebCore::WebTransportSendStreamOptions>((uint64_t)v33, this, v26);
  if (v34)
    goto LABEL_31;
  WebCore::WebTransport::createUnidirectionalStream(v23, v25, (uint64_t)v32, (uint64_t *)&v31);
  v14 = v31;
  if (v31)
    goto LABEL_31;
LABEL_33:
  v27 = *(_QWORD *)(v10 + 16);
  if (v27)
  {
    if (*(_QWORD *)(v10 + 24) != v27)
    {
      v29 = *(objc_class **)(v27 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, v33);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v33[0], v29, 0);
      v30 = v33[0];
      v33[0] = 0;
      if (v30)
      {
        if (*((_DWORD *)v30 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v30 + 16))(v30);
        else
          --*((_DWORD *)v30 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore21WebTransportCloseInfoENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorIN7WebCore16WebTransportHashELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSA_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSH_1EJSE_SF_EEEEEEDcSJ_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  WTF *result;
  char v9;

  v3 = *((unsigned int *)a2 + 3);
  if ((_DWORD)v3)
  {
    v4 = 24 * v3;
    v5 = *(_QWORD *)a2 + 8;
    do
    {
      v6 = *(unsigned int *)(v5 + 8);
      if ((_DWORD)v6 != -1)
        ((void (*)(char *, uint64_t))off_1E333F820[v6])(&v9, v5);
      *(_DWORD *)(v5 + 8) = -1;
      v7 = *(WTF::StringImpl **)(v5 - 8);
      *(_QWORD *)(v5 - 8) = 0;
      if (v7)
      {
        if (*(_DWORD *)v7 == 2)
          WTF::StringImpl::destroy(v7, a2);
        else
          *(_DWORD *)v7 -= 2;
      }
      v5 += 24;
      v4 -= 24;
    }
    while (v4);
  }
  result = *(WTF **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

unint64_t WebCore::jsWebTransportReceiveStreamPrototypeFunction_getStats(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  objc_class *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x19512E2A0);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_35;
  v18 = 16 * (*(_DWORD *)v17 & 0xFFFFFFFE);
  v19 = *(unsigned int *)(v18 + 76);
  v20 = *(_DWORD *)(v18 + 76) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSWebTransportReceiveStream::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSWebTransportReceiveStream::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_35:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"WebTransportReceiveStream", "getStats", v16);
  }
  else
  {
    v30 = 0;
    WebCore::DeferredPromise::reject((uint64_t)v14, (JSC::JSGlobalObject *)6, (JSC::JSGlobalObject *)&v30, 0);
    v25 = v30;
    v30 = 0;
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, v24);
      else
        *(_DWORD *)v25 -= 2;
    }
  }
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
  v26 = *(_QWORD *)(v10 + 16);
  if (v26)
  {
    if (*(_QWORD *)(v10 + 24) != v26)
    {
      v28 = *(objc_class **)(v26 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v30);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v30, v28, 0);
      v29 = v30;
      v30 = 0;
      if (v29)
      {
        if (*((_DWORD *)v29 + 4) == 1)
          (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v29 + 16))(v29);
        else
          --*((_DWORD *)v29 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

unint64_t WebCore::jsWebTransportSendStreamPrototypeFunction_getStats(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  const char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char **v21;
  BOOL v22;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  objc_class *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x19512E504);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v17 = *((_QWORD *)a2 + 5);
  if ((v17 & 0xFFFE000000000002) != 0)
    goto LABEL_35;
  v18 = 16 * (*(_DWORD *)v17 & 0xFFFFFFFE);
  v19 = *(unsigned int *)(v18 + 76);
  v20 = *(_DWORD *)(v18 + 76) != 0;
  v21 = (char **)(16 * v19);
  if ((_DWORD)v19)
    v22 = v21 == &WebCore::JSWebTransportSendStream::s_info;
  else
    v22 = 1;
  if (!v22)
  {
    do
    {
      v21 = (char **)v21[2];
      v20 = v21 != 0;
    }
    while (v21 != &WebCore::JSWebTransportSendStream::s_info && v21 != 0);
  }
  if (!v20)
  {
LABEL_35:
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"WebTransportSendStream", "getStats", v16);
  }
  else
  {
    v30 = 0;
    WebCore::DeferredPromise::reject((uint64_t)v14, (JSC::JSGlobalObject *)6, (JSC::JSGlobalObject *)&v30, 0);
    v25 = v30;
    v30 = 0;
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, v24);
      else
        *(_DWORD *)v25 -= 2;
    }
  }
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
  v26 = *(_QWORD *)(v10 + 16);
  if (v26)
  {
    if (*(_QWORD *)(v10 + 24) != v26)
    {
      v28 = *(objc_class **)(v26 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v30);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v30, v28, 0);
      v29 = v30;
      v30 = 0;
      if (v29)
      {
        if (*((_DWORD *)v29 + 4) == 1)
          (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v29 + 16))(v29);
        else
          --*((_DWORD *)v29 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

uint64_t WebCore::JSWebGLRenderbuffer::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSWebGLRenderingContext::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSWebGLSampler::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSWebGLShader::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSWebGLShaderPrecisionFormat::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSWebGLSync::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSWebGLTexture::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSWebGLTransformFeedback::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSWebGLUniformLocation::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSWebGLVertexArrayObject::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSWebKitMediaKeyError::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSWebKitMediaKeySession::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSWebKitMediaKeys::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSWebKitPoint::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSWebLock::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSWebLockManager::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::WebLockManagerSnapshot::Info>>>::convert<WebCore::WebLockManagerSnapshot::Info,0ul>(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  unsigned int v6;
  uint64_t *v7;
  uint64_t i;
  uint64_t v9;
  unint64_t v10;
  size_t v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  int v29;
  unsigned __int8 *v30;
  unsigned int v31;
  unsigned __int8 *v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  JSValue v36;
  void *v37;
  JSC::VM *v38;
  uint64_t v39;
  uint64_t *v40;
  _QWORD *v42;
  JSC::VM *v43;
  BOOL v44;
  uint64_t v45;
  WTF *v46;
  _OWORD v47[4];
  uint64_t v48;
  JSC::VM *v49;
  WTF *v50;
  unint64_t v51;
  int v52;
  int v53;
  uint64_t v54;

  v43 = *(JSC::VM **)(a1 + 56);
  v48 = 0;
  v49 = v43;
  v44 = 0;
  v45 = 0x800000000;
  v46 = (WTF *)((char *)v47 + 8);
  memset(v47, 0, sizeof(v47));
  v6 = a3[3];
  if (v6 >= 9)
  {
    v44 = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v45) == 1;
    v6 = a3[3];
    if (v6)
      goto LABEL_3;
  }
  else if (v6)
  {
LABEL_3:
    v7 = (uint64_t *)(*(_QWORD *)a3 + 16);
    for (i = 24 * v6; i; i -= 24)
    {
      v9 = *(_QWORD *)(a1 + 56);
      v10 = JSC::StructureCache::emptyObjectStructureForPrototype();
      v11 = 8 * *(unsigned __int8 *)(v10 + 14);
      v12 = JSC::allocateCell<JSC::JSFinalObject>(v9, v11 + 16);
      v13 = *(_DWORD *)(v10 + 8);
      *(_DWORD *)v12 = v10 >> 4;
      *(_DWORD *)(v12 + 4) = v13;
      *(_QWORD *)(v12 + 8) = 0;
      bzero((void *)(v12 + 16), v11);
      if (*(_BYTE *)(v9 + 755))
        __dmb(0xAu);
      v14 = *v7;
      if (!*v7)
        goto LABEL_16;
      v15 = *(_QWORD *)(a1 + 56);
      v16 = *(_DWORD *)(v14 + 4);
      if (v16)
      {
        if (v16 != 1)
          goto LABEL_9;
        v30 = *(unsigned __int8 **)(v14 + 8);
        if ((*(_BYTE *)(v14 + 16) & 4) != 0)
        {
          v31 = *v30;
        }
        else
        {
          v34 = *(unsigned __int16 *)v30;
          if (v34 > 0xFF)
          {
LABEL_9:
            v17 = *(_QWORD *)(v15 + 64760);
            if (!v17 || v14 != *(_QWORD *)(v17 + 8))
              v17 = JSC::jsStringWithCacheSlowCase();
            goto LABEL_12;
          }
          v31 = v34;
        }
        v17 = *(_QWORD *)(v15 + 8 * v31 + 42216);
      }
      else
      {
        v17 = *(_QWORD *)(v15 + 41968);
      }
LABEL_12:
      if (*(_DWORD *)(v9 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9) & 1) != 0)
        goto LABEL_61;
      WTF::AtomStringImpl::addLiteral();
      v18 = v50;
      v50 = 0;
      v51 = v12;
      v52 = -1;
      v53 = 0x1000000;
      v54 = 0;
      JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v12, (JSC::VM *)v9, (unint64_t)v18, v17, 0, (uint64_t)&v50);
      if (v18)
      {
        if (*(_DWORD *)v18 == 2)
          WTF::StringImpl::destroy(v18, v19);
        else
          *(_DWORD *)v18 -= 2;
      }
LABEL_16:
      v20 = WebCore::convertEnumerationToJS<WebCore::WebLockMode>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)*((unsigned __int8 *)v7 - 8));
      if (*(_DWORD *)(v9 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9) & 1) != 0)
        goto LABEL_61;
      WTF::AtomStringImpl::addLiteral();
      v21 = v50;
      v50 = 0;
      v51 = v12;
      v52 = -1;
      v53 = 0x1000000;
      v54 = 0;
      JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v12, (JSC::VM *)v9, (unint64_t)v21, v20, 0, (uint64_t)&v50);
      if (v21)
      {
        if (*(_DWORD *)v21 == 2)
          WTF::StringImpl::destroy(v21, v22);
        else
          *(_DWORD *)v21 -= 2;
      }
      v23 = *(v7 - 2);
      if (!v23)
        goto LABEL_30;
      v24 = *(_QWORD *)(a1 + 56);
      v25 = *(_DWORD *)(v23 + 4);
      if (v25)
      {
        if (v25 == 1)
        {
          v32 = *(unsigned __int8 **)(v23 + 8);
          if ((*(_BYTE *)(v23 + 16) & 4) != 0)
          {
            v33 = *v32;
LABEL_46:
            v26 = *(_QWORD *)(v24 + 8 * v33 + 42216);
            goto LABEL_26;
          }
          v35 = *(unsigned __int16 *)v32;
          if (v35 <= 0xFF)
          {
            v33 = v35;
            goto LABEL_46;
          }
        }
        v26 = *(_QWORD *)(v24 + 64760);
        if (!v26 || v23 != *(_QWORD *)(v26 + 8))
          v26 = JSC::jsStringWithCacheSlowCase();
      }
      else
      {
        v26 = *(_QWORD *)(v24 + 41968);
      }
LABEL_26:
      if (!*(_DWORD *)(v9 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9) & 1) == 0)
      {
        WTF::AtomStringImpl::addLiteral();
        v27 = v50;
        v50 = 0;
        v51 = v12;
        v52 = -1;
        v53 = 0x1000000;
        v54 = 0;
        JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v12, (JSC::VM *)v9, (unint64_t)v27, v26, 0, (uint64_t)&v50);
        if (v27)
        {
          if (*(_DWORD *)v27 == 2)
            WTF::StringImpl::destroy(v27, v28);
          else
            *(_DWORD *)v27 -= 2;
        }
        goto LABEL_30;
      }
LABEL_61:
      v12 = 0;
LABEL_30:
      if (*((_DWORD *)v43 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v43) & 1) != 0)
        goto LABEL_74;
      v29 = v45;
      if ((_DWORD)v45 == HIDWORD(v45) || v46 != (WTF *)((char *)v47 + 8) && v46)
      {
        v36.super.isa = (Class)v12;
        if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v45, v36) == 1)
          v44 = 1;
      }
      else
      {
        *((_QWORD *)v46 + v45) = v12;
        LODWORD(v45) = v29 + 1;
      }
      v7 += 3;
    }
  }
  if (v44)
  {
    JSC::throwOutOfMemoryError();
  }
  else
  {
    v50 = v46;
    LODWORD(v51) = v45;
    v38 = *(JSC::VM **)(a2 + 56);
    if (!*((_DWORD *)v38 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v38) & 1) == 0)
    {
      v39 = JSC::constructArray();
      goto LABEL_66;
    }
  }
LABEL_74:
  v39 = 0;
LABEL_66:
  v40 = *(uint64_t **)&v47[0];
  if (*(_QWORD *)&v47[0])
  {
    v50 = (WTF *)&v45;
    v42 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v47[0], (uint64_t *)&v50);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v40, v42);
  }
  if (v46 != (WTF *)((char *)v47 + 8) && v46)
    WTF::fastFree(v46, v37);
  return v39;
}

unint64_t WebCore::JSDOMConstructor<WebCore::JSWebSocket>::create(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  unint64_t v5;

  v5 = JSC::allocateCell<WebCore::JSDOMConstructor<WebCore::JSBlob>>(a1);
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  WebCore::JSDOMConstructor<WebCore::JSWebSocket>::initializeProperties(v5, a1, a3);
  return v5;
}

uint64_t WebCore::JSDOMConstructor<WebCore::JSWebSocket>::createStructure(uint64_t *a1, int a2, JSC::JSCell *a3)
{
  uint64_t result;

  result = JSC::Structure::create(a1, a2, a3);
  *(_DWORD *)(result + 16) |= 0x80000u;
  return result;
}

uint64_t WebCore::JSWebSocket::create(unint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  WTF *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  WTF *v20;
  void *v21;
  int v22;
  unint64_t SlowCase;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  WTF *v29;

  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(_QWORD *)(v5 + 41456);
  v7 = *(_QWORD *)(v6 + 23536);
  v8 = *(_QWORD **)(v7 + 2312);
  if (!v8)
  {
    v9 = *(_QWORD *)(v6 + 22648);
    if (__ldaxr((unsigned __int8 *)v9))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v9))
    {
      goto LABEL_6;
    }
    MEMORY[0x19AEA534C](v9);
LABEL_6:
    v11 = *(_QWORD *)(v9 + 2824);
    v27 = *(_QWORD *)(v11 + 2312);
    if (!v27)
    {
      v12 = WTF::fastMalloc((WTF *)0xF8);
      WTF::CString::CString((WTF::CString *)&v29, "IsoSpace T");
      v28 = 0;
      MEMORY[0x19AEA3204](v12, &v29, v5 + 192, v5 + 1872, 32, 8, &v28);
      v14 = v28;
      v28 = 0;
      if (v14)
        (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
      v15 = v29;
      v29 = 0;
      if (v15)
      {
        if (*(_DWORD *)v15 == 1)
          WTF::fastFree(v15, v13);
        else
          --*(_DWORD *)v15;
      }
      v27 = v12;
      v16 = *(_QWORD *)(v11 + 2312);
      *(_QWORD *)(v11 + 2312) = v12;
      if (v16)
        (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
      v17 = *(unsigned int *)(v9 + 2844);
      if ((_DWORD)v17 == *(_DWORD *)(v9 + 2840))
      {
        v18 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v9 + 2832, v17 + 1, (unint64_t)&v27);
        v17 = *(unsigned int *)(v9 + 2844);
        *(_QWORD *)(*(_QWORD *)(v9 + 2832) + 8 * v17) = *v18;
      }
      else
      {
        *(_QWORD *)(*(_QWORD *)(v9 + 2832) + 8 * v17) = v12;
      }
      *(_DWORD *)(v9 + 2844) = v17 + 1;
    }
    v8 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
    JSC::GCClient::IsoSubspace::IsoSubspace();
    v19 = *(_QWORD *)(v7 + 2312);
    *(_QWORD *)(v7 + 2312) = v8;
    if (v19)
    {
      v20 = (WTF *)MEMORY[0x19AEA3528]();
      WTF::fastFree(v20, v21);
    }
    v22 = __ldxr((unsigned __int8 *)v9);
    if (v22 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v9))
        goto LABEL_24;
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v9);
  }
LABEL_24:
  SlowCase = v8[3];
  if (SlowCase < v8[4])
  {
LABEL_25:
    v8[3] = SlowCase + 32;
    goto LABEL_26;
  }
  SlowCase = v8[5];
  if ((SlowCase & 1) == 0)
  {
    v26 = *(_QWORD *)(SlowCase + 8) ^ v8[6];
    v8[4] = SlowCase + HIDWORD(v26);
    v8[5] = SlowCase + (int)v26;
    goto LABEL_25;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_26:
  *(_DWORD *)SlowCase = 0;
  v24 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v24;
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  return result;
}

_QWORD *WebCore::cacheWrapper<WebCore::WebSocket,WebCore::JSWebSocket>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *result;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *Allocator;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  _QWORD *v18;
  uint64_t v19;

  if ((byte_1EE337330 & 1) == 0)
  {
    qword_1EE337328 = (uint64_t)&off_1E33370A0;
    byte_1EE337330 = 1;
  }
  v3 = (_QWORD *)(a2 + 8);
  if (!a2)
    v3 = 0;
  if (*(_DWORD *)(a1 + 48))
  {
    v6 = (uint64_t *)(a1 + 32);
    v19 = a2;
    if (a3)
    {
      v13 = (uint64_t *)(a1 + 32);
      if ((a3 & 8) != 0)
        v10 = (a3 - 112) | 1;
      else
        v10 = a3 & 0xFFFFFFFFFFFFC000;
      if ((v10 & 1) != 0)
        v11 = v10 + 47;
      else
        v11 = *(_QWORD *)v10 + 32;
      Allocator = *(_QWORD **)(v11 + 16);
      if (!Allocator)
        Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v11 + 16) = *Allocator;
      *Allocator = a3;
      Allocator[1] = &qword_1EE337328;
      Allocator[2] = a1;
      v6 = v13;
    }
    else
    {
      Allocator = 0;
    }
    v18 = Allocator;
    result = JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>(v6, &v19, (uint64_t *)&v18);
    if (v18)
      v18[1] = 3;
  }
  else
  {
    if (a3)
    {
      v12 = v3;
      if ((a3 & 8) != 0)
        v8 = (a3 - 112) | 1;
      else
        v8 = a3 & 0xFFFFFFFFFFFFC000;
      if ((v8 & 1) != 0)
        v9 = v8 + 47;
      else
        v9 = *(_QWORD *)v8 + 32;
      result = *(_QWORD **)(v9 + 16);
      if (!result)
        result = (_QWORD *)JSC::WeakSet::findAllocator();
      *(_QWORD *)(v9 + 16) = *result;
      *result = a3;
      result[1] = &qword_1EE337328;
      result[2] = a1;
      v3 = v12;
    }
    else
    {
      result = 0;
    }
    v5 = *v3;
    *v3 = result;
    if (v5)
      *(_QWORD *)(v5 + 8) = 3;
  }
  return result;
}

uint64_t WebCore::JSWebTransport::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSWebTransportBidirectionalStream::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSWebTransportDatagramDuplexStream::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSWebTransportError::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

WTF::StringImpl *WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLDictionary<WebCore::WebTransportHash>>::convert(WTF::StringImpl **a1, JSC::JSCell *this, unsigned int *a3)
{
  JSC::VM *v4;
  uint64_t Object;
  JSC::Structure *v7;
  uint64_t v8;
  JSC::VM *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  JSC::JSArrayBufferView *v14;
  JSC::ArrayBufferView *v15;
  int v16;
  uint64_t (*v17)();
  WTF::StringImpl *v18;
  int v19;
  WTF::StringImpl *result;
  int v21;
  WTF::StringImpl *v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  WTF::StringImpl *v28;
  _DWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  char hasExceptionsAfterHandlingTraps;
  int v36;
  JSC::ArrayBufferView *v37;
  int v38;
  int v39;
  int v40;
  WTF::StringImpl *v41;
  int v42;
  WTF::StringImpl *v43;
  uint64_t v44;
  int v45;
  JSC::VM *v46;
  uint64_t *v47;
  WTF::StringImpl *v48;
  JSC::ArrayBufferView *v49;
  unsigned int v50;
  int v51;
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v4 = a1[7];
  v46 = v4;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v43 = 0;
    v44 = 0;
    v45 = 0;
LABEL_37:
    v18 = v43;
    v43 = 0;
    v37 = v18;
    LOBYTE(v38) = 0;
    v39 = -1;
    v19 = v45;
    if (v45 != -1)
    {
      ((void (*)(WTF::StringImpl **, int *, uint64_t *))off_1E333F830[v45])(&v48, &v38, &v44);
      v39 = v19;
    }
    v40 = 0;
LABEL_40:
    if (v45 != -1)
      ((void (*)(WTF::StringImpl **, uint64_t *))off_1E333F820[v45])(&v48, &v44);
    v45 = -1;
    result = v43;
    v43 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, this);
      else
        *(_DWORD *)result -= 2;
    }
    v21 = v40;
    if (v40)
    {
LABEL_61:
      if (v21 == -1)
        return result;
      return (WTF::StringImpl *)((uint64_t (*)(WTF::StringImpl **, JSC::ArrayBufferView **))off_1E333F948[v21])(&v48, &v37);
    }
    v22 = v37;
    v37 = 0;
    v48 = v22;
    LOBYTE(v49) = 0;
    v50 = -1;
    v23 = v39;
    if (v39 != -1)
    {
      ((void (*)(WTF::StringImpl **, JSC::ArrayBufferView **, int *))off_1E333F830[v39])(&v43, &v49, &v38);
      v50 = v23;
    }
    v24 = a3[3];
    if ((_DWORD)v24 == a3[2])
    {
      v25 = WTF::Vector<WebCore::WebTransportHash,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(a3, v24 + 1, (unint64_t)&v48);
      v26 = *(_QWORD *)a3 + 24 * a3[3];
      v27 = *(_QWORD *)v25;
      *(_QWORD *)v25 = 0;
      *(_BYTE *)(v26 + 8) = 0;
      v28 = (WTF::StringImpl *)(v26 + 8);
      *(_QWORD *)v26 = v27;
      *(_DWORD *)(v26 + 16) = -1;
      v29 = (_DWORD *)(v26 + 16);
      v30 = *(unsigned int *)(v25 + 16);
      if ((_DWORD)v30 == -1)
        goto LABEL_54;
      ((void (*)(WTF::StringImpl **, WTF::StringImpl *, unint64_t))off_1E333F830[v30])(&v43, v28, v25 + 8);
    }
    else
    {
      v31 = *(_QWORD *)a3;
      v32 = *(_QWORD *)a3 + 24 * v24;
      v33 = v48;
      v48 = 0;
      *(_QWORD *)(v31 + 24 * v24) = v33;
      *(_BYTE *)(v32 + 8) = 0;
      v28 = (WTF::StringImpl *)(v32 + 8);
      *(_DWORD *)(v32 + 16) = -1;
      v29 = (_DWORD *)(v32 + 16);
      LODWORD(v30) = v50;
      if (v50 == -1)
      {
        ++a3[3];
LABEL_57:
        v50 = -1;
        result = v48;
        v48 = 0;
        if (result)
        {
          if (*(_DWORD *)result == 2)
            result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v28);
          else
            *(_DWORD *)result -= 2;
        }
        v21 = v40;
        goto LABEL_61;
      }
      ((void (*)(WTF::StringImpl **, WTF::StringImpl *, JSC::ArrayBufferView **))off_1E333F830[v50])(&v43, v28, &v49);
    }
    *v29 = v30;
LABEL_54:
    v34 = v50;
    ++a3[3];
    if ((_DWORD)v34 != -1)
      ((void (*)(WTF::StringImpl **, JSC::ArrayBufferView **))off_1E333F820[v34])(&v43, &v49);
    goto LABEL_57;
  }
  if (((unint64_t)this & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(this);
    if (Object)
    {
      v7 = (JSC::Structure *)Object;
      v43 = 0;
      v44 = 0;
      v45 = 0;
      WTF::AtomStringImpl::addLiteral();
      v8 = JSC::JSObject::get(v7, (JSC::JSGlobalObject *)a1, (unint64_t)v48);
      if (v48)
      {
        if (*(_DWORD *)v48 == 2)
          WTF::StringImpl::destroy(v48, this);
        else
          *(_DWORD *)v48 -= 2;
      }
      if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
        goto LABEL_85;
      if (v8 == 10)
      {
LABEL_22:
        WTF::AtomStringImpl::addLiteral();
        v13 = v48;
        v14 = (JSC::JSArrayBufferView *)JSC::JSObject::get(v7, (JSC::JSGlobalObject *)a1, (unint64_t)v48);
        if (v13)
        {
          if (*(_DWORD *)v13 == 2)
            WTF::StringImpl::destroy(v13, this);
          else
            *(_DWORD *)v13 -= 2;
        }
        if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
          goto LABEL_85;
        if (v14 == (JSC::JSArrayBufferView *)10)
          goto LABEL_37;
        v41 = a1[7];
        v15 = (JSC::ArrayBufferView *)JSC::JSArrayBuffer::toWrapped((uint64_t)v41, (uint64_t)v14);
        if (v15)
        {
          *(_DWORD *)v15 += 2;
          v16 = 1;
          v38 = 1;
          v37 = 0;
          v49 = v15;
          v50 = 1;
          v51 = 0;
          _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN3JSC15ArrayBufferViewENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11ArrayBufferENSC_ISH_EENSE_ISH_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSG_SK_EEEEEEDcSO_DpT0_((uint64_t)&v47);
        }
        else
        {
          JSC::JSArrayBufferView::toWrapped(v14, &v37);
          if (!v37)
          {
            JSC::throwTypeError();
LABEL_85:
            v40 = 1;
            goto LABEL_40;
          }
          v16 = 0;
          v49 = v37;
          v50 = 0;
          v51 = 0;
        }
        LOBYTE(v41) = 0;
        v42 = -1;
        v17 = off_1E333F830[v16];
        ((void (*)(JSC::ArrayBufferView **, WTF::StringImpl **, JSC::ArrayBufferView **))v17)(&v37, &v41, &v49);
        v42 = v16;
        LOBYTE(v37) = 0;
        v38 = -1;
        ((void (*)(uint64_t **, JSC::ArrayBufferView **, WTF::StringImpl **))v17)(&v47, &v37, &v41);
        v38 = v16;
        v47 = &v44;
        ((void (*)(uint64_t **))off_1E333F840[v16])(&v47);
        if (v38 != -1)
          ((void (*)(uint64_t **, JSC::ArrayBufferView **))off_1E333F820[v38])(&v47, &v37);
        v38 = -1;
        if (v42 != -1)
          ((void (*)(uint64_t **, WTF::StringImpl **))off_1E333F820[v42])(&v47, &v41);
        if (v51 != -1)
          ((void (*)(JSC::ArrayBufferView **, JSC::ArrayBufferView **))off_1E333F850[v51])(&v37, &v49);
        goto LABEL_37;
      }
      v37 = (JSC::ArrayBufferView *)v8;
      v9 = a1[7];
      if ((v8 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v8 + 5) != 2)
      {
        JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v37, (JSC::JSGlobalObject *)a1);
LABEL_16:
        if (!*((_DWORD *)v9 + 20))
        {
          v11 = v41;
LABEL_18:
          LODWORD(v49) = 0;
          goto LABEL_19;
        }
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v9);
        v11 = v41;
        if ((hasExceptionsAfterHandlingTraps & 1) == 0)
          goto LABEL_18;
        v36 = 1;
        LODWORD(v49) = 1;
        v41 = 0;
        if (v11)
        {
          if (*(_DWORD *)v11 == 2)
          {
            WTF::StringImpl::destroy(v11, this);
            v36 = (int)v49;
            if (!(_DWORD)v49)
            {
              v11 = v48;
LABEL_19:
              v48 = 0;
              v12 = v43;
              v43 = v11;
              if (v12)
              {
                if (*(_DWORD *)v12 == 2)
                {
                  WTF::StringImpl::destroy(v12, this);
                  if ((_DWORD)v49 != -1)
                    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E333EAB8[v49])(&v41, &v48);
                }
                else
                {
                  *(_DWORD *)v12 -= 2;
                }
              }
              goto LABEL_22;
            }
            v40 = 1;
            if ((_DWORD)v49 == -1)
              goto LABEL_40;
LABEL_83:
            ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E333EAB8[v36])(&v41, &v48);
            goto LABEL_40;
          }
          *(_DWORD *)v11 -= 2;
        }
        v40 = 1;
        goto LABEL_83;
      }
      v10 = *(WTF::StringImpl **)(v8 + 8);
      if ((v10 & 1) != 0)
      {
        v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v8, (JSC::JSGlobalObject *)a1);
        if (!v10)
          goto LABEL_15;
      }
      else if (!v10)
      {
LABEL_15:
        v41 = v10;
        goto LABEL_16;
      }
      *(_DWORD *)v10 += 2;
      goto LABEL_15;
    }
  }
  JSC::throwTypeError();
  v21 = 1;
  v40 = 1;
  return (WTF::StringImpl *)((uint64_t (*)(WTF::StringImpl **, JSC::ArrayBufferView **))off_1E333F948[v21])(&v48, &v37);
}

unint64_t WTF::Vector<WebCore::WebTransportHash,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(unsigned int *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v3 = a3;
  v5 = *(_QWORD *)a1;
  if (*(_QWORD *)a1 > a3 || v5 + 24 * (unint64_t)a1[3] <= a3)
  {
    v9 = a1[2] + ((unint64_t)a1[2] >> 2);
    if (v9 >= 0x10)
      v10 = v9 + 1;
    else
      v10 = 16;
    if (v10 > a2)
      a2 = v10;
    WTF::Vector<WebCore::WebTransportHash,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
  }
  else
  {
    v6 = a3 - v5;
    v7 = a1[2] + ((unint64_t)a1[2] >> 2);
    if (v7 >= 0x10)
      v8 = v7 + 1;
    else
      v8 = 16;
    if (v8 > a2)
      a2 = v8;
    WTF::Vector<WebCore::WebTransportHash,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
    return *(_QWORD *)a1 + v6;
  }
  return v3;
}

unsigned int *WTF::Vector<WebCore::WebTransportHash,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(unsigned int *result, unint64_t a2)
{
  unsigned int *v2;
  WTF *v3;
  uint64_t v4;
  int v5;
  WTF::StringImpl *v6;
  unsigned int *v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  char v16;
  char v17;

  if (result[2] < a2)
  {
    if (a2 >= 0xAAAAAAB)
    {
      __break(0xC471u);
    }
    else
    {
      v2 = result;
      v3 = *(WTF **)result;
      v4 = result[3];
      v5 = 24 * a2;
      result = (unsigned int *)WTF::fastMalloc((WTF *)(24 * a2));
      v2[2] = (v5 & 0xFFFFFFF8) / 0x18;
      v15 = v2;
      *(_QWORD *)v2 = result;
      if ((_DWORD)v4)
      {
        v7 = result;
        v8 = 0;
        v9 = 24 * v4;
        do
        {
          v10 = &v7[v8 / 4];
          v11 = (char *)v3 + v8;
          v12 = *(_QWORD *)((char *)v3 + v8);
          *(_QWORD *)((char *)v3 + v8) = 0;
          *(_QWORD *)v10 = v12;
          LOBYTE(v7[v8 / 4 + 2]) = 0;
          v6 = (WTF::StringImpl *)&v7[v8 / 4 + 2];
          v10[4] = -1;
          v13 = *(unsigned int *)((char *)v3 + v8 + 16);
          if ((_DWORD)v13 != -1)
          {
            ((void (*)(char *, WTF::StringImpl *, char *))off_1E333F830[v13])(&v16, v6, v11 + 8);
            v10[4] = v13;
            v14 = *((unsigned int *)v11 + 4);
            if ((_DWORD)v14 != -1)
              ((void (*)(char *, char *))off_1E333F820[v14])(&v17, v11 + 8);
          }
          *((_DWORD *)v11 + 4) = -1;
          result = *(unsigned int **)((char *)v3 + v8);
          *(_QWORD *)((char *)v3 + v8) = 0;
          if (result)
          {
            if (*result == 2)
              result = (unsigned int *)WTF::StringImpl::destroy((WTF::StringImpl *)result, v6);
            else
              *result -= 2;
          }
          v8 += 24;
        }
        while (v9 != v8);
      }
      if (v3)
      {
        if (*(WTF **)v15 == v3)
        {
          *(_QWORD *)v15 = 0;
          v15[2] = 0;
        }
        return (unsigned int *)WTF::fastFree(v3, v6);
      }
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore16WebTransportHashENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSC_1EJS9_SA_EEEEEEDcSE_DpT0_(uint64_t a1, unsigned int *a2)
{
  uint64_t v3;
  WTF::StringImpl *result;
  char v5;

  v3 = a2[4];
  if ((_DWORD)v3 != -1)
    ((void (*)(char *, unsigned int *))off_1E333F820[v3])(&v5, a2 + 2);
  a2[4] = -1;
  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::NetworkExtensionContentFilter::isRequired(WebCore::NetworkExtensionContentFilter *this)
{
  return objc_msgSend(MEMORY[0x1E0CD0800], "filterRequired");
}

uint64_t WebCore::NetworkExtensionContentFilter::initialize(WebCore::NetworkExtensionContentFilter *this, const WTF::URL *a2)
{
  dispatch_queue_t v3;
  void *v4;
  WTF::StringImpl *v5;
  void *v6;
  const void *v7;
  const __CFString *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  void *v11;
  uint64_t v12;
  WTF::StringImpl *v14;

  v3 = dispatch_queue_create("WebKit NetworkExtension Filtering", 0);
  v4 = (void *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = v3;
  if (v4)

  v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CD0800]), "initWithDecisionQueue:", *((_QWORD *)this + 3));
  v7 = (const void *)*((_QWORD *)this + 5);
  *((_QWORD *)this + 5) = v6;
  if (v7)
  {
    CFRelease(v7);
    v6 = (void *)*((_QWORD *)this + 5);
  }
  WebCore::applicationBundleIdentifier(v5, &v14);
  if (v14)
    v8 = (const __CFString *)WTF::StringImpl::operator NSString *();
  else
    v8 = &stru_1E3487BC0;
  objc_msgSend(v6, "setSourceAppIdentifier:", v8);
  v10 = v14;
  v14 = 0;
  if (v10)
  {
    if (*(_DWORD *)v10 == 2)
      WTF::StringImpl::destroy(v10, v9);
    else
      *(_DWORD *)v10 -= 2;
  }
  v11 = (void *)*((_QWORD *)this + 5);
  {
    LOBYTE(WebCore::presentingApplicationPIDOverride(void)::pid) = 0;
    byte_1ECE90D38 = 0;
    goto LABEL_17;
  }
  if (!byte_1ECE90D38)
  {
LABEL_17:
    v12 = getpid();
    return objc_msgSend(v11, "setSourceAppPid:", v12);
  }
  v12 = WebCore::presentingApplicationPIDOverride(void)::pid;
  return objc_msgSend(v11, "setSourceAppPid:", v12);
}

void sub_195130F0C(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void WebCore::NetworkExtensionContentFilter::responseReceived(WebCore::NetworkExtensionContentFilter *this, const WebCore::ResourceResponse *a2)
{
  void *v4;
  uint64_t v5;
  _QWORD v6[6];
  __int16 v7;
  char v8;
  uint64_t v9;
  int v10;

  WebCore::ResourceResponse::platformLazyInit((uint64_t)a2, 1);
  if ((*((_BYTE *)a2 + 8) & 2) != 0)
  {
    v7 = 0;
    v8 = 0;
    v4 = (void *)*((_QWORD *)this + 5);
    v5 = *((_QWORD *)a2 + 30);
    if (!v5)
    {
      if ((*((_BYTE *)a2 + 138) & 1) != 0)
      {
        v5 = 0;
      }
      else
      {
        WebCore::ResourceResponse::initNSURLResponse(a2);
        v5 = *((_QWORD *)a2 + 30);
      }
    }
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3321888768;
    v6[2] = ___ZN7WebCore29NetworkExtensionContentFilter16responseReceivedERKNS_16ResourceResponseE_block_invoke;
    v6[3] = &__block_descriptor_48_e8_32c94_ZTSKZN7WebCore29NetworkExtensionContentFilter16responseReceivedERKNS_16ResourceResponseEE3__0_e25_v24__0q8__NSDictionary_16l;
    v6[4] = this;
    v6[5] = &v7;
    objc_msgSend(v4, "receivedResponse:decisionHandler:", v5, v6);
    v9 = 0x7FF0000000000000;
    v10 = 0;
    WTF::BinarySemaphore::waitUntil();
  }
  else
  {
    *((_DWORD *)this + 4) = 2;
  }
}

uint64_t ___ZN7WebCore29NetworkExtensionContentFilter15willSendRequestERNS_15ResourceRequestERKNS_16ResourceResponseE_block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  const void *v7;
  const void *v8;
  const void **v9;
  const void *v10;
  const void *v11;
  const void *v12;
  int v13;
  const void *v14;

  v6 = *(_QWORD *)(a1 + 32);
  v7 = (const void *)objc_msgSend(a3, "objectForKeyedSubscript:", CFSTR("RedirectURL"));
  v8 = v7;
  v9 = *(const void ***)(a1 + 40);
  if (v7)
    CFRetain(v7);
  v10 = *v9;
  *v9 = v8;
  if (v10)
    CFRelease(v10);
  v11 = (const void *)objc_msgSend(a3, "objectForKeyedSubscript:", CFSTR("PageData"));
  v12 = v11;
  switch(a2)
  {
    case 1:
    case 4:
    case 5:
    case 6:
      v13 = 2;
      goto LABEL_7;
    case 2:
      *(_DWORD *)(v6 + 16) = 3;
      if (!v11)
        goto LABEL_11;
      goto LABEL_10;
    case 3:
      v13 = 1;
LABEL_7:
      *(_DWORD *)(v6 + 16) = v13;
      return WTF::BinarySemaphore::signal(*(WTF::BinarySemaphore **)(a1 + 48));
    default:
      if (*(_DWORD *)(v6 + 16) != 3)
        return WTF::BinarySemaphore::signal(*(WTF::BinarySemaphore **)(a1 + 48));
      if (v11)
LABEL_10:
        CFRetain(v11);
LABEL_11:
      v14 = *(const void **)(v6 + 32);
      *(_QWORD *)(v6 + 32) = v12;
      if (v14)
        CFRelease(v14);
      return WTF::BinarySemaphore::signal(*(WTF::BinarySemaphore **)(a1 + 48));
  }
}

__n128 __copy_helper_block_e8_32c115_ZTSKZN7WebCore29NetworkExtensionContentFilter15willSendRequestERNS_15ResourceRequestERKNS_16ResourceResponseEE3__0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = a2[2];
  a1[3].n128_u64[0] = a2[3].n128_u64[0];
  a1[2] = result;
  return result;
}

uint64_t ___ZN7WebCore29NetworkExtensionContentFilter16responseReceivedERKNS_16ResourceResponseE_block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  const void *v6;
  const void *v7;
  int v8;
  const void *v9;

  v5 = *(_QWORD *)(a1 + 32);
  v6 = (const void *)objc_msgSend(a3, "objectForKeyedSubscript:", CFSTR("PageData"));
  v7 = v6;
  switch(a2)
  {
    case 1:
    case 4:
    case 5:
    case 6:
      v8 = 2;
      goto LABEL_3;
    case 2:
      *(_DWORD *)(v5 + 16) = 3;
      if (!v6)
        goto LABEL_7;
      goto LABEL_6;
    case 3:
      v8 = 1;
LABEL_3:
      *(_DWORD *)(v5 + 16) = v8;
      return WTF::BinarySemaphore::signal(*(WTF::BinarySemaphore **)(a1 + 40));
    default:
      if (*(_DWORD *)(v5 + 16) != 3)
        return WTF::BinarySemaphore::signal(*(WTF::BinarySemaphore **)(a1 + 40));
      if (v6)
LABEL_6:
        CFRetain(v6);
LABEL_7:
      v9 = *(const void **)(v5 + 32);
      *(_QWORD *)(v5 + 32) = v7;
      if (v9)
        CFRelease(v9);
      return WTF::BinarySemaphore::signal(*(WTF::BinarySemaphore **)(a1 + 40));
  }
}

__n128 __copy_helper_block_e8_32c94_ZTSKZN7WebCore29NetworkExtensionContentFilter16responseReceivedERKNS_16ResourceResponseEE3__0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = a2[2];
  a1[2] = result;
  return result;
}

void WebCore::NetworkExtensionContentFilter::addData(WebCore::NetworkExtensionContentFilter *this, const WebCore::SharedBuffer *a2)
{
  void *v3;
  WebCoreSharedBufferData *v4;
  _QWORD v5[6];
  __int16 v6;
  char v7;
  WebCoreSharedBufferData *v8[2];
  int v9;

  WebCore::SharedBuffer::createNSData(a2, v8);
  v6 = 0;
  v7 = 0;
  v3 = (void *)*((_QWORD *)this + 5);
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3321888768;
  v5[2] = ___ZN7WebCore29NetworkExtensionContentFilter7addDataERKNS_12SharedBufferE_block_invoke;
  v5[3] = &__block_descriptor_48_e8_32c80_ZTSKZN7WebCore29NetworkExtensionContentFilter7addDataERKNS_12SharedBufferEE3__0_e25_v24__0q8__NSDictionary_16l;
  v5[4] = this;
  v5[5] = &v6;
  objc_msgSend(v3, "receivedData:decisionHandler:", v8[0], v5);
  v8[1] = (WebCoreSharedBufferData *)0x7FF0000000000000;
  v9 = 0;
  WTF::BinarySemaphore::waitUntil();
  v4 = v8[0];
  v8[0] = 0;
  if (v4)
    CFRelease(v4);
}

void sub_195131294(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  const void *v3;

  v3 = *(const void **)(v1 - 40);
  *(_QWORD *)(v1 - 40) = 0;
  if (v3)
    CFRelease(v3);
  _Unwind_Resume(exception_object);
}

uint64_t ___ZN7WebCore29NetworkExtensionContentFilter7addDataERKNS_12SharedBufferE_block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  const void *v6;
  const void *v7;
  int v8;
  const void *v9;

  v5 = *(_QWORD *)(a1 + 32);
  v6 = (const void *)objc_msgSend(a3, "objectForKeyedSubscript:", CFSTR("PageData"));
  v7 = v6;
  switch(a2)
  {
    case 1:
    case 4:
    case 5:
    case 6:
      v8 = 2;
      goto LABEL_3;
    case 2:
      *(_DWORD *)(v5 + 16) = 3;
      if (!v6)
        goto LABEL_7;
      goto LABEL_6;
    case 3:
      v8 = 1;
LABEL_3:
      *(_DWORD *)(v5 + 16) = v8;
      return WTF::BinarySemaphore::signal(*(WTF::BinarySemaphore **)(a1 + 40));
    default:
      if (*(_DWORD *)(v5 + 16) != 3)
        return WTF::BinarySemaphore::signal(*(WTF::BinarySemaphore **)(a1 + 40));
      if (v6)
LABEL_6:
        CFRetain(v6);
LABEL_7:
      v9 = *(const void **)(v5 + 32);
      *(_QWORD *)(v5 + 32) = v7;
      if (v9)
        CFRelease(v9);
      return WTF::BinarySemaphore::signal(*(WTF::BinarySemaphore **)(a1 + 40));
  }
}

__n128 __copy_helper_block_e8_32c80_ZTSKZN7WebCore29NetworkExtensionContentFilter7addDataERKNS_12SharedBufferEE3__0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = a2[2];
  a1[2] = result;
  return result;
}

uint64_t WebCore::NetworkExtensionContentFilter::finishedAddingData(WebCore::NetworkExtensionContentFilter *this)
{
  void *v1;
  _QWORD v3[6];
  __int16 v4;
  char v5;
  uint64_t v6;
  int v7;

  v4 = 0;
  v5 = 0;
  v1 = (void *)*((_QWORD *)this + 5);
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3321888768;
  v3[2] = ___ZN7WebCore29NetworkExtensionContentFilter18finishedAddingDataEv_block_invoke;
  v3[3] = &__block_descriptor_48_e8_32c73_ZTSKZN7WebCore29NetworkExtensionContentFilter18finishedAddingDataEvE3__0_e25_v24__0q8__NSDictionary_16l;
  v3[4] = this;
  v3[5] = &v4;
  objc_msgSend(v1, "finishedLoadingWithDecisionHandler:", v3);
  v6 = 0x7FF0000000000000;
  v7 = 0;
  return WTF::BinarySemaphore::waitUntil();
}

uint64_t ___ZN7WebCore29NetworkExtensionContentFilter18finishedAddingDataEv_block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  const void *v6;
  const void *v7;
  int v8;
  const void *v9;

  v5 = *(_QWORD *)(a1 + 32);
  v6 = (const void *)objc_msgSend(a3, "objectForKeyedSubscript:", CFSTR("PageData"));
  v7 = v6;
  switch(a2)
  {
    case 1:
    case 4:
    case 5:
    case 6:
      v8 = 2;
      goto LABEL_3;
    case 2:
      *(_DWORD *)(v5 + 16) = 3;
      if (!v6)
        goto LABEL_7;
      goto LABEL_6;
    case 3:
      v8 = 1;
LABEL_3:
      *(_DWORD *)(v5 + 16) = v8;
      return WTF::BinarySemaphore::signal(*(WTF::BinarySemaphore **)(a1 + 40));
    default:
      if (*(_DWORD *)(v5 + 16) != 3)
        return WTF::BinarySemaphore::signal(*(WTF::BinarySemaphore **)(a1 + 40));
      if (v6)
LABEL_6:
        CFRetain(v6);
LABEL_7:
      v9 = *(const void **)(v5 + 32);
      *(_QWORD *)(v5 + 32) = v7;
      if (v9)
        CFRelease(v9);
      return WTF::BinarySemaphore::signal(*(WTF::BinarySemaphore **)(a1 + 40));
  }
}

__n128 __copy_helper_block_e8_32c73_ZTSKZN7WebCore29NetworkExtensionContentFilter18finishedAddingDataEvE3__0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = a2[2];
  a1[2] = result;
  return result;
}

uint64_t *WebCore::NetworkExtensionContentFilter::replacementData@<X0>(WebCore::NetworkExtensionContentFilter *this@<X0>, uint64_t *a2@<X8>)
{
  const void *v3;
  CFIndex v4;
  uint64_t v5;
  void *v6;
  void *v7;
  CFIndex v9;

  v3 = (const void *)*((_QWORD *)this + 4);
  v4 = WTF::fastMalloc((WTF *)0x38);
  *(_DWORD *)v4 = 1;
  *(_QWORD *)(v4 + 8) = v4 + 24;
  *(_QWORD *)(v4 + 16) = 1;
  *(_BYTE *)(v4 + 40) = 0;
  *(_QWORD *)(v4 + 48) = 0;
  WebCore::FragmentedSharedBuffer::append(v4, v3);
  v9 = v4;
  v5 = WTF::fastMalloc((WTF *)0x38);
  WebCore::SharedBuffer::SharedBuffer(v5, &v9);
  WTF::Ref<WebCore::FragmentedSharedBuffer,WTF::RawPtrTraits<WebCore::FragmentedSharedBuffer>,WTF::DefaultRefDerefTraits<WebCore::FragmentedSharedBuffer>>::~Ref(&v9, v6);
  v9 = 0;
  *a2 = v5;
  return WTF::Ref<WebCore::SharedBuffer,WTF::RawPtrTraits<WebCore::SharedBuffer>,WTF::DefaultRefDerefTraits<WebCore::SharedBuffer>>::~Ref(&v9, v7);
}

void sub_19513155C(_Unwind_Exception *a1, void *a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  WTF::Ref<WebCore::FragmentedSharedBuffer,WTF::RawPtrTraits<WebCore::FragmentedSharedBuffer>,WTF::DefaultRefDerefTraits<WebCore::FragmentedSharedBuffer>>::~Ref((uint64_t *)va, a2);
  _Unwind_Resume(a1);
}

void WebCore::NetworkExtensionContentFilter::unblockHandler(WebCore::NetworkExtensionContentFilter *this@<X0>, uint64_t a2@<X8>)
{
  const void *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[3];
  _QWORD *v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v3 = (const void *)*((_QWORD *)this + 5);
  if (v3)
    CFRetain(*((CFTypeRef *)this + 5));
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  if (v3)
    CFRetain(v3);
  v4 = operator new(0x10uLL);
  *v4 = &off_1E33400A0;
  v4[1] = v3;
  v10 = v4;
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = 0;
  WTF::URL::invalidate((WTF::URL *)(a2 + 8));
  v5 = v10;
  if (!v10)
  {
    *(_QWORD *)(a2 + 72) = 0;
    *(_QWORD *)(a2 + 80) = 0;
    goto LABEL_9;
  }
  if (v10 != v9)
  {
    v10 = 0;
    *(_QWORD *)(a2 + 72) = v5;
    *(_QWORD *)(a2 + 80) = 0;
LABEL_9:
    *(_BYTE *)(a2 + 88) = 0;
    goto LABEL_10;
  }
  *(_QWORD *)(a2 + 72) = a2 + 48;
  (*(void (**)(_QWORD *))(v9[0] + 24))(v9);
  v6 = v10;
  *(_QWORD *)(a2 + 80) = 0;
  *(_BYTE *)(a2 + 88) = 0;
  if (v6 == v9)
  {
    v7 = 4;
    v6 = v9;
  }
  else
  {
    if (!v6)
      goto LABEL_10;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_10:
  if (v3)
    CFRelease(v3);
}

void sub_1951316B4(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  const void *v13;
  WTF::StringImpl *v14;

  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, a2);
    else
      *(_DWORD *)v14 -= 2;
  }
  if (v13)
    CFRelease(v13);
  _Unwind_Resume(exception_object);
}

uint64_t WebCore::ParentalControlsContentFilter::addData(WebCore::ParentalControlsContentFilter *this, const WebCore::SharedBuffer *a2)
{
  void *v3;
  const void *v4;
  const void *v5;
  const void *v6;
  CFTypeRef v7;
  uint64_t result;
  CFTypeRef cf;

  v3 = (void *)*((_QWORD *)this + 3);
  WebCore::SharedBuffer::createNSData(a2, (WebCoreSharedBufferData **)&cf);
  v4 = (const void *)objc_msgSend(v3, "addData:", cf);
  v5 = v4;
  if (v4)
    CFRetain(v4);
  v6 = (const void *)*((_QWORD *)this + 4);
  *((_QWORD *)this + 4) = v5;
  if (v6)
    CFRelease(v6);
  v7 = cf;
  cf = 0;
  if (v7)
    CFRelease(v7);
  result = objc_msgSend(*((id *)this + 3), "filterState");
  if (result <= 3)
    *((_DWORD *)this + 4) = dword_1968C1940[(int)result];
  return result;
}

void sub_195131830(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, CFTypeRef cf)
{
  if (cf)
    CFRelease(cf);
  _Unwind_Resume(exception_object);
}

uint64_t WebCore::ParentalControlsContentFilter::finishedAddingData(id *this)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t result;

  v2 = (void *)objc_msgSend(this[3], "dataComplete");
  v3 = v2;
  if (v2)
    CFRetain(v2);
  v4 = this[4];
  this[4] = v3;
  if (v4)
    CFRelease(v4);
  result = objc_msgSend(this[3], "filterState");
  if (result <= 3)
    *((_DWORD *)this + 4) = dword_1968C1940[(int)result];
  return result;
}

uint64_t *WebCore::ParentalControlsContentFilter::replacementData@<X0>(WebCore::ParentalControlsContentFilter *this@<X0>, uint64_t *a2@<X8>)
{
  const void *v3;
  CFIndex v4;
  uint64_t v5;
  void *v6;
  void *v7;
  CFIndex v9;

  v3 = (const void *)*((_QWORD *)this + 4);
  v4 = WTF::fastMalloc((WTF *)0x38);
  *(_DWORD *)v4 = 1;
  *(_QWORD *)(v4 + 8) = v4 + 24;
  *(_QWORD *)(v4 + 16) = 1;
  *(_BYTE *)(v4 + 40) = 0;
  *(_QWORD *)(v4 + 48) = 0;
  WebCore::FragmentedSharedBuffer::append(v4, v3);
  v9 = v4;
  v5 = WTF::fastMalloc((WTF *)0x38);
  WebCore::SharedBuffer::SharedBuffer(v5, &v9);
  WTF::Ref<WebCore::FragmentedSharedBuffer,WTF::RawPtrTraits<WebCore::FragmentedSharedBuffer>,WTF::DefaultRefDerefTraits<WebCore::FragmentedSharedBuffer>>::~Ref(&v9, v6);
  v9 = 0;
  *a2 = v5;
  return WTF::Ref<WebCore::SharedBuffer,WTF::RawPtrTraits<WebCore::SharedBuffer>,WTF::DefaultRefDerefTraits<WebCore::SharedBuffer>>::~Ref(&v9, v7);
}

void sub_195131950(_Unwind_Exception *a1, void *a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  WTF::Ref<WebCore::FragmentedSharedBuffer,WTF::RawPtrTraits<WebCore::FragmentedSharedBuffer>,WTF::DefaultRefDerefTraits<WebCore::FragmentedSharedBuffer>>::~Ref((uint64_t *)va, a2);
  _Unwind_Resume(a1);
}

uint64_t WebCore::ParentalControlsContentFilter::unblockHandler@<X0>(WebCore::ParentalControlsContentFilter *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  WTF::StringImpl *v6;

  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v4 = *((_QWORD *)this + 3);
  if (v4)
    CFRetain(*((CFTypeRef *)this + 3));
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = 0;
  WTF::URL::invalidate((WTF::URL *)(a2 + 8));
  *(_QWORD *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = v4;
  *(_BYTE *)(a2 + 88) = 0;
  return 0;
}

void sub_195131A00(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

uint64_t WebCore::ParentalControlsContentFilter::setHasConsumedSandboxExtension(uint64_t this)
{
  if (WebCore::ParentalControlsContentFilter::m_sandboxExtensionState)
    WebCore::ParentalControlsContentFilter::m_sandboxExtensionState = this ^ 1;
  return this;
}

uint64_t WebCore::cocoaTypeToImageType(WTF **this, const WTF::String *a2)
{
  const WTF::StringImpl *v3;
  WTF::StringImpl *v4;
  char v5;
  WTF::StringImpl *v6;
  const WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  char v10;
  WTF::StringImpl *v11;
  const WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  char v14;
  WTF::StringImpl *v15;
  const WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  int v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;

  MEMORY[0x19AEA5508](&v20, objc_msgSend((id)*MEMORY[0x1E0CEC600], "identifier"));
  v5 = WTF::equal(*this, v20, v3);
  v6 = v20;
  v20 = 0;
  if (v6)
  {
    if (*(_DWORD *)v6 == 2)
    {
      WTF::StringImpl::destroy(v6, v4);
      if ((v5 & 1) != 0)
        return 1;
      goto LABEL_7;
    }
    *(_DWORD *)v6 -= 2;
  }
  if ((v5 & 1) != 0)
    return 1;
LABEL_7:
  MEMORY[0x19AEA5508](&v20, objc_msgSend((id)*MEMORY[0x1E0CEC580], "identifier"));
  v10 = WTF::equal(*this, v20, v8);
  v11 = v20;
  v20 = 0;
  if (v11)
  {
    if (*(_DWORD *)v11 == 2)
    {
      WTF::StringImpl::destroy(v11, v9);
      if ((v10 & 1) != 0)
        return 2;
      goto LABEL_13;
    }
    *(_DWORD *)v11 -= 2;
  }
  if ((v10 & 1) != 0)
    return 2;
LABEL_13:
  MEMORY[0x19AEA5508](&v20, objc_msgSend((id)*MEMORY[0x1E0CEC530], "identifier"));
  v14 = WTF::equal(*this, v20, v12);
  v15 = v20;
  v20 = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
    {
      WTF::StringImpl::destroy(v15, v13);
      if ((v14 & 1) != 0)
        return 3;
      goto LABEL_19;
    }
    *(_DWORD *)v15 -= 2;
  }
  if ((v14 & 1) != 0)
    return 3;
LABEL_19:
  MEMORY[0x19AEA5508](&v20, objc_msgSend((id)*MEMORY[0x1E0CEC4F8], "identifier"));
  v18 = WTF::equal(*this, v20, v16);
  v19 = v20;
  v20 = 0;
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v17);
    else
      *(_DWORD *)v19 -= 2;
  }
  if (v18)
    return 4;
  else
    return 0;
}

void sub_195131C40(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

uint64_t WebCore::Pasteboard::fileContentState(WebCore::Pasteboard *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  _BOOL4 v7;
  WTF *v8;
  uint64_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  const WTF::String *v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  BOOL v20;
  unsigned int v21;
  unint64_t v22;
  void *v23;
  WTF *v24;
  const WTF::StringImpl *v25;
  char v26;
  WTF::StringImpl *v27;
  uint64_t v28;
  uint64_t result;
  WTF *v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  WTF *v36;
  uint64_t v37;
  WTF::StringImpl *v38;
  WTF *v39;
  uint64_t v40;
  char v41;
  WTF::StringImpl *v42;

  v2 = WebCore::s_platformStrategies;
  v3 = *(_QWORD *)(WebCore::s_platformStrategies + 16);
  if (!v3)
  {
    v3 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)WebCore::s_platformStrategies + 24))(WebCore::s_platformStrategies);
    *(_QWORD *)(v2 + 16) = v3;
  }
  if ((*(unsigned int (**)(uint64_t, char *, _QWORD))(*(_QWORD *)v3 + 104))(v3, (char *)this + 16, *((_QWORD *)this + 1)))
  {
    v4 = WebCore::s_platformStrategies;
    v5 = *(_QWORD *)(WebCore::s_platformStrategies + 16);
    if (!v5)
    {
      v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)WebCore::s_platformStrategies + 24))(WebCore::s_platformStrategies);
      *(_QWORD *)(v4 + 16) = v5;
      if (!v5)
        return 0;
    }
    (*(void (**)(WTF **__return_ptr, uint64_t, char *, _QWORD, _QWORD))(*(_QWORD *)v5 + 208))(&v39, v5, (char *)this + 16, *((_QWORD *)this + 3), *((_QWORD *)this + 1));
    if (!v41)
      return 0;
    v7 = 1;
    v8 = v39;
    if (HIDWORD(v40))
    {
      if (HIDWORD(v40) == 1 && *((_BYTE *)v39 + 112) != 2)
      {
        if (!*((_BYTE *)v39 + 112))
        {
          v9 = *((_QWORD *)v39 + 6);
          if (v9)
            v7 = *(_DWORD *)(v9 + 4) == 0;
        }
        v10 = v7;
        LOBYTE(v7) = 1;
        if (v10 && !*((_BYTE *)v39 + 88))
          LOBYTE(v7) = *((_BYTE *)v39 + 89) != 0;
      }
      v11 = 120 * HIDWORD(v40);
      do
      {
        WebCore::PasteboardItemInfo::~PasteboardItemInfo(v8, v6);
        v8 = (WTF *)(v12 + 120);
        v11 -= 120;
      }
      while (v11);
      v8 = v39;
    }
    if (v8)
    {
      v39 = 0;
      LODWORD(v40) = 0;
      WTF::fastFree(v8, v6);
    }
    if (v7)
    {
      v13 = 1;
      goto LABEL_50;
    }
  }
  v39 = 0;
  v40 = 0;
  v14 = WebCore::s_platformStrategies;
  v15 = *(_QWORD *)(WebCore::s_platformStrategies + 16);
  if (!v15)
  {
    v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)WebCore::s_platformStrategies + 24))(WebCore::s_platformStrategies);
    *(_QWORD *)(v14 + 16) = v15;
  }
  (*(void (**)(uint64_t, WTF **, char *, _QWORD))(*(_QWORD *)v15 + 40))(v15, &v39, (char *)this + 16, *((_QWORD *)this + 1));
  if (!HIDWORD(v40))
  {
    v13 = 0;
    v20 = 1;
    goto LABEL_46;
  }
  v17 = 0;
  v18 = 0;
  while (1)
  {
    v19 = WebCore::cocoaTypeToImageType((WTF **)((char *)v39 + v17), v16);
    v20 = v19 == 0;
    v21 = HIDWORD(v40);
    if (v19)
      break;
    ++v18;
    v17 += 8;
    if (v18 >= HIDWORD(v40))
    {
      v13 = 0;
LABEL_45:
      if (v21)
      {
        v36 = v39;
        v37 = 8 * v21;
        do
        {
          v38 = *(WTF::StringImpl **)v36;
          *(_QWORD *)v36 = 0;
          if (v38)
          {
            if (*(_DWORD *)v38 == 2)
              WTF::StringImpl::destroy(v38, v16);
            else
              *(_DWORD *)v38 -= 2;
          }
          v36 = (WTF *)((char *)v36 + 8);
          v37 -= 8;
        }
        while (v37);
      }
LABEL_46:
      v30 = v39;
      if (!v39)
      {
        if (v20)
          return 0;
LABEL_50:
        v32 = *((_QWORD *)this + 3);
        v33 = WebCore::s_platformStrategies;
        v34 = *(_QWORD *)(WebCore::s_platformStrategies + 16);
        if (!v34)
        {
          v34 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)WebCore::s_platformStrategies + 24))(WebCore::s_platformStrategies);
          *(_QWORD *)(v33 + 16) = v34;
        }
        v35 = (*(uint64_t (**)(uint64_t, char *, _QWORD))(*(_QWORD *)v34 + 80))(v34, (char *)this + 16, *((_QWORD *)this + 1));
        if (v13)
          v31 = 2;
        else
          v31 = 1;
        if (v32 != v35)
          return 0;
        return v31;
      }
      v39 = 0;
      LODWORD(v40) = 0;
      WTF::fastFree(v30, v16);
      if (!v20)
        goto LABEL_50;
      return 0;
    }
  }
  if (!HIDWORD(v40))
  {
    v13 = 0;
    v20 = 0;
    goto LABEL_46;
  }
  v22 = 0;
  v23 = (void *)*MEMORY[0x1E0CEC618];
  while (1)
  {
    v24 = v39;
    MEMORY[0x19AEA5508](&v42, objc_msgSend(v23, "identifier", v39, v40));
    v26 = WTF::equal(*((WTF **)v24 + v22), v42, v25);
    v27 = v42;
    v42 = 0;
    if (!v27)
      goto LABEL_36;
    if (*(_DWORD *)v27 == 2)
      break;
    *(_DWORD *)v27 -= 2;
LABEL_36:
    if ((v26 & 1) != 0)
      goto LABEL_40;
LABEL_37:
    ++v22;
    v21 = HIDWORD(v40);
    if (v22 >= HIDWORD(v40))
    {
      v13 = 0;
      goto LABEL_45;
    }
  }
  WTF::StringImpl::destroy(v27, v16);
  if ((v26 & 1) == 0)
    goto LABEL_37;
LABEL_40:
  v28 = WebCore::s_platformStrategies;
  result = *(_QWORD *)(WebCore::s_platformStrategies + 16);
  if (!result)
  {
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)WebCore::s_platformStrategies + 24))(WebCore::s_platformStrategies);
    *(_QWORD *)(v28 + 16) = result;
  }
  if (v22 < HIDWORD(v40))
  {
    v13 = (*(uint64_t (**)(uint64_t, char *, char *, _QWORD))(*(_QWORD *)result + 240))(result, (char *)v39 + 8 * v22, (char *)this + 16, *((_QWORD *)this + 1)) ^ 1;
    v21 = HIDWORD(v40);
    goto LABEL_45;
  }
  __break(0xC471u);
  return result;
}

void sub_195131FF8(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, WTF::StringImpl **a9, int a10, unsigned int a11, uint64_t a12, WTF::StringImpl *a13)
{
  WTF::StringImpl **v14;
  uint64_t v15;
  WTF::StringImpl *v16;

  if (a11)
  {
    v14 = a9;
    v15 = 8 * a11;
    do
    {
      v16 = *v14;
      *v14 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, a2);
        else
          *(_DWORD *)v16 -= 2;
      }
      ++v14;
      v15 -= 8;
    }
    while (v15);
  }
  if (a9)
    WTF::fastFree((WTF *)a9, a2);
  _Unwind_Resume(exception_object);
}

WTF::StringImpl *WebCore::Pasteboard::typesSafeForBindings@<X0>(WebCore::Pasteboard *this@<X0>, const WTF::String *a2@<X1>, WTF **a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  uint64_t v10;
  WTF::StringImpl *result;
  void *v12;
  WTF *v13;
  uint64_t v14;
  WTF *v15;
  WTF *v16;

  v6 = WebCore::s_platformStrategies;
  v7 = *(_QWORD *)(WebCore::s_platformStrategies + 16);
  if (!v7)
  {
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)WebCore::s_platformStrategies + 24))(WebCore::s_platformStrategies);
    *(_QWORD *)(v6 + 16) = v7;
  }
  (*(void (**)(WTF **__return_ptr, uint64_t, char *, const WTF::String *, _QWORD))(*(_QWORD *)v7 + 224))(&v15, v7, (char *)this + 16, a2, *((_QWORD *)this + 1));
  v8 = (WTF::StringImpl *)*((_QWORD *)this + 3);
  v9 = WebCore::s_platformStrategies;
  v10 = *(_QWORD *)(WebCore::s_platformStrategies + 16);
  if (!v10)
  {
    v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)WebCore::s_platformStrategies + 24))(WebCore::s_platformStrategies);
    *(_QWORD *)(v9 + 16) = v10;
  }
  result = (WTF::StringImpl *)(*(uint64_t (**)(uint64_t, char *, _QWORD))(*(_QWORD *)v10 + 80))(v10, (char *)this + 16, *((_QWORD *)this + 1));
  if (v8 == result)
  {
    *a3 = v15;
    a3[1] = v16;
    return result;
  }
  *a3 = 0;
  a3[1] = 0;
  v13 = v15;
  if (!HIDWORD(v16))
  {
    if (!v15)
      return result;
LABEL_18:
    v15 = 0;
    LODWORD(v16) = 0;
    return (WTF::StringImpl *)WTF::fastFree(v13, v12);
  }
  v14 = 8 * HIDWORD(v16);
  do
  {
    result = *(WTF::StringImpl **)v13;
    *(_QWORD *)v13 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, (WTF::StringImpl *)v12);
      else
        *(_DWORD *)result -= 2;
    }
    v13 = (WTF *)((char *)v13 + 8);
    v14 -= 8;
  }
  while (v14);
  v13 = v15;
  if (v15)
    goto LABEL_18;
  return result;
}

void sub_1951321D4(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, WTF::StringImpl **a9, int a10, unsigned int a11)
{
  WTF::StringImpl **v12;
  uint64_t v13;
  WTF::StringImpl *v14;

  if (a11)
  {
    v12 = a9;
    v13 = 8 * a11;
    do
    {
      v14 = *v12;
      *v12 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, a2);
        else
          *(_DWORD *)v14 -= 2;
      }
      ++v12;
      v13 -= 8;
    }
    while (v13);
  }
  if (a9)
    WTF::fastFree((WTF *)a9, a2);
  _Unwind_Resume(exception_object);
}

WTF::StringImpl *WebCore::Pasteboard::typesForLegacyUnsafeBindings@<X0>(WebCore::Pasteboard *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  uint64_t v7;
  uint64_t v8;
  WTF::StringImpl *result;
  WTF::StringImpl *v10;
  WTF *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  WTF *v18;
  int v19;
  uint64_t v20;
  WTF *v21;
  uint64_t v22;
  uint64_t v23;

  v21 = 0;
  v22 = 0;
  v4 = WebCore::s_platformStrategies;
  v5 = *(_QWORD *)(WebCore::s_platformStrategies + 16);
  if (!v5)
  {
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)WebCore::s_platformStrategies + 24))(WebCore::s_platformStrategies);
    *(_QWORD *)(v4 + 16) = v5;
  }
  (*(void (**)(uint64_t, WTF **, char *, _QWORD))(*(_QWORD *)v5 + 40))(v5, &v21, (char *)this + 16, *((_QWORD *)this + 1));
  v6 = (WTF::StringImpl *)*((_QWORD *)this + 3);
  v7 = WebCore::s_platformStrategies;
  v8 = *(_QWORD *)(WebCore::s_platformStrategies + 16);
  if (!v8)
  {
    v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)WebCore::s_platformStrategies + 24))(WebCore::s_platformStrategies);
    *(_QWORD *)(v7 + 16) = v8;
  }
  result = (WTF::StringImpl *)(*(uint64_t (**)(uint64_t, char *, _QWORD))(*(_QWORD *)v8 + 80))(v8, (char *)this + 16, *((_QWORD *)this + 1));
  if (v6 != result)
  {
    v18 = v21;
    if (HIDWORD(v22))
    {
      v20 = 8 * HIDWORD(v22);
      do
      {
        result = *(WTF::StringImpl **)v18;
        *(_QWORD *)v18 = 0;
        if (result)
        {
          if (*(_DWORD *)result == 2)
            result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v10);
          else
            *(_DWORD *)result -= 2;
        }
        v18 = (WTF *)((char *)v18 + 8);
        v20 -= 8;
      }
      while (v20);
      v18 = v21;
      if (!v21)
        goto LABEL_18;
    }
    else if (!v21)
    {
LABEL_18:
      v19 = 0;
      v11 = 0;
LABEL_22:
      *(_QWORD *)a2 = v11;
      *(_DWORD *)(a2 + 8) = v19;
      *(_DWORD *)(a2 + 12) = 0;
      return result;
    }
    v21 = 0;
    LODWORD(v22) = 0;
    result = (WTF::StringImpl *)WTF::fastFree(v18, v10);
    goto LABEL_18;
  }
  v11 = v21;
  v12 = HIDWORD(v22);
  if (!HIDWORD(v22))
  {
    v19 = v22;
    goto LABEL_22;
  }
  v13 = 0;
  v21 = 0;
  v22 = 0;
  v14 = 8 * v12;
  v23 = 0;
  do
  {
    WebCore::Pasteboard::addHTMLClipboardTypesForCocoaType((uint64_t *)&v21, (WTF **)((char *)v11 + v13));
    v13 += 8;
  }
  while (v14 != v13);
  WTF::map<0ul,WTF::CrashOnOverflow,16ul,WTF::Vector<WTF::String,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> WTF::copyToVectorOf<WTF::String,WTF::ListHashSet<WTF::String,WTF::DefaultHash<WTF::String>>>(WTF::ListHashSet<WTF::String,WTF::DefaultHash<WTF::String>> const&)::{lambda(WTF::String&&)#1},WTF::ListHashSet<WTF::String,WTF::DefaultHash<WTF::String>> const>(&v21, (_QWORD *)a2);
  WTF::ListHashSet<WTF::String,WTF::DefaultHash<WTF::String>>::~ListHashSet(&v21, v15);
  v17 = 0;
  do
  {
    result = *(WTF::StringImpl **)((char *)v11 + v17);
    *(_QWORD *)((char *)v11 + v17) = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v16);
      else
        *(_DWORD *)result -= 2;
    }
    v17 += 8;
  }
  while (v14 != v17);
  if (v11)
    return (WTF::StringImpl *)WTF::fastFree(v11, v16);
  return result;
}

void sub_195132408(_Unwind_Exception *a1, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, WTF *a9, int a10, int a11)
{
  WTF *v11;
  uint64_t v12;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF::StringImpl *v16;

  WTF::ListHashSet<WTF::String,WTF::DefaultHash<WTF::String>>::~ListHashSet(&a9, a2);
  v15 = 0;
  while (1)
  {
    v16 = *(WTF::StringImpl **)((char *)v11 + v15);
    *(_QWORD *)((char *)v11 + v15) = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v14);
      else
        *(_DWORD *)v16 -= 2;
    }
    v15 += 8;
    if (v12 == v15)
    {
      if (v11)
        WTF::fastFree(v11, v14);
      _Unwind_Resume(a1);
    }
  }
}

void WebCore::Pasteboard::read(WebCore::Pasteboard *this, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  void *v10;
  unsigned int v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  WTF *v22;
  uint64_t v23;
  uint64_t v24;
  WTF *v25;
  WTF *v26;
  int v27;
  unsigned int v28;
  unsigned __int8 v29;
  const WTF::String *v30;
  unsigned int v31;
  char v32;
  uint64_t v33;
  WebCore::Pasteboard *v34;

  if (a4)
  {
    v33 = a2;
    v34 = this;
    v7 = WebCore::s_platformStrategies;
    v8 = *(_QWORD *)(WebCore::s_platformStrategies + 16);
    if (v8
      || (v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)WebCore::s_platformStrategies + 24))(WebCore::s_platformStrategies),
          (*(_QWORD *)(v7 + 16) = v8) != 0))
    {
      (*(void (**)(WTF **__return_ptr, uint64_t, uint64_t, char *, _QWORD, _QWORD))(*(_QWORD *)v8 + 200))(&v26, v8, a3, (char *)this + 16, *((_QWORD *)this + 3), *((_QWORD *)this + 1));
      if (v32)
      {
        WebCore::Pasteboard::read(WebCore::PasteboardFileReader &,std::optional<unsigned long>)::$_0::operator()(&v33, v30, v31, a3);
        if (v32)
          WebCore::PasteboardItemInfo::~PasteboardItemInfo((WebCore::PasteboardItemInfo *)&v26, v9);
      }
    }
    return;
  }
  WebCore::Pasteboard::readFilePaths(this, &v26);
  v11 = v28;
  v12 = v26;
  if (!v28)
    goto LABEL_11;
  v13 = 8 * v28;
  do
  {
    (*(void (**)(uint64_t, WTF *))(*(_QWORD *)a2 + 16))(a2, v12);
    v12 = (WTF *)((char *)v12 + 8);
    v13 -= 8;
  }
  while (v13);
  v12 = v26;
  if (!v28)
  {
LABEL_11:
    if (!v12)
      goto LABEL_12;
LABEL_22:
    v26 = 0;
    v27 = 0;
    WTF::fastFree(v12, v10);
    if (v11)
      return;
    goto LABEL_23;
  }
  v14 = 8 * v28;
  do
  {
    v15 = *(WTF::StringImpl **)v12;
    *(_QWORD *)v12 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, (WTF::StringImpl *)v10);
      else
        *(_DWORD *)v15 -= 2;
    }
    v12 = (WTF *)((char *)v12 + 8);
    v14 -= 8;
  }
  while (v14);
  v12 = v26;
  if (v26)
    goto LABEL_22;
LABEL_12:
  if (v11)
    return;
LABEL_23:
  v33 = a2;
  v34 = this;
  v16 = WebCore::s_platformStrategies;
  v17 = *(_QWORD *)(WebCore::s_platformStrategies + 16);
  if (v17
    || (v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)WebCore::s_platformStrategies + 24))(WebCore::s_platformStrategies),
        (*(_QWORD *)(v16 + 16) = v17) != 0))
  {
    (*(void (**)(WTF **__return_ptr, uint64_t, char *, _QWORD, _QWORD))(*(_QWORD *)v17 + 208))(&v26, v17, (char *)this + 16, *((_QWORD *)this + 3), *((_QWORD *)this + 1));
    if (v29)
    {
      v19 = 0;
      v20 = 0;
      while (1)
      {
        v21 = v28;
        if (v20 >= v28)
          break;
        WebCore::Pasteboard::read(WebCore::PasteboardFileReader &,std::optional<unsigned long>)::$_0::operator()(&v33, *(const WTF::String **)((char *)v26 + v19 + 32), *(_DWORD *)((char *)v26 + v19 + 44), v20++);
        v21 = v29;
        v19 += 120;
        if (!v29)
        {
          __break(1u);
          break;
        }
      }
      if ((_DWORD)v21)
      {
        v22 = v26;
        v23 = 120 * v21;
        do
        {
          WebCore::PasteboardItemInfo::~PasteboardItemInfo(v22, v18);
          v22 = (WTF *)(v24 + 120);
          v23 -= 120;
        }
        while (v23);
      }
      v25 = v26;
      if (v26)
      {
        v26 = 0;
        v27 = 0;
        WTF::fastFree(v25, v18);
      }
    }
  }
}

void sub_1951326FC(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, WTF *a9, int a10, int a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  if (a25)
    WebCore::PasteboardItemInfo::~PasteboardItemInfo((WebCore::PasteboardItemInfo *)&a9, a2);
  _Unwind_Resume(exception_object);
}

uint64_t *WebCore::Pasteboard::read(WebCore::PasteboardFileReader &,std::optional<unsigned long>)::$_0::operator()(uint64_t *result, const WTF::String *a2, unsigned int a3, uint64_t a4)
{
  WTF::StringImpl **v5;
  uint64_t *v6;
  WTF::StringImpl **v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  int v10;
  uint64_t v11;
  char v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  void *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int *v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  WTF *v30;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  WTF::StringImpl *v36;

  if (a3)
  {
    v5 = (WTF::StringImpl **)a2;
    v6 = result;
    v7 = (WTF::StringImpl **)((char *)a2 + 8 * a3);
    v8 = result[1];
    while (1)
    {
      v9 = *v5;
      if (*v5)
        *(_DWORD *)v9 += 2;
      v35 = v9;
      v10 = WebCore::cocoaTypeToImageType(&v35, a2);
      if (v10 != 2 && v10 != 4 && v10 != 3)
        goto LABEL_18;
      v11 = *v6;
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v34 = v36;
      v12 = (*(uint64_t (**)(uint64_t, WTF::StringImpl **))(*(_QWORD *)v11 + 24))(v11, &v34);
      v13 = v34;
      v34 = 0;
      if (!v13)
        goto LABEL_11;
      if (*(_DWORD *)v13 != 2)
        break;
      WTF::StringImpl::destroy(v13, a2);
      if ((v12 & 1) != 0)
      {
LABEL_12:
        v14 = WebCore::s_platformStrategies;
        v15 = *(_QWORD *)(WebCore::s_platformStrategies + 16);
        if ((v15
           || (v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)WebCore::s_platformStrategies + 24))(WebCore::s_platformStrategies),
               (*(_QWORD *)(v14 + 16) = v15) != 0))
          && ((*(void (**)(WTF::StringImpl **__return_ptr, uint64_t, uint64_t, uint64_t, WTF::StringImpl **, uint64_t, _QWORD))(*(_QWORD *)v15 + 184))(&v34, v15, a4, 1, &v35, v8 + 16, *(_QWORD *)(v8 + 8)), v34))
        {
          v16 = *v6;
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v33 = v36;
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v32 = v36;
          v36 = v34;
          v34 = 0;
          (*(void (**)(uint64_t, WTF::StringImpl **, WTF::StringImpl **, WTF::StringImpl **))(*(_QWORD *)v16 + 32))(v16, &v33, &v32, &v36);
          WTF::Ref<WebCore::SharedBuffer,WTF::RawPtrTraits<WebCore::SharedBuffer>,WTF::DefaultRefDerefTraits<WebCore::SharedBuffer>>::~Ref((uint64_t *)&v36, v18);
          v19 = v32;
          v32 = 0;
          if (v19)
          {
            if (*(_DWORD *)v19 == 2)
              WTF::StringImpl::destroy(v19, a2);
            else
              *(_DWORD *)v19 -= 2;
          }
          v20 = v33;
          v33 = 0;
          if (v20)
          {
            if (*(_DWORD *)v20 == 2)
              WTF::StringImpl::destroy(v20, a2);
            else
              *(_DWORD *)v20 -= 2;
          }
          v21 = v34;
          v34 = 0;
          if (v21)
          {
            do
              v22 = __ldaxr((unsigned int *)v21);
            while (__stlxr(v22 - 1, (unsigned int *)v21));
            if (v22 == 1)
            {
              atomic_store(1u, (unsigned int *)v21);
              v23 = *((unsigned int *)v21 + 5);
              if ((_DWORD)v23)
              {
                v24 = *((_QWORD *)v21 + 1);
                v25 = v24 + 16 * v23;
                do
                {
                  v26 = *(unsigned int **)(v24 + 8);
                  *(_QWORD *)(v24 + 8) = 0;
                  if (v26)
                  {
                    do
                    {
                      v27 = __ldaxr(v26);
                      v28 = v27 - 1;
                    }
                    while (__stlxr(v28, v26));
                    if (!v28)
                    {
                      atomic_store(1u, v26);
                      v29 = v26[6];
                      if ((_DWORD)v29 != -1)
                        ((void (*)(WTF::StringImpl **, unsigned int *))off_1E3340070[v29])(&v36, v26 + 2);
                      v26[6] = -1;
                      WTF::fastFree((WTF *)v26, a2);
                    }
                  }
                  v24 += 16;
                }
                while (v24 != v25);
              }
              v30 = (WTF *)*((_QWORD *)v21 + 1);
              if ((WTF::StringImpl *)((char *)v21 + 24) != v30 && v30 != 0)
              {
                *((_QWORD *)v21 + 1) = 0;
                *((_DWORD *)v21 + 4) = 0;
                WTF::fastFree(v30, a2);
              }
              WTF::fastFree(v21, a2);
            }
          }
          v17 = 2;
        }
        else
        {
          v17 = 0;
        }
        goto LABEL_29;
      }
LABEL_18:
      v17 = 3;
LABEL_29:
      result = (uint64_t *)v35;
      v35 = 0;
      if (result)
      {
        if (*(_DWORD *)result == 2)
          result = (uint64_t *)WTF::StringImpl::destroy((WTF::StringImpl *)result, a2);
        else
          *(_DWORD *)result -= 2;
      }
      if ((v17 == 3 || !v17) && ++v5 != v7)
        continue;
      return result;
    }
    *(_DWORD *)v13 -= 2;
LABEL_11:
    if ((v12 & 1) != 0)
      goto LABEL_12;
    goto LABEL_18;
  }
  return result;
}

void sub_195132B3C(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10, WTF::StringImpl *a11, WTF::StringImpl *a12, WTF::StringImpl *a13, char a14)
{
  WTF::StringImpl *v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  WTF *v25;
  WTF::StringImpl *v27;

  v15 = a12;
  a12 = 0;
  if (v15)
  {
    do
    {
      v16 = __ldaxr((unsigned int *)v15);
      v17 = v16 - 1;
    }
    while (__stlxr(v17, (unsigned int *)v15));
    if (!v17)
    {
      atomic_store(1u, (unsigned int *)v15);
      v18 = *((unsigned int *)v15 + 5);
      if ((_DWORD)v18)
      {
        v19 = *((_QWORD *)v15 + 1);
        v20 = v19 + 16 * v18;
        do
        {
          v21 = *(unsigned int **)(v19 + 8);
          *(_QWORD *)(v19 + 8) = 0;
          if (v21)
          {
            do
            {
              v22 = __ldaxr(v21);
              v23 = v22 - 1;
            }
            while (__stlxr(v23, v21));
            if (!v23)
            {
              atomic_store(1u, v21);
              v24 = v21[6];
              if ((_DWORD)v24 != -1)
                ((void (*)(WTF::StringImpl **, unsigned int *))off_1E3340070[v24])(&a11, v21 + 2);
              v21[6] = -1;
              WTF::fastFree((WTF *)v21, a2);
            }
          }
          v19 += 16;
        }
        while (v19 != v20);
      }
      v25 = (WTF *)*((_QWORD *)v15 + 1);
      if ((WTF::StringImpl *)((char *)v15 + 24) != v25 && v25 != 0)
      {
        *((_QWORD *)v15 + 1) = 0;
        *((_DWORD *)v15 + 4) = 0;
        WTF::fastFree(v25, a2);
      }
      WTF::fastFree(v15, a2);
    }
  }
  v27 = a13;
  a13 = 0;
  if (v27)
  {
    if (*(_DWORD *)v27 == 2)
      WTF::StringImpl::destroy(v27, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)v27 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void WebCore::Pasteboard::readAllStrings(WebCore::Pasteboard *this@<X0>, WTF **a2@<X1>, WTF **a3@<X8>)
{
  WebCore::Pasteboard::readPlatformValuesAsStrings(this, a2, (WebCore::Pasteboard *)((char *)this + 16), *((_QWORD *)this + 3), a3);
}

WTF *WebCore::Pasteboard::readString@<X0>(WebCore::Pasteboard *this@<X0>, WTF **a2@<X1>, _QWORD *a3@<X8>)
{
  WTF::StringImpl *v4;
  uint64_t v5;
  WTF *v6;
  _DWORD *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  WTF *result;
  WTF *v11;
  int v12;
  unsigned int v13;

  WebCore::Pasteboard::readPlatformValuesAsStrings(this, a2, (WebCore::Pasteboard *)((char *)this + 16), *((_QWORD *)this + 3), &v11);
  v5 = v13;
  if (v13)
  {
    v6 = v11;
    v7 = *(_DWORD **)v11;
    if (*(_QWORD *)v11)
      *v7 += 2;
    *a3 = v7;
    v8 = 8 * v5;
    do
    {
      v9 = *(WTF::StringImpl **)v6;
      *(_QWORD *)v6 = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 2)
          WTF::StringImpl::destroy(v9, v4);
        else
          *(_DWORD *)v9 -= 2;
      }
      v6 = (WTF *)((char *)v6 + 8);
      v8 -= 8;
    }
    while (v8);
  }
  else
  {
    *a3 = 0;
  }
  result = v11;
  if (v11)
  {
    v11 = 0;
    v12 = 0;
    return (WTF *)WTF::fastFree(result, v4);
  }
  return result;
}

uint64_t WebCore::Pasteboard::readStringInCustomData@<X0>(WebCore::Pasteboard *this@<X0>, const WTF::StringImpl **a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t result;
  const WTF::StringImpl *v6;
  uint64_t v7;
  _DWORD **v8;
  uint64_t v9;
  _DWORD *v10;

  result = (uint64_t)WebCore::Pasteboard::readCustomData(this);
  v7 = *(unsigned int *)(result + 20);
  if ((_DWORD)v7)
  {
    v8 = (_DWORD **)(*(_QWORD *)(result + 8) + 8);
    v9 = 32 * v7;
    while (1)
    {
      result = WTF::equal((WTF *)*(v8 - 1), *a2, v6);
      if ((_DWORD)result)
        break;
      v8 += 4;
      v9 -= 32;
      if (!v9)
        goto LABEL_5;
    }
    v10 = *v8;
    if (*v8)
      *v10 += 2;
  }
  else
  {
LABEL_5:
    v10 = 0;
  }
  *a3 = v10;
  return result;
}

WTF::StringImpl **WebCore::Pasteboard::readCustomData(WebCore::Pasteboard *this)
{
  WTF::StringImpl **v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  WTF::StringImpl *v10;
  unsigned int v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  WTF *v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int *v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t v35;
  WTF::StringImpl *v36;
  WTF *v37;
  uint64_t v38;
  uint64_t v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  WTF *v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int *v49;
  unsigned int v50;
  unsigned int v51;
  uint64_t v52;
  WTF *v53;
  void *v55;
  _Unwind_Exception *v56;
  WTF::StringImpl *v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  unsigned int v65;
  uint64_t v66;
  WTF *v67;
  WTF::StringImpl *v69;
  WTF::StringImpl *v70;
  WTF *v71;
  uint64_t v72;
  char v73;
  WTF::StringImpl *v74;
  WTF *v75;
  uint64_t v76;

  v1 = (WTF::StringImpl **)((char *)this + 32);
  if (*((_BYTE *)this + 56))
    return v1;
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v70 = v74;
  v3 = WebCore::s_platformStrategies;
  v4 = *(_QWORD *)(WebCore::s_platformStrategies + 16);
  if (!v4)
  {
    v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)WebCore::s_platformStrategies + 24))(WebCore::s_platformStrategies);
    *(_QWORD *)(v3 + 16) = v4;
  }
  (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t, WTF::StringImpl **, char *, _QWORD))(*(_QWORD *)v4 + 48))(&v74, v4, &v70, (char *)this + 16, *((_QWORD *)this + 1));
  v5 = *((_QWORD *)this + 3);
  v6 = WebCore::s_platformStrategies;
  v7 = *(_QWORD *)(WebCore::s_platformStrategies + 16);
  if (!v7)
  {
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)WebCore::s_platformStrategies + 24))(WebCore::s_platformStrategies);
    *(_QWORD *)(v6 + 16) = v7;
  }
  v8 = (*(uint64_t (**)(uint64_t, char *, _QWORD))(*(_QWORD *)v7 + 80))(v7, (char *)this + 16, *((_QWORD *)this + 1));
  v10 = v74;
  if (v5 != v8)
  {
    v74 = 0;
    if (v10)
    {
      do
        v11 = __ldaxr((unsigned int *)v10);
      while (__stlxr(v11 - 1, (unsigned int *)v10));
      if (v11 == 1)
      {
        atomic_store(1u, (unsigned int *)v10);
        v46 = *((unsigned int *)v10 + 5);
        if ((_DWORD)v46)
        {
          v47 = *((_QWORD *)v10 + 1);
          v48 = v47 + 16 * v46;
          do
          {
            v49 = *(unsigned int **)(v47 + 8);
            *(_QWORD *)(v47 + 8) = 0;
            if (v49)
            {
              do
              {
                v50 = __ldaxr(v49);
                v51 = v50 - 1;
              }
              while (__stlxr(v51, v49));
              if (!v51)
              {
                atomic_store(1u, v49);
                v52 = v49[6];
                if ((_DWORD)v52 != -1)
                  ((void (*)(char *, unsigned int *))off_1E3340070[v52])(&v73, v49 + 2);
                v49[6] = -1;
                WTF::fastFree((WTF *)v49, v9);
              }
            }
            v47 += 16;
          }
          while (v47 != v48);
        }
        v53 = (WTF *)*((_QWORD *)v10 + 1);
        if ((WTF::StringImpl *)((char *)v10 + 24) != v53 && v53 != 0)
        {
          *((_QWORD *)v10 + 1) = 0;
          *((_DWORD *)v10 + 4) = 0;
          WTF::fastFree(v53, v9);
        }
        WTF::fastFree(v10, v9);
      }
      v10 = 0;
    }
  }
  v12 = v70;
  v70 = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
    {
      WTF::StringImpl::destroy(v12, (WTF::StringImpl *)v9);
      if (v10)
        goto LABEL_15;
LABEL_57:
      v74 = 0;
      v75 = 0;
      v76 = 0;
      if (*((_BYTE *)this + 56))
      {
        v36 = *v1;
        *v1 = 0;
        if (v36)
        {
          if (*(_DWORD *)v36 == 2)
            WTF::StringImpl::destroy(v36, (WTF::StringImpl *)v9);
          else
            *(_DWORD *)v36 -= 2;
        }
        WTF::Vector<WebCore::PasteboardCustomData::Entry,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::operator=((unsigned int *)this + 10, (unsigned int *)&v75);
        v37 = v75;
        if (HIDWORD(v76))
        {
          v38 = 32 * HIDWORD(v76);
          v10 = (WTF *)((char *)v75 + 16);
          do
          {
            v39 = *((unsigned int *)v10 + 2);
            if ((_DWORD)v39 != -1)
              ((void (*)(WTF::StringImpl **, WTF::StringImpl *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF6StringENS6_3RefIN7WebCore12SharedBufferENS6_12RawPtrTraitsISA_EENS6_21DefaultRefDerefTraitsISA_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSI_EEEDcOSJ_DpOT0____fmatrix[v39])(&v70, v10);
            *((_DWORD *)v10 + 2) = -1;
            v40 = (WTF::StringImpl *)*((_QWORD *)v10 - 1);
            *((_QWORD *)v10 - 1) = 0;
            if (v40)
            {
              if (*(_DWORD *)v40 == 2)
                WTF::StringImpl::destroy(v40, (WTF::StringImpl *)v9);
              else
                *(_DWORD *)v40 -= 2;
            }
            v41 = (WTF::StringImpl *)*((_QWORD *)v10 - 2);
            *((_QWORD *)v10 - 2) = 0;
            if (v41)
            {
              if (*(_DWORD *)v41 == 2)
                WTF::StringImpl::destroy(v41, (WTF::StringImpl *)v9);
              else
                *(_DWORD *)v41 -= 2;
            }
            v10 = (WTF::StringImpl *)((char *)v10 + 32);
            v38 -= 32;
          }
          while (v38);
          v37 = v75;
        }
        if (v37)
        {
          v75 = 0;
          LODWORD(v76) = 0;
          WTF::fastFree(v37, v9);
        }
      }
      else
      {
        *((_QWORD *)this + 4) = 0;
        *((_QWORD *)this + 5) = 0;
        *((_QWORD *)this + 6) = 0;
        *((_BYTE *)this + 56) = 1;
      }
      v42 = v74;
      v74 = 0;
      if (v42)
      {
        if (*(_DWORD *)v42 == 2)
          WTF::StringImpl::destroy(v42, (WTF::StringImpl *)v9);
        else
          *(_DWORD *)v42 -= 2;
      }
      goto LABEL_81;
    }
    *(_DWORD *)v12 -= 2;
  }
  if (!v10)
    goto LABEL_57;
LABEL_15:
  if (*((_DWORD *)v10 + 5))
  {
    v13 = *(_QWORD *)(*((_QWORD *)v10 + 1) + 8);
    v14 = *(unsigned int *)(v13 + 24);
    if ((_DWORD)v14 == -1)
    {
      v56 = (_Unwind_Exception *)std::__throw_bad_variant_access[abi:sn180100]();
      v57 = v74;
      v74 = 0;
      if (v57)
      {
        do
        {
          v58 = __ldaxr((unsigned int *)v57);
          v59 = v58 - 1;
        }
        while (__stlxr(v59, (unsigned int *)v57));
        if (!v59)
        {
          atomic_store(1u, (unsigned int *)v57);
          v60 = *((unsigned int *)v57 + 5);
          if ((_DWORD)v60)
          {
            v61 = *((_QWORD *)v57 + 1);
            v62 = v61 + 16 * v60;
            do
            {
              v63 = *(unsigned int **)(v61 + 8);
              *(_QWORD *)(v61 + 8) = 0;
              if (v63)
              {
                do
                {
                  v64 = __ldaxr(v63);
                  v65 = v64 - 1;
                }
                while (__stlxr(v65, v63));
                if (!v65)
                {
                  atomic_store(1u, v63);
                  v66 = v63[6];
                  if ((_DWORD)v66 != -1)
                    ((void (*)(char *, unsigned int *))off_1E3340070[v66])(&v73, v63 + 2);
                  v63[6] = -1;
                  WTF::fastFree((WTF *)v63, v55);
                }
              }
              v61 += 16;
            }
            while (v61 != v62);
          }
          v67 = (WTF *)*((_QWORD *)v57 + 1);
          if ((WTF::StringImpl *)((char *)v57 + 24) != v67 && v67 != 0)
          {
            *((_QWORD *)v57 + 1) = 0;
            *((_DWORD *)v57 + 4) = 0;
            WTF::fastFree(v67, v55);
          }
          WTF::fastFree(v57, v55);
        }
      }
      v69 = v70;
      v70 = 0;
      if (v69)
      {
        if (*(_DWORD *)v69 == 2)
          WTF::StringImpl::destroy(v69, (WTF::StringImpl *)v55);
        else
          *(_DWORD *)v69 -= 2;
      }
      _Unwind_Resume(v56);
    }
    v74 = (WTF::StringImpl *)&v70;
    ((void (*)(WTF::StringImpl **, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIRN3WTF7VisitorIZNK7WebCore11DataSegment4dataEvE3__0JZNKS9_4dataEvE3__1ZNKS9_4dataEvE3__2ZNKS9_4dataEvE3__3EEEEEJRKNS0_6__implIJNS6_6VectorIhLm0ENS6_15CrashOnOverflowELm16ENS6_10FastMallocEEENS6_9RetainPtrIPK8__CFDataEENS6_14FileSystemImpl14MappedFileDataENS9_8ProviderEEEEEEEDcOT_DpOT0____fmatrix[v14])(&v74, v13 + 8);
  }
  while (1)
  {
    WTF::Persistence::Decoder::Decoder();
    WebCore::PasteboardCustomData::fromPersistenceDecoder(&v70);
    WTF::Persistence::Decoder::~Decoder((WTF::Persistence::Decoder *)&v74);
    v16 = v70;
    if (*((_BYTE *)this + 56))
    {
      if (v70)
        *(_DWORD *)v70 += 2;
      v17 = *v1;
      *v1 = v16;
      if (v17)
      {
        if (*(_DWORD *)v17 == 2)
          WTF::StringImpl::destroy(v17, v15);
        else
          *(_DWORD *)v17 -= 2;
      }
      WTF::Vector<WebCore::PasteboardCustomData::Entry,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::operator=((unsigned int *)this + 10, (unsigned int *)&v71);
      v18 = v71;
      if (HIDWORD(v72))
      {
        v19 = 32 * HIDWORD(v72);
        v20 = (char *)v71 + 16;
        do
        {
          v21 = *((unsigned int *)v20 + 2);
          if ((_DWORD)v21 != -1)
            ((void (*)(WTF::StringImpl **, char *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF6StringENS6_3RefIN7WebCore12SharedBufferENS6_12RawPtrTraitsISA_EENS6_21DefaultRefDerefTraitsISA_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSI_EEEDcOSJ_DpOT0____fmatrix[v21])(&v74, v20);
          *((_DWORD *)v20 + 2) = -1;
          v22 = (WTF::StringImpl *)*((_QWORD *)v20 - 1);
          *((_QWORD *)v20 - 1) = 0;
          if (v22)
          {
            if (*(_DWORD *)v22 == 2)
              WTF::StringImpl::destroy(v22, v15);
            else
              *(_DWORD *)v22 -= 2;
          }
          v23 = (WTF::StringImpl *)*((_QWORD *)v20 - 2);
          *((_QWORD *)v20 - 2) = 0;
          if (v23)
          {
            if (*(_DWORD *)v23 == 2)
              WTF::StringImpl::destroy(v23, v15);
            else
              *(_DWORD *)v23 -= 2;
          }
          v20 += 32;
          v19 -= 32;
        }
        while (v19);
        v18 = v71;
      }
      if (v18)
      {
        v71 = 0;
        LODWORD(v72) = 0;
        WTF::fastFree(v18, v15);
      }
    }
    else
    {
      v24 = v71;
      v70 = 0;
      v71 = 0;
      *((_QWORD *)this + 4) = v16;
      *((_QWORD *)this + 5) = v24;
      v25 = v72;
      v72 = 0;
      *((_QWORD *)this + 6) = v25;
      *((_BYTE *)this + 56) = 1;
    }
    v26 = v70;
    v70 = 0;
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
        WTF::StringImpl::destroy(v26, v15);
      else
        *(_DWORD *)v26 -= 2;
    }
    do
    {
      v27 = __ldaxr((unsigned int *)v10);
      v28 = v27 - 1;
    }
    while (__stlxr(v28, (unsigned int *)v10));
    if (!v28)
    {
      atomic_store(1u, (unsigned int *)v10);
      v29 = *((unsigned int *)v10 + 5);
      if ((_DWORD)v29)
      {
        v30 = *((_QWORD *)v10 + 1);
        v31 = v30 + 16 * v29;
        do
        {
          v32 = *(unsigned int **)(v30 + 8);
          *(_QWORD *)(v30 + 8) = 0;
          if (v32)
          {
            do
            {
              v33 = __ldaxr(v32);
              v34 = v33 - 1;
            }
            while (__stlxr(v34, v32));
            if (!v34)
            {
              atomic_store(1u, v32);
              v35 = v32[6];
              if ((_DWORD)v35 != -1)
                ((void (*)(WTF::StringImpl **, unsigned int *))off_1E3340070[v35])(&v74, v32 + 2);
              v32[6] = -1;
              WTF::fastFree((WTF *)v32, v15);
            }
          }
          v30 += 16;
        }
        while (v30 != v31);
      }
      v44 = (WTF *)*((_QWORD *)v10 + 1);
      if ((WTF::StringImpl *)((char *)v10 + 24) != v44 && v44 != 0)
      {
        *((_QWORD *)v10 + 1) = 0;
        *((_DWORD *)v10 + 4) = 0;
        WTF::fastFree(v44, v15);
      }
      WTF::fastFree(v10, v15);
    }
LABEL_81:
    if (*((_BYTE *)this + 56))
      break;
    __break(1u);
  }
  return v1;
}

WTF::StringImpl **WebCore::Pasteboard::readOrigin@<X0>(WebCore::Pasteboard *this@<X0>, WTF::StringImpl **a2@<X8>)
{
  WTF::StringImpl **result;
  WTF::StringImpl *v4;

  result = WebCore::Pasteboard::readCustomData(this);
  v4 = *result;
  if (*result)
    *(_DWORD *)v4 += 2;
  *a2 = v4;
  return result;
}

uint64_t WebCore::Pasteboard::writeCustomData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = WebCore::s_platformStrategies;
  v5 = *(_QWORD *)(WebCore::s_platformStrategies + 16);
  if (!v5)
  {
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)WebCore::s_platformStrategies + 24))(WebCore::s_platformStrategies);
    *(_QWORD *)(v4 + 16) = v5;
  }
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v5 + 232))(v5, a2, a1 + 16, *(_QWORD *)(a1 + 8));
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

void WebCore::PlatformPasteboard::allPasteboardItemInfo(id *this@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  signed int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  unint64_t v13;
  int v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  WTF *v33;
  int v34;
  WTF *v35;
  uint64_t v36;
  WebCore::PasteboardItemInfo *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int16 v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  char v56;
  WTF *v57;
  uint64_t v58;

  if (objc_msgSend(*this, "changeCount") == a2)
  {
    v58 = 0;
    v6 = objc_msgSend(*this, "numberOfItems");
    if (v6)
    {
      if (v6 >= 0x2222223)
      {
        __break(0xC471u);
      }
      else
      {
        v7 = v6;
        v8 = 120 * v6;
        v9 = WTF::fastMalloc((WTF *)(120 * v6));
        v10 = 0;
        v11 = 0;
        LODWORD(v58) = (v8 & 0xFFFFFFF8) / 0x78;
        v57 = (WTF *)v9;
        while (1)
        {
          WebCore::PlatformPasteboard::informationForItemAtIndex(this, v11, a2, &v39);
          if (!v56)
            break;
          if (v10 == (_DWORD)v58)
          {
            v13 = WTF::Vector<WebCore::PasteboardItemInfo,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)&v57, v10 + 1, (unint64_t)&v39);
            v14 = HIDWORD(v58);
            v9 = (uint64_t)v57;
            v15 = (char *)v57 + 120 * HIDWORD(v58);
            *(_QWORD *)v15 = 0;
            *((_QWORD *)v15 + 1) = 0;
            v16 = *(_QWORD *)v13;
            *(_QWORD *)v13 = 0;
            *(_QWORD *)v15 = v16;
            LODWORD(v16) = *(_DWORD *)(v13 + 8);
            *(_DWORD *)(v13 + 8) = 0;
            *((_DWORD *)v15 + 2) = v16;
            LODWORD(v16) = *(_DWORD *)(v13 + 12);
            *(_DWORD *)(v13 + 12) = 0;
            *((_DWORD *)v15 + 3) = v16;
            *((_QWORD *)v15 + 2) = 0;
            *((_QWORD *)v15 + 3) = 0;
            v17 = *(_QWORD *)(v13 + 16);
            *(_QWORD *)(v13 + 16) = 0;
            *((_QWORD *)v15 + 2) = v17;
            LODWORD(v17) = *(_DWORD *)(v13 + 24);
            *(_DWORD *)(v13 + 24) = 0;
            *((_DWORD *)v15 + 6) = v17;
            LODWORD(v17) = *(_DWORD *)(v13 + 28);
            *(_DWORD *)(v13 + 28) = 0;
            *((_DWORD *)v15 + 7) = v17;
            *((_QWORD *)v15 + 4) = 0;
            *((_QWORD *)v15 + 5) = 0;
            v18 = *(_QWORD *)(v13 + 32);
            *(_QWORD *)(v13 + 32) = 0;
            *((_QWORD *)v15 + 4) = v18;
            LODWORD(v18) = *(_DWORD *)(v13 + 40);
            *(_DWORD *)(v13 + 40) = 0;
            *((_DWORD *)v15 + 10) = v18;
            LODWORD(v18) = *(_DWORD *)(v13 + 44);
            *(_DWORD *)(v13 + 44) = 0;
            *((_DWORD *)v15 + 11) = v18;
            v19 = *(_QWORD *)(v13 + 48);
            *(_QWORD *)(v13 + 48) = 0;
            *((_QWORD *)v15 + 6) = v19;
            v20 = *(_OWORD *)(v13 + 56);
            v21 = *(_OWORD *)(v13 + 72);
            *((_WORD *)v15 + 44) = *(_WORD *)(v13 + 88);
            *(_OWORD *)(v15 + 72) = v21;
            *(_OWORD *)(v15 + 56) = v20;
            *((_QWORD *)v15 + 12) = 0;
            *((_QWORD *)v15 + 13) = 0;
            v22 = *(_QWORD *)(v13 + 96);
            *(_QWORD *)(v13 + 96) = 0;
            *((_QWORD *)v15 + 12) = v22;
            LODWORD(v22) = *(_DWORD *)(v13 + 104);
            *(_DWORD *)(v13 + 104) = 0;
            *((_DWORD *)v15 + 26) = v22;
            LODWORD(v22) = *(_DWORD *)(v13 + 108);
            *(_DWORD *)(v13 + 108) = 0;
            *((_DWORD *)v15 + 27) = v22;
            v23 = v15 + 112;
            v24 = (uint64_t *)(v13 + 112);
          }
          else
          {
            v25 = v9 + 120 * v10;
            *(_QWORD *)v25 = 0;
            *(_QWORD *)(v25 + 8) = 0;
            v26 = v39;
            v39 = 0;
            *(_QWORD *)v25 = v26;
            LODWORD(v26) = v40;
            v40 = 0;
            *(_DWORD *)(v25 + 8) = v26;
            LODWORD(v26) = v41;
            v41 = 0;
            *(_DWORD *)(v25 + 12) = v26;
            *(_QWORD *)(v25 + 16) = 0;
            *(_QWORD *)(v25 + 24) = 0;
            v27 = v42;
            v42 = 0;
            *(_QWORD *)(v25 + 16) = v27;
            LODWORD(v27) = v43;
            v43 = 0;
            *(_DWORD *)(v25 + 24) = v27;
            LODWORD(v27) = v44;
            v44 = 0;
            *(_DWORD *)(v25 + 28) = v27;
            *(_QWORD *)(v25 + 32) = 0;
            *(_QWORD *)(v25 + 40) = 0;
            v28 = v45;
            v45 = 0;
            *(_QWORD *)(v25 + 32) = v28;
            LODWORD(v28) = v46;
            v46 = 0;
            *(_DWORD *)(v25 + 40) = v28;
            LODWORD(v28) = v47;
            v47 = 0;
            *(_DWORD *)(v25 + 44) = v28;
            v29 = v48;
            v48 = 0;
            *(_QWORD *)(v25 + 48) = v29;
            v30 = v49;
            v31 = v50;
            *(_WORD *)(v25 + 88) = v51;
            *(_OWORD *)(v25 + 72) = v31;
            *(_OWORD *)(v25 + 56) = v30;
            *(_QWORD *)(v25 + 96) = 0;
            *(_QWORD *)(v25 + 104) = 0;
            v32 = v52;
            v52 = 0;
            *(_QWORD *)(v25 + 96) = v32;
            LODWORD(v32) = v53;
            v53 = 0;
            *(_DWORD *)(v25 + 104) = v32;
            LODWORD(v32) = v54;
            v54 = 0;
            *(_DWORD *)(v25 + 108) = v32;
            v23 = (_BYTE *)(v25 + 112);
            v14 = HIDWORD(v58);
            v24 = &v55;
          }
          *v23 = *(_BYTE *)v24;
          v10 = v14 + 1;
          HIDWORD(v58) = v14 + 1;
          if (v56)
            WebCore::PasteboardItemInfo::~PasteboardItemInfo((WebCore::PasteboardItemInfo *)&v39, v12);
          if (v7 == ++v11)
          {
            v33 = v57;
            v34 = v58;
            goto LABEL_15;
          }
        }
        *(_BYTE *)a3 = 0;
        *(_BYTE *)(a3 + 16) = 0;
        v35 = v57;
        if (v10)
        {
          v36 = 120 * v10;
          v37 = v57;
          do
          {
            WebCore::PasteboardItemInfo::~PasteboardItemInfo(v37, v12);
            v37 = (WebCore::PasteboardItemInfo *)(v38 + 120);
            v36 -= 120;
          }
          while (v36);
        }
        if (v35)
          WTF::fastFree(v35, v12);
      }
    }
    else
    {
      v10 = 0;
      v34 = 0;
      v33 = 0;
LABEL_15:
      *(_QWORD *)a3 = v33;
      *(_DWORD *)(a3 + 8) = v34;
      *(_DWORD *)(a3 + 12) = v10;
      *(_BYTE *)(a3 + 16) = 1;
    }
  }
  else
  {
    *(_BYTE *)a3 = 0;
    *(_BYTE *)(a3 + 16) = 0;
  }
}

void sub_1951338A8(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  uint64_t v24;
  uint64_t v26;
  WTF *v27;
  uint64_t v28;
  WebCore::PasteboardItemInfo *v29;
  uint64_t v30;

  if (a24)
    WebCore::PasteboardItemInfo::~PasteboardItemInfo((WebCore::PasteboardItemInfo *)&a9, a2);
  v26 = *(unsigned int *)(v24 - 84);
  v27 = *(WTF **)(v24 - 96);
  if ((_DWORD)v26)
  {
    v28 = 120 * v26;
    v29 = *(WebCore::PasteboardItemInfo **)(v24 - 96);
    do
    {
      WebCore::PasteboardItemInfo::~PasteboardItemInfo(v29, a2);
      v29 = (WebCore::PasteboardItemInfo *)(v30 + 120);
      v28 -= 120;
    }
    while (v28);
  }
  if (v27)
    WTF::fastFree(v27, a2);
  _Unwind_Resume(exception_object);
}

BOOL WebCore::PlatformPasteboard::containsStringSafeForDOMToReadForType(id *this, WTF **a2)
{
  WTF::StringImpl *v2;
  WTF::StringImpl *v3;
  _BOOL8 v4;
  int v5;
  WTF::StringImpl *v7;

  WebCore::PlatformPasteboard::stringForType(this, a2, (WebCore::Pasteboard *)&v7);
  v3 = v7;
  if (!v7)
    return 0;
  v5 = *(_DWORD *)v7;
  v4 = *((_DWORD *)v7 + 1) != 0;
  v7 = 0;
  if (v5 == 2)
    WTF::StringImpl::destroy(v3, v2);
  else
    *(_DWORD *)v3 = v5 - 2;
  return v4;
}

WTF::StringImpl *WebCore::PlatformPasteboard::urlStringSuitableForLoading@<X0>(id *this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v5;
  WTF::StringImpl *v6;
  const WTF::StringImpl *v7;
  unint64_t v8;
  WTF **v9;
  WTF **v10;
  uint64_t v11;
  void *v12;
  const __CFString *v13;
  WTF::StringImpl *v14;
  WebCore *v15;
  WTF::StringImpl *v16;
  NSURL *v17;
  char v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  void *v21;
  const __CFString *v22;
  WTF::StringImpl *v23;
  WebCore *v24;
  WTF::StringImpl *v25;
  char v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *result;
  WTF *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  WTF *v34;
  WTF::StringImpl *v35;
  int v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  WTF *v39;
  uint64_t v40;

  v39 = 0;
  v40 = 0;
  v5 = objc_msgSend((id)*MEMORY[0x1E0CEC618], "identifier", WebCore::PlatformPasteboard::getTypes(this, (uint64_t)&v39));
  MEMORY[0x19AEA5508](&v38, v5);
  MEMORY[0x19AEA5508](&v37, objc_msgSend((id)*MEMORY[0x1E0CEC610], "identifier"));
  v8 = HIDWORD(v40);
  if (!HIDWORD(v40))
    goto LABEL_30;
  v9 = (WTF **)v39;
  v10 = (WTF **)v39;
  v11 = HIDWORD(v40);
  while ((WTF::equal(*v10, v38, v7) & 1) == 0)
  {
    ++v10;
    if (!--v11)
      goto LABEL_15;
  }
  v12 = (void *)MEMORY[0x1E0C99E98];
  WebCore::PlatformPasteboard::stringForType(this, &v38, (WebCore::Pasteboard *)&v35);
  if (v35)
    v13 = (const __CFString *)WTF::StringImpl::operator NSString *();
  else
    v13 = &stru_1E3487BC0;
  v15 = (WebCore *)objc_msgSend(v12, "URLWithString:", v13);
  v16 = v35;
  v35 = 0;
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v14);
    else
      *(_DWORD *)v16 -= 2;
  }
  MEMORY[0x19AEA52E0](&v35, v15);
  v18 = v36;
  v19 = v35;
  v35 = 0;
  if (!v19)
  {
LABEL_14:
    if ((v18 & 2) == 0)
      goto LABEL_15;
LABEL_45:
    v31 = -[WebCore absoluteString](WebCore::URLByCanonicalizingURL(v15, v17), "absoluteString");
    MEMORY[0x19AEA5508](a2, v31);
    goto LABEL_31;
  }
  if (*(_DWORD *)v19 != 2)
  {
    *(_DWORD *)v19 -= 2;
    goto LABEL_14;
  }
  WTF::StringImpl::destroy(v19, (WTF::StringImpl *)v17);
  if ((v18 & 2) != 0)
    goto LABEL_45;
LABEL_15:
  if (v8 <= 1)
    v20 = 1;
  else
    v20 = v8;
  while ((WTF::equal(*v9, v37, v7) & 1) == 0)
  {
    ++v9;
    if (!--v20)
      goto LABEL_30;
  }
  v21 = (void *)MEMORY[0x1E0C99E98];
  WebCore::PlatformPasteboard::stringForType(this, &v37, (WebCore::Pasteboard *)&v35);
  if (v35)
    v22 = (const __CFString *)WTF::StringImpl::operator NSString *();
  else
    v22 = &stru_1E3487BC0;
  v24 = (WebCore *)objc_msgSend(v21, "URLWithString:", v22);
  v25 = v35;
  v35 = 0;
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v23);
    else
      *(_DWORD *)v25 -= 2;
  }
  MEMORY[0x19AEA52E0](&v35, v24);
  v26 = v36;
  v27 = v35;
  v35 = 0;
  if (!v27)
  {
LABEL_29:
    if ((v26 & 2) == 0)
      goto LABEL_30;
    goto LABEL_48;
  }
  if (*(_DWORD *)v27 != 2)
  {
    *(_DWORD *)v27 -= 2;
    goto LABEL_29;
  }
  WTF::StringImpl::destroy(v27, v6);
  if ((v26 & 2) == 0)
  {
LABEL_30:
    *a2 = 0;
    goto LABEL_31;
  }
LABEL_48:
  v32 = -[WebCore absoluteString](WebCore::URLByCanonicalizingURL(v24, (NSURL *)v6), "absoluteString");
  MEMORY[0x19AEA5508](a2, v32);
LABEL_31:
  v28 = v37;
  v37 = 0;
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v6);
    else
      *(_DWORD *)v28 -= 2;
  }
  result = v38;
  v38 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  v30 = v39;
  if ((_DWORD)v8)
  {
    v33 = 8 * v8;
    v34 = v39;
    do
    {
      result = *(WTF::StringImpl **)v34;
      *(_QWORD *)v34 = 0;
      if (result)
      {
        if (*(_DWORD *)result == 2)
          result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
        else
          *(_DWORD *)result -= 2;
      }
      v34 = (WTF *)((char *)v34 + 8);
      v33 -= 8;
    }
    while (v33);
  }
  if (v30)
    return (WTF::StringImpl *)WTF::fastFree(v30, v6);
  return result;
}

void sub_195133C48(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, WTF::StringImpl *a15, WTF::StringImpl *a16, WTF::StringImpl **a17, int a18, unsigned int a19)
{
  uint64_t v20;
  WTF::StringImpl **v21;
  WTF::StringImpl *v22;

  if (a15)
  {
    if (*(_DWORD *)a15 == 2)
      WTF::StringImpl::destroy(a15, a2);
    else
      *(_DWORD *)a15 -= 2;
  }
  if (a16)
  {
    if (*(_DWORD *)a16 == 2)
      WTF::StringImpl::destroy(a16, a2);
    else
      *(_DWORD *)a16 -= 2;
  }
  if (a19)
  {
    v20 = 8 * a19;
    v21 = a17;
    do
    {
      v22 = *v21;
      *v21 = 0;
      if (v22)
      {
        if (*(_DWORD *)v22 == 2)
          WTF::StringImpl::destroy(v22, a2);
        else
          *(_DWORD *)v22 -= 2;
      }
      ++v21;
      v20 -= 8;
    }
    while (v20);
  }
  if (a17)
    WTF::fastFree((WTF *)a17, a2);
  _Unwind_Resume(exception_object);
}

double WebCore::PlaybackSessionModelMediaElement::PlaybackSessionModelMediaElement(WebCore::PlaybackSessionModelMediaElement *this)
{
  double result;

  *((_DWORD *)this + 8) = 1;
  *((_BYTE *)this + 36) = 3;
  *((_DWORD *)this + 10) = 0;
  *(_QWORD *)this = off_1E333FD30;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = &unk_1E333FF48;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_BYTE *)this + 56) = 0;
  result = 0.0;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *(_OWORD *)((char *)this + 89) = 0u;
  return result;
}

{
  double result;

  *((_DWORD *)this + 8) = 1;
  *((_BYTE *)this + 36) = 3;
  *((_DWORD *)this + 10) = 0;
  *(_QWORD *)this = off_1E333FD30;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = &unk_1E333FF48;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_BYTE *)this + 56) = 0;
  result = 0.0;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *(_OWORD *)((char *)this + 89) = 0u;
  return result;
}

void WebCore::PlaybackSessionModelMediaElement::~PlaybackSessionModelMediaElement(WebCore::PlaybackSessionModelMediaElement *this, void *a2)
{
  uint64_t v3;
  _DWORD **v4;
  uint64_t v5;
  _DWORD *v6;
  WTF *v7;
  uint64_t v8;
  _DWORD **v9;
  uint64_t v10;
  _DWORD *v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int v24;

  v3 = *((unsigned int *)this + 25);
  if ((_DWORD)v3)
  {
    v4 = (_DWORD **)*((_QWORD *)this + 11);
    v5 = 8 * v3;
    do
    {
      v6 = *v4;
      *v4 = 0;
      if (v6)
      {
        if (v6[4] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v6 + 16))(v6);
        else
          --v6[4];
      }
      ++v4;
      v5 -= 8;
    }
    while (v5);
  }
  v7 = (WTF *)*((_QWORD *)this + 11);
  if (v7)
  {
    *((_QWORD *)this + 11) = 0;
    *((_DWORD *)this + 24) = 0;
    WTF::fastFree(v7, a2);
  }
  v8 = *((unsigned int *)this + 21);
  if ((_DWORD)v8)
  {
    v9 = (_DWORD **)*((_QWORD *)this + 9);
    v10 = 8 * v8;
    do
    {
      v11 = *v9;
      *v9 = 0;
      if (v11)
      {
        if (v11[4] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v11 + 16))(v11);
        else
          --v11[4];
      }
      ++v9;
      v10 -= 8;
    }
    while (v10);
  }
  v12 = (WTF *)*((_QWORD *)this + 9);
  if (v12)
  {
    *((_QWORD *)this + 9) = 0;
    *((_DWORD *)this + 20) = 0;
    WTF::fastFree(v12, a2);
  }
  v13 = *((_QWORD *)this + 8);
  if (v13)
  {
    v14 = *(unsigned int *)(v13 - 4);
    if ((_DWORD)v14)
    {
      v15 = (_QWORD *)*((_QWORD *)this + 8);
      do
      {
        if ((unint64_t)(*v15 + 1) >= 2)
          (*(void (**)(_QWORD))(*(_QWORD *)*v15 + 40))(*v15);
        ++v15;
        --v14;
      }
      while (v14);
    }
    WTF::fastFree((WTF *)(v13 - 16), a2);
  }
  v16 = *((_QWORD *)this + 6);
  *((_QWORD *)this + 6) = 0;
  if (v16)
  {
    if (*(_DWORD *)(v16 + 24) == 2)
    {
      if ((*(_WORD *)(v16 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v16, a2);
    }
    else
    {
      *(_DWORD *)(v16 + 24) -= 2;
    }
  }
  v17 = *((_QWORD *)this + 3);
  if (v17)
  {
    *(_QWORD *)(v17 + 8) = 0;
    v22 = (unsigned int *)*((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = 0;
    if (v22)
    {
      do
      {
        v23 = __ldaxr(v22);
        v24 = v23 - 1;
      }
      while (__stlxr(v24, v22));
      if (!v24)
      {
        atomic_store(1u, v22);
        WTF::fastFree((WTF *)v22, a2);
      }
    }
  }
  else
  {
    *((_QWORD *)this + 3) = 0;
  }
  v18 = *((_QWORD *)this + 1);
  if (v18)
  {
    *(_QWORD *)(v18 + 8) = 0;
    v19 = (unsigned int *)*((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = 0;
    if (v19)
    {
      do
      {
        v20 = __ldaxr(v19);
        v21 = v20 - 1;
      }
      while (__stlxr(v21, v19));
      if (!v21)
      {
        atomic_store(1u, v19);
        WTF::fastFree((WTF *)v19, a2);
      }
    }
  }
  else
  {
    *((_QWORD *)this + 1) = 0;
  }
}

{
  uint64_t v2;
  void *v3;

  WebCore::PlaybackSessionModelMediaElement::~PlaybackSessionModelMediaElement(this, a2);
  if (*(_DWORD *)(v2 + 40))
  {
    *(_OWORD *)(v2 + 80) = 0u;
    *(_OWORD *)(v2 + 96) = 0u;
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)(v2 + 64) = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
    *(_OWORD *)(v2 + 32) = 0u;
    *(_OWORD *)v2 = 0u;
  }
  else
  {
    WTF::fastFree((WTF *)v2, v3);
  }
}

void `non-virtual thunk to'WebCore::PlaybackSessionModelMediaElement::~PlaybackSessionModelMediaElement(WebCore::PlaybackSessionModelMediaElement *this, void *a2)
{
  WebCore::PlaybackSessionModelMediaElement::~PlaybackSessionModelMediaElement((WebCore::PlaybackSessionModelMediaElement *)((char *)this - 16), a2);
}

{
  WTF *v3;
  void *v4;

  WebCore::PlaybackSessionModelMediaElement::~PlaybackSessionModelMediaElement((WebCore::PlaybackSessionModelMediaElement *)((char *)this - 16), a2);
  if (*((_DWORD *)this + 6))
  {
    *((_OWORD *)v3 + 5) = 0u;
    *((_OWORD *)v3 + 6) = 0u;
    *((_OWORD *)v3 + 3) = 0u;
    *((_OWORD *)v3 + 4) = 0u;
    *((_OWORD *)v3 + 1) = 0u;
    *((_OWORD *)v3 + 2) = 0u;
    *(_OWORD *)v3 = 0u;
  }
  else
  {
    WTF::fastFree(v3, v4);
  }
}

void WebCore::PlaybackSessionModelMediaElement::setMediaElement(WebCore::EventNames **this, WebCore::HTMLMediaElement *a2)
{
  WebCore::EventNames **v3;
  WebCore::EventNames *v4;
  char v5;
  uint64_t v6;
  WebCore::EventNames **v7;
  WTF::StringImpl **v8;
  uint64_t v9;
  uint64_t v10;
  WebCore::EventTarget *v11;
  uint64_t v12;
  WebCore::EventListenerMap *v13;
  uint64_t v15;
  WebCore::EventListenerMap *v16;
  uint64_t v18;
  WebCore::EventListenerMap *v19;
  WebCore::EventTarget *v21;
  uint64_t v22;
  WebCore::EventListenerMap *v23;
  uint64_t v25;
  WebCore::EventListenerMap *v26;
  uint64_t v28;
  WebCore::EventListenerMap *v29;
  uint64_t v31;
  WebCore::EventNames *v32;
  uint64_t v33;
  WebCore::EventNames *v34;
  WebCore::EventNames *v35;
  uint64_t v36;
  WebCore::EventNames *v37;
  unsigned int *Ref;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  WebCore::AbortSignal *v42;
  WebCore::EventNames **v43;
  bmalloc::api *v44;
  void *v45;
  WebCore *v46;
  void *v47;
  WebCore::AbortSignal *v48;
  WebCore::EventNames **v49;
  void *v50;
  WebCore::AbortSignal *v51;
  WebCore::EventNames **v52;
  void *v53;
  WebCore::AbortSignal *v54;
  WebCore::EventNames **v55;
  WebCore *v56;
  void *v57;
  WebCore::AbortSignal *v58;
  WebCore::EventNames **v59;
  void *v60;
  WebCore::AbortSignal *v61;
  WebCore::EventNames **v62;
  void *v63;
  WebCore::AbortSignal *v64;
  WebCore::EventNames **v65;
  WebCore::EventNames *v66;
  uint64_t v67;
  WebCore::EventNames *v68;
  WebCore::EventNames *v69;
  uint64_t v70;
  WebCore::EventNames *v71;
  uint64_t v72;
  WebCore::Node *v73;
  void *v74;
  uint64_t v75;
  WebCore::EventNames *v76;
  uint64_t v77;
  WebCore::Node *v78;
  void *v79;
  uint64_t v80;
  WebCore::EventNames *v81;
  bmalloc::api *v82;
  void *v83;
  bmalloc::api *v84;
  void *v85;
  bmalloc::api *v86;
  void *v87;
  bmalloc::api *v88;
  void *v89;
  bmalloc::api *v90;
  void *v91;
  bmalloc::api *v92;
  void *v93;
  WebCore::InspectorInstrumentation *v94;
  WebCore::ScriptExecutionContext *v95;
  _QWORD *v96;
  WebCore::InspectorInstrumentation *v97;
  WebCore::ScriptExecutionContext *v98;
  _QWORD *v99;
  WebCore::InspectorInstrumentation *v100;
  WebCore::ScriptExecutionContext *v101;
  _QWORD *v102;
  WebCore::InspectorInstrumentation *v103;
  WebCore::ScriptExecutionContext *v104;
  _QWORD *v105;
  WebCore::InspectorInstrumentation *v106;
  WebCore::ScriptExecutionContext *v107;
  _QWORD *v108;
  WebCore::InspectorInstrumentation *v109;
  WebCore::ScriptExecutionContext *v110;
  _QWORD *v111;
  char v112;
  uint64_t v113;
  WebCore::AbortSignal *v114;
  WebCore::EventNames **v115;

  v3 = this;
  v4 = this[6];
  if (v4)
  {
    *((_DWORD *)v4 + 6) += 2;
    if (!a2)
    {
      v5 = 1;
      goto LABEL_5;
    }
  }
  else if (!a2)
  {
    return;
  }
  *((_DWORD *)a2 + 6) += 2;
  if (v4 != a2)
  {
    v5 = 0;
LABEL_5:
    v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
    if (!v6 || (v7 = *(WebCore::EventNames ***)(v6 + 96)) == 0)
    {
      this = (WebCore::EventNames **)WebCore::threadGlobalDataSlow((WebCore *)this);
      v7 = this;
    }
    v8 = (WTF::StringImpl **)v7[5];
    if (!v8)
    {
      this = WebCore::ThreadGlobalData::initializeEventNames(v7);
      v8 = (WTF::StringImpl **)v7[5];
    }
    v112 = v5;
    if (v4)
    {
      if (*((_BYTE *)v3 + 56))
      {
        WebCore::PlaybackSessionModelMediaElement::observedEventNames((WebCore *)this);
        if (_MergedGlobals_119)
        {
          v9 = qword_1ECE81720;
          v10 = 88;
          do
          {
            LOBYTE(v113) = 0;
            (*(void (**)(WebCore::EventNames *, uint64_t, WebCore::EventNames **, uint64_t *))(*(_QWORD *)v4 + 32))(v4, v9, v3 + 2, &v113);
            v9 += 8;
            v10 -= 8;
          }
          while (v10);
        }
        v11 = (WebCore::EventTarget *)*((_QWORD *)v4 + 168);
        if (v11)
        {
          v12 = *((_QWORD *)v11 + 2);
          if ((v12 & 0x1000000000000) != 0)
          {
            v13 = (WebCore::EventListenerMap *)((v12 & 0xFFFFFFFFFFFFLL) + 16);
            if (atomic_load((unsigned int *)&WebCore::InspectorInstrumentationPublic::s_frontendCounter))
            {
              v94 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)v11 + 8))(*((_QWORD *)v4 + 168));
              if (v94)
              {
                v96 = (_QWORD *)WebCore::InspectorInstrumentation::instrumentingAgents(v94, v95);
                if (v96)
                  WebCore::InspectorInstrumentation::willRemoveEventListenerImpl(v96, v11, v8 + 13, (WebCore::EventListener *)(v3 + 2), 0);
              }
            }
            if (WebCore::EventListenerMap::remove(v13, (const WTF::AtomString *)(v8 + 13), (WebCore::EventListener *)(v3 + 2), 0))(*(void (**)(WebCore::EventTarget *))(*(_QWORD *)v11 + 80))(v11);
          }
          v15 = *((_QWORD *)v11 + 2);
          if ((v15 & 0x1000000000000) != 0)
          {
            v16 = (WebCore::EventListenerMap *)((v15 & 0xFFFFFFFFFFFFLL) + 16);
            if (atomic_load((unsigned int *)&WebCore::InspectorInstrumentationPublic::s_frontendCounter))
            {
              v97 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(WebCore::EventTarget *))(*(_QWORD *)v11 + 8))(v11);
              if (v97)
              {
                v99 = (_QWORD *)WebCore::InspectorInstrumentation::instrumentingAgents(v97, v98);
                if (v99)
                  WebCore::InspectorInstrumentation::willRemoveEventListenerImpl(v99, v11, v8 + 46, (WebCore::EventListener *)(v3 + 2), 0);
              }
            }
            if (WebCore::EventListenerMap::remove(v16, (const WTF::AtomString *)(v8 + 46), (WebCore::EventListener *)(v3 + 2), 0))(*(void (**)(WebCore::EventTarget *))(*(_QWORD *)v11 + 80))(v11);
          }
          v18 = *((_QWORD *)v11 + 2);
          if ((v18 & 0x1000000000000) != 0)
          {
            v19 = (WebCore::EventListenerMap *)((v18 & 0xFFFFFFFFFFFFLL) + 16);
            if (atomic_load((unsigned int *)&WebCore::InspectorInstrumentationPublic::s_frontendCounter))
            {
              v100 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(WebCore::EventTarget *))(*(_QWORD *)v11 + 8))(v11);
              if (v100)
              {
                v102 = (_QWORD *)WebCore::InspectorInstrumentation::instrumentingAgents(v100, v101);
                if (v102)
                  WebCore::InspectorInstrumentation::willRemoveEventListenerImpl(v102, v11, v8 + 210, (WebCore::EventListener *)(v3 + 2), 0);
              }
            }
            if (WebCore::EventListenerMap::remove(v19, (const WTF::AtomString *)(v8 + 210), (WebCore::EventListener *)(v3 + 2), 0))(*(void (**)(WebCore::EventTarget *))(*(_QWORD *)v11 + 80))(v11);
          }
          v21 = (WebCore::EventTarget *)*((_QWORD *)v4 + 168);
          v5 = v112;
          if (v21)
          {
            v22 = *((_QWORD *)v21 + 2);
            if ((v22 & 0x1000000000000) != 0)
            {
              v23 = (WebCore::EventListenerMap *)((v22 & 0xFFFFFFFFFFFFLL) + 16);
              if (atomic_load((unsigned int *)&WebCore::InspectorInstrumentationPublic::s_frontendCounter))
              {
                v103 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)v21 + 8))(*((_QWORD *)v4 + 168));
                if (v103)
                {
                  v105 = (_QWORD *)WebCore::InspectorInstrumentation::instrumentingAgents(v103, v104);
                  if (v105)
                    WebCore::InspectorInstrumentation::willRemoveEventListenerImpl(v105, v21, v8 + 13, (WebCore::EventListener *)(v3 + 2), 0);
                }
              }
              if (WebCore::EventListenerMap::remove(v23, (const WTF::AtomString *)(v8 + 13), (WebCore::EventListener *)(v3 + 2), 0))(*(void (**)(WebCore::EventTarget *))(*(_QWORD *)v21 + 80))(v21);
            }
            v25 = *((_QWORD *)v21 + 2);
            v5 = v112;
            if ((v25 & 0x1000000000000) != 0)
            {
              v26 = (WebCore::EventListenerMap *)((v25 & 0xFFFFFFFFFFFFLL) + 16);
              if (atomic_load((unsigned int *)&WebCore::InspectorInstrumentationPublic::s_frontendCounter))
              {
                v106 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(WebCore::EventTarget *))(*(_QWORD *)v21 + 8))(v21);
                if (v106)
                {
                  v108 = (_QWORD *)WebCore::InspectorInstrumentation::instrumentingAgents(v106, v107);
                  if (v108)
                    WebCore::InspectorInstrumentation::willRemoveEventListenerImpl(v108, v21, v8 + 46, (WebCore::EventListener *)(v3 + 2), 0);
                }
              }
              if (WebCore::EventListenerMap::remove(v26, (const WTF::AtomString *)(v8 + 46), (WebCore::EventListener *)(v3 + 2), 0))(*(void (**)(WebCore::EventTarget *))(*(_QWORD *)v21 + 80))(v21);
            }
            v28 = *((_QWORD *)v21 + 2);
            if ((v28 & 0x1000000000000) != 0)
            {
              v29 = (WebCore::EventListenerMap *)((v28 & 0xFFFFFFFFFFFFLL) + 16);
              if (atomic_load((unsigned int *)&WebCore::InspectorInstrumentationPublic::s_frontendCounter))
              {
                v109 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(WebCore::EventTarget *))(*(_QWORD *)v21 + 8))(v21);
                if (v109)
                {
                  v111 = (_QWORD *)WebCore::InspectorInstrumentation::instrumentingAgents(v109, v110);
                  if (v111)
                    WebCore::InspectorInstrumentation::willRemoveEventListenerImpl(v111, v21, v8 + 210, (WebCore::EventListener *)(v3 + 2), 0);
                }
              }
              if (WebCore::EventListenerMap::remove(v29, (const WTF::AtomString *)(v8 + 210), (WebCore::EventListener *)(v3 + 2), 0))(*(void (**)(WebCore::EventTarget *))(*(_QWORD *)v21 + 80))(v21);
            }
          }
        }
      }
      *((_BYTE *)v3 + 56) = 0;
      v31 = *((_QWORD *)v4 + 200);
      if (v31)
      {
        *(_QWORD *)(v31 + 256) = 0;
        WebCore::MediaElementSession::addBehaviorRestriction(v31, 24576);
      }
    }
    else
    {
      *((_BYTE *)v3 + 56) = 0;
    }
    if ((v5 & 1) == 0)
      *((_DWORD *)a2 + 6) += 2;
    Ref = (unsigned int *)v3[6];
    v3[6] = a2;
    if (Ref)
    {
      if (Ref[6] == 2)
      {
        if ((*((_WORD *)Ref + 15) & 0x400) == 0)
          Ref = WebCore::Node::removedLastRef((WebCore::Node *)Ref, a2);
      }
      else
      {
        Ref[6] -= 2;
      }
    }
    if ((v5 & 1) == 0)
    {
      WebCore::PlaybackSessionModelMediaElement::observedEventNames((WebCore *)Ref);
      if (_MergedGlobals_119)
      {
        v39 = qword_1ECE81720;
        v40 = 88;
        do
        {
          ++*((_DWORD *)v3 + 8);
          v114 = 0;
          v115 = v3 + 2;
          LOBYTE(v113) = 0;
          *(_WORD *)((char *)&v113 + 1) = 0;
          BYTE3(v113) = 0;
          (*(void (**)(WebCore::HTMLMediaElement *, uint64_t, WebCore::EventNames ***, uint64_t *))(*(_QWORD *)a2 + 24))(a2, v39, &v115, &v113);
          v42 = v114;
          v114 = 0;
          if (v42)
          {
            if (*((_DWORD *)v42 + 6) == 1)
            {
              WebCore::AbortSignal::~AbortSignal(v42, v41);
              bmalloc::api::isoDeallocate(v44, v45);
            }
            else
            {
              --*((_DWORD *)v42 + 6);
            }
          }
          v43 = v115;
          v115 = 0;
          if (v43)
          {
            if (*((_DWORD *)v43 + 4) == 1)
              (*((void (**)(WebCore::EventNames **))*v43 + 1))(v43);
            else
              --*((_DWORD *)v43 + 4);
          }
          v39 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      v46 = (WebCore *)WebCore::HTMLMediaElement::ensureAudioTracks(a2);
      ++*((_DWORD *)v3 + 8);
      v114 = 0;
      v115 = v3 + 2;
      LOBYTE(v113) = 0;
      *(_WORD *)((char *)&v113 + 1) = 0;
      BYTE3(v113) = 0;
      WebCore::EventTarget::addEventListener(v46, v8 + 13, (uint64_t *)&v115, (unsigned __int8 *)&v113);
      v48 = v114;
      v114 = 0;
      if (v48)
      {
        if (*((_DWORD *)v48 + 6) == 1)
        {
          WebCore::AbortSignal::~AbortSignal(v48, v47);
          bmalloc::api::isoDeallocate(v82, v83);
        }
        else
        {
          --*((_DWORD *)v48 + 6);
        }
      }
      v49 = v115;
      v115 = 0;
      if (v49)
      {
        if (*((_DWORD *)v49 + 4) == 1)
          (*((void (**)(WebCore::EventNames **))*v49 + 1))(v49);
        else
          --*((_DWORD *)v49 + 4);
      }
      ++*((_DWORD *)v3 + 8);
      v114 = 0;
      v115 = v3 + 2;
      LOBYTE(v113) = 0;
      *(_WORD *)((char *)&v113 + 1) = 0;
      BYTE3(v113) = 0;
      WebCore::EventTarget::addEventListener(v46, v8 + 46, (uint64_t *)&v115, (unsigned __int8 *)&v113);
      v51 = v114;
      v114 = 0;
      if (v51)
      {
        if (*((_DWORD *)v51 + 6) == 1)
        {
          WebCore::AbortSignal::~AbortSignal(v51, v50);
          bmalloc::api::isoDeallocate(v84, v85);
        }
        else
        {
          --*((_DWORD *)v51 + 6);
        }
      }
      v52 = v115;
      v115 = 0;
      if (v52)
      {
        if (*((_DWORD *)v52 + 4) == 1)
          (*((void (**)(WebCore::EventNames **))*v52 + 1))(v52);
        else
          --*((_DWORD *)v52 + 4);
      }
      ++*((_DWORD *)v3 + 8);
      v114 = 0;
      v115 = v3 + 2;
      LOBYTE(v113) = 0;
      *(_WORD *)((char *)&v113 + 1) = 0;
      BYTE3(v113) = 0;
      WebCore::EventTarget::addEventListener(v46, v8 + 210, (uint64_t *)&v115, (unsigned __int8 *)&v113);
      v54 = v114;
      v114 = 0;
      if (v54)
      {
        if (*((_DWORD *)v54 + 6) == 1)
        {
          WebCore::AbortSignal::~AbortSignal(v54, v53);
          bmalloc::api::isoDeallocate(v86, v87);
        }
        else
        {
          --*((_DWORD *)v54 + 6);
        }
      }
      v55 = v115;
      v115 = 0;
      if (v55)
      {
        if (*((_DWORD *)v55 + 4) == 1)
          (*((void (**)(WebCore::EventNames **))*v55 + 1))(v55);
        else
          --*((_DWORD *)v55 + 4);
      }
      v56 = (WebCore *)WebCore::HTMLMediaElement::ensureTextTracks(a2);
      ++*((_DWORD *)v3 + 8);
      v114 = 0;
      v115 = v3 + 2;
      LOBYTE(v113) = 0;
      *(_WORD *)((char *)&v113 + 1) = 0;
      BYTE3(v113) = 0;
      WebCore::EventTarget::addEventListener(v56, v8 + 13, (uint64_t *)&v115, (unsigned __int8 *)&v113);
      v58 = v114;
      v114 = 0;
      if (v58)
      {
        if (*((_DWORD *)v58 + 6) == 1)
        {
          WebCore::AbortSignal::~AbortSignal(v58, v57);
          bmalloc::api::isoDeallocate(v88, v89);
        }
        else
        {
          --*((_DWORD *)v58 + 6);
        }
      }
      v59 = v115;
      v115 = 0;
      if (v59)
      {
        if (*((_DWORD *)v59 + 4) == 1)
          (*((void (**)(WebCore::EventNames **))*v59 + 1))(v59);
        else
          --*((_DWORD *)v59 + 4);
      }
      ++*((_DWORD *)v3 + 8);
      v114 = 0;
      v115 = v3 + 2;
      LOBYTE(v113) = 0;
      *(_WORD *)((char *)&v113 + 1) = 0;
      BYTE3(v113) = 0;
      WebCore::EventTarget::addEventListener(v56, v8 + 46, (uint64_t *)&v115, (unsigned __int8 *)&v113);
      v61 = v114;
      v114 = 0;
      if (v61)
      {
        if (*((_DWORD *)v61 + 6) == 1)
        {
          WebCore::AbortSignal::~AbortSignal(v61, v60);
          bmalloc::api::isoDeallocate(v90, v91);
        }
        else
        {
          --*((_DWORD *)v61 + 6);
        }
      }
      v62 = v115;
      v115 = 0;
      if (v62)
      {
        if (*((_DWORD *)v62 + 4) == 1)
          (*((void (**)(WebCore::EventNames **))*v62 + 1))(v62);
        else
          --*((_DWORD *)v62 + 4);
      }
      ++*((_DWORD *)v3 + 8);
      v114 = 0;
      v115 = v3 + 2;
      LOBYTE(v113) = 0;
      *(_WORD *)((char *)&v113 + 1) = 0;
      BYTE3(v113) = 0;
      WebCore::EventTarget::addEventListener(v56, v8 + 210, (uint64_t *)&v115, (unsigned __int8 *)&v113);
      v64 = v114;
      v114 = 0;
      if (v64)
      {
        if (*((_DWORD *)v64 + 6) == 1)
        {
          WebCore::AbortSignal::~AbortSignal(v64, v63);
          bmalloc::api::isoDeallocate(v92, v93);
        }
        else
        {
          --*((_DWORD *)v64 + 6);
        }
      }
      v65 = v115;
      v115 = 0;
      if (v65)
      {
        if (*((_DWORD *)v65 + 4) == 1)
          (*((void (**)(WebCore::EventNames **))*v65 + 1))(v65);
        else
          --*((_DWORD *)v65 + 4);
      }
      *((_BYTE *)v3 + 56) = 1;
    }
    if ((byte_1ECE8171A & 1) == 0)
    {
      WTF::AtomStringImpl::add();
      qword_1ECE81728 = v113;
      byte_1ECE8171A = 1;
    }
    WebCore::PlaybackSessionModelMediaElement::updateForEventName((WebCore::PlaybackSessionModelMediaElement *)v3, (WTF::StringImpl **)&qword_1ECE81728);
    v66 = v3[8];
    if (v66)
    {
      v67 = *((unsigned int *)v66 - 1);
      v68 = (WebCore::EventNames *)((char *)v66 + 8 * v67);
      if (*((_DWORD *)v66 - 3))
      {
        v69 = v3[8];
        if ((_DWORD)v67)
        {
          v70 = 8 * v67;
          v69 = v3[8];
          while ((unint64_t)(*(_QWORD *)v69 + 1) <= 1)
          {
            v69 = (WebCore::EventNames *)((char *)v69 + 8);
            v70 -= 8;
            if (!v70)
            {
              v69 = v68;
              goto LABEL_116;
            }
          }
        }
        goto LABEL_116;
      }
      v69 = (WebCore::EventNames *)((char *)v66 + 8 * v67);
    }
    else
    {
      v69 = 0;
      v67 = 0;
    }
    v68 = (WebCore::EventNames *)((char *)v66 + 8 * v67);
    if (!v66)
    {
      v71 = 0;
LABEL_121:
      while (v69 != v71)
      {
        v72 = *(_QWORD *)v69;
        v73 = v3[6];
        if (v73)
        {
          *((_DWORD *)v73 + 6) += 2;
          v75 = (*(uint64_t (**)(WebCore::Node *))(*(_QWORD *)v73 + 1264))(v73);
          if (*((_DWORD *)v73 + 6) == 2)
          {
            if ((*((_WORD *)v73 + 15) & 0x400) == 0)
              WebCore::Node::removedLastRef(v73, v74);
          }
          else
          {
            *((_DWORD *)v73 + 6) -= 2;
          }
        }
        else
        {
          v75 = 0;
        }
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v72 + 168))(v72, v75);
        v76 = (WebCore::EventNames *)((char *)v69 + 8);
        v69 = v68;
        if (v76 != v68)
        {
          v69 = v76;
          while ((unint64_t)(*(_QWORD *)v69 + 1) <= 1)
          {
            v69 = (WebCore::EventNames *)((char *)v69 + 8);
            if (v69 == v68)
            {
              v69 = v68;
              break;
            }
          }
        }
      }
      if ((v112 & 1) != 0)
        goto LABEL_138;
      goto LABEL_136;
    }
LABEL_116:
    v71 = (WebCore::EventNames *)((char *)v66 + 8 * *((unsigned int *)v66 - 1));
    goto LABEL_121;
  }
  v32 = this[8];
  if (v32)
  {
    v33 = *((unsigned int *)v32 - 1);
    v34 = (WebCore::EventNames *)((char *)v32 + 8 * v33);
    if (*((_DWORD *)v32 - 3))
    {
      v35 = this[8];
      if ((_DWORD)v33)
      {
        v36 = 8 * v33;
        v35 = this[8];
        while ((unint64_t)(*(_QWORD *)v35 + 1) <= 1)
        {
          v35 = (WebCore::EventNames *)((char *)v35 + 8);
          v36 -= 8;
          if (!v36)
          {
            v35 = v34;
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
    v35 = (WebCore::EventNames *)((char *)v32 + 8 * v33);
  }
  else
  {
    v35 = 0;
    v33 = 0;
  }
  v34 = (WebCore::EventNames *)((char *)v32 + 8 * v33);
  if (v32)
  {
LABEL_50:
    v37 = (WebCore::EventNames *)((char *)v32 + 8 * *((unsigned int *)v32 - 1));
    goto LABEL_146;
  }
  v37 = 0;
LABEL_146:
  while (v35 != v37)
  {
    v77 = *(_QWORD *)v35;
    v78 = v3[6];
    if (v78)
    {
      *((_DWORD *)v78 + 6) += 2;
      v80 = (*(uint64_t (**)(WebCore::Node *))(*(_QWORD *)v78 + 1264))(v78);
      if (*((_DWORD *)v78 + 6) == 2)
      {
        if ((*((_WORD *)v78 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(v78, v79);
      }
      else
      {
        *((_DWORD *)v78 + 6) -= 2;
      }
    }
    else
    {
      v80 = 0;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v77 + 168))(v77, v80);
    v81 = (WebCore::EventNames *)((char *)v35 + 8);
    v35 = v34;
    if (v81 != v34)
    {
      v35 = v81;
      while ((unint64_t)(*(_QWORD *)v35 + 1) <= 1)
      {
        v35 = (WebCore::EventNames *)((char *)v35 + 8);
        if (v35 == v34)
        {
          v35 = v34;
          break;
        }
      }
    }
  }
LABEL_136:
  if (*((_DWORD *)a2 + 6) == 2)
  {
    if ((*((_WORD *)a2 + 15) & 0x400) == 0)
      WebCore::Node::removedLastRef(a2, a2);
  }
  else
  {
    *((_DWORD *)a2 + 6) -= 2;
  }
LABEL_138:
  if (v4)
  {
    if (*((_DWORD *)v4 + 6) == 2)
    {
      if ((*((_WORD *)v4 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v4, a2);
    }
    else
    {
      *((_DWORD *)v4 + 6) -= 2;
    }
  }
}

void sub_195134BC8(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, uint64_t a11, WebCore::AbortSignal *a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  char v15;

  if ((v15 & 1) != 0)
    goto LABEL_5;
  if (*(_DWORD *)(v14 + 24) == 2)
  {
    if ((*(_WORD *)(v14 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v14, a2);
  }
  else
  {
    *(_DWORD *)(v14 + 24) -= 2;
  }
  if (v13)
  {
LABEL_5:
    if (*(_DWORD *)(v13 + 24) == 2)
    {
      if ((*(_WORD *)(v13 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v13, a2);
    }
    else
    {
      *(_DWORD *)(v13 + 24) -= 2;
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t WebCore::PlaybackSessionModelMediaElement::isPictureInPictureSupported(WebCore::PlaybackSessionModelMediaElement *this)
{
  WebCore::Node *v1;
  void *v2;
  uint64_t v3;

  v1 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (!v1)
    return 0;
  *((_DWORD *)v1 + 6) += 2;
  v3 = (*(uint64_t (**)(WebCore::Node *))(*(_QWORD *)v1 + 1264))(v1);
  if (*((_DWORD *)v1 + 6) == 2)
  {
    if ((*((_WORD *)v1 + 15) & 0x400) == 0)
      WebCore::Node::removedLastRef(v1, v2);
  }
  else
  {
    *((_DWORD *)v1 + 6) -= 2;
  }
  return v3;
}

void sub_195134D90(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

WebCore *WebCore::PlaybackSessionModelMediaElement::observedEventNames(WebCore *this)
{
  unint64_t StatusReg;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  WTF::StringImpl *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  WTF::StringImpl *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  WTF::StringImpl *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  WTF::StringImpl *v46;

  if ((byte_1ECE81719 & 1) != 0)
    return this;
  StatusReg = _ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3));
  v2 = *(_QWORD *)(StatusReg + 736);
  if (!v2 || (v3 = *(_QWORD *)(v2 + 96)) == 0)
  {
    this = (WebCore *)WebCore::threadGlobalDataSlow(this);
    v3 = (uint64_t)this;
  }
  v4 = *(_QWORD *)(v3 + 40);
  if (!v4)
  {
    this = (WebCore *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v3);
    v4 = *(_QWORD *)(v3 + 40);
  }
  v46 = *(WTF::StringImpl **)(v4 + 352);
  if (v46)
    *(_DWORD *)v46 += 2;
  v5 = *(_QWORD *)(StatusReg + 736);
  if (!v5 || (v6 = *(_QWORD *)(v5 + 96)) == 0)
  {
    this = (WebCore *)WebCore::threadGlobalDataSlow(this);
    v6 = (uint64_t)this;
  }
  v7 = *(_QWORD *)(v6 + 40);
  if (!v7)
  {
    this = (WebCore *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v6);
    v7 = *(_QWORD *)(v6 + 40);
  }
  v45 = *(WTF::StringImpl **)(v7 + 712);
  if (v45)
    *(_DWORD *)v45 += 2;
  v8 = *(_QWORD *)(StatusReg + 736);
  if (!v8 || (v9 = *(_QWORD *)(v8 + 96)) == 0)
  {
    this = (WebCore *)WebCore::threadGlobalDataSlow(this);
    v9 = (uint64_t)this;
  }
  v10 = *(_QWORD *)(v9 + 40);
  if (!v10)
  {
    this = (WebCore *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v9);
    v10 = *(_QWORD *)(v9 + 40);
  }
  v44 = *(WTF::StringImpl **)(v10 + 1424);
  if (v44)
    *(_DWORD *)v44 += 2;
  v11 = *(_QWORD *)(StatusReg + 736);
  if (!v11 || (v12 = *(_QWORD *)(v11 + 96)) == 0)
  {
    this = (WebCore *)WebCore::threadGlobalDataSlow(this);
    v12 = (uint64_t)this;
  }
  v13 = *(_QWORD *)(v12 + 40);
  if (!v13)
  {
    this = (WebCore *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v12);
    v13 = *(_QWORD *)(v12 + 40);
  }
  v14 = *(WTF::StringImpl **)(v13 + 1464);
  if (v14)
    *(_DWORD *)v14 += 2;
  v15 = *(_QWORD *)(StatusReg + 736);
  if (!v15 || (v16 = *(_QWORD *)(v15 + 96)) == 0)
  {
    this = (WebCore *)WebCore::threadGlobalDataSlow(this);
    v16 = (uint64_t)this;
  }
  v17 = *(_QWORD *)(v16 + 40);
  if (!v17)
  {
    this = (WebCore *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v16);
    v17 = *(_QWORD *)(v16 + 40);
  }
  v18 = *(WTF::StringImpl **)(v17 + 1624);
  if (v18)
    *(_DWORD *)v18 += 2;
  v19 = *(_QWORD *)(StatusReg + 736);
  if (!v19 || (v20 = *(_QWORD *)(v19 + 96)) == 0)
  {
    this = (WebCore *)WebCore::threadGlobalDataSlow(this);
    v20 = (uint64_t)this;
  }
  v21 = *(_QWORD *)(v20 + 40);
  if (!v21)
  {
    this = (WebCore *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v20);
    v21 = *(_QWORD *)(v20 + 40);
  }
  v22 = *(WTF::StringImpl **)(v21 + 2048);
  if (v22)
    *(_DWORD *)v22 += 2;
  v23 = *(_QWORD *)(StatusReg + 736);
  if (!v23 || (v24 = *(_QWORD *)(v23 + 96)) == 0)
  {
    this = (WebCore *)WebCore::threadGlobalDataSlow(this);
    v24 = (uint64_t)this;
  }
  v25 = *(_QWORD *)(v24 + 40);
  if (!v25)
  {
    this = (WebCore *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v24);
    v25 = *(_QWORD *)(v24 + 40);
  }
  v26 = *(WTF::StringImpl **)(v25 + 1584);
  if (v26)
    *(_DWORD *)v26 += 2;
  v27 = *(_QWORD *)(StatusReg + 736);
  if (!v27 || (v28 = *(_QWORD *)(v27 + 96)) == 0)
  {
    this = (WebCore *)WebCore::threadGlobalDataSlow(this);
    v28 = (uint64_t)this;
  }
  v29 = *(_QWORD *)(v28 + 40);
  if (!v29)
  {
    this = (WebCore *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v28);
    v29 = *(_QWORD *)(v28 + 40);
  }
  v30 = *(WTF::StringImpl **)(v29 + 2264);
  if (v30)
    *(_DWORD *)v30 += 2;
  v31 = *(_QWORD *)(StatusReg + 736);
  if (!v31 || (v32 = *(_QWORD *)(v31 + 96)) == 0)
  {
    this = (WebCore *)WebCore::threadGlobalDataSlow(this);
    v32 = (uint64_t)this;
  }
  v33 = *(_QWORD *)(v32 + 40);
  if (!v33)
  {
    this = (WebCore *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v32);
    v33 = *(_QWORD *)(v32 + 40);
  }
  v34 = *(WTF::StringImpl **)(v33 + 2272);
  if (v34)
    *(_DWORD *)v34 += 2;
  v35 = *(_QWORD *)(StatusReg + 736);
  if (!v35 || (v36 = *(_QWORD *)(v35 + 96)) == 0)
  {
    this = (WebCore *)WebCore::threadGlobalDataSlow(this);
    v36 = (uint64_t)this;
  }
  v37 = *(_QWORD *)(v36 + 40);
  if (!v37)
  {
    this = (WebCore *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v36);
    v37 = *(_QWORD *)(v36 + 40);
  }
  v38 = *(WTF::StringImpl **)(v37 + 2360);
  if (v38)
    *(_DWORD *)v38 += 2;
  v39 = *(_QWORD *)(StatusReg + 736);
  if (!v39 || (v40 = *(_QWORD *)(v39 + 96)) == 0)
    v40 = WebCore::threadGlobalDataSlow(this);
  v41 = *(_QWORD *)(v40 + 40);
  if (!v41)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v40);
    v41 = *(_QWORD *)(v40 + 40);
  }
  v42 = *(WTF::StringImpl **)(v41 + 2472);
  if (v42)
    *(_DWORD *)v42 += 2;
  this = (WebCore *)WTF::fastMalloc((WTF *)0x58);
  if (v46)
    *(_DWORD *)v46 += 2;
  *(_QWORD *)this = v46;
  if (v45)
    *(_DWORD *)v45 += 2;
  *((_QWORD *)this + 1) = v45;
  if (v44)
    *(_DWORD *)v44 += 2;
  *((_QWORD *)this + 2) = v44;
  if (v14)
    *(_DWORD *)v14 += 2;
  *((_QWORD *)this + 3) = v14;
  if (v18)
    *(_DWORD *)v18 += 2;
  *((_QWORD *)this + 4) = v18;
  if (v22)
    *(_DWORD *)v22 += 2;
  *((_QWORD *)this + 5) = v22;
  if (v26)
    *(_DWORD *)v26 += 2;
  *((_QWORD *)this + 6) = v26;
  if (v30)
    *(_DWORD *)v30 += 2;
  *((_QWORD *)this + 7) = v30;
  if (v34)
    *(_DWORD *)v34 += 2;
  *((_QWORD *)this + 8) = v34;
  if (v38)
    *(_DWORD *)v38 += 2;
  *((_QWORD *)this + 9) = v38;
  if (v42)
  {
    *(_DWORD *)v42 += 2;
    *((_QWORD *)this + 10) = v42;
    qword_1ECE81720 = (uint64_t)this;
    _MergedGlobals_119 = 1;
    if (*(_DWORD *)v42 == 2)
      this = (WebCore *)WTF::StringImpl::destroy(v42, v43);
    else
      *(_DWORD *)v42 -= 2;
  }
  else
  {
    *((_QWORD *)this + 10) = 0;
    qword_1ECE81720 = (uint64_t)this;
    _MergedGlobals_119 = 1;
  }
  if (v38)
  {
    if (*(_DWORD *)v38 == 2)
    {
      this = (WebCore *)WTF::StringImpl::destroy(v38, v43);
      if (!v34)
        goto LABEL_108;
      goto LABEL_106;
    }
    *(_DWORD *)v38 -= 2;
  }
  if (!v34)
    goto LABEL_108;
LABEL_106:
  if (*(_DWORD *)v34 == 2)
    this = (WebCore *)WTF::StringImpl::destroy(v34, v43);
  else
    *(_DWORD *)v34 -= 2;
LABEL_108:
  if (v30)
  {
    if (*(_DWORD *)v30 == 2)
    {
      this = (WebCore *)WTF::StringImpl::destroy(v30, v43);
      if (!v26)
        goto LABEL_114;
      goto LABEL_112;
    }
    *(_DWORD *)v30 -= 2;
  }
  if (!v26)
    goto LABEL_114;
LABEL_112:
  if (*(_DWORD *)v26 == 2)
    this = (WebCore *)WTF::StringImpl::destroy(v26, v43);
  else
    *(_DWORD *)v26 -= 2;
LABEL_114:
  if (!v22)
    goto LABEL_117;
  if (*(_DWORD *)v22 != 2)
  {
    *(_DWORD *)v22 -= 2;
LABEL_117:
    if (v18)
      goto LABEL_118;
    goto LABEL_120;
  }
  this = (WebCore *)WTF::StringImpl::destroy(v22, v43);
  if (v18)
  {
LABEL_118:
    if (*(_DWORD *)v18 == 2)
      this = (WebCore *)WTF::StringImpl::destroy(v18, v43);
    else
      *(_DWORD *)v18 -= 2;
  }
LABEL_120:
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      this = (WebCore *)WTF::StringImpl::destroy(v14, v43);
    else
      *(_DWORD *)v14 -= 2;
  }
  if (v44)
  {
    if (*(_DWORD *)v44 == 2)
      this = (WebCore *)WTF::StringImpl::destroy(v44, v43);
    else
      *(_DWORD *)v44 -= 2;
  }
  if (v45)
  {
    if (*(_DWORD *)v45 == 2)
      this = (WebCore *)WTF::StringImpl::destroy(v45, v43);
    else
      *(_DWORD *)v45 -= 2;
  }
  if (v46)
  {
    if (*(_DWORD *)v46 == 2)
      this = (WebCore *)WTF::StringImpl::destroy(v46, v43);
    else
      *(_DWORD *)v46 -= 2;
  }
  byte_1ECE81719 = 1;
  return this;
}

void sub_1951353E4(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10, WTF::StringImpl *a11, WTF::StringImpl *a12)
{
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;

  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
    {
      WTF::StringImpl::destroy(v12, a2);
      if (!v19)
        goto LABEL_7;
      goto LABEL_5;
    }
    *(_DWORD *)v12 -= 2;
  }
  if (!v19)
    goto LABEL_7;
LABEL_5:
  if (*(_DWORD *)v19 == 2)
    WTF::StringImpl::destroy(v19, a2);
  else
    *(_DWORD *)v19 -= 2;
LABEL_7:
  if (v18)
  {
    if (*(_DWORD *)v18 == 2)
    {
      WTF::StringImpl::destroy(v18, a2);
      if (!v17)
        goto LABEL_13;
      goto LABEL_11;
    }
    *(_DWORD *)v18 -= 2;
  }
  if (!v17)
    goto LABEL_13;
LABEL_11:
  if (*(_DWORD *)v17 == 2)
    WTF::StringImpl::destroy(v17, a2);
  else
    *(_DWORD *)v17 -= 2;
LABEL_13:
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
    {
      WTF::StringImpl::destroy(v16, a2);
      if (!v15)
        goto LABEL_19;
      goto LABEL_17;
    }
    *(_DWORD *)v16 -= 2;
  }
  if (!v15)
    goto LABEL_19;
LABEL_17:
  if (*(_DWORD *)v15 == 2)
    WTF::StringImpl::destroy(v15, a2);
  else
    *(_DWORD *)v15 -= 2;
LABEL_19:
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
    {
      WTF::StringImpl::destroy(v14, a2);
      if (!v13)
        goto LABEL_25;
      goto LABEL_23;
    }
    *(_DWORD *)v14 -= 2;
  }
  if (!v13)
    goto LABEL_25;
LABEL_23:
  if (*(_DWORD *)v13 == 2)
    WTF::StringImpl::destroy(v13, a2);
  else
    *(_DWORD *)v13 -= 2;
LABEL_25:
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  if (a11)
  {
    if (*(_DWORD *)a11 == 2)
      WTF::StringImpl::destroy(a11, a2);
    else
      *(_DWORD *)a11 -= 2;
  }
  if (a12)
  {
    if (*(_DWORD *)a12 == 2)
      WTF::StringImpl::destroy(a12, a2);
    else
      *(_DWORD *)a12 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void WebCore::PlaybackSessionModelMediaElement::updateForEventName(WebCore::PlaybackSessionModelMediaElement *this, WTF::StringImpl **a2)
{
  uint64_t v2;
  WebCore::PlaybackSessionModelMediaElement *v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;
  uint64_t v7;
  WebCore::PlaybackSessionModelMediaElement *v8;
  uint64_t v9;
  WebCore::Node *v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  double v22;
  _BOOL8 v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  unint64_t StatusReg;
  uint64_t v33;
  WebCore::PlaybackSessionModelMediaElement *v34;
  uint64_t v35;
  uint64_t v36;
  WebCore::PlaybackSessionModelMediaElement *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  double v48;
  uint64_t *v49;
  unint64_t v50;
  uint64_t v51;
  WebCore::PlaybackSessionModelMediaElement *v52;
  uint64_t v53;
  uint64_t v54;
  WebCore::PlaybackSessionModelMediaElement *v55;
  uint64_t v56;
  uint64_t v57;
  WebCore::PlaybackSessionModelMediaElement *v58;
  uint64_t v59;
  uint64_t v60;
  WebCore::PlaybackSessionModelMediaElement *v61;
  uint64_t v62;
  uint64_t v63;
  WebCore::PlaybackSessionModelMediaElement *v64;
  uint64_t v65;
  WebCore::Node *v66;
  double v67;
  char v68;
  unsigned int v69;
  _WORD *v70;
  int v71;
  WebCore::Node *v72;
  double v73;
  WebCore::Node *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  WebCore::PlaybackSessionModelMediaElement *v84;
  uint64_t v85;
  WebCore::Node *v86;
  void *v87;
  double v88;
  double v89;
  double v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  WebCore::PlaybackSessionModelMediaElement *v99;
  uint64_t v100;
  WebCore::Node *v101;
  double v102;
  double v103;
  void *v104;
  WTF *v105;
  int v106;
  double v107;
  uint64_t v108;
  double v109;
  int v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  WTF::StringImpl *v124;
  unint64_t v125;
  uint64_t v126;
  WebCore::PlaybackSessionModelMediaElement *v127;
  uint64_t v128;
  uint64_t v129;
  WebCore::PlaybackSessionModelMediaElement *v130;
  uint64_t v131;
  uint64_t v132;
  WebCore::PlaybackSessionModelMediaElement *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _BOOL8 v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unsigned __int8 *v145;
  uint64_t v147;
  int v148;
  int v149;
  uint64_t v150;
  int v151;
  uint64_t v152;
  WTF::StringImpl *v153;
  uint64_t v154;
  WebCore::MediaElementSession *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  _QWORD *v160;
  uint64_t v161;
  _QWORD *v162;
  _QWORD *v163;
  uint64_t v164;
  WebCore::PlaybackSessionModelMediaElement *v165;
  uint64_t v166;
  int *v167;
  int v168;
  unsigned int v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  _QWORD *v175;
  uint64_t v176;
  _QWORD *v177;
  _QWORD *v178;
  unint64_t v179;
  uint64_t v180;
  WebCore::PlaybackSessionModelMediaElement *v181;
  WTF::StringImpl *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  WebCore::PlaybackSessionModelMediaElement *v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  _QWORD *v190;
  uint64_t v191;
  _QWORD *v192;
  _QWORD *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t *v199;
  uint64_t *v200;
  uint64_t v201;
  uint64_t *v202;
  uint64_t v203;
  WebCore::Node *v204;
  void *v205;
  uint64_t v206;
  uint64_t v207;
  WebCore::Node *v208;
  void *v209;
  double v210;
  uint64_t *v211;
  WTF *v212;
  WTF *v213;
  unsigned int v214;
  WTF::StringImpl *v215;
  WTF *v216;
  WTF::StringImpl *v217[2];
  const char *v218;
  uint64_t v219;

  v2 = *((_QWORD *)this + 8);
  if (!v2 || !*(_DWORD *)(v2 - 12))
    return;
  v4 = this;
  if (byte_1ECE8171A == 1)
  {
    v5 = (WTF::StringImpl *)qword_1ECE81728;
  }
  else
  {
    this = (WebCore::PlaybackSessionModelMediaElement *)WTF::AtomStringImpl::add();
    v5 = v217[0];
    qword_1ECE81728 = (uint64_t)v217[0];
    byte_1ECE8171A = 1;
  }
  v6 = *a2;
  if (*a2 != v5)
  {
    v7 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
    if (!v7 || (v8 = *(WebCore::PlaybackSessionModelMediaElement **)(v7 + 96)) == 0)
    {
      this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::threadGlobalDataSlow(this);
      v8 = this;
    }
    v9 = *((_QWORD *)v8 + 5);
    if (!v9)
    {
      this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v8);
      v9 = *((_QWORD *)v8 + 5);
    }
    if (*a2 != *(WTF::StringImpl **)(v9 + 712))
      goto LABEL_62;
  }
  v10 = (WebCore::Node *)*((_QWORD *)v4 + 6);
  if (v10)
  {
    *((_DWORD *)v10 + 6) += 2;
    v11 = (*(double (**)(WebCore::Node *))(*(_QWORD *)v10 + 1376))(v10);
    if (*((_DWORD *)v10 + 6) == 2)
    {
      if ((*((_WORD *)v10 + 15) & 0x400) == 0)
        this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::Node::removedLastRef(v10, a2);
    }
    else
    {
      *((_DWORD *)v10 + 6) -= 2;
    }
  }
  else
  {
    v11 = 0.0;
  }
  v12 = *((_QWORD *)v4 + 8);
  if (!v12)
  {
    v15 = 0;
    v13 = 0;
LABEL_24:
    v14 = (_QWORD *)(v12 + 8 * v13);
    goto LABEL_25;
  }
  v13 = *(unsigned int *)(v12 - 4);
  v14 = (_QWORD *)(v12 + 8 * v13);
  if (!*(_DWORD *)(v12 - 12))
  {
    v15 = (_QWORD *)(v12 + 8 * v13);
    goto LABEL_24;
  }
  v15 = (_QWORD *)*((_QWORD *)v4 + 8);
  if ((_DWORD)v13)
  {
    v16 = 8 * v13;
    v15 = (_QWORD *)*((_QWORD *)v4 + 8);
    while ((unint64_t)(*v15 + 1) <= 1)
    {
      ++v15;
      v16 -= 8;
      if (!v16)
      {
        v15 = v14;
        break;
      }
    }
  }
LABEL_25:
  if (v12)
    v17 = (_QWORD *)(v12 + 8 * *(unsigned int *)(v12 - 4));
  else
    v17 = 0;
  while (v15 != v17)
  {
    v18 = v15 + 1;
    this = (WebCore::PlaybackSessionModelMediaElement *)(*(uint64_t (**)(_QWORD, double))(*(_QWORD *)*v15
                                                                                                  + 48))(*v15, v11);
    v15 = v14;
    if (v18 != v14)
    {
      v15 = v18;
      while ((unint64_t)(*v15 + 1) <= 1)
      {
        if (++v15 == v14)
        {
          v15 = v14;
          break;
        }
      }
    }
  }
  v19 = *((_QWORD *)v4 + 6);
  if (v19)
  {
    v20 = *(_DWORD *)(v19 + 24) + 2;
    *(_DWORD *)(v19 + 24) = v20;
    v21 = *(_QWORD *)(v19 + 1136);
    if (v21)
    {
      this = (WebCore::PlaybackSessionModelMediaElement *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v21 + 72)
                                                                                            + 544))(*(_QWORD *)(v21 + 72));
      v20 = *(_DWORD *)(v19 + 24);
    }
    else
    {
      v22 = 0.0;
    }
    v23 = v22 < 0.0;
    v24 = v20 - 2;
    if (v24)
    {
      *(_DWORD *)(v19 + 24) = v24;
    }
    else if ((*(_WORD *)(v19 + 30) & 0x400) == 0)
    {
      this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::Node::removedLastRef((WebCore::Node *)v19, a2);
    }
  }
  else
  {
    v23 = 0;
  }
  v25 = *((_QWORD *)v4 + 8);
  if (!v25)
  {
    v28 = 0;
    v26 = 0;
LABEL_50:
    v27 = (_QWORD *)(v25 + 8 * v26);
    goto LABEL_51;
  }
  v26 = *(unsigned int *)(v25 - 4);
  v27 = (_QWORD *)(v25 + 8 * v26);
  if (!*(_DWORD *)(v25 - 12))
  {
    v28 = (_QWORD *)(v25 + 8 * v26);
    goto LABEL_50;
  }
  v28 = (_QWORD *)*((_QWORD *)v4 + 8);
  if ((_DWORD)v26)
  {
    v29 = 8 * v26;
    v28 = (_QWORD *)*((_QWORD *)v4 + 8);
    while ((unint64_t)(*v28 + 1) <= 1)
    {
      ++v28;
      v29 -= 8;
      if (!v29)
      {
        v28 = v27;
        break;
      }
    }
  }
LABEL_51:
  if (v25)
    v30 = (_QWORD *)(v25 + 8 * *(unsigned int *)(v25 - 4));
  else
    v30 = 0;
  while (v28 != v30)
  {
    v31 = v28 + 1;
    this = (WebCore::PlaybackSessionModelMediaElement *)(*(uint64_t (**)(_QWORD, _BOOL8))(*(_QWORD *)*v28
                                                                                                  + 96))(*v28, v23);
    v28 = v27;
    if (v31 != v27)
    {
      v28 = v31;
      while ((unint64_t)(*v28 + 1) <= 1)
      {
        if (++v28 == v27)
        {
          v28 = v27;
          break;
        }
      }
    }
  }
  if (v6 == v5)
  {
LABEL_74:
    v39 = *((_QWORD *)v4 + 8);
    if (v39)
    {
      v40 = *(unsigned int *)(v39 - 4);
      v41 = (uint64_t *)(v39 + 8 * v40);
      if (*(_DWORD *)(v39 - 12))
      {
        v42 = (uint64_t *)*((_QWORD *)v4 + 8);
        if ((_DWORD)v40)
        {
          v43 = 8 * v40;
          v42 = (uint64_t *)*((_QWORD *)v4 + 8);
          while ((unint64_t)(*v42 + 1) <= 1)
          {
            ++v42;
            v43 -= 8;
            if (!v43)
            {
              v42 = v41;
              break;
            }
          }
        }
LABEL_84:
        if (v39)
          v44 = (uint64_t *)(v39 + 8 * *(unsigned int *)(v39 - 4));
        else
          v44 = 0;
        while (v42 != v44)
        {
          v45 = *v42;
          v46 = *((_QWORD *)v4 + 6);
          if (v46)
          {
            v47 = *(_DWORD *)(v46 + 24);
            *(_DWORD *)(v46 + 24) = v47 + 2;
            v48 = *(double *)(v46 + 1024);
            if (v47)
            {
              *(_DWORD *)(v46 + 24) = v47;
            }
            else if ((*(_WORD *)(v46 + 30) & 0x400) == 0)
            {
              WebCore::Node::removedLastRef((WebCore::Node *)v46, a2);
            }
          }
          else
          {
            v48 = 0.0;
          }
          this = (WebCore::PlaybackSessionModelMediaElement *)(*(uint64_t (**)(uint64_t, double))(*(_QWORD *)v45 + 72))(v45, v48);
          v49 = v42 + 1;
          v42 = v41;
          if (v49 != v41)
          {
            v42 = v49;
            while ((unint64_t)(*v42 + 1) <= 1)
            {
              if (++v42 == v41)
              {
                v42 = v41;
                break;
              }
            }
          }
        }
        if (v6 == v5)
          goto LABEL_132;
        goto LABEL_102;
      }
      v42 = (uint64_t *)(v39 + 8 * v40);
    }
    else
    {
      v42 = 0;
      v40 = 0;
    }
    v41 = (uint64_t *)(v39 + 8 * v40);
    goto LABEL_84;
  }
LABEL_62:
  StatusReg = _ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3));
  v33 = *(_QWORD *)(StatusReg + 736);
  if (!v33 || (v34 = *(WebCore::PlaybackSessionModelMediaElement **)(v33 + 96)) == 0)
  {
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::threadGlobalDataSlow(this);
    v34 = this;
  }
  v35 = *((_QWORD *)v34 + 5);
  if (!v35)
  {
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v34);
    v35 = *((_QWORD *)v34 + 5);
  }
  if (*a2 == *(WTF::StringImpl **)(v35 + 1464))
    goto LABEL_74;
  v36 = *(_QWORD *)(StatusReg + 736);
  if (!v36 || (v37 = *(WebCore::PlaybackSessionModelMediaElement **)(v36 + 96)) == 0)
  {
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::threadGlobalDataSlow(this);
    v37 = this;
  }
  v38 = *((_QWORD *)v37 + 5);
  if (!v38)
  {
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v37);
    v38 = *((_QWORD *)v37 + 5);
  }
  if (*a2 == *(WTF::StringImpl **)(v38 + 1472))
    goto LABEL_74;
LABEL_102:
  v50 = _ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3));
  v51 = *(_QWORD *)(v50 + 736);
  if (!v51 || (v52 = *(WebCore::PlaybackSessionModelMediaElement **)(v51 + 96)) == 0)
  {
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::threadGlobalDataSlow(this);
    v52 = this;
  }
  v53 = *((_QWORD *)v52 + 5);
  if (!v53)
  {
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v52);
    v53 = *((_QWORD *)v52 + 5);
  }
  if (*a2 != *(WTF::StringImpl **)(v53 + 1424))
  {
    v54 = *(_QWORD *)(v50 + 736);
    if (!v54 || (v55 = *(WebCore::PlaybackSessionModelMediaElement **)(v54 + 96)) == 0)
    {
      this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::threadGlobalDataSlow(this);
      v55 = this;
    }
    v56 = *((_QWORD *)v55 + 5);
    if (!v56)
    {
      this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v55);
      v56 = *((_QWORD *)v55 + 5);
    }
    if (*a2 != *(WTF::StringImpl **)(v56 + 1464))
    {
      v57 = *(_QWORD *)(v50 + 736);
      if (!v57 || (v58 = *(WebCore::PlaybackSessionModelMediaElement **)(v57 + 96)) == 0)
      {
        this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::threadGlobalDataSlow(this);
        v58 = this;
      }
      v59 = *((_QWORD *)v58 + 5);
      if (!v59)
      {
        this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v58);
        v59 = *((_QWORD *)v58 + 5);
      }
      if (*a2 != *(WTF::StringImpl **)(v59 + 1624))
      {
        v60 = *(_QWORD *)(v50 + 736);
        if (!v60 || (v61 = *(WebCore::PlaybackSessionModelMediaElement **)(v60 + 96)) == 0)
        {
          this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::threadGlobalDataSlow(this);
          v61 = this;
        }
        v62 = *((_QWORD *)v61 + 5);
        if (!v62)
        {
          this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v61);
          v62 = *((_QWORD *)v61 + 5);
        }
        if (*a2 != *(WTF::StringImpl **)(v62 + 2272))
        {
          v63 = *(_QWORD *)(v50 + 736);
          if (!v63 || (v64 = *(WebCore::PlaybackSessionModelMediaElement **)(v63 + 96)) == 0)
          {
            this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::threadGlobalDataSlow(this);
            v64 = this;
          }
          v65 = *((_QWORD *)v64 + 5);
          if (!v65)
          {
            this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v64);
            v65 = *((_QWORD *)v64 + 5);
          }
          if (*a2 != *(WTF::StringImpl **)(v65 + 352))
            goto LABEL_172;
        }
      }
    }
  }
LABEL_132:
  v66 = (WebCore::Node *)*((_QWORD *)v4 + 6);
  v67 = 0.0;
  if (!v66)
  {
    v69 = 0;
    goto LABEL_480;
  }
  *((_DWORD *)v66 + 6) += 2;
  this = (WebCore::PlaybackSessionModelMediaElement *)(*(uint64_t (**)(WebCore::Node *))(*(_QWORD *)v66
                                                                                                 + 1384))(v66);
  v68 = (char)this;
  if (*((_DWORD *)v66 + 6) == 2)
  {
    if ((*((_WORD *)v66 + 15) & 0x400) == 0)
    {
      this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::Node::removedLastRef(v66, a2);
      if ((v68 & 1) != 0)
        goto LABEL_136;
      goto LABEL_139;
    }
  }
  else
  {
    *((_DWORD *)v66 + 6) -= 2;
  }
  if ((this & 1) != 0)
  {
LABEL_136:
    v69 = 0;
    goto LABEL_140;
  }
LABEL_139:
  v69 = 1;
LABEL_140:
  v70 = (_WORD *)*((_QWORD *)v4 + 6);
  if (!v70)
  {
LABEL_480:
    v73 = 0.0;
    goto LABEL_151;
  }
  *((_DWORD *)v70 + 6) += 2;
  this = (WebCore::PlaybackSessionModelMediaElement *)(*(uint64_t (**)(_WORD *))(*(_QWORD *)v70 + 1352))(v70);
  v71 = (int)this;
  if (*((_DWORD *)v70 + 6) != 2)
  {
    *((_DWORD *)v70 + 6) -= 2;
    goto LABEL_143;
  }
  if ((v70[15] & 0x400) == 0)
  {
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::Node::removedLastRef((WebCore::Node *)v70, a2);
LABEL_143:
    if (v71 >= 3)
      goto LABEL_145;
    goto LABEL_144;
  }
  if ((int)this <= 2)
LABEL_144:
    v69 |= 2u;
LABEL_145:
  v72 = (WebCore::Node *)*((_QWORD *)v4 + 6);
  if (!v72)
    goto LABEL_480;
  *((_DWORD *)v72 + 6) += 2;
  v73 = (*(double (**)(WebCore::Node *))(*(_QWORD *)v72 + 1408))(v72);
  if (*((_DWORD *)v72 + 6) == 2)
  {
    if ((*((_WORD *)v72 + 15) & 0x400) == 0)
      this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::Node::removedLastRef(v72, a2);
  }
  else
  {
    *((_DWORD *)v72 + 6) -= 2;
  }
  v74 = (WebCore::Node *)*((_QWORD *)v4 + 6);
  if (v74)
  {
    *((_DWORD *)v74 + 6) += 2;
    v67 = (*(double (**)(WebCore::Node *))(*(_QWORD *)v74 + 1392))(v74);
    if (*((_DWORD *)v74 + 6) == 2)
    {
      if ((*((_WORD *)v74 + 15) & 0x400) == 0)
        this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::Node::removedLastRef(v74, a2);
    }
    else
    {
      *((_DWORD *)v74 + 6) -= 2;
    }
  }
LABEL_151:
  v75 = *((_QWORD *)v4 + 8);
  if (v75)
  {
    v76 = *(unsigned int *)(v75 - 4);
    v77 = (_QWORD *)(v75 + 8 * v76);
    if (*(_DWORD *)(v75 - 12))
    {
      v78 = (_QWORD *)*((_QWORD *)v4 + 8);
      if ((_DWORD)v76)
      {
        v79 = 8 * v76;
        v78 = (_QWORD *)*((_QWORD *)v4 + 8);
        while ((unint64_t)(*v78 + 1) <= 1)
        {
          ++v78;
          v79 -= 8;
          if (!v79)
          {
            v78 = v77;
            goto LABEL_158;
          }
        }
      }
      goto LABEL_158;
    }
    v78 = (_QWORD *)(v75 + 8 * v76);
  }
  else
  {
    v78 = 0;
    v76 = 0;
  }
  v77 = (_QWORD *)(v75 + 8 * v76);
  if (v75)
  {
LABEL_158:
    v80 = (_QWORD *)(v75 + 8 * *(unsigned int *)(v75 - 4));
    goto LABEL_163;
  }
  v80 = 0;
LABEL_163:
  if (v80 != v78)
  {
    v81 = v69;
    do
    {
      v82 = v78 + 1;
      this = (WebCore::PlaybackSessionModelMediaElement *)(*(uint64_t (**)(_QWORD, uint64_t, double, double))(*(_QWORD *)*v78 + 80))(*v78, v81, v73, v67);
      v78 = v77;
      if (v82 != v77)
      {
        v78 = v82;
        while ((unint64_t)(*v78 + 1) <= 1)
        {
          if (++v78 == v77)
          {
            v78 = v77;
            break;
          }
        }
      }
    }
    while (v78 != v80);
  }
  if (v6 == v5)
  {
LABEL_178:
    v86 = (WebCore::Node *)*((_QWORD *)v4 + 6);
    if (v86)
    {
      *((_DWORD *)v86 + 6) += 2;
      v88 = (*(double (**)(WebCore::Node *))(*(_QWORD *)v86 + 1360))(v86);
      if (*((_DWORD *)v86 + 6) == 2)
      {
        if ((*((_WORD *)v86 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(v86, v87);
      }
      else
      {
        *((_DWORD *)v86 + 6) -= 2;
      }
    }
    else
    {
      v88 = 0.0;
    }
    this = (WebCore::PlaybackSessionModelMediaElement *)objc_msgSend((id)objc_msgSend(MEMORY[0x1E0CB3898], "processInfo"), "systemUptime");
    v90 = v89;
    v91 = *((_QWORD *)v4 + 8);
    if (v91)
    {
      v92 = *(unsigned int *)(v91 - 4);
      v93 = (_QWORD *)(v91 + 8 * v92);
      if (*(_DWORD *)(v91 - 12))
      {
        v94 = (_QWORD *)*((_QWORD *)v4 + 8);
        if ((_DWORD)v92)
        {
          v95 = 8 * v92;
          v94 = (_QWORD *)*((_QWORD *)v4 + 8);
          while ((unint64_t)(*v94 + 1) <= 1)
          {
            ++v94;
            v95 -= 8;
            if (!v95)
            {
              v94 = v93;
              break;
            }
          }
        }
LABEL_191:
        if (v91)
          v96 = (_QWORD *)(v91 + 8 * *(unsigned int *)(v91 - 4));
        else
          v96 = 0;
        while (v94 != v96)
        {
          v97 = v94 + 1;
          this = (WebCore::PlaybackSessionModelMediaElement *)(*(uint64_t (**)(_QWORD, double, double))(*(_QWORD *)*v94 + 56))(*v94, v88, v90);
          v94 = v93;
          if (v97 != v93)
          {
            v94 = v97;
            while ((unint64_t)(*v94 + 1) <= 1)
            {
              if (++v94 == v93)
              {
                v94 = v93;
                break;
              }
            }
          }
        }
        if (v6 == v5)
          goto LABEL_208;
        goto LABEL_202;
      }
      v94 = (_QWORD *)(v91 + 8 * v92);
    }
    else
    {
      v94 = 0;
      v92 = 0;
    }
    v93 = (_QWORD *)(v91 + 8 * v92);
    goto LABEL_191;
  }
LABEL_172:
  v83 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v83 || (v84 = *(WebCore::PlaybackSessionModelMediaElement **)(v83 + 96)) == 0)
  {
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::threadGlobalDataSlow(this);
    v84 = this;
  }
  v85 = *((_QWORD *)v84 + 5);
  if (!v85)
  {
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v84);
    v85 = *((_QWORD *)v84 + 5);
  }
  if (*a2 == *(WTF::StringImpl **)(v85 + 2048))
    goto LABEL_178;
LABEL_202:
  v98 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v98 || (v99 = *(WebCore::PlaybackSessionModelMediaElement **)(v98 + 96)) == 0)
  {
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::threadGlobalDataSlow(this);
    v99 = this;
  }
  v100 = *((_QWORD *)v99 + 5);
  if (!v100)
  {
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v99);
    v100 = *((_QWORD *)v99 + 5);
  }
  if (*a2 != *(WTF::StringImpl **)(v100 + 1584))
    goto LABEL_251;
LABEL_208:
  v101 = (WebCore::Node *)*((_QWORD *)v4 + 6);
  v102 = 0.0;
  v103 = 0.0;
  if (!v101)
    goto LABEL_217;
  *((_DWORD *)v101 + 6) += 2;
  (*(void (**)(WTF **__return_ptr, WebCore::Node *))(*(_QWORD *)v101 + 1344))(&v216, v101);
  v105 = v216;
  v106 = *((_DWORD *)v216 + 5);
  if (!v106)
  {
    v216 = 0;
LABEL_213:
    if (*(_DWORD *)v105 == 1)
    {
      v212 = (WTF *)*((_QWORD *)v105 + 1);
      if (v212)
      {
        *((_QWORD *)v105 + 1) = 0;
        *((_DWORD *)v105 + 4) = 0;
        WTF::fastFree(v212, v104);
      }
      WTF::fastFree(v105, v104);
    }
    else
    {
      --*(_DWORD *)v105;
    }
    goto LABEL_215;
  }
  *(_OWORD *)v217 = *(_OWORD *)(*((_QWORD *)v216 + 1) + 32 * (v106 - 1) + 16);
  WTF::MediaTime::toDouble((WTF::MediaTime *)v217);
  v103 = v107;
  v105 = v216;
  v216 = 0;
  if (v105)
    goto LABEL_213;
LABEL_215:
  if (*((_DWORD *)v101 + 6) == 2)
  {
    if ((*((_WORD *)v101 + 15) & 0x400) == 0)
      WebCore::Node::removedLastRef(v101, v104);
  }
  else
  {
    *((_DWORD *)v101 + 6) -= 2;
  }
LABEL_217:
  this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::PlaybackSessionModelMediaElement::seekableRanges(v4, v217);
  v108 = *((_QWORD *)v4 + 6);
  v109 = 0.0;
  if (v108)
  {
    v110 = *(_DWORD *)(v108 + 24) + 2;
    *(_DWORD *)(v108 + 24) = v110;
    v111 = *(_QWORD *)(v108 + 1136);
    if (v111)
    {
      v102 = (*(double (**)(_QWORD))(**(_QWORD **)(v111 + 72) + 600))(*(_QWORD *)(v111 + 72));
      v110 = *(_DWORD *)(v108 + 24);
    }
    v112 = v110 - 2;
    if (v112)
    {
      *(_DWORD *)(v108 + 24) = v112;
    }
    else if ((*(_WORD *)(v108 + 30) & 0x400) == 0)
    {
      this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::Node::removedLastRef((WebCore::Node *)v108, a2);
    }
    v113 = *((_QWORD *)v4 + 6);
    if (v113)
    {
      v114 = *(_DWORD *)(v113 + 24) + 2;
      *(_DWORD *)(v113 + 24) = v114;
      v115 = *(_QWORD *)(v113 + 1136);
      if (v115)
      {
        v109 = (*(double (**)(_QWORD))(**(_QWORD **)(v115 + 72) + 608))(*(_QWORD *)(v115 + 72));
        v114 = *(_DWORD *)(v113 + 24);
      }
      v116 = v114 - 2;
      if (v116)
      {
        *(_DWORD *)(v113 + 24) = v116;
      }
      else if ((*(_WORD *)(v113 + 30) & 0x400) == 0)
      {
        this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::Node::removedLastRef((WebCore::Node *)v113, a2);
      }
    }
  }
  v117 = *((_QWORD *)v4 + 8);
  if (!v117)
  {
    v120 = 0;
    v118 = 0;
LABEL_236:
    v119 = (_QWORD *)(v117 + 8 * v118);
    goto LABEL_237;
  }
  v118 = *(unsigned int *)(v117 - 4);
  v119 = (_QWORD *)(v117 + 8 * v118);
  if (!*(_DWORD *)(v117 - 12))
  {
    v120 = (_QWORD *)(v117 + 8 * v118);
    goto LABEL_236;
  }
  v120 = (_QWORD *)*((_QWORD *)v4 + 8);
  if ((_DWORD)v118)
  {
    v121 = 8 * v118;
    v120 = (_QWORD *)*((_QWORD *)v4 + 8);
    while ((unint64_t)(*v120 + 1) <= 1)
    {
      ++v120;
      v121 -= 8;
      if (!v121)
      {
        v120 = v119;
        break;
      }
    }
  }
LABEL_237:
  if (v117)
    v122 = (_QWORD *)(v117 + 8 * *(unsigned int *)(v117 - 4));
  else
    v122 = 0;
  while (v120 != v122)
  {
    (*(void (**)(_QWORD, double))(*(_QWORD *)*v120 + 64))(*v120, v103);
    this = (WebCore::PlaybackSessionModelMediaElement *)(*(uint64_t (**)(_QWORD, WTF::StringImpl *, double, double))(*(_QWORD *)*v120 + 88))(*v120, v217[0], v102, v109);
    v123 = v120 + 1;
    v120 = v119;
    if (v123 != v119)
    {
      v120 = v123;
      while ((unint64_t)(*v120 + 1) <= 1)
      {
        if (++v120 == v119)
        {
          v120 = v119;
          break;
        }
      }
    }
  }
  v124 = v217[0];
  v217[0] = 0;
  if (v124)
  {
    if (*(_DWORD *)v124 == 1)
    {
      v213 = (WTF *)*((_QWORD *)v124 + 1);
      if (v213)
      {
        *((_QWORD *)v124 + 1) = 0;
        *((_DWORD *)v124 + 4) = 0;
        WTF::fastFree(v213, a2);
      }
      this = (WebCore::PlaybackSessionModelMediaElement *)WTF::fastFree(v124, a2);
    }
    else
    {
      --*(_DWORD *)v124;
    }
  }
  if (v6 == v5)
  {
    WebCore::PlaybackSessionModelMediaElement::updateMediaSelectionOptions((unsigned int *)v4, a2);
    goto LABEL_272;
  }
LABEL_251:
  v125 = _ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3));
  v126 = *(_QWORD *)(v125 + 736);
  if (!v126 || (v127 = *(WebCore::PlaybackSessionModelMediaElement **)(v126 + 96)) == 0)
  {
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::threadGlobalDataSlow(this);
    v127 = this;
  }
  v128 = *((_QWORD *)v127 + 5);
  if (!v128)
  {
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v127);
    v128 = *((_QWORD *)v127 + 5);
  }
  if (*a2 == *(WTF::StringImpl **)(v128 + 104))
    goto LABEL_263;
  v129 = *(_QWORD *)(v125 + 736);
  if (!v129 || (v130 = *(WebCore::PlaybackSessionModelMediaElement **)(v129 + 96)) == 0)
  {
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::threadGlobalDataSlow(this);
    v130 = this;
  }
  v131 = *((_QWORD *)v130 + 5);
  if (!v131)
  {
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v130);
    v131 = *((_QWORD *)v130 + 5);
  }
  if (*a2 == *(WTF::StringImpl **)(v131 + 1680))
LABEL_263:
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::PlaybackSessionModelMediaElement::updateMediaSelectionOptions((unsigned int *)v4, a2);
  v132 = *(_QWORD *)(v125 + 736);
  if (!v132 || (v133 = *(WebCore::PlaybackSessionModelMediaElement **)(v132 + 96)) == 0)
  {
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::threadGlobalDataSlow(this);
    v133 = this;
  }
  v134 = *((_QWORD *)v133 + 5);
  if (!v134)
  {
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v133);
    v134 = *((_QWORD *)v133 + 5);
  }
  if (*a2 == *(WTF::StringImpl **)(v134 + 2360))
  {
LABEL_272:
    v135 = *((_QWORD *)v4 + 6);
    if (v135)
    {
      *(_DWORD *)(v135 + 24) += 2;
      v136 = *(_QWORD *)(v135 + 1824);
      v137 = *(_QWORD *)(v135 + 1832);
      v217[0] = (WTF::StringImpl *)"HTMLMediaElement";
      v217[1] = (WTF::StringImpl *)17;
      v218 = "webkitCurrentPlaybackTargetIsWireless";
      v219 = v137;
      if (*(_BYTE *)(v136 + 12) && WebCore::LogMedia && byte_1ECE7C490 >= 3u)
        WTF::Logger::log<WTF::Logger::LogSiteIdentifier,BOOL>((uint64_t)&WebCore::LogMedia, 3, (WTF::Logger::LogSiteIdentifier *)v217);
      v138 = *(_BYTE *)(v135 + 1697) != 0;
      if (*(_DWORD *)(v135 + 24) == 2)
      {
        if ((*(_WORD *)(v135 + 30) & 0x400) == 0)
          WebCore::Node::removedLastRef((WebCore::Node *)v135, a2);
      }
      else
      {
        *(_DWORD *)(v135 + 24) -= 2;
      }
      v139 = *((_QWORD *)v4 + 6);
      if (v139)
      {
        v140 = *(_DWORD *)(v139 + 24);
        *(_DWORD *)(v139 + 24) = v140 + 2;
        v141 = *(_QWORD *)(v139 + 1616);
        if (!v141)
        {
          v147 = 0;
          goto LABEL_298;
        }
        v142 = *(_QWORD *)(v141 + 16);
        if (!v142 || (v143 = *(_QWORD *)(v142 + 8)) == 0 || (v144 = *(_QWORD *)(v143 + 1136)) == 0)
        {
          v147 = 0;
LABEL_297:
          v140 = *(_DWORD *)(v139 + 24) - 2;
LABEL_298:
          if (v140)
          {
            *(_DWORD *)(v139 + 24) = v140;
          }
          else if ((*(_WORD *)(v139 + 30) & 0x400) == 0)
          {
            WebCore::Node::removedLastRef((WebCore::Node *)v139, a2);
          }
          v150 = *((_QWORD *)v4 + 6);
          if (v150)
          {
            v151 = *(_DWORD *)(v150 + 24);
            *(_DWORD *)(v150 + 24) = v151 + 2;
            v152 = *(_QWORD *)(v150 + 1616);
            if (v152)
            {
              WebCore::MediaControlsHost::externalDeviceDisplayName(*(unsigned __int8 **)(v150 + 1616), v217);
              v151 = *(_DWORD *)(v150 + 24) - 2;
            }
            if (v151)
            {
              *(_DWORD *)(v150 + 24) = v151;
            }
            else if ((*(_WORD *)(v150 + 30) & 0x400) == 0)
            {
              WebCore::Node::removedLastRef((WebCore::Node *)v150, a2);
            }
            if (v152)
            {
LABEL_309:
              v154 = *((_QWORD *)v4 + 6);
              if (v154)
              {
                *(_DWORD *)(v154 + 24) += 2;
                v155 = *(WebCore::MediaElementSession **)(v154 + 1600);
                if (!v155)
                {
                  WebCore::HTMLMediaElement::initializeMediaSession((WebCore::HTMLMediaElement *)v154);
                  v155 = *(WebCore::MediaElementSession **)(v154 + 1600);
                }
                v156 = WebCore::MediaElementSession::wirelessVideoPlaybackDisabled(v155);
                if (*(_DWORD *)(v154 + 24) == 2)
                {
                  if ((*(_WORD *)(v154 + 30) & 0x400) == 0)
                    WebCore::Node::removedLastRef((WebCore::Node *)v154, a2);
                }
                else
                {
                  *(_DWORD *)(v154 + 24) -= 2;
                }
              }
              else
              {
                v156 = 0;
              }
              v157 = *((_QWORD *)v4 + 8);
              if (v157)
              {
                v158 = *(unsigned int *)(v157 - 4);
                v159 = (_QWORD *)(v157 + 8 * v158);
                if (*(_DWORD *)(v157 - 12))
                {
                  v160 = (_QWORD *)*((_QWORD *)v4 + 8);
                  if ((_DWORD)v158)
                  {
                    v161 = 8 * v158;
                    v160 = (_QWORD *)*((_QWORD *)v4 + 8);
                    while ((unint64_t)(*v160 + 1) <= 1)
                    {
                      ++v160;
                      v161 -= 8;
                      if (!v161)
                      {
                        v160 = v159;
                        break;
                      }
                    }
                  }
LABEL_324:
                  if (v157)
                    v162 = (_QWORD *)(v157 + 8 * *(unsigned int *)(v157 - 4));
                  else
                    v162 = 0;
                  while (v160 != v162)
                  {
                    (*(void (**)(_QWORD, _BOOL8, uint64_t, WTF::StringImpl **))(*(_QWORD *)*v160 + 136))(*v160, v138, v147, v217);
                    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v160 + 144))(*v160, v156);
                    v163 = v160 + 1;
                    v160 = v159;
                    if (v163 != v159)
                    {
                      v160 = v163;
                      while ((unint64_t)(*v160 + 1) <= 1)
                      {
                        if (++v160 == v159)
                        {
                          v160 = v159;
                          break;
                        }
                      }
                    }
                  }
                  this = v217[0];
                  v217[0] = 0;
                  if (this)
                  {
                    if (*(_DWORD *)this == 2)
                      this = (WebCore::PlaybackSessionModelMediaElement *)WTF::StringImpl::destroy(this, (WTF::StringImpl *)a2);
                    else
                      *(_DWORD *)this -= 2;
                  }
                  if (v6 == v5)
                    goto LABEL_344;
                  goto LABEL_338;
                }
                v160 = (_QWORD *)(v157 + 8 * v158);
              }
              else
              {
                v160 = 0;
                v158 = 0;
              }
              v159 = (_QWORD *)(v157 + 8 * v158);
              goto LABEL_324;
            }
          }
LABEL_306:
          v153 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
          if (*MEMORY[0x1E0CBF738])
            *(_DWORD *)v153 += 2;
          v217[0] = v153;
          goto LABEL_309;
        }
        v145 = *(unsigned __int8 **)v144;
        if (__ldaxr(*(unsigned __int8 **)v144))
        {
          __clrex();
        }
        else if (!__stxr(1u, v145))
        {
          goto LABEL_290;
        }
        MEMORY[0x19AEA534C](v145);
LABEL_290:
        ++*((_QWORD *)v145 + 1);
        v148 = __ldxr(v145);
        if (v148 == 1)
        {
          if (!__stlxr(0, v145))
          {
LABEL_295:
            v149 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v144 + 72) + 728))(*(_QWORD *)(v144 + 72));
            v147 = v149 == 1;
            WTF::ThreadSafeWeakPtrControlBlock::strongDeref<WebCore::MediaPlayer,(WTF::DestructionThread)1>(*(unsigned __int8 **)v144);
            if (v149 == 2)
              v147 = 2;
            goto LABEL_297;
          }
        }
        else
        {
          __clrex();
        }
        WTF::Lock::unlockSlow((WTF::Lock *)v145);
        goto LABEL_295;
      }
    }
    else
    {
      v138 = 0;
    }
    v147 = 0;
    goto LABEL_306;
  }
LABEL_338:
  v164 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v164 || (v165 = *(WebCore::PlaybackSessionModelMediaElement **)(v164 + 96)) == 0)
  {
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::threadGlobalDataSlow(this);
    v165 = this;
  }
  v166 = *((_QWORD *)v165 + 5);
  if (!v166)
  {
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v165);
    v166 = *((_QWORD *)v165 + 5);
  }
  if (*a2 != *(WTF::StringImpl **)(v166 + 2472))
    goto LABEL_369;
LABEL_344:
  this = (WebCore::PlaybackSessionModelMediaElement *)*((_QWORD *)v4 + 6);
  if (!this)
  {
    v170 = 0;
LABEL_488:
    v171 = 0;
    goto LABEL_349;
  }
  v167 = (int *)((char *)this + 24);
  v168 = *((_DWORD *)this + 6);
  *((_DWORD *)this + 6) = v168 + 2;
  v169 = *((_DWORD *)this + 270);
  v170 = (v169 >> 1) & 1;
  if (v168)
  {
    *v167 = v168;
LABEL_347:
    *v167 = v168 + 2;
    v171 = (v169 >> 2) & 1;
LABEL_348:
    *v167 = v168;
    goto LABEL_349;
  }
  if ((*((_WORD *)this + 15) & 0x400) != 0)
  {
    v168 = 2;
    goto LABEL_347;
  }
  WebCore::Node::removedLastRef(this, a2);
  this = (WebCore::PlaybackSessionModelMediaElement *)*((_QWORD *)v4 + 6);
  if (!this)
    goto LABEL_488;
  v167 = (int *)((char *)this + 24);
  v168 = *((_DWORD *)this + 6);
  v214 = *((_DWORD *)this + 270);
  *((_DWORD *)this + 6) = v168 + 2;
  v171 = (v214 >> 2) & 1;
  if (v168)
    goto LABEL_348;
  if ((*((_WORD *)this + 15) & 0x400) == 0)
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::Node::removedLastRef(this, a2);
LABEL_349:
  v172 = *((_QWORD *)v4 + 8);
  if (v172)
  {
    v173 = *(unsigned int *)(v172 - 4);
    v174 = (_QWORD *)(v172 + 8 * v173);
    if (*(_DWORD *)(v172 - 12))
    {
      v175 = (_QWORD *)*((_QWORD *)v4 + 8);
      if ((_DWORD)v173)
      {
        v176 = 8 * v173;
        v175 = (_QWORD *)*((_QWORD *)v4 + 8);
        while ((unint64_t)(*v175 + 1) <= 1)
        {
          ++v175;
          v176 -= 8;
          if (!v176)
          {
            v175 = v174;
            goto LABEL_359;
          }
        }
      }
      goto LABEL_359;
    }
    v175 = (_QWORD *)(v172 + 8 * v173);
  }
  else
  {
    v175 = 0;
    v173 = 0;
  }
  v174 = (_QWORD *)(v172 + 8 * v173);
LABEL_359:
  if (v172)
    v177 = (_QWORD *)(v172 + 8 * *(unsigned int *)(v172 - 4));
  else
    v177 = 0;
  while (v175 != v177)
  {
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v175 + 176))(*v175, v170);
    v178 = v175 + 1;
    this = (WebCore::PlaybackSessionModelMediaElement *)(*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)*v175 + 184))(*v175, v171);
    v175 = v174;
    if (v178 != v174)
    {
      v175 = v178;
      while ((unint64_t)(*v175 + 1) <= 1)
      {
        if (++v175 == v174)
        {
          v175 = v174;
          break;
        }
      }
    }
  }
LABEL_369:
  v215 = v6;
  v179 = _ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3));
  v180 = *(_QWORD *)(v179 + 736);
  if (!v180 || (v181 = *(WebCore::PlaybackSessionModelMediaElement **)(v180 + 96)) == 0)
  {
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::threadGlobalDataSlow(this);
    v181 = this;
  }
  v182 = v5;
  v183 = *((_QWORD *)v181 + 5);
  if (!v183)
  {
    this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v181);
    v183 = *((_QWORD *)v181 + 5);
  }
  if (*a2 != *(WTF::StringImpl **)(v183 + 368))
    goto LABEL_400;
  v184 = *((unsigned int *)v4 + 25);
  if ((_DWORD)v184)
  {
    v185 = 0;
    while (!*(_BYTE *)(*(_QWORD *)(*((_QWORD *)v4 + 11) + 8 * v185) + 176))
    {
      if (v184 == ++v185)
        goto LABEL_379;
    }
  }
  else
  {
LABEL_379:
    v185 = -1;
  }
  this = (WebCore::PlaybackSessionModelMediaElement *)WebCore::PlaybackSessionModelMediaElement::legibleMediaSelectedIndex(v4, (WTF::StringImpl *)a2);
  v186 = this;
  v187 = *((_QWORD *)v4 + 8);
  if (v187)
  {
    v188 = *(unsigned int *)(v187 - 4);
    v189 = (_QWORD *)(v187 + 8 * v188);
    if (*(_DWORD *)(v187 - 12))
    {
      v190 = (_QWORD *)*((_QWORD *)v4 + 8);
      if ((_DWORD)v188)
      {
        v191 = 8 * v188;
        v190 = (_QWORD *)*((_QWORD *)v4 + 8);
        while ((unint64_t)(*v190 + 1) <= 1)
        {
          ++v190;
          v191 -= 8;
          if (!v191)
          {
            v190 = v189;
            goto LABEL_390;
          }
        }
      }
      goto LABEL_390;
    }
    v190 = (_QWORD *)(v187 + 8 * v188);
  }
  else
  {
    v190 = 0;
    v188 = 0;
  }
  v189 = (_QWORD *)(v187 + 8 * v188);
LABEL_390:
  if (v187)
    v192 = (_QWORD *)(v187 + 8 * *(unsigned int *)(v187 - 4));
  else
    v192 = 0;
  while (v190 != v192)
  {
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v190 + 120))(*v190, v185);
    v193 = v190 + 1;
    this = (WebCore::PlaybackSessionModelMediaElement *)(*(uint64_t (**)(_QWORD, WebCore::PlaybackSessionModelMediaElement *))(*(_QWORD *)*v190 + 128))(*v190, v186);
    v190 = v189;
    if (v193 != v189)
    {
      v190 = v193;
      while ((unint64_t)(*v190 + 1) <= 1)
      {
        if (++v190 == v189)
        {
          v190 = v189;
          break;
        }
      }
    }
  }
LABEL_400:
  if (v215 != v182)
  {
    v194 = *(_QWORD *)(v179 + 736);
    if (!v194 || (v195 = *(_QWORD *)(v194 + 96)) == 0)
      v195 = WebCore::threadGlobalDataSlow(this);
    v196 = *(_QWORD *)(v195 + 40);
    if (!v196)
    {
      WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v195);
      v196 = *(_QWORD *)(v195 + 40);
    }
    if (*a2 != *(WTF::StringImpl **)(v196 + 2264))
      return;
  }
  v197 = *((_QWORD *)v4 + 8);
  if (v197)
  {
    v198 = *(unsigned int *)(v197 - 4);
    v199 = (uint64_t *)(v197 + 8 * v198);
    if (*(_DWORD *)(v197 - 12))
    {
      v200 = (uint64_t *)*((_QWORD *)v4 + 8);
      if ((_DWORD)v198)
      {
        v201 = 8 * v198;
        v200 = (uint64_t *)*((_QWORD *)v4 + 8);
        while ((unint64_t)(*v200 + 1) <= 1)
        {
          ++v200;
          v201 -= 8;
          if (!v201)
          {
            v200 = v199;
            goto LABEL_417;
          }
        }
      }
      goto LABEL_417;
    }
    v200 = (uint64_t *)(v197 + 8 * v198);
  }
  else
  {
    v200 = 0;
    v198 = 0;
  }
  v199 = (uint64_t *)(v197 + 8 * v198);
LABEL_417:
  if (v197)
    v202 = (uint64_t *)(v197 + 8 * *(unsigned int *)(v197 - 4));
  else
    v202 = 0;
  while (v200 != v202)
  {
    v203 = *v200;
    v204 = (WebCore::Node *)*((_QWORD *)v4 + 6);
    if (v204)
    {
      *((_DWORD *)v204 + 6) += 2;
      v206 = (*(uint64_t (**)(WebCore::Node *))(*(_QWORD *)v204 + 1472))(v204);
      if (*((_DWORD *)v204 + 6) == 2)
      {
        if ((*((_WORD *)v204 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(v204, v205);
      }
      else
      {
        *((_DWORD *)v204 + 6) -= 2;
      }
    }
    else
    {
      v206 = 0;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v203 + 152))(v203, v206);
    v207 = *v200;
    v208 = (WebCore::Node *)*((_QWORD *)v4 + 6);
    if (v208)
    {
      *((_DWORD *)v208 + 6) += 2;
      v210 = (*(double (**)(WebCore::Node *))(*(_QWORD *)v208 + 1456))(v208);
      if (*((_DWORD *)v208 + 6) == 2)
      {
        if ((*((_WORD *)v208 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(v208, v209);
      }
      else
      {
        *((_DWORD *)v208 + 6) -= 2;
      }
    }
    else
    {
      v210 = 0.0;
    }
    (*(void (**)(uint64_t, double))(*(_QWORD *)v207 + 160))(v207, v210);
    v211 = v200 + 1;
    v200 = v199;
    if (v211 != v199)
    {
      v200 = v211;
      while ((unint64_t)(*v200 + 1) <= 1)
      {
        if (++v200 == v199)
        {
          v200 = v199;
          break;
        }
      }
    }
  }
}

void sub_195136BC0(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, WTF::StringImpl *a11)
{
  uint64_t v11;

  if (*(_DWORD *)(v11 + 24) == 2)
  {
    if ((*(_WORD *)(v11 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v11, a2);
  }
  else
  {
    *(_DWORD *)(v11 + 24) -= 2;
  }
  if (a11)
  {
    if (*(_DWORD *)a11 == 2)
      WTF::StringImpl::destroy(a11, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)a11 -= 2;
  }
  _Unwind_Resume(exception_object);
}

unsigned int *WebCore::PlaybackSessionModelMediaElement::mediaEngineChanged(unsigned int *this)
{
  unsigned int *v1;
  uint64_t v2;
  WebCore::MediaElementSession *v3;
  void *v4;
  unsigned int *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v1 = this;
  v2 = *((_QWORD *)this + 6);
  if (v2)
  {
    *(_DWORD *)(v2 + 24) += 2;
    v3 = *(WebCore::MediaElementSession **)(v2 + 1600);
    if (!v3)
    {
      WebCore::HTMLMediaElement::initializeMediaSession((WebCore::HTMLMediaElement *)v2);
      v3 = *(WebCore::MediaElementSession **)(v2 + 1600);
    }
    this = (unsigned int *)WebCore::MediaElementSession::wirelessVideoPlaybackDisabled(v3);
    v5 = this;
    if (*(_DWORD *)(v2 + 24) == 2)
    {
      if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
        this = WebCore::Node::removedLastRef((WebCore::Node *)v2, v4);
    }
    else
    {
      *(_DWORD *)(v2 + 24) -= 2;
    }
  }
  else
  {
    v5 = 0;
  }
  v6 = (_QWORD *)*((_QWORD *)v1 + 8);
  if (v6)
  {
    v7 = *((unsigned int *)v6 - 1);
    v8 = &v6[v7];
    if (*((_DWORD *)v6 - 3))
    {
      v9 = v6;
      if ((_DWORD)v7)
      {
        v10 = 8 * v7;
        v9 = v6;
        while ((unint64_t)(*v9 + 1) <= 1)
        {
          ++v9;
          v10 -= 8;
          if (!v10)
          {
            v9 = v8;
            goto LABEL_13;
          }
        }
      }
      goto LABEL_13;
    }
    v9 = &v6[v7];
  }
  else
  {
    v9 = 0;
    v7 = 0;
  }
  v8 = &v6[v7];
  if (v6)
  {
LABEL_13:
    v11 = &v6[*((unsigned int *)v6 - 1)];
    goto LABEL_18;
  }
  v11 = 0;
LABEL_18:
  while (v9 != v11)
  {
    v12 = v9 + 1;
    this = (unsigned int *)(*(uint64_t (**)(_QWORD, unsigned int *))(*(_QWORD *)*v9 + 144))(*v9, v5);
    v9 = v8;
    if (v12 != v8)
    {
      v9 = v12;
      while ((unint64_t)(*v9 + 1) <= 1)
      {
        if (++v9 == v8)
        {
          v9 = v8;
          break;
        }
      }
    }
  }
  return this;
}

void sub_195136DF4(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

uint64_t WebCore::PlaybackSessionModelMediaElement::wirelessVideoPlaybackDisabled(WebCore::PlaybackSessionModelMediaElement *this)
{
  uint64_t v1;
  WebCore::MediaElementSession *v2;
  void *v3;
  uint64_t v4;

  v1 = *((_QWORD *)this + 6);
  if (!v1)
    return 0;
  *(_DWORD *)(v1 + 24) += 2;
  v2 = *(WebCore::MediaElementSession **)(v1 + 1600);
  if (!v2)
  {
    WebCore::HTMLMediaElement::initializeMediaSession((WebCore::HTMLMediaElement *)v1);
    v2 = *(WebCore::MediaElementSession **)(v1 + 1600);
  }
  v4 = WebCore::MediaElementSession::wirelessVideoPlaybackDisabled(v2);
  if (*(_DWORD *)(v1 + 24) == 2)
  {
    if ((*(_WORD *)(v1 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v1, v3);
  }
  else
  {
    *(_DWORD *)(v1 + 24) -= 2;
  }
  return v4;
}

void sub_195136E9C(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

void WebCore::PlaybackSessionModelMediaElement::handleEvent(WebCore::PlaybackSessionModelMediaElement *this, WebCore::ScriptExecutionContext *a2, WTF::StringImpl **a3)
{
  WebCore::PlaybackSessionModelMediaElement::updateForEventName(this, a3 + 3);
}

void `non-virtual thunk to'WebCore::PlaybackSessionModelMediaElement::handleEvent(WebCore::PlaybackSessionModelMediaElement *this, WebCore::ScriptExecutionContext *a2, WTF::StringImpl **a3)
{
  WebCore::PlaybackSessionModelMediaElement::updateForEventName((WebCore::PlaybackSessionModelMediaElement *)((char *)this - 16), a3 + 3);
}

double WebCore::PlaybackSessionModelMediaElement::duration(WebCore::PlaybackSessionModelMediaElement *this)
{
  WebCore::Node *v1;
  void *v2;
  double v3;

  v1 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (!v1)
    return 0.0;
  *((_DWORD *)v1 + 6) += 2;
  v3 = (*(double (**)(WebCore::Node *))(*(_QWORD *)v1 + 1376))(v1);
  if (*((_DWORD *)v1 + 6) == 2)
  {
    if ((*((_WORD *)v1 + 15) & 0x400) == 0)
      WebCore::Node::removedLastRef(v1, v2);
  }
  else
  {
    *((_DWORD *)v1 + 6) -= 2;
  }
  return v3;
}

void sub_195136F58(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

BOOL WebCore::PlaybackSessionModelMediaElement::canPlayFastReverse(WebCore::PlaybackSessionModelMediaElement *this, void *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  _BOOL8 v5;

  v2 = *((_QWORD *)this + 6);
  if (!v2)
    return 0;
  v3 = *(_DWORD *)(v2 + 24);
  *(_DWORD *)(v2 + 24) = v3 + 2;
  v4 = *(_QWORD *)(v2 + 1136);
  if (v4)
  {
    v5 = (*(double (**)(_QWORD))(**(_QWORD **)(v4 + 72) + 544))(*(_QWORD *)(v4 + 72)) < 0.0;
    v3 = *(_DWORD *)(v2 + 24) - 2;
    if (*(_DWORD *)(v2 + 24) != 2)
    {
LABEL_4:
      *(_DWORD *)(v2 + 24) = v3;
      return v5;
    }
  }
  else
  {
    v5 = 0;
    if (v3)
      goto LABEL_4;
  }
  if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
    WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  return v5;
}

double WebCore::PlaybackSessionModelMediaElement::playbackStartedTime(WebCore::PlaybackSessionModelMediaElement *this, void *a2)
{
  uint64_t v2;
  int v3;
  double v4;

  v2 = *((_QWORD *)this + 6);
  if (!v2)
    return 0.0;
  v3 = *(_DWORD *)(v2 + 24);
  *(_DWORD *)(v2 + 24) = v3 + 2;
  v4 = *(double *)(v2 + 1024);
  if (v3)
  {
    *(_DWORD *)(v2 + 24) = v3;
  }
  else if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
  {
    WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  return v4;
}

uint64_t WebCore::PlaybackSessionModelMediaElement::isPlaying(WebCore::PlaybackSessionModelMediaElement *this)
{
  WebCore::Node *v1;
  void *v2;
  uint64_t v3;

  v1 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (!v1)
    return 0;
  *((_DWORD *)v1 + 6) += 2;
  v3 = (*(unsigned int (**)(WebCore::Node *))(*(_QWORD *)v1 + 1384))(v1) ^ 1;
  if (*((_DWORD *)v1 + 6) == 2)
  {
    if ((*((_WORD *)v1 + 15) & 0x400) == 0)
      WebCore::Node::removedLastRef(v1, v2);
  }
  else
  {
    *((_DWORD *)v1 + 6) -= 2;
  }
  return v3;
}

void sub_1951370D0(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

BOOL WebCore::PlaybackSessionModelMediaElement::isStalled(WebCore::PlaybackSessionModelMediaElement *this)
{
  WebCore::Node *v1;
  void *v2;
  _BOOL8 v3;

  v1 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (!v1)
    return 0;
  *((_DWORD *)v1 + 6) += 2;
  v3 = (*(int (**)(WebCore::Node *))(*(_QWORD *)v1 + 1352))(v1) < 3;
  if (*((_DWORD *)v1 + 6) == 2)
  {
    if ((*((_WORD *)v1 + 15) & 0x400) == 0)
      WebCore::Node::removedLastRef(v1, v2);
  }
  else
  {
    *((_DWORD *)v1 + 6) -= 2;
  }
  return v3;
}

void sub_195137174(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

double WebCore::PlaybackSessionModelMediaElement::playbackRate(WebCore::PlaybackSessionModelMediaElement *this)
{
  WebCore::Node *v1;
  void *v2;
  double v3;

  v1 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (!v1)
    return 0.0;
  *((_DWORD *)v1 + 6) += 2;
  v3 = (*(double (**)(WebCore::Node *))(*(_QWORD *)v1 + 1408))(v1);
  if (*((_DWORD *)v1 + 6) == 2)
  {
    if ((*((_WORD *)v1 + 15) & 0x400) == 0)
      WebCore::Node::removedLastRef(v1, v2);
  }
  else
  {
    *((_DWORD *)v1 + 6) -= 2;
  }
  return v3;
}

void sub_19513721C(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

double WebCore::PlaybackSessionModelMediaElement::defaultPlaybackRate(WebCore::PlaybackSessionModelMediaElement *this)
{
  WebCore::Node *v1;
  void *v2;
  double v3;

  v1 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (!v1)
    return 0.0;
  *((_DWORD *)v1 + 6) += 2;
  v3 = (*(double (**)(WebCore::Node *))(*(_QWORD *)v1 + 1392))(v1);
  if (*((_DWORD *)v1 + 6) == 2)
  {
    if ((*((_WORD *)v1 + 15) & 0x400) == 0)
      WebCore::Node::removedLastRef(v1, v2);
  }
  else
  {
    *((_DWORD *)v1 + 6) -= 2;
  }
  return v3;
}

void sub_1951372C4(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

double WebCore::PlaybackSessionModelMediaElement::currentTime(WebCore::PlaybackSessionModelMediaElement *this)
{
  WebCore::Node *v1;
  void *v2;
  double v3;

  v1 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (!v1)
    return 0.0;
  *((_DWORD *)v1 + 6) += 2;
  v3 = (*(double (**)(WebCore::Node *))(*(_QWORD *)v1 + 1360))(v1);
  if (*((_DWORD *)v1 + 6) == 2)
  {
    if ((*((_WORD *)v1 + 15) & 0x400) == 0)
      WebCore::Node::removedLastRef(v1, v2);
  }
  else
  {
    *((_DWORD *)v1 + 6) -= 2;
  }
  return v3;
}

void sub_19513736C(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

double WebCore::PlaybackSessionModelMediaElement::bufferedTime(WebCore::PlaybackSessionModelMediaElement *this)
{
  WebCore::Node *v1;
  void *v2;
  WTF *v3;
  int v4;
  double v5;
  double v6;
  WTF *v8;
  __int128 v9;
  WTF *v10;

  v1 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (!v1)
    return 0.0;
  *((_DWORD *)v1 + 6) += 2;
  (*(void (**)(WTF **__return_ptr, WebCore::Node *))(*(_QWORD *)v1 + 1344))(&v10, v1);
  v3 = v10;
  v4 = *((_DWORD *)v10 + 5);
  if (!v4)
  {
    v10 = 0;
    v6 = 0.0;
LABEL_6:
    if (*(_DWORD *)v3 == 1)
    {
      v8 = (WTF *)*((_QWORD *)v3 + 1);
      if (v8)
      {
        *((_QWORD *)v3 + 1) = 0;
        *((_DWORD *)v3 + 4) = 0;
        WTF::fastFree(v8, v2);
      }
      WTF::fastFree(v3, v2);
    }
    else
    {
      --*(_DWORD *)v3;
    }
    goto LABEL_8;
  }
  v9 = *(_OWORD *)(*((_QWORD *)v10 + 1) + 32 * (v4 - 1) + 16);
  WTF::MediaTime::toDouble((WTF::MediaTime *)&v9);
  v6 = v5;
  v3 = v10;
  v10 = 0;
  if (v3)
    goto LABEL_6;
LABEL_8:
  if (*((_DWORD *)v1 + 6) == 2)
  {
    if ((*((_WORD *)v1 + 15) & 0x400) == 0)
      WebCore::Node::removedLastRef(v1, v2);
  }
  else
  {
    *((_DWORD *)v1 + 6) -= 2;
  }
  return v6;
}

uint64_t WebCore::PlaybackSessionModelMediaElement::seekableRanges@<X0>(WebCore::PlaybackSessionModelMediaElement *this@<X0>, _QWORD *a2@<X8>)
{
  WebCore::Node *v3;
  uint64_t result;
  void *v5;
  char v6;

  v3 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (!v3)
    goto LABEL_7;
  *((_DWORD *)v3 + 6) += 2;
  result = (*(uint64_t (**)(WebCore::Node *))(*(_QWORD *)v3 + 1856))(v3);
  v6 = result;
  if ((_DWORD)result)
    result = (*(uint64_t (**)(WebCore::Node *))(*(_QWORD *)v3 + 1432))(v3);
  if (*((_DWORD *)v3 + 6) == 2)
  {
    if ((*((_WORD *)v3 + 15) & 0x400) == 0)
      result = (uint64_t)WebCore::Node::removedLastRef(v3, v5);
  }
  else
  {
    *((_DWORD *)v3 + 6) -= 2;
  }
  if ((v6 & 1) == 0)
  {
LABEL_7:
    result = WTF::fastMalloc((WTF *)0x18);
    *(_DWORD *)result = 1;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *a2 = result;
  }
  return result;
}

void sub_195137534(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

double WebCore::PlaybackSessionModelMediaElement::seekableTimeRangesLastModifiedTime(WebCore::PlaybackSessionModelMediaElement *this, void *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  double v5;

  v2 = *((_QWORD *)this + 6);
  if (!v2)
    return 0.0;
  v3 = *(_DWORD *)(v2 + 24);
  *(_DWORD *)(v2 + 24) = v3 + 2;
  v4 = *(_QWORD *)(v2 + 1136);
  if (v4)
  {
    v5 = (*(double (**)(_QWORD))(**(_QWORD **)(v4 + 72) + 600))(*(_QWORD *)(v4 + 72));
    v3 = *(_DWORD *)(v2 + 24) - 2;
    if (*(_DWORD *)(v2 + 24) != 2)
    {
LABEL_4:
      *(_DWORD *)(v2 + 24) = v3;
      return v5;
    }
  }
  else
  {
    v5 = 0.0;
    if (v3)
      goto LABEL_4;
  }
  if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
    WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  return v5;
}

double WebCore::PlaybackSessionModelMediaElement::liveUpdateInterval(WebCore::PlaybackSessionModelMediaElement *this, void *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  double v5;

  v2 = *((_QWORD *)this + 6);
  if (!v2)
    return 0.0;
  v3 = *(_DWORD *)(v2 + 24);
  *(_DWORD *)(v2 + 24) = v3 + 2;
  v4 = *(_QWORD *)(v2 + 1136);
  if (v4)
  {
    v5 = (*(double (**)(_QWORD))(**(_QWORD **)(v4 + 72) + 608))(*(_QWORD *)(v4 + 72));
    v3 = *(_DWORD *)(v2 + 24) - 2;
    if (*(_DWORD *)(v2 + 24) != 2)
    {
LABEL_4:
      *(_DWORD *)(v2 + 24) = v3;
      return v5;
    }
  }
  else
  {
    v5 = 0.0;
    if (v3)
      goto LABEL_4;
  }
  if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
    WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  return v5;
}

unsigned int *WebCore::PlaybackSessionModelMediaElement::updateMediaSelectionOptions(unsigned int *this, void *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  WebCore::PageGroup *v10;
  WebCore::CaptionUserPreferencesMediaAF *v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  _DWORD **v15;
  uint64_t v16;
  _DWORD *v17;
  void *v18;
  uint64_t v19;
  _DWORD **v20;
  uint64_t v21;
  _DWORD *v22;
  WTF *v23;
  uint64_t v24;
  WTF *v25;
  _DWORD *v26;
  uint64_t v27;
  _DWORD **v28;
  uint64_t v29;
  _DWORD *v30;
  uint64_t v31;
  WTF *v32;
  uint64_t v33;
  _DWORD *v34;
  WTF *v35;
  WTF::StringImpl *v36;
  uint64_t v37;
  uint64_t v38;
  WTF::StringImpl *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  WTF *v48;
  uint64_t v49;
  WTF::StringImpl **v50;
  WTF::StringImpl *v51;
  uint64_t v52;
  WTF::StringImpl **v53;
  WTF::StringImpl *v54;
  uint64_t v55;
  uint64_t v56;
  WTF *v57;
  uint64_t v58;
  WTF *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;

  v63 = *MEMORY[0x1E0C80C00];
  v2 = *((_QWORD *)this + 6);
  if (v2)
  {
    v3 = *(_DWORD *)(v2 + 24);
    *(_DWORD *)(v2 + 24) = v3 + 2;
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 40) + 8) + 528);
    if (!v4 || (v5 = *(_QWORD *)(v4 + 8)) == 0 || (v6 = *(_QWORD *)(v5 + 24)) == 0 || (v7 = *(_QWORD *)(v6 + 8)) == 0)
    {
LABEL_106:
      if (v3)
      {
        *(_DWORD *)(v2 + 24) = v3;
      }
      else if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      {
        return WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
      }
      return this;
    }
    v8 = (uint64_t)this;
    v9 = *(_QWORD *)(v7 + 528);
    if (!v9 || (v10 = *(WebCore::PageGroup **)(v9 + 8)) == 0)
    {
      WebCore::Page::initGroup(*(WebCore::Page **)(v6 + 8));
      v55 = *(_QWORD *)(v7 + 528);
      if (v55)
        v10 = *(WebCore::PageGroup **)(v55 + 8);
      else
        v10 = 0;
    }
    v11 = (WebCore::CaptionUserPreferencesMediaAF *)*((_QWORD *)v10 + 5);
    if (!v11)
    {
      v11 = (WebCore::CaptionUserPreferencesMediaAF *)WTF::fastMalloc((WTF *)0xD8);
      WebCore::CaptionUserPreferencesMediaAF::CaptionUserPreferencesMediaAF(v11, v10);
      v12 = (_DWORD *)*((_QWORD *)v10 + 5);
      *((_QWORD *)v10 + 5) = v11;
      if (v12)
      {
        if (v12[2] == 1)
        {
          (*(void (**)(_DWORD *))(*(_QWORD *)v12 + 8))(v12);
          v11 = (WebCore::CaptionUserPreferencesMediaAF *)*((_QWORD *)v10 + 5);
        }
        else
        {
          --v12[2];
        }
      }
    }
    v13 = *(_DWORD **)(v2 + 1352);
    if (v13 && v13[31] + v13[27] + v13[17])
    {
      v61 = 0x100000000;
      v62 = 2;
      v56 = 0;
      WTF::HashTable<WebCore::TextTrack::Kind,WebCore::TextTrack::Kind,WTF::IdentityExtractor,WTF::DefaultHash<WebCore::TextTrack::Kind>,WTF::HashTraits<WebCore::TextTrack::Kind>,WTF::HashTraits<WebCore::TextTrack::Kind>>::add(&v56, (int *)&v61, (uint64_t)&v59);
      WTF::HashTable<WebCore::TextTrack::Kind,WebCore::TextTrack::Kind,WTF::IdentityExtractor,WTF::DefaultHash<WebCore::TextTrack::Kind>,WTF::HashTraits<WebCore::TextTrack::Kind>,WTF::HashTraits<WebCore::TextTrack::Kind>>::add(&v56, (int *)&v61 + 1, (uint64_t)&v59);
      WTF::HashTable<WebCore::TextTrack::Kind,WebCore::TextTrack::Kind,WTF::IdentityExtractor,WTF::DefaultHash<WebCore::TextTrack::Kind>,WTF::HashTraits<WebCore::TextTrack::Kind>,WTF::HashTraits<WebCore::TextTrack::Kind>>::add(&v56, &v62, (uint64_t)&v59);
      (*(void (**)(WTF **__return_ptr, WebCore::CaptionUserPreferencesMediaAF *, _DWORD *, uint64_t *))(*(_QWORD *)v11 + 184))(&v57, v11, v13, &v56);
      v19 = *(unsigned int *)(v8 + 84);
      if ((_DWORD)v19)
      {
        v20 = *(_DWORD ***)(v8 + 72);
        v21 = 8 * v19;
        do
        {
          v22 = *v20;
          *v20 = 0;
          if (v22)
          {
            if (v22[4] == 1)
              (*(void (**)(_DWORD *))(*(_QWORD *)v22 + 16))(v22);
            else
              --v22[4];
          }
          ++v20;
          v21 -= 8;
        }
        while (v21);
      }
      v23 = *(WTF **)(v8 + 72);
      if (v23)
      {
        *(_QWORD *)(v8 + 72) = 0;
        *(_DWORD *)(v8 + 80) = 0;
        WTF::fastFree(v23, v18);
      }
      *(_QWORD *)(v8 + 72) = v57;
      v24 = v58;
      v57 = 0;
      v58 = 0;
      *(_QWORD *)(v8 + 80) = v24;
      if (v56)
        WTF::fastFree((WTF *)(v56 - 16), v18);
    }
    else if (*(_DWORD *)(v8 + 80))
    {
      v14 = *(unsigned int *)(v8 + 84);
      if ((_DWORD)v14)
      {
        v15 = *(_DWORD ***)(v8 + 72);
        v16 = 8 * v14;
        do
        {
          v17 = *v15;
          *v15 = 0;
          if (v17)
          {
            if (v17[4] == 1)
              (*(void (**)(_DWORD *))(*(_QWORD *)v17 + 16))(v17);
            else
              --v17[4];
          }
          ++v15;
          v16 -= 8;
        }
        while (v16);
        *(_DWORD *)(v8 + 84) = 0;
      }
      v25 = *(WTF **)(v8 + 72);
      if (v25)
      {
        *(_QWORD *)(v8 + 72) = 0;
        *(_DWORD *)(v8 + 80) = 0;
        WTF::fastFree(v25, a2);
      }
    }
    v26 = *(_DWORD **)(v2 + 1344);
    if (v26 && v26[17] >= 2u)
    {
      (*(void (**)(WTF **__return_ptr, WebCore::CaptionUserPreferencesMediaAF *))(*(_QWORD *)v11 + 200))(&v59, v11);
      v27 = *(unsigned int *)(v8 + 100);
      if ((_DWORD)v27)
      {
        v28 = *(_DWORD ***)(v8 + 88);
        v29 = 8 * v27;
        do
        {
          v30 = *v28;
          *v28 = 0;
          if (v30)
          {
            if (v30[4] == 1)
              (*(void (**)(_DWORD *))(*(_QWORD *)v30 + 16))(v30);
            else
              --v30[4];
          }
          ++v28;
          v29 -= 8;
        }
        while (v29);
      }
      v35 = *(WTF **)(v8 + 88);
      if (v35)
      {
        *(_QWORD *)(v8 + 88) = 0;
        *(_DWORD *)(v8 + 96) = 0;
        WTF::fastFree(v35, v26);
      }
      *(_QWORD *)(v8 + 88) = v59;
      *(_QWORD *)(v8 + 96) = v60;
    }
    else if (*(_DWORD *)(v8 + 96))
    {
      v31 = *(unsigned int *)(v8 + 100);
      v32 = *(WTF **)(v8 + 88);
      if ((_DWORD)v31)
      {
        v33 = 8 * v31;
        do
        {
          v34 = *(_DWORD **)v32;
          *(_QWORD *)v32 = 0;
          if (v34)
          {
            if (v34[4] == 1)
              (*(void (**)(_DWORD *))(*(_QWORD *)v34 + 16))(v34);
            else
              --v34[4];
          }
          v32 = (WTF *)((char *)v32 + 8);
          v33 -= 8;
        }
        while (v33);
        *(_DWORD *)(v8 + 100) = 0;
        v32 = *(WTF **)(v8 + 88);
      }
      if (v32)
      {
        *(_QWORD *)(v8 + 88) = 0;
        *(_DWORD *)(v8 + 96) = 0;
        WTF::fastFree(v32, v26);
      }
    }
    WebCore::PlaybackSessionModelMediaElement::audioMediaSelectionOptions((unsigned int *)v8, (WTF::StringImpl *)v26, (uint64_t)&v59);
    v37 = *(unsigned int *)(v8 + 100);
    if ((_DWORD)v37)
    {
      v38 = 0;
      while (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v8 + 88) + 8 * v38) + 176))
      {
        if (v37 == ++v38)
          goto LABEL_65;
      }
    }
    else
    {
LABEL_65:
      v38 = -1;
    }
    WebCore::PlaybackSessionModelMediaElement::legibleMediaSelectionOptions((unsigned int *)v8, v36, (uint64_t)&v57);
    v40 = WebCore::PlaybackSessionModelMediaElement::legibleMediaSelectedIndex((WebCore::PlaybackSessionModelMediaElement *)v8, v39);
    v41 = *(_QWORD **)(v8 + 64);
    if (v41)
    {
      v42 = *((unsigned int *)v41 - 1);
      v43 = &v41[v42];
      if (*((_DWORD *)v41 - 3))
      {
        v44 = v41;
        if ((_DWORD)v42)
        {
          v45 = 8 * v42;
          v44 = v41;
          while ((unint64_t)(*v44 + 1) <= 1)
          {
            ++v44;
            v45 -= 8;
            if (!v45)
            {
              v44 = v43;
              goto LABEL_73;
            }
          }
        }
        goto LABEL_73;
      }
      v44 = &v41[v42];
    }
    else
    {
      v44 = 0;
      v42 = 0;
    }
    v43 = &v41[v42];
    if (!v41)
    {
      v46 = 0;
      goto LABEL_78;
    }
LABEL_73:
    v46 = &v41[*((unsigned int *)v41 - 1)];
LABEL_78:
    while (v44 != v46)
    {
      (*(void (**)(_QWORD, WTF **, uint64_t))(*(_QWORD *)*v44 + 104))(*v44, &v59, v38);
      (*(void (**)(_QWORD, WTF **, uint64_t))(*(_QWORD *)*v44 + 112))(*v44, &v57, v40);
      v47 = v44 + 1;
      v44 = v43;
      if (v47 != v43)
      {
        v44 = v47;
        while ((unint64_t)(*v44 + 1) <= 1)
        {
          if (++v44 == v43)
          {
            v44 = v43;
            break;
          }
        }
      }
    }
    v48 = v57;
    if (HIDWORD(v58))
    {
      v49 = 24 * HIDWORD(v58);
      v50 = (WTF::StringImpl **)((char *)v57 + 8);
      do
      {
        v51 = *v50;
        *v50 = 0;
        if (v51)
        {
          if (*(_DWORD *)v51 == 2)
            WTF::StringImpl::destroy(v51, (WTF::StringImpl *)a2);
          else
            *(_DWORD *)v51 -= 2;
        }
        v50 += 3;
        v49 -= 24;
      }
      while (v49);
      v48 = v57;
    }
    if (v48)
    {
      v57 = 0;
      LODWORD(v58) = 0;
      WTF::fastFree(v48, a2);
    }
    this = (unsigned int *)v59;
    if (HIDWORD(v60))
    {
      v52 = 24 * HIDWORD(v60);
      v53 = (WTF::StringImpl **)((char *)v59 + 8);
      do
      {
        v54 = *v53;
        *v53 = 0;
        if (v54)
        {
          if (*(_DWORD *)v54 == 2)
            WTF::StringImpl::destroy(v54, (WTF::StringImpl *)a2);
          else
            *(_DWORD *)v54 -= 2;
        }
        v53 += 3;
        v52 -= 24;
      }
      while (v52);
      this = (unsigned int *)v59;
    }
    if (this)
    {
      v59 = 0;
      LODWORD(v60) = 0;
      this = (unsigned int *)WTF::fastFree((WTF *)this, a2);
    }
    v3 = *(_DWORD *)(v2 + 24) - 2;
    goto LABEL_106;
  }
  return this;
}

void sub_195137C30(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, WTF *a11, int a12, unsigned int a13, WTF *a14, int a15, int a16)
{
  uint64_t v16;
  WTF *v18;
  uint64_t v19;
  _DWORD *v20;

  if (a13)
  {
    v18 = a11;
    v19 = 8 * a13;
    do
    {
      v20 = *(_DWORD **)v18;
      *(_QWORD *)v18 = 0;
      if (v20)
      {
        if (v20[4] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v20 + 16))(v20);
        else
          --v20[4];
      }
      v18 = (WTF *)((char *)v18 + 8);
      v19 -= 8;
    }
    while (v19);
  }
  if (a11)
    WTF::fastFree(a11, a2);
  if (a10)
    WTF::fastFree((WTF *)(a10 - 16), a2);
  if (*(_DWORD *)(v16 + 24) == 2)
  {
    if ((*(_WORD *)(v16 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v16, a2);
  }
  else
  {
    *(_DWORD *)(v16 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

BOOL WebCore::PlaybackSessionModelMediaElement::externalPlaybackEnabled(WebCore::PlaybackSessionModelMediaElement *this, void *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v7;
  _QWORD v9[4];

  v2 = *((_QWORD *)this + 6);
  if (!v2)
    return 0;
  v3 = *(_DWORD *)(v2 + 24);
  *(_DWORD *)(v2 + 24) = v3 + 2;
  v4 = *(_QWORD *)(v2 + 1824);
  v5 = *(_QWORD *)(v2 + 1832);
  v9[0] = "HTMLMediaElement";
  v9[1] = 17;
  v9[2] = "webkitCurrentPlaybackTargetIsWireless";
  v9[3] = v5;
  if (*(_BYTE *)(v4 + 12))
  {
    if (WebCore::LogMedia && byte_1ECE7C490 >= 3u)
    {
      WTF::Logger::log<WTF::Logger::LogSiteIdentifier,BOOL>((uint64_t)&WebCore::LogMedia, 3, (WTF::Logger::LogSiteIdentifier *)v9);
      v3 = *(_DWORD *)(v2 + 24) - 2;
    }
  }
  v7 = *(_BYTE *)(v2 + 1697) != 0;
  if (v3)
  {
    *(_DWORD *)(v2 + 24) = v3;
  }
  else if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
  {
    WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  return v7;
}

uint64_t WebCore::PlaybackSessionModelMediaElement::externalPlaybackTargetType(WebCore::PlaybackSessionModelMediaElement *this, void *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v10;
  int v11;
  int v12;

  v2 = *((_QWORD *)this + 6);
  if (!v2)
    return 0;
  v3 = *(_DWORD *)(v2 + 24);
  *(_DWORD *)(v2 + 24) = v3 + 2;
  v4 = *(_QWORD *)(v2 + 1616);
  if (v4)
  {
    v5 = *(_QWORD *)(v4 + 16);
    if (!v5 || (v6 = *(_QWORD *)(v5 + 8)) == 0 || (v7 = *(_QWORD *)(v6 + 1136)) == 0)
    {
      v10 = 0;
      goto LABEL_21;
    }
    v8 = *(unsigned __int8 **)v7;
    if (__ldaxr(*(unsigned __int8 **)v7))
    {
      __clrex();
    }
    else if (!__stxr(1u, v8))
    {
      goto LABEL_14;
    }
    MEMORY[0x19AEA534C](v8);
LABEL_14:
    ++*((_QWORD *)v8 + 1);
    v11 = __ldxr(v8);
    if (v11 == 1)
    {
      if (!__stlxr(0, v8))
      {
LABEL_19:
        v12 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v7 + 72) + 728))(*(_QWORD *)(v7 + 72));
        v10 = v12 == 1;
        WTF::ThreadSafeWeakPtrControlBlock::strongDeref<WebCore::MediaPlayer,(WTF::DestructionThread)1>(*(unsigned __int8 **)v7);
        if (v12 == 2)
          v10 = 2;
LABEL_21:
        v3 = *(_DWORD *)(v2 + 24) - 2;
        if (*(_DWORD *)(v2 + 24) != 2)
          goto LABEL_22;
        goto LABEL_10;
      }
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v8);
    goto LABEL_19;
  }
  v10 = 0;
  if (v3)
  {
LABEL_22:
    *(_DWORD *)(v2 + 24) = v3;
    return v10;
  }
LABEL_10:
  if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
    WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  return v10;
}

_QWORD *WebCore::PlaybackSessionModelMediaElement::externalPlaybackLocalizedDeviceName@<X0>(_QWORD *this@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  _DWORD *v7;

  v4 = this[6];
  if (!v4)
    goto LABEL_7;
  v5 = *(_DWORD *)(v4 + 24);
  *(_DWORD *)(v4 + 24) = v5 + 2;
  v6 = *(_QWORD *)(v4 + 1616);
  if (v6)
  {
    this = WebCore::MediaControlsHost::externalDeviceDisplayName(*(unsigned __int8 **)(v4 + 1616), a3);
    v5 = *(_DWORD *)(v4 + 24) - 2;
  }
  if (v5)
  {
    *(_DWORD *)(v4 + 24) = v5;
  }
  else if ((*(_WORD *)(v4 + 30) & 0x400) == 0)
  {
    this = WebCore::Node::removedLastRef((WebCore::Node *)v4, a2);
  }
  if (!v6)
  {
LABEL_7:
    v7 = (_DWORD *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *v7 += 2;
    *a3 = v7;
  }
  return this;
}

uint64_t WebCore::PlaybackSessionModelMediaElement::isPictureInPictureActive(WebCore::PlaybackSessionModelMediaElement *this, void *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = *((_QWORD *)this + 6);
  if (!v2)
    return 0;
  v3 = *(_DWORD *)(v2 + 24);
  *(_DWORD *)(v2 + 24) = v3 + 2;
  v4 = (*(unsigned __int8 *)(v2 + 1080) >> 1) & 1;
  if (v3)
  {
    *(_DWORD *)(v2 + 24) = v3;
  }
  else if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
  {
    WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  return v4;
}

uint64_t WebCore::PlaybackSessionModelMediaElement::isInWindowFullscreenActive(WebCore::PlaybackSessionModelMediaElement *this, void *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = *((_QWORD *)this + 6);
  if (!v2)
    return 0;
  v3 = *(_DWORD *)(v2 + 24);
  *(_DWORD *)(v2 + 24) = v3 + 2;
  v4 = (*(unsigned __int8 *)(v2 + 1080) >> 2) & 1;
  if (v3)
  {
    *(_DWORD *)(v2 + 24) = v3;
  }
  else if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
  {
    WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  return v4;
}

uint64_t WebCore::PlaybackSessionModelMediaElement::isMuted(WebCore::PlaybackSessionModelMediaElement *this)
{
  WebCore::Node *v1;
  void *v2;
  uint64_t v3;

  v1 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (!v1)
    return 0;
  *((_DWORD *)v1 + 6) += 2;
  v3 = (*(uint64_t (**)(WebCore::Node *))(*(_QWORD *)v1 + 1472))(v1);
  if (*((_DWORD *)v1 + 6) == 2)
  {
    if ((*((_WORD *)v1 + 15) & 0x400) == 0)
      WebCore::Node::removedLastRef(v1, v2);
  }
  else
  {
    *((_DWORD *)v1 + 6) -= 2;
  }
  return v3;
}

void sub_1951381B8(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

double WebCore::PlaybackSessionModelMediaElement::volume(WebCore::PlaybackSessionModelMediaElement *this)
{
  WebCore::Node *v1;
  void *v2;
  double v3;

  v1 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (!v1)
    return 0.0;
  *((_DWORD *)v1 + 6) += 2;
  v3 = (*(double (**)(WebCore::Node *))(*(_QWORD *)v1 + 1456))(v1);
  if (*((_DWORD *)v1 + 6) == 2)
  {
    if ((*((_WORD *)v1 + 15) & 0x400) == 0)
      WebCore::Node::removedLastRef(v1, v2);
  }
  else
  {
    *((_DWORD *)v1 + 6) -= 2;
  }
  return v3;
}

void sub_195138260(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

WebCore::PlaybackSessionModelClient *WebCore::PlaybackSessionModelMediaElement::addClient(WebCore::PlaybackSessionModelMediaElement *this, WebCore::PlaybackSessionModelClient *a2)
{
  uint64_t *v2;
  WebCore::PlaybackSessionModelClient *result;
  uint64_t v4;
  WebCore::PlaybackSessionModelClient *v5;

  v2 = (uint64_t *)((char *)this + 64);
  v5 = a2;
  (*(void (**)(WebCore::PlaybackSessionModelClient *))(*(_QWORD *)a2 + 32))(a2);
  WTF::HashTable<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>,WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>,WTF::IdentityExtractor,WTF::DefaultHash<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>,WTF::HashTraits<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>,WTF::HashTraits<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>>::add(v2, (uint64_t *)&v5, (uint64_t)&v4);
  result = v5;
  if (v5)
    return (WebCore::PlaybackSessionModelClient *)(*(uint64_t (**)(WebCore::PlaybackSessionModelClient *))(*(_QWORD *)v5 + 40))(v5);
  return result;
}

void sub_1951382EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a12)
    (*(void (**)(uint64_t))(*(_QWORD *)a12 + 40))(a12);
  _Unwind_Resume(exception_object);
}

uint64_t WebCore::PlaybackSessionModelMediaElement::removeClient(WebCore::PlaybackSessionModelMediaElement *this, WebCore::PlaybackSessionModelClient *a2)
{
  return WTF::HashSet<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>,WTF::DefaultHash<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>,WTF::HashTraits<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>,WTF::HashTableTraits>::remove<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>((uint64_t *)this + 8, (uint64_t)a2);
}

uint64_t WTF::HashSet<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>,WTF::DefaultHash<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>,WTF::HashTraits<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>,WTF::HashTableTraits>::remove<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;

  v2 = *a1;
  if (!*a1)
    return 0;
  v4 = *(_DWORD *)(v2 - 8);
  v5 = (~(a2 << 32) + a2) ^ ((unint64_t)(~(a2 << 32) + a2) >> 22);
  v6 = 9 * ((v5 + ~(v5 << 13)) ^ ((v5 + ~(v5 << 13)) >> 8));
  v7 = (v6 ^ (v6 >> 15)) + ~((v6 ^ (v6 >> 15)) << 27);
  v8 = v4 & ((v7 >> 31) ^ v7);
  v9 = *(_QWORD *)(v2 + 8 * v8);
  if (v9 != a2)
  {
    v10 = 1;
    while (v9)
    {
      v8 = ((_DWORD)v8 + v10) & v4;
      v9 = *(_QWORD *)(v2 + 8 * v8);
      ++v10;
      if (v9 == a2)
        goto LABEL_8;
    }
    v8 = *(unsigned int *)(v2 - 4);
  }
LABEL_8:
  if (v8 == *(_DWORD *)(v2 - 4))
    return 0;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  *(_QWORD *)(v2 + 8 * v8) = -1;
  if (v12)
    (*(void (**)(uint64_t))(*(_QWORD *)v12 + 40))(v12);
  ++*(_DWORD *)(*a1 - 16);
  v13 = *a1;
  if (*a1)
    v14 = *(_DWORD *)(v13 - 12) - 1;
  else
    v14 = -1;
  *(_DWORD *)(v13 - 12) = v14;
  v15 = *a1;
  if (*a1)
  {
    v16 = 6 * *(_DWORD *)(v15 - 12);
    v17 = *(_DWORD *)(v15 - 4);
    if (v16 < v17 && v17 >= 9)
      WTF::HashTable<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>,WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>,WTF::IdentityExtractor,WTF::DefaultHash<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>,WTF::HashTraits<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>,WTF::HashTraits<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>>::rehash(a1, v17 >> 1, 0);
  }
  return 1;
}

unsigned int *WebCore::PlaybackSessionModelMediaElement::play(unsigned int *this)
{
  WebCore::Node *v1;
  void *v2;

  v1 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (v1)
  {
    *((_DWORD *)v1 + 6) += 2;
    this = (unsigned int *)(*(uint64_t (**)(WebCore::Node *))(*(_QWORD *)v1 + 1440))(v1);
    if (*((_DWORD *)v1 + 6) == 2)
    {
      if ((*((_WORD *)v1 + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef(v1, v2);
    }
    else
    {
      *((_DWORD *)v1 + 6) -= 2;
    }
  }
  return this;
}

void sub_1951384A0(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

unsigned int *WebCore::PlaybackSessionModelMediaElement::pause(unsigned int *this)
{
  WebCore::Node *v1;
  void *v2;

  v1 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (v1)
  {
    *((_DWORD *)v1 + 6) += 2;
    this = (unsigned int *)(*(uint64_t (**)(WebCore::Node *))(*(_QWORD *)v1 + 1448))(v1);
    if (*((_DWORD *)v1 + 6) == 2)
    {
      if ((*((_WORD *)v1 + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef(v1, v2);
    }
    else
    {
      *((_DWORD *)v1 + 6) -= 2;
    }
  }
  return this;
}

void sub_195138534(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

void WebCore::PlaybackSessionModelMediaElement::togglePlayState(WebCore::PlaybackSessionModelMediaElement *this)
{
  uint64_t v1;
  void *v2;

  v1 = *((_QWORD *)this + 6);
  if (v1)
  {
    *(_DWORD *)(v1 + 24) += 2;
    WebCore::HTMLMediaElement::togglePlayState((WebCore::HTMLMediaElement *)v1);
    if (*(_DWORD *)(v1 + 24) == 2)
    {
      if ((*(_WORD *)(v1 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v1, v2);
    }
    else
    {
      *(_DWORD *)(v1 + 24) -= 2;
    }
  }
}

unsigned int *WebCore::PlaybackSessionModelMediaElement::beginScrubbing(unsigned int *this)
{
  WebCore::Node *v1;
  void *v2;

  v1 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (v1)
  {
    *((_DWORD *)v1 + 6) += 2;
    this = (unsigned int *)(*(uint64_t (**)(WebCore::Node *))(*(_QWORD *)v1 + 1488))(v1);
    if (*((_DWORD *)v1 + 6) == 2)
    {
      if ((*((_WORD *)v1 + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef(v1, v2);
    }
    else
    {
      *((_DWORD *)v1 + 6) -= 2;
    }
  }
  return this;
}

void sub_195138624(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

unsigned int *WebCore::PlaybackSessionModelMediaElement::endScrubbing(unsigned int *this)
{
  WebCore::Node *v1;
  void *v2;

  v1 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (v1)
  {
    *((_DWORD *)v1 + 6) += 2;
    this = (unsigned int *)(*(uint64_t (**)(WebCore::Node *))(*(_QWORD *)v1 + 1496))(v1);
    if (*((_DWORD *)v1 + 6) == 2)
    {
      if ((*((_WORD *)v1 + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef(v1, v2);
    }
    else
    {
      *((_DWORD *)v1 + 6) -= 2;
    }
  }
  return this;
}

void sub_1951386B8(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

unsigned int *WebCore::PlaybackSessionModelMediaElement::seekToTime(unsigned int *this, double a2, double a3, double a4)
{
  uint64_t v4;
  WTF::MediaTime *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  WTF::MediaTime *v11[2];
  WTF::MediaTime *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *((_QWORD *)this + 6);
  if (v4)
  {
    *(_DWORD *)(v4 + 24) += 2;
    v11[0] = (WTF::MediaTime *)WTF::MediaTime::createWithDouble((WTF::MediaTime *)this, a2);
    v11[1] = v7;
    v12 = (WTF::MediaTime *)WTF::MediaTime::createWithDouble(v11[0], a3);
    v13 = v8;
    v14 = WTF::MediaTime::createWithDouble(v12, a4);
    v15 = v9;
    this = WebCore::HTMLMediaElement::seekWithTolerance((unsigned int *)v4, (const WebCore::SeekTarget *)v11, 1);
    if (*(_DWORD *)(v4 + 24) == 2)
    {
      if ((*(_WORD *)(v4 + 30) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)v4, v10);
    }
    else
    {
      *(_DWORD *)(v4 + 24) -= 2;
    }
  }
  return this;
}

unsigned int *WebCore::PlaybackSessionModelMediaElement::fastSeek(unsigned int *this, double a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _QWORD v5[2];

  v2 = *((_QWORD *)this + 6);
  if (v2)
  {
    *(_DWORD *)(v2 + 24) += 2;
    v5[0] = WTF::MediaTime::createWithDouble((WTF::MediaTime *)this, a2);
    v5[1] = v3;
    this = WebCore::HTMLMediaElement::fastSeek((WebCore::HTMLMediaElement *)v2, (const WTF::MediaTime *)v5);
    if (*(_DWORD *)(v2 + 24) == 2)
    {
      if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)v2, v4);
    }
    else
    {
      *(_DWORD *)(v2 + 24) -= 2;
    }
  }
  return this;
}

unsigned int *WebCore::PlaybackSessionModelMediaElement::beginScanningForward(unsigned int *this)
{
  WebCore::Node *v1;
  void *v2;

  v1 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (v1)
  {
    *((_DWORD *)v1 + 6) += 2;
    this = (unsigned int *)(*(uint64_t (**)(WebCore::Node *, uint64_t))(*(_QWORD *)v1 + 1504))(v1, 1);
    if (*((_DWORD *)v1 + 6) == 2)
    {
      if ((*((_WORD *)v1 + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef(v1, v2);
    }
    else
    {
      *((_DWORD *)v1 + 6) -= 2;
    }
  }
  return this;
}

void sub_195138890(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

unsigned int *WebCore::PlaybackSessionModelMediaElement::beginScanningBackward(unsigned int *this)
{
  WebCore::Node *v1;
  void *v2;

  v1 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (v1)
  {
    *((_DWORD *)v1 + 6) += 2;
    this = (unsigned int *)(*(uint64_t (**)(WebCore::Node *, _QWORD))(*(_QWORD *)v1 + 1504))(v1, 0);
    if (*((_DWORD *)v1 + 6) == 2)
    {
      if ((*((_WORD *)v1 + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef(v1, v2);
    }
    else
    {
      *((_DWORD *)v1 + 6) -= 2;
    }
  }
  return this;
}

void sub_195138928(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

unsigned int *WebCore::PlaybackSessionModelMediaElement::endScanning(unsigned int *this)
{
  WebCore::Node *v1;
  void *v2;

  v1 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (v1)
  {
    *((_DWORD *)v1 + 6) += 2;
    this = (unsigned int *)(*(uint64_t (**)(WebCore::Node *))(*(_QWORD *)v1 + 1512))(v1);
    if (*((_DWORD *)v1 + 6) == 2)
    {
      if ((*((_WORD *)v1 + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef(v1, v2);
    }
    else
    {
      *((_DWORD *)v1 + 6) -= 2;
    }
  }
  return this;
}

void sub_1951389BC(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

unsigned int *WebCore::PlaybackSessionModelMediaElement::setDefaultPlaybackRate(unsigned int *this, double a2)
{
  WebCore::Node *v2;
  void *v3;

  v2 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (v2)
  {
    *((_DWORD *)v2 + 6) += 2;
    this = (unsigned int *)(*(uint64_t (**)(WebCore::Node *, double))(*(_QWORD *)v2 + 1400))(v2, a2);
    if (*((_DWORD *)v2 + 6) == 2)
    {
      if ((*((_WORD *)v2 + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef(v2, v3);
    }
    else
    {
      *((_DWORD *)v2 + 6) -= 2;
    }
  }
  return this;
}

void sub_195138A50(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

unsigned int *WebCore::PlaybackSessionModelMediaElement::setPlaybackRate(unsigned int *this, double a2)
{
  WebCore::Node *v2;
  void *v3;

  v2 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (v2)
  {
    *((_DWORD *)v2 + 6) += 2;
    this = (unsigned int *)(*(uint64_t (**)(WebCore::Node *, double))(*(_QWORD *)v2 + 1416))(v2, a2);
    if (*((_DWORD *)v2 + 6) == 2)
    {
      if ((*((_WORD *)v2 + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef(v2, v3);
    }
    else
    {
      *((_DWORD *)v2 + 6) -= 2;
    }
  }
  return this;
}

void sub_195138AE4(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

unsigned int *WebCore::PlaybackSessionModelMediaElement::selectAudioMediaOption(unsigned int *this, void *a2)
{
  uint64_t v2;
  unsigned int *v3;
  int v4;
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int *v10;

  v2 = *((_QWORD *)this + 6);
  if (v2)
  {
    v3 = this;
    v4 = *(_DWORD *)(v2 + 24);
    *(_DWORD *)(v2 + 24) = v4 + 2;
    v5 = this[25];
    if ((_DWORD)v5)
    {
      v7 = 0;
      while (v7 < v3[25])
      {
        v8 = *(_QWORD *)(*((_QWORD *)v3 + 11) + 8 * v7);
        if (*(_BYTE *)(v8 + 176) != (a2 == (void *)v7))
        {
          (*(void (**)(_QWORD, BOOL))(**(_QWORD **)(v8 + 168) + 120))(*(_QWORD *)(v8 + 168), a2 == (void *)v7);
          v9 = (unsigned int *)WTF::fastMalloc((WTF *)0x10);
          *(_QWORD *)v9 = off_1E33E9F78;
          *((_QWORD *)v9 + 1) = v8;
          v10 = v9;
          WTF::WeakHashSet<WebCore::MediaSessionObserver,WTF::DefaultWeakPtrImpl,(WTF::EnableWeakPtrThreadingAssertions)1>::forEach((uint64_t **)(v8 + 152), &v10);
          this = v10;
          v10 = 0;
          if (this)
            this = (unsigned int *)(*(uint64_t (**)(unsigned int *))(*(_QWORD *)this + 8))(this);
        }
        if (v5 == ++v7)
        {
          v4 = *(_DWORD *)(v2 + 24) - 2;
          goto LABEL_10;
        }
      }
      __break(0xC471u);
    }
    else
    {
LABEL_10:
      if (v4)
      {
        *(_DWORD *)(v2 + 24) = v4;
      }
      else if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      {
        return WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
      }
    }
  }
  return this;
}

unsigned int *WebCore::PlaybackSessionModelMediaElement::selectLegibleMediaOption(unsigned int *this, unint64_t a2)
{
  uint64_t v2;
  WebCore::TextTrack *v3;
  void *v4;

  v2 = *((_QWORD *)this + 6);
  if (v2)
  {
    *(_DWORD *)(v2 + 24) += 2;
    if (this[21] <= a2)
      v3 = (WebCore::TextTrack *)WebCore::TextTrack::captionMenuOffItem((WebCore::TextTrack *)this);
    else
      v3 = *(WebCore::TextTrack **)(*((_QWORD *)this + 9) + 8 * a2);
    this = (unsigned int *)WebCore::HTMLMediaElement::setSelectedTextTrack(v2, v3);
    if (*(_DWORD *)(v2 + 24) == 2)
    {
      if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)v2, v4);
    }
    else
    {
      *(_DWORD *)(v2 + 24) -= 2;
    }
  }
  return this;
}

void sub_195138CBC(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

void WebCore::PlaybackSessionModelMediaElement::togglePictureInPicture(WebCore::PlaybackSessionModelMediaElement *this, void *a2)
{
  uint64_t v2;
  int v3;

  v2 = *((_QWORD *)this + 6);
  if (v2)
  {
    v3 = *(_DWORD *)(v2 + 24);
    *(_DWORD *)(v2 + 24) = v3 + 2;
    if (*(_QWORD *)(*(_QWORD *)(v2 + 96) + 24) == *(_QWORD *)(WebCore::HTMLNames::videoTag + 24))
    {
      WebCore::HTMLVideoElement::setPresentationMode((WebCore::HTMLVideoElement *)v2, (void *)(2 * (*(_DWORD *)(v2 + 1080) != 2)));
      v3 = *(_DWORD *)(v2 + 24) - 2;
      if (*(_DWORD *)(v2 + 24) != 2)
        goto LABEL_4;
    }
    else if (v3)
    {
LABEL_4:
      *(_DWORD *)(v2 + 24) = v3;
      return;
    }
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
}

void WebCore::PlaybackSessionModelMediaElement::toggleInWindowFullscreen(WebCore::PlaybackSessionModelMediaElement *this, void *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  __int128 v8;
  char v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v2 = *((_QWORD *)this + 6);
  if (v2)
  {
    v3 = *(_DWORD *)(v2 + 24);
    *(_DWORD *)(v2 + 24) = v3 + 2;
    if (*(_QWORD *)(*(_QWORD *)(v2 + 96) + 24) != *(_QWORD *)(WebCore::HTMLNames::videoTag + 24))
    {
      if (!v3)
      {
        if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
          WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
        return;
      }
LABEL_10:
      *(_DWORD *)(v2 + 24) = v3;
      return;
    }
    v4 = *(_QWORD *)(*(_QWORD *)(v2 + 40) + 8);
    LOBYTE(v8) = 0;
    v9 = 0;
    WebCore::UserGestureIndicator::UserGestureIndicator(&v7, 257, v4, 1, 0, &v8, 1);
    if (*(_DWORD *)(v2 + 1080) == 4)
      v5 = 0;
    else
      v5 = 3;
    WebCore::HTMLVideoElement::setPresentationMode((WebCore::HTMLVideoElement *)v2, (void *)v5);
    WebCore::UserGestureIndicator::~UserGestureIndicator((WebCore::UserGestureIndicator *)&v7);
    v3 = *(_DWORD *)(v2 + 24) - 2;
    if (*(_DWORD *)(v2 + 24) != 2)
      goto LABEL_10;
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, v6);
  }
}

void WebCore::PlaybackSessionModelMediaElement::enterFullscreen(WebCore::PlaybackSessionModelMediaElement *this, void *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  WTF::StringImpl *v5;
  void *v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v2 = *((_QWORD *)this + 6);
  if (v2)
  {
    v3 = *(_DWORD *)(v2 + 24);
    *(_DWORD *)(v2 + 24) = v3 + 2;
    if (*(_QWORD *)(*(_QWORD *)(v2 + 96) + 24) != *(_QWORD *)(WebCore::HTMLNames::videoTag + 24))
    {
      if (!v3)
      {
        if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
          WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
        return;
      }
LABEL_11:
      *(_DWORD *)(v2 + 24) = v3;
      return;
    }
    v4 = *(_QWORD *)(*(_QWORD *)(v2 + 40) + 8);
    LOBYTE(v11) = 0;
    v12 = 0;
    WebCore::UserGestureIndicator::UserGestureIndicator(&v10, 257, v4, 1, 0, &v11, 1);
    WebCore::HTMLVideoElement::webkitEnterFullscreen(v2, (uint64_t)&v7);
    if (v9 && v8)
    {
      if (*(_DWORD *)v8 == 2)
        WTF::StringImpl::destroy(v8, v5);
      else
        *(_DWORD *)v8 -= 2;
    }
    WebCore::UserGestureIndicator::~UserGestureIndicator((WebCore::UserGestureIndicator *)&v10);
    v3 = *(_DWORD *)(v2 + 24) - 2;
    if (*(_DWORD *)(v2 + 24) != 2)
      goto LABEL_11;
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, v6);
  }
}

void WebCore::PlaybackSessionModelMediaElement::exitFullscreen(WebCore::PlaybackSessionModelMediaElement *this, void *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  __int128 v8;
  char v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v2 = *((_QWORD *)this + 6);
  if (v2)
  {
    v3 = *(_DWORD *)(v2 + 24);
    *(_DWORD *)(v2 + 24) = v3 + 2;
    if (*(_QWORD *)(*(_QWORD *)(v2 + 96) + 24) != *(_QWORD *)(WebCore::HTMLNames::videoTag + 24))
    {
      if (!v3)
      {
        if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
          WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
        return;
      }
LABEL_7:
      *(_DWORD *)(v2 + 24) = v3;
      return;
    }
    v4 = *(_QWORD *)(*(_QWORD *)(v2 + 40) + 8);
    LOBYTE(v8) = 0;
    v9 = 0;
    WebCore::UserGestureIndicator::UserGestureIndicator(&v7, 257, v4, 1, 0, &v8, 1);
    WebCore::HTMLVideoElement::webkitExitFullscreen((WebCore::HTMLVideoElement *)v2, v5);
    WebCore::UserGestureIndicator::~UserGestureIndicator((WebCore::UserGestureIndicator *)&v7);
    v3 = *(_DWORD *)(v2 + 24) - 2;
    if (*(_DWORD *)(v2 + 24) != 2)
      goto LABEL_7;
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, v6);
  }
}

unsigned int *WebCore::PlaybackSessionModelMediaElement::toggleMuted(unsigned int *this)
{
  WebCore::Node *v1;
  unsigned int *v2;
  void *v3;
  int v4;
  WebCore::Node *v5;
  void *v6;

  v1 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (v1)
  {
    v2 = this;
    *((_DWORD *)v1 + 6) += 2;
    this = (unsigned int *)(*(uint64_t (**)(WebCore::Node *))(*(_QWORD *)v1 + 1472))(v1);
    v4 = (int)this;
    if (*((_DWORD *)v1 + 6) == 2)
    {
      if ((*((_WORD *)v1 + 15) & 0x400) == 0)
        this = WebCore::Node::removedLastRef(v1, v3);
    }
    else
    {
      *((_DWORD *)v1 + 6) -= 2;
    }
    v5 = (WebCore::Node *)*((_QWORD *)v2 + 6);
    if (v5)
    {
      *((_DWORD *)v5 + 6) += 2;
      this = (unsigned int *)(*(uint64_t (**)(WebCore::Node *, _QWORD))(*(_QWORD *)v5 + 1480))(v5, v4 ^ 1u);
      if (*((_DWORD *)v5 + 6) == 2)
      {
        if ((*((_WORD *)v5 + 15) & 0x400) == 0)
          return WebCore::Node::removedLastRef(v5, v6);
      }
      else
      {
        *((_DWORD *)v5 + 6) -= 2;
      }
    }
  }
  return this;
}

void sub_1951391C4(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  int v6;

  v3 = v2;
  v5 = v3;
  v6 = *(_DWORD *)(v3 + 24) - 2;
  if (v6)
  {
    *(_DWORD *)(v5 + 24) = v6;
  }
  else if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
  {
    WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  _Unwind_Resume(exception_object);
}

unsigned int *WebCore::PlaybackSessionModelMediaElement::setMuted(unsigned int *this)
{
  WebCore::Node *v1;
  void *v2;

  v1 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (v1)
  {
    *((_DWORD *)v1 + 6) += 2;
    this = (unsigned int *)(*(uint64_t (**)(WebCore::Node *))(*(_QWORD *)v1 + 1480))(v1);
    if (*((_DWORD *)v1 + 6) == 2)
    {
      if ((*((_WORD *)v1 + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef(v1, v2);
    }
    else
    {
      *((_DWORD *)v1 + 6) -= 2;
    }
  }
  return this;
}

void sub_19513926C(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

unsigned int *WebCore::PlaybackSessionModelMediaElement::setVolume(unsigned int *this, double a2)
{
  WebCore::Node *v2;
  WTF::StringImpl *v3;
  uint64_t v4;
  WTF::StringImpl *v5;
  char v6;

  v2 = (WebCore::Node *)*((_QWORD *)this + 6);
  if (v2)
  {
    *((_DWORD *)v2 + 6) += 2;
    this = (unsigned int *)(*(_QWORD *(**)(uint64_t *__return_ptr, WebCore::Node *, double))(*(_QWORD *)v2 + 1464))(&v4, v2, a2);
    if (v6)
    {
      this = (unsigned int *)v5;
      v5 = 0;
      if (this)
      {
        if (*this == 2)
          this = (unsigned int *)WTF::StringImpl::destroy((WTF::StringImpl *)this, v3);
        else
          *this -= 2;
      }
    }
    if (*((_DWORD *)v2 + 6) == 2)
    {
      if ((*((_WORD *)v2 + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef(v2, v3);
    }
    else
    {
      *((_DWORD *)v2 + 6) -= 2;
    }
  }
  return this;
}

void sub_195139334(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

unsigned int *WebCore::PlaybackSessionModelMediaElement::setPlayingOnSecondScreen(unsigned int *this, void *a2)
{
  uint64_t v2;
  int v3;

  v2 = *((_QWORD *)this + 6);
  if (v2)
  {
    v3 = *(_DWORD *)(v2 + 24);
    *(_DWORD *)(v2 + 24) = v3 + 2;
    if (*(unsigned __int8 *)(v2 + 1698) != (_DWORD)a2)
    {
      *(_BYTE *)(v2 + 1698) = (_BYTE)a2;
      this = (unsigned int *)WebCore::HTMLMediaElement::scheduleUpdateMediaState((uint64_t (**)())v2);
      v3 = *(_DWORD *)(v2 + 24) - 2;
    }
    if (v3)
    {
      *(_DWORD *)(v2 + 24) = v3;
    }
    else if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
    {
      return WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
    }
  }
  return this;
}

unsigned int *WebCore::PlaybackSessionModelMediaElement::sendRemoteCommand(unsigned int *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  void *v7;

  v3 = *((_QWORD *)result + 6);
  if (v3)
  {
    *(_DWORD *)(v3 + 24) += 2;
    v6 = *(_QWORD *)(v3 + 1600);
    if (!v6)
    {
      WebCore::HTMLMediaElement::initializeMediaSession((WebCore::HTMLMediaElement *)v3);
      v6 = *(_QWORD *)(v3 + 1600);
    }
    result = (unsigned int *)WebCore::MediaElementSession::didReceiveRemoteControlCommand(v6, a2, a3);
    if (*(_DWORD *)(v3 + 24) == 2)
    {
      if ((*(_WORD *)(v3 + 30) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)v3, v7);
    }
    else
    {
      *(_DWORD *)(v3 + 24) -= 2;
    }
  }
  return result;
}

void sub_195139458(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

unsigned int *WebCore::PlaybackSessionModelMediaElement::audioMediaSelectionOptions@<X0>(unsigned int *this@<X0>, WTF::StringImpl *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  WebCore::Page *v8;
  unsigned int *v9;
  uint64_t v10;
  WebCore::PageGroup *v11;
  WebCore::CaptionUserPreferencesMediaAF *v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t v15;
  _BYTE *v16;
  WTF::StringImpl *v17;
  int v18;
  uint64_t v19;
  WTF::StringImpl *v20;

  v4 = *((_QWORD *)this + 6);
  if (!v4
    || (*(_DWORD *)(v4 + 24) += 2, (v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 40) + 8) + 528)) == 0)
    || (v6 = *(_QWORD *)(v5 + 8)) == 0
    || (v7 = *(_QWORD *)(v6 + 24)) == 0
    || (v8 = *(WebCore::Page **)(v7 + 8)) == 0)
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    goto LABEL_23;
  }
  v9 = this;
  v10 = *((_QWORD *)v8 + 66);
  if (!v10 || (v11 = *(WebCore::PageGroup **)(v10 + 8)) == 0)
  {
    this = WebCore::Page::initGroup(v8);
    v19 = *((_QWORD *)v8 + 66);
    if (v19)
      v11 = *(WebCore::PageGroup **)(v19 + 8);
    else
      v11 = 0;
  }
  v12 = (WebCore::CaptionUserPreferencesMediaAF *)*((_QWORD *)v11 + 5);
  if (!v12)
  {
    v12 = (WebCore::CaptionUserPreferencesMediaAF *)WTF::fastMalloc((WTF *)0xD8);
    WebCore::CaptionUserPreferencesMediaAF::CaptionUserPreferencesMediaAF(v12, v11);
    this = (unsigned int *)*((_QWORD *)v11 + 5);
    *((_QWORD *)v11 + 5) = v12;
    if (this)
    {
      if (this[2] == 1)
      {
        this = (unsigned int *)(*(uint64_t (**)(unsigned int *))(*(_QWORD *)this + 8))(this);
        v12 = (WebCore::CaptionUserPreferencesMediaAF *)*((_QWORD *)v11 + 5);
      }
      else
      {
        --this[2];
      }
    }
  }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  v13 = v9[25];
  if ((_DWORD)v13)
  {
    if (v13 >= 0xAAAAAAB)
    {
      __break(0xC471u);
      JUMPOUT(0x195139670);
    }
    v14 = 24 * v13;
    this = (unsigned int *)WTF::fastMalloc((WTF *)(24 * v13));
    *(_DWORD *)(a3 + 8) = v14 / 0x18;
    *(_QWORD *)a3 = this;
    if (v9[25])
    {
      v15 = 0;
      v16 = this + 4;
      do
      {
        this = (unsigned int *)(*(_QWORD *(**)(WTF::StringImpl **__return_ptr, WebCore::CaptionUserPreferencesMediaAF *, _QWORD))(*(_QWORD *)v12 + 192))(&v20, v12, *(_QWORD *)(*((_QWORD *)v9 + 11) + 8 * v15));
        v17 = v20;
        if (v20)
        {
          v18 = *(_DWORD *)v20;
          *(_DWORD *)v20 += 2;
          v20 = 0;
          if (v18)
            *(_DWORD *)v17 = v18;
          else
            this = (unsigned int *)WTF::StringImpl::destroy(v17, a2);
        }
        ++v15;
        *(v16 - 16) = 1;
        *((_QWORD *)v16 - 1) = v17;
        *v16 = 0;
        v16 += 24;
        *(_DWORD *)(a3 + 12) = v15;
      }
      while (v15 < v9[25]);
LABEL_23:
      if (!v4)
        return this;
    }
  }
  if (*(_DWORD *)(v4 + 24) == 2)
  {
    if ((*(_WORD *)(v4 + 30) & 0x400) == 0)
      return WebCore::Node::removedLastRef((WebCore::Node *)v4, a2);
  }
  else
  {
    *(_DWORD *)(v4 + 24) -= 2;
  }
  return this;
}

void sub_19513967C(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

uint64_t WebCore::PlaybackSessionModelMediaElement::audioMediaSelectedIndex(WebCore::PlaybackSessionModelMediaElement *this)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  v1 = *((unsigned int *)this + 25);
  if (!(_DWORD)v1)
    return -1;
  result = 0;
  v4 = *((_QWORD *)this + 11);
  while (!*(_BYTE *)(*(_QWORD *)(v4 + 8 * result) + 176))
  {
    if (v1 == ++result)
      return -1;
  }
  return result;
}

unsigned int *WebCore::PlaybackSessionModelMediaElement::legibleMediaSelectionOptions@<X0>(unsigned int *this@<X0>, WTF::StringImpl *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  WebCore::Page *v8;
  unsigned int *v9;
  uint64_t v10;
  WebCore::PageGroup *v11;
  WebCore::CaptionUserPreferencesMediaAF *v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t v15;
  char *v16;
  unsigned int *v17;
  WebCore::TextTrack *v18;
  char v19;
  unint64_t v20;
  char v21;
  WTF::StringImpl *v22;
  int v23;
  uint64_t v24;
  WTF::StringImpl *v25;

  v4 = *((_QWORD *)this + 6);
  if (!v4
    || (*(_DWORD *)(v4 + 24) += 2, (v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 40) + 8) + 528)) == 0)
    || (v6 = *(_QWORD *)(v5 + 8)) == 0
    || (v7 = *(_QWORD *)(v6 + 24)) == 0
    || (v8 = *(WebCore::Page **)(v7 + 8)) == 0)
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    goto LABEL_29;
  }
  v9 = this;
  v10 = *((_QWORD *)v8 + 66);
  if (!v10 || (v11 = *(WebCore::PageGroup **)(v10 + 8)) == 0)
  {
    this = WebCore::Page::initGroup(v8);
    v24 = *((_QWORD *)v8 + 66);
    if (v24)
      v11 = *(WebCore::PageGroup **)(v24 + 8);
    else
      v11 = 0;
  }
  v12 = (WebCore::CaptionUserPreferencesMediaAF *)*((_QWORD *)v11 + 5);
  if (!v12)
  {
    v12 = (WebCore::CaptionUserPreferencesMediaAF *)WTF::fastMalloc((WTF *)0xD8);
    WebCore::CaptionUserPreferencesMediaAF::CaptionUserPreferencesMediaAF(v12, v11);
    this = (unsigned int *)*((_QWORD *)v11 + 5);
    *((_QWORD *)v11 + 5) = v12;
    if (this)
    {
      if (this[2] == 1)
      {
        this = (unsigned int *)(*(uint64_t (**)(unsigned int *))(*(_QWORD *)this + 8))(this);
        v12 = (WebCore::CaptionUserPreferencesMediaAF *)*((_QWORD *)v11 + 5);
      }
      else
      {
        --this[2];
      }
    }
  }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  v13 = v9[21];
  if ((_DWORD)v13)
  {
    if (v13 >= 0xAAAAAAB)
    {
      __break(0xC471u);
      JUMPOUT(0x195139914);
    }
    v14 = 24 * v13;
    this = (unsigned int *)WTF::fastMalloc((WTF *)(24 * v13));
    *(_DWORD *)(a3 + 8) = v14 / 0x18;
    *(_QWORD *)a3 = this;
    if (v9[21])
    {
      v15 = 0;
      v16 = (char *)(this + 4);
      do
      {
        v17 = *(unsigned int **)(*((_QWORD *)v9 + 9) + 8 * v15);
        v18 = (WebCore::TextTrack *)WebCore::TextTrack::captionMenuOffItem((WebCore::TextTrack *)this);
        if (v18 == (WebCore::TextTrack *)v17)
          v19 = 1;
        else
          v19 = 2 * (WebCore::TextTrack::captionMenuAutomaticItem(v18) == (_QWORD)v17);
        v20 = v17[57];
        if (v20 >= 6)
          v21 = 0;
        else
          v21 = 0x20400020302uLL >> (8 * v20);
        this = (unsigned int *)(*(_QWORD *(**)(WTF::StringImpl **__return_ptr, WebCore::CaptionUserPreferencesMediaAF *, unsigned int *))(*(_QWORD *)v12 + 176))(&v25, v12, v17);
        v22 = v25;
        if (v25)
        {
          v23 = *(_DWORD *)v25;
          *(_DWORD *)v25 += 2;
          v25 = 0;
          if (v23)
            *(_DWORD *)v22 = v23;
          else
            this = (unsigned int *)WTF::StringImpl::destroy(v22, a2);
        }
        ++v15;
        *(v16 - 16) = v21;
        *((_QWORD *)v16 - 1) = v22;
        *v16 = v19;
        v16 += 24;
        *(_DWORD *)(a3 + 12) = v15;
      }
      while (v15 < v9[21]);
LABEL_29:
      if (!v4)
        return this;
    }
  }
  if (*(_DWORD *)(v4 + 24) == 2)
  {
    if ((*(_WORD *)(v4 + 30) & 0x400) == 0)
      return WebCore::Node::removedLastRef((WebCore::Node *)v4, a2);
  }
  else
  {
    *(_DWORD *)(v4 + 24) -= 2;
  }
  return this;
}

void sub_195139920(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

uint64_t WebCore::PlaybackSessionModelMediaElement::legibleMediaSelectedIndex(WebCore::PlaybackSessionModelMediaElement *this, WTF::StringImpl *a2)
{
  unint64_t v2;
  uint64_t v3;
  int v5;
  uint64_t v6;
  WebCore::TextTrack *v7;
  WebCore::TextTrack *v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  char v15;
  WebCore::TextTrack *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  BOOL v19;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  WTF::StringImpl *v24;
  char v27;
  int v28;
  int v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  WTF::StringImpl *v33;
  uint64_t v34;

  v3 = *((_QWORD *)this + 6);
  if (!v3)
    return -1;
  v5 = *(_DWORD *)(v3 + 24);
  *(_DWORD *)(v3 + 24) = v5 + 2;
  v6 = *(_QWORD *)(v3 + 1616);
  if (v6)
  {
    v7 = (WebCore::TextTrack *)WebCore::MediaControlsHost::captionDisplayMode(v6, &v33);
    v8 = (WebCore::TextTrack *)WebCore::TextTrack::captionMenuOffItem(v7);
    v9 = WebCore::TextTrack::captionMenuAutomaticItem(v8);
    if (*((_DWORD *)this + 21))
    {
      v10 = 0;
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      do
      {
        v16 = *(WebCore::TextTrack **)(*((_QWORD *)this + 9) + 8 * v10);
        if (v16 == v8)
        {
          v2 = v10 >> 8;
          v14 = v10;
          v12 = 1;
        }
        if ((v15 & 1) != 0)
        {
          v17 = (WTF::StringImpl *)WebCore::MediaControlsHost::automaticKeyword(void)::automatic;
        }
        else
        {
          v21 = *((_QWORD *)this + 9);
          v31 = v14;
          v32 = v9;
          v28 = v11;
          v29 = v12;
          v30 = v10;
          WTF::AtomStringImpl::add();
          v10 = v30;
          v14 = v31;
          v11 = v28;
          v12 = v29;
          v9 = v32;
          v17 = (WTF::StringImpl *)v34;
          WebCore::MediaControlsHost::automaticKeyword(void)::automatic = v34;
          v16 = *(WebCore::TextTrack **)(v21 + 8 * v30);
        }
        v18 = v33;
        if (v33 == v17)
          v19 = v16 == (WebCore::TextTrack *)v9;
        else
          v19 = *((_DWORD *)v16 + 56) == 2;
        if (v19)
        {
          v13 = v10;
          v11 = 1;
        }
        ++v10;
        v15 = 1;
      }
      while (v10 < *((unsigned int *)this + 21));
      if ((_BYTE)v11)
      {
LABEL_34:
        v33 = 0;
        if (v18)
        {
          if (*(_DWORD *)v18 == 2)
            WTF::StringImpl::destroy(v18, a2);
          else
            *(_DWORD *)v18 -= 2;
        }
        v5 = *(_DWORD *)(v3 + 24) - 2;
        if (*(_DWORD *)(v3 + 24) != 2)
          goto LABEL_38;
        goto LABEL_23;
      }
      v22 = v2 << 8;
      v23 = v14;
    }
    else
    {
      LOBYTE(v12) = 0;
      v23 = 0;
      v22 = 0;
    }
    {
      v24 = (WTF::StringImpl *)WebCore::MediaControlsHost::forcedOnlyKeyword(void)::forcedOnly;
    }
    else
    {
      v27 = v12;
      WTF::AtomStringImpl::add();
      LOBYTE(v12) = v27;
      v24 = (WTF::StringImpl *)v34;
      WebCore::MediaControlsHost::forcedOnlyKeyword(void)::forcedOnly = v34;
    }
    v18 = v33;
    if (v33 != v24 || v12 == 0)
      v13 = -1;
    else
      v13 = v22 | v23;
    goto LABEL_34;
  }
  v13 = -1;
  if (v5)
  {
LABEL_38:
    *(_DWORD *)(v3 + 24) = v5;
    return v13;
  }
LABEL_23:
  if ((*(_WORD *)(v3 + 30) & 0x400) == 0)
    WebCore::Node::removedLastRef((WebCore::Node *)v3, a2);
  return v13;
}

void sub_195139B80(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;

  if (*(_DWORD *)(v2 + 24) == 2)
  {
    if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  else
  {
    *(_DWORD *)(v2 + 24) -= 2;
  }
  _Unwind_Resume(exception_object);
}

uint64_t WebCore::PlaybackSessionModelMediaElement::logIdentifier(WebCore::PlaybackSessionModelMediaElement *this, void *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = *((_QWORD *)this + 6);
  if (!v2)
    return 0;
  v3 = *(_DWORD *)(v2 + 24);
  *(_DWORD *)(v2 + 24) = v3 + 2;
  v4 = *(_QWORD *)(v2 + 1832);
  if (v3)
  {
    *(_DWORD *)(v2 + 24) = v3;
  }
  else if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
  {
    WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  return v4;
}

uint64_t WebCore::PlaybackSessionModelMediaElement::loggerPtr(WebCore::PlaybackSessionModelMediaElement *this, void *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = *((_QWORD *)this + 6);
  if (!v2)
    return 0;
  v3 = *(_DWORD *)(v2 + 24);
  *(_DWORD *)(v2 + 24) = v3 + 2;
  v4 = *(_QWORD *)(v2 + 1824);
  if (v3)
  {
    *(_DWORD *)(v2 + 24) = v3;
  }
  else if ((*(_WORD *)(v2 + 30) & 0x400) == 0)
  {
    WebCore::Node::removedLastRef((WebCore::Node *)v2, a2);
  }
  return v4;
}

uint64_t __copy_helper_block_e8_32c66_ZTSKZN7WebCore19PowerSourceNotifierC1EON3WTF8FunctionIFvbEEEE3__0(uint64_t result, uint64_t a2)
{
  unsigned int *v2;
  unsigned int v3;

  v2 = *(unsigned int **)(a2 + 32);
  if (v2)
  {
    do
      v3 = __ldaxr(v2);
    while (__stlxr(v3 + 1, v2));
  }
  *(_QWORD *)(result + 32) = v2;
  return result;
}

unsigned int *__destroy_helper_block_e8_32c66_ZTSKZN7WebCore19PowerSourceNotifierC1EON3WTF8FunctionIFvbEEEE3__0(uint64_t a1, void *a2)
{
  unsigned int *result;
  unsigned int v4;
  unsigned int v5;

  result = *(unsigned int **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = 0;
  if (result)
  {
    do
    {
      v4 = __ldaxr(result);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, result));
    if (!v5)
    {
      atomic_store(1u, result);
      return (unsigned int *)WTF::fastFree((WTF *)result, a2);
    }
  }
  return result;
}

uint64_t WebCore::PublicSuffixStore::platformIsPublicSuffix(uint64_t a1, uint64_t a2, uint64_t a3)
{
  WTF::StringImpl *v4;
  unsigned __int8 *v5;
  int v7;
  WebCore *v8;
  uint64_t isPublicSuffixCF;
  WebCore *v11;
  char v12;
  int v13;
  WebCore *v14;
  WebCore *v15;
  _QWORD v16[2];

  v16[0] = a2;
  v16[1] = a3;
  WTF::StringView::toStringWithoutCopying(&v15, (uint64_t)v16);
  v5 = (unsigned __int8 *)(a1 + 16);
  if (__ldaxr((unsigned __int8 *)(a1 + 16)))
  {
    __clrex();
  }
  else if (!__stxr(1u, v5))
  {
    goto LABEL_4;
  }
  MEMORY[0x19AEA534C](a1 + 16);
LABEL_4:
  if (!*(_BYTE *)(a1 + 32))
    goto LABEL_5;
  v11 = v15;
  if (v15)
    *(_DWORD *)v15 += 2;
  v14 = v11;
  v12 = WTF::HashSet<WebCore::PublicSuffix,WTF::DefaultHash<WebCore::PublicSuffix>,WTF::HashTraits<WebCore::PublicSuffix>,WTF::HashTableTraits>::contains(*(_QWORD *)(a1 + 24), (uint64_t *)&v14);
  if (v11)
  {
    if (*(_DWORD *)v11 == 2)
      WTF::StringImpl::destroy(v11, v4);
    else
      *(_DWORD *)v11 -= 2;
  }
  if ((v12 & 1) == 0)
  {
LABEL_5:
    v7 = __ldxr(v5);
    if (v7 == 1)
    {
      if (!__stlxr(0, v5))
        goto LABEL_10;
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v5);
LABEL_10:
    v8 = v15;
    isPublicSuffixCF = WebCore::isPublicSuffixCF(v15, (NSString *)v4);
    goto LABEL_11;
  }
  v13 = __ldxr(v5);
  if (v13 == 1)
  {
    if (!__stlxr(0, v5))
      goto LABEL_29;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v5);
LABEL_29:
  isPublicSuffixCF = 1;
  v8 = v15;
LABEL_11:
  if (v8)
  {
    if (*(_DWORD *)v8 == 2)
      WTF::StringImpl::destroy(v8, v4);
    else
      *(_DWORD *)v8 -= 2;
  }
  return isPublicSuffixCF;
}

void sub_195139E4C(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  unsigned __int8 *v10;
  WTF::StringImpl *v11;
  int v13;

  if (v11)
  {
    if (*(_DWORD *)v11 == 2)
      WTF::StringImpl::destroy(v11, a2);
    else
      *(_DWORD *)v11 -= 2;
  }
  v13 = __ldxr(v10);
  if (v13 == 1)
  {
    if (!__stlxr(0, v10))
    {
LABEL_10:
      if (a10)
      {
        if (*(_DWORD *)a10 == 2)
          WTF::StringImpl::destroy(a10, a2);
        else
          *(_DWORD *)a10 -= 2;
      }
      _Unwind_Resume(exception_object);
    }
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v10);
  goto LABEL_10;
}

void sub_195139EC8()
{
  JUMPOUT(0x195139EA0);
}

_QWORD *WTF::StringView::toStringWithoutCopying(_QWORD *this, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = this;
  if (!*(_BYTE *)(a2 + 12))
  {
    if (*(_DWORD *)(a2 + 8))
    {
      this = (_QWORD *)WTF::StringImpl::createWithoutCopyingNonEmpty();
      goto LABEL_4;
    }
LABEL_8:
    v3 = MEMORY[0x1E0CBEF70];
    *MEMORY[0x1E0CBEF70] += 2;
    goto LABEL_5;
  }
  if (!*(_DWORD *)(a2 + 8))
    goto LABEL_8;
  this = (_QWORD *)WTF::StringImpl::createWithoutCopyingNonEmpty();
LABEL_4:
  v3 = v4;
LABEL_5:
  *v2 = v3;
  return this;
}

uint64_t WTF::HashSet<WebCore::PublicSuffix,WTF::DefaultHash<WebCore::PublicSuffix>,WTF::HashTraits<WebCore::PublicSuffix>,WTF::HashTableTraits>::contains(uint64_t result, uint64_t *a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  WTF **v6;
  const WTF::StringImpl *v7;
  const WTF::StringImpl *v8;
  int v9;

  if (result)
  {
    v3 = result;
    v4 = *(_DWORD *)(result - 8);
    v5 = WebCore::PublicSuffix::PublicSuffixHash::hash(*a2) & v4;
    v6 = (WTF **)(v3 + 8 * v5);
    if ((WTF::equal(*v6, 0, v7) & 1) != 0)
    {
      return 0;
    }
    else
    {
      v9 = 1;
      while (*v6 == (WTF *)-1 || (WTF::equalIgnoringASCIICase(*v6, (const WTF::StringImpl *)*a2, v8) & 1) == 0)
      {
        v5 = (v5 + v9) & v4;
        v6 = (WTF **)(v3 + 8 * v5);
        ++v9;
        if (WTF::equal(*v6, 0, v8))
          return 0;
      }
      return 1;
    }
  }
  return result;
}

uint64_t WebCore::isPublicSuffixCF(WebCore *this, NSString *a2)
{
  WTF *v2;
  uint64_t result;

  if (this)
    v2 = (WTF *)WTF::StringImpl::operator NSString *();
  else
    v2 = (WTF *)&stru_1E3487BC0;
  result = WTF::decodeHostName(v2, a2);
  if (result)
    return _CFHostIsDomainTopLevel() != 0;
  return result;
}

uint64_t WebCore::PublicSuffixStore::platformTopPrivatelyControlledDomain@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>, double a5@<D0>, double a6@<D1>, float a7@<S2>)
{
  unsigned int v9;
  unsigned int v10;
  uint64_t result;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  _QWORD v16[2];

  v9 = 0;
  v16[0] = a2;
  v16[1] = a3;
  while (1)
  {
    v10 = v9;
    result = WTF::StringView::find((WTF::StringView *)v16, 0x2Eu, v9, a5, a6, a7);
    if (result == -1)
      break;
    v9 = result + 1;
    v12 = WTF::StringView::substring((const char *)v16, (int)result + 1, 0xFFFFFFFF);
    if (WebCore::PublicSuffixStore::isPublicSuffix(a1, v12, v13))
    {
      v15[0] = WTF::StringView::substring((const char *)v16, v10, 0xFFFFFFFF);
      v15[1] = v14;
      return WTF::StringView::toString((WTF::StringView *)v15);
    }
  }
  *a4 = 0;
  return result;
}

const char *WTF::StringView::substring(const char *this, unsigned int a2, unsigned int a3)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *((unsigned int *)this + 2);
  if (v3 <= a2)
    return "";
  if (v3 - a2 <= a3)
  {
    if (!a2)
      return *(const char **)this;
    a3 = v3 - a2;
  }
  v4 = v3 - a2;
  if (this[12])
  {
    if (v4 >= a3)
      return (const char *)(*(_QWORD *)this + a2);
  }
  else if (v4 >= a3)
  {
    return (const char *)(*(_QWORD *)this + 2 * a2);
  }
  __break(1u);
  return this;
}

uint64_t WebCore::PublicSuffixStore::enablePublicSuffixCache(WebCore::PublicSuffixStore *this)
{
  unsigned __int8 *v2;
  WTF::StringImpl *v4;
  uint64_t result;
  int v6;
  WTF::StringImpl **v7;

  if ((WTF::isMainThread(this) & 1) == 0)
  {
    result = 68;
    __break(0xC471u);
    return result;
  }
  v2 = (unsigned __int8 *)this + 16;
  if (__ldaxr((unsigned __int8 *)this + 16))
  {
    __clrex();
LABEL_4:
    MEMORY[0x19AEA534C]((char *)this + 16);
    goto LABEL_5;
  }
  if (__stxr(1u, v2))
    goto LABEL_4;
LABEL_5:
  v7 = 0;
  std::optional<WTF::HashSet<WebCore::PublicSuffix,WTF::DefaultHash<WebCore::PublicSuffix>,WTF::HashTraits<WebCore::PublicSuffix>,WTF::HashTableTraits>>::operator=[abi:sn180100]<WTF::HashSet<WebCore::PublicSuffix,WTF::DefaultHash<WebCore::PublicSuffix>,WTF::HashTraits<WebCore::PublicSuffix>,WTF::HashTableTraits>,void>((uint64_t)this + 24, (WTF::StringImpl *)&v7);
  result = (uint64_t)WTF::HashSet<WebCore::PublicSuffix,WTF::DefaultHash<WebCore::PublicSuffix>,WTF::HashTraits<WebCore::PublicSuffix>,WTF::HashTableTraits>::~HashSet(&v7, v4);
  v6 = __ldxr(v2);
  if (v6 == 1)
  {
    if (!__stlxr(0, v2))
      return result;
  }
  else
  {
    __clrex();
  }
  return WTF::Lock::unlockSlow((WebCore::PublicSuffixStore *)((char *)this + 16));
}

uint64_t std::optional<WTF::HashSet<WebCore::PublicSuffix,WTF::DefaultHash<WebCore::PublicSuffix>,WTF::HashTraits<WebCore::PublicSuffix>,WTF::HashTableTraits>>::operator=[abi:sn180100]<WTF::HashSet<WebCore::PublicSuffix,WTF::DefaultHash<WebCore::PublicSuffix>,WTF::HashTraits<WebCore::PublicSuffix>,WTF::HashTableTraits>,void>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v3;
  WTF::StringImpl **v4;
  uint64_t v5;
  WTF::StringImpl **v6;
  WTF::StringImpl *v7;
  uint64_t v8;

  if (*(_BYTE *)(a1 + 8))
  {
    v3 = *(_QWORD *)a2;
    *(_QWORD *)a2 = 0;
    v4 = *(WTF::StringImpl ***)a1;
    *(_QWORD *)a1 = v3;
    if (v4)
    {
      v5 = *((unsigned int *)v4 - 1);
      if ((_DWORD)v5)
      {
        v6 = v4;
        do
        {
          v7 = *v6;
          if (*v6 != (WTF::StringImpl *)-1)
          {
            *v6 = 0;
            if (v7)
            {
              if (*(_DWORD *)v7 == 2)
                WTF::StringImpl::destroy(v7, a2);
              else
                *(_DWORD *)v7 -= 2;
            }
          }
          ++v6;
          --v5;
        }
        while (v5);
      }
      WTF::fastFree((WTF *)(v4 - 2), a2);
    }
  }
  else
  {
    *(_QWORD *)a1 = 0;
    v8 = *(_QWORD *)a2;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)a1 = v8;
    *(_BYTE *)(a1 + 8) = 1;
  }
  return a1;
}

uint64_t WebCore::PublicSuffixStore::addPublicSuffix(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unsigned __int8 *v5;
  WTF::StringImpl *v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;

  result = WTF::isMainThread((WTF *)a1);
  if ((result & 1) == 0)
  {
    result = 77;
    __break(0xC471u);
    goto LABEL_21;
  }
  if (*(_QWORD *)a2 && *(_DWORD *)(*(_QWORD *)a2 + 4))
  {
    v5 = (unsigned __int8 *)(a1 + 16);
    if (__ldaxr((unsigned __int8 *)(a1 + 16)))
    {
      __clrex();
    }
    else if (!__stxr(1u, v5))
    {
LABEL_8:
      if (*(_BYTE *)(a1 + 32))
      {
        WTF::String::isolatedCopy();
        v10 = v9;
        WTF::HashTable<WebCore::PublicSuffix,WebCore::PublicSuffix,WTF::IdentityExtractor,WTF::DefaultHash<WebCore::PublicSuffix>,WTF::HashTraits<WebCore::PublicSuffix>,WTF::HashTraits<WebCore::PublicSuffix>>::add((uint64_t)&v9, (uint64_t *)(a1 + 24), (uint64_t *)&v10);
        result = (uint64_t)v10;
        if (v10)
        {
          if (*(_DWORD *)v10 == 2)
            result = WTF::StringImpl::destroy(v10, v7);
          else
            *(_DWORD *)v10 -= 2;
        }
        v8 = __ldxr(v5);
        if (v8 == 1)
        {
          if (!__stlxr(0, v5))
            return result;
        }
        else
        {
          __clrex();
        }
        return WTF::Lock::unlockSlow((WTF::Lock *)(a1 + 16));
      }
LABEL_21:
      __break(1u);
      return result;
    }
    result = MEMORY[0x19AEA534C](a1 + 16);
    goto LABEL_8;
  }
  return result;
}

void sub_19513A3B8(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, WTF::StringImpl *a12)
{
  unsigned __int8 *v12;
  int v14;

  if (a12)
  {
    if (*(_DWORD *)a12 == 2)
      WTF::StringImpl::destroy(a12, a2);
    else
      *(_DWORD *)a12 -= 2;
  }
  v14 = __ldxr(v12);
  if (v14 == 1)
  {
    if (!__stlxr(0, v12))
LABEL_10:
      _Unwind_Resume(exception_object);
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v12);
  goto LABEL_10;
}

void WebCore::PlatformContentFilter::unblockRequestDeniedScript(_QWORD *a1@<X8>)
{
  _DWORD *v2;

  v2 = (_DWORD *)*MEMORY[0x1E0CBF738];
  if (*MEMORY[0x1E0CBF738])
    *v2 += 2;
  *a1 = v2;
}

uint64_t WebCore::PlaybackSessionModelMediaElement::ptrCount(WebCore::PlaybackSessionModelMediaElement *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t WebCore::PlaybackSessionModelMediaElement::ptrCountWithoutThreadCheck(WebCore::PlaybackSessionModelMediaElement *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t WebCore::PlaybackSessionModelMediaElement::incrementPtrCount(uint64_t this)
{
  ++*(_DWORD *)(this + 40);
  return this;
}

uint64_t WebCore::PlaybackSessionModelMediaElement::decrementPtrCount(uint64_t this)
{
  int v1;

  v1 = *(_DWORD *)(this + 40);
  if (v1)
  {
    *(_DWORD *)(this + 40) = v1 - 1;
  }
  else
  {
    this = 286;
    __break(0xC471u);
  }
  return this;
}

uint64_t WebCore::PlaybackSessionModelMediaElement::isScrubbing(WebCore::PlaybackSessionModelMediaElement *this)
{
  return 0;
}

uint64_t WebCore::PlaybackSessionModelMediaElement::soundStageSize(WebCore::PlaybackSessionModelMediaElement *this)
{
  return *((unsigned __int8 *)this + 104);
}

uint64_t WebCore::PlaybackSessionModelMediaElement::setSoundStageSize(uint64_t result, char a2)
{
  *(_BYTE *)(result + 104) = a2;
  return result;
}

BOOL WebCore::EventListener::operator==(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t WebCore::EventListener::isAttribute(WebCore::EventListener *this)
{
  return 0;
}

uint64_t WebCore::EventListener::jsFunction(WebCore::EventListener *this)
{
  return 0;
}

uint64_t WebCore::EventListener::wrapper(WebCore::EventListener *this)
{
  return 0;
}

void WebCore::PasteboardItemInfo::~PasteboardItemInfo(WebCore::PasteboardItemInfo *this, WTF::StringImpl *a2)
{
  uint64_t v3;
  WTF *v4;
  WTF::StringImpl *v5;
  uint64_t v6;
  WTF *v7;
  uint64_t v8;
  WTF *v9;
  uint64_t v10;
  WTF *v11;
  WTF::StringImpl **v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl **v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl **v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  WTF::StringImpl **v21;
  uint64_t v22;
  WTF::StringImpl *v23;

  v3 = *((unsigned int *)this + 27);
  if ((_DWORD)v3)
  {
    v12 = (WTF::StringImpl **)*((_QWORD *)this + 12);
    v13 = 8 * v3;
    do
    {
      v14 = *v12;
      *v12 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, a2);
        else
          *(_DWORD *)v14 -= 2;
      }
      ++v12;
      v13 -= 8;
    }
    while (v13);
  }
  v4 = (WTF *)*((_QWORD *)this + 12);
  if (v4)
  {
    *((_QWORD *)this + 12) = 0;
    *((_DWORD *)this + 26) = 0;
    WTF::fastFree(v4, a2);
  }
  v5 = (WTF::StringImpl *)*((_QWORD *)this + 6);
  *((_QWORD *)this + 6) = 0;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, a2);
    else
      *(_DWORD *)v5 -= 2;
  }
  v6 = *((unsigned int *)this + 11);
  if ((_DWORD)v6)
  {
    v15 = (WTF::StringImpl **)*((_QWORD *)this + 4);
    v16 = 8 * v6;
    do
    {
      v17 = *v15;
      *v15 = 0;
      if (v17)
      {
        if (*(_DWORD *)v17 == 2)
          WTF::StringImpl::destroy(v17, a2);
        else
          *(_DWORD *)v17 -= 2;
      }
      ++v15;
      v16 -= 8;
    }
    while (v16);
  }
  v7 = (WTF *)*((_QWORD *)this + 4);
  if (v7)
  {
    *((_QWORD *)this + 4) = 0;
    *((_DWORD *)this + 10) = 0;
    WTF::fastFree(v7, a2);
  }
  v8 = *((unsigned int *)this + 7);
  if ((_DWORD)v8)
  {
    v18 = (WTF::StringImpl **)*((_QWORD *)this + 2);
    v19 = 8 * v8;
    do
    {
      v20 = *v18;
      *v18 = 0;
      if (v20)
      {
        if (*(_DWORD *)v20 == 2)
          WTF::StringImpl::destroy(v20, a2);
        else
          *(_DWORD *)v20 -= 2;
      }
      ++v18;
      v19 -= 8;
    }
    while (v19);
  }
  v9 = (WTF *)*((_QWORD *)this + 2);
  if (v9)
  {
    *((_QWORD *)this + 2) = 0;
    *((_DWORD *)this + 6) = 0;
    WTF::fastFree(v9, a2);
  }
  v10 = *((unsigned int *)this + 3);
  if ((_DWORD)v10)
  {
    v21 = *(WTF::StringImpl ***)this;
    v22 = 8 * v10;
    do
    {
      v23 = *v21;
      *v21 = 0;
      if (v23)
      {
        if (*(_DWORD *)v23 == 2)
          WTF::StringImpl::destroy(v23, a2);
        else
          *(_DWORD *)v23 -= 2;
      }
      ++v21;
      v22 -= 8;
    }
    while (v22);
  }
  v11 = *(WTF **)this;
  if (*(_QWORD *)this)
  {
    *(_QWORD *)this = 0;
    *((_DWORD *)this + 2) = 0;
    WTF::fastFree(v11, a2);
  }
}

uint64_t WTF::find<char16_t,(void *)0>(uint64_t result, unint64_t a2, unsigned int a3, unint64_t a4, double a5, double a6, float a7)
{
  int16x8_t *v7;
  unint64_t v8;
  unint64_t v9;
  int16x8_t v10;
  int8x16_t v11;
  int16x8_t *v12;
  __int8 *v13;

  if (a2 <= a4)
    return -1;
  v7 = (int16x8_t *)(result + 2 * a4);
  v8 = result + 2 * a2;
  v9 = v8 - (_QWORD)v7;
  if ((uint64_t)(v8 - (_QWORD)v7) <= -2)
  {
    __break(1u);
    return result;
  }
  if (v9 <= 0x3E)
  {
    while (v7->u16[0] != a3)
    {
      v7 = (int16x8_t *)((char *)v7 + 2);
      v9 -= 2;
      if (!v9)
        return -1;
    }
    goto LABEL_15;
  }
  v10 = vdupq_n_s16(a3);
  if ((unint64_t)&v7->u64[1] + 6 >= v8)
  {
    v12 = (int16x8_t *)(result + 2 * a4);
LABEL_12:
    if ((unint64_t)v12 < v8)
    {
      v7 = (int16x8_t *)(v8 - 16);
      v11 = (int8x16_t)vceqq_s16(*(int16x8_t *)(v8 - 16), v10);
      v10.i16[0] = vmaxvq_u16((uint16x8_t)v11);
      if (v10.i32[0])
        goto LABEL_14;
    }
    return -1;
  }
  while (1)
  {
    v11 = (int8x16_t)vceqq_s16(*v7, v10);
    LOWORD(a7) = vmaxvq_u16((uint16x8_t)v11);
    if (a7 != 0.0)
      break;
    v12 = v7 + 1;
    v13 = &v7[1].i8[14];
    ++v7;
    if ((unint64_t)v13 >= v8)
      goto LABEL_12;
  }
LABEL_14:
  v7 = (int16x8_t *)((char *)v7
                   + 2 * vminvq_u16((uint16x8_t)vornq_s8((int8x16_t)xmmword_196881010, v11)));
LABEL_15:
  if (v7 == (int16x8_t *)v8)
    return -1;
  else
    return ((uint64_t)v7->i64 - result) >> 1;
}

_QWORD *std::__function::__func<WebCore::NetworkExtensionContentFilter::unblockHandler(void)::$_0,std::allocator<WebCore::NetworkExtensionContentFilter::unblockHandler(void)::$_0>,void ()(std::function<void ()(BOOL)>)>::~__func(_QWORD *a1)
{
  const void *v2;

  v2 = (const void *)a1[1];
  *a1 = &off_1E33400A0;
  a1[1] = 0;
  if (v2)
    CFRelease(v2);
  return a1;
}

void std::__function::__func<WebCore::NetworkExtensionContentFilter::unblockHandler(void)::$_0,std::allocator<WebCore::NetworkExtensionContentFilter::unblockHandler(void)::$_0>,void ()(std::function<void ()(BOOL)>)>::~__func(_QWORD *a1)
{
  const void *v2;

  v2 = (const void *)a1[1];
  *a1 = &off_1E33400A0;
  a1[1] = 0;
  if (v2)
    CFRelease(v2);
  JUMPOUT(0x19AEA7644);
}

_QWORD *std::__function::__func<WebCore::NetworkExtensionContentFilter::unblockHandler(void)::$_0,std::allocator<WebCore::NetworkExtensionContentFilter::unblockHandler(void)::$_0>,void ()(std::function<void ()(BOOL)>)>::__clone(uint64_t a1)
{
  _QWORD *v2;
  const void *v3;

  v2 = operator new(0x10uLL);
  v3 = *(const void **)(a1 + 8);
  *v2 = &off_1E33400A0;
  v2[1] = v3;
  if (v3)
    CFRetain(v3);
  return v2;
}

void sub_19513A960(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

CFTypeRef std::__function::__func<WebCore::NetworkExtensionContentFilter::unblockHandler(void)::$_0,std::allocator<WebCore::NetworkExtensionContentFilter::unblockHandler(void)::$_0>,void ()(std::function<void ()(BOOL)>)>::__clone(uint64_t a1, _QWORD *a2)
{
  CFTypeRef result;

  result = *(CFTypeRef *)(a1 + 8);
  *a2 = &off_1E33400A0;
  a2[1] = result;
  if (result)
    return CFRetain(result);
  return result;
}

void std::__function::__func<WebCore::NetworkExtensionContentFilter::unblockHandler(void)::$_0,std::allocator<WebCore::NetworkExtensionContentFilter::unblockHandler(void)::$_0>,void ()(std::function<void ()(BOOL)>)>::destroy(uint64_t a1)
{
  const void *v2;

  v2 = *(const void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v2)
    CFRelease(v2);
}

void std::__function::__func<WebCore::NetworkExtensionContentFilter::unblockHandler(void)::$_0,std::allocator<WebCore::NetworkExtensionContentFilter::unblockHandler(void)::$_0>,void ()(std::function<void ()(BOOL)>)>::destroy_deallocate(_QWORD *__p)
{
  const void *v2;

  v2 = (const void *)__p[1];
  __p[1] = 0;
  if (v2)
    CFRelease(v2);
  operator delete(__p);
}

_QWORD *std::__function::__func<WebCore::NetworkExtensionContentFilter::unblockHandler(void)::$_0,std::allocator<WebCore::NetworkExtensionContentFilter::unblockHandler(void)::$_0>,void ()(std::function<void ()(BOOL)>)>::operator()(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  void *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *result;
  uint64_t v10;
  _QWORD v11[3];
  _QWORD *v12;
  _QWORD v13[3];
  _QWORD *v14;
  _QWORD v15[4];
  _BYTE v16[24];
  _BYTE *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = (_QWORD *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      v12 = v11;
      (*(void (**)(_QWORD *, _QWORD *))(*a2 + 24))(a2, v11);
      v3 = v12;
    }
    else
    {
      v12 = (_QWORD *)a2[3];
      a2[3] = 0;
    }
  }
  else
  {
    v12 = 0;
  }
  v4 = *(void **)(a1 + 8);
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3321888768;
  v15[2] = ___ZZNK7WebCore29NetworkExtensionContentFilter14unblockHandlerEvENK3__0clENSt3__18functionIFvbEEE_block_invoke;
  v15[3] = &__block_descriptor_64_e8_32c141_ZTSKZZNK7WebCore29NetworkExtensionContentFilter14unblockHandlerEvENK3__0clENSt3__18functionIFvbEEEEUl20NEFilterSourceStatusP12NSDictionaryE__e25_v24__0q8__NSDictionary_16l;
  v5 = v16;
  if (!v3)
  {
    v14 = 0;
    goto LABEL_14;
  }
  if (v3 == v11)
  {
    v14 = v13;
    (*(void (**)(_QWORD *, _QWORD *))(v11[0] + 24))(v11, v13);
    v3 = v14;
    if (v14)
      goto LABEL_12;
LABEL_14:
    v17 = v3;
    goto LABEL_15;
  }
  v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
  v14 = v3;
  if (!v3)
    goto LABEL_14;
LABEL_12:
  if (v3 != v13)
  {
    v3 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v3 + 16))(v3);
    goto LABEL_14;
  }
  v17 = v16;
  (*(void (**)(_QWORD *, _BYTE *))(v13[0] + 24))(v13, v16);
LABEL_15:
  objc_msgSend(v4, "remediateWithDecisionHandler:", v15);
  v6 = v14;
  if (v14 == v13)
  {
    v7 = 4;
    v6 = v13;
  }
  else
  {
    if (!v14)
      goto LABEL_20;
    v7 = 5;
  }
  (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_20:
  if (v17 == v16)
  {
    v8 = 4;
  }
  else
  {
    if (!v17)
      goto LABEL_25;
    v8 = 5;
    v5 = v17;
  }
  (*(void (**)(_QWORD *))(*v5 + 8 * v8))(v5);
LABEL_25:
  result = v12;
  if (v12 == v11)
  {
    v10 = 4;
    result = v11;
  }
  else
  {
    if (!v12)
      return result;
    v10 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v10))();
}

void sub_19513ABD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char *a13, char a14, uint64_t a15, uint64_t a16, char *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;

  v26 = a17;
  if (a17 == &a14)
  {
    v27 = 4;
    v26 = &a14;
  }
  else
  {
    if (!a17)
      goto LABEL_6;
    v27 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v26 + 8 * v27))();
LABEL_6:
  v28 = a13;
  if (a13 == &a10)
  {
    v29 = 4;
    v28 = &a10;
  }
  else
  {
    if (!a13)
      goto LABEL_11;
    v29 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v28 + 8 * v29))();
LABEL_11:
  _Unwind_Resume(exception_object);
}

uint64_t ___ZZNK7WebCore29NetworkExtensionContentFilter14unblockHandlerEvENK3__0clENSt3__18functionIFvbEEE_block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(_QWORD *)(a1 + 56);
  v6 = a2 == 1;
  if (v2)
    return (*(uint64_t (**)(uint64_t, BOOL *))(*(_QWORD *)v2 + 48))(v2, &v6);
  v4 = std::__throw_bad_function_call[abi:sn180100]();
  return __copy_helper_block_e8_32c141_ZTSKZZNK7WebCore29NetworkExtensionContentFilter14unblockHandlerEvENK3__0clENSt3__18functionIFvbEEEEUl20NEFilterSourceStatusP12NSDictionaryE_(v4, v5);
}

uint64_t __copy_helper_block_e8_32c141_ZTSKZZNK7WebCore29NetworkExtensionContentFilter14unblockHandlerEvENK3__0clENSt3__18functionIFvbEEEEUl20NEFilterSourceStatusP12NSDictionaryE_(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a2 + 56);
  if (result)
  {
    if (result == a2 + 32)
    {
      *(_QWORD *)(a1 + 56) = a1 + 32;
      return (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a2 + 56) + 24))(*(_QWORD *)(a2 + 56), a1 + 32);
    }
    else
    {
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
      *(_QWORD *)(a1 + 56) = result;
    }
  }
  else
  {
    *(_QWORD *)(a1 + 56) = 0;
  }
  return result;
}

_QWORD *__destroy_helper_block_e8_32c141_ZTSKZZNK7WebCore29NetworkExtensionContentFilter14unblockHandlerEvENK3__0clENSt3__18functionIFvbEEEEUl20NEFilterSourceStatusP12NSDictionaryE_(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 32);
  result = *(_QWORD **)(a1 + 56);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

_QWORD *WTF::ListHashSet<WTF::String,WTF::DefaultHash<WTF::String>>::~ListHashSet(_QWORD *a1, WTF::StringImpl *a2)
{
  void *v3;

  WTF::ListHashSet<WTF::String,WTF::DefaultHash<WTF::String>>::deleteAllNodes((uint64_t)a1, a2);
  if (*a1)
    WTF::fastFree((WTF *)(*a1 - 16), v3);
  return a1;
}

uint64_t WTF::ListHashSet<WTF::String,WTF::DefaultHash<WTF::String>>::deleteAllNodes(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t result;
  uint64_t v3;
  WTF *v4;
  void *v5;

  result = *(_QWORD *)(a1 + 8);
  if (result)
  {
    do
    {
      v3 = *(_QWORD *)(result + 16);
      WebCore::ContentType::~ContentType((WTF::StringImpl **)result, a2);
      WTF::fastFree(v4, v5);
      result = v3;
    }
    while (v3);
  }
  return result;
}

uint64_t WTF::map<0ul,WTF::CrashOnOverflow,16ul,WTF::Vector<WTF::String,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> WTF::copyToVectorOf<WTF::String,WTF::ListHashSet<WTF::String,WTF::DefaultHash<WTF::String>>>(WTF::ListHashSet<WTF::String,WTF::DefaultHash<WTF::String>> const&)::{lambda(WTF::String&&)#1},WTF::ListHashSet<WTF::String,WTF::DefaultHash<WTF::String>> const>@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  return WTF::Mapper<WTF::Vector<WTF::String,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> WTF::copyToVectorOf<WTF::String,WTF::ListHashSet<WTF::String,WTF::DefaultHash<WTF::String>>>(WTF::ListHashSet<WTF::String,WTF::DefaultHash<WTF::String>> const&)::{lambda(WTF::String&&)#1},WTF::Vector<WTF::String,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>,WTF::ListHashSet<WTF::String,WTF::DefaultHash<WTF::String>> const&,void>::map((uint64_t)a2, a1);
}

void sub_19513AE00(_Unwind_Exception *a1, WTF::StringImpl *a2)
{
  uint64_t v2;

  WTF::Vector<WTF::AtomString,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector(v2, a2);
  _Unwind_Resume(a1);
}

uint64_t WTF::Mapper<WTF::Vector<WTF::String,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> WTF::copyToVectorOf<WTF::String,WTF::ListHashSet<WTF::String,WTF::DefaultHash<WTF::String>>>(WTF::ListHashSet<WTF::String,WTF::DefaultHash<WTF::String>> const&)::{lambda(WTF::String&&)#1},WTF::Vector<WTF::String,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>,WTF::ListHashSet<WTF::String,WTF::DefaultHash<WTF::String>> const&,void>::map(uint64_t result, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  _DWORD *v8;
  unsigned int v9;

  v3 = result;
  if (*a2)
  {
    v4 = *(unsigned int *)(*a2 - 12);
    if ((_DWORD)v4)
    {
      if (v4 >> 29)
      {
        __break(0xC471u);
        return result;
      }
      result = WTF::fastMalloc((WTF *)(8 * v4));
      *(_DWORD *)(v3 + 8) = v4;
      *(_QWORD *)v3 = result;
    }
  }
  v5 = a2[1];
  if (v5)
  {
    v6 = *(_QWORD *)v3;
    v7 = *(_DWORD *)(v3 + 12);
    do
    {
      v8 = *(_DWORD **)v5;
      if (*(_QWORD *)v5)
        *v8 += 2;
      v9 = v7 + 1;
      *(_QWORD *)(v6 + 8 * v7) = v8;
      v5 = *(_QWORD *)(v5 + 16);
      ++v7;
    }
    while (v5);
    *(_DWORD *)(v3 + 12) = v9;
  }
  return result;
}

unint64_t WTF::Vector<WebCore::PasteboardItemInfo,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v3 = a3;
  v5 = *(_QWORD *)a1;
  if (*(_QWORD *)a1 > a3 || v5 + 120 * (unint64_t)*(unsigned int *)(a1 + 12) <= a3)
  {
    v9 = *(unsigned int *)(a1 + 8) + ((unint64_t)*(unsigned int *)(a1 + 8) >> 2);
    if (v9 >= 0x10)
      v10 = v9 + 1;
    else
      v10 = 16;
    if (v10 > a2)
      a2 = v10;
    WTF::Vector<WebCore::PasteboardItemInfo,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
  }
  else
  {
    v6 = a3 - v5;
    v7 = *(unsigned int *)(a1 + 8) + ((unint64_t)*(unsigned int *)(a1 + 8) >> 2);
    if (v7 >= 0x10)
      v8 = v7 + 1;
    else
      v8 = 16;
    if (v8 > a2)
      a2 = v8;
    WTF::Vector<WebCore::PasteboardItemInfo,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
    return *(_QWORD *)a1 + v6;
  }
  return v3;
}

uint64_t WTF::Vector<WebCore::PasteboardItemInfo,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  WTF *v3;
  unsigned int v4;
  int v5;
  WTF::StringImpl *v6;
  uint64_t v7;
  WTF *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  if (*(unsigned int *)(result + 8) < a2)
  {
    if (a2 >= 0x2222223)
    {
      __break(0xC471u);
    }
    else
    {
      v2 = result;
      v3 = *(WTF **)result;
      v4 = *(_DWORD *)(result + 12);
      v5 = 120 * a2;
      result = WTF::fastMalloc((WTF *)(120 * a2));
      *(_DWORD *)(v2 + 8) = (v5 & 0xFFFFFFF8) / 0x78;
      *(_QWORD *)v2 = result;
      if (v4)
      {
        v7 = result;
        result = (uint64_t)v3;
        do
        {
          *(_QWORD *)v7 = 0;
          *(_QWORD *)(v7 + 8) = 0;
          v8 = *(WTF **)result;
          *(_QWORD *)result = 0;
          *(_QWORD *)v7 = v8;
          LODWORD(v8) = *(_DWORD *)(result + 8);
          *(_DWORD *)(result + 8) = 0;
          *(_DWORD *)(v7 + 8) = (_DWORD)v8;
          LODWORD(v8) = *(_DWORD *)(result + 12);
          *(_DWORD *)(result + 12) = 0;
          *(_DWORD *)(v7 + 12) = (_DWORD)v8;
          *(_QWORD *)(v7 + 16) = 0;
          *(_QWORD *)(v7 + 24) = 0;
          v9 = *(_QWORD *)(result + 16);
          *(_QWORD *)(result + 16) = 0;
          *(_QWORD *)(v7 + 16) = v9;
          LODWORD(v9) = *(_DWORD *)(result + 24);
          *(_DWORD *)(result + 24) = 0;
          *(_DWORD *)(v7 + 24) = v9;
          LODWORD(v9) = *(_DWORD *)(result + 28);
          *(_DWORD *)(result + 28) = 0;
          *(_DWORD *)(v7 + 28) = v9;
          *(_QWORD *)(v7 + 32) = 0;
          *(_QWORD *)(v7 + 40) = 0;
          v10 = *(_QWORD *)(result + 32);
          *(_QWORD *)(result + 32) = 0;
          *(_QWORD *)(v7 + 32) = v10;
          LODWORD(v10) = *(_DWORD *)(result + 40);
          *(_DWORD *)(result + 40) = 0;
          *(_DWORD *)(v7 + 40) = v10;
          LODWORD(v10) = *(_DWORD *)(result + 44);
          *(_DWORD *)(result + 44) = 0;
          *(_DWORD *)(v7 + 44) = v10;
          v11 = *(_QWORD *)(result + 48);
          *(_QWORD *)(result + 48) = 0;
          *(_QWORD *)(v7 + 48) = v11;
          v12 = *(_OWORD *)(result + 56);
          v13 = *(_OWORD *)(result + 72);
          *(_WORD *)(v7 + 88) = *(_WORD *)(result + 88);
          *(_OWORD *)(v7 + 72) = v13;
          *(_OWORD *)(v7 + 56) = v12;
          *(_QWORD *)(v7 + 96) = 0;
          *(_QWORD *)(v7 + 104) = 0;
          v14 = *(_QWORD *)(result + 96);
          *(_QWORD *)(result + 96) = 0;
          *(_QWORD *)(v7 + 96) = v14;
          LODWORD(v14) = *(_DWORD *)(result + 104);
          *(_DWORD *)(result + 104) = 0;
          *(_DWORD *)(v7 + 104) = v14;
          LODWORD(v14) = *(_DWORD *)(result + 108);
          *(_DWORD *)(result + 108) = 0;
          *(_DWORD *)(v7 + 108) = v14;
          *(_BYTE *)(v7 + 112) = *(_BYTE *)(result + 112);
          WebCore::PasteboardItemInfo::~PasteboardItemInfo((WebCore::PasteboardItemInfo *)result, v6);
          result = v15 + 120;
          v7 += 120;
        }
        while ((WTF *)result != (WTF *)((char *)v3 + 120 * v4));
      }
      if (v3)
      {
        if (*(WTF **)v2 == v3)
        {
          *(_QWORD *)v2 = 0;
          *(_DWORD *)(v2 + 8) = 0;
        }
        return WTF::fastFree(v3, v6);
      }
    }
  }
  return result;
}

uint64_t *WTF::HashTable<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>,WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>,WTF::IdentityExtractor,WTF::DefaultHash<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>,WTF::HashTraits<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>,WTF::HashTraits<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>>::add@<X0>(uint64_t *result@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v4;
  uint64_t v6;
  char v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  unsigned int v25;
  char v26;
  uint64_t v27;

  v4 = result;
  v6 = *result;
  if (*result
    || (result = WTF::HashTable<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>,WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>,WTF::IdentityExtractor,WTF::DefaultHash<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>,WTF::HashTraits<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>,WTF::HashTraits<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>>::rehash(result, 8u, 0), (v6 = *v4) != 0))
  {
    v7 = 0;
    v8 = *(_DWORD *)(v6 - 8);
  }
  else
  {
    v8 = 0;
    v7 = 1;
  }
  v9 = *a2;
  v10 = ~(*a2 << 32) + *a2;
  v11 = 9
      * (((v10 ^ (v10 >> 22)) + ~((v10 ^ (v10 >> 22)) << 13)) ^ (((v10 ^ (v10 >> 22)) + ~((v10 ^ (v10 >> 22)) << 13)) >> 8));
  v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
  v13 = v8 & ((v12 >> 31) ^ v12);
  v14 = (uint64_t *)(v6 + 8 * v13);
  v15 = *v14;
  if (*v14)
  {
    v16 = 0;
    v17 = 1;
    do
    {
      if (v15 == v9)
      {
        if ((v7 & 1) != 0)
          v20 = 0;
        else
          v20 = *(unsigned int *)(v6 - 4);
        v26 = 0;
        v27 = v6 + 8 * v20;
        goto LABEL_35;
      }
      if (v15 == -1)
        v16 = v14;
      v13 = (v13 + v17) & v8;
      v14 = (uint64_t *)(v6 + 8 * v13);
      v15 = *v14;
      ++v17;
    }
    while (*v14);
    if (v16)
    {
      *v16 = 0;
      --*(_DWORD *)(*v4 - 16);
      v9 = *a2;
      v14 = v16;
    }
  }
  *a2 = 0;
  result = (uint64_t *)*v14;
  *v14 = v9;
  if (result)
    result = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*result + 40))(result);
  v18 = *v4;
  if (*v4)
    v19 = *(_DWORD *)(v18 - 12) + 1;
  else
    v19 = 1;
  *(_DWORD *)(v18 - 12) = v19;
  v21 = *v4;
  if (*v4)
    v22 = *(_DWORD *)(v21 - 12);
  else
    v22 = 0;
  v23 = (*(_DWORD *)(v21 - 16) + v22);
  v24 = *(unsigned int *)(v21 - 4);
  if (v24 > 0x400)
  {
    if (v24 <= 2 * v23)
      goto LABEL_30;
  }
  else if (3 * v24 <= 4 * v23)
  {
    if (!(_DWORD)v24)
    {
      v25 = 8;
      goto LABEL_31;
    }
LABEL_30:
    v25 = (_DWORD)v24 << (6 * *(_DWORD *)(v21 - 12) >= (2 * v24));
LABEL_31:
    result = WTF::HashTable<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>,WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>,WTF::IdentityExtractor,WTF::DefaultHash<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>,WTF::HashTraits<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>,WTF::HashTraits<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>>::rehash(v4, v25, v14);
    v14 = result;
    v21 = *v4;
    if (*v4)
      v24 = *(unsigned int *)(v21 - 4);
    else
      v24 = 0;
  }
  v27 = v21 + 8 * v24;
  v26 = 1;
LABEL_35:
  *(_QWORD *)a3 = v14;
  *(_QWORD *)(a3 + 8) = v27;
  *(_BYTE *)(a3 + 16) = v26;
  return result;
}

_QWORD *WTF::HashTable<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>,WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>,WTF::IdentityExtractor,WTF::DefaultHash<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>,WTF::HashTraits<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>,WTF::HashTraits<WTF::CheckedPtr<WebCore::PlaybackSessionModelClient,WTF::RawPtrTraits<WebCore::PlaybackSessionModelClient>>>>::rehash(uint64_t *a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unsigned int v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *result;

  v6 = *a1;
  if (*a1)
  {
    v7 = *(_DWORD *)(v6 - 4);
    v8 = *(_DWORD *)(v6 - 12);
  }
  else
  {
    v7 = 0;
    v8 = 0;
  }
  v9 = WTF::fastZeroedMalloc((WTF *)(8 * a2 + 16));
  *a1 = v9 + 16;
  *(_DWORD *)(v9 + 12) = a2;
  *(_DWORD *)(*a1 - 8) = a2 - 1;
  *(_DWORD *)(*a1 - 16) = 0;
  *(_DWORD *)(*a1 - 12) = v8;
  if (v7)
  {
    v11 = 0;
    v12 = 0;
    do
    {
      v13 = (_QWORD *)(v6 + 8 * v11);
      v14 = *v13;
      if ((unint64_t)(*v13 + 1) >= 2)
      {
        v15 = *a1;
        if (*a1)
          v16 = *(_DWORD *)(v15 - 8);
        else
          v16 = 0;
        v17 = (~(v14 << 32) + v14) ^ ((unint64_t)(~(v14 << 32) + v14) >> 22);
        v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
        v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
        v20 = v16 & ((v19 >> 31) ^ v19);
        v21 = 1;
        do
        {
          v22 = v20;
          v23 = *(_QWORD *)(v15 + 8 * v20);
          v20 = (v20 + v21++) & v16;
        }
        while (v23);
        v24 = (_QWORD *)(v15 + 8 * v22);
        *v13 = 0;
        *v24 = v14;
        if (*v13)
          (*(void (**)(_QWORD))(*(_QWORD *)*v13 + 40))(*v13);
        if (v13 == a3)
          v12 = v24;
      }
      ++v11;
    }
    while (v11 != v7);
  }
  else
  {
    v12 = 0;
    result = 0;
    if (!v6)
      return result;
  }
  WTF::fastFree((WTF *)(v6 - 16), v10);
  return v12;
}

uint64_t *WTF::HashTable<WebCore::TextTrack::Kind,WebCore::TextTrack::Kind,WTF::IdentityExtractor,WTF::DefaultHash<WebCore::TextTrack::Kind>,WTF::HashTraits<WebCore::TextTrack::Kind>,WTF::HashTraits<WebCore::TextTrack::Kind>>::add@<X0>(uint64_t *result@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v4;
  uint64_t v6;
  char v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int *v13;
  int v14;
  int *v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  v4 = result;
  v6 = *result;
  if (*result
    || (result = (uint64_t *)WTF::HashTable<WebCore::TextTrack::Kind,WebCore::TextTrack::Kind,WTF::IdentityExtractor,WTF::DefaultHash<WebCore::TextTrack::Kind>,WTF::HashTraits<WebCore::TextTrack::Kind>,WTF::HashTraits<WebCore::TextTrack::Kind>>::rehash(result, 8u, 0), (v6 = *v4) != 0))
  {
    v7 = 0;
    v8 = *(_DWORD *)(v6 - 8);
  }
  else
  {
    v8 = 0;
    v7 = 1;
  }
  v9 = *a2;
  v10 = 9 * ((v9 + ~(v9 << 15)) ^ ((v9 + ~(v9 << 15)) >> 10));
  v11 = (v10 ^ (v10 >> 6)) + ~((v10 ^ (v10 >> 6)) << 11);
  v12 = (v11 ^ HIWORD(v11)) & v8;
  v13 = (int *)(v6 + 4 * v12);
  v14 = *v13;
  if (*v13 != 0x7FFFFFFF)
  {
    v15 = 0;
    v16 = 1;
    do
    {
      if (v14 == v9)
      {
        if ((v7 & 1) != 0)
          v24 = 0;
        else
          v24 = *(unsigned int *)(v6 - 4);
        v25 = 0;
        v26 = v6 + 4 * v24;
        goto LABEL_33;
      }
      if (v14 == 2147483646)
        v15 = v13;
      v12 = (v12 + v16) & v8;
      v13 = (int *)(v6 + 4 * v12);
      v14 = *v13;
      ++v16;
    }
    while (*v13 != 0x7FFFFFFF);
    if (v15)
    {
      *v15 = 0x7FFFFFFF;
      --*(_DWORD *)(*v4 - 16);
      v9 = *a2;
      v13 = v15;
    }
  }
  *v13 = v9;
  v17 = *v4;
  if (*v4)
    v18 = *(_DWORD *)(v17 - 12) + 1;
  else
    v18 = 1;
  *(_DWORD *)(v17 - 12) = v18;
  v19 = *v4;
  if (*v4)
    v20 = *(_DWORD *)(v19 - 12);
  else
    v20 = 0;
  v21 = (*(_DWORD *)(v19 - 16) + v20);
  v22 = *(unsigned int *)(v19 - 4);
  if (v22 > 0x400)
  {
    if (v22 <= 2 * v21)
      goto LABEL_21;
  }
  else if (3 * v22 <= 4 * v21)
  {
    if (!(_DWORD)v22)
    {
      v23 = 8;
LABEL_26:
      result = (uint64_t *)WTF::HashTable<WebCore::TextTrack::Kind,WebCore::TextTrack::Kind,WTF::IdentityExtractor,WTF::DefaultHash<WebCore::TextTrack::Kind>,WTF::HashTraits<WebCore::TextTrack::Kind>,WTF::HashTraits<WebCore::TextTrack::Kind>>::rehash(v4, v23, v13);
      v13 = (int *)result;
      v19 = *v4;
      if (*v4)
        v22 = *(unsigned int *)(v19 - 4);
      else
        v22 = 0;
      goto LABEL_32;
    }
LABEL_21:
    v23 = (_DWORD)v22 << (6 * *(_DWORD *)(v19 - 12) >= (2 * v22));
    goto LABEL_26;
  }
LABEL_32:
  v26 = v19 + 4 * v22;
  v25 = 1;
LABEL_33:
  *(_QWORD *)a3 = v13;
  *(_QWORD *)(a3 + 8) = v26;
  *(_BYTE *)(a3 + 16) = v25;
  return result;
}

int *WTF::HashTable<WebCore::TextTrack::Kind,WebCore::TextTrack::Kind,WTF::IdentityExtractor,WTF::DefaultHash<WebCore::TextTrack::Kind>,WTF::HashTraits<WebCore::TextTrack::Kind>,WTF::HashTraits<WebCore::TextTrack::Kind>>::rehash(uint64_t *a1, unsigned int a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  int *v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  int *v22;

  v6 = *a1;
  if (*a1)
  {
    v7 = *(_DWORD *)(v6 - 4);
    v8 = *(_DWORD *)(v6 - 12);
  }
  else
  {
    v7 = 0;
    v8 = 0;
  }
  v9 = WTF::fastMalloc((WTF *)(4 * a2 + 16));
  v11 = v9;
  v12 = v9 + 16;
  if (a2)
    memset_pattern16((void *)(v9 + 16), &unk_1968C1930, 4 * a2);
  *a1 = v12;
  *(_DWORD *)(v11 + 12) = a2;
  *(_DWORD *)(*a1 - 8) = a2 - 1;
  *(_DWORD *)(*a1 - 16) = 0;
  *(_DWORD *)(*a1 - 12) = v8;
  if (!v7)
  {
    v14 = 0;
    if (!v6)
      return v14;
    goto LABEL_18;
  }
  v13 = 0;
  v14 = 0;
  do
  {
    v15 = (int *)(v6 + 4 * v13);
    v16 = *v15;
    if (*v15 <= 2147483645)
    {
      v17 = *a1;
      if (*a1)
        v18 = *(_DWORD *)(v17 - 8);
      else
        v18 = 0;
      v19 = 0;
      v20 = 9 * ((v16 + ~(v16 << 15)) ^ ((v16 + ~(v16 << 15)) >> 10));
      v21 = ((v20 ^ (v20 >> 6)) + ~((v20 ^ (v20 >> 6)) << 11)) ^ (((v20 ^ (v20 >> 6)) + ~((v20 ^ (v20 >> 6)) << 11)) >> 16);
      do
      {
        v10 = v21 & v18;
        v21 = ++v19 + v10;
      }
      while (*(_DWORD *)(v17 + 4 * v10) != 0x7FFFFFFF);
      v22 = (int *)(v17 + 4 * v10);
      *v22 = v16;
      if (v15 == a3)
        v14 = v22;
    }
    ++v13;
  }
  while (v13 != v7);
  if (v6)
LABEL_18:
    WTF::fastFree((WTF *)(v6 - 16), (void *)v10);
  return v14;
}

_QWORD *WTF::Detail::CallableWrapper<WebCore::PowerSourceNotifier::PowerSourceNotifier(WTF::Function<void ()(BOOL)> &&)::$_1,void>::~CallableWrapper(_QWORD *a1, void *a2)
{
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;

  v3 = (unsigned int *)a1[1];
  *a1 = &off_1E3340118;
  a1[1] = 0;
  if (v3)
  {
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      atomic_store(1u, v3);
      WTF::fastFree((WTF *)v3, a2);
    }
  }
  return a1;
}

uint64_t WTF::Detail::CallableWrapper<WebCore::PowerSourceNotifier::PowerSourceNotifier(WTF::Function<void ()(BOOL)> &&)::$_1,void>::~CallableWrapper(WTF *this, void *a2)
{
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;

  v3 = (unsigned int *)*((_QWORD *)this + 1);
  *(_QWORD *)this = &off_1E3340118;
  *((_QWORD *)this + 1) = 0;
  if (v3)
  {
    do
    {
      v4 = __ldaxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      atomic_store(1u, v3);
      WTF::fastFree((WTF *)v3, a2);
    }
  }
  return WTF::fastFree(this, a2);
}

WebCore *WTF::Detail::CallableWrapper<WebCore::PowerSourceNotifier::PowerSourceNotifier(WTF::Function<void ()(BOOL)> &&)::$_1,void>::call(WebCore *result)
{
  uint64_t v1;
  uint64_t v2;
  _BOOL8 HasAC;

  v1 = *((_QWORD *)result + 1);
  if (v1)
  {
    v2 = *(_QWORD *)(v1 + 8);
    if (v2)
    {
      if (HIBYTE(WebCore::hasAC))
        HIBYTE(WebCore::hasAC) = 0;
      if (*(_QWORD *)(v2 + 16))
      {
        HasAC = WebCore::systemHasAC(result);
        return (WebCore *)(*(uint64_t (**)(_QWORD, _BOOL8))(**(_QWORD **)(v2 + 16) + 16))(*(_QWORD *)(v2 + 16), HasAC);
      }
    }
  }
  return result;
}

uint64_t WebCore::PublicSuffix::PublicSuffixHash::hash(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v13;
  unsigned __int16 *v14;
  int v15;
  unsigned int v16;
  unint64_t v17;
  int v18;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(unsigned int *)(a1 + 4);
  if ((*(_BYTE *)(a1 + 16) & 4) != 0)
  {
    v3 = -1640531527;
    if (v2 >= 2)
    {
      v4 = 0;
      do
      {
        v5 = v3 + *(unsigned __int8 *)(MEMORY[0x1E0CBF868] + *(unsigned __int8 *)(v1 + v4));
        v6 = (v5 << 16) ^ (*(unsigned __int8 *)(MEMORY[0x1E0CBF868] + *(unsigned __int8 *)(v1 + v4 + 1)) << 11) ^ v5;
        v3 = v6 + (v6 >> 11);
        v7 = v4 + 3;
        v4 += 2;
      }
      while (v7 < v2);
    }
    if ((v2 & 1) != 0)
    {
      v8 = *(unsigned __int8 *)(MEMORY[0x1E0CBF868] + *(unsigned __int8 *)(v2 + v1 - 1));
LABEL_7:
      v3 = ((v3 + v8) ^ ((v3 + v8) << 11)) + (((v3 + v8) ^ ((v3 + v8) << 11)) >> 17);
    }
  }
  else
  {
    v3 = -1640531527;
    if (v2 >= 2)
    {
      v13 = 0;
      do
      {
        v14 = (unsigned __int16 *)(v1 + 2 * v13);
        v15 = *v14 | (32 * (*v14 - 65 < 0x1A));
        v16 = (((v14[1] - 65 < 0x1A) << 16) | (v14[1] << 11)) ^ ((v3 + v15) << 16) ^ (v3 + v15);
        v3 = v16 + (v16 >> 11);
        v17 = v13 + 3;
        v13 += 2;
      }
      while (v17 < v2);
    }
    if ((v2 & 1) != 0)
    {
      v18 = *(unsigned __int16 *)(v1 + 2 * v2 - 2);
      v8 = v18 | (32 * ((v18 - 65) < 0x1A));
      goto LABEL_7;
    }
  }
  v9 = (v3 ^ (8 * v3)) + ((v3 ^ (8 * v3)) >> 5);
  v10 = (v9 ^ (4 * v9)) + ((v9 ^ (4 * v9)) >> 15);
  v11 = (v10 ^ (v10 << 10)) & 0xFFFFFF;
  if (v11)
    return v11;
  else
    return 0x800000;
}

WTF::StringImpl *WTF::HashTable<WebCore::PublicSuffix,WebCore::PublicSuffix,WTF::IdentityExtractor,WTF::DefaultHash<WebCore::PublicSuffix>,WTF::HashTraits<WebCore::PublicSuffix>,WTF::HashTraits<WebCore::PublicSuffix>>::add(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6;
  int v7;
  unsigned int v8;
  WTF **v9;
  const WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  const WTF::StringImpl *v12;
  WTF **v13;
  int v14;
  WTF::StringImpl *result;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v6 = *a2;
  if (*a2
    || (WTF::HashTable<WebCore::PublicSuffix,WebCore::PublicSuffix,WTF::IdentityExtractor,WTF::DefaultHash<WebCore::PublicSuffix>,WTF::HashTraits<WebCore::PublicSuffix>,WTF::HashTraits<WebCore::PublicSuffix>>::rehash(a2, 8u, 0), (v6 = *a2) != 0))
  {
    v7 = *(_DWORD *)(v6 - 8);
  }
  else
  {
    v7 = 0;
  }
  v8 = WebCore::PublicSuffix::PublicSuffixHash::hash(*a3) & v7;
  v9 = (WTF **)(v6 + 8 * v8);
  if ((WTF::equal(*v9, 0, v10) & 1) == 0)
  {
    v13 = 0;
    v14 = 1;
    do
    {
      if (*v9 == (WTF *)-1)
      {
        v13 = v9;
      }
      else
      {
        result = (WTF::StringImpl *)WTF::equalIgnoringASCIICase(*v9, (const WTF::StringImpl *)*a3, v12);
        if ((_DWORD)result)
        {
          v24 = *a2;
          if (*a2)
            v25 = *(unsigned int *)(v24 - 4);
          else
            v25 = 0;
          v27 = 0;
          v26 = v24 + 8 * v25;
          goto LABEL_35;
        }
      }
      v8 = (v8 + v14) & v7;
      v9 = (WTF **)(v6 + 8 * v8);
      ++v14;
    }
    while (!WTF::equal(*v9, 0, v12));
    if (v13)
    {
      *v13 = 0;
      --*(_DWORD *)(*a2 - 16);
      v9 = v13;
    }
  }
  v16 = *a3;
  *a3 = 0;
  result = *v9;
  *v9 = (WTF *)v16;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v11);
    else
      *(_DWORD *)result -= 2;
  }
  v17 = *a2;
  if (*a2)
    v18 = *(_DWORD *)(v17 - 12) + 1;
  else
    v18 = 1;
  *(_DWORD *)(v17 - 12) = v18;
  v19 = *a2;
  if (*a2)
    v20 = *(_DWORD *)(v19 - 12);
  else
    v20 = 0;
  v21 = (*(_DWORD *)(v19 - 16) + v20);
  v22 = *(unsigned int *)(v19 - 4);
  if (v22 > 0x400)
  {
    if (v22 <= 2 * v21)
      goto LABEL_25;
  }
  else if (3 * v22 <= 4 * v21)
  {
    if (!(_DWORD)v22)
    {
      v23 = 8;
LABEL_30:
      result = (WTF::StringImpl *)WTF::HashTable<WebCore::PublicSuffix,WebCore::PublicSuffix,WTF::IdentityExtractor,WTF::DefaultHash<WebCore::PublicSuffix>,WTF::HashTraits<WebCore::PublicSuffix>,WTF::HashTraits<WebCore::PublicSuffix>>::rehash(a2, v23, (uint64_t *)v9);
      v9 = (WTF **)result;
      v19 = *a2;
      if (*a2)
        v22 = *(unsigned int *)(v19 - 4);
      else
        v22 = 0;
      goto LABEL_34;
    }
LABEL_25:
    v23 = (_DWORD)v22 << (6 * *(_DWORD *)(v19 - 12) >= (2 * v22));
    goto LABEL_30;
  }
LABEL_34:
  v26 = v19 + 8 * v22;
  v27 = 1;
LABEL_35:
  *(_QWORD *)a1 = v9;
  *(_QWORD *)(a1 + 8) = v26;
  *(_BYTE *)(a1 + 16) = v27;
  return result;
}

WTF::StringImpl **WTF::HashTable<WebCore::PublicSuffix,WebCore::PublicSuffix,WTF::IdentityExtractor,WTF::DefaultHash<WebCore::PublicSuffix>,WTF::HashTraits<WebCore::PublicSuffix>,WTF::HashTraits<WebCore::PublicSuffix>>::rehash(uint64_t *a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  const WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl **v12;
  uint64_t *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  unsigned int v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  WTF::StringImpl **v21;
  WTF::StringImpl *v22;
  uint64_t v23;
  WTF::StringImpl *v24;
  WTF::StringImpl **result;

  v5 = *a1;
  if (*a1)
  {
    v6 = *(_DWORD *)(v5 - 4);
    v7 = *(_DWORD *)(v5 - 12);
  }
  else
  {
    v6 = 0;
    v7 = 0;
  }
  v8 = WTF::fastZeroedMalloc((WTF *)(8 * a2 + 16));
  *a1 = v8 + 16;
  *(_DWORD *)(v8 + 12) = a2;
  *(_DWORD *)(*a1 - 8) = a2 - 1;
  *(_DWORD *)(*a1 - 16) = 0;
  *(_DWORD *)(*a1 - 12) = v7;
  if (v6)
  {
    v11 = 0;
    v12 = 0;
    do
    {
      v13 = (uint64_t *)(v5 + 8 * v11);
      if (*v13 != -1)
      {
        if (WTF::equal((WTF *)*v13, 0, v10))
        {
          v14 = (WTF::StringImpl *)*v13;
          *v13 = 0;
          if (v14)
          {
            if (*(_DWORD *)v14 == 2)
              WTF::StringImpl::destroy(v14, v9);
            else
              *(_DWORD *)v14 -= 2;
          }
        }
        else
        {
          v15 = *a1;
          if (*a1)
            v16 = *(_DWORD *)(v15 - 8);
          else
            v16 = 0;
          v17 = WebCore::PublicSuffix::PublicSuffixHash::hash(*v13);
          v18 = 0;
          do
          {
            v19 = v17 & v16;
            v20 = WTF::equal(*(WTF **)(v15 + 8 * v19), 0, v10);
            v17 = ++v18 + v19;
          }
          while (!v20);
          v21 = (WTF::StringImpl **)(v15 + 8 * v19);
          v22 = *v21;
          *v21 = 0;
          if (v22)
          {
            if (*(_DWORD *)v22 == 2)
              WTF::StringImpl::destroy(v22, v9);
            else
              *(_DWORD *)v22 -= 2;
          }
          v23 = *v13;
          *v13 = 0;
          *v21 = (WTF::StringImpl *)v23;
          v24 = (WTF::StringImpl *)*v13;
          *v13 = 0;
          if (v24)
          {
            if (*(_DWORD *)v24 == 2)
              WTF::StringImpl::destroy(v24, v9);
            else
              *(_DWORD *)v24 -= 2;
          }
          if (v13 == a3)
            v12 = v21;
        }
      }
      ++v11;
    }
    while (v11 != v6);
  }
  else
  {
    v12 = 0;
    result = 0;
    if (!v5)
      return result;
  }
  WTF::fastFree((WTF *)(v5 - 16), v9);
  return v12;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSWheelEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  WTF::StringImpl *v2;
  WebCore::JSWheelEvent ***v4;
  WebCore::JSWheelEvent ***v5;
  int v6;
  JSC::JSCell *v7;
  unint64_t v8;
  uint64_t Object;
  JSC::Structure *v10;
  WTF::StringImpl *v11;
  unint64_t v12;
  double v13;
  char v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  double v17;
  char v18;
  WTF::StringImpl *v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  unint64_t v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  unint64_t v26;
  WTF::StringImpl *v27;
  unint64_t v28;
  WTF::StringImpl *v29;
  unint64_t v30;
  WTF::StringImpl *v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  WTF::StringImpl *v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  WTF::StringImpl *v39;
  unint64_t v40;
  WebCore::MouseRelatedEvent *v41;
  WTF::StringImpl *v42;
  WebCore::MouseRelatedEvent *v43;
  JSC::VM *v44;
  WTF::StringImpl *v45;
  WTF::StringImpl *v46;
  WebCore::MouseRelatedEvent *v47;
  JSC::VM *v48;
  WTF::StringImpl *v49;
  WTF::StringImpl *v50;
  unint64_t v51;
  void (***v52)(WebCore::WheelEvent *__hidden);
  WTF::StringImpl *v53;
  WTF::StringImpl *v54;
  unint64_t v55;
  WTF::StringImpl *v56;
  WTF::StringImpl *v57;
  WTF::StringImpl *v58;
  uint64_t v59;
  WTF::StringImpl *v60;
  WTF::StringImpl *v61;
  unint64_t v62;
  WTF::StringImpl *v63;
  WTF::StringImpl *v64;
  unint64_t v65;
  WTF::StringImpl *v66;
  WTF::StringImpl *v67;
  unint64_t v68;
  unint64_t v69;
  WTF::StringImpl *v70;
  WTF::StringImpl *v71;
  unint64_t v72;
  unint64_t v73;
  WTF::StringImpl *v74;
  WTF::StringImpl *v75;
  unint64_t v76;
  JSC::VM *v77;
  double v78;
  WTF::StringImpl *v79;
  WTF::StringImpl *v80;
  unint64_t v81;
  unint64_t v82;
  WTF::StringImpl *v83;
  WTF::StringImpl *v84;
  unint64_t v85;
  unsigned int v86;
  WTF::StringImpl *v87;
  WTF::StringImpl *v88;
  unint64_t v89;
  unsigned int v90;
  WebCore::WindowProxy *v91;
  __int16 v92;
  char v93;
  char v94;
  char v95;
  int v96;
  char v97;
  char v98;
  char v99;
  char v100;
  char v101;
  __int16 v102;
  int v103;
  int v104;
  unsigned int v105;
  int v106;
  int v107;
  int v108;
  WTF::StringImpl *v109;
  WebCore::Node *v110;
  void *v111;
  WebCore::JSDOMGlobalObject *v112;
  WebCore::Node *v113;
  WebCore::WindowProxy *v114;
  WTF::StringImpl *v115;
  JSCell *v116;
  JSC::JSCell *v117;
  JSC::JSGlobalObject *v118;
  JSC::JSObject *v119;
  JSC::JSGlobalObject *v120;
  WebCore::MouseRelatedEvent *v121;
  WTF *v123;
  void *v124;
  WTF *v125;
  void *v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  WTF::StringImpl *v131;
  WebCore::MouseRelatedEvent *v132;
  unint64_t v133;
  unint64_t v134;
  int v135;
  WebCore::JSWheelEvent *v136;
  WebCore::JSDOMGlobalObject *v137;
  JSC::VM *FunctionRealm;
  JSC::JSObject *v139;
  JSC::Structure *v140;
  unint64_t SubclassStructure;
  JSValue v142;
  WebCore::MouseRelatedEvent *v143;
  char hasExceptionsAfterHandlingTraps;
  int v145;
  int v146;
  int v147;
  double v148;
  unint64_t v149;
  unint64_t v150;
  unsigned int v151;
  int v152;
  int v153;
  char v154;
  __int16 v155;
  __int16 v156;
  unsigned int v157;
  char v158;
  char v159;
  char v160;
  char v161;
  char v162;
  int v163;
  char v164;
  char v165;
  WTF::StringImpl *v166;
  unsigned int v167;
  JSC::VM *v168;
  WTF::StringImpl *v169;
  WebCore::WindowProxy *v170;
  int v171;
  int v172;
  __int16 v173;
  _BYTE v174[28];
  unint64_t v175;
  int v176;
  WebCore::Node *v177;
  __int128 v178;
  __int128 v179;
  int v180;
  __int16 v181;
  char v182;
  WebCore::WindowProxy *v183;
  int v184;
  int v185;
  __int16 v186;
  _BYTE v187[28];
  unint64_t v188;
  int v189;
  WebCore::Node *v190;
  __int128 v191;
  __int128 v192;
  int v193;
  int v194;
  WTF::StringImpl *v195;
  int v196;
  uint64_t v197;
  WTF::StringImpl *v198;
  int v199;
  WTF::StringImpl *v200;
  int v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  int v206;
  WTF::StringImpl *v207;
  int v208;
  void (***v209)(WebCore::WheelEvent *__hidden);
  int v210;
  __int16 v211[2];
  int v212;
  __int16 v213[2];
  int v214;
  char v215[4];
  int v216;
  char v217[4];
  int v218;
  char v219[4];
  int v220;
  char v221[4];
  int v222;
  char v223[4];
  int v224;
  char v225[4];
  int v226;
  uint64_t v227;
  char v228[4];
  int v229;
  JSC::VM *v230;
  WTF::StringImpl *v231;

  v168 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v142.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v168, a1, v142);
  }
  v4 = (WebCore::JSWheelEvent ***)a2;
  v5 = *(WebCore::JSWheelEvent ****)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v195);
  v6 = v196;
  if (!v196)
  {
    if ((unint64_t)(*((int *)v4 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL)
    {
      v2 = (WTF::StringImpl *)v5;
      v5 = v4;
      v230 = (JSC::VM *)*((_QWORD *)a1 + 7);
    }
    else
    {
      v7 = (JSC::JSCell *)v4[7];
      v8 = *((_QWORD *)a1 + 7);
      v230 = (JSC::VM *)v8;
      if (((unint64_t)v7 & 0xFFFFFFFFFFFFFFF7) != 2)
      {
        if (((unint64_t)v7 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v7)) == 0)
        {
          JSC::throwTypeError();
          goto LABEL_276;
        }
        v10 = (JSC::Structure *)Object;
        WTF::AtomStringImpl::addLiteral();
        v12 = JSC::JSObject::get(v10, a1, (unint64_t)v169);
        if (v169)
        {
          if (*(_DWORD *)v169 == 2)
            WTF::StringImpl::destroy(v169, v11);
          else
            *(_DWORD *)v169 -= 2;
        }
        if (*(_DWORD *)(v8 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8))
          goto LABEL_276;
        if (v12 == 10)
        {
          v14 = 0;
        }
        else
        {
          v2 = (WTF::StringImpl *)*((_QWORD *)a1 + 7);
          if (v12 >= 0xFFFE000000000000)
          {
            v14 = (_DWORD)v12 != 0;
          }
          else
          {
            *(_QWORD *)&v13 = v12 - 0x2000000000000;
            if (v12 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
            {
              v14 = v13 > 0.0 || v13 < 0.0;
            }
            else if ((v12 & 0xFFFE000000000002) != 0)
            {
              v14 = v12 == 7;
            }
            else
            {
              v14 = JSC::JSCell::toBoolean(v12, (uint64_t)a1);
            }
          }
          if (*((_DWORD *)v2 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v2))
            goto LABEL_276;
        }
        WTF::AtomStringImpl::addLiteral();
        v16 = JSC::JSObject::get(v10, a1, (unint64_t)v169);
        if (v169)
        {
          if (*(_DWORD *)v169 == 2)
            WTF::StringImpl::destroy(v169, v15);
          else
            *(_DWORD *)v169 -= 2;
        }
        if (*(_DWORD *)(v8 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8))
          goto LABEL_276;
        if (v16 == 10)
        {
          v18 = 0;
        }
        else
        {
          v2 = (WTF::StringImpl *)*((_QWORD *)a1 + 7);
          if (v16 >= 0xFFFE000000000000)
          {
            v18 = (_DWORD)v16 != 0;
          }
          else
          {
            *(_QWORD *)&v17 = v16 - 0x2000000000000;
            if (v16 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
            {
              v18 = v17 > 0.0 || v17 < 0.0;
            }
            else if ((v16 & 0xFFFE000000000002) != 0)
            {
              v18 = v16 == 7;
            }
            else
            {
              v18 = JSC::JSCell::toBoolean(v16, (uint64_t)a1);
            }
          }
          if (*((_DWORD *)v2 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v2))
            goto LABEL_276;
        }
        v165 = v18;
        WTF::AtomStringImpl::addLiteral();
        v2 = v169;
        v20 = JSC::JSObject::get(v10, a1, (unint64_t)v169);
        if (v169)
        {
          if (*(_DWORD *)v169 == 2)
            WTF::StringImpl::destroy(v169, v19);
          else
            *(_DWORD *)v169 -= 2;
        }
        if (*(_DWORD *)(v8 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8))
          goto LABEL_276;
        if (v20 == 10)
        {
          v164 = 0;
          v228[0] = 0;
          v229 = 0;
        }
        else
        {
          WebCore::convert<WebCore::IDLBoolean>((uint64_t)a1, v20, (uint64_t)v228);
          if (v229)
            goto LABEL_276;
          v164 = v228[0];
        }
        WTF::AtomStringImpl::addLiteral();
        v2 = v169;
        v22 = JSC::JSObject::get(v10, a1, (unint64_t)v169);
        if (v169)
        {
          if (*(_DWORD *)v169 == 2)
            WTF::StringImpl::destroy(v169, v21);
          else
            *(_DWORD *)v169 -= 2;
        }
        if (*(_DWORD *)(v8 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8) & 1) != 0)
          goto LABEL_276;
        if (v22 == 10)
        {
          v163 = 0;
          v227 = 0;
        }
        else
        {
          WebCore::convertToInteger<WebCore::IDLLong>(a1, v22, &v227);
          if (HIDWORD(v227))
            goto LABEL_276;
          v163 = v227;
        }
        WTF::AtomStringImpl::addLiteral();
        v2 = v169;
        v24 = JSC::JSObject::get(v10, a1, (unint64_t)v169);
        if (v169)
        {
          if (*(_DWORD *)v169 == 2)
            WTF::StringImpl::destroy(v169, v23);
          else
            *(_DWORD *)v169 -= 2;
        }
        if (*(_DWORD *)(v8 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8) & 1) != 0)
        {
LABEL_276:
          v194 = 1;
          while (1)
          {
            v108 = v194;
            if (v194)
            {
              v116 = 0;
              goto LABEL_209;
            }
            if (!v196)
              break;
            std::__throw_bad_variant_access[abi:sn180100]();
LABEL_409:
            v194 = 1;
            v4 = v5;
LABEL_399:
            v5 = (WebCore::JSWheelEvent ***)v2;
LABEL_394:
            v91 = v166;
LABEL_183:
            if (v8)
            {
              if ((*(_BYTE *)(v8 + 22) & 2) != 0)
              {
                if (*(_DWORD *)(v8 + 24) == 2)
                {
                  if ((*(_WORD *)(v8 + 30) & 0x400) == 0)
                    WebCore::Node::removedLastRef((WebCore::Node *)v8, (void *)v69);
                }
                else
                {
                  *(_DWORD *)(v8 + 24) -= 2;
                }
              }
              else
              {
                (*(void (**)(unint64_t))(*(_QWORD *)v8 + 96))(v8);
              }
            }
LABEL_187:
            if (v91)
            {
              if (*(_DWORD *)v91 == 1)
              {
                WebCore::WindowProxy::~WindowProxy(v91, (WTF::StringImpl *)v69);
                WTF::fastFree(v125, v126);
              }
              else
              {
                --*(_DWORD *)v91;
              }
            }
          }
          v109 = v195;
          v195 = 0;
          v207 = v109;
          LOWORD(v169) = v181;
          BYTE2(v169) = v182;
          v170 = v183;
          v171 = v184;
          v172 = v185;
          v173 = v186;
          *(_OWORD *)&v174[12] = *(_OWORD *)&v187[12];
          *(_OWORD *)v174 = *(_OWORD *)v187;
          v176 = v189;
          v175 = v188;
          v110 = v190;
          v183 = 0;
          v190 = 0;
          v177 = v110;
          v180 = v193;
          v178 = v191;
          v179 = v192;
          WebCore::WheelEvent::create(&v207, (uint64_t)&v169, (WebCore::MouseRelatedEvent **)&v209);
          v113 = v177;
          v177 = 0;
          if (v113)
          {
            if ((*((_BYTE *)v113 + 22) & 2) != 0)
            {
              if (*((_DWORD *)v113 + 6) == 2)
              {
                if ((*((_WORD *)v113 + 15) & 0x400) == 0)
                  WebCore::Node::removedLastRef(v113, v111);
              }
              else
              {
                *((_DWORD *)v113 + 6) -= 2;
              }
            }
            else
            {
              (*(void (**)(WebCore::Node *))(*(_QWORD *)v113 + 96))(v113);
            }
          }
          v114 = v170;
          v170 = 0;
          if (v114)
          {
            if (*(_DWORD *)v114 == 1)
            {
              WebCore::WindowProxy::~WindowProxy(v114, (WTF::StringImpl *)v111);
              WTF::fastFree(v123, v124);
            }
            else
            {
              --*(_DWORD *)v114;
            }
          }
          v115 = v207;
          v207 = 0;
          if (v115)
          {
            if (*(_DWORD *)v115 == 2)
              WTF::StringImpl::destroy(v115, (WTF::StringImpl *)v111);
            else
              *(_DWORD *)v115 -= 2;
          }
          if (*v209 != off_1E33A8E68)
          {
            __break(0xC471u);
            JUMPOUT(0x19513D270);
          }
          v116 = (JSCell *)WebCore::createWrapper<WebCore::WheelEvent,WebCore::WheelEvent>(v5[5], (uint64_t *)&v209, v112);
          v117 = (JSC::JSCell *)v4[5];
          if (((unint64_t)v117 & 0xFFFE000000000002) == 0)
          {
            v118 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v117);
            if (v118)
            {
              v120 = v118;
              if (v118 != (JSC::JSGlobalObject *)v4[3])
              {
                v136 = (WebCore::JSWheelEvent *)*((_QWORD *)a1 + 7);
                FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v118, v119);
                if (!*((_DWORD *)v136 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v136) & 1) == 0)
                {
                  v139 = (JSC::JSObject *)WebCore::getDOMStructure<WebCore::JSWheelEvent>(v136, FunctionRealm, v137);
                  SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v120, v139, v140);
                  if (!*((_DWORD *)v136 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v136) & 1) == 0)
                    JSC::JSObject::setStructure(v116, v136, SubclassStructure);
                }
              }
            }
          }
          if (*((_DWORD *)v168 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v168) & 1) != 0)
            v116 = 0;
          v121 = (WebCore::MouseRelatedEvent *)v209;
          v209 = 0;
          if (v121)
          {
            if (*((_DWORD *)v121 + 4) == 1)
              (*(void (**)(WebCore::MouseRelatedEvent *))(*(_QWORD *)v121 + 8))(v121);
            else
              --*((_DWORD *)v121 + 4);
          }
          v108 = v194;
LABEL_209:
          if (v108 != -1)
            ((void (*)(WTF::StringImpl **, __int16 *))off_1E3343E10[v108])(&v169, &v181);
          v6 = v196;
          goto LABEL_212;
        }
        if (v24 == 10)
        {
          v166 = 0;
          v169 = 0;
          LODWORD(v170) = 0;
        }
        else
        {
          WebCore::convert<WebCore::IDLNullable<WebCore::IDLInterface<WebCore::WindowProxy>>>((uint64_t)&v169, (uint64_t)a1, v24);
          if ((_DWORD)v170)
          {
            v91 = 0;
LABEL_334:
            v194 = 1;
            goto LABEL_187;
          }
          if (v169)
          {
            v166 = v169;
            ++*(_DWORD *)v169;
          }
          else
          {
            v166 = 0;
          }
        }
        WTF::AtomStringImpl::addLiteral();
        v2 = (WTF::StringImpl *)v209;
        v26 = JSC::JSObject::get(v10, a1, (unint64_t)v209);
        if (v2)
        {
          if (*(_DWORD *)v2 == 2)
            WTF::StringImpl::destroy(v2, v25);
          else
            *(_DWORD *)v2 -= 2;
        }
        if (*(_DWORD *)(v8 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8) & 1) != 0)
        {
          v91 = v166;
          goto LABEL_334;
        }
        if (v26 == 10)
        {
          v162 = 0;
          v225[0] = 0;
          v226 = 0;
        }
        else
        {
          WebCore::convert<WebCore::IDLBoolean>((uint64_t)a1, v26, (uint64_t)v225);
          if (v226)
            goto LABEL_378;
          v162 = v225[0];
        }
        WTF::AtomStringImpl::addLiteral();
        v2 = (WTF::StringImpl *)v209;
        v28 = JSC::JSObject::get(v10, a1, (unint64_t)v209);
        if (v2)
        {
          if (*(_DWORD *)v2 == 2)
            WTF::StringImpl::destroy(v2, v27);
          else
            *(_DWORD *)v2 -= 2;
        }
        if (*(_DWORD *)(v8 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8) & 1) != 0)
          goto LABEL_378;
        if (v28 == 10)
        {
          v161 = 0;
          v223[0] = 0;
          v224 = 0;
        }
        else
        {
          WebCore::convert<WebCore::IDLBoolean>((uint64_t)a1, v28, (uint64_t)v223);
          if (v224)
            goto LABEL_378;
          v161 = v223[0];
        }
        WTF::AtomStringImpl::addLiteral();
        v2 = (WTF::StringImpl *)v209;
        v30 = JSC::JSObject::get(v10, a1, (unint64_t)v209);
        if (v2)
        {
          if (*(_DWORD *)v2 == 2)
            WTF::StringImpl::destroy(v2, v29);
          else
            *(_DWORD *)v2 -= 2;
        }
        if (*(_DWORD *)(v8 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8) & 1) != 0)
          goto LABEL_378;
        if (v30 == 10)
        {
          v160 = 0;
          v221[0] = 0;
          v222 = 0;
        }
        else
        {
          WebCore::convert<WebCore::IDLBoolean>((uint64_t)a1, v30, (uint64_t)v221);
          if (v222)
            goto LABEL_378;
          v160 = v221[0];
        }
        WTF::AtomStringImpl::addLiteral();
        v2 = (WTF::StringImpl *)v209;
        v32 = JSC::JSObject::get(v10, a1, (unint64_t)v209);
        if (v2)
        {
          if (*(_DWORD *)v2 == 2)
            WTF::StringImpl::destroy(v2, v31);
          else
            *(_DWORD *)v2 -= 2;
        }
        if (*(_DWORD *)(v8 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8) & 1) != 0)
          goto LABEL_378;
        if (v32 == 10)
        {
          v159 = 0;
          v219[0] = 0;
          v220 = 0;
        }
        else
        {
          WebCore::convert<WebCore::IDLBoolean>((uint64_t)a1, v32, (uint64_t)v219);
          if (v220)
            goto LABEL_378;
          v159 = v219[0];
        }
        WTF::AtomStringImpl::addLiteral();
        v2 = (WTF::StringImpl *)v209;
        v34 = JSC::JSObject::get(v10, a1, (unint64_t)v209);
        if (v2)
        {
          if (*(_DWORD *)v2 == 2)
            WTF::StringImpl::destroy(v2, v33);
          else
            *(_DWORD *)v2 -= 2;
        }
        if (*(_DWORD *)(v8 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8) & 1) != 0)
          goto LABEL_378;
        if (v34 == 10)
        {
          v158 = 0;
          v217[0] = 0;
          v218 = 0;
        }
        else
        {
          WebCore::convert<WebCore::IDLBoolean>((uint64_t)a1, v34, (uint64_t)v217);
          if (v218)
            goto LABEL_378;
          v158 = v217[0];
        }
        WTF::AtomStringImpl::addLiteral();
        v2 = (WTF::StringImpl *)v209;
        v36 = JSC::JSObject::get(v10, a1, (unint64_t)v209);
        if (v2)
        {
          if (*(_DWORD *)v2 == 2)
            WTF::StringImpl::destroy(v2, v35);
          else
            *(_DWORD *)v2 -= 2;
        }
        if (*(_DWORD *)(v8 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8) & 1) != 0)
          goto LABEL_378;
        if (v36 == 10)
        {
          v157 = 0;
          v215[0] = 0;
          v216 = 0;
        }
        else
        {
          WebCore::convert<WebCore::IDLBoolean>((uint64_t)a1, v36, (uint64_t)v215);
          if (v216)
            goto LABEL_378;
          v157 = v215[0];
        }
        WTF::AtomStringImpl::addLiteral();
        v2 = (WTF::StringImpl *)v209;
        v38 = JSC::JSObject::get(v10, a1, (unint64_t)v209);
        if (v2)
        {
          if (*(_DWORD *)v2 == 2)
            WTF::StringImpl::destroy(v2, v37);
          else
            *(_DWORD *)v2 -= 2;
        }
        if (*(_DWORD *)(v8 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8) & 1) != 0)
          goto LABEL_378;
        if (v38 == 10)
        {
          v156 = 0;
          v213[0] = 0;
          v214 = 0;
        }
        else
        {
          WebCore::convertToInteger<WebCore::IDLShort>(a1, v38, (uint64_t)v213);
          if (v214)
            goto LABEL_378;
          v156 = v213[0];
        }
        WTF::AtomStringImpl::addLiteral();
        v2 = (WTF::StringImpl *)v209;
        v40 = JSC::JSObject::get(v10, a1, (unint64_t)v209);
        if (v2)
        {
          if (*(_DWORD *)v2 == 2)
            WTF::StringImpl::destroy(v2, v39);
          else
            *(_DWORD *)v2 -= 2;
        }
        if (*(_DWORD *)(v8 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8) & 1) != 0)
          goto LABEL_378;
        if (v40 == 10)
        {
          v155 = 0;
          v211[0] = 0;
          v212 = 0;
        }
        else
        {
          WebCore::convertToInteger<WebCore::IDLUnsignedShort>(a1, v40, (uint64_t)v211);
          if (v212)
            goto LABEL_378;
          v155 = v211[0];
        }
        WTF::AtomStringImpl::addLiteral();
        v41 = (WebCore::MouseRelatedEvent *)v209;
        v43 = (WebCore::MouseRelatedEvent *)JSC::JSObject::get(v10, a1, (unint64_t)v209);
        if (v41)
        {
          if (*(_DWORD *)v41 == 2)
          {
            v131 = v41;
            v132 = v43;
            WTF::StringImpl::destroy(v131, v42);
            v43 = v132;
          }
          else
          {
            *(_DWORD *)v41 -= 2;
          }
        }
        if (*(_DWORD *)(v8 + 80))
        {
          v143 = v43;
          hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8);
          v43 = v143;
          if ((hasExceptionsAfterHandlingTraps & 1) != 0)
            goto LABEL_378;
        }
        if (v43 == (WebCore::MouseRelatedEvent *)10)
        {
          v167 = 0;
        }
        else
        {
          v209 = (void (***)(WebCore::WheelEvent *__hidden))v43;
          v44 = (JSC::VM *)*((_QWORD *)a1 + 7);
          if ((unint64_t)v43 < 0xFFFE000000000000)
          {
            v127 = (unint64_t)v43 - 0x2000000000000;
            if ((unint64_t)v43 - 0x2000000000000 >= 0xFFFC000000000000)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v209, a1);
              v127 = v149;
            }
            v128 = (v127 >> 52) & 0x7FF;
            if ((v128 - 1023) <= 0x53)
            {
              v133 = v127 >> (51 - (v127 >> 52));
              if (v128 > 0x433)
                LODWORD(v133) = v127 << ((v127 >> 52) - 51);
              if (v128 >= 0x41F)
                LODWORD(v43) = v133;
              else
                LODWORD(v43) = (((1 << ((v127 >> 52) + 1)) - 1) & v133) + (1 << ((v127 >> 52) + 1));
              if ((v127 & 0x8000000000000000) != 0)
                LODWORD(v43) = -(int)v43;
            }
            else
            {
              LODWORD(v43) = 0;
            }
          }
          if (*((_DWORD *)v44 + 20))
          {
            v145 = (int)v43;
            v146 = JSC::VM::hasExceptionsAfterHandlingTraps(v44);
            LODWORD(v43) = v145;
            if (v146)
              goto LABEL_378;
          }
          v167 = v43;
        }
        WTF::AtomStringImpl::addLiteral();
        v45 = (WTF::StringImpl *)v209;
        v47 = (WebCore::MouseRelatedEvent *)JSC::JSObject::get(v10, a1, (unint64_t)v209);
        if (v45)
        {
          if (*(_DWORD *)v45 == 2)
            WTF::StringImpl::destroy(v45, v46);
          else
            *(_DWORD *)v45 -= 2;
        }
        if (*(_DWORD *)(v8 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8) & 1) != 0)
          goto LABEL_378;
        v154 = v14;
        if (v47 == (WebCore::MouseRelatedEvent *)10)
        {
          LODWORD(v47) = 0;
        }
        else
        {
          v209 = (void (***)(WebCore::WheelEvent *__hidden))v47;
          v48 = (JSC::VM *)*((_QWORD *)a1 + 7);
          if ((unint64_t)v47 < 0xFFFE000000000000)
          {
            v129 = (unint64_t)v47 - 0x2000000000000;
            if ((unint64_t)v47 - 0x2000000000000 >= 0xFFFC000000000000)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v209, a1);
              v129 = v150;
            }
            v130 = (v129 >> 52) & 0x7FF;
            if ((v130 - 1023) <= 0x53)
            {
              v134 = v129 >> (51 - (v129 >> 52));
              if (v130 > 0x433)
                LODWORD(v134) = v129 << ((v129 >> 52) - 51);
              if (v130 >= 0x41F)
                v135 = v134;
              else
                v135 = (((1 << ((v129 >> 52) + 1)) - 1) & v134) + (1 << ((v129 >> 52) + 1));
              if ((v129 & 0x8000000000000000) == 0)
                LODWORD(v47) = v135;
              else
                LODWORD(v47) = -v135;
            }
            else
            {
              LODWORD(v47) = 0;
            }
          }
          if (*((_DWORD *)v48 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v48))
            goto LABEL_378;
        }
        WTF::AtomStringImpl::addLiteral();
        v49 = (WTF::StringImpl *)v209;
        v51 = JSC::JSObject::get(v10, a1, (unint64_t)v209);
        if (v49)
        {
          if (*(_DWORD *)v49 == 2)
            WTF::StringImpl::destroy(v49, v50);
          else
            *(_DWORD *)v49 -= 2;
        }
        if (*(_DWORD *)(v8 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8) & 1) != 0)
        {
LABEL_378:
          v194 = 1;
          v91 = v166;
          goto LABEL_187;
        }
        if (v51 == 10)
        {
          v209 = 0;
          v210 = 0;
          v52 = 0;
        }
        else
        {
          WebCore::Converter<WebCore::IDLDouble>::convert(a1, v51, (uint64_t)&v209);
          if (v210)
            goto LABEL_378;
          v52 = v209;
        }
        WTF::AtomStringImpl::addLiteral();
        v53 = v207;
        v55 = JSC::JSObject::get(v10, a1, (unint64_t)v207);
        if (v53)
        {
          if (*(_DWORD *)v53 == 2)
            WTF::StringImpl::destroy(v53, v54);
          else
            *(_DWORD *)v53 -= 2;
        }
        if (*(_DWORD *)(v8 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v8) & 1) != 0)
          goto LABEL_378;
        if (v55 == 10)
        {
          v207 = 0;
          v208 = 0;
          v56 = 0;
        }
        else
        {
          WebCore::Converter<WebCore::IDLDouble>::convert(a1, v55, (uint64_t)&v207);
          if (v208)
            goto LABEL_378;
          v56 = v207;
        }
        WTF::AtomStringImpl::addLiteral();
        v57 = (WTF::StringImpl *)v205;
        v59 = JSC::JSObject::get(v10, a1, v205);
        if (v57)
        {
          if (*(_DWORD *)v57 == 2)
            WTF::StringImpl::destroy(v57, v58);
          else
            *(_DWORD *)v57 -= 2;
        }
        if (*((_DWORD *)v230 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v230) & 1) != 0)
          goto LABEL_378;
        if (v59 == 10)
        {
          v8 = 0;
          v205 = 0;
          v206 = 0;
        }
        else
        {
          WebCore::convert<WebCore::IDLNullable<WebCore::IDLInterface<WebCore::EventTarget>>>((uint64_t)&v205, (uint64_t)a1, v59);
          if (v206)
            goto LABEL_378;
          v8 = v205;
          if (v205)
          {
            if ((*(_BYTE *)(v205 + 22) & 2) != 0)
              *(_DWORD *)(v205 + 24) += 2;
            else
              (*(void (**)(unint64_t))(*(_QWORD *)v205 + 88))(v205);
          }
        }
        WTF::AtomStringImpl::addLiteral();
        v60 = v200;
        v62 = JSC::JSObject::get(v10, a1, (unint64_t)v200);
        if (v60)
        {
          if (*(_DWORD *)v60 == 2)
            WTF::StringImpl::destroy(v60, v61);
          else
            *(_DWORD *)v60 -= 2;
        }
        if (*((_DWORD *)v230 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v230))
        {
LABEL_384:
          v194 = 1;
          goto LABEL_394;
        }
        if (v62 == 10)
        {
          v153 = 0;
          v204 = 0;
        }
        else
        {
          WebCore::convertToInteger<WebCore::IDLLong>(a1, v62, &v204);
          if (HIDWORD(v204))
            goto LABEL_384;
          v153 = v204;
        }
        WTF::AtomStringImpl::addLiteral();
        v63 = v200;
        v65 = JSC::JSObject::get(v10, a1, (unint64_t)v200);
        if (v63)
        {
          if (*(_DWORD *)v63 == 2)
            WTF::StringImpl::destroy(v63, v64);
          else
            *(_DWORD *)v63 -= 2;
        }
        if (*((_DWORD *)v230 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v230))
          goto LABEL_384;
        if (v65 == 10)
        {
          v152 = 0;
          v203 = 0;
        }
        else
        {
          WebCore::convertToInteger<WebCore::IDLLong>(a1, v65, &v203);
          if (HIDWORD(v203))
            goto LABEL_384;
          v152 = v203;
        }
        WTF::AtomStringImpl::addLiteral();
        v66 = v200;
        v68 = JSC::JSObject::get(v10, a1, (unint64_t)v200);
        if (v66)
        {
          if (*(_DWORD *)v66 == 2)
            WTF::StringImpl::destroy(v66, v67);
          else
            *(_DWORD *)v66 -= 2;
        }
        if (*((_DWORD *)v230 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v230))
          goto LABEL_384;
        if (v68 == 10)
        {
          v151 = 0;
          v202 = 0;
        }
        else
        {
          WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, v68, &v202);
          if (HIDWORD(v202))
            goto LABEL_393;
          v151 = v202;
        }
        WTF::AtomStringImpl::addLiteral();
        v70 = v200;
        v72 = JSC::JSObject::get(v10, a1, (unint64_t)v200);
        if (v70)
        {
          if (*(_DWORD *)v70 == 2)
            WTF::StringImpl::destroy(v70, v71);
          else
            *(_DWORD *)v70 -= 2;
        }
        if (*((_DWORD *)v230 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v230))
          goto LABEL_393;
        if (v72 == 10)
        {
          v200 = 0;
          v201 = 0;
          v73 = 0;
        }
        else
        {
          WebCore::Converter<WebCore::IDLDouble>::convert(a1, v72, (uint64_t)&v200);
          if (v201)
            goto LABEL_393;
          v73 = (unint64_t)v200;
        }
        WTF::AtomStringImpl::addLiteral();
        v74 = v198;
        v76 = JSC::JSObject::get(v10, a1, (unint64_t)v198);
        if (v74)
        {
          if (*(_DWORD *)v74 == 2)
            WTF::StringImpl::destroy(v74, v75);
          else
            *(_DWORD *)v74 -= 2;
        }
        if (*((_DWORD *)v230 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v230))
          goto LABEL_393;
        if (v76 == 10)
        {
          v78 = 0.0;
        }
        else
        {
          v198 = (WTF::StringImpl *)v76;
          v77 = (JSC::VM *)*((_QWORD *)a1 + 7);
          v231 = v77;
          if (v76 >= 0xFFFE000000000000)
          {
            v78 = (double)(int)v76;
          }
          else if (v76 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v198, a1);
            v78 = v148;
          }
          else
          {
            *(_QWORD *)&v78 = v76 - 0x2000000000000;
          }
          if (*((_DWORD *)v77 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v77) & 1) != 0)
            goto LABEL_393;
          if ((*(_QWORD *)&v78 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
          {
            WebCore::throwNonFiniteTypeError();
            goto LABEL_393;
          }
        }
        WTF::AtomStringImpl::addLiteral();
        v79 = v198;
        v81 = JSC::JSObject::get(v10, a1, (unint64_t)v198);
        if (v79)
        {
          if (*(_DWORD *)v79 == 2)
            WTF::StringImpl::destroy(v79, v80);
          else
            *(_DWORD *)v79 -= 2;
        }
        if (*((_DWORD *)v230 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v230))
          goto LABEL_393;
        if (v81 == 10)
        {
          v198 = 0;
          v199 = 0;
          v82 = 0;
LABEL_167:
          v2 = (WTF::StringImpl *)v5;
          WTF::AtomStringImpl::addLiteral();
          v83 = v231;
          v85 = JSC::JSObject::get(v10, a1, (unint64_t)v231);
          if (v83)
          {
            if (*(_DWORD *)v83 == 2)
              WTF::StringImpl::destroy(v83, v84);
            else
              *(_DWORD *)v83 -= 2;
          }
          if (*((_DWORD *)v230 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v230))
          {
            v194 = 1;
            goto LABEL_399;
          }
          v5 = v4;
          if (v85 == 10)
          {
            v86 = 0;
            v197 = 0;
          }
          else
          {
            WebCore::convertToInteger<WebCore::IDLLong>(a1, v85, &v197);
            if (HIDWORD(v197))
              goto LABEL_409;
            v86 = v197;
          }
          WTF::AtomStringImpl::addLiteral();
          v87 = v231;
          v89 = JSC::JSObject::get(v10, a1, (unint64_t)v231);
          v91 = v166;
          v90 = v167;
          if (v87)
          {
            if (*(_DWORD *)v87 == 2)
            {
              WTF::StringImpl::destroy(v87, v88);
              v90 = v167;
            }
            else
            {
              *(_DWORD *)v87 -= 2;
            }
          }
          if (*((_DWORD *)v230 + 20))
          {
            v147 = JSC::VM::hasExceptionsAfterHandlingTraps(v230);
            v90 = v167;
            if (v147)
            {
              v194 = 1;
              goto LABEL_182;
            }
          }
          if (v89 != 10)
          {
            WebCore::convertToInteger<WebCore::IDLLong>(a1, v89, &v231);
            v93 = v154;
            if (HIDWORD(v231))
            {
              v107 = 1;
              goto LABEL_181;
            }
            v106 = (int)v231;
            v95 = v164;
            v94 = v165;
            v97 = v162;
            v96 = v163;
            v99 = v160;
            v98 = v161;
            v100 = v158;
            v101 = v159;
            v102 = v156;
            v69 = v157;
            v92 = v155;
            v90 = v167;
            v104 = v152;
            v103 = v153;
            v105 = v151;
LABEL_180:
            v107 = 0;
            LOBYTE(v181) = v93;
            HIBYTE(v181) = v94;
            v182 = v95;
            v183 = v91;
            v184 = v96;
            LOBYTE(v185) = v98;
            BYTE1(v185) = v69;
            BYTE2(v185) = v97;
            HIBYTE(v185) = v99;
            LOBYTE(v186) = v101;
            HIBYTE(v186) = v100;
            *(_DWORD *)v187 = v103;
            *(_DWORD *)&v187[4] = v104;
            *(_QWORD *)&v187[12] = v52;
            *(_QWORD *)&v187[20] = v56;
            v188 = __PAIR64__(v47, v90);
            LOWORD(v189) = v102;
            HIWORD(v189) = v92;
            v190 = (WebCore::Node *)v8;
            *(_QWORD *)&v191 = v73;
            *((double *)&v191 + 1) = v78;
            *(_QWORD *)&v192 = v82;
            *((_QWORD *)&v192 + 1) = __PAIR64__(v86, v105);
            v193 = v106;
            v8 = 0;
            v91 = 0;
LABEL_181:
            v194 = v107;
LABEL_182:
            v4 = v5;
            v5 = (WebCore::JSWheelEvent ***)v2;
            goto LABEL_183;
          }
          v93 = v154;
          v92 = v155;
          v95 = v164;
          v94 = v165;
          v97 = v162;
          v96 = v163;
          v99 = v160;
          v98 = v161;
          v100 = v158;
          v101 = v159;
          v102 = v156;
          v69 = v157;
          v104 = v152;
          v103 = v153;
          v105 = v151;
LABEL_179:
          v106 = 0;
          v231 = 0;
          goto LABEL_180;
        }
        WebCore::Converter<WebCore::IDLDouble>::convert(a1, v81, (uint64_t)&v198);
        if (!v199)
        {
          v82 = (unint64_t)v198;
          goto LABEL_167;
        }
LABEL_393:
        v194 = 1;
        goto LABEL_394;
      }
      v2 = (WTF::StringImpl *)v5;
      v5 = v4;
    }
    v8 = 0;
    LODWORD(v47) = 0;
    v92 = 0;
    v69 = 0;
    v101 = 0;
    v98 = 0;
    v97 = 0;
    v99 = 0;
    v100 = 0;
    v102 = 0;
    v90 = 0;
    v95 = 0;
    v93 = 0;
    v94 = 0;
    v96 = 0;
    v91 = 0;
    v104 = 0;
    v103 = 0;
    v105 = 0;
    v86 = 0;
    v228[0] = 0;
    v229 = 0;
    v227 = 0;
    v169 = 0;
    LODWORD(v170) = 0;
    v225[0] = 0;
    v226 = 0;
    v223[0] = 0;
    v224 = 0;
    v221[0] = 0;
    v222 = 0;
    v219[0] = 0;
    v220 = 0;
    v217[0] = 0;
    v218 = 0;
    v215[0] = 0;
    v216 = 0;
    v213[0] = 0;
    v214 = 0;
    v211[0] = 0;
    v212 = 0;
    v209 = 0;
    v210 = 0;
    v207 = 0;
    v208 = 0;
    v205 = 0;
    v206 = 0;
    v203 = 0;
    v204 = 0;
    v202 = 0;
    v200 = 0;
    v201 = 0;
    v56 = 0;
    v198 = 0;
    v52 = 0;
    v82 = 0;
    v197 = 0;
    v78 = 0.0;
    v73 = 0;
    v199 = 0;
    goto LABEL_179;
  }
  v116 = 0;
LABEL_212:
  if (v6 != -1)
    ((void (*)(__int16 *, WTF::StringImpl **))off_1E3343E20[v6])(&v181, &v195);
  return v116;
}

JSC::VM *WebCore::JSDOMConstructor<WebCore::JSWheelEvent>::initializeProperties(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  uint64_t v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  unint64_t v10;
  WebCore::JSDOMGlobalObject *v11;
  uint64_t v12;
  WTF::StringImpl *v14;

  v6 = a2 + 41952;
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)(a2 + 41952) + 1768), 0xFFFE000000000001, 6);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = JSC::jsNontrivialString(a2, &v14);
  v9 = v14;
  v14 = 0;
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v7);
    else
      *(_DWORD *)v9 -= 2;
  }
  *(_QWORD *)(a1 + 32) = v8;
  if (a1 && v8 && *(_DWORD *)(a2 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a2 + 192), (const JSCell *)a1);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, *(_QWORD *)(*(_QWORD *)v6 + 1968), v8, 6);
  v10 = *(_QWORD *)(*(_QWORD *)v6 + 2160);
  v12 = WebCore::getDOMStructure<WebCore::JSWheelEvent>((WebCore::JSWheelEvent *)a2, a3, v11);
  JSC::JSObject::putDirect((unsigned __int8 *)a1, (JSC::VM *)a2, v10, *(_QWORD *)(v12 + 48), 14);
  return JSC::reifyStaticProperties<3u>((JSC::VM *)a2, (uint64_t)&WebCore::JSWheelEvent::s_info, &WebCore::JSWheelEventConstructorTableValues, (JSC::JSObject *)a1);
}

WTF::StringImpl *WebCore::JSWheelEventPrototype::finishCreation(WebCore::JSWheelEventPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<12u>(a2, (uint64_t)&WebCore::JSWheelEvent::s_info, (uint64_t)&WebCore::JSWheelEventPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSWheelEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSMouseEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSMouseEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSMouseEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSWheelEvent::createPrototype(WebCore::JSWheelEvent *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  JSC::JSCell *v5;
  unint64_t v6;
  JSC::Structure *v7;

  v5 = (JSC::JSCell *)WebCore::JSMouseEvent::prototype(this, a2, a3);
  v6 = JSC::Structure::create((uint64_t *)this, (int)a2, v5);
  *(_DWORD *)(v6 + 16) |= 0x80000u;
  return WebCore::JSWheelEventPrototype::create(this, a2, v6, v7);
}

unint64_t WebCore::JSWheelEventPrototype::create(WebCore::JSWheelEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)v6 = a3 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSWheelEventPrototype::finishCreation((WebCore::JSWheelEventPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::jsWheelEventConstructor(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  JSC::JSCell *v5;
  uint64_t Structure;
  JSC::Heap *v7;
  unint64_t v8;

  v2 = *(_QWORD *)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSWheelEventPrototype::s_info != (char **)(16
                                                          * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  result = *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 3984);
  if (!result)
  {
    v5 = (JSC::JSCell *)WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSMouseEvent>,(WebCore::DOMConstructorID)461>(v2, v3);
    Structure = WebCore::JSDOMConstructor<WebCore::JSWheelEvent>::createStructure((uint64_t *)v2, v3, v5);
    result = WebCore::JSDOMConstructor<WebCore::JSWheelEvent>::create(v2, Structure, (JSC::VM *)v3);
    *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 3984) = result;
    if (result)
    {
      if (*(_DWORD *)(v2 + 760) >= *(unsigned __int8 *)(v3 + 7))
      {
        v7 = (JSC::Heap *)(v2 + 192);
        v8 = result;
        JSC::Heap::writeBarrierSlowPath(v7, (const JSCell *)v3);
        return v8;
      }
    }
  }
  return result;
}

unint64_t WebCore::jsWheelEvent_deltaX(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 184);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsWheelEvent_deltaY(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 192);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsWheelEvent_deltaZ(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 200);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

unint64_t WebCore::jsWheelEvent_deltaMode(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(unsigned int *)(*(_QWORD *)(a2 + 24) + 208);
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

unint64_t WebCore::jsWheelEvent_wheelDeltaX(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(*(_QWORD *)(a2 + 24) + 176) | 0xFFFE000000000000;
}

unint64_t WebCore::jsWheelEvent_wheelDeltaY(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(*(_QWORD *)(a2 + 24) + 180) | 0xFFFE000000000000;
}

unint64_t WebCore::jsWheelEvent_wheelDelta(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_DWORD *)(v2 + 180);
  if (!v3)
    v3 = *(_DWORD *)(v2 + 176);
  return v3 | 0xFFFE000000000000;
}

uint64_t WebCore::jsWheelEvent_webkitDirectionInvertedFromDevice(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 24);
  if (!*(_BYTE *)(v2 + 352))
    return 6;
  if (*(_BYTE *)(v2 + 273))
    return 7;
  return 6;
}

uint64_t WebCore::JSWheelEvent::subspaceForImpl(WebCore::JSWheelEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  WTF *v12;
  void *v13;
  int v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  WTF *v18;
  uint64_t v19;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 4064);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v7))
  {
    goto LABEL_6;
  }
  MEMORY[0x19AEA534C](v7, a2);
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  if (!*(_QWORD *)(v9 + 4064))
  {
    v15 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v15, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v17 = v20;
    v20 = 0;
    if (v17)
      (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
    v18 = v21;
    v21 = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 1)
        WTF::fastFree(v18, v16);
      else
        --*(_DWORD *)v18;
    }
    v19 = *(_QWORD *)(v9 + 4064);
    *(_QWORD *)(v9 + 4064) = v15;
    if (v19)
      (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v11 = *(_QWORD *)(v3 + 4064);
  *(_QWORD *)(v3 + 4064) = v4;
  if (v11)
  {
    v12 = (WTF *)MEMORY[0x19AEA3528](v11, v10);
    WTF::fastFree(v12, v13);
  }
  v14 = __ldxr((unsigned __int8 *)v7);
  if (v14 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

WTF::StringImpl *WebCore::convertDictionary<WebCore::WindowPostMessageOptions>@<X0>(JSC::JSCell *this@<X1>, JSC::JSGlobalObject *a2@<X0>, uint64_t a3@<X8>)
{
  JSC::VM *v4;
  unsigned int v5;
  int v6;
  WTF *v7;
  WTF::StringImpl *v8;
  uint64_t Object;
  JSC::Structure *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  unsigned int v14;
  WTF::StringImpl *result;
  WTF::StringImpl *v16;
  int v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  int v20;
  WTF::StringImpl *v21;
  int v22;
  uint64_t v23;
  WTF *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  WTF::StringImpl *v30;
  int v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  int v34;
  JSC::VM *v35;
  uint64_t v36;

  v4 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v35 = v4;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v5 = 0;
    v6 = 0;
    v7 = 0;
    v8 = v32;
    v32 = 0;
    v33 = 0;
    v34 = 0;
    goto LABEL_28;
  }
  if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
  {
    result = (WTF::StringImpl *)JSC::throwTypeError();
    *(_DWORD *)(a3 + 24) = 1;
    return result;
  }
  v11 = (JSC::Structure *)Object;
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v8 = v32;
  WTF::AtomStringImpl::addLiteral();
  v13 = JSC::JSObject::get(v11, a2, (unint64_t)v32);
  if (v32)
  {
    if (*(_DWORD *)v32 == 2)
      WTF::StringImpl::destroy(v32, v12);
    else
      *(_DWORD *)v32 -= 2;
  }
  if (!*((_DWORD *)v4 + 20)
    || (result = (WTF::StringImpl *)JSC::VM::hasExceptionsAfterHandlingTraps(v4), !(_DWORD)result))
  {
    if (v13 == 10)
    {
      v5 = 0;
      v6 = 0;
      v7 = 0;
      v32 = 0;
      v33 = 0;
      v34 = 0;
    }
    else
    {
      v36 = *((_QWORD *)a2 + 7);
      if ((v13 & 0xFFFE000000000002) != 0 || (v14 = *(unsigned __int8 *)(v13 + 5), v14 <= 0x16))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        JSC::throwTypeError();
        result = v30;
        v30 = 0;
        if (result)
        {
          if (*(_DWORD *)result == 2)
            result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v16);
          else
            *(_DWORD *)result -= 2;
        }
        v34 = 1;
      }
      else if (v14 == 36 && (JSC::JSArray::isIteratorProtocolFastAndNonObservable((JSC::JSArray *)v13) & 1) != 0)
      {
        result = WebCore::Detail::SequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLObject>>::convertArray((JSC::VM **)a2, v13, (uint64_t)&v32);
      }
      else
      {
        result = (WTF::StringImpl *)WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLObject>>::convert(a2, v13, (uint64_t)&v32);
      }
      v17 = v34;
      if (v34)
      {
        v5 = 0;
        v7 = 0;
        *(_DWORD *)(a3 + 24) = 1;
LABEL_37:
        if (v17 != -1)
          result = (WTF::StringImpl *)((uint64_t (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3344098[v17])(&v30, &v32);
        if (!v8)
          goto LABEL_42;
        goto LABEL_40;
      }
      v7 = v32;
      v6 = v33;
      v5 = HIDWORD(v33);
      v32 = 0;
      v33 = 0;
    }
    WTF::AtomStringImpl::addLiteral();
    v19 = JSC::JSObject::get(v11, a2, (unint64_t)v30);
    if (v30)
    {
      if (*(_DWORD *)v30 == 2)
        WTF::StringImpl::destroy(v30, v18);
      else
        *(_DWORD *)v30 -= 2;
    }
    if (*((_DWORD *)v4 + 20))
    {
      result = (WTF::StringImpl *)JSC::VM::hasExceptionsAfterHandlingTraps(v4);
      if ((_DWORD)result)
      {
        *(_DWORD *)(a3 + 24) = 1;
LABEL_36:
        v17 = v34;
        goto LABEL_37;
      }
    }
    if (v19 != 10)
    {
      result = (WTF::StringImpl *)WebCore::valueToUSVString(a2, v19, (uint64_t)&v30);
      v20 = v31;
      if (v31)
      {
        v22 = 1;
        goto LABEL_34;
      }
LABEL_30:
      v21 = v30;
      v30 = 0;
      if (v8)
      {
        if (*(_DWORD *)v8 == 2)
        {
          result = (WTF::StringImpl *)WTF::StringImpl::destroy(v8, v16);
          v20 = v31;
        }
        else
        {
          v20 = 0;
          *(_DWORD *)v8 -= 2;
        }
      }
      else
      {
        v20 = 0;
      }
      v22 = 0;
      v8 = 0;
      *(_QWORD *)a3 = v7;
      *(_DWORD *)(a3 + 8) = v6;
      *(_DWORD *)(a3 + 12) = v5;
      *(_QWORD *)(a3 + 16) = v21;
      v5 = 0;
      v7 = 0;
LABEL_34:
      *(_DWORD *)(a3 + 24) = v22;
      if (v20 != -1)
        result = (WTF::StringImpl *)((uint64_t (*)(uint64_t *, WTF::StringImpl **))off_1E3344088[v20])(&v36, &v30);
      goto LABEL_36;
    }
LABEL_28:
    result = (WTF::StringImpl *)WTF::StringImpl::createWithoutCopyingNonEmpty();
    v31 = 0;
    goto LABEL_30;
  }
  v5 = 0;
  v7 = 0;
  *(_DWORD *)(a3 + 24) = 1;
  if (v8)
  {
LABEL_40:
    if (*(_DWORD *)v8 == 2)
      result = (WTF::StringImpl *)WTF::StringImpl::destroy(v8, v16);
    else
      *(_DWORD *)v8 -= 2;
  }
LABEL_42:
  if (v5)
  {
    v23 = 8 * v5;
    v24 = v7;
    do
    {
      v25 = *(_QWORD *)v24;
      if (*(_QWORD *)v24)
      {
        v26 = (uint64_t *)(v25 - 16);
        v27 = *(_QWORD *)(((v25 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
        v28 = *(uint64_t **)(v25 - 8);
        if (v28)
        {
          v29 = *v26;
          *v28 = *v26;
          *(_QWORD *)(v29 + 8) = v28;
          *v26 = 0;
          v26[1] = 0;
        }
        *v26 = *(_QWORD *)(v27 + 40);
        *(_QWORD *)(v27 + 40) = v26;
        *(_QWORD *)v24 = 0;
      }
      v24 = (WTF *)((char *)v24 + 8);
      v23 -= 8;
    }
    while (v23);
  }
  if (v7)
    return (WTF::StringImpl *)WTF::fastFree(v7, v16);
  return result;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSWorker>::construct(JSC *this, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  JSCell *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WebCore::JSDOMGlobalObject *v15;
  WTF::StringImpl *v16;
  WebCore::JSWorker **v17;
  WTF *v18;
  JSC::JSCell *v19;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v21;
  JSCell *v22;
  JSValue v24;
  WTF::StringImpl *v26;
  JSC::VM *FunctionRealm;
  WebCore::JSDOMGlobalObject *v28;
  JSC::JSObject *v29;
  JSC::Structure *v30;
  unint64_t SubclassStructure;
  JSC::VM *v32;
  char hasExceptionsAfterHandlingTraps;
  __int16 v34;
  WTF::StringImpl *v35;
  WTF *v36;
  WTF::StringImpl *v37;
  int v38;
  __int16 v39;
  WTF::StringImpl *v40;
  unsigned int v41;
  JSC::VM *v42;
  WTF *v43;
  WTF::StringImpl *v44;
  char v45[8];
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)this + 7);
  v42 = (JSC::VM *)v4;
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v24.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException((JSC::VM *)v4, this, v24);
  }
  v5 = a2;
  v6 = *(_QWORD *)(a2 + 24);
  v7 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(v6 + 40));
  if (!v7)
    return (JSCell *)WebCore::throwConstructorScriptExecutionContextUnavailableError(this, &v42, (uint64_t)"Worker", 7);
  v8 = (JSCell *)v7;
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::TrustedScriptURL>,WebCore::IDLUSVString>>::convert(this, *(_QWORD *)(v5 + 48), (uint64_t)v45);
  v9 = v48;
  if (!v48)
  {
    if ((unint64_t)(*(int *)(v5 + 32) - 3) > 0xFFFFFFFFFFFFFFFDLL)
      v10 = 10;
    else
      v10 = *(_QWORD *)(v5 + 56);
    WebCore::convertDictionary<WebCore::WorkerOptions>((JSC::JSCell *)v10, (uint64_t)this, (uint64_t)&v39);
    v11 = v41;
    if (v41)
    {
      v8 = 0;
      v22 = 0;
      if (v41 == -1)
        goto LABEL_29;
      goto LABEL_28;
    }
    if (!v48)
    {
      v2 = *(unsigned int *)(*(_QWORD *)(v6 + 40) + 3200);
      LOBYTE(v43) = 0;
      LODWORD(v44) = -1;
      v12 = v47;
      if (v47 != -1)
      {
        ((void (*)(WTF **, WTF **, uint64_t *))off_1E33440B8[v47])(&v36, &v43, &v46);
        LODWORD(v44) = v12;
      }
      v34 = v39;
      v13 = v40;
      v40 = 0;
      v35 = v13;
      WebCore::Worker::create((uint64_t)v8, v2, (uint64_t)&v43, (uint64_t)&v34, (uint64_t)&v36);
      v16 = v35;
      v35 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v14);
        else
          *(_DWORD *)v16 -= 2;
      }
      if ((_DWORD)v44 != -1)
        ((void (*)(__int16 *, WTF **))off_1E33440A8[v44])(&v34, &v43);
      if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
        goto LABEL_55;
      if (!v38)
      {
        v17 = *(WebCore::JSWorker ***)(v6 + 40);
        v18 = v36;
        v36 = 0;
        v43 = v18;
        if (*(uint64_t (***)(WebCore::Worker *__hidden))v18 != off_1E347C2B0)
        {
          __break(0xC471u);
          JUMPOUT(0x19513E604);
        }
        v8 = (JSCell *)WebCore::createWrapper<WebCore::Worker,WebCore::Worker>(v17, &v43, v15);
        if (v43)
        {
          if (*((_DWORD *)v43 + 6) == 1)
            (*(void (**)(void))(*(_QWORD *)v43 + 72))();
          else
            --*((_DWORD *)v43 + 6);
        }
        goto LABEL_21;
      }
      if (v38 == 1)
      {
        LOBYTE(v43) = (_BYTE)v36;
        v26 = v37;
        v37 = 0;
        v44 = v26;
        if (!*(_QWORD *)(v4 + 16))
        {
          WebCore::propagateExceptionSlowPath(this, &v42, (unsigned __int8 *)&v43);
          v26 = v44;
        }
        v44 = 0;
        if (v26)
        {
          if (*(_DWORD *)v26 == 2)
            WTF::StringImpl::destroy(v26, v14);
          else
            *(_DWORD *)v26 -= 2;
        }
        v8 = 0;
LABEL_21:
        if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
          goto LABEL_55;
        v19 = *(JSC::JSCell **)(v5 + 40);
        if (((unint64_t)v19 & 0xFFFE000000000002) != 0
          || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v19)) == 0
          || (v2 = (uint64_t)Object, Object == *(JSC::JSGlobalObject **)(v5 + 24)))
        {
LABEL_25:
          if (!*(_DWORD *)(v4 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) == 0)
          {
LABEL_26:
            if (v38 != -1)
              ((void (*)(WTF **, WTF **))off_1E33440C8[v38])(&v43, &v36);
LABEL_28:
            ((void (*)(WTF **, __int16 *))off_1E33440D8[v11])(&v36, &v39);
            v22 = v8;
LABEL_29:
            v9 = v48;
            goto LABEL_30;
          }
LABEL_55:
          v8 = 0;
          goto LABEL_26;
        }
        v5 = *((_QWORD *)this + 7);
        FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(this, Object, v21);
        if (!*(_DWORD *)(v5 + 80))
        {
LABEL_57:
          v29 = (JSC::JSObject *)WebCore::getDOMStructure<WebCore::JSWorker>((WebCore::JSWorker *)v5, FunctionRealm, v28);
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(this, (JSC::JSGlobalObject *)v2, v29, v30);
          if (!*(_DWORD *)(v5 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) == 0)
            JSC::JSObject::setStructure(v8, (JSC::VM *)v5, SubclassStructure);
          goto LABEL_25;
        }
LABEL_61:
        v32 = FunctionRealm;
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5);
        FunctionRealm = v32;
        if ((hasExceptionsAfterHandlingTraps & 1) != 0)
          goto LABEL_25;
        goto LABEL_57;
      }
    }
    std::__throw_bad_variant_access[abi:sn180100]();
    goto LABEL_61;
  }
  v22 = 0;
LABEL_30:
  if (v9 != -1)
    ((void (*)(__int16 *, uint64_t *))off_1E33440E8[v9])(&v39, &v46);
  return v22;
}

uint64_t WebCore::ConversionResult<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::TrustedScriptURL>,WebCore::IDLUSVString>>::releaseReturnValue(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  if (*(_DWORD *)(a2 + 24))
  {
    v4 = std::__throw_bad_variant_access[abi:sn180100]();
    return WebCore::JSWorker::analyzeHeap(v4, v5);
  }
  else
  {
    v2 = result;
    *(_BYTE *)result = 0;
    *(_DWORD *)(result + 8) = -1;
    v3 = *(unsigned int *)(a2 + 16);
    if ((_DWORD)v3 != -1)
    {
      result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_1E33440B8[v3])(&v6, result, a2 + 8);
      *(_DWORD *)(v2 + 8) = v3;
    }
  }
  return result;
}

uint64_t WebCore::JSWorker::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEventTarget::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::jsWorkerConstructor(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  JSC::JSCell *v5;
  uint64_t Structure;
  JSC::Heap *v7;
  unint64_t v8;

  v2 = *(_QWORD *)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSWorkerPrototype::s_info != (char **)(16
                                                      * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  result = *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 7168);
  if (!result)
  {
    v5 = (JSC::JSCell *)WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventTarget>,(WebCore::DOMConstructorID)450>(v2, v3);
    Structure = WebCore::JSDOMConstructor<WebCore::JSWorker>::createStructure((uint64_t *)v2, v3, v5);
    result = WebCore::JSDOMConstructor<WebCore::JSWorker>::create(v2, Structure, (JSC::VM *)v3);
    *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 7168) = result;
    if (result)
    {
      if (*(_DWORD *)(v2 + 760) >= *(unsigned __int8 *)(v3 + 7))
      {
        v7 = (JSC::Heap *)(v2 + 192);
        v8 = result;
        JSC::Heap::writeBarrierSlowPath(v7, (const JSCell *)v3);
        return v8;
      }
    }
  }
  return result;
}

uint64_t WebCore::jsWorker_onmessage(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(WebCore **)(a2 + 24);
  ++*((_DWORD *)v5 + 6);
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v8 + 1192), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*((_DWORD *)v5 + 6) == 1)
    (*(void (**)(WebCore *))(*(_QWORD *)v5 + 72))(v5);
  else
    --*((_DWORD *)v5 + 6);
  return v9;
}

uint64_t WebCore::setJSWorker_onmessage(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWorker::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWorker::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(WebCore::EventTarget **)(a2 + 24);
  ++*((_DWORD *)v10 + 6);
  v11 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v11 || (v12 = *(_QWORD *)(v11 + 96)) == 0)
    v12 = WebCore::threadGlobalDataSlow(a1);
  v13 = *(_QWORD *)(v12 + 40);
  if (!v13)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v12);
    v13 = *(_QWORD *)(v12 + 40);
  }
  WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v10, (WTF::StringImpl **)(v13 + 1192), a3, (_DWORD *)a2);
  if (*((_DWORD *)v10 + 6) == 1)
    (*(void (**)(WebCore::EventTarget *))(*(_QWORD *)v10 + 72))(v10);
  else
    --*((_DWORD *)v10 + 6);
  if (a3 && (a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
  return 1;
}

uint64_t WebCore::jsWorker_onmessageerror(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(WebCore **)(a2 + 24);
  ++*((_DWORD *)v5 + 6);
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v8 + 1200), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*((_DWORD *)v5 + 6) == 1)
    (*(void (**)(WebCore *))(*(_QWORD *)v5 + 72))(v5);
  else
    --*((_DWORD *)v5 + 6);
  return v9;
}

BOOL WebCore::setJSWorker_onmessageerror(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v8 = (char **)(16 * v6);
    if ((_DWORD)v6)
      v9 = v8 == &WebCore::JSWorker::s_info;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSWorker::s_info && v8 != 0);
    }
    if (v7)
    {
      v11 = *(WebCore::EventTarget **)(a2 + 24);
      ++*((_DWORD *)v11 + 6);
      v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
      if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
        v13 = WebCore::threadGlobalDataSlow(a1);
      v14 = *(_QWORD *)(v13 + 40);
      if (!v14)
      {
        WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
        v14 = *(_QWORD *)(v13 + 40);
      }
      WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 1200), a3, (_DWORD *)a2);
      if (*((_DWORD *)v11 + 6) == 1)
      {
        (*(void (**)(WebCore::EventTarget *))(*(_QWORD *)v11 + 72))(v11);
        if (a3)
        {
LABEL_19:
          if ((a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
            JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
        }
      }
      else
      {
        --*((_DWORD *)v11 + 6);
        if (a3)
          goto LABEL_19;
      }
      return 1;
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsWorker_onerror(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(WebCore **)(a2 + 24);
  ++*((_DWORD *)v5 + 6);
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v9 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v8 + 784), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*((_DWORD *)v5 + 6) == 1)
    (*(void (**)(WebCore *))(*(_QWORD *)v5 + 72))(v5);
  else
    --*((_DWORD *)v5 + 6);
  return v9;
}

BOOL WebCore::setJSWorker_onerror(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v8 = (char **)(16 * v6);
    if ((_DWORD)v6)
      v9 = v8 == &WebCore::JSWorker::s_info;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSWorker::s_info && v8 != 0);
    }
    if (v7)
    {
      v11 = *(WebCore::EventTarget **)(a2 + 24);
      ++*((_DWORD *)v11 + 6);
      v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
      if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
        v13 = WebCore::threadGlobalDataSlow(a1);
      v14 = *(_QWORD *)(v13 + 40);
      if (!v14)
      {
        WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
        v14 = *(_QWORD *)(v13 + 40);
      }
      WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 784), a3, (_DWORD *)a2);
      if (*((_DWORD *)v11 + 6) == 1)
      {
        (*(void (**)(WebCore::EventTarget *))(*(_QWORD *)v11 + 72))(v11);
        if (a3)
        {
LABEL_19:
          if ((a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
            JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
        }
      }
      else
      {
        --*((_DWORD *)v11 + 6);
        if (a3)
          goto LABEL_19;
      }
      return 1;
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::JSWorkerOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(_QWORD **)(*(_QWORD *)a2 + 24);
  v6 = v5[5];
  if (!v6)
    return 0;
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7 || *(_BYTE *)(v7 + 180))
    return 0;
  if (v5[6] || (result = (*(uint64_t (**)(_QWORD *))(v5[4] + 64))(v5 + 4), (_DWORD)result))
  {
    if (a5)
    {
      *a5 = "ActiveDOMObject with pending activity";
      a5[1] = 38;
    }
    return 1;
  }
  return result;
}

uint64_t *WebCore::JSWorkerOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  int v4;
  _DWORD *v5;
  uint64_t *result;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  v4 = v3[6];
  v3[6] = v4 + 1;
  v5 = v3 + 2;
  if (!v3)
    v5 = 0;
  if (*(_DWORD *)(a3 + 48))
  {
    result = JSC::weakRemove<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,WebCore::JSBlob *>((uint64_t *)(a3 + 32), (uint64_t)v3);
    v4 = v3[6] - 1;
  }
  else if (*(_QWORD *)v5)
  {
    *(_QWORD *)(*(_QWORD *)v5 + 8) = 3;
    *(_QWORD *)v5 = 0;
  }
  if (!v4)
    return (uint64_t *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 72))(v3);
  v3[6] = v4;
  return result;
}

unint64_t WebCore::toJSNewlyCreated(WebCore::JSWorker **a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t result;

  if (*(uint64_t (***)(WebCore::Worker *__hidden))*a2 == off_1E347C2B0)
    return WebCore::createWrapper<WebCore::Worker,WebCore::Worker>(a1, a2, a3);
  result = 451;
  __break(0xC471u);
  return result;
}

unint64_t WebCore::createWrapper<WebCore::Worker,WebCore::Worker>(WebCore::JSWorker **a1, WTF **a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v5;
  unint64_t v6;
  WebCore::JSWorker *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t SlowCase;
  WTF *v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *Allocator;
  uint64_t v18;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  WTF *v24;
  void *v25;
  int v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  WTF *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  WTF *v37;

  v5 = *a2;
  v6 = WebCore::getDOMStructure<WebCore::JSWorker>(a1[7], (JSC::VM *)a1, a3);
  v7 = a1[7];
  v8 = *((_QWORD *)v7 + 5182);
  v9 = *(_QWORD *)(v8 + 23536);
  v10 = *(_QWORD **)(v9 + 7248);
  if (!v10)
  {
    v20 = *(_QWORD *)(v8 + 22648);
    if (__ldaxr((unsigned __int8 *)v20))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v20))
    {
LABEL_24:
      v22 = *(_QWORD *)(v20 + 2824);
      v35 = *(_QWORD *)(v22 + 7248);
      if (!v35)
      {
        v27 = WTF::fastMalloc((WTF *)0xF8);
        WTF::CString::CString((WTF::CString *)&v37, "IsoSpace T");
        v36 = 0;
        MEMORY[0x19AEA3204](v27, &v37, (char *)v7 + 192, (char *)v7 + 1872, 32, 8, &v36);
        v29 = v36;
        v36 = 0;
        if (v29)
          (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
        v30 = v37;
        v37 = 0;
        if (v30)
        {
          if (*(_DWORD *)v30 == 1)
            WTF::fastFree(v30, v28);
          else
            --*(_DWORD *)v30;
        }
        v35 = v27;
        v31 = *(_QWORD *)(v22 + 7248);
        *(_QWORD *)(v22 + 7248) = v27;
        if (v31)
          (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
        v32 = *(unsigned int *)(v20 + 2844);
        if ((_DWORD)v32 == *(_DWORD *)(v20 + 2840))
        {
          v33 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v20 + 2832, v32 + 1, (unint64_t)&v35);
          v32 = *(unsigned int *)(v20 + 2844);
          *(_QWORD *)(*(_QWORD *)(v20 + 2832) + 8 * v32) = *v33;
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)(v20 + 2832) + 8 * v32) = v27;
        }
        *(_DWORD *)(v20 + 2844) = v32 + 1;
      }
      v10 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v23 = *(_QWORD *)(v9 + 7248);
      *(_QWORD *)(v9 + 7248) = v10;
      if (v23)
      {
        v24 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v24, v25);
      }
      v26 = __ldxr((unsigned __int8 *)v20);
      if (v26 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v20))
          goto LABEL_2;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v20);
      goto LABEL_2;
    }
    MEMORY[0x19AEA534C](v20);
    goto LABEL_24;
  }
LABEL_2:
  SlowCase = v10[3];
  if (SlowCase < v10[4])
  {
LABEL_3:
    v10[3] = SlowCase + 32;
    goto LABEL_4;
  }
  SlowCase = v10[5];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v10[6];
    v10[4] = SlowCase + HIDWORD(v34);
    v10[5] = SlowCase + (int)v34;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_4:
  *(_DWORD *)SlowCase = 0;
  v12 = *a2;
  *a2 = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v6);
  *(_QWORD *)(SlowCase + 24) = v12;
  if (*((_BYTE *)v7 + 755))
    __dmb(0xAu);
  v13 = (uint64_t)a1[415];
  if ((byte_1EE3373D8 & 1) == 0)
  {
    qword_1EE3373D0 = (uint64_t)&off_1E3343BB0;
    byte_1EE3373D8 = 1;
  }
  if (v5)
    v14 = (uint64_t *)((char *)v5 + 8);
  else
    v14 = 0;
  if (*(_DWORD *)(v13 + 48))
  {
    v37 = v5;
    JSC::Weak<JSC::JSObject>::Weak(&v36, SlowCase, (uint64_t)&qword_1EE3373D0, v13);
    JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v13 + 32), (uint64_t *)&v37, &v36);
    v18 = v36;
    if (!v36)
      return SlowCase;
LABEL_45:
    *(_QWORD *)(v18 + 8) = 3;
    return SlowCase;
  }
  if ((SlowCase & 8) != 0)
    v15 = (SlowCase - 112) | 1;
  else
    v15 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v15 & 1) != 0)
    v16 = v15 + 47;
  else
    v16 = *(_QWORD *)v15 + 32;
  Allocator = *(_QWORD **)(v16 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v16 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE3373D0;
  Allocator[2] = v13;
  v18 = *v14;
  *v14 = (uint64_t)Allocator;
  if (v18)
    goto LABEL_45;
  return SlowCase;
}

unint64_t WebCore::wrap<WebCore::Worker>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  WTF *v15;

  v3 = *(_QWORD *)(a2 + 3320);
  if (*(_DWORD *)(v3 + 48))
  {
    v7 = *(_QWORD *)(v3 + 32);
    if (v7)
    {
      v8 = *(_DWORD *)(v7 - 8);
      v9 = (~(a3 << 32) + a3) ^ ((unint64_t)(~(a3 << 32) + a3) >> 22);
      v10 = 9 * ((v9 + ~(v9 << 13)) ^ ((v9 + ~(v9 << 13)) >> 8));
      v11 = (v10 ^ (v10 >> 15)) + ~((v10 ^ (v10 >> 15)) << 27);
      v12 = v8 & ((v11 >> 31) ^ v11);
      v13 = *(_QWORD *)(v7 + 16 * v12);
      if (v13 == a3)
      {
LABEL_11:
        v4 = *(_QWORD *)(v7 + 16 * v12 + 8);
        if (v4)
          goto LABEL_3;
      }
      else
      {
        v14 = 1;
        while (v13)
        {
          v12 = ((_DWORD)v12 + v14) & v8;
          v13 = *(_QWORD *)(v7 + 16 * v12);
          ++v14;
          if (v13 == a3)
            goto LABEL_11;
        }
      }
    }
  }
  else
  {
    v4 = *(_QWORD *)(a3 + 8);
    if (v4)
    {
LABEL_3:
      if ((*(_BYTE *)(v4 + 8) & 3) == 0)
      {
        v5 = *(_QWORD *)v4;
        if (*(_QWORD *)v4)
          return v5;
      }
    }
  }
  ++*(_DWORD *)(a3 + 24);
  v15 = (WTF *)a3;
  v5 = WebCore::toJSNewlyCreated((WebCore::JSWorker **)a2, &v15, (WebCore::JSDOMGlobalObject *)a3);
  if (v15)
  {
    if (*((_DWORD *)v15 + 6) == 1)
      (*(void (**)(void))(*(_QWORD *)v15 + 72))();
    else
      --*((_DWORD *)v15 + 6);
  }
  return v5;
}

unint64_t JSC::jsDynamicCast<WebCore::JSWorker *>(unint64_t result)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((result & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSWorker::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSWorker::s_info && v3 != 0);
  }
  if (!v2)
    return 0;
  return result;
}

uint64_t WebCore::JSWorkerGlobalScope::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 88);
  if (!v2 || !*(_BYTE *)(v2 + 24))
    return WebCore::JSWorkerGlobalScope::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
  result = 75;
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSWorkerGlobalScope::prototype(WebCore::JSWorkerGlobalScope *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  uint64_t v12;
  JSC::JSCell *v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;
  int v19;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_4;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSWorkerGlobalScope::s_info + ~((_QWORD)&WebCore::JSWorkerGlobalScope::s_info << 32)) ^ (((unint64_t)&WebCore::JSWorkerGlobalScope::s_info + ~((_QWORD)&WebCore::JSWorkerGlobalScope::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSWorkerGlobalScope::s_info)
  {
    v19 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v19) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v19;
      if (v11 == &WebCore::JSWorkerGlobalScope::s_info)
        goto LABEL_3;
    }
    goto LABEL_4;
  }
LABEL_3:
  v12 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v12)
  {
LABEL_4:
    v13 = (JSC::JSCell *)WebCore::JSEventTarget::prototype(this, a2, a3);
    Structure = WebCore::JSWorkerGlobalScopePrototype::createStructure((uint64_t *)this, (uint64_t)a2, v13);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSWorkerGlobalScopePrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSWorkerGlobalScope::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v12 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSWorkerGlobalScope::s_info);
  }
  return *(_QWORD *)(v12 + 48);
}

uint64_t WebCore::JSWorkerGlobalScope::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 3400));
  v4 = *(_QWORD *)(a1 + 3400);
  if (!v4)
    return JSC::JSSegmentedVariableObject::analyzeHeap();
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSSegmentedVariableObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSSegmentedVariableObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSWorkerGlobalScope::visitChildren(uint64_t a1, JSC::AbstractSlotVisitor *a2)
{
  WebCore::JSWorkerGlobalScopeBase::visitChildren(a1, (uint64_t)a2);
  return WebCore::JSWorkerGlobalScope::visitAdditionalChildren<JSC::SlotVisitor>(a1, a2);
}

uint64_t WebCore::JSWorkerGlobalScope::visitChildren(WebCore::JSWorkerGlobalScope *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;
  _QWORD v10[2];
  _QWORD *v11;
  char v12;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    v10[0] = a2;
    v10[1] = this;
    v12 = 0;
    v11 = v7;
    *((_QWORD *)a2 + 11) = v10;
    WebCore::JSDOMGlobalObject::visitChildren(this, a2, a3);
    (*(void (**)(JSC::JSCell *, _QWORD))(*(_QWORD *)a2 + 24))(a2, *((_QWORD *)this + 417));
    *(_QWORD *)(v10[0] + 88) = v11;
    result = WebCore::JSWorkerGlobalScope::visitAdditionalChildren<JSC::AbstractSlotVisitor>((uint64_t)this, (uint64_t)a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSWorkerGlobalScope::finishCreation(WebCore::JSWorkerGlobalScope *this, JSC::VM *a2, JSC::JSGlobalProxy *a3)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t SlowCase;
  unint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  int v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  int v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  int v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  int v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  int v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  int v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  int v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  int v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  int v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  int v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  int v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  int v206;
  uint64_t v207;
  uint64_t v208;
  unint64_t v209;
  int v210;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  int v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  int v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  unint64_t v223;
  int v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  int v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  int v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  int v249;
  uint64_t v250;
  uint64_t v251;
  unint64_t v252;
  int v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  unint64_t v265;
  int v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  unint64_t v274;
  int v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  unint64_t v279;
  int v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  unint64_t v286;
  int v287;
  uint64_t v288;
  uint64_t v289;
  unint64_t v290;
  int v291;
  uint64_t v292;
  uint64_t v293;
  unint64_t v294;
  int v295;
  uint64_t v296;
  uint64_t v297;
  unint64_t v298;
  int v299;
  uint64_t v300;
  uint64_t v301;
  unint64_t v302;
  int v303;
  uint64_t v304;
  uint64_t v305;
  unint64_t v306;
  int v307;
  uint64_t v308;
  uint64_t v309;
  unint64_t v310;
  int v311;
  uint64_t v312;
  uint64_t v313;
  unint64_t v314;
  int v315;
  uint64_t v316;
  uint64_t v317;
  unint64_t v318;
  int v319;
  uint64_t v320;
  uint64_t v321;
  unint64_t v322;
  int v323;
  uint64_t v324;
  uint64_t v325;
  unint64_t v326;
  int v327;
  uint64_t v328;
  uint64_t v329;
  unint64_t v330;
  int v331;
  uint64_t v332;
  uint64_t v333;
  unint64_t v334;
  int v335;
  uint64_t v336;
  uint64_t v337;
  unint64_t v338;
  int v339;
  uint64_t v340;
  uint64_t v341;
  unint64_t v342;
  int v343;
  uint64_t v344;
  uint64_t v345;
  unint64_t v346;
  int v347;
  uint64_t v348;
  uint64_t v349;
  unint64_t v350;
  int v351;
  uint64_t v352;
  uint64_t v353;
  unint64_t v354;
  int v355;
  uint64_t v356;
  uint64_t v357;
  unint64_t v358;
  int v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  unint64_t v363;
  int v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  unint64_t v368;
  int v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  unint64_t v373;
  int v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  unint64_t v384;
  int v385;
  uint64_t v386;
  unint64_t v387;
  int v388;
  unint64_t v390;
  unint64_t v391;
  unint64_t v392;
  unint64_t v393;
  unint64_t v394;
  unint64_t v395;
  unint64_t v396;
  unint64_t v397;
  unint64_t v398;
  unint64_t v399;
  unint64_t v400;
  unint64_t v401;
  unint64_t v402;
  unint64_t v403;
  unint64_t v404;
  unint64_t v405;
  unint64_t v406;
  unint64_t v407;
  unint64_t v408;
  unint64_t v409;
  unint64_t v410;
  unint64_t v411;
  unint64_t v412;
  unint64_t v413;
  unint64_t v414;
  unint64_t v415;
  unint64_t v416;
  unint64_t v417;
  unint64_t v418;
  unint64_t v419;
  unint64_t v420;
  unint64_t v421;
  unint64_t v422;
  unint64_t v423;
  unint64_t v424;
  unint64_t v425;
  unint64_t v426;
  unint64_t v427;
  unint64_t v428;
  unint64_t v429;
  unint64_t v430;
  unint64_t v431;
  unint64_t v432;
  unint64_t v433;
  unint64_t v434;
  unint64_t v435;
  unint64_t v436;
  unint64_t v437;
  unint64_t v438;
  unint64_t v439;
  unint64_t v440;
  unint64_t v441;
  unint64_t v442;
  unint64_t v443;
  unint64_t v444;
  unint64_t v445;
  unint64_t v446;
  unint64_t v447;
  unint64_t v448;
  unint64_t v449;
  unint64_t v450;
  unint64_t v451;
  unint64_t v452;
  unint64_t v453;
  unint64_t v454;
  unint64_t v455;
  unint64_t v456;
  unint64_t v457;

  v5 = (uint64_t *)((char *)a2 + 37936);
  *((_QWORD *)this + 417) = a3;
  if (this && a3 && *((_DWORD *)a2 + 190) >= *((unsigned __int8 *)this + 7))
  {
    JSC::Heap::writeBarrierSlowPath((JSC::VM *)((char *)a2 + 192), (const JSCell *)this);
    a3 = (JSC::JSGlobalProxy *)*((_QWORD *)this + 417);
  }
  WebCore::JSDOMGlobalObject::finishCreation(this, a2, a3);
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6))
  {
    v7 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 136))(v7) + 464) & 0x200) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_BarcodeDetectorConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v8 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v8 + 24))(v8))
  {
    v9 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 136))(v9) + 464) & 0x200) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_FaceDetectorConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v10 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v10 + 24))(v10))
  {
    v11 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 136))(v11) + 464) & 0x200) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_TextDetectorConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v12 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v12 + 24))(v12))
  {
    v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 136))(v13) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v14 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v14 + 24))(v14))
  {
    v15 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v15 + 136))(v15) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUAdapterConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v16 + 24))(v16))
  {
    v17 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v17 + 136))(v17) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUAdapterInfoConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v18 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v18 + 24))(v18))
  {
    v19 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 136))(v19) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUBindGroupConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v20 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v20 + 24))(v20))
  {
    v21 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 136))(v21) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUBindGroupLayoutConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v22 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v22 + 24))(v22))
  {
    SlowCase = *v5;
    if (*v5 >= (unint64_t)v5[1])
    {
      SlowCase = v5[2];
      if ((SlowCase & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        SlowCase = JSC::LocalAllocator::allocateSlowCase();
        goto LABEL_30;
      }
      v392 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
      v5[1] = SlowCase + HIDWORD(v392);
      v5[2] = SlowCase + (int)v392;
    }
    *v5 = SlowCase + 32;
LABEL_30:
    *(_DWORD *)SlowCase = 0;
    v24 = v5[450];
    v25 = *(_DWORD *)(v24 + 8);
    *(_DWORD *)SlowCase = v24 >> 4;
    *(_DWORD *)(SlowCase + 4) = v25;
    *(_QWORD *)(SlowCase + 8) = WebCore::jsWorkerGlobalScope_GPUBufferConstructor;
    *(_QWORD *)(SlowCase + 16) = 0;
    if (*((_BYTE *)a2 + 755))
      __dmb(0xAu);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v26 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v26 + 24))(v26))
    goto LABEL_39;
  v27 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v27 = v5[2];
    if ((v27 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v27 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_36;
    }
    v393 = *(_QWORD *)(v27 + 8) ^ v5[3];
    v5[1] = v27 + HIDWORD(v393);
    v5[2] = v27 + (int)v393;
  }
  *v5 = v27 + 32;
LABEL_36:
  *(_DWORD *)v27 = 0;
  v28 = v5[450];
  v29 = *(_DWORD *)(v28 + 8);
  *(_DWORD *)v27 = v28 >> 4;
  *(_DWORD *)(v27 + 4) = v29;
  *(_QWORD *)(v27 + 8) = WebCore::jsWorkerGlobalScope_GPUBufferUsageConstructor;
  *(_QWORD *)(v27 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_39:
  v30 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v30 + 24))(v30))
    goto LABEL_45;
  v31 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v31 = v5[2];
    if ((v31 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v31 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_42;
    }
    v394 = *(_QWORD *)(v31 + 8) ^ v5[3];
    v5[1] = v31 + HIDWORD(v394);
    v5[2] = v31 + (int)v394;
  }
  *v5 = v31 + 32;
LABEL_42:
  *(_DWORD *)v31 = 0;
  v32 = v5[450];
  v33 = *(_DWORD *)(v32 + 8);
  *(_DWORD *)v31 = v32 >> 4;
  *(_DWORD *)(v31 + 4) = v33;
  *(_QWORD *)(v31 + 8) = WebCore::jsWorkerGlobalScope_GPUColorWriteConstructor;
  *(_QWORD *)(v31 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_45:
  v34 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v34 + 24))(v34))
  {
    v35 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v35 + 136))(v35) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUCommandBufferConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v36 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v36 + 24))(v36))
  {
    v37 = *v5;
    if (*v5 >= (unint64_t)v5[1])
    {
      v37 = v5[2];
      if ((v37 & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        v37 = JSC::LocalAllocator::allocateSlowCase();
        goto LABEL_51;
      }
      v395 = *(_QWORD *)(v37 + 8) ^ v5[3];
      v5[1] = v37 + HIDWORD(v395);
      v5[2] = v37 + (int)v395;
    }
    *v5 = v37 + 32;
LABEL_51:
    *(_DWORD *)v37 = 0;
    v38 = v5[450];
    v39 = *(_DWORD *)(v38 + 8);
    *(_DWORD *)v37 = v38 >> 4;
    *(_DWORD *)(v37 + 4) = v39;
    *(_QWORD *)(v37 + 8) = WebCore::jsWorkerGlobalScope_GPUCommandEncoderConstructor;
    *(_QWORD *)(v37 + 16) = 0;
    if (*((_BYTE *)a2 + 755))
      __dmb(0xAu);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v40 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v40 + 24))(v40))
  {
    v41 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v41 + 136))(v41) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUCompilationInfoConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v42 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v42 + 24))(v42))
  {
    v43 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v43 + 136))(v43) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUCompilationMessageConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v44 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v44 + 24))(v44))
  {
    v45 = *v5;
    if (*v5 >= (unint64_t)v5[1])
    {
      v45 = v5[2];
      if ((v45 & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        v45 = JSC::LocalAllocator::allocateSlowCase();
        goto LABEL_63;
      }
      v396 = *(_QWORD *)(v45 + 8) ^ v5[3];
      v5[1] = v45 + HIDWORD(v396);
      v5[2] = v45 + (int)v396;
    }
    *v5 = v45 + 32;
LABEL_63:
    *(_DWORD *)v45 = 0;
    v46 = v5[450];
    v47 = *(_DWORD *)(v46 + 8);
    *(_DWORD *)v45 = v46 >> 4;
    *(_DWORD *)(v45 + 4) = v47;
    *(_QWORD *)(v45 + 8) = WebCore::jsWorkerGlobalScope_GPUComputePassEncoderConstructor;
    *(_QWORD *)(v45 + 16) = 0;
    if (*((_BYTE *)a2 + 755))
      __dmb(0xAu);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v48 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v48 + 24))(v48))
  {
    v49 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v49 + 136))(v49) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUComputePipelineConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v50 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v50 + 24))(v50))
  {
    v51 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v51 + 136))(v51) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUDeviceLostInfoConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v52 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v52 + 24))(v52))
  {
    v53 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v53 + 136))(v53) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUExternalTextureConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v54 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v54 + 24))(v54))
  {
    v55 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v55 + 136))(v55) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUInternalErrorConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v56 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v56 + 24))(v56))
  {
    v57 = *v5;
    if (*v5 >= (unint64_t)v5[1])
    {
      v57 = v5[2];
      if ((v57 & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        v57 = JSC::LocalAllocator::allocateSlowCase();
        goto LABEL_81;
      }
      v397 = *(_QWORD *)(v57 + 8) ^ v5[3];
      v5[1] = v57 + HIDWORD(v397);
      v5[2] = v57 + (int)v397;
    }
    *v5 = v57 + 32;
LABEL_81:
    *(_DWORD *)v57 = 0;
    v58 = v5[450];
    v59 = *(_DWORD *)(v58 + 8);
    *(_DWORD *)v57 = v58 >> 4;
    *(_DWORD *)(v57 + 4) = v59;
    *(_QWORD *)(v57 + 8) = WebCore::jsWorkerGlobalScope_GPUMapModeConstructor;
    *(_QWORD *)(v57 + 16) = 0;
    if (*((_BYTE *)a2 + 755))
      __dmb(0xAu);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v60 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v60 + 24))(v60))
  {
    v61 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v61 + 136))(v61) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUOutOfMemoryErrorConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v62 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v62 + 24))(v62))
  {
    v63 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v63 + 136))(v63) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUPipelineLayoutConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v64 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v64 + 24))(v64))
  {
    v65 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v65 + 136))(v65) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUQuerySetConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v66 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v66 + 24))(v66))
  {
    v67 = *v5;
    if (*v5 >= (unint64_t)v5[1])
    {
      v67 = v5[2];
      if ((v67 & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        v67 = JSC::LocalAllocator::allocateSlowCase();
        goto LABEL_96;
      }
      v398 = *(_QWORD *)(v67 + 8) ^ v5[3];
      v5[1] = v67 + HIDWORD(v398);
      v5[2] = v67 + (int)v398;
    }
    *v5 = v67 + 32;
LABEL_96:
    *(_DWORD *)v67 = 0;
    v68 = v5[450];
    v69 = *(_DWORD *)(v68 + 8);
    *(_DWORD *)v67 = v68 >> 4;
    *(_DWORD *)(v67 + 4) = v69;
    *(_QWORD *)(v67 + 8) = WebCore::jsWorkerGlobalScope_GPUQueueConstructor;
    *(_QWORD *)(v67 + 16) = 0;
    if (*((_BYTE *)a2 + 755))
      __dmb(0xAu);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v70 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v70 + 24))(v70))
  {
    v71 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v71 + 136))(v71) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPURenderBundleConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v72 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v72 + 24))(v72))
  {
    v73 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v73 + 136))(v73) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPURenderBundleEncoderConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v74 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v74 + 24))(v74))
  {
    v75 = *v5;
    if (*v5 >= (unint64_t)v5[1])
    {
      v75 = v5[2];
      if ((v75 & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        v75 = JSC::LocalAllocator::allocateSlowCase();
        goto LABEL_108;
      }
      v399 = *(_QWORD *)(v75 + 8) ^ v5[3];
      v5[1] = v75 + HIDWORD(v399);
      v5[2] = v75 + (int)v399;
    }
    *v5 = v75 + 32;
LABEL_108:
    *(_DWORD *)v75 = 0;
    v76 = v5[450];
    v77 = *(_DWORD *)(v76 + 8);
    *(_DWORD *)v75 = v76 >> 4;
    *(_DWORD *)(v75 + 4) = v77;
    *(_QWORD *)(v75 + 8) = WebCore::jsWorkerGlobalScope_GPURenderPassEncoderConstructor;
    *(_QWORD *)(v75 + 16) = 0;
    if (*((_BYTE *)a2 + 755))
      __dmb(0xAu);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v78 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v78 + 24))(v78))
  {
    v79 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v79 + 136))(v79) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPURenderPipelineConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v80 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v80 + 24))(v80))
  {
    v81 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v81 + 136))(v81) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUSamplerConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v82 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v82 + 24))(v82))
  {
    v83 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v83 + 136))(v83) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUShaderModuleConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v84 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v84 + 24))(v84))
  {
    v85 = *v5;
    if (*v5 >= (unint64_t)v5[1])
    {
      v85 = v5[2];
      if ((v85 & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        v85 = JSC::LocalAllocator::allocateSlowCase();
        goto LABEL_123;
      }
      v400 = *(_QWORD *)(v85 + 8) ^ v5[3];
      v5[1] = v85 + HIDWORD(v400);
      v5[2] = v85 + (int)v400;
    }
    *v5 = v85 + 32;
LABEL_123:
    *(_DWORD *)v85 = 0;
    v86 = v5[450];
    v87 = *(_DWORD *)(v86 + 8);
    *(_DWORD *)v85 = v86 >> 4;
    *(_DWORD *)(v85 + 4) = v87;
    *(_QWORD *)(v85 + 8) = WebCore::jsWorkerGlobalScope_GPUShaderStageConstructor;
    *(_QWORD *)(v85 + 16) = 0;
    if (*((_BYTE *)a2 + 755))
      __dmb(0xAu);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v88 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v88 + 24))(v88))
  {
    v89 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v89 + 136))(v89) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUSupportedFeaturesConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v90 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v90 + 24))(v90))
  {
    v91 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v91 + 136))(v91) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUSupportedLimitsConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v92 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v92 + 24))(v92))
  {
    v93 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v93 + 136))(v93) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUTextureConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v94 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v94 + 24))(v94))
  {
    v95 = *v5;
    if (*v5 >= (unint64_t)v5[1])
    {
      v95 = v5[2];
      if ((v95 & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        v95 = JSC::LocalAllocator::allocateSlowCase();
        goto LABEL_138;
      }
      v401 = *(_QWORD *)(v95 + 8) ^ v5[3];
      v5[1] = v95 + HIDWORD(v401);
      v5[2] = v95 + (int)v401;
    }
    *v5 = v95 + 32;
LABEL_138:
    *(_DWORD *)v95 = 0;
    v96 = v5[450];
    v97 = *(_DWORD *)(v96 + 8);
    *(_DWORD *)v95 = v96 >> 4;
    *(_DWORD *)(v95 + 4) = v97;
    *(_QWORD *)(v95 + 8) = WebCore::jsWorkerGlobalScope_GPUTextureUsageConstructor;
    *(_QWORD *)(v95 + 16) = 0;
    if (*((_BYTE *)a2 + 755))
      __dmb(0xAu);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v98 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v98 + 24))(v98))
  {
    v99 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v99 + 136))(v99) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUTextureViewConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v100 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v100 + 24))(v100))
  {
    v101 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v101 + 136))(v101) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUUncapturedErrorEventConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v102 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v102 + 24))(v102))
  {
    v103 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v103 + 136))(v103) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUValidationErrorConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v104 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v104 + 24))(v104))
  {
    v105 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v105 + 136))(v105) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_WGSLLanguageFeaturesConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v106 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v106 + 24))(v106))
  {
    v107 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v107 + 136))(v107) + 432) & 0x100000000000) != 0)
    {
      v108 = *v5;
      if (*v5 >= (unint64_t)v5[1])
      {
        v108 = v5[2];
        if ((v108 & 1) != 0)
        {
          JSC::sanitizeStackForVM();
          v108 = JSC::LocalAllocator::allocateSlowCase();
          goto LABEL_157;
        }
        v431 = *(_QWORD *)(v108 + 8) ^ v5[3];
        v5[1] = v108 + HIDWORD(v431);
        v5[2] = v108 + (int)v431;
      }
      *v5 = v108 + 32;
LABEL_157:
      *(_DWORD *)v108 = 0;
      v109 = v5[450];
      v110 = *(_DWORD *)(v109 + 8);
      *(_DWORD *)v108 = v109 >> 4;
      *(_DWORD *)(v108 + 4) = v110;
      *(_QWORD *)(v108 + 8) = WebCore::jsWorkerGlobalScope_CacheConstructor;
      *(_QWORD *)(v108 + 16) = 0;
      if (*((_BYTE *)a2 + 755))
        __dmb(0xAu);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v111 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v111 + 24))(v111))
    goto LABEL_167;
  v112 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v112 + 136))(v112) + 432) & 0x100000000000) == 0)
    goto LABEL_167;
  v113 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v113 = v5[2];
    if ((v113 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v113 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_164;
    }
    v432 = *(_QWORD *)(v113 + 8) ^ v5[3];
    v5[1] = v113 + HIDWORD(v432);
    v5[2] = v113 + (int)v432;
  }
  *v5 = v113 + 32;
LABEL_164:
  *(_DWORD *)v113 = 0;
  v114 = v5[450];
  v115 = *(_DWORD *)(v114 + 8);
  *(_DWORD *)v113 = v114 >> 4;
  *(_DWORD *)(v113 + 4) = v115;
  *(_QWORD *)(v113 + 8) = WebCore::jsWorkerGlobalScope_CacheStorageConstructor;
  *(_QWORD *)(v113 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_167:
  v116 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v116 + 24))(v116))
    goto LABEL_174;
  v117 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v117 + 136))(v117) + 448) & 2) == 0)
    goto LABEL_174;
  v118 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v118 = v5[2];
    if ((v118 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v118 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_171;
    }
    v433 = *(_QWORD *)(v118 + 8) ^ v5[3];
    v5[1] = v118 + HIDWORD(v433);
    v5[2] = v118 + (int)v433;
  }
  *v5 = v118 + 32;
LABEL_171:
  *(_DWORD *)v118 = 0;
  v119 = v5[450];
  v120 = *(_DWORD *)(v119 + 8);
  *(_DWORD *)v118 = v119 >> 4;
  *(_DWORD *)(v118 + 4) = v120;
  *(_QWORD *)(v118 + 8) = WebCore::jsWorkerGlobalScope_FileSystemDirectoryHandleConstructor;
  *(_QWORD *)(v118 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_174:
  v121 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v121 + 24))(v121))
    goto LABEL_181;
  v122 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v122 + 136))(v122) + 448) & 2) == 0)
    goto LABEL_181;
  v123 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v123 = v5[2];
    if ((v123 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v123 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_178;
    }
    v452 = *(_QWORD *)(v123 + 8) ^ v5[3];
    v5[1] = v123 + HIDWORD(v452);
    v5[2] = v123 + (int)v452;
  }
  *v5 = v123 + 32;
LABEL_178:
  *(_DWORD *)v123 = 0;
  v124 = v5[450];
  v125 = *(_DWORD *)(v124 + 8);
  *(_DWORD *)v123 = v124 >> 4;
  *(_DWORD *)(v123 + 4) = v125;
  *(_QWORD *)(v123 + 8) = WebCore::jsWorkerGlobalScope_FileSystemFileHandleConstructor;
  *(_QWORD *)(v123 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_181:
  v126 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v126 + 24))(v126))
    goto LABEL_188;
  v127 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v127 + 136))(v127) + 448) & 2) == 0)
    goto LABEL_188;
  v128 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v128 = v5[2];
    if ((v128 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v128 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_185;
    }
    v453 = *(_QWORD *)(v128 + 8) ^ v5[3];
    v5[1] = v128 + HIDWORD(v453);
    v5[2] = v128 + (int)v453;
  }
  *v5 = v128 + 32;
LABEL_185:
  *(_DWORD *)v128 = 0;
  v129 = v5[450];
  v130 = *(_DWORD *)(v129 + 8);
  *(_DWORD *)v128 = v129 >> 4;
  *(_DWORD *)(v128 + 4) = v130;
  *(_QWORD *)(v128 + 8) = WebCore::jsWorkerGlobalScope_FileSystemHandleConstructor;
  *(_QWORD *)(v128 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_188:
  v131 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v131 + 136))(v131) + 448) & 0x8000000) == 0)
    goto LABEL_194;
  v132 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v132 = v5[2];
    if ((v132 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v132 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_191;
    }
    v402 = *(_QWORD *)(v132 + 8) ^ v5[3];
    v5[1] = v132 + HIDWORD(v402);
    v5[2] = v132 + (int)v402;
  }
  *v5 = v132 + 32;
LABEL_191:
  *(_DWORD *)v132 = 0;
  v133 = v5[450];
  v134 = *(_DWORD *)(v133 + 8);
  *(_DWORD *)v132 = v133 >> 4;
  *(_DWORD *)(v132 + 4) = v134;
  *(_QWORD *)(v132 + 8) = WebCore::jsWorkerGlobalScope_IDBCursorConstructor;
  *(_QWORD *)(v132 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_194:
  v135 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v135 + 136))(v135) + 448) & 0x8000000) == 0)
    goto LABEL_200;
  v136 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v136 = v5[2];
    if ((v136 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v136 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_197;
    }
    v434 = *(_QWORD *)(v136 + 8) ^ v5[3];
    v5[1] = v136 + HIDWORD(v434);
    v5[2] = v136 + (int)v434;
  }
  *v5 = v136 + 32;
LABEL_197:
  *(_DWORD *)v136 = 0;
  v137 = v5[450];
  v138 = *(_DWORD *)(v137 + 8);
  *(_DWORD *)v136 = v137 >> 4;
  *(_DWORD *)(v136 + 4) = v138;
  *(_QWORD *)(v136 + 8) = WebCore::jsWorkerGlobalScope_IDBCursorWithValueConstructor;
  *(_QWORD *)(v136 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_200:
  v139 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v139 + 136))(v139) + 448) & 0x8000000) == 0)
    goto LABEL_206;
  v140 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v140 = v5[2];
    if ((v140 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v140 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_203;
    }
    v435 = *(_QWORD *)(v140 + 8) ^ v5[3];
    v5[1] = v140 + HIDWORD(v435);
    v5[2] = v140 + (int)v435;
  }
  *v5 = v140 + 32;
LABEL_203:
  *(_DWORD *)v140 = 0;
  v141 = v5[450];
  v142 = *(_DWORD *)(v141 + 8);
  *(_DWORD *)v140 = v141 >> 4;
  *(_DWORD *)(v140 + 4) = v142;
  *(_QWORD *)(v140 + 8) = WebCore::jsWorkerGlobalScope_IDBDatabaseConstructor;
  *(_QWORD *)(v140 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_206:
  v143 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v143 + 136))(v143) + 448) & 0x8000000) == 0)
    goto LABEL_212;
  v144 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v144 = v5[2];
    if ((v144 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v144 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_209;
    }
    v403 = *(_QWORD *)(v144 + 8) ^ v5[3];
    v5[1] = v144 + HIDWORD(v403);
    v5[2] = v144 + (int)v403;
  }
  *v5 = v144 + 32;
LABEL_209:
  *(_DWORD *)v144 = 0;
  v145 = v5[450];
  v146 = *(_DWORD *)(v145 + 8);
  *(_DWORD *)v144 = v145 >> 4;
  *(_DWORD *)(v144 + 4) = v146;
  *(_QWORD *)(v144 + 8) = WebCore::jsWorkerGlobalScope_IDBFactoryConstructor;
  *(_QWORD *)(v144 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_212:
  v147 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v147 + 136))(v147) + 448) & 0x8000000) == 0)
    goto LABEL_218;
  v148 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v148 = v5[2];
    if ((v148 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v148 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_215;
    }
    v436 = *(_QWORD *)(v148 + 8) ^ v5[3];
    v5[1] = v148 + HIDWORD(v436);
    v5[2] = v148 + (int)v436;
  }
  *v5 = v148 + 32;
LABEL_215:
  *(_DWORD *)v148 = 0;
  v149 = v5[450];
  v150 = *(_DWORD *)(v149 + 8);
  *(_DWORD *)v148 = v149 >> 4;
  *(_DWORD *)(v148 + 4) = v150;
  *(_QWORD *)(v148 + 8) = WebCore::jsWorkerGlobalScope_IDBIndexConstructor;
  *(_QWORD *)(v148 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_218:
  v151 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v151 + 136))(v151) + 448) & 0x8000000) == 0)
    goto LABEL_224;
  v152 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v152 = v5[2];
    if ((v152 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v152 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_221;
    }
    v404 = *(_QWORD *)(v152 + 8) ^ v5[3];
    v5[1] = v152 + HIDWORD(v404);
    v5[2] = v152 + (int)v404;
  }
  *v5 = v152 + 32;
LABEL_221:
  *(_DWORD *)v152 = 0;
  v153 = v5[450];
  v154 = *(_DWORD *)(v153 + 8);
  *(_DWORD *)v152 = v153 >> 4;
  *(_DWORD *)(v152 + 4) = v154;
  *(_QWORD *)(v152 + 8) = WebCore::jsWorkerGlobalScope_IDBKeyRangeConstructor;
  *(_QWORD *)(v152 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_224:
  v155 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v155 + 136))(v155) + 448) & 0x8000000) == 0)
    goto LABEL_230;
  v156 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v156 = v5[2];
    if ((v156 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v156 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_227;
    }
    v405 = *(_QWORD *)(v156 + 8) ^ v5[3];
    v5[1] = v156 + HIDWORD(v405);
    v5[2] = v156 + (int)v405;
  }
  *v5 = v156 + 32;
LABEL_227:
  *(_DWORD *)v156 = 0;
  v157 = v5[450];
  v158 = *(_DWORD *)(v157 + 8);
  *(_DWORD *)v156 = v157 >> 4;
  *(_DWORD *)(v156 + 4) = v158;
  *(_QWORD *)(v156 + 8) = WebCore::jsWorkerGlobalScope_IDBObjectStoreConstructor;
  *(_QWORD *)(v156 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_230:
  v159 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v159 + 136))(v159) + 448) & 0x8000000) == 0)
    goto LABEL_236;
  v160 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v160 = v5[2];
    if ((v160 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v160 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_233;
    }
    v406 = *(_QWORD *)(v160 + 8) ^ v5[3];
    v5[1] = v160 + HIDWORD(v406);
    v5[2] = v160 + (int)v406;
  }
  *v5 = v160 + 32;
LABEL_233:
  *(_DWORD *)v160 = 0;
  v161 = v5[450];
  v162 = *(_DWORD *)(v161 + 8);
  *(_DWORD *)v160 = v161 >> 4;
  *(_DWORD *)(v160 + 4) = v162;
  *(_QWORD *)(v160 + 8) = WebCore::jsWorkerGlobalScope_IDBOpenDBRequestConstructor;
  *(_QWORD *)(v160 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_236:
  v163 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v163 + 136))(v163) + 448) & 0x8000000) == 0)
    goto LABEL_242;
  v164 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v164 = v5[2];
    if ((v164 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v164 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_239;
    }
    v407 = *(_QWORD *)(v164 + 8) ^ v5[3];
    v5[1] = v164 + HIDWORD(v407);
    v5[2] = v164 + (int)v407;
  }
  *v5 = v164 + 32;
LABEL_239:
  *(_DWORD *)v164 = 0;
  v165 = v5[450];
  v166 = *(_DWORD *)(v165 + 8);
  *(_DWORD *)v164 = v165 >> 4;
  *(_DWORD *)(v164 + 4) = v166;
  *(_QWORD *)(v164 + 8) = WebCore::jsWorkerGlobalScope_IDBRequestConstructor;
  *(_QWORD *)(v164 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_242:
  v167 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v167 + 136))(v167) + 448) & 0x8000000) == 0)
    goto LABEL_248;
  v168 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v168 = v5[2];
    if ((v168 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v168 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_245;
    }
    v408 = *(_QWORD *)(v168 + 8) ^ v5[3];
    v5[1] = v168 + HIDWORD(v408);
    v5[2] = v168 + (int)v408;
  }
  *v5 = v168 + 32;
LABEL_245:
  *(_DWORD *)v168 = 0;
  v169 = v5[450];
  v170 = *(_DWORD *)(v169 + 8);
  *(_DWORD *)v168 = v169 >> 4;
  *(_DWORD *)(v168 + 4) = v170;
  *(_QWORD *)(v168 + 8) = WebCore::jsWorkerGlobalScope_IDBTransactionConstructor;
  *(_QWORD *)(v168 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_248:
  v171 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v171 + 136))(v171) + 448) & 0x8000000) == 0)
    goto LABEL_254;
  v172 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v172 = v5[2];
    if ((v172 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v172 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_251;
    }
    v409 = *(_QWORD *)(v172 + 8) ^ v5[3];
    v5[1] = v172 + HIDWORD(v409);
    v5[2] = v172 + (int)v409;
  }
  *v5 = v172 + 32;
LABEL_251:
  *(_DWORD *)v172 = 0;
  v173 = v5[450];
  v174 = *(_DWORD *)(v173 + 8);
  *(_DWORD *)v172 = v173 >> 4;
  *(_DWORD *)(v172 + 4) = v174;
  *(_QWORD *)(v172 + 8) = WebCore::jsWorkerGlobalScope_IDBVersionChangeEventConstructor;
  *(_QWORD *)(v172 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_254:
  v175 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_DWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v175 + 136))(v175) + 488) & 0x800) == 0)
    goto LABEL_260;
  v176 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v176 = v5[2];
    if ((v176 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v176 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_257;
    }
    v410 = *(_QWORD *)(v176 + 8) ^ v5[3];
    v5[1] = v176 + HIDWORD(v410);
    v5[2] = v176 + (int)v410;
  }
  *v5 = v176 + 32;
LABEL_257:
  *(_DWORD *)v176 = 0;
  v177 = v5[450];
  v178 = *(_DWORD *)(v177 + 8);
  *(_DWORD *)v176 = v177 >> 4;
  *(_DWORD *)(v176 + 4) = v178;
  *(_QWORD *)(v176 + 8) = WebCore::jsWorkerGlobalScope_RTCDataChannelConstructor;
  *(_QWORD *)(v176 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_260:
  v179 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_DWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v179 + 136))(v179) + 488) & 0x8000) == 0)
    goto LABEL_266;
  v180 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v180 = v5[2];
    if ((v180 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v180 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_263;
    }
    v411 = *(_QWORD *)(v180 + 8) ^ v5[3];
    v5[1] = v180 + HIDWORD(v411);
    v5[2] = v180 + (int)v411;
  }
  *v5 = v180 + 32;
LABEL_263:
  *(_DWORD *)v180 = 0;
  v181 = v5[450];
  v182 = *(_DWORD *)(v181 + 8);
  *(_DWORD *)v180 = v181 >> 4;
  *(_DWORD *)(v180 + 4) = v182;
  *(_QWORD *)(v180 + 8) = WebCore::jsWorkerGlobalScope_RTCTransformEventConstructor;
  *(_QWORD *)(v180 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_266:
  v183 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v183 + 136))(v183) + 456) & 0x10000000) == 0)
    goto LABEL_272;
  v184 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v184 = v5[2];
    if ((v184 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v184 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_269;
    }
    v412 = *(_QWORD *)(v184 + 8) ^ v5[3];
    v5[1] = v184 + HIDWORD(v412);
    v5[2] = v184 + (int)v412;
  }
  *v5 = v184 + 32;
LABEL_269:
  *(_DWORD *)v184 = 0;
  v185 = v5[450];
  v186 = *(_DWORD *)(v185 + 8);
  *(_DWORD *)v184 = v185 >> 4;
  *(_DWORD *)(v184 + 4) = v186;
  *(_QWORD *)(v184 + 8) = WebCore::jsWorkerGlobalScope_PermissionsConstructor;
  *(_QWORD *)(v184 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_272:
  v187 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v187 + 24))(v187))
    goto LABEL_279;
  v188 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v188 + 136))(v188) + 456) & 0x4000000000) == 0)
    goto LABEL_279;
  v189 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v189 = v5[2];
    if ((v189 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v189 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_276;
    }
    v437 = *(_QWORD *)(v189 + 8) ^ v5[3];
    v5[1] = v189 + HIDWORD(v437);
    v5[2] = v189 + (int)v437;
  }
  *v5 = v189 + 32;
LABEL_276:
  *(_DWORD *)v189 = 0;
  v190 = v5[450];
  v191 = *(_DWORD *)(v190 + 8);
  *(_DWORD *)v189 = v190 >> 4;
  *(_DWORD *)(v189 + 4) = v191;
  *(_QWORD *)(v189 + 8) = WebCore::jsWorkerGlobalScope_PushManagerConstructor;
  *(_QWORD *)(v189 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_279:
  v192 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v192 + 24))(v192))
    goto LABEL_286;
  v193 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v193 + 136))(v193) + 456) & 0x4000000000) == 0)
    goto LABEL_286;
  v194 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v194 = v5[2];
    if ((v194 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v194 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_283;
    }
    v438 = *(_QWORD *)(v194 + 8) ^ v5[3];
    v5[1] = v194 + HIDWORD(v438);
    v5[2] = v194 + (int)v438;
  }
  *v5 = v194 + 32;
LABEL_283:
  *(_DWORD *)v194 = 0;
  v195 = v5[450];
  v196 = *(_DWORD *)(v195 + 8);
  *(_DWORD *)v194 = v195 >> 4;
  *(_DWORD *)(v194 + 4) = v196;
  *(_QWORD *)(v194 + 8) = WebCore::jsWorkerGlobalScope_PushSubscriptionConstructor;
  *(_QWORD *)(v194 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_286:
  v197 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v197 + 24))(v197))
    goto LABEL_293;
  v198 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v198 + 136))(v198) + 456) & 0x4000000000) == 0)
    goto LABEL_293;
  v199 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v199 = v5[2];
    if ((v199 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v199 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_290;
    }
    v454 = *(_QWORD *)(v199 + 8) ^ v5[3];
    v5[1] = v199 + HIDWORD(v454);
    v5[2] = v199 + (int)v454;
  }
  *v5 = v199 + 32;
LABEL_290:
  *(_DWORD *)v199 = 0;
  v200 = v5[450];
  v201 = *(_DWORD *)(v200 + 8);
  *(_DWORD *)v199 = v200 >> 4;
  *(_DWORD *)(v199 + 4) = v201;
  *(_QWORD *)(v199 + 8) = WebCore::jsWorkerGlobalScope_PushSubscriptionOptionsConstructor;
  *(_QWORD *)(v199 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_293:
  v202 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v202 + 136))(v202) + 440) & 0x100000000000) != 0)
  {
    JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_DeprecationReportBodyConstructor, 0);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v203 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v203 + 136))(v203) + 456) & 0x8000000000) != 0)
  {
    v204 = *v5;
    if (*v5 >= (unint64_t)v5[1])
    {
      v204 = v5[2];
      if ((v204 & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        v204 = JSC::LocalAllocator::allocateSlowCase();
        goto LABEL_298;
      }
      v413 = *(_QWORD *)(v204 + 8) ^ v5[3];
      v5[1] = v204 + HIDWORD(v413);
      v5[2] = v204 + (int)v413;
    }
    *v5 = v204 + 32;
LABEL_298:
    *(_DWORD *)v204 = 0;
    v205 = v5[450];
    v206 = *(_DWORD *)(v205 + 8);
    *(_DWORD *)v204 = v205 >> 4;
    *(_DWORD *)(v204 + 4) = v206;
    *(_QWORD *)(v204 + 8) = WebCore::jsWorkerGlobalScope_ReportConstructor;
    *(_QWORD *)(v204 + 16) = 0;
    if (*((_BYTE *)a2 + 755))
      __dmb(0xAu);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v207 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v207 + 136))(v207) + 456) & 0x8000000000) == 0)
    goto LABEL_307;
  v208 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v208 = v5[2];
    if ((v208 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v208 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_304;
    }
    v439 = *(_QWORD *)(v208 + 8) ^ v5[3];
    v5[1] = v208 + HIDWORD(v439);
    v5[2] = v208 + (int)v439;
  }
  *v5 = v208 + 32;
LABEL_304:
  *(_DWORD *)v208 = 0;
  v209 = v5[450];
  v210 = *(_DWORD *)(v209 + 8);
  *(_DWORD *)v208 = v209 >> 4;
  *(_DWORD *)(v208 + 4) = v210;
  *(_QWORD *)(v208 + 8) = WebCore::jsWorkerGlobalScope_ReportBodyConstructor;
  *(_QWORD *)(v208 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_307:
  v211 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v211 + 136))(v211) + 456) & 0x8000000000) == 0)
    goto LABEL_313;
  v212 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v212 = v5[2];
    if ((v212 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v212 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_310;
    }
    v440 = *(_QWORD *)(v212 + 8) ^ v5[3];
    v5[1] = v212 + HIDWORD(v440);
    v5[2] = v212 + (int)v440;
  }
  *v5 = v212 + 32;
LABEL_310:
  *(_DWORD *)v212 = 0;
  v213 = v5[450];
  v214 = *(_DWORD *)(v213 + 8);
  *(_DWORD *)v212 = v213 >> 4;
  *(_DWORD *)(v212 + 4) = v214;
  *(_QWORD *)(v212 + 8) = WebCore::jsWorkerGlobalScope_ReportingObserverConstructor;
  *(_QWORD *)(v212 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_313:
  v215 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v215 + 24))(v215))
    goto LABEL_320;
  v216 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v216 + 136))(v216) + 464) & 0x100000000000) == 0)
    goto LABEL_320;
  v217 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v217 = v5[2];
    if ((v217 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v217 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_317;
    }
    v455 = *(_QWORD *)(v217 + 8) ^ v5[3];
    v5[1] = v217 + HIDWORD(v455);
    v5[2] = v217 + (int)v455;
  }
  *v5 = v217 + 32;
LABEL_317:
  *(_DWORD *)v217 = 0;
  v218 = v5[450];
  v219 = *(_DWORD *)(v218 + 8);
  *(_DWORD *)v217 = v218 >> 4;
  *(_DWORD *)(v217 + 4) = v219;
  *(_QWORD *)(v217 + 8) = WebCore::jsWorkerGlobalScope_StorageManagerConstructor;
  *(_QWORD *)(v217 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_320:
  v220 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v220 + 24))(v220))
    goto LABEL_327;
  v221 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v221 + 136))(v221) + 472) & 0x4000000) == 0)
    goto LABEL_327;
  v222 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v222 = v5[2];
    if ((v222 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v222 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_324;
    }
    v456 = *(_QWORD *)(v222 + 8) ^ v5[3];
    v5[1] = v222 + HIDWORD(v456);
    v5[2] = v222 + (int)v456;
  }
  *v5 = v222 + 32;
LABEL_324:
  *(_DWORD *)v222 = 0;
  v223 = v5[450];
  v224 = *(_DWORD *)(v223 + 8);
  *(_DWORD *)v222 = v223 >> 4;
  *(_DWORD *)(v222 + 4) = v224;
  *(_QWORD *)(v222 + 8) = WebCore::jsWorkerGlobalScope_LockConstructor;
  *(_QWORD *)(v222 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_327:
  v225 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v225 + 24))(v225))
    goto LABEL_334;
  v226 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v226 + 136))(v226) + 472) & 0x4000000) == 0)
    goto LABEL_334;
  v227 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v227 = v5[2];
    if ((v227 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v227 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_331;
    }
    v441 = *(_QWORD *)(v227 + 8) ^ v5[3];
    v5[1] = v227 + HIDWORD(v441);
    v5[2] = v227 + (int)v441;
  }
  *v5 = v227 + 32;
LABEL_331:
  *(_DWORD *)v227 = 0;
  v228 = v5[450];
  v229 = *(_DWORD *)(v228 + 8);
  *(_DWORD *)v227 = v228 >> 4;
  *(_DWORD *)(v227 + 4) = v229;
  *(_QWORD *)(v227 + 8) = WebCore::jsWorkerGlobalScope_LockManagerConstructor;
  *(_QWORD *)(v227 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_334:
  v230 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v230 + 136))(v230) + 472) & 0x100000000) == 0)
    goto LABEL_340;
  v231 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v231 = v5[2];
    if ((v231 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v231 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_337;
    }
    v442 = *(_QWORD *)(v231 + 8) ^ v5[3];
    v5[1] = v231 + HIDWORD(v442);
    v5[2] = v231 + (int)v442;
  }
  *v5 = v231 + 32;
LABEL_337:
  *(_DWORD *)v231 = 0;
  v232 = v5[450];
  v233 = *(_DWORD *)(v232 + 8);
  *(_DWORD *)v231 = v232 >> 4;
  *(_DWORD *)(v231 + 4) = v233;
  *(_QWORD *)(v231 + 8) = WebCore::jsWorkerGlobalScope_WebSocketConstructor;
  *(_QWORD *)(v231 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_340:
  v234 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v234 + 24))(v234))
  {
    v235 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v235 + 136))(v235) + 472) & 0x200000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_WebTransportConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v236 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v236 + 24))(v236))
  {
    v237 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v237 + 136))(v237) + 472) & 0x200000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_WebTransportBidirectionalStreamConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v238 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v238 + 24))(v238))
  {
    v239 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v239 + 136))(v239) + 472) & 0x200000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_WebTransportDatagramDuplexStreamConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v240 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v240 + 24))(v240))
  {
    v241 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v241 + 136))(v241) + 472) & 0x200000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_WebTransportErrorConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v242 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v242 + 24))(v242))
  {
    v243 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v243 + 136))(v243) + 472) & 0x200000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_WebTransportReceiveStreamConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v244 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v244 + 24))(v244))
  {
    v245 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v245 + 136))(v245) + 472) & 0x200000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_WebTransportSendStreamConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v246 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v246 + 24))(v246))
  {
    v247 = *v5;
    if (*v5 >= (unint64_t)v5[1])
    {
      v247 = v5[2];
      if ((v247 & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        v247 = JSC::LocalAllocator::allocateSlowCase();
        goto LABEL_361;
      }
      v414 = *(_QWORD *)(v247 + 8) ^ v5[3];
      v5[1] = v247 + HIDWORD(v414);
      v5[2] = v247 + (int)v414;
    }
    *v5 = v247 + 32;
LABEL_361:
    *(_DWORD *)v247 = 0;
    v248 = v5[450];
    v249 = *(_DWORD *)(v248 + 8);
    *(_DWORD *)v247 = v248 >> 4;
    *(_DWORD *)(v247 + 4) = v249;
    *(_QWORD *)(v247 + 8) = WebCore::jsWorkerGlobalScope_CryptoKeyConstructor;
    *(_QWORD *)(v247 + 16) = 0;
    if (*((_BYTE *)a2 + 755))
      __dmb(0xAu);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v250 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v250 + 24))(v250))
    goto LABEL_370;
  v251 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v251 = v5[2];
    if ((v251 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v251 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_367;
    }
    v415 = *(_QWORD *)(v251 + 8) ^ v5[3];
    v5[1] = v251 + HIDWORD(v415);
    v5[2] = v251 + (int)v415;
  }
  *v5 = v251 + 32;
LABEL_367:
  *(_DWORD *)v251 = 0;
  v252 = v5[450];
  v253 = *(_DWORD *)(v252 + 8);
  *(_DWORD *)v251 = v252 >> 4;
  *(_DWORD *)(v251 + 4) = v253;
  *(_QWORD *)(v251 + 8) = WebCore::jsWorkerGlobalScope_SubtleCryptoConstructor;
  *(_QWORD *)(v251 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_370:
  v254 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v254 + 136))(v254) + 440) & 0x800000000) != 0)
  {
    JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_CSSColorConstructor, 0);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v255 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v255 + 136))(v255) + 440) & 0x800000000) != 0)
  {
    JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_CSSColorValueConstructor, 0);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v256 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v256 + 136))(v256) + 440) & 0x800000000) != 0)
  {
    JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_CSSHSLConstructor, 0);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v257 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v257 + 136))(v257) + 440) & 0x800000000) != 0)
  {
    JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_CSSHWBConstructor, 0);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v258 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v258 + 136))(v258) + 440) & 0x800000000) != 0)
  {
    JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_CSSLCHConstructor, 0);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v259 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v259 + 136))(v259) + 440) & 0x800000000) != 0)
  {
    JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_CSSLabConstructor, 0);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v260 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v260 + 136))(v260) + 440) & 0x800000000) != 0)
  {
    JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_CSSOKLCHConstructor, 0);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v261 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v261 + 136))(v261) + 440) & 0x800000000) != 0)
  {
    JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_CSSOKLabConstructor, 0);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v262 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v262 + 136))(v262) + 440) & 0x800000000) != 0)
  {
    JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_CSSRGBConstructor, 0);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v263 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v263 + 136))(v263) + 432) & 0x40000000000) != 0)
  {
    v264 = *v5;
    if (*v5 >= (unint64_t)v5[1])
    {
      v264 = v5[2];
      if ((v264 & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        v264 = JSC::LocalAllocator::allocateSlowCase();
        goto LABEL_391;
      }
      v416 = *(_QWORD *)(v264 + 8) ^ v5[3];
      v5[1] = v264 + HIDWORD(v416);
      v5[2] = v264 + (int)v416;
    }
    *v5 = v264 + 32;
LABEL_391:
    *(_DWORD *)v264 = 0;
    v265 = v5[450];
    v266 = *(_DWORD *)(v265 + 8);
    *(_DWORD *)v264 = v265 >> 4;
    *(_DWORD *)(v264 + 4) = v266;
    *(_QWORD *)(v264 + 8) = WebCore::jsWorkerGlobalScope_BroadcastChannelConstructor;
    *(_QWORD *)(v264 + 16) = 0;
    if (*((_BYTE *)a2 + 755))
      __dmb(0xAu);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v267 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v267 + 136))(v267) + 464) & 0x200000000000000) != 0)
  {
    JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_TrustedHTMLConstructor, 0);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v268 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v268 + 136))(v268) + 464) & 0x200000000000000) != 0)
  {
    JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_TrustedScriptConstructor, 0);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v269 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v269 + 136))(v269) + 464) & 0x200000000000000) != 0)
  {
    JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_TrustedScriptURLConstructor, 0);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v270 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v270 + 136))(v270) + 464) & 0x200000000000000) != 0)
  {
    JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_TrustedTypePolicyConstructor, 0);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v271 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v271 + 136))(v271) + 464) & 0x200000000000000) != 0)
  {
    JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_TrustedTypePolicyFactoryConstructor, 0);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v272 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v272 + 136))(v272) + 448) & 1) != 0)
  {
    v273 = *v5;
    if (*v5 >= (unint64_t)v5[1])
    {
      v273 = v5[2];
      if ((v273 & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        v273 = JSC::LocalAllocator::allocateSlowCase();
        goto LABEL_407;
      }
      v417 = *(_QWORD *)(v273 + 8) ^ v5[3];
      v5[1] = v273 + HIDWORD(v417);
      v5[2] = v273 + (int)v417;
    }
    *v5 = v273 + 32;
LABEL_407:
    *(_DWORD *)v273 = 0;
    v274 = v5[450];
    v275 = *(_DWORD *)(v274 + 8);
    *(_DWORD *)v273 = v274 >> 4;
    *(_DWORD *)(v273 + 4) = v275;
    *(_QWORD *)(v273 + 8) = WebCore::jsWorkerGlobalScope_FileReaderConstructor;
    *(_QWORD *)(v273 + 16) = 0;
    if (*((_BYTE *)a2 + 755))
      __dmb(0xAu);
    JSC::JSObject::putDirectCustomAccessor();
  }
  v276 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v276 + 136))(v276) + 480) & 0x1000000000) == 0)
    goto LABEL_418;
  v277 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v277 + 64))(v277))
  {
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v277 + 136))(v277) + 480) & 0x2000000000) == 0)
      goto LABEL_418;
  }
  v278 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v278 = v5[2];
    if ((v278 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v278 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_415;
    }
    v457 = *(_QWORD *)(v278 + 8) ^ v5[3];
    v5[1] = v278 + HIDWORD(v457);
    v5[2] = v278 + (int)v457;
  }
  *v5 = v278 + 32;
LABEL_415:
  *(_DWORD *)v278 = 0;
  v279 = v5[450];
  v280 = *(_DWORD *)(v279 + 8);
  *(_DWORD *)v278 = v279 >> 4;
  *(_DWORD *)(v278 + 4) = v280;
  *(_QWORD *)(v278 + 8) = WebCore::jsWorkerGlobalScope_OffscreenCanvasConstructor;
  *(_QWORD *)(v278 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_418:
  v281 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v281 + 24))(v281))
  {
    v282 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v282 + 136))(v282) + 472) & 0x1000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_GPUCanvasContextConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v283 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v283 + 136))(v283) + 480) & 0x1000000000) != 0)
  {
    v284 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v284 + 64))(v284)
      || (*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v284 + 136))(v284) + 480) & 0x2000000000) != 0)
    {
      v285 = *v5;
      if (*v5 >= (unint64_t)v5[1])
      {
        v285 = v5[2];
        if ((v285 & 1) != 0)
        {
          JSC::sanitizeStackForVM();
          v285 = JSC::LocalAllocator::allocateSlowCase();
          goto LABEL_426;
        }
        v443 = *(_QWORD *)(v285 + 8) ^ v5[3];
        v5[1] = v285 + HIDWORD(v443);
        v5[2] = v285 + (int)v443;
      }
      *v5 = v285 + 32;
LABEL_426:
      *(_DWORD *)v285 = 0;
      v286 = v5[450];
      v287 = *(_DWORD *)(v286 + 8);
      *(_DWORD *)v285 = v286 >> 4;
      *(_DWORD *)(v285 + 4) = v287;
      *(_QWORD *)(v285 + 8) = WebCore::jsWorkerGlobalScope_OffscreenCanvasRenderingContext2DConstructor;
      *(_QWORD *)(v285 + 16) = 0;
      if (*((_BYTE *)a2 + 755))
        __dmb(0xAu);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v288 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v288 + 136))(v288) + 472) & 0x200000) == 0)
    goto LABEL_435;
  v289 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v289 = v5[2];
    if ((v289 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v289 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_432;
    }
    v444 = *(_QWORD *)(v289 + 8) ^ v5[3];
    v5[1] = v289 + HIDWORD(v444);
    v5[2] = v289 + (int)v444;
  }
  *v5 = v289 + 32;
LABEL_432:
  *(_DWORD *)v289 = 0;
  v290 = v5[450];
  v291 = *(_DWORD *)(v290 + 8);
  *(_DWORD *)v289 = v290 >> 4;
  *(_DWORD *)(v289 + 4) = v291;
  *(_QWORD *)(v289 + 8) = WebCore::jsWorkerGlobalScope_WebGL2RenderingContextConstructor;
  *(_QWORD *)(v289 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_435:
  v292 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v292 + 136))(v292) + 472) & 0x200000) == 0)
    goto LABEL_441;
  v293 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v293 = v5[2];
    if ((v293 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v293 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_438;
    }
    v418 = *(_QWORD *)(v293 + 8) ^ v5[3];
    v5[1] = v293 + HIDWORD(v418);
    v5[2] = v293 + (int)v418;
  }
  *v5 = v293 + 32;
LABEL_438:
  *(_DWORD *)v293 = 0;
  v294 = v5[450];
  v295 = *(_DWORD *)(v294 + 8);
  *(_DWORD *)v293 = v294 >> 4;
  *(_DWORD *)(v293 + 4) = v295;
  *(_QWORD *)(v293 + 8) = WebCore::jsWorkerGlobalScope_WebGLActiveInfoConstructor;
  *(_QWORD *)(v293 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_441:
  v296 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v296 + 136))(v296) + 472) & 0x200000) == 0)
    goto LABEL_447;
  v297 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v297 = v5[2];
    if ((v297 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v297 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_444;
    }
    v419 = *(_QWORD *)(v297 + 8) ^ v5[3];
    v5[1] = v297 + HIDWORD(v419);
    v5[2] = v297 + (int)v419;
  }
  *v5 = v297 + 32;
LABEL_444:
  *(_DWORD *)v297 = 0;
  v298 = v5[450];
  v299 = *(_DWORD *)(v298 + 8);
  *(_DWORD *)v297 = v298 >> 4;
  *(_DWORD *)(v297 + 4) = v299;
  *(_QWORD *)(v297 + 8) = WebCore::jsWorkerGlobalScope_WebGLBufferConstructor;
  *(_QWORD *)(v297 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_447:
  v300 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v300 + 136))(v300) + 472) & 0x200000) == 0)
    goto LABEL_453;
  v301 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v301 = v5[2];
    if ((v301 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v301 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_450;
    }
    v420 = *(_QWORD *)(v301 + 8) ^ v5[3];
    v5[1] = v301 + HIDWORD(v420);
    v5[2] = v301 + (int)v420;
  }
  *v5 = v301 + 32;
LABEL_450:
  *(_DWORD *)v301 = 0;
  v302 = v5[450];
  v303 = *(_DWORD *)(v302 + 8);
  *(_DWORD *)v301 = v302 >> 4;
  *(_DWORD *)(v301 + 4) = v303;
  *(_QWORD *)(v301 + 8) = WebCore::jsWorkerGlobalScope_WebGLContextEventConstructor;
  *(_QWORD *)(v301 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_453:
  v304 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v304 + 136))(v304) + 472) & 0x200000) == 0)
    goto LABEL_459;
  v305 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v305 = v5[2];
    if ((v305 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v305 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_456;
    }
    v421 = *(_QWORD *)(v305 + 8) ^ v5[3];
    v5[1] = v305 + HIDWORD(v421);
    v5[2] = v305 + (int)v421;
  }
  *v5 = v305 + 32;
LABEL_456:
  *(_DWORD *)v305 = 0;
  v306 = v5[450];
  v307 = *(_DWORD *)(v306 + 8);
  *(_DWORD *)v305 = v306 >> 4;
  *(_DWORD *)(v305 + 4) = v307;
  *(_QWORD *)(v305 + 8) = WebCore::jsWorkerGlobalScope_WebGLFramebufferConstructor;
  *(_QWORD *)(v305 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_459:
  v308 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v308 + 136))(v308) + 472) & 0x200000) == 0)
    goto LABEL_465;
  v309 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v309 = v5[2];
    if ((v309 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v309 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_462;
    }
    v422 = *(_QWORD *)(v309 + 8) ^ v5[3];
    v5[1] = v309 + HIDWORD(v422);
    v5[2] = v309 + (int)v422;
  }
  *v5 = v309 + 32;
LABEL_462:
  *(_DWORD *)v309 = 0;
  v310 = v5[450];
  v311 = *(_DWORD *)(v310 + 8);
  *(_DWORD *)v309 = v310 >> 4;
  *(_DWORD *)(v309 + 4) = v311;
  *(_QWORD *)(v309 + 8) = WebCore::jsWorkerGlobalScope_WebGLProgramConstructor;
  *(_QWORD *)(v309 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_465:
  v312 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v312 + 136))(v312) + 472) & 0x200000) == 0)
    goto LABEL_471;
  v313 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v313 = v5[2];
    if ((v313 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v313 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_468;
    }
    v423 = *(_QWORD *)(v313 + 8) ^ v5[3];
    v5[1] = v313 + HIDWORD(v423);
    v5[2] = v313 + (int)v423;
  }
  *v5 = v313 + 32;
LABEL_468:
  *(_DWORD *)v313 = 0;
  v314 = v5[450];
  v315 = *(_DWORD *)(v314 + 8);
  *(_DWORD *)v313 = v314 >> 4;
  *(_DWORD *)(v313 + 4) = v315;
  *(_QWORD *)(v313 + 8) = WebCore::jsWorkerGlobalScope_WebGLQueryConstructor;
  *(_QWORD *)(v313 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_471:
  v316 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v316 + 136))(v316) + 472) & 0x200000) == 0)
    goto LABEL_477;
  v317 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v317 = v5[2];
    if ((v317 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v317 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_474;
    }
    v424 = *(_QWORD *)(v317 + 8) ^ v5[3];
    v5[1] = v317 + HIDWORD(v424);
    v5[2] = v317 + (int)v424;
  }
  *v5 = v317 + 32;
LABEL_474:
  *(_DWORD *)v317 = 0;
  v318 = v5[450];
  v319 = *(_DWORD *)(v318 + 8);
  *(_DWORD *)v317 = v318 >> 4;
  *(_DWORD *)(v317 + 4) = v319;
  *(_QWORD *)(v317 + 8) = WebCore::jsWorkerGlobalScope_WebGLRenderbufferConstructor;
  *(_QWORD *)(v317 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_477:
  v320 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v320 + 136))(v320) + 472) & 0x200000) == 0)
    goto LABEL_483;
  v321 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v321 = v5[2];
    if ((v321 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v321 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_480;
    }
    v445 = *(_QWORD *)(v321 + 8) ^ v5[3];
    v5[1] = v321 + HIDWORD(v445);
    v5[2] = v321 + (int)v445;
  }
  *v5 = v321 + 32;
LABEL_480:
  *(_DWORD *)v321 = 0;
  v322 = v5[450];
  v323 = *(_DWORD *)(v322 + 8);
  *(_DWORD *)v321 = v322 >> 4;
  *(_DWORD *)(v321 + 4) = v323;
  *(_QWORD *)(v321 + 8) = WebCore::jsWorkerGlobalScope_WebGLRenderingContextConstructor;
  *(_QWORD *)(v321 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_483:
  v324 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v324 + 136))(v324) + 472) & 0x200000) == 0)
    goto LABEL_489;
  v325 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v325 = v5[2];
    if ((v325 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v325 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_486;
    }
    v425 = *(_QWORD *)(v325 + 8) ^ v5[3];
    v5[1] = v325 + HIDWORD(v425);
    v5[2] = v325 + (int)v425;
  }
  *v5 = v325 + 32;
LABEL_486:
  *(_DWORD *)v325 = 0;
  v326 = v5[450];
  v327 = *(_DWORD *)(v326 + 8);
  *(_DWORD *)v325 = v326 >> 4;
  *(_DWORD *)(v325 + 4) = v327;
  *(_QWORD *)(v325 + 8) = WebCore::jsWorkerGlobalScope_WebGLSamplerConstructor;
  *(_QWORD *)(v325 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_489:
  v328 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v328 + 136))(v328) + 472) & 0x200000) == 0)
    goto LABEL_495;
  v329 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v329 = v5[2];
    if ((v329 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v329 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_492;
    }
    v446 = *(_QWORD *)(v329 + 8) ^ v5[3];
    v5[1] = v329 + HIDWORD(v446);
    v5[2] = v329 + (int)v446;
  }
  *v5 = v329 + 32;
LABEL_492:
  *(_DWORD *)v329 = 0;
  v330 = v5[450];
  v331 = *(_DWORD *)(v330 + 8);
  *(_DWORD *)v329 = v330 >> 4;
  *(_DWORD *)(v329 + 4) = v331;
  *(_QWORD *)(v329 + 8) = WebCore::jsWorkerGlobalScope_WebGLShaderConstructor;
  *(_QWORD *)(v329 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_495:
  v332 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v332 + 136))(v332) + 472) & 0x200000) == 0)
    goto LABEL_501;
  v333 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v333 = v5[2];
    if ((v333 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v333 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_498;
    }
    v426 = *(_QWORD *)(v333 + 8) ^ v5[3];
    v5[1] = v333 + HIDWORD(v426);
    v5[2] = v333 + (int)v426;
  }
  *v5 = v333 + 32;
LABEL_498:
  *(_DWORD *)v333 = 0;
  v334 = v5[450];
  v335 = *(_DWORD *)(v334 + 8);
  *(_DWORD *)v333 = v334 >> 4;
  *(_DWORD *)(v333 + 4) = v335;
  *(_QWORD *)(v333 + 8) = WebCore::jsWorkerGlobalScope_WebGLShaderPrecisionFormatConstructor;
  *(_QWORD *)(v333 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_501:
  v336 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v336 + 136))(v336) + 472) & 0x200000) == 0)
    goto LABEL_507;
  v337 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v337 = v5[2];
    if ((v337 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v337 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_504;
    }
    v427 = *(_QWORD *)(v337 + 8) ^ v5[3];
    v5[1] = v337 + HIDWORD(v427);
    v5[2] = v337 + (int)v427;
  }
  *v5 = v337 + 32;
LABEL_504:
  *(_DWORD *)v337 = 0;
  v338 = v5[450];
  v339 = *(_DWORD *)(v338 + 8);
  *(_DWORD *)v337 = v338 >> 4;
  *(_DWORD *)(v337 + 4) = v339;
  *(_QWORD *)(v337 + 8) = WebCore::jsWorkerGlobalScope_WebGLSyncConstructor;
  *(_QWORD *)(v337 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_507:
  v340 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v340 + 136))(v340) + 472) & 0x200000) == 0)
    goto LABEL_513;
  v341 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v341 = v5[2];
    if ((v341 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v341 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_510;
    }
    v428 = *(_QWORD *)(v341 + 8) ^ v5[3];
    v5[1] = v341 + HIDWORD(v428);
    v5[2] = v341 + (int)v428;
  }
  *v5 = v341 + 32;
LABEL_510:
  *(_DWORD *)v341 = 0;
  v342 = v5[450];
  v343 = *(_DWORD *)(v342 + 8);
  *(_DWORD *)v341 = v342 >> 4;
  *(_DWORD *)(v341 + 4) = v343;
  *(_QWORD *)(v341 + 8) = WebCore::jsWorkerGlobalScope_WebGLTextureConstructor;
  *(_QWORD *)(v341 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_513:
  v344 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v344 + 136))(v344) + 472) & 0x200000) == 0)
    goto LABEL_519;
  v345 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v345 = v5[2];
    if ((v345 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v345 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_516;
    }
    v447 = *(_QWORD *)(v345 + 8) ^ v5[3];
    v5[1] = v345 + HIDWORD(v447);
    v5[2] = v345 + (int)v447;
  }
  *v5 = v345 + 32;
LABEL_516:
  *(_DWORD *)v345 = 0;
  v346 = v5[450];
  v347 = *(_DWORD *)(v346 + 8);
  *(_DWORD *)v345 = v346 >> 4;
  *(_DWORD *)(v345 + 4) = v347;
  *(_QWORD *)(v345 + 8) = WebCore::jsWorkerGlobalScope_WebGLTransformFeedbackConstructor;
  *(_QWORD *)(v345 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_519:
  v348 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v348 + 136))(v348) + 472) & 0x200000) == 0)
    goto LABEL_525;
  v349 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v349 = v5[2];
    if ((v349 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v349 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_522;
    }
    v448 = *(_QWORD *)(v349 + 8) ^ v5[3];
    v5[1] = v349 + HIDWORD(v448);
    v5[2] = v349 + (int)v448;
  }
  *v5 = v349 + 32;
LABEL_522:
  *(_DWORD *)v349 = 0;
  v350 = v5[450];
  v351 = *(_DWORD *)(v350 + 8);
  *(_DWORD *)v349 = v350 >> 4;
  *(_DWORD *)(v349 + 4) = v351;
  *(_QWORD *)(v349 + 8) = WebCore::jsWorkerGlobalScope_WebGLUniformLocationConstructor;
  *(_QWORD *)(v349 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_525:
  v352 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v352 + 136))(v352) + 472) & 0x200000) == 0)
    goto LABEL_531;
  v353 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v353 = v5[2];
    if ((v353 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v353 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_528;
    }
    v429 = *(_QWORD *)(v353 + 8) ^ v5[3];
    v5[1] = v353 + HIDWORD(v429);
    v5[2] = v353 + (int)v429;
  }
  *v5 = v353 + 32;
LABEL_528:
  *(_DWORD *)v353 = 0;
  v354 = v5[450];
  v355 = *(_DWORD *)(v354 + 8);
  *(_DWORD *)v353 = v354 >> 4;
  *(_DWORD *)(v353 + 4) = v355;
  *(_QWORD *)(v353 + 8) = WebCore::jsWorkerGlobalScope_WebGLVertexArrayObjectConstructor;
  *(_QWORD *)(v353 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_531:
  v356 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v356 + 136))(v356) + 464) & 0x40) == 0)
    goto LABEL_537;
  v357 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v357 = v5[2];
    if ((v357 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v357 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_534;
    }
    v430 = *(_QWORD *)(v357 + 8) ^ v5[3];
    v5[1] = v357 + HIDWORD(v430);
    v5[2] = v357 + (int)v430;
  }
  *v5 = v357 + 32;
LABEL_534:
  *(_DWORD *)v357 = 0;
  v358 = v5[450];
  v359 = *(_DWORD *)(v358 + 8);
  *(_DWORD *)v357 = v358 >> 4;
  *(_DWORD *)(v357 + 4) = v359;
  *(_QWORD *)(v357 + 8) = WebCore::jsWorkerGlobalScope_NavigationPreloadManagerConstructor;
  *(_QWORD *)(v357 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_537:
  v360 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v360 + 24))(v360))
    goto LABEL_544;
  v361 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v361 + 136))(v361) + 464) & 0x80) == 0)
    goto LABEL_544;
  v362 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v362 = v5[2];
    if ((v362 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v362 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_541;
    }
    v449 = *(_QWORD *)(v362 + 8) ^ v5[3];
    v5[1] = v362 + HIDWORD(v449);
    v5[2] = v362 + (int)v449;
  }
  *v5 = v362 + 32;
LABEL_541:
  *(_DWORD *)v362 = 0;
  v363 = v5[450];
  v364 = *(_DWORD *)(v363 + 8);
  *(_DWORD *)v362 = v363 >> 4;
  *(_DWORD *)(v362 + 4) = v364;
  *(_QWORD *)(v362 + 8) = WebCore::jsWorkerGlobalScope_ServiceWorkerConstructor;
  *(_QWORD *)(v362 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_544:
  v365 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v365 + 24))(v365))
    goto LABEL_551;
  v366 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v366 + 136))(v366) + 464) & 0x80) == 0)
    goto LABEL_551;
  v367 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v367 = v5[2];
    if ((v367 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v367 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_548;
    }
    v450 = *(_QWORD *)(v367 + 8) ^ v5[3];
    v5[1] = v367 + HIDWORD(v450);
    v5[2] = v367 + (int)v450;
  }
  *v5 = v367 + 32;
LABEL_548:
  *(_DWORD *)v367 = 0;
  v368 = v5[450];
  v369 = *(_DWORD *)(v368 + 8);
  *(_DWORD *)v367 = v368 >> 4;
  *(_DWORD *)(v367 + 4) = v369;
  *(_QWORD *)(v367 + 8) = WebCore::jsWorkerGlobalScope_ServiceWorkerContainerConstructor;
  *(_QWORD *)(v367 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_551:
  v370 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v370 + 24))(v370))
    goto LABEL_558;
  v371 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v371 + 136))(v371) + 464) & 0x80) == 0)
    goto LABEL_558;
  v372 = *v5;
  if (*v5 >= (unint64_t)v5[1])
  {
    v372 = v5[2];
    if ((v372 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v372 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_555;
    }
    v451 = *(_QWORD *)(v372 + 8) ^ v5[3];
    v5[1] = v372 + HIDWORD(v451);
    v5[2] = v372 + (int)v451;
  }
  *v5 = v372 + 32;
LABEL_555:
  *(_DWORD *)v372 = 0;
  v373 = v5[450];
  v374 = *(_DWORD *)(v373 + 8);
  *(_DWORD *)v372 = v373 >> 4;
  *(_DWORD *)(v372 + 4) = v374;
  *(_QWORD *)(v372 + 8) = WebCore::jsWorkerGlobalScope_ServiceWorkerRegistrationConstructor;
  *(_QWORD *)(v372 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
LABEL_558:
  v375 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v375 + 136))(v375) + 464) & 0x80) != 0)
  {
    v376 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v376 + 136))(v376) + 432) & 0x2000000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_BackgroundFetchManagerConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v377 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v377 + 136))(v377) + 464) & 0x80) != 0)
  {
    v378 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v378 + 136))(v378) + 432) & 0x2000000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_BackgroundFetchRecordConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v379 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v379 + 136))(v379) + 464) & 0x80) != 0)
  {
    v380 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v380 + 136))(v380) + 432) & 0x2000000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_BackgroundFetchRegistrationConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v381 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v381 + 136))(v381) + 464) & 0x80) != 0)
  {
    v382 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v382 + 136))(v382) + 432) & 0x2000000000) != 0)
    {
      JSC::CustomGetterSetter::create((uint64_t)a2, (uint64_t)WebCore::jsWorkerGlobalScope_BackgroundFetchUpdateUIEventConstructor, 0);
      JSC::JSObject::putDirectCustomAccessor();
    }
  }
  v383 = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_571;
  v383 = v5[2];
  if ((v383 & 1) == 0)
  {
    v390 = *(_QWORD *)(v383 + 8) ^ v5[3];
    v5[1] = v383 + HIDWORD(v390);
    v5[2] = v383 + (int)v390;
LABEL_571:
    *v5 = v383 + 32;
    goto LABEL_572;
  }
  JSC::sanitizeStackForVM();
  v383 = JSC::LocalAllocator::allocateSlowCase();
LABEL_572:
  *(_DWORD *)v383 = 0;
  v384 = v5[450];
  v385 = *(_DWORD *)(v384 + 8);
  *(_DWORD *)v383 = v384 >> 4;
  *(_DWORD *)(v383 + 4) = v385;
  *(_QWORD *)(v383 + 8) = WebCore::jsWorkerGlobalScope_TextDecoderStreamDecoderConstructor;
  *(_QWORD *)(v383 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::JSObject::putDirectCustomAccessor();
  v386 = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_575;
  v386 = v5[2];
  if ((v386 & 1) == 0)
  {
    v391 = *(_QWORD *)(v386 + 8) ^ v5[3];
    v5[1] = v386 + HIDWORD(v391);
    v5[2] = v386 + (int)v391;
LABEL_575:
    *v5 = v386 + 32;
    goto LABEL_576;
  }
  JSC::sanitizeStackForVM();
  v386 = JSC::LocalAllocator::allocateSlowCase();
LABEL_576:
  *(_DWORD *)v386 = 0;
  v387 = v5[450];
  v388 = *(_DWORD *)(v387 + 8);
  *(_DWORD *)v386 = v387 >> 4;
  *(_DWORD *)(v386 + 4) = v388;
  *(_QWORD *)(v386 + 8) = WebCore::jsWorkerGlobalScope_TextEncoderStreamEncoderConstructor;
  *(_QWORD *)(v386 + 16) = 0;
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  return JSC::JSObject::putDirectCustomAccessor();
}

uint64_t WebCore::jsWorkerGlobalScope_BarcodeDetectorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSBarcodeDetector>,(WebCore::DOMConstructorID)5>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSBarcodeDetector>,(WebCore::DOMConstructorID)5>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_FaceDetectorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSFaceDetector>,(WebCore::DOMConstructorID)6>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSFaceDetector>,(WebCore::DOMConstructorID)6>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_TextDetectorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSTextDetector>,(WebCore::DOMConstructorID)7>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSTextDetector>,(WebCore::DOMConstructorID)7>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPU>,(WebCore::DOMConstructorID)8>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPU>,(WebCore::DOMConstructorID)8>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUAdapterConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUAdapter>,(WebCore::DOMConstructorID)9>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUAdapter>,(WebCore::DOMConstructorID)9>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUAdapterInfoConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUAdapterInfo>,(WebCore::DOMConstructorID)10>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUAdapterInfo>,(WebCore::DOMConstructorID)10>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUBindGroupConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUBindGroup>,(WebCore::DOMConstructorID)11>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUBindGroup>,(WebCore::DOMConstructorID)11>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUBindGroupLayoutConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUBindGroupLayout>,(WebCore::DOMConstructorID)12>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUBindGroupLayout>,(WebCore::DOMConstructorID)12>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUBufferConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUBuffer>,(WebCore::DOMConstructorID)13>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUBuffer>,(WebCore::DOMConstructorID)13>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUBufferUsageConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUBufferUsage>,(WebCore::DOMConstructorID)14>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUBufferUsage>,(WebCore::DOMConstructorID)14>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUColorWriteConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUColorWrite>,(WebCore::DOMConstructorID)15>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUColorWrite>,(WebCore::DOMConstructorID)15>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUCommandBufferConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUCommandBuffer>,(WebCore::DOMConstructorID)16>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUCommandBuffer>,(WebCore::DOMConstructorID)16>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUCommandEncoderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUCommandEncoder>,(WebCore::DOMConstructorID)17>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUCommandEncoder>,(WebCore::DOMConstructorID)17>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUCompilationInfoConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUCompilationInfo>,(WebCore::DOMConstructorID)18>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUCompilationInfo>,(WebCore::DOMConstructorID)18>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUCompilationMessageConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUCompilationMessage>,(WebCore::DOMConstructorID)19>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUCompilationMessage>,(WebCore::DOMConstructorID)19>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUComputePassEncoderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUComputePassEncoder>,(WebCore::DOMConstructorID)20>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUComputePassEncoder>,(WebCore::DOMConstructorID)20>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUComputePipelineConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUComputePipeline>,(WebCore::DOMConstructorID)21>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUComputePipeline>,(WebCore::DOMConstructorID)21>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUDeviceLostInfoConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUDeviceLostInfo>,(WebCore::DOMConstructorID)23>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUDeviceLostInfo>,(WebCore::DOMConstructorID)23>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUExternalTextureConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUExternalTexture>,(WebCore::DOMConstructorID)24>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUExternalTexture>,(WebCore::DOMConstructorID)24>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUInternalErrorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSGPUInternalError>,(WebCore::DOMConstructorID)25>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSGPUInternalError>,(WebCore::DOMConstructorID)25>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUMapModeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUMapMode>,(WebCore::DOMConstructorID)26>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUMapMode>,(WebCore::DOMConstructorID)26>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUOutOfMemoryErrorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSGPUOutOfMemoryError>,(WebCore::DOMConstructorID)27>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSGPUOutOfMemoryError>,(WebCore::DOMConstructorID)27>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUPipelineLayoutConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUPipelineLayout>,(WebCore::DOMConstructorID)29>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUPipelineLayout>,(WebCore::DOMConstructorID)29>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUQuerySetConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUQuerySet>,(WebCore::DOMConstructorID)30>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUQuerySet>,(WebCore::DOMConstructorID)30>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUQueueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUQueue>,(WebCore::DOMConstructorID)31>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUQueue>,(WebCore::DOMConstructorID)31>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPURenderBundleConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPURenderBundle>,(WebCore::DOMConstructorID)32>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPURenderBundle>,(WebCore::DOMConstructorID)32>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPURenderBundleEncoderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPURenderBundleEncoder>,(WebCore::DOMConstructorID)33>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPURenderBundleEncoder>,(WebCore::DOMConstructorID)33>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPURenderPassEncoderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPURenderPassEncoder>,(WebCore::DOMConstructorID)34>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPURenderPassEncoder>,(WebCore::DOMConstructorID)34>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPURenderPipelineConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPURenderPipeline>,(WebCore::DOMConstructorID)35>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPURenderPipeline>,(WebCore::DOMConstructorID)35>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUSamplerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUSampler>,(WebCore::DOMConstructorID)36>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUSampler>,(WebCore::DOMConstructorID)36>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUShaderModuleConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUShaderModule>,(WebCore::DOMConstructorID)37>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUShaderModule>,(WebCore::DOMConstructorID)37>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUShaderStageConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUShaderStage>,(WebCore::DOMConstructorID)38>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUShaderStage>,(WebCore::DOMConstructorID)38>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUSupportedFeaturesConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUSupportedFeatures>,(WebCore::DOMConstructorID)39>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUSupportedFeatures>,(WebCore::DOMConstructorID)39>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUSupportedLimitsConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUSupportedLimits>,(WebCore::DOMConstructorID)40>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUSupportedLimits>,(WebCore::DOMConstructorID)40>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUTextureConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUTexture>,(WebCore::DOMConstructorID)41>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUTexture>,(WebCore::DOMConstructorID)41>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUTextureUsageConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUTextureUsage>,(WebCore::DOMConstructorID)42>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUTextureUsage>,(WebCore::DOMConstructorID)42>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUTextureViewConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUTextureView>,(WebCore::DOMConstructorID)43>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUTextureView>,(WebCore::DOMConstructorID)43>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUUncapturedErrorEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSGPUUncapturedErrorEvent>,(WebCore::DOMConstructorID)44>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSGPUUncapturedErrorEvent>,(WebCore::DOMConstructorID)44>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_GPUValidationErrorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSGPUValidationError>,(WebCore::DOMConstructorID)45>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSGPUValidationError>,(WebCore::DOMConstructorID)45>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WGSLLanguageFeaturesConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWGSLLanguageFeatures>,(WebCore::DOMConstructorID)46>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWGSLLanguageFeatures>,(WebCore::DOMConstructorID)46>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CacheConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMCache>,(WebCore::DOMConstructorID)62>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMCache>,(WebCore::DOMConstructorID)62>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CacheStorageConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMCacheStorage>,(WebCore::DOMConstructorID)63>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMCacheStorage>,(WebCore::DOMConstructorID)63>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_FileSystemDirectoryHandleConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSFileSystemDirectoryHandle>,(WebCore::DOMConstructorID)92>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSFileSystemDirectoryHandle>,(WebCore::DOMConstructorID)92>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_FileSystemFileHandleConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSFileSystemFileHandle>,(WebCore::DOMConstructorID)93>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSFileSystemFileHandle>,(WebCore::DOMConstructorID)93>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_FileSystemHandleConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSFileSystemHandle>,(WebCore::DOMConstructorID)94>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSFileSystemHandle>,(WebCore::DOMConstructorID)94>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_IDBCursorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBCursor>,(WebCore::DOMConstructorID)107>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBCursor>,(WebCore::DOMConstructorID)107>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_IDBCursorWithValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBCursorWithValue>,(WebCore::DOMConstructorID)108>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBCursorWithValue>,(WebCore::DOMConstructorID)108>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_IDBDatabaseConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  const JSC::JSGlobalObject *v4;
  _DWORD *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v5 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v5 = *(_DWORD **)(Object + 16);
        v6 = *(unsigned int *)(16 * (*v5 & 0xFFFFFFFE) + 0x4C);
        v7 = *(_DWORD *)(16 * (*v5 & 0xFFFFFFFE) + 0x4C) != 0;
        v8 = (char **)(16 * v6);
        if ((_DWORD)v6)
          v9 = v8 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v9 = 1;
        if (!v9)
        {
          do
          {
            v8 = (char **)v8[2];
            v7 = v8 != 0;
          }
          while (v8 != &WebCore::JSWorkerGlobalScope::s_info && v8 != 0);
        }
        if (v7)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBDatabase>,(WebCore::DOMConstructorID)109>(*((WebCore::JSEventTarget **)v2 + 7), (uint64_t)v5, v4);
      }
      else
      {
        v12 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v13 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v14 = (char **)(16 * v12);
        if ((_DWORD)v12)
          v15 = v14 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v15 = 1;
        if (!v15)
        {
          do
          {
            v14 = (char **)v14[2];
            v13 = v14 != 0;
          }
          while (v14 != &WebCore::JSWorkerGlobalScope::s_info && v14 != 0);
        }
        if (v13)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBDatabase>,(WebCore::DOMConstructorID)109>(*((WebCore::JSEventTarget **)v2 + 7), (uint64_t)v5, v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_IDBFactoryConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBFactory>,(WebCore::DOMConstructorID)110>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBFactory>,(WebCore::DOMConstructorID)110>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_IDBIndexConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBIndex>,(WebCore::DOMConstructorID)111>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBIndex>,(WebCore::DOMConstructorID)111>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_IDBKeyRangeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBKeyRange>,(WebCore::DOMConstructorID)112>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBKeyRange>,(WebCore::DOMConstructorID)112>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_IDBObjectStoreConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBObjectStore>,(WebCore::DOMConstructorID)113>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBObjectStore>,(WebCore::DOMConstructorID)113>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_IDBOpenDBRequestConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  const JSC::JSGlobalObject *v4;
  _DWORD *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v5 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v5 = *(_DWORD **)(Object + 16);
        v6 = *(unsigned int *)(16 * (*v5 & 0xFFFFFFFE) + 0x4C);
        v7 = *(_DWORD *)(16 * (*v5 & 0xFFFFFFFE) + 0x4C) != 0;
        v8 = (char **)(16 * v6);
        if ((_DWORD)v6)
          v9 = v8 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v9 = 1;
        if (!v9)
        {
          do
          {
            v8 = (char **)v8[2];
            v7 = v8 != 0;
          }
          while (v8 != &WebCore::JSWorkerGlobalScope::s_info && v8 != 0);
        }
        if (v7)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBOpenDBRequest>,(WebCore::DOMConstructorID)114>(*((WebCore::JSEventTarget **)v2 + 7), (uint64_t)v5, v4);
      }
      else
      {
        v12 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v13 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v14 = (char **)(16 * v12);
        if ((_DWORD)v12)
          v15 = v14 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v15 = 1;
        if (!v15)
        {
          do
          {
            v14 = (char **)v14[2];
            v13 = v14 != 0;
          }
          while (v14 != &WebCore::JSWorkerGlobalScope::s_info && v14 != 0);
        }
        if (v13)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBOpenDBRequest>,(WebCore::DOMConstructorID)114>(*((WebCore::JSEventTarget **)v2 + 7), (uint64_t)v5, v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_IDBRequestConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  const JSC::JSGlobalObject *v4;
  _DWORD *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v5 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v5 = *(_DWORD **)(Object + 16);
        v6 = *(unsigned int *)(16 * (*v5 & 0xFFFFFFFE) + 0x4C);
        v7 = *(_DWORD *)(16 * (*v5 & 0xFFFFFFFE) + 0x4C) != 0;
        v8 = (char **)(16 * v6);
        if ((_DWORD)v6)
          v9 = v8 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v9 = 1;
        if (!v9)
        {
          do
          {
            v8 = (char **)v8[2];
            v7 = v8 != 0;
          }
          while (v8 != &WebCore::JSWorkerGlobalScope::s_info && v8 != 0);
        }
        if (v7)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBRequest>,(WebCore::DOMConstructorID)115>(*((WebCore::JSEventTarget **)v2 + 7), (uint64_t)v5, v4);
      }
      else
      {
        v12 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v13 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v14 = (char **)(16 * v12);
        if ((_DWORD)v12)
          v15 = v14 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v15 = 1;
        if (!v15)
        {
          do
          {
            v14 = (char **)v14[2];
            v13 = v14 != 0;
          }
          while (v14 != &WebCore::JSWorkerGlobalScope::s_info && v14 != 0);
        }
        if (v13)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBRequest>,(WebCore::DOMConstructorID)115>(*((WebCore::JSEventTarget **)v2 + 7), (uint64_t)v5, v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_IDBTransactionConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  const JSC::JSGlobalObject *v4;
  _DWORD *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v5 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v5 = *(_DWORD **)(Object + 16);
        v6 = *(unsigned int *)(16 * (*v5 & 0xFFFFFFFE) + 0x4C);
        v7 = *(_DWORD *)(16 * (*v5 & 0xFFFFFFFE) + 0x4C) != 0;
        v8 = (char **)(16 * v6);
        if ((_DWORD)v6)
          v9 = v8 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v9 = 1;
        if (!v9)
        {
          do
          {
            v8 = (char **)v8[2];
            v7 = v8 != 0;
          }
          while (v8 != &WebCore::JSWorkerGlobalScope::s_info && v8 != 0);
        }
        if (v7)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBTransaction>,(WebCore::DOMConstructorID)116>(*((WebCore::JSEventTarget **)v2 + 7), (uint64_t)v5, v4);
      }
      else
      {
        v12 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v13 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v14 = (char **)(16 * v12);
        if ((_DWORD)v12)
          v15 = v14 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v15 = 1;
        if (!v15)
        {
          do
          {
            v14 = (char **)v14[2];
            v13 = v14 != 0;
          }
          while (v14 != &WebCore::JSWorkerGlobalScope::s_info && v14 != 0);
        }
        if (v13)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSIDBTransaction>,(WebCore::DOMConstructorID)116>(*((WebCore::JSEventTarget **)v2 + 7), (uint64_t)v5, v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_IDBVersionChangeEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSIDBVersionChangeEvent>,(WebCore::DOMConstructorID)117>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSIDBVersionChangeEvent>,(WebCore::DOMConstructorID)117>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_RTCDataChannelConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSRTCDataChannel>,(WebCore::DOMConstructorID)148>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSRTCDataChannel>,(WebCore::DOMConstructorID)148>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_RTCTransformEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSRTCTransformEvent>,(WebCore::DOMConstructorID)171>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSRTCTransformEvent>,(WebCore::DOMConstructorID)171>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_PermissionsConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPermissions>,(WebCore::DOMConstructorID)183>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPermissions>,(WebCore::DOMConstructorID)183>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_PushManagerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPushManager>,(WebCore::DOMConstructorID)187>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPushManager>,(WebCore::DOMConstructorID)187>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_PushSubscriptionConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPushSubscription>,(WebCore::DOMConstructorID)190>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPushSubscription>,(WebCore::DOMConstructorID)190>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_PushSubscriptionOptionsConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPushSubscriptionOptions>,(WebCore::DOMConstructorID)192>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSPushSubscriptionOptions>,(WebCore::DOMConstructorID)192>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_DeprecationReportBodyConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecationReportBody>,(WebCore::DOMConstructorID)194>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDeprecationReportBody>,(WebCore::DOMConstructorID)194>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_ReportConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSReport>,(WebCore::DOMConstructorID)195>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSReport>,(WebCore::DOMConstructorID)195>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_ReportBodyConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSReportBody>,(WebCore::DOMConstructorID)196>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSReportBody>,(WebCore::DOMConstructorID)196>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_ReportingObserverConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSReportingObserver>,(WebCore::DOMConstructorID)197>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSReportingObserver>,(WebCore::DOMConstructorID)197>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_StorageManagerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSStorageManager>,(WebCore::DOMConstructorID)212>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSStorageManager>,(WebCore::DOMConstructorID)212>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_LockConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebLock>,(WebCore::DOMConstructorID)229>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebLock>,(WebCore::DOMConstructorID)229>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_LockManagerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebLockManager>,(WebCore::DOMConstructorID)230>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebLockManager>,(WebCore::DOMConstructorID)230>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebSocketConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebSocket>,(WebCore::DOMConstructorID)286>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebSocket>,(WebCore::DOMConstructorID)286>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebTransportConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebTransport>,(WebCore::DOMConstructorID)287>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebTransport>,(WebCore::DOMConstructorID)287>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebTransportBidirectionalStreamConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportBidirectionalStream>,(WebCore::DOMConstructorID)288>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportBidirectionalStream>,(WebCore::DOMConstructorID)288>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebTransportDatagramDuplexStreamConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportDatagramDuplexStream>,(WebCore::DOMConstructorID)289>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportDatagramDuplexStream>,(WebCore::DOMConstructorID)289>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebTransportErrorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebTransportError>,(WebCore::DOMConstructorID)290>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebTransportError>,(WebCore::DOMConstructorID)290>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebTransportReceiveStreamConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportReceiveStream>,(WebCore::DOMConstructorID)291>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportReceiveStream>,(WebCore::DOMConstructorID)291>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebTransportSendStreamConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportSendStream>,(WebCore::DOMConstructorID)292>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebTransportSendStream>,(WebCore::DOMConstructorID)292>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CryptoKeyConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCryptoKey>,(WebCore::DOMConstructorID)329>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCryptoKey>,(WebCore::DOMConstructorID)329>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_SubtleCryptoConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSSubtleCrypto>,(WebCore::DOMConstructorID)330>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSSubtleCrypto>,(WebCore::DOMConstructorID)330>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSColorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSColor>,(WebCore::DOMConstructorID)383>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSColor>,(WebCore::DOMConstructorID)383>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSColorValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSColorValue>,(WebCore::DOMConstructorID)384>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSColorValue>,(WebCore::DOMConstructorID)384>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSHSLConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSHSL>,(WebCore::DOMConstructorID)385>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSHSL>,(WebCore::DOMConstructorID)385>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSHWBConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSHWB>,(WebCore::DOMConstructorID)386>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSHWB>,(WebCore::DOMConstructorID)386>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSLCHConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSLCH>,(WebCore::DOMConstructorID)387>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSLCH>,(WebCore::DOMConstructorID)387>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSLabConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSLab>,(WebCore::DOMConstructorID)388>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSLab>,(WebCore::DOMConstructorID)388>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSOKLCHConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSOKLCH>,(WebCore::DOMConstructorID)389>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSOKLCH>,(WebCore::DOMConstructorID)389>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSOKLabConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSOKLab>,(WebCore::DOMConstructorID)390>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSOKLab>,(WebCore::DOMConstructorID)390>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSRGBConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSRGB>,(WebCore::DOMConstructorID)391>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSRGB>,(WebCore::DOMConstructorID)391>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_BroadcastChannelConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSBroadcastChannel>,(WebCore::DOMConstructorID)416>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSBroadcastChannel>,(WebCore::DOMConstructorID)416>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_TrustedHTMLConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSTrustedHTML>,(WebCore::DOMConstructorID)491>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSTrustedHTML>,(WebCore::DOMConstructorID)491>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_TrustedScriptConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSTrustedScript>,(WebCore::DOMConstructorID)492>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSTrustedScript>,(WebCore::DOMConstructorID)492>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_TrustedScriptURLConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSTrustedScriptURL>,(WebCore::DOMConstructorID)493>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSTrustedScriptURL>,(WebCore::DOMConstructorID)493>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_TrustedTypePolicyConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSTrustedTypePolicy>,(WebCore::DOMConstructorID)494>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSTrustedTypePolicy>,(WebCore::DOMConstructorID)494>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_TrustedTypePolicyFactoryConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSTrustedTypePolicyFactory>,(WebCore::DOMConstructorID)495>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSTrustedTypePolicyFactory>,(WebCore::DOMConstructorID)495>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_FileReaderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSFileReader>,(WebCore::DOMConstructorID)503>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSFileReader>,(WebCore::DOMConstructorID)503>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_OffscreenCanvasConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  unint64_t v10;
  uint64_t v11;
  JSC::JSCell *v12;
  uint64_t Structure;
  uint64_t v14;
  BOOL v15;
  char **v16;
  BOOL v17;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v14 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v15 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v16 = (char **)(16 * v14);
    if ((_DWORD)v14)
      v17 = v16 == &WebCore::JSWorkerGlobalScope::s_info;
    else
      v17 = 1;
    if (!v17)
    {
      do
      {
        v16 = (char **)v16[2];
        v15 = v16 != 0;
      }
      while (v16 != &WebCore::JSWorkerGlobalScope::s_info && v16 != 0);
    }
    if (v15)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 4744);
  if (!v10)
  {
    v11 = *((_QWORD *)v2 + 7);
    v12 = (JSC::JSCell *)WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventTarget>,(WebCore::DOMConstructorID)450>(v11, v4);
    Structure = WebCore::JSDOMConstructor<WebCore::JSOffscreenCanvas>::createStructure((uint64_t *)v11, v4, v12);
    v10 = WebCore::JSDOMConstructor<WebCore::JSOffscreenCanvas>::create(v11, Structure, (JSC::VM *)v4);
    *(_QWORD *)(*(_QWORD *)(v4 + 3312) + 4744) = v10;
    if (v10)
    {
      if (*(_DWORD *)(v11 + 760) >= *(unsigned __int8 *)(v4 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v11 + 192), (const JSCell *)v4);
    }
  }
  return v10;
}

uint64_t WebCore::jsWorkerGlobalScope_GPUCanvasContextConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUCanvasContext>,(WebCore::DOMConstructorID)625>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSGPUCanvasContext>,(WebCore::DOMConstructorID)625>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_OffscreenCanvasRenderingContext2DConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSOffscreenCanvasRenderingContext2D>,(WebCore::DOMConstructorID)640>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSOffscreenCanvasRenderingContext2D>,(WebCore::DOMConstructorID)640>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebGL2RenderingContextConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGL2RenderingContext>,(WebCore::DOMConstructorID)643>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGL2RenderingContext>,(WebCore::DOMConstructorID)643>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebGLActiveInfoConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLActiveInfo>,(WebCore::DOMConstructorID)644>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLActiveInfo>,(WebCore::DOMConstructorID)644>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebGLBufferConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLBuffer>,(WebCore::DOMConstructorID)646>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLBuffer>,(WebCore::DOMConstructorID)646>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebGLContextEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebGLContextEvent>,(WebCore::DOMConstructorID)655>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebGLContextEvent>,(WebCore::DOMConstructorID)655>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebGLFramebufferConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLFramebuffer>,(WebCore::DOMConstructorID)661>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLFramebuffer>,(WebCore::DOMConstructorID)661>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebGLProgramConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLProgram>,(WebCore::DOMConstructorID)666>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLProgram>,(WebCore::DOMConstructorID)666>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebGLQueryConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLQuery>,(WebCore::DOMConstructorID)668>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLQuery>,(WebCore::DOMConstructorID)668>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebGLRenderbufferConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLRenderbuffer>,(WebCore::DOMConstructorID)670>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLRenderbuffer>,(WebCore::DOMConstructorID)670>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebGLRenderingContextConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLRenderingContext>,(WebCore::DOMConstructorID)671>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLRenderingContext>,(WebCore::DOMConstructorID)671>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebGLSamplerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLSampler>,(WebCore::DOMConstructorID)672>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLSampler>,(WebCore::DOMConstructorID)672>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebGLShaderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLShader>,(WebCore::DOMConstructorID)673>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLShader>,(WebCore::DOMConstructorID)673>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebGLShaderPrecisionFormatConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLShaderPrecisionFormat>,(WebCore::DOMConstructorID)674>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLShaderPrecisionFormat>,(WebCore::DOMConstructorID)674>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebGLSyncConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLSync>,(WebCore::DOMConstructorID)676>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLSync>,(WebCore::DOMConstructorID)676>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebGLTextureConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLTexture>,(WebCore::DOMConstructorID)677>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLTexture>,(WebCore::DOMConstructorID)677>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebGLTransformFeedbackConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLTransformFeedback>,(WebCore::DOMConstructorID)679>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLTransformFeedback>,(WebCore::DOMConstructorID)679>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebGLUniformLocationConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLUniformLocation>,(WebCore::DOMConstructorID)680>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLUniformLocation>,(WebCore::DOMConstructorID)680>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WebGLVertexArrayObjectConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLVertexArrayObject>,(WebCore::DOMConstructorID)681>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWebGLVertexArrayObject>,(WebCore::DOMConstructorID)681>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_NavigationPreloadManagerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigationPreloadManager>,(WebCore::DOMConstructorID)902>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNavigationPreloadManager>,(WebCore::DOMConstructorID)902>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_ServiceWorkerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSServiceWorker>,(WebCore::DOMConstructorID)903>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSServiceWorker>,(WebCore::DOMConstructorID)903>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_ServiceWorkerContainerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSServiceWorkerContainer>,(WebCore::DOMConstructorID)906>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSServiceWorkerContainer>,(WebCore::DOMConstructorID)906>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_ServiceWorkerRegistrationConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSServiceWorkerRegistration>,(WebCore::DOMConstructorID)908>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSServiceWorkerRegistration>,(WebCore::DOMConstructorID)908>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_BackgroundFetchManagerConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSBackgroundFetchManager>,(WebCore::DOMConstructorID)911>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSBackgroundFetchManager>,(WebCore::DOMConstructorID)911>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_BackgroundFetchRecordConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSBackgroundFetchRecord>,(WebCore::DOMConstructorID)912>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSBackgroundFetchRecord>,(WebCore::DOMConstructorID)912>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_BackgroundFetchRegistrationConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSBackgroundFetchRegistration>,(WebCore::DOMConstructorID)913>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSBackgroundFetchRegistration>,(WebCore::DOMConstructorID)913>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_BackgroundFetchUpdateUIEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSBackgroundFetchUpdateUIEvent>,(WebCore::DOMConstructorID)914>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSBackgroundFetchUpdateUIEvent>,(WebCore::DOMConstructorID)914>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_TextDecoderStreamDecoderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSTextDecoderStreamDecoder>,(WebCore::DOMConstructorID)484>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSTextDecoderStreamDecoder>,(WebCore::DOMConstructorID)484>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_TextEncoderStreamEncoderConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSTextEncoderStreamEncoder>,(WebCore::DOMConstructorID)487>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSTextEncoderStreamEncoder>,(WebCore::DOMConstructorID)487>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::JSWorkerGlobalScopePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSWorkerGlobalScopePrototype::create(WebCore::JSWorkerGlobalScopePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v5;
  unint64_t v6;
  int *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  WTF::StringImpl *v19;
  JSC::Structure *v20;
  int v21;
  WTF::StringImpl *v23;
  int v24;
  WTF::StringImpl *v25;
  unint64_t v26;
  WTF::StringImpl *v27;
  int v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  int v31;
  WTF::StringImpl *v32;
  WebCore::JSDOMGlobalObject *v33;
  uint64_t SlowCase;
  WTF::StringImpl *v35;
  int v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38[6];
  int v39;
  int v40;
  JSC::Structure *v41;
  int v42;

  v5 = (_QWORD *)((char *)this + 38904);
  v6 = *((_QWORD *)this + 4863);
  if (v6 < *((_QWORD *)this + 4864))
    goto LABEL_2;
  v6 = *((_QWORD *)this + 4865);
  if ((v6 & 1) == 0)
  {
    v26 = *(_QWORD *)(v6 + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = v6 + HIDWORD(v26);
    *((_QWORD *)this + 4865) = v6 + (int)v26;
LABEL_2:
    *v5 = v6 + 16;
    goto LABEL_3;
  }
  v33 = (WebCore::JSDOMGlobalObject *)a3;
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
  a3 = (unint64_t)v33;
  v6 = SlowCase;
LABEL_3:
  v7 = (int *)((char *)this + 93124);
  *(_DWORD *)v6 = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)v6 = a3 >> 4;
  *(_DWORD *)(v6 + 4) = v8;
  *(_QWORD *)(v6 + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<30u>(this, (uint64_t)&WebCore::JSWorkerGlobalScope::s_info, (uint64_t)&WebCore::JSWorkerGlobalScopePrototypeTableValues, (JSC::JSObject *)v6);
  v9 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)v6 & 0xFFFFFFFE)
                                                                                         + 0x28));
  v10 = *(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 136))(v9) + 440);
  v11 = (v10 & 4) == 0;
  if ((v10 & 4) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v27 = v38[0];
    v28 = *v7;
    *v7 = 1;
    LODWORD(v38[0]) = -1;
    WORD2(v38[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v7 = v28;
    if (v27)
    {
      if (*(_DWORD *)v27 == 2)
        WTF::StringImpl::destroy(v27, v29);
      else
        *(_DWORD *)v27 -= 2;
    }
  }
  v12 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)v6 & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v12 + 24))(v12)
    || (v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                                * (*(_DWORD *)v6 & 0xFFFFFFFE)
                                                                                                + 0x28)),
        (*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 136))(v13) + 432) & 0x100000000000) == 0))
  {
    WTF::AtomStringImpl::addLiteral();
    v23 = v38[0];
    v24 = *v7;
    v11 = 1;
    *v7 = 1;
    LODWORD(v38[0]) = -1;
    WORD2(v38[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v7 = v24;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v25);
      else
        *(_DWORD *)v23 -= 2;
    }
  }
  v14 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)v6 & 0xFFFFFFFE)
                                                                                          + 0x28));
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 136))(v14) + 448) & 0x8000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v30 = v38[0];
    v31 = *v7;
    v11 = 1;
    *v7 = 1;
    LODWORD(v38[0]) = -1;
    WORD2(v38[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v7 = v31;
    if (v30)
    {
      if (*(_DWORD *)v30 == 2)
        WTF::StringImpl::destroy(v30, v32);
      else
        *(_DWORD *)v30 -= 2;
    }
  }
  v15 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)v6 & 0xFFFFFFFE)
                                                                                          + 0x28));
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v15 + 136))(v15) + 464) & 0x200000000000000) != 0)
  {
    if (!v11)
      goto LABEL_13;
  }
  else
  {
    WTF::AtomStringImpl::addLiteral();
    v35 = v38[0];
    v36 = *v7;
    *v7 = 1;
    LODWORD(v38[0]) = -1;
    WORD2(v38[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v7 = v36;
    if (v35)
    {
      if (*(_DWORD *)v35 == 2)
        WTF::StringImpl::destroy(v35, v37);
      else
        *(_DWORD *)v35 -= 2;
    }
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x10) & 3) != 0)
    JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE)), this, (JSC::JSObject *)v6);
LABEL_13:
  v16 = *(_QWORD *)(v5[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v18 = JSC::JSString::create((uint64_t)this, v38);
  v19 = v38[0];
  v38[0] = 0;
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v17);
    else
      *(_DWORD *)v19 -= 2;
  }
  v20 = (JSC::Structure *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE));
  v42 = *(_DWORD *)v6;
  v41 = v20;
  v21 = JSC::Structure::outOfLineCapacity(v20);
  v39 = 0;
  v40 = v21;
  v38[0] = (WTF::StringImpl *)&v40;
  v38[1] = (WTF::StringImpl *)v6;
  v38[2] = this;
  v38[3] = (WTF::StringImpl *)&v42;
  v38[4] = (WTF::StringImpl *)&v41;
  v38[5] = (WTF::StringImpl *)&v39;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v20, this, v16, 6, (uint64_t)v38);
  if ((*(_BYTE *)((16 * *(unsigned int *)v6) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(v6, (uint64_t)this, v39, v18);
  *((_DWORD *)v20 + 4) |= 0x10u;
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorkerGlobalScope>,(WebCore::DOMConstructorID)897>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 7176);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventTarget>,(WebCore::DOMConstructorID)450>(a1, a2);
  v7 = v6;
  LODWORD(v22) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v20);
    v5[2] = SlowCase + (int)v20;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v22, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorkerGlobalScope>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v21);
    v10[2848] = v2 + (int)v21;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v22);
  v14 = v22;
  v22 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v22);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v18 = WebCore::JSWorkerGlobalScope::prototype((WebCore::JSWorkerGlobalScope *)a1, (JSC::VM *)a2, v17);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v18, 14, (uint64_t)&v22);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 7176) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsWorkerGlobalScopeConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSWorkerGlobalScopePrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorkerGlobalScope>,(WebCore::DOMConstructorID)897>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsWorkerGlobalScope_self(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t Object;
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;

  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v12 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v13 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v14 = (char **)(16 * v12);
    if ((_DWORD)v12)
      v15 = v14 == &WebCore::JSWorkerGlobalScope::s_info;
    else
      v15 = 1;
    if (!v15)
    {
      do
      {
        v14 = (char **)v14[2];
        v13 = v14 != 0;
      }
      while (v14 != &WebCore::JSWorkerGlobalScope::s_info && v14 != 0);
    }
    if (v13)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  Object = *(_QWORD *)(Object + 16);
  v3 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSWorkerGlobalScope::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSWorkerGlobalScope::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v8 = *(_QWORD *)(*(_QWORD *)(Object + 3400) + 344);
  if (!v8)
    return 2;
  v9 = *(uint64_t **)(v8 + 24);
  if (!v9 || (v10 = *v9) == 0)
  {
    WebCore::WorkerOrWorkletScriptController::initScript(v8);
    v10 = **(_QWORD **)(v8 + 24);
  }
  return *(_QWORD *)(v10 + 3336);
}

uint64_t WebCore::jsWorkerGlobalScope_location(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t Object;
  WTF::StringImpl *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  WTF *v11;
  uint64_t v12;
  unsigned int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t SlowCase;
  uint64_t v22;
  unsigned int v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char **v28;
  int v29;
  unint64_t v30;
  uint64_t *v31;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v33;
  JSC::Structure *v34;
  JSC::JSCell *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v43;
  BOOL v44;
  char **v45;
  BOOL v46;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  WTF *v52;
  uint64_t v53;
  uint64_t v54;
  WTF *v55;
  void *v56;
  int v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  _QWORD *Allocator;
  unint64_t v63;
  _QWORD *v64;
  WTF *v65;

  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v4 = *(_QWORD *)(Object + 16);
    v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v7 = (char **)(16 * v5);
    if ((_DWORD)v5)
      v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
    else
      v8 = 1;
    if (!v8)
    {
      do
      {
        v7 = (char **)v7[2];
        v6 = v7 != 0;
      }
      while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
    }
    if (v6)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v43 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v44 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v45 = (char **)(16 * v43);
  if ((_DWORD)v43)
    v46 = v45 == &WebCore::JSWorkerGlobalScope::s_info;
  else
    v46 = 1;
  if (!v46)
  {
    do
    {
      v45 = (char **)v45[2];
      v44 = v45 != 0;
    }
    while (v45 != &WebCore::JSWorkerGlobalScope::s_info && v45 != 0);
  }
  if (!v44)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = WebCore::WorkerGlobalScope::location(*(WebCore::WorkerGlobalScope **)(v4 + 3400), v3);
  v11 = (WTF *)v10;
  v12 = *(_QWORD *)(*(_QWORD *)(v4 + 3320) + 32);
  if (v12)
  {
    v13 = *(_DWORD *)(v12 - 8);
    v14 = (~(v10 << 32) + v10) ^ ((unint64_t)(~(v10 << 32) + v10) >> 22);
    v15 = 9 * ((v14 + ~(v14 << 13)) ^ ((v14 + ~(v14 << 13)) >> 8));
    v16 = (v15 ^ (v15 >> 15)) + ~((v15 ^ (v15 >> 15)) << 27);
    v17 = v13 & ((v16 >> 31) ^ v16);
    v18 = *(_QWORD *)(v12 + 16 * v17);
    if (v18 == v10)
    {
LABEL_21:
      v20 = *(_QWORD *)(v12 + 16 * v17 + 8);
      if (v20)
      {
        if ((*(_BYTE *)(v20 + 8) & 3) == 0)
        {
          SlowCase = *(_QWORD *)v20;
          if (*(_QWORD *)v20)
            return SlowCase;
        }
      }
    }
    else
    {
      v19 = 1;
      while (v18)
      {
        v17 = ((_DWORD)v17 + v19) & v13;
        v18 = *(_QWORD *)(v12 + 16 * v17);
        ++v19;
        if (v18 == v10)
          goto LABEL_21;
      }
    }
  }
  ++*(_DWORD *)v10;
  v22 = *(_QWORD *)(v4 + 3296);
  if (v22)
  {
    v23 = *(_DWORD *)(v22 - 8);
    v24 = ((unint64_t)&WebCore::JSWorkerLocation::s_info + ~((_QWORD)&WebCore::JSWorkerLocation::s_info << 32)) ^ (((unint64_t)&WebCore::JSWorkerLocation::s_info + ~((_QWORD)&WebCore::JSWorkerLocation::s_info << 32)) >> 22);
    v25 = 9 * ((v24 + ~(v24 << 13)) ^ ((v24 + ~(v24 << 13)) >> 8));
    v26 = (v25 ^ (v25 >> 15)) + ~((v25 ^ (v25 >> 15)) << 27);
    v27 = v23 & ((v26 >> 31) ^ v26);
    v28 = *(char ***)(v22 + 16 * v27);
    if (v28 == &WebCore::JSWorkerLocation::s_info)
    {
LABEL_29:
      v30 = *(_QWORD *)(v22 + 16 * v27 + 8);
      if (v30)
        goto LABEL_31;
    }
    else
    {
      v29 = 1;
      while (v28)
      {
        v27 = ((_DWORD)v27 + v29) & v23;
        v28 = *(char ***)(v22 + 16 * v27);
        ++v29;
        if (v28 == &WebCore::JSWorkerLocation::s_info)
          goto LABEL_29;
      }
    }
  }
  v31 = *(uint64_t **)(v4 + 56);
  Structure = WebCore::JSWorkerLocationPrototype::createStructure(v31, v4, *(JSC::JSCell **)(v4 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v35 = (JSC::JSCell *)WebCore::JSWorkerLocationPrototype::create((WebCore::JSWorkerLocationPrototype *)v31, Structure, v33, v34);
  v36 = WebCore::JSWorkerLocation::createStructure(v31, v4, v35);
  v30 = WebCore::cacheDOMStructure((JSCell *)v4, v36, (uint64_t)&WebCore::JSWorkerLocation::s_info);
LABEL_31:
  v37 = *(_QWORD *)(v4 + 56);
  v38 = *(_QWORD *)(v37 + 41456);
  v39 = *(_QWORD *)(v38 + 23536);
  v40 = *(_QWORD **)(v39 + 7264);
  if (v40)
    goto LABEL_62;
  v41 = *(_QWORD *)(v38 + 22648);
  if (__ldaxr((unsigned __int8 *)v41))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v41))
  {
    goto LABEL_47;
  }
  MEMORY[0x19AEA534C](v41);
LABEL_47:
  v48 = *(_QWORD *)(v41 + 2824);
  if (!*(_QWORD *)(v48 + 7264))
  {
    v49 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v65, "IsoSpace T");
    v64 = 0;
    MEMORY[0x19AEA3204](v49, &v65, v37 + 192, v37 + 1872, 32, 8, &v64);
    v51 = (uint64_t)v64;
    v64 = 0;
    if (v51)
      (*(void (**)(uint64_t))(*(_QWORD *)v51 + 8))(v51);
    v52 = v65;
    v65 = 0;
    if (v52)
    {
      if (*(_DWORD *)v52 == 1)
        WTF::fastFree(v52, v50);
      else
        --*(_DWORD *)v52;
    }
    v53 = *(_QWORD *)(v48 + 7264);
    *(_QWORD *)(v48 + 7264) = v49;
    if (v53)
      (*(void (**)(uint64_t))(*(_QWORD *)v53 + 8))(v53);
  }
  v40 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v54 = *(_QWORD *)(v39 + 7264);
  *(_QWORD *)(v39 + 7264) = v40;
  if (v54)
  {
    v55 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v55, v56);
  }
  v57 = __ldxr((unsigned __int8 *)v41);
  if (v57 != 1)
  {
    __clrex();
    goto LABEL_61;
  }
  if (__stlxr(0, (unsigned __int8 *)v41))
LABEL_61:
    WTF::Lock::unlockSlow((WTF::Lock *)v41);
LABEL_62:
  SlowCase = v40[3];
  if (SlowCase >= v40[4])
  {
    SlowCase = v40[5];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_64;
    }
    v63 = *(_QWORD *)(SlowCase + 8) ^ v40[6];
    v40[4] = SlowCase + HIDWORD(v63);
    v40[5] = SlowCase + (int)v63;
  }
  v40[3] = SlowCase + 32;
LABEL_64:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v30);
  *(_QWORD *)(SlowCase + 24) = v11;
  if (*(_BYTE *)(v37 + 755))
    __dmb(0xAu);
  v58 = *(_QWORD *)(v4 + 3320);
  if ((byte_1EE3373E8 & 1) == 0)
  {
    qword_1EE3373E0 = (uint64_t)&off_1E3343BE0;
    byte_1EE3373E8 = 1;
  }
  v65 = v11;
  if ((SlowCase & 8) != 0)
    v59 = (SlowCase - 112) | 1;
  else
    v59 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v59 & 1) != 0)
    v60 = v59 + 47;
  else
    v60 = *(_QWORD *)v59 + 32;
  Allocator = *(_QWORD **)(v60 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v60 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE3373E0;
  Allocator[2] = v58;
  v64 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v58 + 32), (uint64_t *)&v65, (uint64_t *)&v64);
  if (v64)
    v64[1] = 3;
  return SlowCase;
}

uint64_t WebCore::jsWorkerGlobalScope_navigator(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t Object;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unint64_t SlowCase;
  uint64_t v24;
  unsigned int v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char **v30;
  int v31;
  unint64_t v32;
  uint64_t *v33;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v35;
  JSC::Structure *v36;
  JSC::JSCell *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v45;
  BOOL v46;
  char **v47;
  BOOL v48;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  WTF *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  WTF *v62;
  void *v63;
  int v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  _QWORD *Allocator;
  unint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  WTF *v73;

  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v3 = Object;
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v3 = *(_QWORD *)(Object + 16);
    v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
    v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
    v6 = (char **)(16 * v4);
    if ((_DWORD)v4)
      v7 = v6 == &WebCore::JSWorkerGlobalScope::s_info;
    else
      v7 = 1;
    if (!v7)
    {
      do
      {
        v6 = (char **)v6[2];
        v5 = v6 != 0;
      }
      while (v6 != &WebCore::JSWorkerGlobalScope::s_info && v6 != 0);
    }
    if (v5)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v45 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v46 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v47 = (char **)(16 * v45);
  if ((_DWORD)v45)
    v48 = v47 == &WebCore::JSWorkerGlobalScope::s_info;
  else
    v48 = 1;
  if (!v48)
  {
    do
    {
      v47 = (char **)v47[2];
      v46 = v47 != 0;
    }
    while (v47 != &WebCore::JSWorkerGlobalScope::s_info && v47 != 0);
  }
  if (!v46)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v9 = *(_QWORD *)(v3 + 3400);
  v10 = *(_QWORD *)(v9 + 552);
  if (!v10)
  {
    v11 = *(_BYTE *)(v9 + 560);
    v10 = WTF::fastMalloc((WTF *)0x58);
    *(_DWORD *)(v10 + 16) = 1;
    *(_QWORD *)v10 = &off_1E33A18C0;
    *(_QWORD *)(v10 + 8) = 0;
    WebCore::ContextDestructionObserver::observeContext((WebCore::ContextDestructionObserver *)v10, (WebCore::ScriptExecutionContext *)v9);
    *(_QWORD *)(v10 + 56) = 0;
    *(_OWORD *)(v10 + 40) = 0u;
    *(_OWORD *)(v10 + 24) = 0u;
    *(_QWORD *)v10 = &off_1E3402F28;
    v12 = *(_DWORD **)(v9 + 536);
    if (v12)
      *v12 += 2;
    *(_QWORD *)(v10 + 64) = v12;
    *(_BYTE *)(v10 + 72) = v11;
    *(_QWORD *)(v10 + 80) = 0;
    v13 = *(_DWORD **)(v9 + 552);
    *(_QWORD *)(v9 + 552) = v10;
    if (v13)
    {
      if (v13[4] == 1)
      {
        (*(void (**)(_DWORD *))(*(_QWORD *)v13 + 16))(v13);
        v10 = *(_QWORD *)(v9 + 552);
      }
      else
      {
        --v13[4];
      }
    }
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v3 + 3320) + 32);
  if (v14)
  {
    v15 = *(_DWORD *)(v14 - 8);
    v16 = (~(v10 << 32) + v10) ^ ((unint64_t)(~(v10 << 32) + v10) >> 22);
    v17 = 9 * ((v16 + ~(v16 << 13)) ^ ((v16 + ~(v16 << 13)) >> 8));
    v18 = (v17 ^ (v17 >> 15)) + ~((v17 ^ (v17 >> 15)) << 27);
    v19 = v15 & ((v18 >> 31) ^ v18);
    v20 = *(_QWORD *)(v14 + 16 * v19);
    if (v20 == v10)
    {
LABEL_27:
      v22 = *(_QWORD *)(v14 + 16 * v19 + 8);
      if (v22)
      {
        if ((*(_BYTE *)(v22 + 8) & 3) == 0)
        {
          SlowCase = *(_QWORD *)v22;
          if (*(_QWORD *)v22)
            return SlowCase;
        }
      }
    }
    else
    {
      v21 = 1;
      while (v20)
      {
        v19 = ((_DWORD)v19 + v21) & v15;
        v20 = *(_QWORD *)(v14 + 16 * v19);
        ++v21;
        if (v20 == v10)
          goto LABEL_27;
      }
    }
  }
  ++*(_DWORD *)(v10 + 16);
  if (*(uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))v10 != &off_1E3402F28)
  {
    __break(0xC471u);
    JUMPOUT(0x19514F644);
  }
  v24 = *(_QWORD *)(v3 + 3296);
  if (v24)
  {
    v25 = *(_DWORD *)(v24 - 8);
    v26 = ((unint64_t)&WebCore::JSWorkerNavigator::s_info + ~((_QWORD)&WebCore::JSWorkerNavigator::s_info << 32)) ^ (((unint64_t)&WebCore::JSWorkerNavigator::s_info + ~((_QWORD)&WebCore::JSWorkerNavigator::s_info << 32)) >> 22);
    v27 = 9 * ((v26 + ~(v26 << 13)) ^ ((v26 + ~(v26 << 13)) >> 8));
    v28 = (v27 ^ (v27 >> 15)) + ~((v27 ^ (v27 >> 15)) << 27);
    v29 = v25 & ((v28 >> 31) ^ v28);
    v30 = *(char ***)(v24 + 16 * v29);
    if (v30 == &WebCore::JSWorkerNavigator::s_info)
    {
LABEL_36:
      v32 = *(_QWORD *)(v24 + 16 * v29 + 8);
      if (v32)
        goto LABEL_38;
    }
    else
    {
      v31 = 1;
      while (v30)
      {
        v29 = ((_DWORD)v29 + v31) & v25;
        v30 = *(char ***)(v24 + 16 * v29);
        ++v31;
        if (v30 == &WebCore::JSWorkerNavigator::s_info)
          goto LABEL_36;
      }
    }
  }
  v33 = *(uint64_t **)(v3 + 56);
  Structure = WebCore::JSWorkerNavigatorPrototype::createStructure(v33, v3, *(JSC::JSCell **)(v3 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v37 = (JSC::JSCell *)WebCore::JSWorkerNavigatorPrototype::create((WebCore::JSWorkerNavigatorPrototype *)v33, Structure, v35, v36);
  v38 = WebCore::JSWorkerNavigator::createStructure(v33, v3, v37);
  v32 = WebCore::cacheDOMStructure((JSCell *)v3, v38, (uint64_t)&WebCore::JSWorkerNavigator::s_info);
LABEL_38:
  v39 = *(_QWORD *)(v3 + 56);
  v40 = *(_QWORD *)(v39 + 41456);
  v41 = *(_QWORD *)(v40 + 23536);
  v42 = *(_QWORD **)(v41 + 6096);
  if (v42)
    goto LABEL_72;
  v43 = *(_QWORD *)(v40 + 22648);
  if (__ldaxr((unsigned __int8 *)v43))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v43))
  {
    goto LABEL_54;
  }
  MEMORY[0x19AEA534C](v43);
LABEL_54:
  v50 = *(_QWORD *)(v43 + 2824);
  v71 = *(_QWORD *)(v50 + 6096);
  if (!v71)
  {
    v51 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v73, "IsoSpace T");
    v72 = 0;
    MEMORY[0x19AEA3204](v51, &v73, v39 + 192, v39 + 1872, 32, 8, &v72);
    v53 = (uint64_t)v72;
    v72 = 0;
    if (v53)
      (*(void (**)(uint64_t))(*(_QWORD *)v53 + 8))(v53);
    v54 = v73;
    v73 = 0;
    if (v54)
    {
      if (*(_DWORD *)v54 == 1)
        WTF::fastFree(v54, v52);
      else
        --*(_DWORD *)v54;
    }
    v71 = v51;
    v55 = *(_QWORD *)(v50 + 6096);
    *(_QWORD *)(v50 + 6096) = v51;
    if (v55)
      (*(void (**)(uint64_t))(*(_QWORD *)v55 + 8))(v55);
    v56 = *(unsigned int *)(v43 + 2844);
    if ((_DWORD)v56 == *(_DWORD *)(v43 + 2840))
    {
      v57 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v43 + 2832, v56 + 1, (unint64_t)&v71);
      v56 = *(unsigned int *)(v43 + 2844);
      *(_QWORD *)(*(_QWORD *)(v43 + 2832) + 8 * v56) = *v57;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v43 + 2832) + 8 * v56) = v51;
    }
    *(_DWORD *)(v43 + 2844) = v56 + 1;
  }
  v42 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v61 = *(_QWORD *)(v41 + 6096);
  *(_QWORD *)(v41 + 6096) = v42;
  if (v61)
  {
    v62 = (WTF *)MEMORY[0x19AEA3528](v61, v58, v59, v60);
    WTF::fastFree(v62, v63);
  }
  v64 = __ldxr((unsigned __int8 *)v43);
  if (v64 != 1)
  {
    __clrex();
    goto LABEL_71;
  }
  if (__stlxr(0, (unsigned __int8 *)v43))
LABEL_71:
    WTF::Lock::unlockSlow((WTF::Lock *)v43);
LABEL_72:
  SlowCase = v42[3];
  if (SlowCase >= v42[4])
  {
    SlowCase = v42[5];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_74;
    }
    v70 = *(_QWORD *)(SlowCase + 8) ^ v42[6];
    v42[4] = SlowCase + HIDWORD(v70);
    v42[5] = SlowCase + (int)v70;
  }
  v42[3] = SlowCase + 32;
LABEL_74:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v32);
  *(_QWORD *)(SlowCase + 24) = v10;
  if (*(_BYTE *)(v39 + 755))
    __dmb(0xAu);
  v65 = *(_QWORD *)(v3 + 3320);
  if ((byte_1EE3373F8 & 1) == 0)
  {
    qword_1EE3373F0 = (uint64_t)&off_1E3343C10;
    byte_1EE3373F8 = 1;
  }
  v73 = (WTF *)v10;
  if ((SlowCase & 8) != 0)
    v66 = (SlowCase - 112) | 1;
  else
    v66 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v66 & 1) != 0)
    v67 = v66 + 47;
  else
    v67 = *(_QWORD *)v66 + 32;
  Allocator = *(_QWORD **)(v67 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v67 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE3373F0;
  Allocator[2] = v65;
  v72 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v65 + 32), (uint64_t *)&v73, (uint64_t *)&v72);
  if (v72)
    v72[1] = 3;
  return SlowCase;
}

uint64_t WebCore::jsWorkerGlobalScope_onerror(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t Object;
  WebCore::DOMWrapperWorld *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char **v16;
  BOOL v17;
  uint64_t v20;

  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v14 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v15 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v16 = (char **)(16 * v14);
    if ((_DWORD)v14)
      v17 = v16 == &WebCore::JSWorkerGlobalScope::s_info;
    else
      v17 = 1;
    if (!v17)
    {
      do
      {
        v16 = (char **)v16[2];
        v15 = v16 != 0;
      }
      while (v16 != &WebCore::JSWorkerGlobalScope::s_info && v16 != 0);
    }
    if (v15)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(_DWORD **)(v4 + 3400);
  ++v10[78];
  v11 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v11 || (Object = *(_QWORD *)(v11 + 96)) == 0)
    Object = WebCore::threadGlobalDataSlow((WebCore *)Object);
  v12 = *(_QWORD *)(Object + 40);
  if (!v12)
  {
    v20 = Object;
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)Object);
    v12 = *(_QWORD *)(v20 + 40);
  }
  v13 = WebCore::eventHandlerAttribute((WebCore *)(v10 + 80), (WebCore::EventTarget *)(v12 + 784), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28) + 3320), v3);
  if (v10[78] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v10 + 40))(v10);
  else
    --v10[78];
  return v13;
}

BOOL WebCore::setJSWorkerGlobalScope_onerror(JSC::JSCell *a1, JSC::JSCell *a2, WebCore::JSErrorHandler *a3)
{
  JSC::JSCell *v3;
  uint64_t Object;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  BOOL v18;
  char **v19;
  BOOL v20;
  uint64_t v22;

  v3 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v6 = Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v6 = *(_QWORD *)(Object + 16);
        v7 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
        v8 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
        v9 = (char **)(16 * v7);
        if ((_DWORD)v7)
          v10 = v9 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v10 = 1;
        if (!v10)
        {
          do
          {
            v9 = (char **)v9[2];
            v8 = v9 != 0;
          }
          while (v9 != &WebCore::JSWorkerGlobalScope::s_info && v9 != 0);
        }
        if (v8)
          goto LABEL_16;
      }
      else
      {
        v17 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v18 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v19 = (char **)(16 * v17);
        if ((_DWORD)v17)
          v20 = v19 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v20 = 1;
        if (!v20)
        {
          do
          {
            v19 = (char **)v19[2];
            v18 = v19 != 0;
          }
          while (v19 != &WebCore::JSWorkerGlobalScope::s_info && v19 != 0);
        }
        if (v18)
        {
LABEL_16:
          v12 = *((_QWORD *)v3 + 7);
          v13 = *(_DWORD **)(v6 + 3400);
          ++v13[78];
          v14 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
          if (!v14 || (Object = *(_QWORD *)(v14 + 96)) == 0)
            Object = WebCore::threadGlobalDataSlow((WebCore *)Object);
          v15 = *(_QWORD *)(Object + 40);
          if (!v15)
          {
            v22 = Object;
            WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)Object);
            v15 = *(_QWORD *)(v22 + 40);
          }
          WebCore::EventTarget::setAttributeEventListener<WebCore::JSErrorHandler>((WebCore::InspectorInstrumentation *)(v13 + 80), (WTF::StringImpl **)(v15 + 784), a3, (JSC::JSObject *)v6);
          if (v13[78] == 1)
          {
            (*(void (**)(_DWORD *))(*(_QWORD *)v13 + 40))(v13);
            if (a3)
            {
LABEL_23:
              if (((unint64_t)a3 & 0xFFFE000000000002) == 0
                && *(_DWORD *)(v12 + 760) >= *(unsigned __int8 *)(v6 + 7))
              {
                JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v12 + 192), (const JSCell *)v6);
              }
            }
          }
          else
          {
            --v13[78];
            if (a3)
              goto LABEL_23;
          }
          return 1;
        }
      }
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsWorkerGlobalScope_onoffline(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t Object;
  WebCore::DOMWrapperWorld *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char **v16;
  BOOL v17;
  uint64_t v20;

  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v14 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v15 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v16 = (char **)(16 * v14);
    if ((_DWORD)v14)
      v17 = v16 == &WebCore::JSWorkerGlobalScope::s_info;
    else
      v17 = 1;
    if (!v17)
    {
      do
      {
        v16 = (char **)v16[2];
        v15 = v16 != 0;
      }
      while (v16 != &WebCore::JSWorkerGlobalScope::s_info && v16 != 0);
    }
    if (v15)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(_DWORD **)(v4 + 3400);
  ++v10[78];
  v11 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v11 || (Object = *(_QWORD *)(v11 + 96)) == 0)
    Object = WebCore::threadGlobalDataSlow((WebCore *)Object);
  v12 = *(_QWORD *)(Object + 40);
  if (!v12)
  {
    v20 = Object;
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)Object);
    v12 = *(_QWORD *)(v20 + 40);
  }
  v13 = WebCore::eventHandlerAttribute((WebCore *)(v10 + 80), (WebCore::EventTarget *)(v12 + 1360), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28) + 3320), v3);
  if (v10[78] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v10 + 40))(v10);
  else
    --v10[78];
  return v13;
}

BOOL WebCore::setJSWorkerGlobalScope_onoffline(JSC::JSCell *a1, JSC::JSCell *a2, uint64_t a3)
{
  JSC::JSCell *v3;
  uint64_t Object;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  BOOL v18;
  char **v19;
  BOOL v20;
  uint64_t v22;

  v3 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v6 = Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v6 = *(_QWORD *)(Object + 16);
        v7 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
        v8 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
        v9 = (char **)(16 * v7);
        if ((_DWORD)v7)
          v10 = v9 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v10 = 1;
        if (!v10)
        {
          do
          {
            v9 = (char **)v9[2];
            v8 = v9 != 0;
          }
          while (v9 != &WebCore::JSWorkerGlobalScope::s_info && v9 != 0);
        }
        if (v8)
          goto LABEL_16;
      }
      else
      {
        v17 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v18 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v19 = (char **)(16 * v17);
        if ((_DWORD)v17)
          v20 = v19 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v20 = 1;
        if (!v20)
        {
          do
          {
            v19 = (char **)v19[2];
            v18 = v19 != 0;
          }
          while (v19 != &WebCore::JSWorkerGlobalScope::s_info && v19 != 0);
        }
        if (v18)
        {
LABEL_16:
          v12 = *((_QWORD *)v3 + 7);
          v13 = *(_DWORD **)(v6 + 3400);
          ++v13[78];
          v14 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
          if (!v14 || (Object = *(_QWORD *)(v14 + 96)) == 0)
            Object = WebCore::threadGlobalDataSlow((WebCore *)Object);
          v15 = *(_QWORD *)(Object + 40);
          if (!v15)
          {
            v22 = Object;
            WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)Object);
            v15 = *(_QWORD *)(v22 + 40);
          }
          WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)(v13 + 80), (WTF::StringImpl **)(v15 + 1360), a3, (_DWORD *)v6);
          if (v13[78] == 1)
          {
            (*(void (**)(_DWORD *))(*(_QWORD *)v13 + 40))(v13);
            if (a3)
            {
LABEL_23:
              if ((a3 & 0xFFFE000000000002) == 0
                && *(_DWORD *)(v12 + 760) >= *(unsigned __int8 *)(v6 + 7))
              {
                JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v12 + 192), (const JSCell *)v6);
              }
            }
          }
          else
          {
            --v13[78];
            if (a3)
              goto LABEL_23;
          }
          return 1;
        }
      }
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsWorkerGlobalScope_ononline(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t Object;
  WebCore::DOMWrapperWorld *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char **v16;
  BOOL v17;
  uint64_t v20;

  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v14 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v15 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v16 = (char **)(16 * v14);
    if ((_DWORD)v14)
      v17 = v16 == &WebCore::JSWorkerGlobalScope::s_info;
    else
      v17 = 1;
    if (!v17)
    {
      do
      {
        v16 = (char **)v16[2];
        v15 = v16 != 0;
      }
      while (v16 != &WebCore::JSWorkerGlobalScope::s_info && v16 != 0);
    }
    if (v15)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(_DWORD **)(v4 + 3400);
  ++v10[78];
  v11 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v11 || (Object = *(_QWORD *)(v11 + 96)) == 0)
    Object = WebCore::threadGlobalDataSlow((WebCore *)Object);
  v12 = *(_QWORD *)(Object + 40);
  if (!v12)
  {
    v20 = Object;
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)Object);
    v12 = *(_QWORD *)(v20 + 40);
  }
  v13 = WebCore::eventHandlerAttribute((WebCore *)(v10 + 80), (WebCore::EventTarget *)(v12 + 1368), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28) + 3320), v3);
  if (v10[78] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v10 + 40))(v10);
  else
    --v10[78];
  return v13;
}

BOOL WebCore::setJSWorkerGlobalScope_ononline(JSC::JSCell *a1, JSC::JSCell *a2, uint64_t a3)
{
  JSC::JSCell *v3;
  uint64_t Object;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  BOOL v18;
  char **v19;
  BOOL v20;
  uint64_t v22;

  v3 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v6 = Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v6 = *(_QWORD *)(Object + 16);
        v7 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
        v8 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
        v9 = (char **)(16 * v7);
        if ((_DWORD)v7)
          v10 = v9 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v10 = 1;
        if (!v10)
        {
          do
          {
            v9 = (char **)v9[2];
            v8 = v9 != 0;
          }
          while (v9 != &WebCore::JSWorkerGlobalScope::s_info && v9 != 0);
        }
        if (v8)
          goto LABEL_16;
      }
      else
      {
        v17 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v18 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v19 = (char **)(16 * v17);
        if ((_DWORD)v17)
          v20 = v19 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v20 = 1;
        if (!v20)
        {
          do
          {
            v19 = (char **)v19[2];
            v18 = v19 != 0;
          }
          while (v19 != &WebCore::JSWorkerGlobalScope::s_info && v19 != 0);
        }
        if (v18)
        {
LABEL_16:
          v12 = *((_QWORD *)v3 + 7);
          v13 = *(_DWORD **)(v6 + 3400);
          ++v13[78];
          v14 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
          if (!v14 || (Object = *(_QWORD *)(v14 + 96)) == 0)
            Object = WebCore::threadGlobalDataSlow((WebCore *)Object);
          v15 = *(_QWORD *)(Object + 40);
          if (!v15)
          {
            v22 = Object;
            WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)Object);
            v15 = *(_QWORD *)(v22 + 40);
          }
          WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)(v13 + 80), (WTF::StringImpl **)(v15 + 1368), a3, (_DWORD *)v6);
          if (v13[78] == 1)
          {
            (*(void (**)(_DWORD *))(*(_QWORD *)v13 + 40))(v13);
            if (a3)
            {
LABEL_23:
              if ((a3 & 0xFFFE000000000002) == 0
                && *(_DWORD *)(v12 + 760) >= *(unsigned __int8 *)(v6 + 7))
              {
                JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v12 + 192), (const JSCell *)v6);
              }
            }
          }
          else
          {
            --v13[78];
            if (a3)
              goto LABEL_23;
          }
          return 1;
        }
      }
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsWorkerGlobalScope_onrejectionhandled(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t Object;
  WebCore::DOMWrapperWorld *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char **v16;
  BOOL v17;
  uint64_t v20;

  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v14 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v15 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v16 = (char **)(16 * v14);
    if ((_DWORD)v14)
      v17 = v16 == &WebCore::JSWorkerGlobalScope::s_info;
    else
      v17 = 1;
    if (!v17)
    {
      do
      {
        v16 = (char **)v16[2];
        v15 = v16 != 0;
      }
      while (v16 != &WebCore::JSWorkerGlobalScope::s_info && v16 != 0);
    }
    if (v15)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(_DWORD **)(v4 + 3400);
  ++v10[78];
  v11 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v11 || (Object = *(_QWORD *)(v11 + 96)) == 0)
    Object = WebCore::threadGlobalDataSlow((WebCore *)Object);
  v12 = *(_QWORD *)(Object + 40);
  if (!v12)
  {
    v20 = Object;
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)Object);
    v12 = *(_QWORD *)(v20 + 40);
  }
  v13 = WebCore::eventHandlerAttribute((WebCore *)(v10 + 80), (WebCore::EventTarget *)(v12 + 1640), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28) + 3320), v3);
  if (v10[78] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v10 + 40))(v10);
  else
    --v10[78];
  return v13;
}

BOOL WebCore::setJSWorkerGlobalScope_onrejectionhandled(JSC::JSCell *a1, JSC::JSCell *a2, uint64_t a3)
{
  JSC::JSCell *v3;
  uint64_t Object;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  BOOL v18;
  char **v19;
  BOOL v20;
  uint64_t v22;

  v3 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v6 = Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v6 = *(_QWORD *)(Object + 16);
        v7 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
        v8 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
        v9 = (char **)(16 * v7);
        if ((_DWORD)v7)
          v10 = v9 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v10 = 1;
        if (!v10)
        {
          do
          {
            v9 = (char **)v9[2];
            v8 = v9 != 0;
          }
          while (v9 != &WebCore::JSWorkerGlobalScope::s_info && v9 != 0);
        }
        if (v8)
          goto LABEL_16;
      }
      else
      {
        v17 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v18 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v19 = (char **)(16 * v17);
        if ((_DWORD)v17)
          v20 = v19 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v20 = 1;
        if (!v20)
        {
          do
          {
            v19 = (char **)v19[2];
            v18 = v19 != 0;
          }
          while (v19 != &WebCore::JSWorkerGlobalScope::s_info && v19 != 0);
        }
        if (v18)
        {
LABEL_16:
          v12 = *((_QWORD *)v3 + 7);
          v13 = *(_DWORD **)(v6 + 3400);
          ++v13[78];
          v14 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
          if (!v14 || (Object = *(_QWORD *)(v14 + 96)) == 0)
            Object = WebCore::threadGlobalDataSlow((WebCore *)Object);
          v15 = *(_QWORD *)(Object + 40);
          if (!v15)
          {
            v22 = Object;
            WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)Object);
            v15 = *(_QWORD *)(v22 + 40);
          }
          WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)(v13 + 80), (WTF::StringImpl **)(v15 + 1640), a3, (_DWORD *)v6);
          if (v13[78] == 1)
          {
            (*(void (**)(_DWORD *))(*(_QWORD *)v13 + 40))(v13);
            if (a3)
            {
LABEL_23:
              if ((a3 & 0xFFFE000000000002) == 0
                && *(_DWORD *)(v12 + 760) >= *(unsigned __int8 *)(v6 + 7))
              {
                JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v12 + 192), (const JSCell *)v6);
              }
            }
          }
          else
          {
            --v13[78];
            if (a3)
              goto LABEL_23;
          }
          return 1;
        }
      }
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsWorkerGlobalScope_onunhandledrejection(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t Object;
  WebCore::DOMWrapperWorld *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char **v16;
  BOOL v17;
  uint64_t v20;

  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v14 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v15 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v16 = (char **)(16 * v14);
    if ((_DWORD)v14)
      v17 = v16 == &WebCore::JSWorkerGlobalScope::s_info;
    else
      v17 = 1;
    if (!v17)
    {
      do
      {
        v16 = (char **)v16[2];
        v15 = v16 != 0;
      }
      while (v16 != &WebCore::JSWorkerGlobalScope::s_info && v16 != 0);
    }
    if (v15)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(_DWORD **)(v4 + 3400);
  ++v10[78];
  v11 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v11 || (Object = *(_QWORD *)(v11 + 96)) == 0)
    Object = WebCore::threadGlobalDataSlow((WebCore *)Object);
  v12 = *(_QWORD *)(Object + 40);
  if (!v12)
  {
    v20 = Object;
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)Object);
    v12 = *(_QWORD *)(v20 + 40);
  }
  v13 = WebCore::eventHandlerAttribute((WebCore *)(v10 + 80), (WebCore::EventTarget *)(v12 + 2160), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28) + 3320), v3);
  if (v10[78] == 1)
    (*(void (**)(_DWORD *))(*(_QWORD *)v10 + 40))(v10);
  else
    --v10[78];
  return v13;
}

BOOL WebCore::setJSWorkerGlobalScope_onunhandledrejection(JSC::JSCell *a1, JSC::JSCell *a2, uint64_t a3)
{
  JSC::JSCell *v3;
  uint64_t Object;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  BOOL v18;
  char **v19;
  BOOL v20;
  uint64_t v22;

  v3 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v6 = Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v6 = *(_QWORD *)(Object + 16);
        v7 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
        v8 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
        v9 = (char **)(16 * v7);
        if ((_DWORD)v7)
          v10 = v9 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v10 = 1;
        if (!v10)
        {
          do
          {
            v9 = (char **)v9[2];
            v8 = v9 != 0;
          }
          while (v9 != &WebCore::JSWorkerGlobalScope::s_info && v9 != 0);
        }
        if (v8)
          goto LABEL_16;
      }
      else
      {
        v17 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v18 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v19 = (char **)(16 * v17);
        if ((_DWORD)v17)
          v20 = v19 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v20 = 1;
        if (!v20)
        {
          do
          {
            v19 = (char **)v19[2];
            v18 = v19 != 0;
          }
          while (v19 != &WebCore::JSWorkerGlobalScope::s_info && v19 != 0);
        }
        if (v18)
        {
LABEL_16:
          v12 = *((_QWORD *)v3 + 7);
          v13 = *(_DWORD **)(v6 + 3400);
          ++v13[78];
          v14 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
          if (!v14 || (Object = *(_QWORD *)(v14 + 96)) == 0)
            Object = WebCore::threadGlobalDataSlow((WebCore *)Object);
          v15 = *(_QWORD *)(Object + 40);
          if (!v15)
          {
            v22 = Object;
            WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)Object);
            v15 = *(_QWORD *)(v22 + 40);
          }
          WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>((WebCore::EventTarget *)(v13 + 80), (WTF::StringImpl **)(v15 + 2160), a3, (_DWORD *)v6);
          if (v13[78] == 1)
          {
            (*(void (**)(_DWORD *))(*(_QWORD *)v13 + 40))(v13);
            if (a3)
            {
LABEL_23:
              if ((a3 & 0xFFFE000000000002) == 0
                && *(_DWORD *)(v12 + 760) >= *(unsigned __int8 *)(v6 + 7))
              {
                JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v12 + 192), (const JSCell *)v6);
              }
            }
          }
          else
          {
            --v13[78];
            if (a3)
              goto LABEL_23;
          }
          return 1;
        }
      }
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::jsWorkerGlobalScope_HeadersConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSFetchHeaders>,(WebCore::DOMConstructorID)89>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSFetchHeaders>,(WebCore::DOMConstructorID)89>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_RequestConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSFetchRequest>,(WebCore::DOMConstructorID)90>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSFetchRequest>,(WebCore::DOMConstructorID)90>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_ResponseConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSFetchResponse>,(WebCore::DOMConstructorID)91>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSFetchResponse>,(WebCore::DOMConstructorID)91>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_VideoColorSpaceConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSVideoColorSpace>,(WebCore::DOMConstructorID)271>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSVideoColorSpace>,(WebCore::DOMConstructorID)271>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CloseEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCloseEvent>,(WebCore::DOMConstructorID)285>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCloseEvent>,(WebCore::DOMConstructorID)285>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_DOMMatrixConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMMatrix>,(WebCore::DOMConstructorID)358>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMMatrix>,(WebCore::DOMConstructorID)358>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_DOMMatrixReadOnlyConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMMatrixReadOnly>,(WebCore::DOMConstructorID)359>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMMatrixReadOnly>,(WebCore::DOMConstructorID)359>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_FontFaceConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSFontFace>,(WebCore::DOMConstructorID)366>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSFontFace>,(WebCore::DOMConstructorID)366>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_FontFaceSetConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSFontFaceSet>,(WebCore::DOMConstructorID)367>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSFontFaceSet>,(WebCore::DOMConstructorID)367>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSKeywordValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSKeywordValue>,(WebCore::DOMConstructorID)374>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSKeywordValue>,(WebCore::DOMConstructorID)374>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSNumericValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSNumericValue>,(WebCore::DOMConstructorID)375>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSNumericValue>,(WebCore::DOMConstructorID)375>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSVariableReferenceValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSOMVariableReferenceValue>,(WebCore::DOMConstructorID)376>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSOMVariableReferenceValue>,(WebCore::DOMConstructorID)376>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSImageValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleImageValue>,(WebCore::DOMConstructorID)377>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleImageValue>,(WebCore::DOMConstructorID)377>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSStyleValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleValue>,(WebCore::DOMConstructorID)378>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleValue>,(WebCore::DOMConstructorID)378>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSUnitValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSUnitValue>,(WebCore::DOMConstructorID)379>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSUnitValue>,(WebCore::DOMConstructorID)379>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSUnparsedValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSUnparsedValue>,(WebCore::DOMConstructorID)380>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSUnparsedValue>,(WebCore::DOMConstructorID)380>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_StylePropertyMapReadOnlyConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSStylePropertyMapReadOnly>,(WebCore::DOMConstructorID)382>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSStylePropertyMapReadOnly>,(WebCore::DOMConstructorID)382>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSMathClampConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathClamp>,(WebCore::DOMConstructorID)392>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathClamp>,(WebCore::DOMConstructorID)392>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSMathInvertConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathInvert>,(WebCore::DOMConstructorID)393>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathInvert>,(WebCore::DOMConstructorID)393>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSMathMaxConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathMax>,(WebCore::DOMConstructorID)394>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathMax>,(WebCore::DOMConstructorID)394>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSMathMinConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathMin>,(WebCore::DOMConstructorID)395>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathMin>,(WebCore::DOMConstructorID)395>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSMathNegateConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathNegate>,(WebCore::DOMConstructorID)396>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathNegate>,(WebCore::DOMConstructorID)396>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSMathProductConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathProduct>,(WebCore::DOMConstructorID)397>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathProduct>,(WebCore::DOMConstructorID)397>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSMathSumConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathSum>,(WebCore::DOMConstructorID)398>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMathSum>,(WebCore::DOMConstructorID)398>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSMathValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSMathValue>,(WebCore::DOMConstructorID)399>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSMathValue>,(WebCore::DOMConstructorID)399>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSNumericArrayConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSNumericArray>,(WebCore::DOMConstructorID)400>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSNumericArray>,(WebCore::DOMConstructorID)400>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSMatrixComponentConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMatrixComponent>,(WebCore::DOMConstructorID)401>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSMatrixComponent>,(WebCore::DOMConstructorID)401>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSPerspectiveConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSPerspective>,(WebCore::DOMConstructorID)402>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSPerspective>,(WebCore::DOMConstructorID)402>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSRotateConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSRotate>,(WebCore::DOMConstructorID)403>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSRotate>,(WebCore::DOMConstructorID)403>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSScaleConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSScale>,(WebCore::DOMConstructorID)404>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSScale>,(WebCore::DOMConstructorID)404>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSSkewConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSSkew>,(WebCore::DOMConstructorID)405>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSSkew>,(WebCore::DOMConstructorID)405>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSSkewXConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSSkewX>,(WebCore::DOMConstructorID)406>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSSkewX>,(WebCore::DOMConstructorID)406>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSSkewYConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSSkewY>,(WebCore::DOMConstructorID)407>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSSkewY>,(WebCore::DOMConstructorID)407>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSTransformComponentConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSTransformComponent>,(WebCore::DOMConstructorID)408>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSTransformComponent>,(WebCore::DOMConstructorID)408>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSTransformValueConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSTransformValue>,(WebCore::DOMConstructorID)409>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSTransformValue>,(WebCore::DOMConstructorID)409>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CSSTranslateConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSTranslate>,(WebCore::DOMConstructorID)410>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSTranslate>,(WebCore::DOMConstructorID)410>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_DOMExceptionConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMException>,(WebCore::DOMConstructorID)426>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMException>,(WebCore::DOMConstructorID)426>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_DOMPointConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMPoint>,(WebCore::DOMConstructorID)428>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMPoint>,(WebCore::DOMConstructorID)428>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_DOMPointReadOnlyConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMPointReadOnly>,(WebCore::DOMConstructorID)429>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMPointReadOnly>,(WebCore::DOMConstructorID)429>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_DOMQuadConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMQuad>,(WebCore::DOMConstructorID)430>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMQuad>,(WebCore::DOMConstructorID)430>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_DOMRectConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMRect>,(WebCore::DOMConstructorID)431>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMRect>,(WebCore::DOMConstructorID)431>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_DOMRectReadOnlyConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMRectReadOnly>,(WebCore::DOMConstructorID)433>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMRectReadOnly>,(WebCore::DOMConstructorID)433>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_DOMStringListConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMStringList>,(WebCore::DOMConstructorID)434>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSDOMStringList>,(WebCore::DOMConstructorID)434>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_MessageChannelConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSMessageChannel>,(WebCore::DOMConstructorID)458>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSMessageChannel>,(WebCore::DOMConstructorID)458>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_MessageEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSMessageEvent>,(WebCore::DOMConstructorID)459>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSMessageEvent>,(WebCore::DOMConstructorID)459>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_MessagePortConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSMessagePort>,(WebCore::DOMConstructorID)460>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSMessagePort>,(WebCore::DOMConstructorID)460>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_ProgressEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSProgressEvent>,(WebCore::DOMConstructorID)475>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSProgressEvent>,(WebCore::DOMConstructorID)475>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_SecurityPolicyViolationEventConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSSecurityPolicyViolationEvent>,(WebCore::DOMConstructorID)478>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSSecurityPolicyViolationEvent>,(WebCore::DOMConstructorID)478>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_BlobConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSBlob>,(WebCore::DOMConstructorID)500>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSBlob>,(WebCore::DOMConstructorID)500>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_FileConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  const JSC::JSGlobalObject *v4;
  _DWORD *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v5 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v5 = *(_DWORD **)(Object + 16);
        v6 = *(unsigned int *)(16 * (*v5 & 0xFFFFFFFE) + 0x4C);
        v7 = *(_DWORD *)(16 * (*v5 & 0xFFFFFFFE) + 0x4C) != 0;
        v8 = (char **)(16 * v6);
        if ((_DWORD)v6)
          v9 = v8 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v9 = 1;
        if (!v9)
        {
          do
          {
            v8 = (char **)v8[2];
            v7 = v8 != 0;
          }
          while (v8 != &WebCore::JSWorkerGlobalScope::s_info && v8 != 0);
        }
        if (v7)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSFile>,(WebCore::DOMConstructorID)501>(*((WebCore::JSBlob **)v2 + 7), (uint64_t)v5, v4);
      }
      else
      {
        v12 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v13 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v14 = (char **)(16 * v12);
        if ((_DWORD)v12)
          v15 = v14 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v15 = 1;
        if (!v15)
        {
          do
          {
            v14 = (char **)v14[2];
            v13 = v14 != 0;
          }
          while (v14 != &WebCore::JSWorkerGlobalScope::s_info && v14 != 0);
        }
        if (v13)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSFile>,(WebCore::DOMConstructorID)501>(*((WebCore::JSBlob **)v2 + 7), (uint64_t)v5, v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_FileListConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSFileList>,(WebCore::DOMConstructorID)502>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSFileList>,(WebCore::DOMConstructorID)502>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_FormDataConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMFormData>,(WebCore::DOMConstructorID)505>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSDOMFormData>,(WebCore::DOMConstructorID)505>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_ImageBitmapConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSImageBitmap>,(WebCore::DOMConstructorID)588>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSImageBitmap>,(WebCore::DOMConstructorID)588>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_ImageDataConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSImageData>,(WebCore::DOMConstructorID)589>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSImageData>,(WebCore::DOMConstructorID)589>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_TextMetricsConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSTextMetrics>,(WebCore::DOMConstructorID)596>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSTextMetrics>,(WebCore::DOMConstructorID)596>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CanvasGradientConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCanvasGradient>,(WebCore::DOMConstructorID)603>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCanvasGradient>,(WebCore::DOMConstructorID)603>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CanvasPatternConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCanvasPattern>,(WebCore::DOMConstructorID)604>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCanvasPattern>,(WebCore::DOMConstructorID)604>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_ImageBitmapRenderingContextConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSImageBitmapRenderingContext>,(WebCore::DOMConstructorID)626>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSImageBitmapRenderingContext>,(WebCore::DOMConstructorID)626>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_Path2DConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPath2D>,(WebCore::DOMConstructorID)642>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSPath2D>,(WebCore::DOMConstructorID)642>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_AudioTrackConfigurationConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSAudioTrackConfiguration>,(WebCore::DOMConstructorID)684>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSAudioTrackConfiguration>,(WebCore::DOMConstructorID)684>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_VideoTrackConfigurationConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSVideoTrackConfiguration>,(WebCore::DOMConstructorID)697>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSVideoTrackConfiguration>,(WebCore::DOMConstructorID)697>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_CryptoConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCrypto>,(WebCore::DOMConstructorID)710>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCrypto>,(WebCore::DOMConstructorID)710>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_EventSourceConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventSource>,(WebCore::DOMConstructorID)713>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventSource>,(WebCore::DOMConstructorID)713>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WorkerNavigatorConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorkerNavigator>,(WebCore::DOMConstructorID)752>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorkerNavigator>,(WebCore::DOMConstructorID)752>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WorkerGlobalScopeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorkerGlobalScope>,(WebCore::DOMConstructorID)897>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorkerGlobalScope>,(WebCore::DOMConstructorID)897>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_WorkerLocationConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorkerLocation>,(WebCore::DOMConstructorID)898>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorkerLocation>,(WebCore::DOMConstructorID)898>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_XMLHttpRequestEventTargetConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSXMLHttpRequestEventTarget>,(WebCore::DOMConstructorID)923>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSXMLHttpRequestEventTarget>,(WebCore::DOMConstructorID)923>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_XMLHttpRequestUploadConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSXMLHttpRequestUpload>,(WebCore::DOMConstructorID)925>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSXMLHttpRequestUpload>,(WebCore::DOMConstructorID)925>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::jsWorkerGlobalScope_fonts(JSC::JSCell *a1, JSC::JSCell *a2)
{
  int v2;
  uint64_t Object;
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WebCore::FontFaceSet *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char **v15;
  BOOL v16;
  bmalloc::api *v19;
  void *v20;
  WebCore::FontFaceSet *v21;

  v2 = (int)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = (JSC::VM *)Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v13 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v14 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v15 = (char **)(16 * v13);
    if ((_DWORD)v13)
      v16 = v15 == &WebCore::JSWorkerGlobalScope::s_info;
    else
      v16 = 1;
    if (!v16)
    {
      do
      {
        v15 = (char **)v15[2];
        v14 = v15 != 0;
      }
      while (v15 != &WebCore::JSWorkerGlobalScope::s_info && v15 != 0);
    }
    if (v14)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(JSC::VM **)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  WebCore::WorkerGlobalScope::fonts(*((_DWORD **)v4 + 425), &v21);
  v10 = v21;
  v12 = WebCore::wrap<WebCore::FontFaceSet>(v2, v4, (uint64_t)v21);
  if (*((_DWORD *)v10 + 4) == 1)
  {
    WebCore::FontFaceSet::~FontFaceSet(v10, v11);
    bmalloc::api::isoDeallocate(v19, v20);
  }
  else
  {
    --*((_DWORD *)v10 + 4);
  }
  return v12;
}

uint64_t WebCore::jsWorkerGlobalScope_origin(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  WTF::StringImpl *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char **v16;
  BOOL v17;
  unsigned __int8 *v19;
  unsigned int v20;
  unsigned int v21;
  WTF::StringImpl *v23;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  if (*(_BYTE *)(Object + 5) == 32)
  {
    Object = *(_QWORD *)(Object + 16);
    v5 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v6 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v7 = (char **)(16 * v5);
    if ((_DWORD)v5)
      v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
    else
      v8 = 1;
    if (!v8)
    {
      do
      {
        v7 = (char **)v7[2];
        v6 = v7 != 0;
      }
      while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
    }
    if (v6)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v14 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v15 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v16 = (char **)(16 * v14);
  if ((_DWORD)v14)
    v17 = v16 == &WebCore::JSWorkerGlobalScope::s_info;
  else
    v17 = 1;
  if (!v17)
  {
    do
    {
      v16 = (char **)v16[2];
      v15 = v16 != 0;
    }
    while (v16 != &WebCore::JSWorkerGlobalScope::s_info && v16 != 0);
  }
  if (!v15)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  WebCore::WorkerGlobalScope::origin(*(WebCore::WorkerGlobalScope **)(Object + 3400), v4, &v23);
  v10 = *((_QWORD *)v2 + 7);
  v11 = v23;
  if (!v23 || (v12 = *((_DWORD *)v23 + 1)) == 0)
  {
    v13 = *(_QWORD *)(v10 + 41968);
LABEL_22:
    v23 = 0;
    if (!v11)
      return v13;
    goto LABEL_42;
  }
  if (v12 != 1)
    goto LABEL_19;
  v19 = (unsigned __int8 *)*((_QWORD *)v23 + 1);
  if ((*((_BYTE *)v23 + 16) & 4) != 0)
  {
    v20 = *v19;
LABEL_40:
    v13 = *(_QWORD *)(v10 + 8 * v20 + 42216);
    goto LABEL_41;
  }
  v21 = *(unsigned __int16 *)v19;
  if (v21 <= 0xFF)
  {
    v20 = v21;
    goto LABEL_40;
  }
LABEL_19:
  v13 = *(_QWORD *)(v10 + 64760);
  if (!v13 || v23 != *(WTF::StringImpl **)(v13 + 8))
  {
    v13 = JSC::jsStringWithCacheSlowCase();
    v11 = v23;
    goto LABEL_22;
  }
LABEL_41:
  v23 = 0;
LABEL_42:
  if (*(_DWORD *)v11 == 2)
    WTF::StringImpl::destroy(v11, v11);
  else
    *(_DWORD *)v11 -= 2;
  return v13;
}

BOOL WebCore::setJSWorkerGlobalScope_origin(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t Object;
  _DWORD *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  BOOL v13;
  uint64_t v14;

  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v6 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v13 = v6 == &WebCore::JSWorkerGlobalScope::s_info;
    else
      v13 = 1;
    if (!v13)
    {
      v14 = 16 * v11;
      do
      {
        v14 = *(_QWORD *)(v14 + 16);
        v12 = v14 != 0;
      }
      while ((char **)v14 != &WebCore::JSWorkerGlobalScope::s_info && v14 != 0);
    }
    if (v12)
      goto LABEL_17;
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  }
  v3 = *(_DWORD **)(Object + 16);
  v4 = *(unsigned int *)(16 * (*v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSWorkerGlobalScope::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    v8 = 16 * v4;
    do
    {
      v8 = *(_QWORD *)(v8 + 16);
      v5 = v8 != 0;
    }
    while ((char **)v8 != &WebCore::JSWorkerGlobalScope::s_info && v8 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
LABEL_17:
  v10 = 1;
  ((void (*)(void))v6[18])();
  return v10;
}

uint64_t WebCore::jsWorkerGlobalScope_isSecureContext(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t Object;
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  uint64_t v10;
  BOOL v11;
  char **v12;
  BOOL v13;

  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v10 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v11 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v12 = (char **)(16 * v10);
    if ((_DWORD)v10)
      v13 = v12 == &WebCore::JSWorkerGlobalScope::s_info;
    else
      v13 = 1;
    if (!v13)
    {
      do
      {
        v12 = (char **)v12[2];
        v11 = v12 != 0;
      }
      while (v12 != &WebCore::JSWorkerGlobalScope::s_info && v12 != 0);
    }
    if (v11)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  Object = *(_QWORD *)(Object + 16);
  v3 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSWorkerGlobalScope::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSWorkerGlobalScope::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v8 = *(_QWORD *)(Object + 3400);
  if ((*(_QWORD *)(v8 + 1160) & 2) != 0
    && !WebCore::SecurityOrigin::isPotentiallyTrustworthy(*(WebCore::SecurityOrigin **)(v8 + 568)))
  {
    return 6;
  }
  else
  {
    return 7;
  }
}

uint64_t WebCore::jsWorkerGlobalScope_crossOriginIsolated(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t Object;
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  char **v9;
  BOOL v10;
  unsigned __int8 v12;

  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  if (*(_BYTE *)(Object + 5) == 32)
  {
    v3 = *(unsigned int *)(16 * (**(_DWORD **)(Object + 16) & 0xFFFFFFFE) + 0x4C);
    v4 = *(_DWORD *)(16 * (**(_DWORD **)(Object + 16) & 0xFFFFFFFE) + 0x4C) != 0;
    v5 = (char **)(16 * v3);
    if ((_DWORD)v3)
      v6 = v5 == &WebCore::JSWorkerGlobalScope::s_info;
    else
      v6 = 1;
    if (!v6)
    {
      do
      {
        v5 = (char **)v5[2];
        v4 = v5 != 0;
      }
      while (v5 != &WebCore::JSWorkerGlobalScope::s_info && v5 != 0);
    }
  }
  else
  {
    v8 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v4 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v9 = (char **)(16 * v8);
    if ((_DWORD)v8)
      v10 = v9 == &WebCore::JSWorkerGlobalScope::s_info;
    else
      v10 = 1;
    if (!v10)
    {
      do
      {
        v9 = (char **)v9[2];
        v4 = v9 != 0;
      }
      while (v9 != &WebCore::JSWorkerGlobalScope::s_info && v9 != 0);
    }
  }
  if (!v4)
    return JSC::throwDOMAttributeGetterTypeError();
  v12 = atomic_load(WebCore::globalCrossOriginMode);
  if ((v12 & 1) != 0)
    return 7;
  else
    return 6;
}

unint64_t WebCore::jsWorkerGlobalScope_caches(JSC::JSCell *a1, JSC::JSCell *a2)
{
  WebCore::JSDOMGlobalObject *v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WebCore::WindowOrWorkerGlobalScopeCaches *v10;
  WebCore::WorkerGlobalScope *v11;
  WTF *v12;
  uint64_t v14;
  BOOL v15;
  char **v16;
  BOOL v17;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v14 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v15 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v16 = (char **)(16 * v14);
    if ((_DWORD)v14)
      v17 = v16 == &WebCore::JSWorkerGlobalScope::s_info;
    else
      v17 = 1;
    if (!v17)
    {
      do
      {
        v16 = (char **)v16[2];
        v15 = v16 != 0;
      }
      while (v16 != &WebCore::JSWorkerGlobalScope::s_info && v16 != 0);
    }
    if (v15)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = (WebCore::WindowOrWorkerGlobalScopeCaches *)WebCore::JSDOMGlobalObject::scriptExecutionContext(v2);
  if (!v10)
    return 10;
  v12 = (WTF *)WebCore::WindowOrWorkerGlobalScopeCaches::caches(v10, *(WebCore::ScriptExecutionContext **)(v4 + 3400), v11);
  if (v12)
    return WebCore::wrap<WebCore::DOMCacheStorage>((uint64_t)v2, v4, v12);
  else
    return 2;
}

unint64_t WebCore::jsWorkerGlobalScope_indexedDB(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Object;
  WebCore::WorkerGlobalScope *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  unsigned int *v11;
  uint64_t v13;
  BOOL v14;
  char **v15;
  BOOL v16;

  v2 = a1;
  if ((a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if ((a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject((JSC::JSCell *)a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v5 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v13 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v14 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v15 = (char **)(16 * v13);
    if ((_DWORD)v13)
      v16 = v15 == &WebCore::JSWorkerGlobalScope::s_info;
    else
      v16 = 1;
    if (!v16)
    {
      do
      {
        v15 = (char **)v15[2];
        v14 = v15 != 0;
      }
      while (v15 != &WebCore::JSWorkerGlobalScope::s_info && v15 != 0);
    }
    if (v14)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(_QWORD *)(Object + 16);
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWorkerGlobalScope::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWorkerGlobalScope::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v11 = (unsigned int *)WebCore::WindowOrWorkerGlobalScopeIndexedDatabase::indexedDB(*(WebCore::WindowOrWorkerGlobalScopeIndexedDatabase **)(v5 + 3400), v4);
  if (v11)
    return WebCore::wrap<WebCore::IDBFactory>(v2, v5, v11);
  else
    return 2;
}

unint64_t WebCore::jsWorkerGlobalScope_trustedTypes(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Object;
  WebCore::WorkerGlobalScope *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v13;
  BOOL v14;
  char **v15;
  BOOL v16;

  v2 = a1;
  if ((a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if ((a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject((JSC::JSCell *)a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v5 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v13 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v14 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v15 = (char **)(16 * v13);
    if ((_DWORD)v13)
      v16 = v15 == &WebCore::JSWorkerGlobalScope::s_info;
    else
      v16 = 1;
    if (!v16)
    {
      do
      {
        v15 = (char **)v15[2];
        v14 = v15 != 0;
      }
      while (v15 != &WebCore::JSWorkerGlobalScope::s_info && v15 != 0);
    }
    if (v14)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v5 = *(_QWORD *)(Object + 16);
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSWorkerGlobalScope::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSWorkerGlobalScope::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v11 = WebCore::WindowOrWorkerGlobalScopeTrustedTypes::trustedTypes(*(WebCore::WindowOrWorkerGlobalScopeTrustedTypes **)(v5 + 3400), v4);
  if (v11)
    return WebCore::wrap<WebCore::TrustedTypePolicyFactory>(v2, v5, v11);
  else
    return 2;
}

uint64_t WebCore::jsWorkerGlobalScope_crypto(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Object;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WebCore::ScriptExecutionContext *v10;
  WebCore::Crypto *v11;
  _DWORD *v12;
  uint64_t v14;
  BOOL v15;
  char **v16;
  BOOL v17;

  v2 = a1;
  if ((a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if ((a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeGetterTypeError();
  Object = JSC::JSCell::getObject((JSC::JSCell *)a1);
  if (!Object)
    return JSC::throwDOMAttributeGetterTypeError();
  v4 = Object;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v14 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v15 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v16 = (char **)(16 * v14);
    if ((_DWORD)v14)
      v17 = v16 == &WebCore::JSWorkerGlobalScope::s_info;
    else
      v17 = 1;
    if (!v17)
    {
      do
      {
        v16 = (char **)v16[2];
        v15 = v16 != 0;
      }
      while (v16 != &WebCore::JSWorkerGlobalScope::s_info && v16 != 0);
    }
    if (v15)
      goto LABEL_16;
    return JSC::throwDOMAttributeGetterTypeError();
  }
  v4 = *(_QWORD *)(Object + 16);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeGetterTypeError();
LABEL_16:
  v10 = *(WebCore::ScriptExecutionContext **)(v4 + 3400);
  v11 = (WebCore::Crypto *)*((_QWORD *)v10 + 76);
  if (!v11)
  {
    v11 = (WebCore::Crypto *)WTF::fastMalloc((WTF *)0x20);
    WebCore::Crypto::Crypto(v11, v10);
    v12 = (_DWORD *)*((_QWORD *)v10 + 76);
    *((_QWORD *)v10 + 76) = v11;
    if (v12)
    {
      if (v12[4] == 1)
      {
        (*(void (**)(_DWORD *))(*(_QWORD *)v12 + 16))(v12);
        v11 = (WebCore::Crypto *)*((_QWORD *)v10 + 76);
      }
      else
      {
        --v12[4];
      }
    }
  }
  return WebCore::wrap<WebCore::Crypto>(v2, v4, v11);
}

uint64_t WebCore::jsWorkerGlobalScope_performance(JSC::JSCell *a1, JSC::JSCell *a2)
{
  int v2;
  uint64_t Object;
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = (int)a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (JSC::VM *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(JSC::VM **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkerGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::wrap<WebCore::Performance>(v2, v4, *(_QWORD *)(*((_QWORD *)v4 + 425) + 592));
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkerGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkerGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::wrap<WebCore::Performance>(v2, v4, *(_QWORD *)(*((_QWORD *)v4 + 425) + 592));
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

BOOL WebCore::setJSWorkerGlobalScope_performance(JSC::JSCell *a1, JSC::JSCell *a2)
{
  uint64_t Object;
  _DWORD *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  BOOL v13;
  uint64_t v14;

  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  Object = JSC::JSCell::getObject(a1);
  if (!Object)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (*(_BYTE *)(Object + 5) != 32)
  {
    v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
    v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
    v6 = (char **)(16 * v11);
    if ((_DWORD)v11)
      v13 = v6 == &WebCore::JSWorkerGlobalScope::s_info;
    else
      v13 = 1;
    if (!v13)
    {
      v14 = 16 * v11;
      do
      {
        v14 = *(_QWORD *)(v14 + 16);
        v12 = v14 != 0;
      }
      while ((char **)v14 != &WebCore::JSWorkerGlobalScope::s_info && v14 != 0);
    }
    if (v12)
      goto LABEL_17;
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  }
  v3 = *(_DWORD **)(Object + 16);
  v4 = *(unsigned int *)(16 * (*v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSWorkerGlobalScope::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    v8 = 16 * v4;
    do
    {
      v8 = *(_QWORD *)(v8 + 16);
      v5 = v8 != 0;
    }
    while ((char **)v8 != &WebCore::JSWorkerGlobalScope::s_info && v8 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
LABEL_17:
  v10 = 1;
  ((void (*)(void))v6[18])();
  return v10;
}

uint64_t WebCore::JSWorkerLocation::destroy(uint64_t this, JSC::JSCell *a2)
{
  WTF *v2;
  WTF::StringImpl *v3;
  WTF::StringImpl *v4;

  v2 = *(WTF **)(this + 24);
  *(_QWORD *)(this + 24) = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = (WTF::StringImpl *)*((_QWORD *)v2 + 6);
      *((_QWORD *)v2 + 6) = 0;
      if (v3)
      {
        if (*(_DWORD *)v3 == 2)
          WTF::StringImpl::destroy(v3, a2);
        else
          *(_DWORD *)v3 -= 2;
      }
      v4 = (WTF::StringImpl *)*((_QWORD *)v2 + 1);
      *((_QWORD *)v2 + 1) = 0;
      if (v4)
      {
        if (*(_DWORD *)v4 == 2)
          WTF::StringImpl::destroy(v4, a2);
        else
          *(_DWORD *)v4 -= 2;
      }
      return WTF::fastFree(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
  return this;
}

uint64_t WebCore::JSWorkerLocation::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSWorkerLocationPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSWorkerLocationPrototype::create(WebCore::JSWorkerLocationPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<11u>(this, (uint64_t)&WebCore::JSWorkerLocation::s_info, (uint64_t)&WebCore::JSWorkerLocationPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorkerLocation>,(WebCore::DOMConstructorID)898>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 7184);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorkerLocation>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSWorkerLocation::s_info + ~((_QWORD)&WebCore::JSWorkerLocation::s_info << 32)) ^ (((unint64_t)&WebCore::JSWorkerLocation::s_info + ~((_QWORD)&WebCore::JSWorkerLocation::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSWorkerLocation::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSWorkerLocation::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSWorkerLocationPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSWorkerLocationPrototype::create((WebCore::JSWorkerLocationPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSWorkerLocation::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSWorkerLocation::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 7184) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsWorkerLocationConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSWorkerLocationPrototype::s_info != (char **)(16
                                                              * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorkerLocation>,(WebCore::DOMConstructorID)898>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsWorkerLocation_href(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 8);
  if (!v2)
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v3 = *(_DWORD *)v2;
  v4 = *(_DWORD *)(v2 + 4);
  *(_DWORD *)v2 += 2;
  v5 = *(_QWORD *)(a1 + 56);
  if (v4)
  {
    if (v4 != 1)
    {
LABEL_4:
      v6 = *(_QWORD *)(v5 + 64760);
      if (!v6 || v2 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v3 = *(_DWORD *)v2 - 2;
      }
      goto LABEL_7;
    }
    v8 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v6 = *(_QWORD *)(v5 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *(_QWORD *)(v5 + 41968);
  }
LABEL_7:
  if (v3)
    *(_DWORD *)v2 = v3;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v2, a2);
  return v6;
}

uint64_t WebCore::jsWorkerLocation_protocol(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  _BYTE *v5;
  WTF::StringImpl *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WTF::StringImpl *v13;

  result = WTF::URL::protocol((WTF::URL *)(*(_QWORD *)(a2 + 24) + 8));
  if ((v4 & 0x80000000) != 0 || (v5 = (_BYTE *)result, result = (v4 + 1), __OFADD__((_DWORD)v4, 1)))
  {
    v13 = 0;
  }
  else
  {
    result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::StringView,void>,WTF::StringTypeAdapter<char,void>>(result, (v4 & 0xFF00000000) != 0, v5, v4, 58, &v13);
    v6 = v13;
    if (v13)
    {
      v7 = *(_QWORD *)(a1 + 56);
      v8 = *((_DWORD *)v13 + 1);
      if (!v8)
      {
        v9 = *(_QWORD *)(v7 + 41968);
        goto LABEL_14;
      }
      if (v8 != 1)
      {
LABEL_6:
        v9 = *(_QWORD *)(v7 + 64760);
        if (!v9 || v13 != *(WTF::StringImpl **)(v9 + 8))
        {
          v9 = JSC::jsStringWithCacheSlowCase();
          v6 = v13;
          v13 = 0;
          if (!v6)
            return v9;
LABEL_15:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy(v6, v6);
          else
            *(_DWORD *)v6 -= 2;
          return v9;
        }
LABEL_14:
        v13 = 0;
        goto LABEL_15;
      }
      v10 = (unsigned __int8 *)*((_QWORD *)v13 + 1);
      if ((*((_BYTE *)v13 + 16) & 4) != 0)
      {
        v11 = *v10;
      }
      else
      {
        v12 = *(unsigned __int16 *)v10;
        if (v12 > 0xFF)
          goto LABEL_6;
        v11 = v12;
      }
      v9 = *(_QWORD *)(v7 + 8 * v11 + 42216);
      goto LABEL_14;
    }
  }
  __break(0xC471u);
  return result;
}

uint64_t WebCore::jsWorkerLocation_host(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WTF::URL::hostAndPort((WTF::URL *)(*(_QWORD *)(a2 + 24) + 8));
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    if (!v4)
      return v6;
    goto LABEL_15;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

uint64_t WebCore::jsWorkerLocation_hostname(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  WTF::StringImpl *v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;
  WTF::StringImpl *v12;

  WTF::URL::host((WTF::URL *)(*(_QWORD *)(a2 + 24) + 8));
  if ((v3 & 0xFF00000000) != 0)
    WTF::String::String();
  else
    WTF::String::String();
  v4 = *(_QWORD *)(a1 + 56);
  v5 = v12;
  if (!v12 || (v6 = *((_DWORD *)v12 + 1)) == 0)
  {
    v7 = *(_QWORD *)(v4 + 41968);
LABEL_9:
    if (!v5)
      return v7;
    goto LABEL_18;
  }
  if (v6 != 1)
    goto LABEL_6;
  v8 = (unsigned __int8 *)*((_QWORD *)v12 + 1);
  if ((*((_BYTE *)v12 + 16) & 4) != 0)
  {
    v9 = *v8;
LABEL_17:
    v7 = *(_QWORD *)(v4 + 8 * v9 + 42216);
    goto LABEL_18;
  }
  v10 = *(unsigned __int16 *)v8;
  if (v10 <= 0xFF)
  {
    v9 = v10;
    goto LABEL_17;
  }
LABEL_6:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v12 != *(WTF::StringImpl **)(v7 + 8))
  {
    v7 = JSC::jsStringWithCacheSlowCase();
    v5 = v12;
    goto LABEL_9;
  }
LABEL_18:
  if (*(_DWORD *)v5 == 2)
    WTF::StringImpl::destroy(v5, v5);
  else
    *(_DWORD *)v5 -= 2;
  return v7;
}

uint64_t WebCore::jsWorkerLocation_port(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;
  WTF::StringImpl *v12;

  v3 = WTF::URL::port((WTF::URL *)(*(_QWORD *)(a2 + 24) + 8));
  if ((v3 & 0xFF0000) != 0)
  {
    WTF::String::number((WTF::String *)(unsigned __int16)v3);
    v4 = v12;
  }
  else
  {
    v4 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v4 += 2;
    v12 = v4;
  }
  v5 = *(_QWORD *)(a1 + 56);
  if (!v4 || (v6 = *((_DWORD *)v4 + 1)) == 0)
  {
    v7 = *(_QWORD *)(v5 + 41968);
LABEL_12:
    if (!v4)
      return v7;
    goto LABEL_20;
  }
  if (v6 != 1)
    goto LABEL_9;
  v8 = (unsigned __int8 *)*((_QWORD *)v4 + 1);
  if ((*((_BYTE *)v4 + 16) & 4) != 0)
  {
    v9 = *v8;
LABEL_19:
    v7 = *(_QWORD *)(v5 + 8 * v9 + 42216);
    goto LABEL_20;
  }
  v10 = *(unsigned __int16 *)v8;
  if (v10 <= 0xFF)
  {
    v9 = v10;
    goto LABEL_19;
  }
LABEL_9:
  v7 = *(_QWORD *)(v5 + 64760);
  if (!v7 || v4 != *(WTF::StringImpl **)(v7 + 8))
  {
    v7 = JSC::jsStringWithCacheSlowCase();
    v4 = v12;
    goto LABEL_12;
  }
LABEL_20:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v7;
}

uint64_t WebCore::jsWorkerLocation_pathname(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  WTF::StringImpl *v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;
  WTF::StringImpl *v12;

  WTF::URL::path((WTF::URL *)(*(_QWORD *)(a2 + 24) + 8));
  if ((_DWORD)v3)
  {
    if ((v3 & 0xFF00000000) != 0)
      WTF::String::String();
    else
      WTF::String::String();
  }
  else
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
  }
  v4 = *(_QWORD *)(a1 + 56);
  v5 = v12;
  if (!v12 || (v6 = *((_DWORD *)v12 + 1)) == 0)
  {
    v7 = *(_QWORD *)(v4 + 41968);
LABEL_11:
    if (!v5)
      return v7;
    goto LABEL_20;
  }
  if (v6 != 1)
    goto LABEL_8;
  v8 = (unsigned __int8 *)*((_QWORD *)v12 + 1);
  if ((*((_BYTE *)v12 + 16) & 4) != 0)
  {
    v9 = *v8;
LABEL_19:
    v7 = *(_QWORD *)(v4 + 8 * v9 + 42216);
    goto LABEL_20;
  }
  v10 = *(unsigned __int16 *)v8;
  if (v10 <= 0xFF)
  {
    v9 = v10;
    goto LABEL_19;
  }
LABEL_8:
  v7 = *(_QWORD *)(v4 + 64760);
  if (!v7 || v12 != *(WTF::StringImpl **)(v7 + 8))
  {
    v7 = JSC::jsStringWithCacheSlowCase();
    v5 = v12;
    goto LABEL_11;
  }
LABEL_20:
  if (*(_DWORD *)v5 == 2)
    WTF::StringImpl::destroy(v5, v5);
  else
    *(_DWORD *)v5 -= 2;
  return v7;
}

uint64_t WebCore::jsWorkerLocation_search(uint64_t a1, uint64_t a2)
{
  WTF::URL *v3;
  int v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WTF::StringImpl *v14;

  v3 = (WTF::URL *)(*(_QWORD *)(a2 + 24) + 8);
  WTF::URL::query(v3);
  if (v4)
  {
    WTF::URL::queryWithLeadingQuestionMark(v3);
    if ((v5 & 0xFF00000000) != 0)
      WTF::String::String();
    else
      WTF::String::String();
    v6 = v14;
  }
  else
  {
    v6 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v6 += 2;
    v14 = v6;
  }
  v7 = *(_QWORD *)(a1 + 56);
  if (!v6 || (v8 = *((_DWORD *)v6 + 1)) == 0)
  {
    v9 = *(_QWORD *)(v7 + 41968);
LABEL_14:
    if (!v6)
      return v9;
    goto LABEL_23;
  }
  if (v8 != 1)
    goto LABEL_11;
  v10 = (unsigned __int8 *)*((_QWORD *)v6 + 1);
  if ((*((_BYTE *)v6 + 16) & 4) != 0)
  {
    v11 = *v10;
LABEL_22:
    v9 = *(_QWORD *)(v7 + 8 * v11 + 42216);
    goto LABEL_23;
  }
  v12 = *(unsigned __int16 *)v10;
  if (v12 <= 0xFF)
  {
    v11 = v12;
    goto LABEL_22;
  }
LABEL_11:
  v9 = *(_QWORD *)(v7 + 64760);
  if (!v9 || v6 != *(WTF::StringImpl **)(v9 + 8))
  {
    v9 = JSC::jsStringWithCacheSlowCase();
    v6 = v14;
    goto LABEL_14;
  }
LABEL_23:
  if (*(_DWORD *)v6 == 2)
    WTF::StringImpl::destroy(v6, v6);
  else
    *(_DWORD *)v6 -= 2;
  return v9;
}

uint64_t WebCore::jsWorkerLocation_hash(uint64_t a1, uint64_t a2)
{
  WTF::URL *v3;
  int v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WTF::StringImpl *v14;

  v3 = (WTF::URL *)(*(_QWORD *)(a2 + 24) + 8);
  WTF::URL::fragmentIdentifier(v3);
  if (v4)
  {
    WTF::URL::fragmentIdentifierWithLeadingNumberSign(v3);
    if ((v5 & 0xFF00000000) != 0)
      WTF::String::String();
    else
      WTF::String::String();
    v6 = v14;
  }
  else
  {
    v6 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v6 += 2;
    v14 = v6;
  }
  v7 = *(_QWORD *)(a1 + 56);
  if (!v6 || (v8 = *((_DWORD *)v6 + 1)) == 0)
  {
    v9 = *(_QWORD *)(v7 + 41968);
LABEL_14:
    if (!v6)
      return v9;
    goto LABEL_23;
  }
  if (v8 != 1)
    goto LABEL_11;
  v10 = (unsigned __int8 *)*((_QWORD *)v6 + 1);
  if ((*((_BYTE *)v6 + 16) & 4) != 0)
  {
    v11 = *v10;
LABEL_22:
    v9 = *(_QWORD *)(v7 + 8 * v11 + 42216);
    goto LABEL_23;
  }
  v12 = *(unsigned __int16 *)v10;
  if (v12 <= 0xFF)
  {
    v11 = v12;
    goto LABEL_22;
  }
LABEL_11:
  v9 = *(_QWORD *)(v7 + 64760);
  if (!v9 || v6 != *(WTF::StringImpl **)(v9 + 8))
  {
    v9 = JSC::jsStringWithCacheSlowCase();
    v6 = v14;
    goto LABEL_14;
  }
LABEL_23:
  if (*(_DWORD *)v6 == 2)
    WTF::StringImpl::destroy(v6, v6);
  else
    *(_DWORD *)v6 -= 2;
  return v9;
}

uint64_t WebCore::jsWorkerLocation_origin(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 48);
  if (!v2)
    return *(_QWORD *)(*(_QWORD *)(a1 + 56) + 41968);
  v3 = *(_DWORD *)v2;
  v4 = *(_DWORD *)(v2 + 4);
  *(_DWORD *)v2 += 2;
  v5 = *(_QWORD *)(a1 + 56);
  if (v4)
  {
    if (v4 != 1)
    {
LABEL_4:
      v6 = *(_QWORD *)(v5 + 64760);
      if (!v6 || v2 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v3 = *(_DWORD *)v2 - 2;
      }
      goto LABEL_7;
    }
    v8 = *(unsigned __int8 **)(v2 + 8);
    if ((*(_BYTE *)(v2 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_4;
      v9 = v10;
    }
    v6 = *(_QWORD *)(v5 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *(_QWORD *)(v5 + 41968);
  }
LABEL_7:
  if (v3)
    *(_DWORD *)v2 = v3;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v2, a2);
  return v6;
}

uint64_t WebCore::JSWorkerLocationOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  void *v5;
  WTF::ConcurrentPtrHashSet *v6;
  _DWORD *v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unsigned int v13;
  void *v14;
  uint64_t result;
  uint64_t v16;
  void *v17;

  v5 = *(void **)(*(_QWORD *)a2 + 24);
  if (a5)
  {
    *a5 = "Reachable from WorkerLocation";
    a5[1] = 30;
  }
  v6 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v7 = (_DWORD *)*((_QWORD *)v6 + 6);
  if ((_DWORD *)((char *)v6 + 56) == v7)
  {
    v16 = a4;
    v17 = v5;
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v6, v5);
    a4 = v16;
    v5 = v17;
    if ((_DWORD)result)
    {
LABEL_12:
      if (*(_BYTE *)(a4 + 131))
        (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v5);
      return 1;
    }
  }
  else
  {
    v8 = v7[1];
    v9 = ((unint64_t)v5 + ~((_QWORD)v5 << 32)) ^ (((unint64_t)v5 + ~((_QWORD)v5 << 32)) >> 22);
    v10 = 9 * ((v9 + ~(v9 << 13)) ^ ((v9 + ~(v9 << 13)) >> 8));
    v11 = (v10 ^ (v10 >> 15)) + ~((v10 ^ (v10 >> 15)) << 27);
    v12 = v8 & ((v11 >> 31) ^ v11);
    v13 = v12;
    while (1)
    {
      v14 = *(void **)&v7[2 * v13 + 4];
      if (!v14)
        return 0;
      if (v5 == v14)
        goto LABEL_12;
      v13 = (v13 + 1) & v8;
      if (v13 == v12)
      {
        __break(0xC471u);
        JUMPOUT(0x195157954);
      }
    }
  }
  return result;
}

void WebCore::JSWorkerLocationOwner::finalize(uint64_t a1, WTF::StringImpl *a2, uint64_t a3)
{
  WTF *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WTF *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;

  v3 = *(WTF **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(WTF **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(WTF **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
  {
    v24 = (WTF::StringImpl *)*((_QWORD *)v3 + 6);
    *((_QWORD *)v3 + 6) = 0;
    if (v24)
    {
      if (*(_DWORD *)v24 == 2)
        WTF::StringImpl::destroy(v24, a2);
      else
        *(_DWORD *)v24 -= 2;
    }
    v25 = (WTF::StringImpl *)*((_QWORD *)v3 + 1);
    *((_QWORD *)v3 + 1) = 0;
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, a2);
      else
        *(_DWORD *)v25 -= 2;
    }
    WTF::fastFree(v3, a2);
  }
  else
  {
    --*(_DWORD *)v3;
  }
}

uint64_t WebCore::JSWorkerNavigator::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 88);
  if (!v2 || !*(_BYTE *)(v2 + 24))
    return WebCore::JSWorkerNavigator::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
  result = 75;
  __break(0xC471u);
  return result;
}

_DWORD *WebCore::JSWorkerNavigator::destroy(WebCore::JSWorkerNavigator *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

uint64_t WebCore::JSWorkerNavigator::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSWorkerNavigator::visitChildren(uint64_t a1, uint64_t a2)
{
  JSC::JSObject::visitChildren();
  return WebCore::JSWorkerNavigator::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
}

uint64_t WebCore::JSWorkerNavigator::visitChildren(WebCore::JSWorkerNavigator *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    JSC::JSObject::visitChildren();
    result = WebCore::JSWorkerNavigator::visitAdditionalChildren<JSC::AbstractSlotVisitor>((uint64_t)this, (uint64_t)a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSWorkerNavigatorPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSWorkerNavigatorPrototype::create(WebCore::JSWorkerNavigatorPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v5;
  unint64_t v6;
  int *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  int v12;
  int v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  int v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  int v23;
  WTF::StringImpl *v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  int v27;
  WTF::StringImpl *v28;
  uint64_t v29;
  WTF::StringImpl *v30;
  int v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  int v36;
  WTF::StringImpl *v37;
  uint64_t v38;
  uint64_t v39;
  WTF::StringImpl *v40;
  int v41;
  WTF::StringImpl *v42;
  uint64_t v43;
  uint64_t v44;
  WTF::StringImpl *v45;
  int v46;
  WTF::StringImpl *v47;
  unint64_t v48;
  WTF::StringImpl *v49;
  uint64_t v50;
  WTF::StringImpl *v51;
  JSC::Structure *v52;
  int v53;
  unint64_t v55;
  JSC::VM *v56;
  uint64_t SlowCase;
  WTF::StringImpl *v58[6];
  int v59;
  int v60;
  JSC::Structure *v61;
  int v62;

  v5 = (_QWORD *)((char *)this + 38904);
  v6 = *((_QWORD *)this + 4863);
  if (v6 < *((_QWORD *)this + 4864))
    goto LABEL_2;
  v6 = *((_QWORD *)this + 4865);
  if ((v6 & 1) == 0)
  {
    v55 = *(_QWORD *)(v6 + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = v6 + HIDWORD(v55);
    *((_QWORD *)this + 4865) = v6 + (int)v55;
LABEL_2:
    *v5 = v6 + 16;
    goto LABEL_3;
  }
  v56 = (JSC::VM *)a2;
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
  a2 = (unint64_t)v56;
  v6 = SlowCase;
LABEL_3:
  v7 = (int *)((char *)this + 93124);
  *(_DWORD *)v6 = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v8;
  *(_QWORD *)(v6 + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<19u>(this, (uint64_t)&WebCore::JSWorkerNavigator::s_info, (uint64_t)&WebCore::JSWorkerNavigatorPrototypeTableValues, (JSC::JSObject *)v6);
  v9 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)v6 & 0xFFFFFFFE)
                                                                                         + 0x28));
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v9 + 24))(v9)
    && (v10 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                                * (*(_DWORD *)v6 & 0xFFFFFFFE)
                                                                                                + 0x28)),
        (*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 136))(v10) + 432) & 0x8000000) != 0))
  {
    v13 = 0;
  }
  else
  {
    WTF::AtomStringImpl::addLiteral();
    v11 = v58[0];
    v12 = *v7;
    v13 = 1;
    *v7 = 1;
    LODWORD(v58[0]) = -1;
    WORD2(v58[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v7 = v12;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v14);
      else
        *(_DWORD *)v11 -= 2;
    }
  }
  v15 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)v6 & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v15 + 24))(v15)
    || (v16 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                                * (*(_DWORD *)v6 & 0xFFFFFFFE)
                                                                                                + 0x28)),
        (*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 136))(v16) + 432) & 0x8000000) == 0))
  {
    WTF::AtomStringImpl::addLiteral();
    v17 = v58[0];
    v18 = *v7;
    v13 = 1;
    *v7 = 1;
    LODWORD(v58[0]) = -1;
    WORD2(v58[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v7 = v18;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v19);
      else
        *(_DWORD *)v17 -= 2;
    }
  }
  v20 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)v6 & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v20 + 24))(v20)
    || (v21 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                                * (*(_DWORD *)v6 & 0xFFFFFFFE)
                                                                                                + 0x28)),
        (*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 136))(v21) + 472) & 0x1000000) == 0))
  {
    WTF::AtomStringImpl::addLiteral();
    v22 = v58[0];
    v23 = *v7;
    v13 = 1;
    *v7 = 1;
    LODWORD(v58[0]) = -1;
    WORD2(v58[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v7 = v23;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, v24);
      else
        *(_DWORD *)v22 -= 2;
    }
  }
  v25 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)v6 & 0xFFFFFFFE)
                                                                                          + 0x28));
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v25 + 136))(v25) + 456) & 0x20) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v26 = v58[0];
    v27 = *v7;
    v13 = 1;
    *v7 = 1;
    LODWORD(v58[0]) = -1;
    WORD2(v58[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v7 = v27;
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
        WTF::StringImpl::destroy(v26, v28);
      else
        *(_DWORD *)v26 -= 2;
    }
  }
  v29 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)v6 & 0xFFFFFFFE)
                                                                                          + 0x28));
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v29 + 136))(v29) + 456) & 0x10000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v30 = v58[0];
    v31 = *v7;
    v13 = 1;
    *v7 = 1;
    LODWORD(v58[0]) = -1;
    WORD2(v58[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v7 = v31;
    if (v30)
    {
      if (*(_DWORD *)v30 == 2)
        WTF::StringImpl::destroy(v30, v32);
      else
        *(_DWORD *)v30 -= 2;
    }
  }
  v33 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)v6 & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v33 + 24))(v33)
    || (v34 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                                * (*(_DWORD *)v6 & 0xFFFFFFFE)
                                                                                                + 0x28)),
        (*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v34 + 136))(v34) + 472) & 0x4000000) == 0))
  {
    WTF::AtomStringImpl::addLiteral();
    v35 = v58[0];
    v36 = *v7;
    v13 = 1;
    *v7 = 1;
    LODWORD(v58[0]) = -1;
    WORD2(v58[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v7 = v36;
    if (v35)
    {
      if (*(_DWORD *)v35 == 2)
        WTF::StringImpl::destroy(v35, v37);
      else
        *(_DWORD *)v35 -= 2;
    }
  }
  v38 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)v6 & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v38 + 24))(v38)
    || (v39 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                                * (*(_DWORD *)v6 & 0xFFFFFFFE)
                                                                                                + 0x28)),
        (*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v39 + 136))(v39) + 464) & 0x80) == 0))
  {
    WTF::AtomStringImpl::addLiteral();
    v40 = v58[0];
    v41 = *v7;
    v13 = 1;
    *v7 = 1;
    LODWORD(v58[0]) = -1;
    WORD2(v58[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v7 = v41;
    if (v40)
    {
      if (*(_DWORD *)v40 == 2)
        WTF::StringImpl::destroy(v40, v42);
      else
        *(_DWORD *)v40 -= 2;
    }
  }
  v43 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)v6 & 0xFFFFFFFE)
                                                                                          + 0x28));
  if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v43 + 24))(v43)
    && (v44 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                                * (*(_DWORD *)v6 & 0xFFFFFFFE)
                                                                                                + 0x28)),
        (*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v44 + 136))(v44) + 464) & 0x100000000000) != 0))
  {
    if (!v13)
      goto LABEL_46;
  }
  else
  {
    WTF::AtomStringImpl::addLiteral();
    v45 = v58[0];
    v46 = *v7;
    *v7 = 1;
    LODWORD(v58[0]) = -1;
    WORD2(v58[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v7 = v46;
    if (v45)
    {
      if (*(_DWORD *)v45 == 2)
        WTF::StringImpl::destroy(v45, v47);
      else
        *(_DWORD *)v45 -= 2;
    }
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x10) & 3) != 0)
    JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE)), this, (JSC::JSObject *)v6);
LABEL_46:
  v48 = *(_QWORD *)(v5[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v50 = JSC::JSString::create((uint64_t)this, v58);
  v51 = v58[0];
  v58[0] = 0;
  if (v51)
  {
    if (*(_DWORD *)v51 == 2)
      WTF::StringImpl::destroy(v51, v49);
    else
      *(_DWORD *)v51 -= 2;
  }
  v52 = (JSC::Structure *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE));
  v62 = *(_DWORD *)v6;
  v61 = v52;
  v53 = JSC::Structure::outOfLineCapacity(v52);
  v59 = 0;
  v60 = v53;
  v58[0] = (WTF::StringImpl *)&v60;
  v58[1] = (WTF::StringImpl *)v6;
  v58[2] = this;
  v58[3] = (WTF::StringImpl *)&v62;
  v58[4] = (WTF::StringImpl *)&v61;
  v58[5] = (WTF::StringImpl *)&v59;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v52, this, v48, 6, (uint64_t)v58);
  if ((*(_BYTE *)((16 * *(unsigned int *)v6) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(v6, (uint64_t)this, v59, v50);
  *((_DWORD *)v52 + 4) |= 0x10u;
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorkerNavigator>,(WebCore::DOMConstructorID)752>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 6016);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorkerNavigator>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSWorkerNavigator::s_info + ~((_QWORD)&WebCore::JSWorkerNavigator::s_info << 32)) ^ (((unint64_t)&WebCore::JSWorkerNavigator::s_info + ~((_QWORD)&WebCore::JSWorkerNavigator::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSWorkerNavigator::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSWorkerNavigator::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSWorkerNavigatorPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSWorkerNavigatorPrototype::create((WebCore::JSWorkerNavigatorPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSWorkerNavigator::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSWorkerNavigator::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 6016) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsWorkerNavigatorConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSWorkerNavigatorPrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorkerNavigator>,(WebCore::DOMConstructorID)752>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsWorkerNavigator_hardwareConcurrency()
{
  char v1;

  std::call_once[abi:sn180100]<WebCore::NavigatorBase::hardwareConcurrency(void)::$_0>((uint64_t)&v1);
  if (WebCore::NavigatorBase::hardwareConcurrency(void)::numberOfCores >= 0)
    return WebCore::NavigatorBase::hardwareConcurrency(void)::numberOfCores | 0xFFFE000000000000;
  else
    return COERCE__INT64((double)(unint64_t)WebCore::NavigatorBase::hardwareConcurrency(void)::numberOfCores)
         + 0x2000000000000;
}

unint64_t WebCore::jsWorkerNavigator_gpu(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF *v4;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = (WTF *)WebCore::WorkerNavigator::gpu(*(WebCore::WorkerNavigator **)(a2 + 24));
  if (v4)
    return WebCore::wrap<WebCore::GPU>(a1, v3, v4);
  else
    return 2;
}

unint64_t WebCore::jsWorkerNavigator_mediaCapabilities(uint64_t a1, WebCore::WorkerNavigatorMediaCapabilities **a2)
{
  uint64_t v3;
  WTF *v4;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = *(WTF **)(WebCore::WorkerNavigatorMediaCapabilities::from(a2[3], (WebCore::WorkerNavigator *)a2) + 8);
  return WebCore::wrap<WebCore::MediaCapabilities>(a1, v3, v4);
}

unint64_t WebCore::jsWorkerNavigator_permissions(uint64_t a1, WebCore::WorkerNavigatorPermissions **a2)
{
  uint64_t v3;
  WTF *v4;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v4 = (WTF *)WebCore::WorkerNavigatorPermissions::permissions(a2[3], (WebCore::WorkerNavigator *)a2);
  return WebCore::wrap<WebCore::Permissions>(a1, v3, v4);
}

unint64_t WebCore::jsWorkerNavigator_locks(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  WTF *v5;
  _DWORD *v6;
  WTF *v8;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v5 = *(WTF **)(v3 + 40);
  if (!v5)
  {
    WebCore::WebLockManager::create(*(WebCore::WebLockManager **)(a2 + 24), &v8);
    v5 = v8;
    v6 = *(_DWORD **)(v3 + 40);
    *(_QWORD *)(v3 + 40) = v8;
    if (v6)
    {
      if (v6[6] == 1)
      {
        (*(void (**)(_DWORD *))(*(_QWORD *)v6 + 16))(v6);
        v5 = *(WTF **)(v3 + 40);
      }
      else
      {
        --v6[6];
      }
    }
  }
  return WebCore::wrap<WebCore::WebLockManager>(a1, v4, v5);
}

uint64_t WebCore::jsWorkerNavigator_appCodeName(uint64_t a1)
{
  uint64_t v2;
  WTF::StringImpl *v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned int v7;
  unsigned int v8;
  WTF::StringImpl *v10;

  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v2 = *(_QWORD *)(a1 + 56);
  v3 = v10;
  if (!v10 || (v4 = *((_DWORD *)v10 + 1)) == 0)
  {
    v5 = *(_QWORD *)(v2 + 41968);
LABEL_7:
    if (!v3)
      return v5;
    goto LABEL_15;
  }
  if (v4 != 1)
    goto LABEL_4;
  v6 = (unsigned __int8 *)*((_QWORD *)v10 + 1);
  if ((*((_BYTE *)v10 + 16) & 4) != 0)
  {
    v7 = *v6;
LABEL_14:
    v5 = *(_QWORD *)(v2 + 8 * v7 + 42216);
    goto LABEL_15;
  }
  v8 = *(unsigned __int16 *)v6;
  if (v8 <= 0xFF)
  {
    v7 = v8;
    goto LABEL_14;
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v10 != *(WTF::StringImpl **)(v5 + 8))
  {
    v5 = JSC::jsStringWithCacheSlowCase();
    v3 = v10;
    goto LABEL_7;
  }
LABEL_15:
  if (*(_DWORD *)v3 == 2)
    WTF::StringImpl::destroy(v3, v3);
  else
    *(_DWORD *)v3 -= 2;
  return v5;
}

uint64_t WebCore::jsWorkerNavigator_appName(uint64_t a1)
{
  uint64_t v2;
  WTF::StringImpl *v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned int v7;
  unsigned int v8;
  WTF::StringImpl *v10;

  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v2 = *(_QWORD *)(a1 + 56);
  v3 = v10;
  if (!v10 || (v4 = *((_DWORD *)v10 + 1)) == 0)
  {
    v5 = *(_QWORD *)(v2 + 41968);
LABEL_7:
    if (!v3)
      return v5;
    goto LABEL_15;
  }
  if (v4 != 1)
    goto LABEL_4;
  v6 = (unsigned __int8 *)*((_QWORD *)v10 + 1);
  if ((*((_BYTE *)v10 + 16) & 4) != 0)
  {
    v7 = *v6;
LABEL_14:
    v5 = *(_QWORD *)(v2 + 8 * v7 + 42216);
    goto LABEL_15;
  }
  v8 = *(unsigned __int16 *)v6;
  if (v8 <= 0xFF)
  {
    v7 = v8;
    goto LABEL_14;
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v10 != *(WTF::StringImpl **)(v5 + 8))
  {
    v5 = JSC::jsStringWithCacheSlowCase();
    v3 = v10;
    goto LABEL_7;
  }
LABEL_15:
  if (*(_DWORD *)v3 == 2)
    WTF::StringImpl::destroy(v3, v3);
  else
    *(_DWORD *)v3 -= 2;
  return v5;
}

uint64_t WebCore::jsWorkerNavigator_appVersion(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;
  WTF::StringImpl *v11;

  WebCore::NavigatorBase::appVersion(*(WebCore::NavigatorBase **)(a2 + 24), &v11);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = v11;
  if (!v11 || (v5 = *((_DWORD *)v11 + 1)) == 0)
  {
    v6 = *(_QWORD *)(v3 + 41968);
LABEL_7:
    v11 = 0;
    if (!v4)
      return v6;
    goto LABEL_16;
  }
  if (v5 != 1)
    goto LABEL_4;
  v7 = (unsigned __int8 *)*((_QWORD *)v11 + 1);
  if ((*((_BYTE *)v11 + 16) & 4) != 0)
  {
    v8 = *v7;
LABEL_14:
    v6 = *(_QWORD *)(v3 + 8 * v8 + 42216);
    goto LABEL_15;
  }
  v9 = *(unsigned __int16 *)v7;
  if (v9 <= 0xFF)
  {
    v8 = v9;
    goto LABEL_14;
  }
LABEL_4:
  v6 = *(_QWORD *)(v3 + 64760);
  if (!v6 || v11 != *(WTF::StringImpl **)(v6 + 8))
  {
    v6 = JSC::jsStringWithCacheSlowCase();
    v4 = v11;
    goto LABEL_7;
  }
LABEL_15:
  v11 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy(v4, v4);
  else
    *(_DWORD *)v4 -= 2;
  return v6;
}

uint64_t WebCore::jsWorkerNavigator_platform(uint64_t a1)
{
  uint64_t v2;
  WTF::StringImpl *v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned int v7;
  unsigned int v8;
  WTF::StringImpl *v10;

  PAL::deviceName((uint64_t)&v10);
  v2 = *(_QWORD *)(a1 + 56);
  v3 = v10;
  if (!v10 || (v4 = *((_DWORD *)v10 + 1)) == 0)
  {
    v5 = *(_QWORD *)(v2 + 41968);
LABEL_7:
    v10 = 0;
    if (!v3)
      return v5;
    goto LABEL_16;
  }
  if (v4 != 1)
    goto LABEL_4;
  v6 = (unsigned __int8 *)*((_QWORD *)v10 + 1);
  if ((*((_BYTE *)v10 + 16) & 4) != 0)
  {
    v7 = *v6;
LABEL_14:
    v5 = *(_QWORD *)(v2 + 8 * v7 + 42216);
    goto LABEL_15;
  }
  v8 = *(unsigned __int16 *)v6;
  if (v8 <= 0xFF)
  {
    v7 = v8;
    goto LABEL_14;
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v10 != *(WTF::StringImpl **)(v5 + 8))
  {
    v5 = JSC::jsStringWithCacheSlowCase();
    v3 = v10;
    goto LABEL_7;
  }
LABEL_15:
  v10 = 0;
LABEL_16:
  if (*(_DWORD *)v3 == 2)
    WTF::StringImpl::destroy(v3, v3);
  else
    *(_DWORD *)v3 -= 2;
  return v5;
}

uint64_t WebCore::jsWorkerNavigator_product(uint64_t a1)
{
  uint64_t v2;
  WTF::StringImpl *v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned int v7;
  unsigned int v8;
  WTF::StringImpl *v10;

  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v2 = *(_QWORD *)(a1 + 56);
  v3 = v10;
  if (!v10 || (v4 = *((_DWORD *)v10 + 1)) == 0)
  {
    v5 = *(_QWORD *)(v2 + 41968);
LABEL_7:
    if (!v3)
      return v5;
    goto LABEL_15;
  }
  if (v4 != 1)
    goto LABEL_4;
  v6 = (unsigned __int8 *)*((_QWORD *)v10 + 1);
  if ((*((_BYTE *)v10 + 16) & 4) != 0)
  {
    v7 = *v6;
LABEL_14:
    v5 = *(_QWORD *)(v2 + 8 * v7 + 42216);
    goto LABEL_15;
  }
  v8 = *(unsigned __int16 *)v6;
  if (v8 <= 0xFF)
  {
    v7 = v8;
    goto LABEL_14;
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v10 != *(WTF::StringImpl **)(v5 + 8))
  {
    v5 = JSC::jsStringWithCacheSlowCase();
    v3 = v10;
    goto LABEL_7;
  }
LABEL_15:
  if (*(_DWORD *)v3 == 2)
    WTF::StringImpl::destroy(v3, v3);
  else
    *(_DWORD *)v3 -= 2;
  return v5;
}

uint64_t WebCore::jsWorkerNavigator_userAgent(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 64);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

uint64_t WebCore::jsWorkerNavigator_language(uint64_t a1)
{
  uint64_t v2;
  WTF::StringImpl *v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned int v7;
  unsigned int v8;
  WTF::StringImpl *v10;

  WTF::defaultLanguage();
  v2 = *(_QWORD *)(a1 + 56);
  v3 = v10;
  if (!v10 || (v4 = *((_DWORD *)v10 + 1)) == 0)
  {
    v5 = *(_QWORD *)(v2 + 41968);
LABEL_7:
    if (!v3)
      return v5;
    goto LABEL_15;
  }
  if (v4 != 1)
    goto LABEL_4;
  v6 = (unsigned __int8 *)*((_QWORD *)v10 + 1);
  if ((*((_BYTE *)v10 + 16) & 4) != 0)
  {
    v7 = *v6;
LABEL_14:
    v5 = *(_QWORD *)(v2 + 8 * v7 + 42216);
    goto LABEL_15;
  }
  v8 = *(unsigned __int16 *)v6;
  if (v8 <= 0xFF)
  {
    v7 = v8;
    goto LABEL_14;
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v10 != *(WTF::StringImpl **)(v5 + 8))
  {
    v5 = JSC::jsStringWithCacheSlowCase();
    v3 = v10;
    goto LABEL_7;
  }
LABEL_15:
  if (*(_DWORD *)v3 == 2)
    WTF::StringImpl::destroy(v3, v3);
  else
    *(_DWORD *)v3 -= 2;
  return v5;
}

uint64_t WebCore::jsWorkerNavigator_languages(JSC *a1, _DWORD *a2)
{
  uint64_t v3;
  WTF *v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  WTF *v10;
  WTF *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF *v15;
  int v16;
  unsigned int v17;
  WTF::StringImpl *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v3 = *(_QWORD *)(16 * (*a2 & 0xFFFFFFFE) + 0x28);
  WTF::defaultLanguage();
  v4 = (WTF *)WTF::fastMalloc((WTF *)8);
  v16 = 1;
  v15 = v4;
  v6 = v18;
  if (v18)
    *(_DWORD *)v18 += 2;
  *(_QWORD *)v4 = v6;
  v17 = 1;
  v7 = v18;
  v18 = 0;
  if (v7)
  {
    if (*(_DWORD *)v7 == 2)
      WTF::StringImpl::destroy(v7, v5);
    else
      *(_DWORD *)v7 -= 2;
  }
  v9 = WebCore::JSConverter<WebCore::IDLFrozenArray<WebCore::IDLDOMString>>::convert<WTF::String,0ul>(a1, v3, (uint64_t)&v15);
  if (v17)
  {
    v12 = v15;
    v13 = 8 * v17;
    do
    {
      v14 = *(WTF::StringImpl **)v12;
      *(_QWORD *)v12 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v8);
        else
          *(_DWORD *)v14 -= 2;
      }
      v12 = (WTF *)((char *)v12 + 8);
      v13 -= 8;
    }
    while (v13);
  }
  v10 = v15;
  if (v15)
  {
    v15 = 0;
    v16 = 0;
    WTF::fastFree(v10, v8);
  }
  return v9;
}

uint64_t WebCore::jsWorkerNavigator_onLine(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(*(_QWORD *)(a2 + 24) + 72))
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsWorkerNavigator_serviceWorker(WebCore::JSDOMGlobalObject *a1, uint64_t a2)
{
  JSC::VM *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  WebCore::NavigatorBase *v8;
  JSC::VM *v9;
  int v10;
  int v11;
  unint64_t v12;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  JSValue v16;
  uint64_t v17;
  int v18[2];
  WTF::StringImpl *v19;
  int v20;
  _BYTE v21[8];
  WTF::StringImpl *v22;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v5 = WebCore::JSDOMGlobalObject::scriptExecutionContext(a1);
  if (!v5)
    return 10;
  v7 = v5;
  v8 = *(WebCore::NavigatorBase **)(a2 + 24);
  v9 = *(JSC::VM **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  if (*(_BYTE *)(v5 + 274))
    goto LABEL_8;
  v10 = *(_DWORD *)(v5 - 168);
  *(_DWORD *)(v5 - 168) = v10 + 2;
  v11 = *(_DWORD *)(v5 + 76);
  if ((v11 & 4) != 0)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    LOBYTE(v18[0]) = 14;
    v20 = 1;
    v10 = *(_DWORD *)(v7 - 168) - 2;
  }
  if (v10)
  {
    *(_DWORD *)(v7 - 168) = v10;
  }
  else if ((*(_WORD *)(v7 - 162) & 0x400) == 0)
  {
    WebCore::Node::removedLastRef((WebCore::Node *)(v7 - 192), v6);
  }
  if ((v11 & 4) == 0)
  {
LABEL_8:
    *(_QWORD *)v18 = WebCore::NavigatorBase::serviceWorker(v8);
    v20 = 0;
LABEL_10:
    v12 = WebCore::wrap<WebCore::ServiceWorkerContainer>((int)a1, v9, *(WebCore::JSDOMGlobalObject **)v18);
LABEL_11:
    if (v20 != -1)
      ((void (*)(_BYTE *, int *))off_1E3346A88[v20])(v21, v18);
    return v12;
  }
  if (!v20)
    goto LABEL_10;
  if (v20 == 1)
  {
    v14 = (WTF::StringImpl *)LOBYTE(v18[0]);
    v21[0] = v18[0];
    v15 = v19;
    v19 = 0;
    v22 = v15;
    if (!*((_QWORD *)v4 + 2))
    {
      v16.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v18[0]), (JSC::JSGlobalObject *)&v22);
      JSC::VM::throwException(v4, a1, v16);
      v15 = v22;
    }
    v22 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v14);
      else
        *(_DWORD *)v15 -= 2;
    }
    v12 = 0;
    goto LABEL_11;
  }
  v17 = std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsWorkerNavigator_storage(v17);
}

unint64_t WebCore::jsWorkerNavigator_storage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  WTF *v5;
  void *v6;
  unsigned int *v7;
  unsigned int v8;
  bmalloc::api *v9;
  unsigned int *v11;
  unsigned int v12;
  unsigned int v13;
  bmalloc::api *v14;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v5 = *(WTF **)(v3 + 32);
  if (!v5)
  {
    v5 = (WTF *)bmalloc::api::isoAllocate();
    *(_DWORD *)v5 = 1;
    WTF::WeakPtrFactory<WebCore::MediaKeySystemClient,WTF::DefaultWeakPtrImpl>::initializeIfNeeded((unsigned int *)(v3 + 24), v3);
    v7 = *(unsigned int **)(v3 + 24);
    if (v7)
    {
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 + 1, v7));
    }
    *((_QWORD *)v5 + 1) = v7;
    v9 = *(bmalloc::api **)(v3 + 32);
    *(_QWORD *)(v3 + 32) = v5;
    if (v9)
    {
      if (*(_DWORD *)v9 == 1)
      {
        v11 = (unsigned int *)*((_QWORD *)v9 + 1);
        *((_QWORD *)v9 + 1) = 0;
        if (v11)
        {
          do
          {
            v12 = __ldaxr(v11);
            v13 = v12 - 1;
          }
          while (__stlxr(v13, v11));
          if (!v13)
          {
            atomic_store(1u, v11);
            v14 = v9;
            WTF::fastFree((WTF *)v11, v6);
            v9 = v14;
          }
        }
        bmalloc::api::isoDeallocate(v9, v6);
        v5 = *(WTF **)(v3 + 32);
      }
      else
      {
        --*(_DWORD *)v9;
      }
    }
  }
  return WebCore::wrap<WebCore::StorageManager>(a1, v4, v5);
}

uint64_t WebCore::JSWorkerNavigatorOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  void *v5;
  WTF::ConcurrentPtrHashSet *v6;
  _DWORD *v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unsigned int v13;
  void *v14;
  uint64_t result;
  uint64_t v16;
  void *v17;

  v5 = *(void **)(*(_QWORD *)a2 + 24);
  if (a5)
  {
    *a5 = "Reachable from WorkerNavigator";
    a5[1] = 31;
  }
  v6 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v7 = (_DWORD *)*((_QWORD *)v6 + 6);
  if ((_DWORD *)((char *)v6 + 56) == v7)
  {
    v16 = a4;
    v17 = v5;
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v6, v5);
    a4 = v16;
    v5 = v17;
    if ((_DWORD)result)
    {
LABEL_12:
      if (*(_BYTE *)(a4 + 131))
        (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v5);
      return 1;
    }
  }
  else
  {
    v8 = v7[1];
    v9 = ((unint64_t)v5 + ~((_QWORD)v5 << 32)) ^ (((unint64_t)v5 + ~((_QWORD)v5 << 32)) >> 22);
    v10 = 9 * ((v9 + ~(v9 << 13)) ^ ((v9 + ~(v9 << 13)) >> 8));
    v11 = (v10 ^ (v10 >> 15)) + ~((v10 ^ (v10 >> 15)) << 27);
    v12 = v8 & ((v11 >> 31) ^ v11);
    v13 = v12;
    while (1)
    {
      v14 = *(void **)&v7[2 * v13 + 4];
      if (!v14)
        return 0;
      if (v5 == v14)
        goto LABEL_12;
      v13 = (v13 + 1) & v8;
      if (v13 == v12)
      {
        __break(0xC471u);
        JUMPOUT(0x195159744);
      }
    }
  }
  return result;
}

_QWORD *WebCore::JSWorkerNavigatorOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _QWORD *result;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  ++v3[4];
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_DWORD **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_DWORD **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (v3[4] == 1)
    return (_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 16))(v3);
  --v3[4];
  return result;
}

uint64_t WebCore::convertDictionary<WebCore::WorkerOptions>@<X0>(JSC::JSCell *this@<X1>, uint64_t result@<X0>, uint64_t a3@<X8>)
{
  JSC::JSGlobalObject *v3;
  JSC::VM *v5;
  unint64_t v6;
  JSC::Structure *v7;
  __int16 v8;
  WTF::StringImpl *v9;
  __int16 v10;
  int v11;
  uint64_t Object;
  WTF::StringImpl *v13;
  unsigned __int16 Options;
  JSC::VM *v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  unint64_t v18;
  JSC::VM *v19;
  unsigned __int16 v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  uint64_t v23;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v25;
  WTF::StringImpl *v26;
  int v27;
  JSC::VM *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;

  v3 = (JSC::JSGlobalObject *)result;
  v5 = *(JSC::VM **)(result + 56);
  v28 = v5;
  v6 = (unint64_t)this & 0xFFFFFFFFFFFFFFF7;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v7 = 0;
    v8 = 256;
    goto LABEL_3;
  }
  if (((unint64_t)this & 0xFFFE000000000002) != 0)
    goto LABEL_53;
  Object = JSC::JSCell::getObject(this);
  if (!Object)
    goto LABEL_53;
  v7 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v13 = (WTF::StringImpl *)JSC::JSObject::get(v7, v3, (unint64_t)v26);
  if (v26)
  {
    if (*(_DWORD *)v26 == 2)
    {
      v21 = v13;
      WTF::StringImpl::destroy(v26, v13);
      v13 = v21;
    }
    else
    {
      *(_DWORD *)v26 -= 2;
    }
  }
  if (*((_DWORD *)v5 + 20))
  {
    v22 = v13;
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    v13 = v22;
    if ((_DWORD)result)
      goto LABEL_54;
  }
  if (v13 == (WTF::StringImpl *)10)
  {
    v8 = 256;
    goto LABEL_25;
  }
  v26 = (WTF::StringImpl *)*((_QWORD *)v3 + 7);
  Options = WebCore::parseEnumeration<WebCore::FetchOptionsCredentials>(v3, (unint64_t)v13);
  if (*((_DWORD *)v26 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v26);
    if ((result & 1) != 0)
    {
LABEL_54:
      *(_DWORD *)(a3 + 16) = 1;
      return result;
    }
  }
  if (Options <= 0xFFu)
  {
LABEL_53:
    result = JSC::throwTypeError();
    goto LABEL_54;
  }
  v8 = Options << 8;
LABEL_25:
  WTF::AtomStringImpl::addLiteral();
  result = JSC::JSObject::get(v7, v3, (unint64_t)v26);
  if (v26)
  {
    if (*(_DWORD *)v26 == 2)
    {
      v25 = result;
      WTF::StringImpl::destroy(v26, this);
      result = v25;
    }
    else
    {
      *(_DWORD *)v26 -= 2;
    }
  }
  if (*((_DWORD *)v5 + 20))
  {
    v23 = result;
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    result = v23;
    if (hasExceptionsAfterHandlingTraps)
      goto LABEL_54;
  }
  if (result == 10)
  {
LABEL_3:
    v9 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v9 += 2;
    v10 = 0;
    v27 = 0;
    v26 = 0;
    if (v6 == 2)
      goto LABEL_6;
    goto LABEL_40;
  }
  v30 = (WTF::StringImpl *)result;
  v15 = (JSC::VM *)*((_QWORD *)v3 + 7);
  if ((result & 0xFFFE000000000002) != 0 || *(_BYTE *)(result + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v30, v3);
  }
  else
  {
    v16 = *(WTF::StringImpl **)(result + 8);
    if ((v16 & 1) != 0)
      v16 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)result, v3);
    if (v16)
      *(_DWORD *)v16 += 2;
    v29 = v16;
  }
  if (*((_DWORD *)v15 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v15);
    v9 = v29;
    if ((_DWORD)result)
    {
      v27 = 1;
      v29 = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 2)
          result = WTF::StringImpl::destroy(v9, this);
        else
          *(_DWORD *)v9 -= 2;
      }
      v9 = 0;
      goto LABEL_72;
    }
  }
  else
  {
    v9 = v29;
  }
  v27 = 0;
  v26 = 0;
LABEL_40:
  WTF::AtomStringImpl::addLiteral();
  v17 = v30;
  v18 = JSC::JSObject::get(v7, v3, (unint64_t)v30);
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, this);
    else
      *(_DWORD *)v17 -= 2;
  }
  result = (uint64_t)v28;
  if (*((_DWORD *)v28 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v28);
    if ((result & 1) != 0)
      goto LABEL_72;
  }
  if (v18 != 10)
  {
    v30 = (WTF::StringImpl *)*((_QWORD *)v3 + 7);
    v19 = v30;
    result = WebCore::parseEnumeration<WebCore::WorkerType>(v3, v18);
    v20 = result;
    if (!*((_DWORD *)v19 + 20) || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v19), (result & 1) == 0))
    {
      if (v20 > 0xFFu)
      {
        v10 = v20 != 0;
        goto LABEL_6;
      }
      result = JSC::throwTypeError();
    }
LABEL_72:
    v11 = 1;
    goto LABEL_7;
  }
  v10 = 0;
LABEL_6:
  v11 = 0;
  *(_WORD *)a3 = v8 | v10;
  *(_QWORD *)(a3 + 8) = v9;
  v9 = 0;
LABEL_7:
  *(_DWORD *)(a3 + 16) = v11;
  if (v27 != -1)
    result = ((uint64_t (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3344088[v27])(&v30, &v26);
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      return WTF::StringImpl::destroy(v9, this);
    else
      *(_DWORD *)v9 -= 2;
  }
  return result;
}

uint64_t WebCore::parseEnumeration<WebCore::WorkerType>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  int v5;
  const char *v6;
  int v7;
  int v9;
  int v10;
  char **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v20;
  unint64_t v21;

  v3 = a1;
  v21 = this;
  if ((this & 0xFFFE000000000002) == 0 && *(_BYTE *)(this + 5) == 2)
  {
    v4 = *(_QWORD *)(this + 8);
    if ((v4 & 1) != 0)
    {
      v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
      if (!v4)
      {
LABEL_6:
        if (v4)
          goto LABEL_7;
LABEL_34:
        v10 = 0;
        v9 = 0;
        return v10 | (v9 << 8);
      }
    }
    else if (!v4)
    {
      goto LABEL_6;
    }
    *(_DWORD *)v4 += 2;
    goto LABEL_6;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v21, a1);
  v4 = v20;
  if (!v20)
    goto LABEL_34;
LABEL_7:
  v5 = *(_DWORD *)(v4 + 16);
  v6 = *(const char **)(v4 + 8);
  v7 = *(_DWORD *)(v4 + 4);
  if (v6 != "classic" && v7 == 7)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 99 || *(_DWORD *)(v6 + 1) != 1936941420 || *(_DWORD *)(v6 + 3) != 1667855219)
        goto LABEL_16;
    }
    else
    {
      if (*(_WORD *)v6 != 99)
        goto LABEL_16;
      v14 = *(_QWORD *)(v6 + 2);
      v15 = *(_QWORD *)(v6 + 6);
      if (v14 != 0x7300730061006CLL || v15 != 0x63006900730073)
        goto LABEL_16;
    }
LABEL_41:
    v13 = &WebCore::parseEnumerationFromString<WebCore::WorkerType>(WTF::String const&)::mappings;
    goto LABEL_42;
  }
  if (v6 == "classic" && v7 == 7)
    goto LABEL_41;
  if (v6 == "module" || v7 != 6)
  {
    if (v7 != 6 || v6 != "module")
      goto LABEL_16;
    goto LABEL_30;
  }
  if ((v5 & 4) == 0)
  {
    if (*(_WORD *)v6 != 109)
      goto LABEL_16;
    if (*(_QWORD *)(v6 + 4) != 0x65006C00750064 || *(_QWORD *)(v6 + 2) != 0x6C00750064006FLL)
      goto LABEL_16;
    goto LABEL_30;
  }
  if (*v6 != 109 || *(_DWORD *)(v6 + 1) != 1819632751 || *(_DWORD *)(v6 + 2) != 1701606756)
  {
LABEL_16:
    v9 = 0;
    v10 = 0;
    goto LABEL_43;
  }
LABEL_30:
  v13 = &off_1E3340FA8;
LABEL_42:
  v10 = *((unsigned __int8 *)v13 + 16);
  v9 = 1;
LABEL_43:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v10 | (v9 << 8);
}

uint64_t WebCore::JSWorklet::prototype(WebCore::JSWorklet *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSWorklet::s_info + ~((_QWORD)&WebCore::JSWorklet::s_info << 32)) ^ (((unint64_t)&WebCore::JSWorklet::s_info + ~((_QWORD)&WebCore::JSWorklet::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSWorklet::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSWorklet::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSWorkletPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSWorkletPrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSWorklet::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSWorklet::s_info);
  }
  return *(_QWORD *)(v13 + 48);
}

_DWORD *WebCore::JSWorklet::destroy(WebCore::JSWorklet *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[6] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[6];
  }
  return result;
}

uint64_t WebCore::JSWorklet::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSWorkletPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSWorkletPrototype::create(WebCore::JSWorkletPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSWorklet::s_info, (uint64_t)&WebCore::JSWorkletPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorklet>,(WebCore::DOMConstructorID)918>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  JSC::Structure *v26;
  JSC::JSCell *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 7344);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v33) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v33, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorklet>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v32);
    v9[2848] = v2 + (int)v32;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v33);
  v13 = v33;
  v33 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v33);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSWorklet::s_info + ~((_QWORD)&WebCore::JSWorklet::s_info << 32)) ^ (((unint64_t)&WebCore::JSWorklet::s_info + ~((_QWORD)&WebCore::JSWorklet::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSWorklet::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSWorklet::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSWorkletPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v27 = (JSC::JSCell *)WebCore::JSWorkletPrototype::create((WebCore::JSWorkletPrototype *)a1, (JSC::VM *)a2, Structure, v26);
  v28 = WebCore::JSWorklet::createStructure((uint64_t *)a1, a2, v27);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v28, (uint64_t)&WebCore::JSWorklet::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v24 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v29, 14, (uint64_t)&v33);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 7344) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsWorkletConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSWorkletPrototype::s_info != (char **)(16
                                                       * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorklet>,(WebCore::DOMConstructorID)918>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSWorkletOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(_QWORD **)(*(_QWORD *)a2 + 24);
  v6 = v5[1];
  if (!v6)
    return 0;
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7 || *(_BYTE *)(v7 + 180))
    return 0;
  if (v5[2] || (result = (*(uint64_t (**)(_QWORD *))(*v5 + 64))(v5), (_DWORD)result))
  {
    if (a5)
    {
      *a5 = "ActiveDOMObject with pending activity";
      a5[1] = 38;
    }
    return 1;
  }
  return result;
}

uint64_t WebCore::JSWorkletOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  int v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v26;

  result = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v4 = *(_DWORD *)(result + 24);
  *(_DWORD *)(result + 24) = v4 + 1;
  v5 = result + 32;
  if (!result)
    v5 = 0;
  if (*(_DWORD *)(a3 + 48))
  {
    v8 = *(_QWORD *)(a3 + 32);
    v6 = (uint64_t *)(a3 + 32);
    v7 = v8;
    if (v8)
    {
      v9 = *(_DWORD *)(v7 - 8);
      v10 = (~(result << 32) + result) ^ ((unint64_t)(~(result << 32) + result) >> 22);
      v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
      v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
      v13 = v9 & ((v12 >> 31) ^ v12);
      v14 = *(_QWORD *)(v7 + 16 * v13);
      if (v14 != result)
      {
        v15 = 1;
        while (v14)
        {
          v13 = ((_DWORD)v13 + v15) & v9;
          v14 = *(_QWORD *)(v7 + 16 * v13);
          ++v15;
          if (v14 == result)
            goto LABEL_14;
        }
        v13 = *(unsigned int *)(v7 - 4);
      }
LABEL_14:
      if (v13 != *(_DWORD *)(v7 - 4))
      {
        v16 = (_QWORD *)(v7 + 16 * v13);
        *v16 = -1;
        v19 = v16[1];
        v18 = v16 + 1;
        v17 = v19;
        if (v19)
        {
          *(_QWORD *)(v17 + 8) = 3;
          *v18 = 0;
        }
        ++*(_DWORD *)(*v6 - 16);
        v20 = *v6;
        if (*v6)
          v21 = *(_DWORD *)(v20 - 12) - 1;
        else
          v21 = -1;
        *(_DWORD *)(v20 - 12) = v21;
        v22 = *v6;
        if (*v6)
        {
          v23 = 6 * *(_DWORD *)(v22 - 12);
          v24 = *(_DWORD *)(v22 - 4);
          if (v23 < v24 && v24 >= 9)
          {
            v26 = result;
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v6, v24 >> 1, 0);
            result = v26;
          }
        }
      }
    }
    v4 = *(_DWORD *)(result + 24) - 1;
  }
  else if (*(_QWORD *)v5)
  {
    *(_QWORD *)(*(_QWORD *)v5 + 8) = 3;
    *(_QWORD *)v5 = 0;
  }
  if (!v4)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
  *(_DWORD *)(result + 24) = v4;
  return result;
}

unint64_t WebCore::wrap<WebCore::Worklet>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t SlowCase;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char **v14;
  int v15;
  unint64_t v16;
  uint64_t *v17;
  unint64_t Structure;
  JSC::Structure *v19;
  JSC::JSCell *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  WTF *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  WTF *v36;
  void *v37;
  int v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *Allocator;
  uint64_t v43;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unsigned int v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  unint64_t v56;
  _QWORD *v57;
  WTF *v58;

  v5 = *(_QWORD *)(a2 + 3320);
  if (*(_DWORD *)(v5 + 48))
  {
    v48 = *(_QWORD *)(v5 + 32);
    if (!v48)
      goto LABEL_5;
    v49 = *(_DWORD *)(v48 - 8);
    v50 = (~(a3 << 32) + a3) ^ ((unint64_t)(~(a3 << 32) + a3) >> 22);
    v51 = 9 * ((v50 + ~(v50 << 13)) ^ ((v50 + ~(v50 << 13)) >> 8));
    v52 = (v51 ^ (v51 >> 15)) + ~((v51 ^ (v51 >> 15)) << 27);
    v53 = v49 & ((v52 >> 31) ^ v52);
    v54 = *(_QWORD *)(v48 + 16 * v53);
    if (v54 != a3)
    {
      v55 = 1;
      while (v54)
      {
        v53 = ((_DWORD)v53 + v55) & v49;
        v54 = *(_QWORD *)(v48 + 16 * v53);
        ++v55;
        if (v54 == a3)
          goto LABEL_62;
      }
      goto LABEL_5;
    }
LABEL_62:
    v6 = *(_QWORD *)(v48 + 16 * v53 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *(_QWORD *)(a3 + 32);
    if (!v6)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    SlowCase = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return SlowCase;
  }
LABEL_5:
  ++*(_DWORD *)(a3 + 24);
  v8 = *(_QWORD *)(a2 + 3296);
  if (v8)
  {
    v9 = *(_DWORD *)(v8 - 8);
    v10 = ((unint64_t)&WebCore::JSWorklet::s_info + ~((_QWORD)&WebCore::JSWorklet::s_info << 32)) ^ (((unint64_t)&WebCore::JSWorklet::s_info + ~((_QWORD)&WebCore::JSWorklet::s_info << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = *(char ***)(v8 + 16 * v13);
    if (v14 == &WebCore::JSWorklet::s_info)
    {
LABEL_10:
      v16 = *(_QWORD *)(v8 + 16 * v13 + 8);
      if (v16)
        goto LABEL_12;
    }
    else
    {
      v15 = 1;
      while (v14)
      {
        v13 = ((_DWORD)v13 + v15) & v9;
        v14 = *(char ***)(v8 + 16 * v13);
        ++v15;
        if (v14 == &WebCore::JSWorklet::s_info)
          goto LABEL_10;
      }
    }
  }
  v17 = *(uint64_t **)(a2 + 56);
  Structure = WebCore::JSWorkletPrototype::createStructure(v17, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v20 = (JSC::JSCell *)WebCore::JSWorkletPrototype::create((WebCore::JSWorkletPrototype *)v17, (JSC::VM *)a2, Structure, v19);
  v21 = WebCore::JSWorklet::createStructure(v17, a2, v20);
  v16 = WebCore::cacheDOMStructure((JSCell *)a2, v21, (uint64_t)&WebCore::JSWorklet::s_info);
LABEL_12:
  v22 = *(_QWORD *)(a2 + 56);
  v23 = *(_QWORD *)(v22 + 41456);
  v24 = *(_QWORD *)(v23 + 23536);
  v25 = *(_QWORD **)(v24 + 7424);
  if (v25)
    goto LABEL_32;
  v26 = *(_QWORD *)(v23 + 22648);
  if (__ldaxr((unsigned __int8 *)v26))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v26))
  {
    goto LABEL_17;
  }
  MEMORY[0x19AEA534C](v26);
LABEL_17:
  v28 = *(_QWORD *)(v26 + 2824);
  if (!*(_QWORD *)(v28 + 7424))
  {
    v29 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v58, "IsoSpace T");
    v57 = 0;
    MEMORY[0x19AEA3204](v29, &v58, v22 + 192, v22 + 1872, 32, 8, &v57);
    v31 = (uint64_t)v57;
    v57 = 0;
    if (v31)
      (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
    v32 = v58;
    v58 = 0;
    if (v32)
    {
      if (*(_DWORD *)v32 == 1)
        WTF::fastFree(v32, v30);
      else
        --*(_DWORD *)v32;
    }
    v33 = *(_QWORD *)(v28 + 7424);
    *(_QWORD *)(v28 + 7424) = v29;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
  }
  v25 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v35 = *(_QWORD *)(v24 + 7424);
  *(_QWORD *)(v24 + 7424) = v25;
  if (v35)
  {
    v36 = (WTF *)MEMORY[0x19AEA3528](v35, v34);
    WTF::fastFree(v36, v37);
  }
  v38 = __ldxr((unsigned __int8 *)v26);
  if (v38 != 1)
  {
    __clrex();
    goto LABEL_31;
  }
  if (__stlxr(0, (unsigned __int8 *)v26))
LABEL_31:
    WTF::Lock::unlockSlow((WTF::Lock *)v26);
LABEL_32:
  SlowCase = v25[3];
  if (SlowCase < v25[4])
  {
LABEL_33:
    v25[3] = SlowCase + 32;
    goto LABEL_34;
  }
  SlowCase = v25[5];
  if ((SlowCase & 1) == 0)
  {
    v56 = *(_QWORD *)(SlowCase + 8) ^ v25[6];
    v25[4] = SlowCase + HIDWORD(v56);
    v25[5] = SlowCase + (int)v56;
    goto LABEL_33;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_34:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v16);
  *(_QWORD *)(SlowCase + 24) = a3;
  if (*(_BYTE *)(v22 + 755))
    __dmb(0xAu);
  v39 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE337408 & 1) == 0)
  {
    qword_1EE337400 = (uint64_t)&off_1E3343C40;
    byte_1EE337408 = 1;
  }
  if (!*(_DWORD *)(v39 + 48))
  {
    if ((SlowCase & 8) != 0)
      v40 = (SlowCase - 112) | 1;
    else
      v40 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v40 & 1) != 0)
      v41 = v40 + 47;
    else
      v41 = *(_QWORD *)v40 + 32;
    Allocator = *(_QWORD **)(v41 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v41 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1EE337400;
    Allocator[2] = v39;
    v43 = *(_QWORD *)(a3 + 32);
    *(_QWORD *)(a3 + 32) = Allocator;
    if (!v43)
      return SlowCase;
LABEL_56:
    *(_QWORD *)(v43 + 8) = 3;
    return SlowCase;
  }
  v58 = (WTF *)a3;
  if ((SlowCase & 8) != 0)
    v45 = (SlowCase - 112) | 1;
  else
    v45 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v45 & 1) != 0)
    v46 = v45 + 47;
  else
    v46 = *(_QWORD *)v45 + 32;
  v47 = *(_QWORD **)(v46 + 16);
  if (!v47)
    v47 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v46 + 16) = *v47;
  *v47 = SlowCase;
  v47[1] = &qword_1EE337400;
  v47[2] = v39;
  v57 = v47;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v39 + 32), (uint64_t *)&v58, (uint64_t *)&v57);
  v43 = (uint64_t)v57;
  if (v57)
    goto LABEL_56;
  return SlowCase;
}

uint64_t WebCore::JSWorkletGlobalScope::prototype(WebCore::JSWorkletGlobalScope *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  JSC::JSCell *v14;
  unint64_t Structure;
  JSC::Structure *v16;
  JSC::JSCell *v17;
  uint64_t v18;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSWorkletGlobalScope::s_info
      + ~((_QWORD)&WebCore::JSWorkletGlobalScope::s_info << 32)) ^ (((unint64_t)&WebCore::JSWorkletGlobalScope::s_info
                                                                   + ~((_QWORD)&WebCore::JSWorkletGlobalScope::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSWorkletGlobalScope::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSWorkletGlobalScope::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    v14 = (JSC::JSCell *)WebCore::JSEventTarget::prototype(this, a2, a3);
    Structure = WebCore::JSWorkletGlobalScopePrototype::createStructure((uint64_t *)this, (uint64_t)a2, v14);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v17 = (JSC::JSCell *)WebCore::JSWorkletGlobalScopePrototype::create(this, a2, Structure, v16);
    v18 = WebCore::JSWorkletGlobalScope::createStructure((uint64_t *)this, (uint64_t)a2, v17);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v18, (uint64_t)&WebCore::JSWorkletGlobalScope::s_info);
  }
  return *(_QWORD *)(v13 + 48);
}

uint64_t WebCore::JSWorkletGlobalScope::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 3400));
  v4 = *(_QWORD *)(a1 + 3400);
  if (!v4)
    return JSC::JSSegmentedVariableObject::analyzeHeap();
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSSegmentedVariableObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSSegmentedVariableObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSWorkletGlobalScopePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSWorkletGlobalScopePrototype::create(WebCore::JSWorkletGlobalScopePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorkletGlobalScope>,(WebCore::DOMConstructorID)919>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 7352);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventTarget>,(WebCore::DOMConstructorID)450>(a1, a2);
  v7 = v6;
  LODWORD(v22) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v20);
    v5[2] = SlowCase + (int)v20;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v22, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorkletGlobalScope>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v21);
    v10[2848] = v2 + (int)v21;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v22);
  v14 = v22;
  v22 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v22);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v18 = WebCore::JSWorkletGlobalScope::prototype((WebCore::JSWorkletGlobalScope *)a1, (JSC::VM *)a2, v17);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v18, 14, (uint64_t)&v22);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 7352) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsWorkletGlobalScopeConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSWorkletGlobalScopePrototype::s_info != (char **)(16
                                                                  * *(unsigned int *)(16
                                                                                    * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                    + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorkletGlobalScope>,(WebCore::DOMConstructorID)919>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsWorkletGlobalScope_WorkletGlobalScopeConstructor(JSC::JSCell *a1, JSC::JSCell *a2)
{
  JSC::JSCell *v2;
  uint64_t Object;
  _DWORD *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;

  v2 = a1;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) != 2)
    a1 = a2;
  if (((unint64_t)a1 & 0xFFFE000000000002) == 0)
  {
    Object = JSC::JSCell::getObject(a1);
    if (Object)
    {
      v4 = (_DWORD *)Object;
      if (*(_BYTE *)(Object + 5) == 32)
      {
        v4 = *(_DWORD **)(Object + 16);
        v5 = *(unsigned int *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C);
        v6 = *(_DWORD *)(16 * (*v4 & 0xFFFFFFFE) + 0x4C) != 0;
        v7 = (char **)(16 * v5);
        if ((_DWORD)v5)
          v8 = v7 == &WebCore::JSWorkletGlobalScope::s_info;
        else
          v8 = 1;
        if (!v8)
        {
          do
          {
            v7 = (char **)v7[2];
            v6 = v7 != 0;
          }
          while (v7 != &WebCore::JSWorkletGlobalScope::s_info && v7 != 0);
        }
        if (v6)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorkletGlobalScope>,(WebCore::DOMConstructorID)919>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
      else
      {
        v11 = *(unsigned int *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C);
        v12 = *(_DWORD *)(16 * (*(_DWORD *)Object & 0xFFFFFFFE) + 0x4C) != 0;
        v13 = (char **)(16 * v11);
        if ((_DWORD)v11)
          v14 = v13 == &WebCore::JSWorkletGlobalScope::s_info;
        else
          v14 = 1;
        if (!v14)
        {
          do
          {
            v13 = (char **)v13[2];
            v12 = v13 != 0;
          }
          while (v13 != &WebCore::JSWorkletGlobalScope::s_info && v13 != 0);
        }
        if (v12)
          return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSWorkletGlobalScope>,(WebCore::DOMConstructorID)919>(*((_QWORD *)v2 + 7), (uint64_t)v4);
      }
    }
  }
  return JSC::throwDOMAttributeGetterTypeError();
}

uint64_t WebCore::JSDOMConstructor<WebCore::JSWritableStream>::construct(JSC *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  JSC::Structure *v9;
  uint64_t *v10;
  JSC::Structure *v11;
  int v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  JSC::HandleSet *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  JSCell *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  WTF *v35;
  void *v36;
  WTF *v37;
  JSC::JSCell *v38;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v40;
  JSC::JSGlobalObject *v41;
  JSC::VM *v42;
  JSC::Structure *v43;
  uint64_t FunctionRealm;
  uint64_t v45;
  unsigned int v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char **v51;
  int v52;
  JSC::JSObject *v53;
  unint64_t Structure;
  JSC::Structure *v55;
  JSC::JSCell *v56;
  uint64_t v57;
  unint64_t SubclassStructure;
  _DWORD *v60;
  uint64_t v61;
  unsigned int *v62;
  unsigned int v63;
  unsigned int v64;
  WTF::StringImpl *v65;
  WTF::StringImpl *v66;
  JSValue v67;
  WebCore::JSWritableStream *v68;
  JSC::VM *v69;
  WebCore::JSDOMGlobalObject *v70;
  _QWORD *v71;
  char v72;
  int v73[2];
  WTF::StringImpl *v74;
  int v75;
  WTF *v76;
  WTF::StringImpl *v77;
  _BYTE v78[8];
  _QWORD *v79;
  char v80;
  int v81;
  _BYTE v82[8];
  _QWORD *v83;
  unsigned __int8 v84;
  int v85;
  uint64_t v86;

  v86 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)a1 + 7);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_DWORD *)(a2 + 32);
  if (v6 == 1 || *(_QWORD *)(a2 + 48) == 10)
  {
    LOBYTE(v83) = 0;
    v84 = 0;
    v85 = 0;
LABEL_8:
    if ((unint64_t)(v6 - 3) >= 0xFFFFFFFFFFFFFFFELL || *(_QWORD *)(a2 + 56) == 10)
    {
      LOBYTE(v79) = 0;
      v80 = 0;
      v81 = 0;
    }
    else
    {
      WebCore::Converter<WebCore::IDLObject>::convert<WebCore::DefaultExceptionThrower>((uint64_t)a1, *(_QWORD *)(a2 + 56), (uint64_t)v73);
      v76 = (WTF *)v73;
      WebCore::Detail::ConversionResultStorage<std::optional<JSC::Strong<JSC::JSObject,(JSC::ShouldStrongDestructorGrabLock)0>>>::ConversionResultStorage<JSC::Strong<JSC::JSObject,(JSC::ShouldStrongDestructorGrabLock)0>>(WebCore::Detail::ConversionResultStorage<JSC::Strong<JSC::JSObject,(JSC::ShouldStrongDestructorGrabLock)0>> &&)::{lambda(void)#1}::operator()((uint64_t)&v76, (uint64_t)v78);
      if ((_DWORD)v74 != -1)
        ((void (*)(WTF **, int *))off_1E33441F8[v74])(&v76, v73);
      v8 = v81;
      if (v81)
      {
        v29 = 0;
LABEL_66:
        if (v8 != -1)
          ((void (*)(int *, _QWORD **))off_1E3345830[v8])(v73, &v79);
        v7 = v85;
        goto LABEL_69;
      }
      if (v85)
        goto LABEL_101;
    }
    v11 = *(JSC::Structure **)(v5 + 40);
    v10 = (uint64_t *)(v5 + 40);
    v9 = v11;
    LOBYTE(v76) = 0;
    LOBYTE(v77) = 0;
    v12 = v84;
    if (v84)
    {
      v76 = 0;
      if (v83)
      {
        v13 = *(_QWORD *)(((unint64_t)(v83 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
        v14 = *(_QWORD **)(v13 + 40);
        if (!v14)
        {
          JSC::HandleSet::grow(*(JSC::HandleSet **)(((unint64_t)(v83 - 2) & 0xFFFFFFFFFFFFF000) + 0x10));
          v14 = *(_QWORD **)(v13 + 40);
        }
        *(_QWORD *)(v13 + 40) = *v14;
        v14[2] = 0;
        v15 = v14 + 2;
        *v14 = 0;
        v14[1] = 0;
        v76 = (WTF *)(v14 + 2);
        v16 = v83;
        if (v83)
        {
          v16 = (_QWORD *)*v83;
          if (*v83)
          {
            v25 = *(_QWORD **)(((unint64_t)(v15 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
            v26 = v25[3];
            v25 += 3;
            *(v15 - 2) = v26;
            *(v15 - 1) = v25;
            *v25 = v15 - 2;
            *(_QWORD *)(v26 + 8) = v15 - 2;
          }
        }
        *v15 = v16;
        LOBYTE(v77) = 1;
        if (v81)
          goto LABEL_101;
      }
      else
      {
        LOBYTE(v77) = 1;
      }
    }
    LOBYTE(v71) = 0;
    v72 = 0;
    if (v80)
    {
      v71 = 0;
      if (v79)
      {
        v17 = *(JSC::HandleSet **)(((unint64_t)(v79 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
        v18 = (_QWORD *)*((_QWORD *)v17 + 5);
        if (!v18)
        {
          JSC::HandleSet::grow(v17);
          v18 = (_QWORD *)*((_QWORD *)v17 + 5);
        }
        *((_QWORD *)v17 + 5) = *v18;
        v18[2] = 0;
        v19 = v18 + 2;
        *v18 = 0;
        v18[1] = 0;
        v71 = v18 + 2;
        v20 = v79;
        if (v79)
        {
          v20 = (_QWORD *)*v79;
          if (*v79)
          {
            v27 = *(_QWORD **)(((unint64_t)(v19 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
            v28 = v27[3];
            v27 += 3;
            *(v19 - 2) = v28;
            *(v19 - 1) = v27;
            *v27 = v19 - 2;
            *(_QWORD *)(v28 + 8) = v19 - 2;
          }
        }
        *v19 = v20;
        v72 = 1;
        WebCore::WritableStream::create(v9, (uint64_t)&v76, (uint64_t)&v71, (uint64_t)v73);
        v21 = v19 - 2;
        v22 = *(_QWORD *)(((unint64_t)(v19 - 2) & 0xFFFFFFFFFFFFF000) + 0x10);
        v23 = (uint64_t *)*(v19 - 1);
        if (v23)
        {
          v24 = *v21;
          *v23 = *v21;
          *(_QWORD *)(v24 + 8) = v23;
          *v21 = 0;
          *(v19 - 1) = 0;
        }
        *v21 = *(_QWORD *)(v22 + 40);
        *(_QWORD *)(v22 + 40) = v21;
        if (!v12)
          goto LABEL_43;
        goto LABEL_39;
      }
      v72 = 1;
    }
    WebCore::WritableStream::create(v9, (uint64_t)&v76, (uint64_t)&v71, (uint64_t)v73);
    if (!v12)
    {
LABEL_43:
      if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
        goto LABEL_95;
      if (!v75)
      {
        v34 = *v10;
        v35 = *(WTF **)v73;
        *(_QWORD *)v73 = 0;
        v76 = v35;
        v29 = (JSCell *)WebCore::createWrapper<WebCore::WritableStream,WebCore::WritableStream>(v34, &v76);
        v37 = v76;
        v76 = 0;
        if (v37)
        {
          if (*(_DWORD *)v37 == 1)
          {
            v60 = (_DWORD *)*((_QWORD *)v37 + 2);
            *((_QWORD *)v37 + 2) = 0;
            if (v60)
            {
              if (v60[4] == 1)
                (*(void (**)(_DWORD *))(*(_QWORD *)v60 + 16))(v60);
              else
                --v60[4];
            }
            v61 = *((_QWORD *)v37 + 1);
            if (v61)
            {
              *(_QWORD *)(v61 + 8) = 0;
              v62 = (unsigned int *)*((_QWORD *)v37 + 1);
              *((_QWORD *)v37 + 1) = 0;
              if (v62)
              {
                do
                {
                  v63 = __ldaxr(v62);
                  v64 = v63 - 1;
                }
                while (__stlxr(v64, v62));
                if (!v64)
                {
                  atomic_store(1u, v62);
                  WTF::fastFree((WTF *)v62, v36);
                }
              }
            }
            else
            {
              *((_QWORD *)v37 + 1) = 0;
            }
            WTF::fastFree(v37, v36);
          }
          else
          {
            --*(_DWORD *)v37;
          }
        }
        goto LABEL_48;
      }
      if (v75 == 1)
      {
        v65 = (WTF::StringImpl *)LOBYTE(v73[0]);
        LOBYTE(v76) = v73[0];
        v66 = v74;
        v74 = 0;
        v77 = v66;
        if (!*(_QWORD *)(v4 + 16))
        {
          v67.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v73[0]), (JSC::JSGlobalObject *)&v77);
          JSC::VM::throwException((JSC::VM *)v4, a1, v67);
          v66 = v77;
        }
        v77 = 0;
        if (v66)
        {
          if (*(_DWORD *)v66 == 2)
            WTF::StringImpl::destroy(v66, v65);
          else
            *(_DWORD *)v66 -= 2;
        }
        v29 = 0;
LABEL_48:
        if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
        {
LABEL_95:
          v29 = 0;
LABEL_63:
          if (v75 != -1)
            ((void (*)(WTF **, int *))off_1E3345820[v75])(&v76, v73);
          v8 = v81;
          goto LABEL_66;
        }
        v38 = *(JSC::JSCell **)(a2 + 40);
        if (((unint64_t)v38 & 0xFFFE000000000002) != 0
          || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v38)) == 0
          || (v41 = Object, Object == *(JSC::JSGlobalObject **)(a2 + 24))
          || (v42 = (JSC::VM *)*((_QWORD *)a1 + 7),
              FunctionRealm = JSC::getFunctionRealm(a1, Object, v40),
              *((_DWORD *)v42 + 20))
          && (JSC::VM::hasExceptionsAfterHandlingTraps(v42) & 1) != 0)
        {
LABEL_62:
          if (!*(_DWORD *)(v4 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) == 0)
            goto LABEL_63;
          goto LABEL_95;
        }
        v45 = *(_QWORD *)(FunctionRealm + 3296);
        if (v45)
        {
          v46 = *(_DWORD *)(v45 - 8);
          v47 = ((unint64_t)&WebCore::JSWritableStream::s_info
               + ~((_QWORD)&WebCore::JSWritableStream::s_info << 32)) ^ (((unint64_t)&WebCore::JSWritableStream::s_info
                                                                        + ~((_QWORD)&WebCore::JSWritableStream::s_info << 32)) >> 22);
          v48 = 9 * ((v47 + ~(v47 << 13)) ^ ((v47 + ~(v47 << 13)) >> 8));
          v49 = (v48 ^ (v48 >> 15)) + ~((v48 ^ (v48 >> 15)) << 27);
          v50 = v46 & ((v49 >> 31) ^ v49);
          v51 = *(char ***)(v45 + 16 * v50);
          if (v51 == &WebCore::JSWritableStream::s_info)
          {
LABEL_58:
            v53 = *(JSC::JSObject **)(v45 + 16 * v50 + 8);
            if (v53)
            {
LABEL_60:
              SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v41, v53, v43);
              if (!*((_DWORD *)v42 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v42) & 1) == 0)
                JSC::JSObject::setStructure(v29, v42, SubclassStructure);
              goto LABEL_62;
            }
          }
          else
          {
            v52 = 1;
            while (v51)
            {
              v50 = ((_DWORD)v50 + v52) & v46;
              v51 = *(char ***)(v45 + 16 * v50);
              ++v52;
              if (v51 == &WebCore::JSWritableStream::s_info)
                goto LABEL_58;
            }
          }
        }
        Structure = WebCore::JSWritableStreamPrototype::createStructure((uint64_t *)v42, FunctionRealm, *(JSC::JSCell **)(FunctionRealm + 656));
        *(_DWORD *)(Structure + 16) |= 0x80000u;
        v56 = (JSC::JSCell *)WebCore::JSWritableStreamPrototype::create(v42, (JSC::VM *)FunctionRealm, Structure, v55);
        v57 = WebCore::JSWritableStream::createStructure((uint64_t *)v42, FunctionRealm, v56);
        v53 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v57, (uint64_t)&WebCore::JSWritableStream::s_info);
        goto LABEL_60;
      }
LABEL_101:
      v68 = (WebCore::JSWritableStream *)std::__throw_bad_variant_access[abi:sn180100]();
      return WebCore::JSWritableStream::prototype(v68, v69, v70);
    }
LABEL_39:
    if (v76)
    {
      v30 = (uint64_t *)((char *)v76 - 16);
      v31 = *(_QWORD *)((((unint64_t)v76 - 16) & 0xFFFFFFFFFFFFF000) + 0x10);
      v32 = (uint64_t *)*((_QWORD *)v76 - 1);
      if (v32)
      {
        v33 = *v30;
        *v32 = *v30;
        *(_QWORD *)(v33 + 8) = v32;
        *v30 = 0;
        v30[1] = 0;
      }
      *v30 = *(_QWORD *)(v31 + 40);
      *(_QWORD *)(v31 + 40) = v30;
    }
    goto LABEL_43;
  }
  WebCore::Converter<WebCore::IDLObject>::convert<WebCore::DefaultExceptionThrower>((uint64_t)a1, *(_QWORD *)(a2 + 48), (uint64_t)v78);
  *(_QWORD *)v73 = v78;
  WebCore::Detail::ConversionResultStorage<std::optional<JSC::Strong<JSC::JSObject,(JSC::ShouldStrongDestructorGrabLock)0>>>::ConversionResultStorage<JSC::Strong<JSC::JSObject,(JSC::ShouldStrongDestructorGrabLock)0>>(WebCore::Detail::ConversionResultStorage<JSC::Strong<JSC::JSObject,(JSC::ShouldStrongDestructorGrabLock)0>> &&)::{lambda(void)#1}::operator()((uint64_t)v73, (uint64_t)v82);
  if ((_DWORD)v79 != -1)
    ((void (*)(int *, _BYTE *))off_1E33441F8[v79])(v73, v78);
  v7 = v85;
  if (!v85)
  {
    v6 = *(_DWORD *)(a2 + 32);
    goto LABEL_8;
  }
  v29 = 0;
LABEL_69:
  if (v7 != -1)
    ((void (*)(_BYTE *, _QWORD **))off_1E3345830[v7])(v78, &v83);
  return (uint64_t)v29;
}

uint64_t WebCore::JSWritableStream::prototype(WebCore::JSWritableStream *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSWritableStream::s_info + ~((_QWORD)&WebCore::JSWritableStream::s_info << 32)) ^ (((unint64_t)&WebCore::JSWritableStream::s_info + ~((_QWORD)&WebCore::JSWritableStream::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSWritableStream::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSWritableStream::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSWritableStreamPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSWritableStreamPrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSWritableStream::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSWritableStream::s_info);
  }
  return *(_QWORD *)(v13 + 48);
}

uint64_t WebCore::JSWritableStream::destroy(uint64_t this, JSC::JSCell *a2)
{
  WTF *v2;
  _DWORD *v3;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int v7;

  v2 = *(WTF **)(this + 24);
  *(_QWORD *)(this + 24) = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = (_DWORD *)*((_QWORD *)v2 + 2);
      *((_QWORD *)v2 + 2) = 0;
      if (v3)
      {
        if (v3[4] == 1)
          (*(void (**)(_DWORD *, JSC::JSCell *))(*(_QWORD *)v3 + 16))(v3, a2);
        else
          --v3[4];
      }
      v4 = *((_QWORD *)v2 + 1);
      if (v4)
      {
        *(_QWORD *)(v4 + 8) = 0;
        v5 = (unsigned int *)*((_QWORD *)v2 + 1);
        *((_QWORD *)v2 + 1) = 0;
        if (v5)
        {
          do
          {
            v6 = __ldaxr(v5);
            v7 = v6 - 1;
          }
          while (__stlxr(v7, v5));
          if (!v7)
          {
            atomic_store(1u, v5);
            WTF::fastFree((WTF *)v5, a2);
          }
        }
      }
      else
      {
        *((_QWORD *)v2 + 1) = 0;
      }
      return WTF::fastFree(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
  return this;
}

uint64_t WebCore::JSWritableStream::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSWritableStreamPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSWritableStreamPrototype::create(WebCore::JSWritableStreamPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSWritableStream::s_info, &WebCore::JSWritableStreamPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWritableStream>,(WebCore::DOMConstructorID)225>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  JSC::Structure *v26;
  JSC::JSCell *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1800);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v33) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v33, &WebCore::JSDOMConstructor<WebCore::JSWritableStream>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v32);
    v9[2848] = v2 + (int)v32;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v33);
  v13 = v33;
  v33 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v33);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSWritableStream::s_info + ~((_QWORD)&WebCore::JSWritableStream::s_info << 32)) ^ (((unint64_t)&WebCore::JSWritableStream::s_info + ~((_QWORD)&WebCore::JSWritableStream::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSWritableStream::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSWritableStream::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSWritableStreamPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v27 = (JSC::JSCell *)WebCore::JSWritableStreamPrototype::create((WebCore::JSWritableStreamPrototype *)a1, (JSC::VM *)a2, Structure, v26);
  v28 = WebCore::JSWritableStream::createStructure((uint64_t *)a1, a2, v27);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v28, (uint64_t)&WebCore::JSWritableStream::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v24 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v29, 14, (uint64_t)&v33);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1800) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsWritableStreamConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSWritableStreamPrototype::s_info != (char **)(16
                                                              * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWritableStream>,(WebCore::DOMConstructorID)225>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsWritableStream_locked(uint64_t a1, uint64_t a2)
{
  if (WebCore::InternalWritableStream::locked(*(WebCore::InternalWritableStream **)(*(_QWORD *)(a2 + 24) + 16)))
    return 7;
  else
    return 6;
}

uint64_t WebCore::JSWritableStreamOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

void WebCore::JSWritableStreamOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  WTF *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WTF *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _DWORD *v24;
  uint64_t v25;
  unsigned int *v26;
  unsigned int v27;
  unsigned int v28;

  v3 = *(WTF **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(WTF **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(WTF **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
  {
    v24 = (_DWORD *)*((_QWORD *)v3 + 2);
    *((_QWORD *)v3 + 2) = 0;
    if (v24)
    {
      if (v24[4] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v24 + 16))(v24);
      else
        --v24[4];
    }
    v25 = *((_QWORD *)v3 + 1);
    if (v25)
    {
      *(_QWORD *)(v25 + 8) = 0;
      v26 = (unsigned int *)*((_QWORD *)v3 + 1);
      *((_QWORD *)v3 + 1) = 0;
      if (v26)
      {
        do
        {
          v27 = __ldaxr(v26);
          v28 = v27 - 1;
        }
        while (__stlxr(v28, v26));
        if (!v28)
        {
          atomic_store(1u, v26);
          WTF::fastFree((WTF *)v26, a2);
        }
      }
    }
    else
    {
      *((_QWORD *)v3 + 1) = 0;
    }
    WTF::fastFree(v3, a2);
  }
  else
  {
    --*(_DWORD *)v3;
  }
}

unint64_t WebCore::createWrapper<WebCore::WritableStream,WebCore::WritableStream>(uint64_t a1, WTF **a2)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  uint64_t *v14;
  unint64_t Structure;
  JSC::Structure *v16;
  JSC::JSCell *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  WTF *v29;
  uint64_t v30;
  uint64_t v31;
  WTF *v32;
  void *v33;
  int v34;
  unint64_t SlowCase;
  WTF *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *Allocator;
  unint64_t v42;
  _QWORD *v43;
  WTF *v44;

  v4 = *a2;
  v5 = *(_QWORD *)(a1 + 3296);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSWritableStream::s_info + ~((_QWORD)&WebCore::JSWritableStream::s_info << 32)) ^ (((unint64_t)&WebCore::JSWritableStream::s_info + ~((_QWORD)&WebCore::JSWritableStream::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSWritableStream::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSWritableStream::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = *(uint64_t **)(a1 + 56);
  Structure = WebCore::JSWritableStreamPrototype::createStructure(v14, a1, *(JSC::JSCell **)(a1 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v17 = (JSC::JSCell *)WebCore::JSWritableStreamPrototype::create((WebCore::JSWritableStreamPrototype *)v14, (JSC::VM *)a1, Structure, v16);
  v18 = WebCore::JSWritableStream::createStructure(v14, a1, v17);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v18, (uint64_t)&WebCore::JSWritableStream::s_info);
LABEL_8:
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_QWORD *)(v19 + 41456);
  v21 = *(_QWORD *)(v20 + 23536);
  v22 = *(_QWORD **)(v21 + 1824);
  if (v22)
    goto LABEL_28;
  v23 = *(_QWORD *)(v20 + 22648);
  if (__ldaxr((unsigned __int8 *)v23))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v23))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v23);
LABEL_13:
  v25 = *(_QWORD *)(v23 + 2824);
  if (!*(_QWORD *)(v25 + 1824))
  {
    v26 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v44, "IsoSpace T");
    v43 = 0;
    MEMORY[0x19AEA3204](v26, &v44, v19 + 192, v19 + 1872, 32, 8, &v43);
    v28 = (uint64_t)v43;
    v43 = 0;
    if (v28)
      (*(void (**)(uint64_t))(*(_QWORD *)v28 + 8))(v28);
    v29 = v44;
    v44 = 0;
    if (v29)
    {
      if (*(_DWORD *)v29 == 1)
        WTF::fastFree(v29, v27);
      else
        --*(_DWORD *)v29;
    }
    v30 = *(_QWORD *)(v25 + 1824);
    *(_QWORD *)(v25 + 1824) = v26;
    if (v30)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
  }
  v22 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v31 = *(_QWORD *)(v21 + 1824);
  *(_QWORD *)(v21 + 1824) = v22;
  if (v31)
  {
    v32 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v32, v33);
  }
  v34 = __ldxr((unsigned __int8 *)v23);
  if (v34 != 1)
  {
    __clrex();
    goto LABEL_27;
  }
  if (__stlxr(0, (unsigned __int8 *)v23))
LABEL_27:
    WTF::Lock::unlockSlow((WTF::Lock *)v23);
LABEL_28:
  SlowCase = v22[3];
  if (SlowCase < v22[4])
  {
LABEL_29:
    v22[3] = SlowCase + 32;
    goto LABEL_30;
  }
  SlowCase = v22[5];
  if ((SlowCase & 1) == 0)
  {
    v42 = *(_QWORD *)(SlowCase + 8) ^ v22[6];
    v22[4] = SlowCase + HIDWORD(v42);
    v22[5] = SlowCase + (int)v42;
    goto LABEL_29;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_30:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  v36 = *a2;
  *a2 = 0;
  *(_QWORD *)(SlowCase + 24) = v36;
  if (*(_BYTE *)(v19 + 755))
    __dmb(0xAu);
  v37 = *(_QWORD *)(a1 + 3320);
  if ((byte_1EE337418 & 1) == 0)
  {
    qword_1EE337410 = (uint64_t)&off_1E3343C70;
    byte_1EE337418 = 1;
  }
  v44 = v4;
  if ((SlowCase & 8) != 0)
    v38 = (SlowCase - 112) | 1;
  else
    v38 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v38 & 1) != 0)
    v39 = v38 + 47;
  else
    v39 = *(_QWORD *)v38 + 32;
  Allocator = *(_QWORD **)(v39 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v39 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE337410;
  Allocator[2] = v37;
  v43 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v37 + 32), (uint64_t *)&v44, (uint64_t *)&v43);
  if (v43)
    v43[1] = 3;
  return SlowCase;
}

unint64_t WebCore::wrap<WebCore::WritableStream>(uint64_t a1, uint64_t a2, WTF *a3)
{
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  WTF *v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  WTF *v14;
  _DWORD *v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  unsigned int v20;
  WTF *v21;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v3)
  {
    v4 = *(_DWORD *)(v3 - 8);
    v5 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v6 = 9 * ((v5 + ~(v5 << 13)) ^ ((v5 + ~(v5 << 13)) >> 8));
    v7 = (v6 ^ (v6 >> 15)) + ~((v6 ^ (v6 >> 15)) << 27);
    v8 = v4 & ((v7 >> 31) ^ v7);
    v9 = *(WTF **)(v3 + 16 * v8);
    if (v9 == a3)
    {
LABEL_6:
      v11 = *(_QWORD *)(v3 + 16 * v8 + 8);
      if (v11)
      {
        if ((*(_BYTE *)(v11 + 8) & 3) == 0)
        {
          v12 = *(_QWORD *)v11;
          if (*(_QWORD *)v11)
            return v12;
        }
      }
    }
    else
    {
      v10 = 1;
      while (v9)
      {
        v8 = ((_DWORD)v8 + v10) & v4;
        v9 = *(WTF **)(v3 + 16 * v8);
        ++v10;
        if (v9 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*(_DWORD *)a3;
  v21 = a3;
  v12 = WebCore::createWrapper<WebCore::WritableStream,WebCore::WritableStream>(a2, &v21);
  v14 = v21;
  v21 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 1)
    {
      v16 = (_DWORD *)*((_QWORD *)v14 + 2);
      *((_QWORD *)v14 + 2) = 0;
      if (v16)
      {
        if (v16[4] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v16 + 16))(v16);
        else
          --v16[4];
      }
      v17 = *((_QWORD *)v14 + 1);
      if (v17)
      {
        *(_QWORD *)(v17 + 8) = 0;
        v18 = (unsigned int *)*((_QWORD *)v14 + 1);
        *((_QWORD *)v14 + 1) = 0;
        if (v18)
        {
          do
          {
            v19 = __ldaxr(v18);
            v20 = v19 - 1;
          }
          while (__stlxr(v20, v18));
          if (!v20)
          {
            atomic_store(1u, v18);
            WTF::fastFree((WTF *)v18, v13);
          }
        }
      }
      else
      {
        *((_QWORD *)v14 + 1) = 0;
      }
      WTF::fastFree(v14, v13);
    }
    else
    {
      --*(_DWORD *)v14;
    }
  }
  return v12;
}

uint64_t WebCore::JSWritableStreamDefaultControllerPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSWritableStreamDefaultControllerPrototype::create(WebCore::JSWritableStreamDefaultControllerPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSWritableStreamDefaultController::s_info, &WebCore::JSWritableStreamDefaultControllerPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::jsWritableStreamDefaultControllerConstructor(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  uint64_t Structure;
  JSC::Heap *v6;
  unint64_t v7;

  v2 = *(_QWORD *)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSWritableStreamDefaultControllerPrototype::s_info != (char **)(16
                                                                               * *(unsigned int *)(16
                                                                                                 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  result = *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 1808);
  if (!result)
  {
    Structure = WebCore::JSDOMBuiltinConstructor<WebCore::JSWritableStreamDefaultController>::createStructure((uint64_t *)v2, v3, *(JSC::JSCell **)(v3 + 664));
    result = WebCore::JSDOMBuiltinConstructor<WebCore::JSWritableStreamDefaultController>::create(v2, Structure, v3);
    *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 1808) = result;
    if (result)
    {
      if (*(_DWORD *)(v2 + 760) >= *(unsigned __int8 *)(v3 + 7))
      {
        v6 = (JSC::Heap *)(v2 + 192);
        v7 = result;
        JSC::Heap::writeBarrierSlowPath(v6, (const JSCell *)v3);
        return v7;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSWritableStreamDefaultWriterPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSWritableStreamDefaultWriterPrototype::create(WebCore::JSWritableStreamDefaultWriterPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<8u>(this, (uint64_t)&WebCore::JSWritableStreamDefaultWriter::s_info, (uint64_t)&WebCore::JSWritableStreamDefaultWriterPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::jsWritableStreamDefaultWriterConstructor(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  uint64_t Structure;
  JSC::Heap *v6;
  unint64_t v7;

  v2 = *(_QWORD *)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSWritableStreamDefaultWriterPrototype::s_info != (char **)(16
                                                                           * *(unsigned int *)(16
                                                                                             * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                             + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  result = *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 1816);
  if (!result)
  {
    Structure = WebCore::JSDOMBuiltinConstructor<WebCore::JSWritableStreamDefaultWriter>::createStructure((uint64_t *)v2, v3, *(JSC::JSCell **)(v3 + 664));
    result = WebCore::JSDOMBuiltinConstructor<WebCore::JSWritableStreamDefaultWriter>::create(v2, Structure, v3);
    *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 1816) = result;
    if (result)
    {
      if (*(_DWORD *)(v2 + 760) >= *(unsigned __int8 *)(v3 + 7))
      {
        v6 = (JSC::Heap *)(v2 + 192);
        v7 = result;
        JSC::Heap::writeBarrierSlowPath(v6, (const JSCell *)v3);
        return v7;
      }
    }
  }
  return result;
}

_DWORD *WebCore::JSWritableStreamSink::destroy(WebCore::JSWritableStreamSink *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[2];
  }
  return result;
}

uint64_t WebCore::JSWritableStreamSink::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

