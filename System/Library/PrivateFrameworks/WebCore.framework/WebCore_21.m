uint64_t WebCore::JSCSSTransformValuePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSTransformValuePrototype::create(WebCore::JSCSSTransformValuePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t Direct;
  WTF::StringImpl *v13;
  JSC::JSObject *v14;
  unint64_t v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  JSC::Structure *v19;
  int v20;
  unint64_t v22;
  WTF::StringImpl *v23;
  unint64_t v24;
  uint64_t v25;
  int *v26;
  JSC::Structure **v27;
  int *v28;
  int v29;
  int v30;
  JSC::Structure *v31;
  int v32;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v22 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v22);
    *((_QWORD *)this + 4865) = SlowCase + (int)v22;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSCSSTransformValue::s_info, &WebCore::JSCSSTransformValuePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2712);
  v10 = *(_QWORD *)(*(_QWORD *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x28) + 672);
  v11 = (_DWORD *)MEMORY[0x1E0CBEBF0];
  *MEMORY[0x1E0CBEBF0] += 2;
  Direct = JSC::JSObject::getDirect(v10, this, (unint64_t)v11);
  v23 = 0;
  v24 = SlowCase;
  v25 = 0x1000000FFFFFFFFLL;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, this, v9, Direct, 4, (uint64_t)&v23);
  if (*v11 == 2)
    WTF::StringImpl::destroy(MEMORY[0x1E0CBEBF0], v13);
  else
    *v11 -= 2;
  WebCore::addValueIterableMethods(*(WebCore **)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x28), (JSC::JSGlobalObject *)SlowCase, v14);
  v15 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v17 = JSC::JSString::create((uint64_t)this, &v23);
  v18 = v23;
  v23 = 0;
  if (v18)
  {
    if (*(_DWORD *)v18 == 2)
      WTF::StringImpl::destroy(v18, v16);
    else
      *(_DWORD *)v18 -= 2;
  }
  v19 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v32 = *(_DWORD *)SlowCase;
  v31 = v19;
  v20 = JSC::Structure::outOfLineCapacity(v19);
  v29 = 0;
  v30 = v20;
  v23 = (WTF::StringImpl *)&v30;
  v24 = SlowCase;
  v25 = (uint64_t)this;
  v26 = &v32;
  v27 = &v31;
  v28 = &v29;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v19, this, v15, 6, (uint64_t)&v23);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v29, v17);
  *((_DWORD *)v19 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSTransformValue>,(WebCore::DOMConstructorID)409>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3272);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleValue>,(WebCore::DOMConstructorID)378>(a1, a2);
  v7 = v6;
  LODWORD(v33) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v33, &WebCore::JSDOMConstructor<WebCore::JSCSSTransformValue>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v32);
    v10[2848] = v2 + (int)v32;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v33);
  v14 = v33;
  v33 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v33);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSTransformValue::s_info
         + ~((_QWORD)&WebCore::JSCSSTransformValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSTransformValue::s_info
                                                                     + ~((_QWORD)&WebCore::JSCSSTransformValue::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSTransformValue::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSTransformValue::s_info)
          goto LABEL_20;
      }
    }
  }
  Prototype = (JSC::JSCell *)WebCore::JSCSSTransformValue::createPrototype((WebCore::JSCSSTransformValue *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSTransformValue::createStructure((uint64_t *)a1, a2, Prototype);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSCSSTransformValue::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v26 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v29, 14, (uint64_t)&v33);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3272) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSTransformValueConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSTransformValuePrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSTransformValue>,(WebCore::DOMConstructorID)409>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsCSSTransformValue_length(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(unsigned int *)(*(_QWORD *)(a2 + 24) + 52);
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

uint64_t WebCore::jsCSSTransformValue_is2D(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 52);
  if (!(_DWORD)v3)
    return 7;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = 8 * v3;
  result = 7;
  while (*(_BYTE *)(*(_QWORD *)v4 + 12))
  {
    v4 += 8;
    v5 -= 8;
    if (!v5)
      return result;
  }
  return 6;
}

uint64_t WebCore::JSCSSTransformValue::subspaceForImpl(WebCore::JSCSSTransformValue *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3344);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3344))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3344);
    *(_QWORD *)(v8 + 3344) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3344);
  *(_QWORD *)(v3 + 3344) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCSSTransition::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSWebAnimation::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSWebAnimation::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSWebAnimation::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSTransitionPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSTransitionPrototype::create(WebCore::JSCSSTransitionPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSTransition::s_info, (uint64_t)&WebCore::JSCSSTransitionPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSTransition>,(WebCore::DOMConstructorID)321>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2568);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSWebAnimation>,(WebCore::DOMConstructorID)328>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSTransition>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSTransition::s_info + ~((_QWORD)&WebCore::JSCSSTransition::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSTransition::s_info + ~((_QWORD)&WebCore::JSCSSTransition::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSTransition::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSTransition::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSWebAnimation::prototype((WebCore::JSWebAnimation *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSTransitionPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCSSTransitionPrototype::create((WebCore::JSCSSTransitionPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCSSTransition::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCSSTransition::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2568) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSTransitionConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSTransitionPrototype::s_info != (char **)(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSTransition>,(WebCore::DOMConstructorID)321>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSTransition_transitionProperty(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  WTF::StringImpl *v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  WebCore::JSCSSTransition *v9;
  JSC::VM *v10;
  WTF::StringImpl *v11;
  char v12;
  char *v13;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(unsigned int *)(v2 + 240);
  if ((_DWORD)v3 == -1)
  {
    v9 = (WebCore::JSCSSTransition *)std::__throw_bad_variant_access[abi:sn180100]();
    return WebCore::JSCSSTransition::subspaceForImpl(v9, v10);
  }
  else
  {
    v13 = &v12;
    ((void (*)(WTF::StringImpl **__return_ptr, char **, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZNK7WebCore13CSSTransition18transitionPropertyEvE3__0JZNKS9_18transitionPropertyEvE3__1EEEEEJRKNS0_6__implIJNS8_13CSSPropertyIDENS6_10AtomStringEEEEEEEDcOT_DpOT0____fmatrix[v3])(&v11, &v13, v2 + 232);
    v6 = WebCore::toJS<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>,WTF::AtomString>(*(_QWORD *)(a1 + 56), (uint64_t)v11);
    v7 = v11;
    v11 = 0;
    if (v7)
    {
      if (*(_DWORD *)v7 == 2)
        WTF::StringImpl::destroy(v7, v5);
      else
        *(_DWORD *)v7 -= 2;
    }
    return v6;
  }
}

uint64_t WebCore::JSCSSTransition::subspaceForImpl(WebCore::JSCSSTransition *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2608);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v20 = *(_QWORD *)(v8 + 2608);
  if (!v20)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v22, "IsoSpace T");
    v21 = 0;
    MEMORY[0x19AEA3204](v9, &v22, (char *)this + 192, (char *)this + 1872, 32, 8, &v21);
    v11 = v21;
    v21 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v22;
    v22 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v20 = v9;
    v13 = *(_QWORD *)(v8 + 2608);
    *(_QWORD *)(v8 + 2608) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v6 + 2832, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
      *(_DWORD *)(v6 + 2844) = v14 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 2608);
  *(_QWORD *)(v3 + 2608) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCSSTransitionOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(_QWORD **)(*(_QWORD *)a2 + 24);
  v6 = v5[5];
  if (!v6)
    return 0;
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7 || *(_BYTE *)(v7 + 180))
    return 0;
  if (v5[6] || (result = (*(uint64_t (**)(_QWORD *))(v5[4] + 64))(v5 + 4), (_DWORD)result))
  {
    if (a5)
    {
      *a5 = "ActiveDOMObject with pending activity";
      a5[1] = 38;
    }
    return 1;
  }
  return result;
}

uint64_t WebCore::JSCSSTransitionOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  int v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v26;

  result = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v4 = *(_DWORD *)(result + 24);
  *(_DWORD *)(result + 24) = v4 + 1;
  v5 = result + 8;
  if (!result)
    v5 = 0;
  if (*(_DWORD *)(a3 + 48))
  {
    v8 = *(_QWORD *)(a3 + 32);
    v6 = (uint64_t *)(a3 + 32);
    v7 = v8;
    if (v8)
    {
      v9 = *(_DWORD *)(v7 - 8);
      v10 = (~(result << 32) + result) ^ ((unint64_t)(~(result << 32) + result) >> 22);
      v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
      v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
      v13 = v9 & ((v12 >> 31) ^ v12);
      v14 = *(_QWORD *)(v7 + 16 * v13);
      if (v14 != result)
      {
        v15 = 1;
        while (v14)
        {
          v13 = ((_DWORD)v13 + v15) & v9;
          v14 = *(_QWORD *)(v7 + 16 * v13);
          ++v15;
          if (v14 == result)
            goto LABEL_14;
        }
        v13 = *(unsigned int *)(v7 - 4);
      }
LABEL_14:
      if (v13 != *(_DWORD *)(v7 - 4))
      {
        v16 = (_QWORD *)(v7 + 16 * v13);
        *v16 = -1;
        v19 = v16[1];
        v18 = v16 + 1;
        v17 = v19;
        if (v19)
        {
          *(_QWORD *)(v17 + 8) = 3;
          *v18 = 0;
        }
        ++*(_DWORD *)(*v6 - 16);
        v20 = *v6;
        if (*v6)
          v21 = *(_DWORD *)(v20 - 12) - 1;
        else
          v21 = -1;
        *(_DWORD *)(v20 - 12) = v21;
        v22 = *v6;
        if (*v6)
        {
          v23 = 6 * *(_DWORD *)(v22 - 12);
          v24 = *(_DWORD *)(v22 - 4);
          if (v23 < v24 && v24 >= 9)
          {
            v26 = result;
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v6, v24 >> 1, 0);
            result = v26;
          }
        }
      }
    }
    v4 = *(_DWORD *)(result + 24) - 1;
  }
  else if (*(_QWORD *)v5)
  {
    *(_QWORD *)(*(_QWORD *)v5 + 8) = 3;
    *(_QWORD *)v5 = 0;
  }
  if (!v4)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 72))(result);
  *(_DWORD *)(result + 24) = v4;
  return result;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSCSSTransitionEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  JSC::VM *v3;
  uint64_t v5;
  int v6;
  WTF::StringImpl **v7;
  JSC::JSCell *v8;
  JSC::VM *v9;
  uint64_t Object;
  uint64_t v11;
  WTF::StringImpl *v12;
  unint64_t v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  double v17;
  char v18;
  JSC::VM *v19;
  double v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  JSC::VM *v24;
  double v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  unint64_t v28;
  JSC::VM *v29;
  double v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  JSC::VM *v34;
  WTF::StringImpl *v35;
  WTF::StringImpl *v36;
  uint64_t v37;
  JSC::VM *v38;
  _DWORD *v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  JSC::VM *v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  uint64_t v46;
  uint64_t v47;
  WTF::StringImpl *v48;
  unint64_t v49;
  WTF::StringImpl *v50;
  WebCore::JSDOMGlobalObject *v51;
  WTF::StringImpl *v52;
  WTF::StringImpl *v53;
  WTF::StringImpl *v54;
  JSCell *v55;
  JSC::JSCell *v56;
  JSC::JSGlobalObject *v57;
  JSC::JSObject *v58;
  JSC::JSGlobalObject *v59;
  WebCore::JSCSSTransitionEvent *v60;
  WebCore::JSDOMGlobalObject *v61;
  JSC::VM *FunctionRealm;
  JSC::JSObject *v63;
  JSC::Structure *v64;
  unint64_t SubclassStructure;
  _DWORD *v66;
  JSValue v68;
  WTF::StringImpl *v69;
  int v70;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v72;
  double v73;
  BOOL v74;
  int v75;
  uint64_t v76;
  int *v77;
  int v78;
  BOOL v79;
  int v80;
  uint64_t v81;
  int *v82;
  int v83;
  BOOL v84;
  int v85;
  uint64_t v86;
  int *v87;
  int v88;
  JSC::VM *v89;
  uint64_t v90;
  WTF::StringImpl *v91;
  WTF::StringImpl *v92;
  double v93;
  WTF::StringImpl *v94;
  __int16 v95;
  BOOL v96;
  WTF::StringImpl *v97;
  double v98;
  WTF::StringImpl *v99;
  int v100;
  uint64_t v101;
  int v102;
  unint64_t v103;
  int v104;
  JSC::VM *v105;
  WTF::StringImpl *v106;
  _QWORD v107[2];

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v68.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v3, a1, v68);
  }
  v5 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v101);
  v6 = v102;
  if (!v102)
  {
    v7 = (WTF::StringImpl **)MEMORY[0x1E0CBF738];
    v90 = v5;
    if ((unint64_t)(*(int *)(a2 + 32) - 3) >= 0xFFFFFFFFFFFFFFFELL)
    {
      v105 = (JSC::VM *)*((_QWORD *)a1 + 7);
    }
    else
    {
      v8 = *(JSC::JSCell **)(a2 + 56);
      v9 = (JSC::VM *)*((_QWORD *)a1 + 7);
      v105 = v9;
      if (((unint64_t)v8 & 0xFFFFFFFFFFFFFFF7) != 2)
      {
        if (((unint64_t)v8 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v8)) == 0)
        {
          JSC::throwTypeError();
          goto LABEL_141;
        }
        v11 = Object;
        v89 = v3;
        WTF::AtomStringImpl::addLiteral();
        v13 = JSC::JSObject::get((JSC::Structure *)v11, a1, (unint64_t)v91);
        if (v91)
        {
          if (*(_DWORD *)v91 == 2)
            WTF::StringImpl::destroy(v91, v12);
          else
            *(_DWORD *)v91 -= 2;
        }
        if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
        {
LABEL_141:
          v55 = 0;
          LODWORD(v13) = 1;
          v100 = 1;
LABEL_116:
          ((void (*)(WTF::StringImpl **, __int16 *))off_1E3248598[v13])(&v91, &v95);
LABEL_117:
          v6 = v102;
          goto LABEL_118;
        }
        if (v13 == 10)
        {
          v14 = 0;
          while (1)
          {
            WTF::AtomStringImpl::addLiteral();
            v21 = v91;
            v23 = JSC::JSObject::get((JSC::Structure *)v11, a1, (unint64_t)v91);
            if (v21)
            {
              if (*(_DWORD *)v21 == 2)
                WTF::StringImpl::destroy(v21, v22);
              else
                *(_DWORD *)v21 -= 2;
            }
            if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
              goto LABEL_141;
            if (v23 == 10)
            {
              v16 = 0;
              goto LABEL_35;
            }
            v24 = (JSC::VM *)*((_QWORD *)a1 + 7);
            if (v23 >= 0xFFFE000000000000)
              break;
            *(_QWORD *)&v25 = v23 - 0x2000000000000;
            if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              if ((v23 & 0xFFFE000000000002) != 0)
              {
                v16 = v23 == 7;
                goto LABEL_34;
              }
              v80 = *(unsigned __int8 *)(v23 + 5);
              if (v80 == 3)
              {
                v83 = *(_DWORD *)(v23 + 8);
                goto LABEL_223;
              }
              if (v80 == 2)
              {
                v81 = *(_QWORD *)(v23 + 8);
                if ((v81 & 1) != 0)
                  v82 = (int *)(v23 + 16);
                else
                  v82 = (int *)(v81 + 4);
                v83 = *v82;
LABEL_223:
                v79 = v83 == 0;
              }
              else
              {
                if ((*(_BYTE *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0xA) & 1) == 0)
                {
LABEL_225:
                  v16 = 1;
                  goto LABEL_34;
                }
                v79 = *(_QWORD *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
              }
LABEL_235:
              v16 = !v79;
              goto LABEL_34;
            }
            if (v25 > 0.0)
              goto LABEL_225;
            v16 = v25 < 0.0;
LABEL_34:
            if (*((_DWORD *)v24 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v24) & 1) != 0)
              goto LABEL_141;
LABEL_35:
            WTF::AtomStringImpl::addLiteral();
            v26 = v91;
            v28 = JSC::JSObject::get((JSC::Structure *)v11, a1, (unint64_t)v91);
            if (v26)
            {
              if (*(_DWORD *)v26 == 2)
                WTF::StringImpl::destroy(v26, v27);
              else
                *(_DWORD *)v26 -= 2;
            }
            if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
              goto LABEL_141;
            if (v28 == 10)
            {
              v15 = 0;
              goto LABEL_46;
            }
            v29 = (JSC::VM *)*((_QWORD *)a1 + 7);
            if (v28 >= 0xFFFE000000000000)
            {
              v84 = (_DWORD)v28 == 0;
              goto LABEL_239;
            }
            *(_QWORD *)&v30 = v28 - 0x2000000000000;
            if (v28 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              if ((v28 & 0xFFFE000000000002) != 0)
              {
                v15 = v28 == 7;
                goto LABEL_45;
              }
              v85 = *(unsigned __int8 *)(v28 + 5);
              if (v85 == 3)
              {
                v88 = *(_DWORD *)(v28 + 8);
              }
              else
              {
                if (v85 != 2)
                {
                  if ((*(_BYTE *)(16 * (*(_DWORD *)v28 & 0xFFFFFFFE) + 0xA) & 1) == 0)
                  {
LABEL_229:
                    v15 = 1;
                    goto LABEL_45;
                  }
                  v84 = *(_QWORD *)(16 * (*(_DWORD *)v28 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
                  goto LABEL_239;
                }
                v86 = *(_QWORD *)(v28 + 8);
                if ((v86 & 1) != 0)
                  v87 = (int *)(v28 + 16);
                else
                  v87 = (int *)(v86 + 4);
                v88 = *v87;
              }
              v84 = v88 == 0;
LABEL_239:
              v15 = !v84;
              goto LABEL_45;
            }
            if (v30 > 0.0)
              goto LABEL_229;
            v15 = v30 < 0.0;
LABEL_45:
            if (*((_DWORD *)v29 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v29) & 1) != 0)
              goto LABEL_141;
LABEL_46:
            WTF::AtomStringImpl::addLiteral();
            v31 = v91;
            v33 = (WTF::StringImpl *)JSC::JSObject::get((JSC::Structure *)v11, a1, (unint64_t)v91);
            if (v31)
            {
              if (*(_DWORD *)v31 == 2)
                WTF::StringImpl::destroy(v31, v32);
              else
                *(_DWORD *)v31 -= 2;
            }
            if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
              goto LABEL_141;
            v17 = 0.0;
            if (v33 != (WTF::StringImpl *)10)
            {
              v91 = v33;
              v34 = (JSC::VM *)*((_QWORD *)a1 + 7);
              v103 = (unint64_t)v34;
              if ((unint64_t)v33 >= 0xFFFE000000000000)
              {
                v17 = (double)(int)v33;
              }
              else if ((unint64_t)v33 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
              {
                v72 = v34;
                JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v91, a1);
                v34 = v72;
                v17 = v73;
              }
              else
              {
                *(_QWORD *)&v17 = (char *)v33 - 0x2000000000000;
              }
              if (*((_DWORD *)v34 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v34) & 1) != 0)
                goto LABEL_141;
              if ((*(_QWORD *)&v17 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
              {
                JSC::throwTypeError();
                goto LABEL_141;
              }
            }
            WTF::AtomStringImpl::addLiteral();
            v35 = v91;
            v37 = JSC::JSObject::get((JSC::Structure *)v11, a1, (unint64_t)v91);
            if (v35)
            {
              if (*(_DWORD *)v35 == 2)
                WTF::StringImpl::destroy(v35, v36);
              else
                *(_DWORD *)v35 -= 2;
            }
            if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
              goto LABEL_141;
            if (v37 == 10)
            {
              v18 = 0;
              v3 = v89;
              v7 = (WTF::StringImpl **)MEMORY[0x1E0CBF738];
LABEL_15:
              v9 = *v7;
              if (*v7)
                *(_DWORD *)v9 += 2;
              LODWORD(v92) = 0;
              v91 = 0;
              if ((v18 & 1) != 0)
                goto LABEL_76;
              goto LABEL_71;
            }
            v103 = v37;
            v38 = (JSC::VM *)*((_QWORD *)a1 + 7);
            v3 = v89;
            if ((v37 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v37 + 5) != 2)
            {
              JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v103, a1);
              goto LABEL_68;
            }
            v39 = *(_DWORD **)(v37 + 8);
            if ((v39 & 1) != 0)
            {
              v39 = *(_DWORD **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v37, a1);
              if (!v39)
                goto LABEL_67;
LABEL_66:
              *v39 += 2;
              goto LABEL_67;
            }
            if (v39)
              goto LABEL_66;
LABEL_67:
            v107[0] = v39;
LABEL_68:
            if (*((_DWORD *)v38 + 20))
            {
              hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v38);
              v9 = (JSC::VM *)v107[0];
              if (hasExceptionsAfterHandlingTraps)
              {
                LODWORD(v13) = 1;
                LODWORD(v92) = 1;
                v107[0] = 0;
                if (v9)
                {
                  if (*(_DWORD *)v9 == 2)
                    WTF::StringImpl::destroy(v9, v45);
                  else
                    *(_DWORD *)v9 -= 2;
                }
                v9 = 0;
                v100 = 1;
                v3 = v89;
                goto LABEL_184;
              }
              v3 = v89;
            }
            else
            {
              v9 = (JSC::VM *)v107[0];
            }
            LODWORD(v92) = 0;
            v91 = 0;
LABEL_71:
            WTF::AtomStringImpl::addLiteral();
            v40 = (WTF::StringImpl *)v103;
            v11 = JSC::JSObject::get((JSC::Structure *)v11, a1, v103);
            if (v40)
            {
              if (*(_DWORD *)v40 == 2)
                WTF::StringImpl::destroy(v40, v41);
              else
                *(_DWORD *)v40 -= 2;
            }
            v7 = (WTF::StringImpl **)MEMORY[0x1E0CBF738];
            if (!*((_DWORD *)v105 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v105))
            {
              if (v11 == 10)
              {
LABEL_76:
                v42 = *v7;
                if (*v7)
                  *(_DWORD *)v42 += 2;
                goto LABEL_86;
              }
              v107[0] = v11;
              v43 = (JSC::VM *)*((_QWORD *)a1 + 7);
              if ((v11 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v11 + 5) != 2)
              {
                JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v107, a1);
              }
              else
              {
                v44 = *(WTF::StringImpl **)(v11 + 8);
                if ((v44 & 1) != 0)
                {
                  v44 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v11, a1);
                  if (v44)
LABEL_82:
                    *(_DWORD *)v44 += 2;
                }
                else if (v44)
                {
                  goto LABEL_82;
                }
                v106 = v44;
              }
              if (!*((_DWORD *)v43 + 20))
              {
                v42 = v106;
                goto LABEL_86;
              }
              v70 = JSC::VM::hasExceptionsAfterHandlingTraps(v43);
              v42 = v106;
              if (v70)
              {
                v104 = 1;
                v106 = 0;
                if (v42)
                {
                  if (*(_DWORD *)v42 == 2)
                    WTF::StringImpl::destroy(v42, v69);
                  else
                    *(_DWORD *)v42 -= 2;
                }
                LODWORD(v13) = 1;
              }
              else
              {
LABEL_86:
                v104 = 0;
                LODWORD(v13) = 0;
                v103 = 0;
                LOBYTE(v95) = v14;
                HIBYTE(v95) = v16;
                v96 = v15;
                v97 = v9;
                v98 = v17;
                v99 = v42;
                v9 = 0;
              }
              v100 = v13;
              ((void (*)(_QWORD *, unint64_t *))off_1E3238AF8[v13])(v107, &v103);
              v46 = v90;
              goto LABEL_88;
            }
            LODWORD(v13) = 1;
            v100 = 1;
LABEL_184:
            v46 = v90;
LABEL_88:
            if ((_DWORD)v92 != -1)
              ((void (*)(unint64_t *, WTF::StringImpl **))off_1E3238AF8[v92])(&v103, &v91);
            if (!v9)
              goto LABEL_93;
            if (*(_DWORD *)v9 != 2)
            {
              *(_DWORD *)v9 -= 2;
LABEL_93:
              if ((_DWORD)v13)
                goto LABEL_122;
              goto LABEL_94;
            }
            WTF::StringImpl::destroy(v9, v45);
            LODWORD(v13) = v100;
            if (v100)
            {
LABEL_122:
              v55 = 0;
              if ((_DWORD)v13 == -1)
                goto LABEL_117;
              goto LABEL_116;
            }
LABEL_94:
            if (!v102)
            {
              v47 = v101;
              v101 = 0;
              v107[0] = v47;
              LOWORD(v91) = v95;
              BYTE2(v91) = v96;
              v92 = v97;
              v93 = v98;
              v48 = v99;
              v97 = 0;
              v99 = 0;
              v94 = v48;
              v49 = bmalloc::api::isoAllocate();
              *(_QWORD *)WebCore::StyleOriginatedAnimationEvent::StyleOriginatedAnimationEvent(v49, 52, v107, (unsigned __int8 *)&v91, 0, (WTF::StringImpl *)&v94, v93) = off_1E338CED0;
              v52 = v92;
              if (v92)
                *(_DWORD *)v92 += 2;
              *(_QWORD *)(v49 + 128) = v52;
              v103 = v49;
              v53 = v94;
              v94 = 0;
              if (v53)
              {
                if (*(_DWORD *)v53 == 2)
                {
                  WTF::StringImpl::destroy(v53, v50);
                  v52 = v92;
                }
                else
                {
                  *(_DWORD *)v53 -= 2;
                }
              }
              v92 = 0;
              if (v52)
              {
                if (*(_DWORD *)v52 == 2)
                  WTF::StringImpl::destroy(v52, v50);
                else
                  *(_DWORD *)v52 -= 2;
              }
              v54 = (WTF::StringImpl *)v107[0];
              v107[0] = 0;
              if (v54)
              {
                if (*(_DWORD *)v54 == 2)
                  WTF::StringImpl::destroy(v54, v50);
                else
                  *(_DWORD *)v54 -= 2;
              }
              if (*(void (***)(WebCore::CSSTransitionEvent *__hidden))v49 != off_1E338CED0)
              {
                __break(0xC471u);
                JUMPOUT(0x1948F6BE0);
              }
              v55 = (JSCell *)WebCore::createWrapper<WebCore::CSSTransitionEvent,WebCore::CSSTransitionEvent>(*(WebCore::JSCSSTransitionEvent ***)(v46 + 40), (uint64_t *)&v103, v51);
              v56 = *(JSC::JSCell **)(a2 + 40);
              if (((unint64_t)v56 & 0xFFFE000000000002) == 0)
              {
                v57 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v56);
                if (v57)
                {
                  v59 = v57;
                  if (v57 != *(JSC::JSGlobalObject **)(a2 + 24))
                  {
                    v60 = (WebCore::JSCSSTransitionEvent *)*((_QWORD *)a1 + 7);
                    FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v57, v58);
                    if (!*((_DWORD *)v60 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v60) & 1) == 0)
                    {
                      v63 = (JSC::JSObject *)WebCore::getDOMStructure<WebCore::JSCSSTransitionEvent>(v60, FunctionRealm, v61);
                      SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v59, v63, v64);
                      if (!*((_DWORD *)v60 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v60) & 1) == 0)
                        JSC::JSObject::setStructure(v55, v60, SubclassStructure);
                    }
                  }
                }
              }
              if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
                v55 = 0;
              v66 = (_DWORD *)v103;
              v103 = 0;
              if (v66)
              {
                if (v66[4] == 1)
                  (*(void (**)(_DWORD *))(*(_QWORD *)v66 + 8))(v66);
                else
                  --v66[4];
              }
              LODWORD(v13) = 0;
              goto LABEL_116;
            }
            v19 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_191:
            v74 = (_DWORD)v13 == 0;
LABEL_231:
            v14 = !v74;
LABEL_23:
            if (*((_DWORD *)v19 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v19) & 1) != 0)
              goto LABEL_141;
          }
          v79 = (_DWORD)v23 == 0;
          goto LABEL_235;
        }
        v19 = (JSC::VM *)*((_QWORD *)a1 + 7);
        if (v13 >= 0xFFFE000000000000)
          goto LABEL_191;
        *(_QWORD *)&v20 = v13 - 0x2000000000000;
        if (v13 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
        {
          if (v20 <= 0.0)
          {
            v14 = v20 < 0.0;
            goto LABEL_23;
          }
        }
        else
        {
          if ((v13 & 0xFFFE000000000002) != 0)
          {
            v14 = v13 == 7;
            goto LABEL_23;
          }
          v75 = *(unsigned __int8 *)(v13 + 5);
          if (v75 == 3)
          {
            v78 = *(_DWORD *)(v13 + 8);
LABEL_219:
            v74 = v78 == 0;
            goto LABEL_231;
          }
          if (v75 == 2)
          {
            v76 = *(_QWORD *)(v13 + 8);
            if ((v76 & 1) != 0)
              v77 = (int *)(v13 + 16);
            else
              v77 = (int *)(v76 + 4);
            v78 = *v77;
            goto LABEL_219;
          }
          if ((*(_BYTE *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0xA) & 1) != 0)
          {
            v74 = *(_QWORD *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            goto LABEL_231;
          }
        }
        v14 = 1;
        goto LABEL_23;
      }
    }
    v15 = 0;
    v16 = 0;
    v14 = 0;
    v11 = 0;
    v17 = 0.0;
    v18 = 1;
    goto LABEL_15;
  }
  v55 = 0;
LABEL_118:
  if (v6 != -1)
    ((void (*)(__int16 *, uint64_t *))off_1E3248340[v6])(&v95, &v101);
  return v55;
}

WTF::StringImpl *WebCore::JSCSSTransitionEventPrototype::finishCreation(WebCore::JSCSSTransitionEventPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(a2, (uint64_t)&WebCore::JSCSSTransitionEvent::s_info, &WebCore::JSCSSTransitionEventPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSCSSTransitionEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSCSSTransitionEvent::createPrototype(WebCore::JSCSSTransitionEvent *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  int v3;
  JSC::JSCell *v5;
  unint64_t v6;
  WebCore::JSDOMGlobalObject *v7;
  JSC::Structure *v8;

  v3 = (int)a2;
  v5 = (JSC::JSCell *)WebCore::JSEvent::prototype(this, a2, a3);
  v6 = JSC::Structure::create((uint64_t *)this, v3, v5);
  *(_DWORD *)(v6 + 16) |= 0x80000u;
  return WebCore::JSCSSTransitionEventPrototype::create(this, v6, v7, v8);
}

unint64_t WebCore::JSCSSTransitionEventPrototype::create(WebCore::JSCSSTransitionEventPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSCSSTransitionEventPrototype::finishCreation((WebCore::JSCSSTransitionEventPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSTransitionEvent>,(WebCore::DOMConstructorID)322>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2576);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
  v7 = v6;
  LODWORD(v22) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v20);
    v5[2] = SlowCase + (int)v20;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v22, &WebCore::JSDOMConstructor<WebCore::JSCSSTransitionEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v21);
    v10[2848] = v2 + (int)v21;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v22);
  v14 = v22;
  v22 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v22);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSCSSTransitionEvent>((WebCore::JSCSSTransitionEvent *)a1, (JSC::VM *)a2, v17)+ 48);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v18, 14, (uint64_t)&v22);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2576) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSTransitionEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSTransitionEventPrototype::s_info != (char **)(16
                                                                  * *(unsigned int *)(16
                                                                                    * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                    + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSTransitionEvent>,(WebCore::DOMConstructorID)322>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCSSTransitionEvent_propertyName(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 128);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

unint64_t WebCore::jsCSSTransitionEvent_elapsedTime(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 88);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

uint64_t WebCore::jsCSSTransitionEvent_pseudoElement(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v13;
  unsigned int v14;
  WTF::StringImpl *v15;
  unsigned int v16;
  WTF::StringImpl *v17;

  v3 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v3 + 120))
  {
    if (!*(_QWORD *)(v3 + 96))
    {
      WebCore::pseudoElementIdentifierAsString(v3 + 104, (uint64_t *)&v17);
      v5 = v17;
      v17 = 0;
      v6 = *(WTF::StringImpl **)(v3 + 96);
      *(_QWORD *)(v3 + 96) = v5;
      if (v6)
      {
        v7 = *(_DWORD *)v6 - 2;
        if (*(_DWORD *)v6 == 2)
        {
          WTF::StringImpl::destroy(v6, v4);
          v6 = v17;
          v17 = 0;
          if (!v6)
            goto LABEL_6;
          v7 = *(_DWORD *)v6 - 2;
          if (*(_DWORD *)v6 == 2)
          {
            WTF::StringImpl::destroy(v6, v15);
            goto LABEL_6;
          }
        }
        *(_DWORD *)v6 = v7;
      }
    }
  }
LABEL_6:
  v8 = *(_QWORD *)(a1 + 56);
  v9 = *(_QWORD *)(v3 + 96);
  if (!v9)
    return *(_QWORD *)(v8 + 41968);
  v10 = *(_DWORD *)(v9 + 4);
  if (!v10)
    return *(_QWORD *)(v8 + 41968);
  if (v10 == 1)
  {
    v13 = *(unsigned __int8 **)(v9 + 8);
    if ((*(_BYTE *)(v9 + 16) & 4) != 0)
    {
      v14 = *v13;
    }
    else
    {
      v16 = *(unsigned __int16 *)v13;
      if (v16 > 0xFF)
        goto LABEL_9;
      v14 = v16;
    }
    return *(_QWORD *)(v8 + 8 * v14 + 42216);
  }
LABEL_9:
  v11 = *(_QWORD *)(v8 + 64760);
  if (!v11 || v9 != *(_QWORD *)(v11 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v11;
}

uint64_t WebCore::JSCSSTransitionEvent::subspaceForImpl(WebCore::JSCSSTransitionEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2616);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v7, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v7))
    goto LABEL_5;
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  if (!*(_QWORD *)(v9 + 2616))
  {
    v12 = 32;
    std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", (uint64_t)this + 192, (uint64_t)this + 1872, &v12, JSC::JSCell::numberOfLowerTierCells, &v13);
    v11 = *(_QWORD *)(v9 + 2616);
    *(_QWORD *)(v9 + 2616) = v13;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  v13 = JSC::GCClient::IsoSubspace::IsoSubspace();
  WebCore::JSCSSTransitionEvent::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(v3, &v13);
  std::unique_ptr<JSC::GCClient::IsoSubspace>::~unique_ptr[abi:sn180100](&v13);
  v10 = __ldxr((unsigned __int8 *)v7);
  if (v10 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSCSSTranslate>::construct(JSC *this, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL4 v15;
  char **v16;
  BOOL v17;
  JSCell *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BOOL4 v23;
  char **v24;
  BOOL v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  WTF::StringImpl *v30;
  WebCore::JSDOMGlobalObject *v31;
  _DWORD *v32;
  _DWORD *v33;
  _DWORD *v34;
  int v35;
  JSC::VM *v36;
  uint64_t (***v37)(WebCore::CSSTranslate *__hidden, WTF::StringBuilder *);
  uint64_t (***v38)(WebCore::CSSTranslate *__hidden, WTF::StringBuilder *);
  JSC::JSCell *v39;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v41;
  JSC::JSGlobalObject *v42;
  JSC::VM *v43;
  JSC::JSObject *v44;
  JSC::Structure *v45;
  JSC::VM *FunctionRealm;
  uint64_t v47;
  unsigned int v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char **v53;
  int v54;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  unint64_t SubclassStructure;
  uint64_t v58;
  _BOOL4 v59;
  char **v60;
  BOOL v61;
  JSValue v64;
  WTF::StringImpl *v65;
  uint64_t v66;
  uint64_t v67;
  _DWORD *v68;
  _DWORD *v69;
  _DWORD *v70;
  uint64_t (***v71)(WebCore::CSSTranslate *__hidden, WTF::StringBuilder *);
  WTF::StringImpl *v72;
  int v73;
  JSC::VM *v74;
  uint64_t (***v75)(WebCore::CSSTranslate *__hidden, WTF::StringBuilder *);
  WTF::StringImpl *v76;

  v9 = *((_QWORD *)this + 7);
  v74 = (JSC::VM *)v9;
  v10 = *(int *)(a2 + 32);
  if ((unint64_t)(v10 - 1) <= 1)
  {
    v64.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException((JSC::VM *)v9, this, v64);
  }
  v12 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 48);
  v71 = (uint64_t (***)(WebCore::CSSTranslate *__hidden, WTF::StringBuilder *))v9;
  if ((v13 & 0xFFFE000000000002) != 0)
    goto LABEL_13;
  v14 = *(unsigned int *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C);
  v15 = *(_DWORD *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C) != 0;
  v16 = (char **)(16 * v14);
  if ((_DWORD)v14)
    v17 = v16 == &WebCore::JSCSSNumericValue::s_info;
  else
    v17 = 1;
  if (!v17)
  {
    do
    {
      v16 = (char **)v16[2];
      v15 = v16 != 0;
    }
    while (v16 != &WebCore::JSCSSNumericValue::s_info && v16 != 0);
  }
  if (!v15 || (v20 = *(_QWORD *)(v13 + 24)) == 0)
  {
LABEL_13:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v71, 0, "x", 2, "CSSTranslate", 13, a8, 0, 0, "CSSNumericValue", 16);
    return 0;
  }
  v21 = *(_QWORD *)(a2 + 56);
  v71 = (uint64_t (***)(WebCore::CSSTranslate *__hidden, WTF::StringBuilder *))v9;
  if ((v21 & 0xFFFE000000000002) != 0)
    goto LABEL_26;
  v22 = *(unsigned int *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0x4C);
  v23 = *(_DWORD *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0x4C) != 0;
  v24 = (char **)(16 * v22);
  if ((_DWORD)v22)
    v25 = v24 == &WebCore::JSCSSNumericValue::s_info;
  else
    v25 = 1;
  if (!v25)
  {
    do
    {
      v24 = (char **)v24[2];
      v23 = v24 != 0;
    }
    while (v24 != &WebCore::JSCSSNumericValue::s_info && v24 != 0);
  }
  if (!v23 || (v27 = *(_QWORD *)(v21 + 24)) == 0)
  {
LABEL_26:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v71, 1, "y", 2, "CSSTranslate", 13, a8, 0, 0, "CSSNumericValue", 16);
    return 0;
  }
  if ((unint64_t)(v10 - 4) > 0xFFFFFFFFFFFFFFFCLL || (v28 = *(_QWORD *)(a2 + 64), v28 == 10))
  {
    v29 = 0;
    ++*(_DWORD *)(v20 + 8);
    v69 = (_DWORD *)v27;
    v70 = (_DWORD *)v20;
    ++*(_DWORD *)(v27 + 8);
  }
  else
  {
    v71 = (uint64_t (***)(WebCore::CSSTranslate *__hidden, WTF::StringBuilder *))v9;
    if ((v28 & 0xFFFE000000000002) != 0)
      goto LABEL_74;
    v58 = *(unsigned int *)(16 * (*(_DWORD *)v28 & 0xFFFFFFFE) + 0x4C);
    v59 = *(_DWORD *)(16 * (*(_DWORD *)v28 & 0xFFFFFFFE) + 0x4C) != 0;
    v60 = (char **)(16 * v58);
    if ((_DWORD)v58)
      v61 = v60 == &WebCore::JSCSSNumericValue::s_info;
    else
      v61 = 1;
    if (!v61)
    {
      do
      {
        v60 = (char **)v60[2];
        v59 = v60 != 0;
      }
      while (v60 != &WebCore::JSCSSNumericValue::s_info && v60 != 0);
    }
    if (!v59 || (v29 = *(_QWORD *)(v28 + 24)) == 0)
    {
LABEL_74:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v71, 2, "z", 2, "CSSTranslate", 13, a8, 0, 0, "CSSNumericValue", 16);
      return 0;
    }
    ++*(_DWORD *)(v20 + 8);
    v69 = (_DWORD *)v27;
    v70 = (_DWORD *)v20;
    ++*(_DWORD *)(v27 + 8);
    ++*(_DWORD *)(v29 + 8);
  }
  v68 = (_DWORD *)v29;
  WebCore::CSSTranslate::create((uint64_t *)&v70, (uint64_t *)&v69, (uint64_t *)&v68, (uint64_t)&v71);
  v32 = v68;
  v68 = 0;
  if (v32)
  {
    if (v32[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v32 + 16))(v32);
    else
      --v32[2];
  }
  v33 = v69;
  v69 = 0;
  if (v33)
  {
    if (v33[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v33 + 16))(v33);
    else
      --v33[2];
  }
  v34 = v70;
  v70 = 0;
  if (v34)
  {
    if (v34[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v34 + 16))(v34);
    else
      --v34[2];
  }
  if (*(_DWORD *)(v9 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9))
  {
    v19 = 0;
    v35 = v73;
    goto LABEL_61;
  }
  v35 = v73;
  if (!v73)
  {
    v36 = *(JSC::VM **)(v12 + 40);
    v37 = v71;
    v71 = 0;
    v75 = v37;
    if (*v37 != &off_1E33A00A8)
    {
      __break(0xC471u);
      JUMPOUT(0x1948F7EDCLL);
    }
    v19 = (JSCell *)WebCore::createWrapper<WebCore::CSSTranslate,WebCore::CSSTranslate>(v36, (uint64_t *)&v75, v31);
    v38 = v75;
    v75 = 0;
    if (v38)
    {
      if (*((_DWORD *)v38 + 2) == 1)
        ((void (*)(uint64_t (***)(WebCore::CSSTranslate *__hidden, WTF::StringBuilder *)))(*v38)[4])(v38);
      else
        --*((_DWORD *)v38 + 2);
    }
    goto LABEL_46;
  }
  if (v73 == 1)
  {
    LOBYTE(v75) = (_BYTE)v71;
    v65 = v72;
    v72 = 0;
    v76 = v65;
    if (!*(_QWORD *)(v9 + 16))
    {
      WebCore::propagateExceptionSlowPath(this, &v74, (unsigned __int8 *)&v75);
      v65 = v76;
    }
    v76 = 0;
    if (v65)
    {
      if (*(_DWORD *)v65 == 2)
        WTF::StringImpl::destroy(v65, v30);
      else
        *(_DWORD *)v65 -= 2;
    }
    v19 = 0;
LABEL_46:
    if (*(_DWORD *)(v9 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9) & 1) != 0)
    {
      v19 = 0;
      goto LABEL_62;
    }
    v39 = *(JSC::JSCell **)(a2 + 40);
    if (((unint64_t)v39 & 0xFFFE000000000002) != 0)
      goto LABEL_60;
    Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v39);
    if (!Object)
      goto LABEL_60;
    v42 = Object;
    if (Object == *(JSC::JSGlobalObject **)(a2 + 24))
      goto LABEL_60;
    v43 = (JSC::VM *)*((_QWORD *)this + 7);
    FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(this, Object, v41);
    if (*((_DWORD *)v43 + 20))
    {
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v43) & 1) != 0)
        goto LABEL_60;
    }
    v47 = *((_QWORD *)FunctionRealm + 412);
    if (v47)
    {
      v48 = *(_DWORD *)(v47 - 8);
      v49 = ((unint64_t)&WebCore::JSCSSTranslate::s_info + ~((_QWORD)&WebCore::JSCSSTranslate::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSTranslate::s_info + ~((_QWORD)&WebCore::JSCSSTranslate::s_info << 32)) >> 22);
      v50 = 9 * ((v49 + ~(v49 << 13)) ^ ((v49 + ~(v49 << 13)) >> 8));
      v51 = (v50 ^ (v50 >> 15)) + ~((v50 ^ (v50 >> 15)) << 27);
      v52 = v48 & ((v51 >> 31) ^ v51);
      v53 = *(char ***)(v47 + 16 * v52);
      if (v53 == &WebCore::JSCSSTranslate::s_info)
      {
LABEL_56:
        v44 = *(JSC::JSObject **)(v47 + 16 * v52 + 8);
        if (v44)
        {
LABEL_58:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(this, v42, v44, v45);
          if (!*((_DWORD *)v43 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v43) & 1) == 0)
            JSC::JSObject::setStructure(v19, v43, SubclassStructure);
LABEL_60:
          if (*(_DWORD *)(v9 + 80))
          {
            if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v9) & 1) != 0)
              v19 = 0;
          }
LABEL_61:
          if (v35 != -1)
LABEL_62:
            ((void (*)(uint64_t (****)(WebCore::CSSTranslate *__hidden, WTF::StringBuilder *), uint64_t (****)(WebCore::CSSTranslate *__hidden, WTF::StringBuilder *)))off_1E3248648[v35])(&v75, &v71);
          return v19;
        }
      }
      else
      {
        v54 = 1;
        while (v53)
        {
          v52 = ((_DWORD)v52 + v54) & v48;
          v53 = *(char ***)(v47 + 16 * v52);
          ++v54;
          if (v53 == &WebCore::JSCSSTranslate::s_info)
            goto LABEL_56;
        }
      }
    }
    Prototype = (JSC::JSCell *)WebCore::JSCSSTranslate::createPrototype(v43, FunctionRealm, v44);
    Structure = WebCore::JSCSSTranslate::createStructure((uint64_t *)v43, (uint64_t)FunctionRealm, Prototype);
    v44 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, Structure, (uint64_t)&WebCore::JSCSSTranslate::s_info);
    goto LABEL_58;
  }
  v66 = std::__throw_bad_variant_access[abi:sn180100]();
  return (JSCell *)WebCore::JSCSSTranslate::analyzeHeap(v66, v67);
}

uint64_t WebCore::JSCSSTranslate::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSTransformComponent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSCSSTranslate::createPrototype(WebCore::JSCSSTranslate *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;
  unint64_t v18;
  JSC::Structure *v19;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSCSSTransformComponent::s_info
      + ~((_QWORD)&WebCore::JSCSSTransformComponent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSTransformComponent::s_info
                                                                      + ~((_QWORD)&WebCore::JSCSSTransformComponent::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSCSSTransformComponent::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSCSSTransformComponent::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSCSSTransformComponentPrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSCSSTransformComponentPrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSCSSTransformComponent::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSCSSTransformComponent::s_info);
  }
  v18 = WebCore::JSCSSTranslatePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v13 + 48));
  *(_DWORD *)(v18 + 16) |= 0x80000u;
  return WebCore::JSCSSTranslatePrototype::create(this, a2, v18, v19);
}

uint64_t WebCore::JSCSSTranslatePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSTranslatePrototype::create(WebCore::JSCSSTranslatePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSCSSTranslate::s_info, &WebCore::JSCSSTranslatePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSTranslate>,(WebCore::DOMConstructorID)410>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3280);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSTransformComponent>,(WebCore::DOMConstructorID)408>(a1, a2);
  v7 = v6;
  LODWORD(v33) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v33, &WebCore::JSDOMConstructor<WebCore::JSCSSTranslate>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v32);
    v10[2848] = v2 + (int)v32;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000002, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v33);
  v14 = v33;
  v33 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v33);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSTranslate::s_info + ~((_QWORD)&WebCore::JSCSSTranslate::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSTranslate::s_info + ~((_QWORD)&WebCore::JSCSSTranslate::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSTranslate::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSTranslate::s_info)
          goto LABEL_20;
      }
    }
  }
  Prototype = (JSC::JSCell *)WebCore::JSCSSTranslate::createPrototype((WebCore::JSCSSTranslate *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSTranslate::createStructure((uint64_t *)a1, a2, Prototype);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSCSSTranslate::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v26 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v29, 14, (uint64_t)&v33);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3280) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSTranslateConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSTranslatePrototype::s_info != (char **)(16
                                                            * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSTranslate>,(WebCore::DOMConstructorID)410>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsCSSTranslate_x(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::CSSStyleValue>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 16));
}

uint64_t WebCore::setJSCSSTranslate_x(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  uint64_t v15;
  _DWORD *v16;
  uint64_t v17;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSCSSTranslate::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSCSSTranslate::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  v17 = *(_QWORD *)(a1 + 56);
  if ((a3 & 0xFFFE000000000002) != 0)
    goto LABEL_23;
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSCSSNumericValue::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSCSSNumericValue::s_info && v11 != 0);
  }
  if (v10 && (v15 = *(_QWORD *)(a3 + 24)) != 0)
  {
    ++*(_DWORD *)(v15 + 8);
    v16 = *(_DWORD **)(v8 + 16);
    *(_QWORD *)(v8 + 16) = v15;
    if (v16)
    {
      if (v16[2] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v16 + 16))(v16);
      else
        --v16[2];
    }
    return 1;
  }
  else
  {
LABEL_23:
    WebCore::throwAttributeTypeError(a1, (int)&v17, "CSSTranslate", 13, "x", 2, "CSSNumericValue", 16);
    return 0;
  }
}

unint64_t WebCore::jsCSSTranslate_y(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::CSSStyleValue>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 24));
}

uint64_t WebCore::setJSCSSTranslate_y(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  uint64_t v15;
  _DWORD *v16;
  uint64_t v17;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSCSSTranslate::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSCSSTranslate::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  v17 = *(_QWORD *)(a1 + 56);
  if ((a3 & 0xFFFE000000000002) != 0)
    goto LABEL_23;
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSCSSNumericValue::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSCSSNumericValue::s_info && v11 != 0);
  }
  if (v10 && (v15 = *(_QWORD *)(a3 + 24)) != 0)
  {
    ++*(_DWORD *)(v15 + 8);
    v16 = *(_DWORD **)(v8 + 24);
    *(_QWORD *)(v8 + 24) = v15;
    if (v16)
    {
      if (v16[2] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v16 + 16))(v16);
      else
        --v16[2];
    }
    return 1;
  }
  else
  {
LABEL_23:
    WebCore::throwAttributeTypeError(a1, (int)&v17, "CSSTranslate", 13, "y", 2, "CSSNumericValue", 16);
    return 0;
  }
}

unint64_t WebCore::jsCSSTranslate_z(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::CSSStyleValue>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(*(_QWORD *)(a2 + 24) + 32));
}

BOOL WebCore::setJSCSSTranslate_z(JSC *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  uint64_t v17;
  int v18;
  uint8x8_t v19;
  uint64_t v20;
  uint64_t v21;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  _DWORD *v25;
  JSC::VM *v26;
  uint64_t v27;
  WTF::StringImpl *v28;

  v4 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSTranslate::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSTranslate::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v26 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v27 = v4;
  if ((a3 & 0xFFFE000000000002) != 0)
    goto LABEL_23;
  v11 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSCSSNumericValue::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSCSSNumericValue::s_info && v13 != 0);
  }
  if (v12 && (v17 = *(_QWORD *)(a3 + 24)) != 0)
  {
    v18 = *(_DWORD *)(v17 + 8);
    *(_DWORD *)(v17 + 8) = v18 + 1;
    if (*(unsigned __int8 *)(v17 + 68) != 255)
      goto LABEL_36;
    v19 = (uint8x8_t)vcnt_s8((int8x8_t)(vaddvq_s32((int32x4_t)vbicq_s8((int8x16_t)xmmword_1968BCEF0, (int8x16_t)vceqzq_s32((int32x4_t)(*(_OWORD *)(v17 + 40) & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL))))) & 0xF));
    v19.i16[0] = vaddlv_u8(v19);
    v20 = v19.u32[0];
    if ((*(_DWORD *)(v17 + 56) & 0x7FFFFFFF) != 0)
      v20 = v19.u32[0] + 1;
    v21 = (*(_DWORD *)(v17 + 64) & 0x7FFFFFFF) != 0
        ? ((*(_DWORD *)(v17 + 60) & 0x7FFFFFFF) != 0) + 1
        : (*(_DWORD *)(v17 + 60) & 0x7FFFFFFF) != 0;
    if (v20 + v21 != 1 || (*(_OWORD *)(v17 + 40) | 0x80000000) == 0x80000000)
    {
LABEL_36:
      if (v18)
        *(_DWORD *)(v17 + 8) = v18;
      else
        (*(void (**)(uint64_t))(*(_QWORD *)v17 + 16))(v17);
      LOBYTE(v27) = 33;
      v28 = 0;
      if (!*(_QWORD *)(v4 + 16))
      {
        WebCore::propagateExceptionSlowPath(a1, &v26, (unsigned __int8 *)&v27);
        v24 = v28;
        v28 = 0;
        if (v24)
        {
          if (*(_DWORD *)v24 == 2)
            WTF::StringImpl::destroy(v24, v23);
          else
            *(_DWORD *)v24 -= 2;
        }
      }
    }
    else
    {
      v25 = *(_DWORD **)(v10 + 32);
      *(_QWORD *)(v10 + 32) = v17;
      if (v25)
      {
        if (v25[2] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v25 + 16))(v25);
        else
          --v25[2];
      }
    }
    return 1;
  }
  else
  {
LABEL_23:
    WebCore::throwAttributeTypeError((int)a1, (int)&v27, "CSSTranslate", 13, "z", 2, "CSSNumericValue", 16);
    return 0;
  }
}

uint64_t WebCore::JSCSSTranslate::subspaceForImpl(WebCore::JSCSSTranslate *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3360);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3360))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3360);
    *(_QWORD *)(v8 + 3360) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3360);
  *(_QWORD *)(v3 + 3360) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::createWrapper<WebCore::CSSTranslate,WebCore::CSSTranslate>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSCSSTranslate *v15;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  _QWORD *Allocator;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (v6)
  {
    v7 = *(_DWORD *)(v6 - 8);
    v8 = ((unint64_t)&WebCore::JSCSSTranslate::s_info + ~((_QWORD)&WebCore::JSCSSTranslate::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSTranslate::s_info + ~((_QWORD)&WebCore::JSCSSTranslate::s_info << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(char ***)(v6 + 16 * v11);
    if (v12 == &WebCore::JSCSSTranslate::s_info)
    {
LABEL_6:
      v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
      if (v14)
        goto LABEL_8;
    }
    else
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(char ***)(v6 + 16 * v11);
        ++v13;
        if (v12 == &WebCore::JSCSSTranslate::s_info)
          goto LABEL_6;
      }
    }
  }
  v15 = (WebCore::JSCSSTranslate *)*((_QWORD *)a1 + 7);
  Prototype = (JSC::JSCell *)WebCore::JSCSSTranslate::createPrototype(v15, a1, a3);
  Structure = WebCore::JSCSSTranslate::createStructure((uint64_t *)v15, (uint64_t)a1, Prototype);
  v14 = WebCore::cacheDOMStructure((JSCell *)a1, Structure, (uint64_t)&WebCore::JSCSSTranslate::s_info);
LABEL_8:
  v18 = WebCore::JSCSSTranslate::create(v14, a1, a2);
  v19 = v18;
  v20 = *((_QWORD *)a1 + 415);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSTransformComponent *)::owner = (uint64_t)&off_1E324B1D0;
  }
  v21 = (uint64_t *)(v20 + 32);
  v28 = v5;
  if (v18)
  {
    v24 = v20;
    if ((v18 & 8) != 0)
      v25 = (v18 - 112) | 1;
    else
      v25 = v18 & 0xFFFFFFFFFFFFC000;
    if ((v25 & 1) != 0)
      v26 = v25 + 47;
    else
      v26 = *(_QWORD *)v25 + 32;
    Allocator = *(_QWORD **)(v26 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v26 + 16) = *Allocator;
    *Allocator = v19;
    Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::CSSTransformComponent *)::owner;
    Allocator[2] = v24;
  }
  else
  {
    Allocator = 0;
  }
  v27 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>(v21, &v28, (uint64_t *)&v27);
  if (v27)
    v27[1] = 3;
  return v19;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSCSSUnitValue>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  double v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WebCore::JSDOMGlobalObject *v11;
  int v12;
  JSC::VM *v13;
  uint64_t v14;
  JSCell *v15;
  _DWORD *v16;
  JSC::JSCell *v17;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v19;
  JSC::JSGlobalObject *v20;
  JSC::VM *v21;
  JSC::JSObject *v22;
  JSC::Structure *v23;
  JSC::VM *FunctionRealm;
  uint64_t v25;
  unsigned int v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char **v31;
  int v32;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  unint64_t SubclassStructure;
  JSValue v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  JSValue v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  int v44[2];
  WTF::StringImpl *v45;
  int v46;
  WTF::StringImpl *v47;
  int v48;
  _DWORD *v49;
  WTF::StringImpl *v50;

  v3 = *((_QWORD *)a1 + 7);
  if ((unint64_t)(*(int *)(a2 + 32) - 1) <= 1)
  {
    v37.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException((JSC::VM *)v3, a1, v37);
  }
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)v44 = v6;
  v49 = (_DWORD *)v3;
  if (v6 >= 0xFFFE000000000000)
  {
    v7 = (double)(int)v6;
  }
  else if (v6 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v44, a1);
    v7 = v41;
  }
  else
  {
    *(_QWORD *)&v7 = v6 - 0x2000000000000;
  }
  if (*(_DWORD *)(v3 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v7 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  WebCore::valueToUSVString(a1, *(_QWORD *)(a2 + 56), (uint64_t)&v47);
  v8 = v48;
  if (v48)
  {
    v15 = 0;
LABEL_34:
    if (v8 != -1)
      ((void (*)(int *, WTF::StringImpl **))off_1E3238AF8[v8])(v44, &v47);
    return v15;
  }
  v9 = v47;
  v47 = 0;
  v49 = v9;
  WebCore::CSSUnitValue::create((WebCore::CSSUnitValue *)&v49, v7, (uint64_t)v44);
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v10);
    else
      *(_DWORD *)v9 -= 2;
  }
  if (*(_DWORD *)(v3 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3))
  {
    v15 = 0;
    v12 = v46;
    goto LABEL_31;
  }
  v12 = v46;
  if (!v46)
  {
    v13 = *(JSC::VM **)(v5 + 40);
    v14 = *(_QWORD *)v44;
    *(_QWORD *)v44 = 0;
    v49 = (_DWORD *)v14;
    v15 = (JSCell *)WebCore::toJSNewlyCreated(v13, (uint64_t *)&v49, v11);
    v16 = v49;
    v49 = 0;
    if (v16)
    {
      if (v16[2] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v16 + 16))(v16);
      else
        --v16[2];
    }
    goto LABEL_16;
  }
  if (v46 == 1)
  {
    v38 = (WTF::StringImpl *)LOBYTE(v44[0]);
    LOBYTE(v49) = v44[0];
    v39 = v45;
    v45 = 0;
    v50 = v39;
    if (!*(_QWORD *)(v3 + 16))
    {
      v40.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v44[0]), (JSC::JSGlobalObject *)&v50);
      JSC::VM::throwException((JSC::VM *)v3, a1, v40);
      v39 = v50;
    }
    v50 = 0;
    if (v39)
    {
      if (*(_DWORD *)v39 == 2)
        WTF::StringImpl::destroy(v39, v38);
      else
        *(_DWORD *)v39 -= 2;
    }
    v15 = 0;
LABEL_16:
    if (*(_DWORD *)(v3 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) != 0)
    {
      v15 = 0;
      goto LABEL_32;
    }
    v17 = *(JSC::JSCell **)(a2 + 40);
    if (((unint64_t)v17 & 0xFFFE000000000002) != 0)
      goto LABEL_30;
    Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v17);
    if (!Object)
      goto LABEL_30;
    v20 = Object;
    if (Object == *(JSC::JSGlobalObject **)(a2 + 24))
      goto LABEL_30;
    v21 = (JSC::VM *)*((_QWORD *)a1 + 7);
    FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, Object, v19);
    if (*((_DWORD *)v21 + 20))
    {
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) != 0)
        goto LABEL_30;
    }
    v25 = *((_QWORD *)FunctionRealm + 412);
    if (v25)
    {
      v26 = *(_DWORD *)(v25 - 8);
      v27 = ((unint64_t)&WebCore::JSCSSUnitValue::s_info + ~((_QWORD)&WebCore::JSCSSUnitValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSUnitValue::s_info + ~((_QWORD)&WebCore::JSCSSUnitValue::s_info << 32)) >> 22);
      v28 = 9 * ((v27 + ~(v27 << 13)) ^ ((v27 + ~(v27 << 13)) >> 8));
      v29 = (v28 ^ (v28 >> 15)) + ~((v28 ^ (v28 >> 15)) << 27);
      v30 = v26 & ((v29 >> 31) ^ v29);
      v31 = *(char ***)(v25 + 16 * v30);
      if (v31 == &WebCore::JSCSSUnitValue::s_info)
      {
LABEL_26:
        v22 = *(JSC::JSObject **)(v25 + 16 * v30 + 8);
        if (v22)
        {
LABEL_28:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v20, v22, v23);
          if (!*((_DWORD *)v21 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) == 0)
            JSC::JSObject::setStructure(v15, v21, SubclassStructure);
LABEL_30:
          if (*(_DWORD *)(v3 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) != 0)
            v15 = 0;
LABEL_31:
          if (v12 == -1)
          {
LABEL_33:
            v8 = v48;
            goto LABEL_34;
          }
LABEL_32:
          ((void (*)(_DWORD **, int *))off_1E32486F8[v12])(&v49, v44);
          goto LABEL_33;
        }
      }
      else
      {
        v32 = 1;
        while (v31)
        {
          v30 = ((_DWORD)v30 + v32) & v26;
          v31 = *(char ***)(v25 + 16 * v30);
          ++v32;
          if (v31 == &WebCore::JSCSSUnitValue::s_info)
            goto LABEL_26;
        }
      }
    }
    Prototype = (JSC::JSCell *)WebCore::JSCSSUnitValue::createPrototype(v21, FunctionRealm, v22);
    Structure = WebCore::JSCSSUnitValue::createStructure((uint64_t *)v21, (uint64_t)FunctionRealm, Prototype);
    v22 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, Structure, (uint64_t)&WebCore::JSCSSUnitValue::s_info);
    goto LABEL_28;
  }
  v42 = std::__throw_bad_variant_access[abi:sn180100]();
  return (JSCell *)WebCore::JSCSSUnitValue::analyzeHeap(v42, v43);
}

uint64_t WebCore::JSCSSUnitValue::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSNumericValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSNumericValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSNumericValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSCSSUnitValue::createPrototype(WebCore::JSCSSUnitValue *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  unint64_t v16;
  JSC::Structure *v17;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSCSSNumericValue::s_info + ~((_QWORD)&WebCore::JSCSSNumericValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSNumericValue::s_info + ~((_QWORD)&WebCore::JSCSSNumericValue::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSCSSNumericValue::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSCSSNumericValue::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Prototype = (JSC::JSCell *)WebCore::JSCSSNumericValue::createPrototype(this, a2, a3);
    Structure = WebCore::JSCSSNumericValue::createStructure((uint64_t *)this, (uint64_t)a2, Prototype);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSCSSNumericValue::s_info);
  }
  v16 = WebCore::JSCSSUnitValuePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v13 + 48));
  *(_DWORD *)(v16 + 16) |= 0x80000u;
  return WebCore::JSCSSUnitValuePrototype::create(this, a2, v16, v17);
}

uint64_t WebCore::JSCSSUnitValuePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSUnitValuePrototype::create(WebCore::JSCSSUnitValuePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSCSSUnitValue::s_info, &WebCore::JSCSSUnitValuePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSUnitValue>,(WebCore::DOMConstructorID)379>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3032);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSNumericValue>,(WebCore::DOMConstructorID)375>(a1, a2);
  v7 = v6;
  LODWORD(v33) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v33, &WebCore::JSDOMConstructor<WebCore::JSCSSUnitValue>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v32);
    v10[2848] = v2 + (int)v32;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000002, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v33);
  v14 = v33;
  v33 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v33);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSUnitValue::s_info + ~((_QWORD)&WebCore::JSCSSUnitValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSUnitValue::s_info + ~((_QWORD)&WebCore::JSCSSUnitValue::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSUnitValue::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSUnitValue::s_info)
          goto LABEL_20;
      }
    }
  }
  Prototype = (JSC::JSCell *)WebCore::JSCSSUnitValue::createPrototype((WebCore::JSCSSUnitValue *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSUnitValue::createStructure((uint64_t *)a1, a2, Prototype);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSCSSUnitValue::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v26 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v29, 14, (uint64_t)&v33);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3032) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSUnitValueConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSUnitValuePrototype::s_info != (char **)(16
                                                            * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSUnitValue>,(WebCore::DOMConstructorID)379>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsCSSUnitValue_value(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;

  v2 = *(double *)(*(_QWORD *)(a2 + 24) + 72);
  if ((*(_QWORD *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v3 = (int)v2, v2 == (double)(int)v3)
    && ((_DWORD)v3 || (*(_QWORD *)&v2 & 0x8000000000000000) == 0))
  {
    return v3 | 0xFFFE000000000000;
  }
  else
  {
    return *(_QWORD *)&v2 + 0x2000000000000;
  }
}

BOOL WebCore::setJSCSSUnitValue_value(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  double v13;
  JSC::VM *v14;
  unint64_t v15;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSUnitValue::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSUnitValue::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v15 = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v14 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v15, a1);
    v4 = v14;
    v11 = v13;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
  {
    if ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
    {
      *(double *)(v10 + 72) = v11;
      return 1;
    }
    JSC::throwTypeError();
  }
  return 0;
}

uint64_t WebCore::jsCSSUnitValue_unit(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;
  WTF::StringImpl *v14;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 24) + 80);
  if (v3 == 1)
  {
    v4 = 7;
  }
  else if (v3 == 3)
  {
    v4 = 8;
  }
  else
  {
    WebCore::CSSPrimitiveValue::unitTypeString(v3);
  }
  if (!v4)
  {
    v7 = *(_QWORD *)(a1 + 56);
    return *(_QWORD *)(v7 + 41968);
  }
  v5 = (WTF::StringImpl *)(v4 - 1);
  if (v5)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v6 = v14;
    v7 = *(_QWORD *)(a1 + 56);
    if (v14)
      goto LABEL_9;
    return *(_QWORD *)(v7 + 41968);
  }
  v6 = (WTF::StringImpl *)MEMORY[0x1E0CBEF70];
  *MEMORY[0x1E0CBEF70] += 2;
  v7 = *(_QWORD *)(a1 + 56);
LABEL_9:
  v8 = *((_DWORD *)v6 + 1);
  if (v8)
  {
    if (v8 != 1)
    {
LABEL_11:
      v9 = *(_QWORD *)(v7 + 64760);
      if (!v9 || v6 != *(WTF::StringImpl **)(v9 + 8))
        v9 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_14;
    }
    v11 = (unsigned __int8 *)*((_QWORD *)v6 + 1);
    if ((*((_BYTE *)v6 + 16) & 4) != 0)
    {
      v12 = *v11;
    }
    else
    {
      v13 = *(unsigned __int16 *)v11;
      if (v13 > 0xFF)
        goto LABEL_11;
      v12 = v13;
    }
    v9 = *(_QWORD *)(v7 + 8 * v12 + 42216);
  }
  else
  {
    v9 = *(_QWORD *)(v7 + 41968);
  }
LABEL_14:
  if (*(_DWORD *)v6 == 2)
    WTF::StringImpl::destroy(v6, v5);
  else
    *(_DWORD *)v6 -= 2;
  return v9;
}

uint64_t WebCore::JSCSSUnitValue::subspaceForImpl(WebCore::JSCSSUnitValue *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3080);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3080))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3080);
    *(_QWORD *)(v8 + 3080) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3080);
  *(_QWORD *)(v3 + 3080) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::toJSNewlyCreated(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v3;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSCSSUnitValue *v15;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v18;
  uint64_t result;

  v3 = *a2;
  if (*(uint64_t (***)())*a2 == &off_1E339F080)
  {
    v6 = *((_QWORD *)a1 + 412);
    if (v6)
    {
      v7 = *(_DWORD *)(v6 - 8);
      v8 = ((unint64_t)&WebCore::JSCSSUnitValue::s_info + ~((_QWORD)&WebCore::JSCSSUnitValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSUnitValue::s_info + ~((_QWORD)&WebCore::JSCSSUnitValue::s_info << 32)) >> 22);
      v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
      v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
      v11 = v7 & ((v10 >> 31) ^ v10);
      v12 = *(char ***)(v6 + 16 * v11);
      if (v12 == &WebCore::JSCSSUnitValue::s_info)
      {
LABEL_7:
        v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
        if (v14)
        {
LABEL_9:
          v18 = WebCore::JSCSSUnitValue::create(v14, a1, a2);
          WebCore::cacheWrapper<WebCore::CSSKeywordValue,WebCore::JSCSSKeywordValue>(*((_QWORD *)a1 + 415), v3, v18);
          return v18;
        }
      }
      else
      {
        v13 = 1;
        while (v12)
        {
          v11 = ((_DWORD)v11 + v13) & v7;
          v12 = *(char ***)(v6 + 16 * v11);
          ++v13;
          if (v12 == &WebCore::JSCSSUnitValue::s_info)
            goto LABEL_7;
        }
      }
    }
    v15 = (WebCore::JSCSSUnitValue *)*((_QWORD *)a1 + 7);
    Prototype = (JSC::JSCell *)WebCore::JSCSSUnitValue::createPrototype(v15, a1, a3);
    Structure = WebCore::JSCSSUnitValue::createStructure((uint64_t *)v15, (uint64_t)a1, Prototype);
    v14 = WebCore::cacheDOMStructure((JSCell *)a1, Structure, (uint64_t)&WebCore::JSCSSUnitValue::s_info);
    goto LABEL_9;
  }
  result = 282;
  __break(0xC471u);
  return result;
}

{
  uint64_t v3;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSCSSUnparsedValue *v15;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v18;
  uint64_t result;

  v3 = *a2;
  if (*(uint64_t (***)())*a2 == &off_1E339F0D8)
  {
    v6 = *((_QWORD *)a1 + 412);
    if (v6)
    {
      v7 = *(_DWORD *)(v6 - 8);
      v8 = ((unint64_t)&WebCore::JSCSSUnparsedValue::s_info
          + ~((_QWORD)&WebCore::JSCSSUnparsedValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSUnparsedValue::s_info
                                                                     + ~((_QWORD)&WebCore::JSCSSUnparsedValue::s_info << 32)) >> 22);
      v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
      v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
      v11 = v7 & ((v10 >> 31) ^ v10);
      v12 = *(char ***)(v6 + 16 * v11);
      if (v12 == &WebCore::JSCSSUnparsedValue::s_info)
      {
LABEL_7:
        v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
        if (v14)
        {
LABEL_9:
          v18 = WebCore::JSCSSUnparsedValue::create(v14, a1, a2);
          WebCore::cacheWrapper<WebCore::CSSKeywordValue,WebCore::JSCSSKeywordValue>(*((_QWORD *)a1 + 415), v3, v18);
          return v18;
        }
      }
      else
      {
        v13 = 1;
        while (v12)
        {
          v11 = ((_DWORD)v11 + v13) & v7;
          v12 = *(char ***)(v6 + 16 * v11);
          ++v13;
          if (v12 == &WebCore::JSCSSUnparsedValue::s_info)
            goto LABEL_7;
        }
      }
    }
    v15 = (WebCore::JSCSSUnparsedValue *)*((_QWORD *)a1 + 7);
    Prototype = (JSC::JSCell *)WebCore::JSCSSUnparsedValue::createPrototype(v15, a1, a3);
    Structure = WebCore::JSCSSUnparsedValue::createStructure((uint64_t *)v15, (uint64_t)a1, Prototype);
    v14 = WebCore::cacheDOMStructure((JSCell *)a1, Structure, (uint64_t)&WebCore::JSCSSUnparsedValue::s_info);
    goto LABEL_9;
  }
  result = 404;
  __break(0xC471u);
  return result;
}

{
  uint64_t v3;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSExtendableEvent *v15;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v18;
  uint64_t result;

  v3 = *a2;
  if (*(void (***)(WebCore::ExtendableEvent *__hidden))*a2 == off_1E347DF20)
  {
    v6 = *((_QWORD *)a1 + 412);
    if (v6)
    {
      v7 = *(_DWORD *)(v6 - 8);
      v8 = ((unint64_t)&WebCore::JSExtendableEvent::s_info + ~((_QWORD)&WebCore::JSExtendableEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSExtendableEvent::s_info + ~((_QWORD)&WebCore::JSExtendableEvent::s_info << 32)) >> 22);
      v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
      v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
      v11 = v7 & ((v10 >> 31) ^ v10);
      v12 = *(char ***)(v6 + 16 * v11);
      if (v12 == &WebCore::JSExtendableEvent::s_info)
      {
LABEL_7:
        v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
        if (v14)
        {
LABEL_9:
          v18 = WebCore::JSExtendableEvent::create(v14, a1, a2);
          WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*((_QWORD *)a1 + 415), v3, v18);
          return v18;
        }
      }
      else
      {
        v13 = 1;
        while (v12)
        {
          v11 = ((_DWORD)v11 + v13) & v7;
          v12 = *(char ***)(v6 + 16 * v11);
          ++v13;
          if (v12 == &WebCore::JSExtendableEvent::s_info)
            goto LABEL_7;
        }
      }
    }
    v15 = (WebCore::JSExtendableEvent *)*((_QWORD *)a1 + 7);
    Prototype = (JSC::JSCell *)WebCore::JSExtendableEvent::createPrototype(v15, a1, a3);
    Structure = WebCore::JSExtendableEvent::createStructure((uint64_t *)v15, (uint64_t)a1, Prototype);
    v14 = WebCore::cacheDOMStructure((JSCell *)a1, Structure, (uint64_t)&WebCore::JSExtendableEvent::s_info);
    goto LABEL_9;
  }
  result = 263;
  __break(0xC471u);
  return result;
}

{
  uint64_t v3;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSFetchEvent *v15;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v18;
  uint64_t result;

  v3 = *a2;
  if (*(void (***)(WebCore::FetchEvent *__hidden))*a2 == off_1E347E0B0)
  {
    v6 = *((_QWORD *)a1 + 412);
    if (v6)
    {
      v7 = *(_DWORD *)(v6 - 8);
      v8 = ((unint64_t)&WebCore::JSFetchEvent::s_info + ~((_QWORD)&WebCore::JSFetchEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSFetchEvent::s_info + ~((_QWORD)&WebCore::JSFetchEvent::s_info << 32)) >> 22);
      v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
      v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
      v11 = v7 & ((v10 >> 31) ^ v10);
      v12 = *(char ***)(v6 + 16 * v11);
      if (v12 == &WebCore::JSFetchEvent::s_info)
      {
LABEL_7:
        v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
        if (v14)
        {
LABEL_9:
          v18 = WebCore::JSFetchEvent::create(v14, a1, a2);
          WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*((_QWORD *)a1 + 415), v3, v18);
          return v18;
        }
      }
      else
      {
        v13 = 1;
        while (v12)
        {
          v11 = ((_DWORD)v11 + v13) & v7;
          v12 = *(char ***)(v6 + 16 * v11);
          ++v13;
          if (v12 == &WebCore::JSFetchEvent::s_info)
            goto LABEL_7;
        }
      }
    }
    v15 = (WebCore::JSFetchEvent *)*((_QWORD *)a1 + 7);
    Prototype = (JSC::JSCell *)WebCore::JSFetchEvent::createPrototype(v15, a1, a3);
    Structure = WebCore::JSFetchEvent::createStructure((uint64_t *)v15, (uint64_t)a1, Prototype);
    v14 = WebCore::cacheDOMStructure((JSCell *)a1, Structure, (uint64_t)&WebCore::JSFetchEvent::s_info);
    goto LABEL_9;
  }
  result = 474;
  __break(0xC471u);
  return result;
}

uint64_t WebCore::wrap<WebCore::CSSUnitValue>(int a1, JSC::VM *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _DWORD *v16;

  v3 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v3 + 48))
  {
    v8 = *(_QWORD *)(v3 + 32);
    if (v8)
    {
      v9 = *(_DWORD *)(v8 - 8);
      v10 = (~(a3 << 32) + a3) ^ ((unint64_t)(~(a3 << 32) + a3) >> 22);
      v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
      v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
      v13 = v9 & ((v12 >> 31) ^ v12);
      v14 = *(_QWORD *)(v8 + 16 * v13);
      if (v14 == a3)
      {
LABEL_15:
        v4 = *(_QWORD *)(v8 + 16 * v13 + 8);
        if (v4)
          goto LABEL_3;
      }
      else
      {
        v15 = 1;
        while (v14)
        {
          v13 = ((_DWORD)v13 + v15) & v9;
          v14 = *(_QWORD *)(v8 + 16 * v13);
          ++v15;
          if (v14 == a3)
            goto LABEL_15;
        }
      }
    }
  }
  else
  {
    v4 = *(_QWORD *)(a3 + 16);
    if (v4)
    {
LABEL_3:
      if ((*(_BYTE *)(v4 + 8) & 3) == 0)
      {
        v5 = *(_QWORD *)v4;
        if (*(_QWORD *)v4)
          return v5;
      }
    }
  }
  ++*(_DWORD *)(a3 + 8);
  v16 = (_DWORD *)a3;
  v5 = WebCore::toJSNewlyCreated(a2, (uint64_t *)&v16, (WebCore::JSDOMGlobalObject *)a3);
  v6 = v16;
  v16 = 0;
  if (v6)
  {
    if (v6[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v6 + 16))(v6);
    else
      --v6[2];
  }
  return v5;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSCSSUnparsedValue>::construct(JSC *this, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  JSValue v7;
  int i;
  unsigned int v9;
  uint64_t IndexQuickly;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  JSCell *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int *v20;
  uint64_t v21;
  uint64_t v22;
  WebCore::JSDOMGlobalObject *v23;
  JSC::JSCell *v24;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v26;
  JSC::JSGlobalObject *v27;
  JSC::VM *v28;
  JSC::JSObject *v29;
  JSC::Structure *v30;
  JSC::VM *FunctionRealm;
  uint64_t v32;
  unsigned int v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char **v38;
  int v39;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  unint64_t SubclassStructure;
  WTF *v43;
  JSValue v45;
  int hasExceptionsAfterHandlingTraps;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  WTF::StringImpl *v50[2];
  int v51;
  uint64_t v52;
  WTF *v53;
  uint64_t v54;
  char v55;

  v3 = *((_QWORD *)this + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v45.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException((JSC::VM *)v3, this, v45);
  }
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 48);
  v52 = *((_QWORD *)this + 7);
  if ((v6 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v6 + 5) <= 0x16u)
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    JSC::throwTypeError();
    v12 = v50[0];
    v50[0] = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 2)
        WTF::StringImpl::destroy(v12, v11);
      else
        *(_DWORD *)v12 -= 2;
    }
    v13 = 0;
    v14 = 1;
    v51 = 1;
    goto LABEL_56;
  }
  v53 = 0;
  v54 = 0;
  if (JSC::getIterationMode() == 2)
  {
    for (i = 1; ; ++i)
    {
      v9 = (*(_BYTE *)(v6 + 4) & 0xE) != 0 ? *(_DWORD *)(*(_QWORD *)(v6 + 8) - 8) : 0;
      if (i - 1 >= v9)
        break;
      IndexQuickly = JSC::JSObject::tryGetIndexQuickly((JSC::JSObject *)v6, i - 1, 0);
      if (!IndexQuickly)
        IndexQuickly = JSC::JSObject::get((JSC::JSObject *)v6, this, (i - 1));
      if (*(_DWORD *)(v3 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) != 0)
        break;
      WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLUnion<WebCore::IDLUSVString,WebCore::IDLInterface<WebCore::CSSOMVariableReferenceValue>>>::convert(this, IndexQuickly, (uint64_t)&v53);
      if (*(_QWORD *)(v3 + 16))
      {
        v18 = JSC::JSArrayIterator::create();
        v19 = i | 0xFFFE000000000000;
        if (i < 0)
          v19 = COERCE__INT64((double)i) + 0x2000000000000;
        *(_QWORD *)(v18 + 16) = v19;
        goto LABEL_35;
      }
    }
  }
  else
  {
    JSC::iteratorForIterable(this, (JSC::JSGlobalObject *)v6, v7);
    if (!*(_DWORD *)(v3 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) == 0)
    {
      while (1)
      {
        v15 = JSC::iteratorStep();
        if (*(_QWORD *)(v3 + 16) || v15 == 6)
          break;
        v17 = JSC::iteratorValue();
        if (*(_DWORD *)(v3 + 80))
        {
          if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) != 0)
            break;
        }
        WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLUnion<WebCore::IDLUSVString,WebCore::IDLInterface<WebCore::CSSOMVariableReferenceValue>>>::convert(this, v17, (uint64_t)&v53);
        if (*(_QWORD *)(v3 + 16))
        {
LABEL_35:
          JSC::iteratorClose();
          break;
        }
      }
    }
  }
  if (*(_DWORD *)(v3 + 80))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3);
    v20 = (unsigned int *)v53;
    if (hasExceptionsAfterHandlingTraps)
    {
      v51 = 1;
      if (HIDWORD(v54))
      {
        v48 = 16 * HIDWORD(v54);
        do
        {
          v49 = v20[2];
          if ((_DWORD)v49 != -1)
            ((void (*)(char *, unsigned int *))off_1E32487E0[v49])(&v55, v20);
          v20[2] = -1;
          v20 += 4;
          v48 -= 16;
        }
        while (v48);
        v20 = (unsigned int *)v53;
      }
      if (v20)
      {
        v53 = 0;
        LODWORD(v54) = 0;
        WTF::fastFree((WTF *)v20, v47);
      }
      v13 = 0;
      v14 = 1;
      goto LABEL_56;
    }
  }
  else
  {
    v20 = (unsigned int *)v53;
  }
  v51 = 0;
  v21 = v54;
  v50[0] = 0;
  v50[1] = 0;
  v22 = bmalloc::api::isoAllocate();
  *(_DWORD *)(v22 + 8) = 1;
  *(_QWORD *)(v22 + 16) = 0;
  *(_QWORD *)(v22 + 24) = 0;
  *(_QWORD *)v22 = &off_1E339F0D8;
  *(_QWORD *)(v22 + 32) = 0;
  *(_QWORD *)(v22 + 40) = v20;
  *(_QWORD *)(v22 + 48) = v21;
  v53 = (WTF *)v22;
  v13 = (JSCell *)WebCore::toJSNewlyCreated(*(JSC::VM **)(v5 + 40), (uint64_t *)&v53, v23);
  v24 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v24 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v24);
    if (Object)
    {
      v27 = Object;
      if (Object != *(JSC::JSGlobalObject **)(a2 + 24))
      {
        v28 = (JSC::VM *)*((_QWORD *)this + 7);
        FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(this, Object, v26);
        if (!*((_DWORD *)v28 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v28) & 1) == 0)
        {
          v32 = *((_QWORD *)FunctionRealm + 412);
          if (v32)
          {
            v33 = *(_DWORD *)(v32 - 8);
            v34 = ((unint64_t)&WebCore::JSCSSUnparsedValue::s_info
                 + ~((_QWORD)&WebCore::JSCSSUnparsedValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSUnparsedValue::s_info
                                                                            + ~((_QWORD)&WebCore::JSCSSUnparsedValue::s_info << 32)) >> 22);
            v35 = 9 * ((v34 + ~(v34 << 13)) ^ ((v34 + ~(v34 << 13)) >> 8));
            v36 = (v35 ^ (v35 >> 15)) + ~((v35 ^ (v35 >> 15)) << 27);
            v37 = v33 & ((v36 >> 31) ^ v36);
            v38 = *(char ***)(v32 + 16 * v37);
            if (v38 == &WebCore::JSCSSUnparsedValue::s_info)
            {
LABEL_47:
              v29 = *(JSC::JSObject **)(v32 + 16 * v37 + 8);
              if (v29)
              {
LABEL_49:
                SubclassStructure = JSC::InternalFunction::createSubclassStructure(this, v27, v29, v30);
                if (!*((_DWORD *)v28 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v28) & 1) == 0)
                  JSC::JSObject::setStructure(v13, v28, SubclassStructure);
                goto LABEL_51;
              }
            }
            else
            {
              v39 = 1;
              while (v38)
              {
                v37 = ((_DWORD)v37 + v39) & v33;
                v38 = *(char ***)(v32 + 16 * v37);
                ++v39;
                if (v38 == &WebCore::JSCSSUnparsedValue::s_info)
                  goto LABEL_47;
              }
            }
          }
          Prototype = (JSC::JSCell *)WebCore::JSCSSUnparsedValue::createPrototype(v28, FunctionRealm, v29);
          Structure = WebCore::JSCSSUnparsedValue::createStructure((uint64_t *)v28, (uint64_t)FunctionRealm, Prototype);
          v29 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, Structure, (uint64_t)&WebCore::JSCSSUnparsedValue::s_info);
          goto LABEL_49;
        }
      }
    }
  }
LABEL_51:
  if (*(_DWORD *)(v3 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v3) & 1) != 0)
    v13 = 0;
  v43 = v53;
  v53 = 0;
  if (v43)
  {
    if (*((_DWORD *)v43 + 2) == 1)
      (*(void (**)(WTF *))(*(_QWORD *)v43 + 16))(v43);
    else
      --*((_DWORD *)v43 + 2);
  }
  v14 = 0;
LABEL_56:
  ((void (*)(WTF **, WTF::StringImpl **))off_1E3248780[v14])(&v53, v50);
  return v13;
}

uint64_t WebCore::JSCSSUnparsedValue::put(uint64_t a1, JSC::JSGlobalObject *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  int v7;
  JSC::VM *v8;
  _BYTE *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  _BOOL4 v16;
  char **v17;
  BOOL v18;
  _DWORD *v20;
  int v21;
  int v22;
  _DWORD *v23;
  int v24;
  unsigned __int16 *v26;
  uint64_t v27;
  unsigned int v28;
  BOOL v29;
  BOOL v30;
  unsigned int v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  JSValue v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 *v38;
  unsigned int v39;
  char v40[8];
  WTF::StringImpl *v41;
  char v42;
  _DWORD *v43;
  int v44;
  int v45;
  _DWORD *v46;
  int v47;
  WTF::StringImpl *v48;
  int v49;
  uint64_t v50;

  v6 = a1;
  v50 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a5 + 8) != a1)
    return JSC::JSObject::put();
  if (!a3)
    return JSC::JSObject::put();
  v7 = *(_DWORD *)(a3 + 16);
  if ((v7 & 0x20) != 0)
    return JSC::JSObject::put();
  v8 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v9 = *(_BYTE **)(a3 + 8);
  v10 = *(unsigned int *)(a3 + 4);
  if ((v7 & 4) != 0)
  {
    if (!(_DWORD)v10)
      goto LABEL_66;
    v35 = *v9 - 48;
    if (v35 <= 9 && (v10 < 2 || *v9 != 48))
    {
      v37 = v10 - 1;
      v38 = v9 + 1;
      while (1)
      {
        if (!v37)
        {
          if (v35 == -1)
            v14 = 0;
          else
            v14 = v35 & 0xFFFFFF00;
          if (v35 == -1)
            LOBYTE(v10) = 0;
          else
            LOBYTE(v10) = v35;
          if (v35 == -1)
            v36 = 0;
          else
            v36 = 0x100000000;
          goto LABEL_63;
        }
        if (v35 > 0x19999999)
          break;
        v39 = *v38 - 48;
        if (v39 > 9)
          break;
        v14 = 0;
        LOBYTE(v10) = 0;
        v36 = 0;
        v29 = __CFADD__(v39, 10 * v35);
        v35 = v39 + 10 * v35;
        --v37;
        ++v38;
        if (v29)
          goto LABEL_63;
      }
    }
    v14 = 0;
    LOBYTE(v10) = 0;
    goto LABEL_62;
  }
  if (!(_DWORD)v10 || (v11 = *(unsigned __int16 *)v9 - 48, v11 > 9))
  {
LABEL_7:
    v12 = 0;
    LOBYTE(v11) = 0;
LABEL_8:
    v13 = 0;
    goto LABEL_9;
  }
  if (v10 >= 2 && *(_WORD *)v9 == 48)
  {
    v12 = 0;
    goto LABEL_8;
  }
  v26 = (unsigned __int16 *)(v9 + 2);
  v27 = v10 - 1;
  while (v27)
  {
    if (v11 <= 0x19999999)
    {
      v28 = *v26 - 48;
      if (v28 <= 9)
      {
        v29 = __CFADD__(v28, 10 * v11);
        v11 = v28 + 10 * v11;
        ++v26;
        --v27;
        if (!v29)
          continue;
      }
    }
    goto LABEL_7;
  }
  v30 = v11 == -1;
  v31 = v11 & 0xFFFFFF00;
  v12 = 0x100000000;
  if (v11 == -1)
  {
    v12 = 0;
    LOBYTE(v11) = 0;
  }
  if (v30)
    v13 = 0;
  else
    v13 = v31;
LABEL_9:
  v14 = v11;
  if ((v12 & 0x100000000) == 0)
    return JSC::JSObject::put();
  while (1)
  {
    if ((a4 & 0xFFFE000000000002) != 0)
      goto LABEL_23;
    v15 = *(unsigned int *)(16 * (*(_DWORD *)a4 & 0xFFFFFFFE) + 0x4C);
    v16 = *(_DWORD *)(16 * (*(_DWORD *)a4 & 0xFFFFFFFE) + 0x4C) != 0;
    v17 = (char **)(16 * v15);
    if ((_DWORD)v15)
      v18 = v17 == &WebCore::JSCSSOMVariableReferenceValue::s_info;
    else
      v18 = 1;
    if (!v18)
    {
      do
      {
        v17 = (char **)v17[2];
        v16 = v17 != 0;
      }
      while (v17 != &WebCore::JSCSSOMVariableReferenceValue::s_info && v17 != 0);
    }
    if (v16 && (v20 = *(_DWORD **)(a4 + 24)) != 0)
    {
      ++*v20;
      v43 = v20;
      v21 = 1;
      v44 = 1;
      v45 = 0;
    }
    else
    {
LABEL_23:
      WebCore::valueToUSVString(a2, a4, (uint64_t)&v46);
      if (v47)
      {
        v45 = 1;
        if (v47 != -1)
          ((void (*)(char *, _DWORD **))off_1E3238AF8[v47])(v40, &v46);
        v22 = 1;
        goto LABEL_36;
      }
      v23 = v46;
      v46 = 0;
      v43 = v23;
      v44 = 0;
      v45 = 0;
      _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJS9_SB_EEEEEEDcSF_DpT0_((uint64_t)v40, (WTF::StringImpl *)&v46);
      v21 = 0;
    }
    v6 = *(_QWORD *)(v6 + 24);
    v40[0] = 0;
    LODWORD(v41) = -1;
    ((void (*)(_DWORD **, char *, _DWORD **))off_1E3249778[v21])(&v46, v40, &v43);
    LODWORD(v41) = v21;
    WebCore::CSSUnparsedValue::setItem((unsigned int *)v6, v13 | v14, (unint64_t)v40, (uint64_t)&v46);
    if ((_DWORD)v41 != -1)
      ((void (*)(char *, char *))off_1E32487E0[v41])(&v42, v40);
    v24 = v49;
    if (!v49)
      goto LABEL_34;
    if (v49 == 1)
      break;
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_66:
    v14 = 0;
LABEL_62:
    v36 = 0;
LABEL_63:
    v13 = v10;
    if ((v36 & 0x100000000) == 0)
      return JSC::JSObject::put();
  }
  v32 = (WTF::StringImpl *)v47;
  v40[0] = v47;
  v33 = v48;
  v48 = 0;
  v41 = v33;
  if (!*((_QWORD *)v8 + 2))
  {
    v34.super.isa = (Class)WebCore::createDOMException(a2, (JSC::JSGlobalObject *)v47, (JSC::JSGlobalObject *)&v41);
    JSC::VM::throwException(v8, a2, v34);
    v33 = v41;
  }
  v41 = 0;
  if (v33)
  {
    if (*(_DWORD *)v33 == 2)
      WTF::StringImpl::destroy(v33, v32);
    else
      *(_DWORD *)v33 -= 2;
  }
  v24 = v49;
  if (v49 != -1)
LABEL_34:
    ((void (*)(char *, int *))off_1E3249798[v24])(v40, &v47);
  v22 = v45;
  if (v45 == -1)
    return 1;
LABEL_36:
  ((void (*)(_DWORD **, _DWORD **))off_1E32487F0[v22])(&v46, &v43);
  return 1;
}

uint64_t WebCore::JSCSSUnparsedValue::putByIndex(uint64_t a1, JSC::JSGlobalObject *a2, unsigned int a3, uint64_t a4)
{
  JSC::VM *v6;
  uint64_t v8;
  _BOOL4 v9;
  char **v10;
  BOOL v11;
  WTF::StringImpl *v13;
  int v14;
  int v15;
  WTF::StringImpl *v16;
  unsigned int *v17;
  int v18;
  uint64_t v19;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  JSValue v25;
  uint64_t v26;
  char v27[8];
  WTF::StringImpl *v28;
  char v29;
  WTF::StringImpl *v30;
  int v31;
  int v32;
  WTF::StringImpl *v33;
  int v34;
  WTF::StringImpl *v35;
  int v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v6 = (JSC::VM *)*((_QWORD *)a2 + 7);
  if (a3 == -1)
  {
    JSC::Identifier::from();
    v19 = JSC::ordinarySetSlow();
    v22 = v33;
    v33 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, v21);
      else
        *(_DWORD *)v22 -= 2;
    }
    return v19;
  }
  if ((a4 & 0xFFFE000000000002) != 0)
    goto LABEL_15;
  v8 = *(unsigned int *)(16 * (*(_DWORD *)a4 & 0xFFFFFFFE) + 0x4C);
  v9 = *(_DWORD *)(16 * (*(_DWORD *)a4 & 0xFFFFFFFE) + 0x4C) != 0;
  v10 = (char **)(16 * v8);
  if ((_DWORD)v8)
    v11 = v10 == &WebCore::JSCSSOMVariableReferenceValue::s_info;
  else
    v11 = 1;
  if (!v11)
  {
    do
    {
      v10 = (char **)v10[2];
      v9 = v10 != 0;
    }
    while (v10 != &WebCore::JSCSSOMVariableReferenceValue::s_info && v10 != 0);
  }
  if (v9 && (v13 = *(WTF::StringImpl **)(a4 + 24)) != 0)
  {
    ++*(_DWORD *)v13;
    v30 = v13;
    v14 = 1;
    v31 = 1;
    v32 = 0;
  }
  else
  {
LABEL_15:
    WebCore::valueToUSVString(a2, a4, (uint64_t)&v33);
    if (v34)
    {
      v32 = 1;
      if (v34 != -1)
        ((void (*)(char *, WTF::StringImpl **))off_1E3238AF8[v34])(v27, &v33);
      v15 = 1;
      goto LABEL_25;
    }
    v16 = v33;
    v33 = 0;
    v30 = v16;
    v31 = 0;
    v32 = 0;
    _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJS9_SB_EEEEEEDcSF_DpT0_((uint64_t)v27, (WTF::StringImpl *)&v33);
    v14 = 0;
  }
  v17 = *(unsigned int **)(a1 + 24);
  v27[0] = 0;
  LODWORD(v28) = -1;
  ((void (*)(WTF::StringImpl **, char *, WTF::StringImpl **))off_1E3249778[v14])(&v33, v27, &v30);
  LODWORD(v28) = v14;
  WebCore::CSSUnparsedValue::setItem(v17, a3, (unint64_t)v27, (uint64_t)&v33);
  if ((_DWORD)v28 != -1)
    ((void (*)(char *, char *))off_1E32487E0[v28])(&v29, v27);
  v18 = v36;
  if (!v36)
    goto LABEL_23;
  if (v36 == 1)
  {
    v23 = (WTF::StringImpl *)v34;
    v27[0] = v34;
    v24 = v35;
    v35 = 0;
    v28 = v24;
    if (!*((_QWORD *)v6 + 2))
    {
      v25.super.isa = (Class)WebCore::createDOMException(a2, (JSC::JSGlobalObject *)v34, (JSC::JSGlobalObject *)&v28);
      JSC::VM::throwException(v6, a2, v25);
      v24 = v28;
    }
    v28 = 0;
    if (v24)
    {
      if (*(_DWORD *)v24 == 2)
        WTF::StringImpl::destroy(v24, v23);
      else
        *(_DWORD *)v24 -= 2;
    }
    v18 = v36;
    if (v36 == -1)
    {
LABEL_24:
      v15 = v32;
      if (v32 == -1)
        return 1;
LABEL_25:
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E32487F0[v15])(&v33, &v30);
      return 1;
    }
LABEL_23:
    ((void (*)(char *, int *))off_1E3249798[v18])(v27, &v34);
    goto LABEL_24;
  }
  v26 = std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::JSCSSUnparsedValue::deleteProperty(v26);
}

uint64_t WebCore::JSCSSUnparsedValue::deleteProperty(uint64_t a1, WebCore::JSDOMGlobalObject *a2, uint64_t a3)
{
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::JSDOMGlobalObject *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _WORD *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned __int16 *v25;
  uint64_t v26;
  unsigned int v27;
  BOOL v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 *v33;
  unsigned int v34;

  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSDOMGlobalObject::s_info && v6 != 0);
  }
  v9 = *(_QWORD *)(a1 + 24);
  if (v5)
    v10 = a2;
  else
    v10 = 0;
  v11 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v10);
  if (v11)
  {
    v12 = v11;
    if (!*(_BYTE *)(v11 + 274))
    {
      v13 = *(_BYTE **)(v11 + 496);
      if (!v13)
        v13 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v12 - 192));
      if (*(_QWORD *)v13)
      {
        v14 = *(_QWORD *)(*(_QWORD *)v13 + 8);
        if (v14)
        {
          v15 = *(_QWORD *)(v14 + 680);
          if (*(_BYTE *)(v15 + 243))
          {
            if (!*(_BYTE *)(v15 + 242))
              goto LABEL_22;
          }
          else if ((*(_QWORD *)(v15 + 688) & 0x80000) == 0)
          {
            goto LABEL_22;
          }
          if (v13[65])
            return JSC::JSObject::deleteProperty();
        }
      }
    }
  }
LABEL_22:
  if (!a3)
    return JSC::JSObject::deleteProperty();
  v16 = *(_DWORD *)(a3 + 16);
  if ((v16 & 0x20) != 0)
    return JSC::JSObject::deleteProperty();
  v17 = *(_WORD **)(a3 + 8);
  v18 = *(unsigned int *)(a3 + 4);
  if ((v16 & 4) == 0)
  {
    if ((_DWORD)v18 && (v19 = (unsigned __int16)*v17 - 48, v19 <= 9) && (v18 < 2 || *v17 != 48))
    {
      v25 = v17 + 1;
      v26 = v18 - 1;
      while (v26)
      {
        if (v19 <= 0x19999999)
        {
          v27 = *v25 - 48;
          if (v27 <= 9)
          {
            v28 = __CFADD__(v27, 10 * v19);
            v19 = v27 + 10 * v19;
            ++v25;
            --v26;
            if (!v28)
              continue;
          }
        }
        goto LABEL_29;
      }
      v7 = v19 == -1;
      v22 = v19 & 0xFFFFFF00;
      v21 = v19;
      v20 = 0x100000000;
      if (v7)
      {
        v20 = 0;
        v21 = 0;
        v22 = 0;
      }
    }
    else
    {
LABEL_29:
      v20 = 0;
      v21 = 0;
      v22 = 0;
    }
    v23 = v22 | v21;
    if ((v20 & 0x100000000) != 0)
      return *(_DWORD *)(v9 + 52) <= v23;
    return JSC::JSObject::deleteProperty();
  }
  if (!(_DWORD)v18)
  {
    v30 = 0;
    goto LABEL_47;
  }
  v29 = *(unsigned __int8 *)v17 - 48;
  if (v29 > 9 || v18 >= 2 && *(_BYTE *)v17 == 48)
  {
LABEL_46:
    v30 = 0;
    LODWORD(v18) = 0;
LABEL_47:
    v31 = 0;
    goto LABEL_48;
  }
  v32 = v18 - 1;
  v33 = (unsigned __int8 *)v17 + 1;
  while (v32)
  {
    if (v29 > 0x19999999)
      goto LABEL_46;
    v34 = *v33 - 48;
    if (v34 > 9)
      goto LABEL_46;
    v30 = 0;
    LODWORD(v18) = 0;
    v31 = 0;
    v28 = __CFADD__(v34, 10 * v29);
    v29 = v34 + 10 * v29;
    --v32;
    ++v33;
    if (v28)
      goto LABEL_48;
  }
  if (v29 == -1)
    v30 = 0;
  else
    v30 = v29 & 0xFFFFFF00;
  if (v29 == -1)
    LODWORD(v18) = 0;
  else
    LODWORD(v18) = v29;
  if (v29 == -1)
    v31 = 0;
  else
    v31 = 0x100000000;
LABEL_48:
  v23 = v18 | v30;
  if ((v31 & 0x100000000) != 0)
    return *(_DWORD *)(v9 + 52) <= v23;
  return JSC::JSObject::deleteProperty();
}

uint64_t WebCore::JSCSSUnparsedValue::deletePropertyByIndex(WebCore::JSCSSUnparsedValue *this, JSC::JSCell *a2, JSC::JSGlobalObject *a3)
{
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  WebCore::JSDOMGlobalObject *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSDOMGlobalObject::s_info && v8 != 0);
  }
  v11 = *((_QWORD *)this + 3);
  if (v7)
    v12 = a2;
  else
    v12 = 0;
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v12);
  if (!v13)
    return *(_DWORD *)(v11 + 52) <= a3;
  v14 = v13;
  if (*(_BYTE *)(v13 + 274))
    return *(_DWORD *)(v11 + 52) <= a3;
  v15 = *(_BYTE **)(v13 + 496);
  if (!v15)
    v15 = (_BYTE *)WebCore::Document::ensureQuirks((WebCore::Document *)(v14 - 192));
  if (!*(_QWORD *)v15)
    return *(_DWORD *)(v11 + 52) <= a3;
  v16 = *(_QWORD *)(*(_QWORD *)v15 + 8);
  if (!v16)
    return *(_DWORD *)(v11 + 52) <= a3;
  v17 = *(_QWORD *)(v16 + 680);
  if (*(_BYTE *)(v17 + 243))
  {
    if (!*(_BYTE *)(v17 + 242))
      return *(_DWORD *)(v11 + 52) <= a3;
  }
  else if ((*(_QWORD *)(v17 + 688) & 0x80000) == 0)
  {
    return *(_DWORD *)(v11 + 52) <= a3;
  }
  if (!v15[65])
    return *(_DWORD *)(v11 + 52) <= a3;
  return JSC::JSObject::deletePropertyByIndex(this, a2, a3);
}

uint64_t WebCore::JSCSSUnparsedValue::getOwnPropertySlot(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  JSC::VM *v6;
  unint64_t v7;
  int v9;
  _BYTE *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int16 *v19;
  uint64_t v20;
  unsigned int v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  _BYTE *v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  unsigned __int16 *v42;
  uint64_t v43;
  unsigned int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 *v53;
  unsigned int v54;
  uint64_t v55;
  unsigned __int8 *v56;
  unsigned int v57;
  _BYTE v58[8];
  int v59;
  char v60;
  _BYTE v61[8];
  int v62;
  _BYTE v63[40];
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t *v68;
  uint64_t v69;
  unint64_t v70;
  _BYTE *v71;

  v6 = *(JSC::VM **)(a2 + 56);
  if (a3)
  {
    v7 = a3;
    v9 = *(_DWORD *)(a3 + 16);
    if ((v9 & 0x20) != 0)
      goto LABEL_49;
    v10 = *(_BYTE **)(a3 + 8);
    v11 = *(unsigned int *)(a3 + 4);
    if ((v9 & 4) != 0)
      goto LABEL_44;
    if ((_DWORD)v11 && (v12 = *(unsigned __int16 *)v10 - 48, v12 <= 9))
    {
      if (v11 < 2 || *(_WORD *)v10 != 48)
      {
        v19 = (unsigned __int16 *)(v10 + 2);
        v20 = v11 - 1;
        while (v20)
        {
          if (v12 <= 0x19999999)
          {
            v21 = *v19 - 48;
            if (v21 <= 9)
            {
              v22 = __CFADD__(v21, 10 * v12);
              v12 = v21 + 10 * v12;
              ++v19;
              --v20;
              if (!v22)
                continue;
            }
          }
          goto LABEL_6;
        }
        v26 = v12 == -1;
        v14 = v12 & 0xFFFFFF00;
        v13 = 0x100000000;
        if (v12 == -1)
        {
          v13 = 0;
          LOBYTE(v12) = 0;
        }
        if (v26)
          v14 = 0;
LABEL_8:
        v12 = v12;
        if ((v13 & 0x100000000) != 0)
        {
          do
          {
            v15 = v14 | v12;
            v16 = *(_QWORD *)(a1 + 24);
            if (*(_DWORD *)(v16 + 52) <= v15)
              break;
            v17 = *(_QWORD *)(v16 + 40) + 16 * v15;
            LOBYTE(v67) = 0;
            LODWORD(v68) = -1;
            v18 = *(unsigned int *)(v17 + 8);
            if ((_DWORD)v18 == -1)
            {
              v58[0] = 0;
              v59 = -1;
              v60 = 1;
            }
            else
            {
              ((void (*)(_BYTE *, uint64_t **))__const__ZNSt3__116__variant_detail12__visitation6__base14__visit_alt_atB8sn180100IZNS0_6__ctorINS0_8__traitsIJN3WTF6StringENS6_6RefPtrIN7WebCore27CSSOMVariableReferenceValueENS6_12RawPtrTraitsISA_EENS6_21DefaultRefDerefTraitsISA_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISG_LNS0_6_TraitE1EEEEEvRSH_OT_EUlRSP_OT0_E_JSO_SN_EEEDcmSQ_DpOT0____fdiagonal[v18])(v63, &v67);
              LODWORD(v68) = v18;
              v58[0] = 0;
              v59 = -1;
              ((void (*)(_BYTE *, _BYTE *, uint64_t **))__const__ZNSt3__116__variant_detail12__visitation6__base14__visit_alt_atB8sn180100IZNS0_6__ctorINS0_8__traitsIJN3WTF6StringENS6_6RefPtrIN7WebCore27CSSOMVariableReferenceValueENS6_12RawPtrTraitsISA_EENS6_21DefaultRefDerefTraitsISA_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISG_LNS0_6_TraitE1EEEEEvRSH_OT_EUlRSN_OT0_E_JSM_SL_EEEDcmSO_DpOT0____fdiagonal[v18])(v63, v58, &v67);
              v59 = v18;
              v60 = 1;
              if ((_DWORD)v68 != -1)
              {
                ((void (*)(_BYTE *, uint64_t **))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF6StringENS6_6RefPtrIN7WebCore27CSSOMVariableReferenceValueENS6_12RawPtrTraitsISA_EENS6_21DefaultRefDerefTraitsISA_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSI_EEEDcOSJ_DpOT0____fmatrix[v68])(v63, &v67);
                if (!v60)
                {
                  v6 = *(JSC::VM **)(a2 + 56);
                  break;
                }
                LODWORD(v18) = v59;
              }
            }
            v7 = *(_QWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x28);
            v61[0] = 0;
            v62 = -1;
            if ((_DWORD)v18 == -1)
            {
              v23 = -1;
            }
            else
            {
              v23 = v18;
              ((void (*)(uint64_t **, _BYTE *, _BYTE *))off_1E3249788[v18])(&v67, v61, v58);
              v62 = v18;
            }
            LOBYTE(v64) = 0;
            v65 = 0;
            v66 = v23;
            v67 = &v66;
            v68 = &v64;
            v69 = a2;
            v70 = v7;
            v71 = v61;
            _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLUSVStringENS_12IDLInterfaceINS_27CSSOMVariableReferenceValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6StringENSH_6RefPtrIS6_NSH_12RawPtrTraitsIS6_EENSH_21DefaultRefDerefTraitsIS6_EEEEEEEEUlTyvE_JNSF_17integral_constantIlLl0EEENST_IlLl1EEEEEET_SW_((uint64_t)v63, &v67);
            if (v65)
            {
              v24 = v64;
              if (v62 != -1)
                ((void (*)(uint64_t **, _BYTE *))off_1E32487E0[v62])(&v67, v61);
              if (*((_DWORD *)v6 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) != 0)
              {
                v25 = 0;
              }
              else
              {
                *(_QWORD *)a4 = v24;
                *(_DWORD *)(a4 + 16) = 0;
                *(_QWORD *)(a4 + 32) = a1;
                v25 = 1;
                *(_BYTE *)(a4 + 49) = 1;
              }
              if (v60)
              {
                if (v59 != -1)
                  ((void (*)(uint64_t **, _BYTE *))off_1E32487E0[v59])(&v67, v58);
              }
              return v25;
            }
            std::__throw_bad_optional_access[abi:sn180100]();
LABEL_44:
            if ((_DWORD)v11)
            {
              v27 = *v10 - 48;
              if (v27 <= 9 && (v11 < 2 || *v10 != 48))
              {
                v52 = v11 - 1;
                v53 = v10 + 1;
                while (v52)
                {
                  if (v27 > 0x19999999)
                    goto LABEL_46;
                  v54 = *v53 - 48;
                  if (v54 > 9)
                    goto LABEL_46;
                  v12 = 0;
                  LOBYTE(v11) = 0;
                  v28 = 0;
                  v22 = __CFADD__(v54, 10 * v27);
                  v27 = v54 + 10 * v27;
                  --v52;
                  ++v53;
                  if (v22)
                    goto LABEL_48;
                }
                if (v27 == -1)
                  v12 = 0;
                else
                  v12 = v27 & 0xFFFFFF00;
                if (v27 == -1)
                  LOBYTE(v11) = 0;
                else
                  LOBYTE(v11) = v27;
                if (v27 == -1)
                  v28 = 0;
                else
                  v28 = 0x100000000;
                goto LABEL_48;
              }
LABEL_46:
              v12 = 0;
              LOBYTE(v11) = 0;
            }
            else
            {
              v12 = 0;
            }
            v28 = 0;
LABEL_48:
            v14 = v11;
          }
          while ((v28 & 0x100000000) != 0);
        }
LABEL_49:
        if ((v7 >> 4))
        {
          v29 = 16 * (*(_DWORD *)a1 & 0xFFFFFFFE);
          if (((v7 >> 4) & ~*(_DWORD *)(v29 + 0x20)) == 0)
          {
            v30 = JSC::Structure::ensurePropertyTableIfNotEmpty((JSC::Structure *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE)), v6);
            if (v30)
            {
              v67 = (uint64_t *)v7;
              v31 = JSC::PropertyTable::get(v30, (uint64_t *)&v67);
              if ((_DWORD)v31 != -1)
              {
                if ((int)v31 > 63)
                {
                  v38 = *(_QWORD *)(a1 + 8) - 8;
                  v39 = 0x3F00000000 - (v31 << 32);
                }
                else
                {
                  v38 = a1 + 16;
                  v39 = v31 << 32;
                }
                v40 = *(_QWORD *)(v38 + (v39 >> 29));
                if ((v40 & 0xFFFE000000000002) == 0)
                {
                  v41 = *(unsigned __int8 *)(v40 + 5);
                  if (v41 == 6)
                  {
                    v45 = *(_DWORD *)(v29 + 16) & 3;
                    v47 = *(_QWORD *)(v40 + 8);
                    v46 = *(_QWORD *)(v40 + 16);
                    if (MEMORY[0x1E0CBE830] == 16 * *(unsigned int *)(16 * (*(_DWORD *)v40 & 0xFFFFFFFE) + 0x4C))
                    {
                      v49 = *(_QWORD *)(v40 + 24);
                      v48 = *(_QWORD *)(v40 + 32);
                      *(_QWORD *)a4 = v47;
                      *(_QWORD *)(a4 + 8) = v46;
                      *(_DWORD *)(a4 + 16) = HIDWORD(v31);
                      *(_QWORD *)(a4 + 32) = a1;
                      *(_BYTE *)(a4 + 49) = 3;
                      v25 = 1;
                      if (v45 != 2)
                        *(_BYTE *)(a4 + 48) = 1;
                      *(_BYTE *)(a4 + 51) = 1;
                      *(_QWORD *)(a4 + 72) = v49;
                      *(_QWORD *)(a4 + 80) = v48;
                    }
                    else
                    {
                      *(_QWORD *)a4 = v47;
                      *(_QWORD *)(a4 + 8) = v46;
                      *(_DWORD *)(a4 + 16) = HIDWORD(v31);
                      *(_QWORD *)(a4 + 32) = a1;
                      v25 = 1;
                      *(_BYTE *)(a4 + 49) = 3;
                      if (v45 != 2)
                        *(_BYTE *)(a4 + 48) = 1;
                    }
                    return v25;
                  }
                  if (v41 == 5)
                  {
                    JSC::JSObject::fillGetterPropertySlot();
                    return 1;
                  }
                }
                *(_QWORD *)a4 = v40;
                *(_QWORD *)(a4 + 32) = a1;
                *(_DWORD *)(a4 + 16) = HIDWORD(v31);
                *(_DWORD *)(a4 + 20) = v31;
                v25 = 1;
                *(_WORD *)(a4 + 48) = 257;
                return v25;
              }
            }
          }
        }
        if ((*(_BYTE *)(a1 + 6) & 0x20) != 0 && (JSC::JSObject::getOwnStaticPropertySlot() & 1) != 0)
          return 1;
        v32 = *(_DWORD *)(v7 + 16);
        if ((v32 & 0x20) == 0)
        {
          v33 = *(_BYTE **)(v7 + 8);
          v34 = *(unsigned int *)(v7 + 4);
          if ((v32 & 4) != 0)
          {
            if (!(_DWORD)v34 || (v50 = *v33 - 48, v50 > 9) || v34 >= 2 && *v33 == 48)
            {
LABEL_95:
              v51 = 0;
            }
            else
            {
              v55 = v34 - 1;
              v56 = v33 + 1;
              while (v55)
              {
                if (v50 > 0x19999999)
                  goto LABEL_95;
                v57 = *v56 - 48;
                if (v57 > 9)
                  goto LABEL_95;
                v51 = 0;
                v22 = __CFADD__(v57, 10 * v50);
                v50 = v57 + 10 * v50;
                --v55;
                ++v56;
                if (v22)
                  goto LABEL_96;
              }
              v51 = 0x100000000;
              if (v50 == -1)
                v51 = 0;
            }
LABEL_96:
            if ((v51 & 0x100000000) == 0)
              return 0;
          }
          else
          {
            if ((_DWORD)v34
              && (v35 = *(unsigned __int16 *)v33 - 48, v35 <= 9)
              && (v34 < 2 || *(_WORD *)v33 != 48))
            {
              v42 = (unsigned __int16 *)(v33 + 2);
              v43 = v34 - 1;
              while (v43)
              {
                if (v35 <= 0x19999999)
                {
                  v44 = *v42 - 48;
                  if (v44 <= 9)
                  {
                    v22 = __CFADD__(v44, 10 * v35);
                    v35 = v44 + 10 * v35;
                    ++v42;
                    --v43;
                    if (!v22)
                      continue;
                  }
                }
                goto LABEL_60;
              }
              v26 = v35 == -1;
              v36 = 0x100000000;
              if (v26)
                v36 = 0;
            }
            else
            {
LABEL_60:
              v36 = 0;
            }
            if ((v36 & 0x100000000) == 0)
              return 0;
          }
          return JSC::JSObject::getOwnPropertySlotByIndex();
        }
        return 0;
      }
      v13 = 0;
    }
    else
    {
LABEL_6:
      v13 = 0;
      LOBYTE(v12) = 0;
    }
    v14 = 0;
    goto LABEL_8;
  }
  if ((*(_BYTE *)(a1 + 6) & 0x20) == 0)
    return 0;
  return JSC::JSObject::getOwnStaticPropertySlot();
}

uint64_t WebCore::JSCSSUnparsedValue::getOwnPropertySlotByIndex(WebCore::JSCSSUnparsedValue *this, JSC::JSObject *a2, JSC::JSGlobalObject *a3, uint64_t a4, JSC::PropertySlot *a5)
{
  uint64_t v8;
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  _BYTE v18[8];
  unsigned int v19;
  char v20;
  _BYTE v21[8];
  int v22;
  _BYTE v23[40];
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  JSC::JSObject *v29;
  uint64_t v30;
  _BYTE *v31;

  if ((_DWORD)a3 == -1)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v8 = *((_QWORD *)this + 3);
  if (*(_DWORD *)(v8 + 52) <= a3)
    return JSC::JSObject::getOwnPropertySlotByIndex();
  v9 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v10 = *(_QWORD *)(v8 + 40) + 16 * a3;
  LOBYTE(v27) = 0;
  LODWORD(v28) = -1;
  v11 = *(unsigned int *)(v10 + 8);
  if ((_DWORD)v11 == -1)
  {
    v18[0] = 0;
    v19 = -1;
    v20 = 1;
  }
  else
  {
    ((void (*)(_BYTE *, uint64_t **))__const__ZNSt3__116__variant_detail12__visitation6__base14__visit_alt_atB8sn180100IZNS0_6__ctorINS0_8__traitsIJN3WTF6StringENS6_6RefPtrIN7WebCore27CSSOMVariableReferenceValueENS6_12RawPtrTraitsISA_EENS6_21DefaultRefDerefTraitsISA_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISG_LNS0_6_TraitE1EEEEEvRSH_OT_EUlRSP_OT0_E_JSO_SN_EEEDcmSQ_DpOT0____fdiagonal[v11])(v23, &v27);
    LODWORD(v28) = v11;
    v18[0] = 0;
    v19 = -1;
    ((void (*)(_BYTE *, _BYTE *, uint64_t **))__const__ZNSt3__116__variant_detail12__visitation6__base14__visit_alt_atB8sn180100IZNS0_6__ctorINS0_8__traitsIJN3WTF6StringENS6_6RefPtrIN7WebCore27CSSOMVariableReferenceValueENS6_12RawPtrTraitsISA_EENS6_21DefaultRefDerefTraitsISA_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISG_LNS0_6_TraitE1EEEEEvRSH_OT_EUlRSN_OT0_E_JSM_SL_EEEDcmSO_DpOT0____fdiagonal[v11])(v23, v18, &v27);
    v19 = v11;
    v20 = 1;
    if ((_DWORD)v28 != -1)
    {
      ((void (*)(_BYTE *, uint64_t **))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF6StringENS6_6RefPtrIN7WebCore27CSSOMVariableReferenceValueENS6_12RawPtrTraitsISA_EENS6_21DefaultRefDerefTraitsISA_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSI_EEEDcOSJ_DpOT0____fmatrix[v28])(v23, &v27);
      if (!v20)
        return JSC::JSObject::getOwnPropertySlotByIndex();
    }
  }
  v13 = *(_QWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x28);
  v21[0] = 0;
  v22 = -1;
  v14 = v19;
  if (v19 == -1)
  {
    v14 = -1;
  }
  else
  {
    ((void (*)(uint64_t **, _BYTE *, _BYTE *))off_1E3249788[v19])(&v27, v21, v18);
    v22 = v14;
  }
  LOBYTE(v24) = 0;
  v25 = 0;
  v26 = v14;
  v27 = &v26;
  v28 = &v24;
  v29 = a2;
  v30 = v13;
  v31 = v21;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLUSVStringENS_12IDLInterfaceINS_27CSSOMVariableReferenceValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6StringENSH_6RefPtrIS6_NSH_12RawPtrTraitsIS6_EENSH_21DefaultRefDerefTraitsIS6_EEEEEEEEUlTyvE_JNSF_17integral_constantIlLl0EEENST_IlLl1EEEEEET_SW_((uint64_t)v23, &v27);
  if (v25)
  {
    v15 = v24;
    if (v22 != -1)
      ((void (*)(uint64_t **, _BYTE *))off_1E32487E0[v22])(&v27, v21);
    if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    {
      v12 = 0;
    }
    else
    {
      *(_QWORD *)a4 = v15;
      *(_DWORD *)(a4 + 16) = 0;
      *(_QWORD *)(a4 + 32) = this;
      v12 = 1;
      *(_BYTE *)(a4 + 49) = 1;
    }
    if (v20)
    {
      if (v19 != -1)
        ((void (*)(uint64_t **, _BYTE *))off_1E32487E0[v19])(&v27, v18);
    }
    return v12;
  }
  v17 = std::__throw_bad_optional_access[abi:sn180100]();
  return WebCore::JSCSSUnparsedValue::getOwnPropertyNames(v17);
}

uint64_t WebCore::JSCSSUnparsedValue::getOwnPropertyNames(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  int v4;
  int v5;
  uint64_t *v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  WTF::StringImpl **v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  unsigned int v32;
  int v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44[2];
  char v45;
  WTF::StringImpl *v46;

  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 24) + 52);
  if (v4)
  {
    v5 = 0;
    v6 = a3 + 1;
    while (1)
    {
      JSC::Identifier::from();
      v8 = v43;
      v46 = v43;
      v9 = *((_DWORD *)v43 + 4);
      if ((v9 & 0x20) != 0)
      {
        if ((a3[3] & 1) == 0 || *((_BYTE *)a3 + 25) && (*((_BYTE *)v43 + 36) & 4) != 0)
          goto LABEL_60;
      }
      else if ((a3[3] & 2) == 0)
      {
        goto LABEL_60;
      }
      v10 = *a3;
      v11 = *(unsigned int *)(*a3 + 20);
      if (v11 <= 0x13)
      {
        if ((_DWORD)v11)
        {
          v12 = *(WTF::StringImpl ***)(v10 + 8);
          while (*v12 != v43)
          {
            ++v12;
            if (!--v11)
              goto LABEL_19;
          }
          goto LABEL_60;
        }
LABEL_19:
        if ((v9 & 0x20) != 0)
        {
          v33 = *(_DWORD *)v8 + 2;
        }
        else
        {
          if ((v9 & 0x10) != 0)
          {
            *(_DWORD *)v8 += 2;
          }
          else
          {
            WTF::AtomStringImpl::addSlowCase();
            v8 = v44[0];
          }
          v33 = *(_DWORD *)v8;
          *(_DWORD *)v8 += 2;
          if (!v33)
          {
            WTF::StringImpl::destroy(v8, v7);
LABEL_54:
            v34 = (uint64_t *)(v10 + 8);
            v44[0] = v8;
            v35 = *(unsigned int *)(v10 + 20);
            if ((_DWORD)v35 == *(_DWORD *)(v10 + 16))
            {
              v36 = (uint64_t *)WTF::Vector<JSC::Identifier,20ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((uint64_t)v34, v35 + 1, (unint64_t)v44);
              v35 = *(unsigned int *)(v10 + 20);
              v37 = *(_QWORD *)(v10 + 8);
              v38 = *v36;
              *v36 = 0;
              *(_QWORD *)(v37 + 8 * v35) = v38;
            }
            else
            {
              v39 = *v34;
              v44[0] = 0;
              *(_QWORD *)(v39 + 8 * v35) = v8;
            }
            *(_DWORD *)(v10 + 20) = v35 + 1;
            v40 = v44[0];
            v44[0] = 0;
            if (v40)
            {
              if (*(_DWORD *)v40 == 2)
                WTF::StringImpl::destroy(v40, v7);
              else
                *(_DWORD *)v40 -= 2;
            }
            goto LABEL_60;
          }
        }
        *(_DWORD *)v8 = v33;
        goto LABEL_54;
      }
      if (!*v6 || !*(_DWORD *)(*v6 - 12))
        break;
LABEL_17:
      WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::add(a3 + 1, (uint64_t *)&v46, (uint64_t)v44);
      if (v45)
      {
        v8 = v46;
        v10 = *a3;
        v9 = *((_DWORD *)v46 + 4);
        goto LABEL_19;
      }
LABEL_60:
      v41 = v43;
      v43 = 0;
      if (v41)
      {
        if (*(_DWORD *)v41 == 2)
          WTF::StringImpl::destroy(v41, v7);
        else
          *(_DWORD *)v41 -= 2;
      }
      if (++v5 == v4)
        return JSC::JSObject::getOwnPropertyNames();
    }
    v13 = *(uint64_t **)(v10 + 8);
    v14 = &v13[v11];
    while (1)
    {
      v15 = *v13;
      v16 = *v6;
      if (*v6
        || (WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, 8u, 0), (v16 = *v6) != 0))
      {
        v17 = *(_DWORD *)(v16 - 8);
      }
      else
      {
        v17 = 0;
      }
      v18 = (~(v15 << 32) + v15) ^ ((unint64_t)(~(v15 << 32) + v15) >> 22);
      v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
      v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
      v21 = v17 & ((v20 >> 31) ^ v20);
      v22 = (uint64_t *)(v16 + 8 * v21);
      v23 = *v22;
      if (*v22)
      {
        v24 = 0;
        v25 = 1;
        while (v23 != v15)
        {
          if (v23 == -1)
            v24 = v22;
          v21 = (v21 + v25) & v17;
          v22 = (uint64_t *)(v16 + 8 * v21);
          v23 = *v22;
          ++v25;
          if (!*v22)
          {
            if (v24)
            {
              *v24 = 0;
              --*(_DWORD *)(*v6 - 16);
              v22 = v24;
            }
            goto LABEL_34;
          }
        }
        goto LABEL_47;
      }
LABEL_34:
      *v22 = v15;
      v26 = *v6;
      v27 = *v6 ? *(_DWORD *)(v26 - 12) + 1 : 1;
      *(_DWORD *)(v26 - 12) = v27;
      v28 = *v6;
      v29 = *v6 ? *(_DWORD *)(v28 - 12) : 0;
      v30 = (*(_DWORD *)(v28 - 16) + v29);
      v31 = *(unsigned int *)(v28 - 4);
      if (v31 > 0x400)
        break;
      if (3 * v31 <= 4 * v30)
      {
        if ((_DWORD)v31)
          goto LABEL_43;
        v32 = 8;
        goto LABEL_46;
      }
LABEL_47:
      if (++v13 == v14)
        goto LABEL_17;
    }
    if (v31 > 2 * v30)
      goto LABEL_47;
LABEL_43:
    v32 = (_DWORD)v31 << (6 * *(_DWORD *)(v28 - 12) >= (2 * v31));
LABEL_46:
    WTF::HashTable<WTF::UniquedStringImpl *,WTF::UniquedStringImpl *,WTF::IdentityExtractor,WTF::DefaultHash<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>,WTF::HashTraits<WTF::UniquedStringImpl *>>::rehash(a3 + 1, v32, v22);
    goto LABEL_47;
  }
  return JSC::JSObject::getOwnPropertyNames();
}

uint64_t WebCore::JSCSSUnparsedValue::defineOwnProperty(uint64_t a1, JSC::JSGlobalObject *a2, uint64_t a3, uint64_t this, int a5)
{
  JSC::VM *v9;
  int v10;
  _BYTE *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  _DWORD *v23;
  int v25;
  unsigned __int16 *v26;
  uint64_t v27;
  unsigned int v28;
  BOOL v29;
  _DWORD *v30;
  int v31;
  BOOL v32;
  unsigned int v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  JSValue v36;
  unsigned int v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 *v41;
  unsigned int v42;
  char v43[8];
  WTF::StringImpl *v44;
  char v45;
  _DWORD *v46;
  int v47;
  int v48;
  int v49[4];
  __int128 v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)a2 + 7);
  if (!a3)
    goto LABEL_67;
  v10 = *(_DWORD *)(a3 + 16);
  if ((v10 & 0x20) != 0)
    goto LABEL_67;
  v11 = *(_BYTE **)(a3 + 8);
  v12 = *(unsigned int *)(a3 + 4);
  if ((v10 & 4) != 0)
  {
    if (!(_DWORD)v12)
      goto LABEL_69;
    v37 = *v11 - 48;
    if (v37 <= 9 && (v12 < 2 || *v11 != 48))
    {
      v40 = v12 - 1;
      v41 = v11 + 1;
      while (1)
      {
        if (!v40)
        {
          if (v37 == -1)
            v16 = 0;
          else
            v16 = v37 & 0xFFFFFF00;
          if (v37 == -1)
            LOBYTE(v12) = 0;
          else
            LOBYTE(v12) = v37;
          if (v37 == -1)
            v38 = 0;
          else
            v38 = 0x100000000;
          goto LABEL_66;
        }
        if (v37 > 0x19999999)
          break;
        v42 = *v41 - 48;
        if (v42 > 9)
          break;
        v16 = 0;
        LOBYTE(v12) = 0;
        v38 = 0;
        v29 = __CFADD__(v42, 10 * v37);
        v37 = v42 + 10 * v37;
        --v40;
        ++v41;
        if (v29)
          goto LABEL_66;
      }
    }
    v16 = 0;
    LOBYTE(v12) = 0;
    goto LABEL_65;
  }
  if (!(_DWORD)v12 || (v13 = *(unsigned __int16 *)v11 - 48, v13 > 9))
  {
LABEL_6:
    v14 = 0;
    LOBYTE(v13) = 0;
LABEL_7:
    v15 = 0;
    goto LABEL_8;
  }
  if (v12 >= 2 && *(_WORD *)v11 == 48)
  {
    v14 = 0;
    goto LABEL_7;
  }
  v26 = (unsigned __int16 *)(v11 + 2);
  v27 = v12 - 1;
  while (v27)
  {
    if (v13 <= 0x19999999)
    {
      v28 = *v26 - 48;
      if (v28 <= 9)
      {
        v29 = __CFADD__(v28, 10 * v13);
        v13 = v28 + 10 * v13;
        ++v26;
        --v27;
        if (!v29)
          continue;
      }
    }
    goto LABEL_6;
  }
  v32 = v13 == -1;
  v33 = v13 & 0xFFFFFF00;
  v14 = 0x100000000;
  if (v13 == -1)
  {
    v14 = 0;
    LOBYTE(v13) = 0;
  }
  if (v32)
    v15 = 0;
  else
    v15 = v33;
LABEL_8:
  v16 = v13;
  if ((v14 & 0x100000000) == 0)
  {
LABEL_67:
    v39 = *(_OWORD *)(this + 16);
    *(_OWORD *)v49 = *(_OWORD *)this;
    v50 = v39;
    return JSC::JSObject::defineOwnProperty();
  }
  while ((JSC::PropertyDescriptor::isDataDescriptor((JSC::PropertyDescriptor *)this) & 1) != 0)
  {
    v17 = *(_QWORD *)this;
    if ((*(_QWORD *)this & 0xFFFE000000000002) != 0)
      goto LABEL_29;
    v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v20 = (char **)(16 * v18);
    if ((_DWORD)v18)
      v21 = v20 == &WebCore::JSCSSOMVariableReferenceValue::s_info;
    else
      v21 = 1;
    if (!v21)
    {
      do
      {
        v20 = (char **)v20[2];
        v19 = v20 != 0;
      }
      while (v20 != &WebCore::JSCSSOMVariableReferenceValue::s_info && v20 != 0);
    }
    if (v19 && (v23 = *(_DWORD **)(v17 + 24)) != 0)
    {
      ++*v23;
      v46 = v23;
      this = 1;
      v47 = 1;
      v48 = 0;
    }
    else
    {
LABEL_29:
      WebCore::valueToUSVString(a2, v17, (uint64_t)v49);
      if (v49[2])
      {
        v48 = 1;
        if (v49[2] != -1)
          ((void (*)(char *, int *))off_1E3238AF8[v49[2]])(v43, v49);
        v25 = 1;
        goto LABEL_46;
      }
      v30 = *(_DWORD **)v49;
      *(_QWORD *)v49 = 0;
      v46 = v30;
      v47 = 0;
      v48 = 0;
      _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJS9_SB_EEEEEEDcSF_DpT0_((uint64_t)v43, (WTF::StringImpl *)v49);
      this = 0;
    }
    a5 = v15 | v16;
    a1 = *(_QWORD *)(a1 + 24);
    v43[0] = 0;
    LODWORD(v44) = -1;
    ((void (*)(int *, char *, _DWORD **))off_1E3249778[this])(v49, v43, &v46);
    LODWORD(v44) = this;
    WebCore::CSSUnparsedValue::setItem((unsigned int *)a1, v15 | v16, (unint64_t)v43, (uint64_t)v49);
    if ((_DWORD)v44 != -1)
      ((void (*)(char *, char *))off_1E32487E0[v44])(&v45, v43);
    v31 = DWORD2(v50);
    if (!DWORD2(v50))
      goto LABEL_44;
    if (DWORD2(v50) == 1)
    {
      v34 = (WTF::StringImpl *)LOBYTE(v49[2]);
      v43[0] = v49[2];
      v35 = (WTF::StringImpl *)v50;
      *(_QWORD *)&v50 = 0;
      v44 = v35;
      if (!*((_QWORD *)v9 + 2))
      {
        v36.super.isa = (Class)WebCore::createDOMException(a2, (JSC::JSGlobalObject *)LOBYTE(v49[2]), (JSC::JSGlobalObject *)&v44);
        JSC::VM::throwException(v9, a2, v36);
        v35 = v44;
      }
      v44 = 0;
      if (v35)
      {
        if (*(_DWORD *)v35 == 2)
          WTF::StringImpl::destroy(v35, v34);
        else
          *(_DWORD *)v35 -= 2;
      }
      v31 = DWORD2(v50);
      if (DWORD2(v50) != -1)
LABEL_44:
        ((void (*)(char *, int *))off_1E3249798[v31])(v43, &v49[2]);
      v25 = v48;
      if (v48 != -1)
LABEL_46:
        ((void (*)(int *, _DWORD **))off_1E32487F0[v25])(v49, &v46);
      return 1;
    }
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_69:
    v16 = 0;
LABEL_65:
    v38 = 0;
LABEL_66:
    v15 = v12;
    if ((v38 & 0x100000000) == 0)
      goto LABEL_67;
  }
  if (a5)
    JSC::throwTypeError();
  return 0;
}

uint64_t WebCore::JSCSSUnparsedValue::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCSSStyleValue::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCSSStyleValue::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCSSStyleValue::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSCSSUnparsedValue::createPrototype(WebCore::JSCSSUnparsedValue *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  uint64_t v13;
  unint64_t Structure;
  JSC::Structure *v15;
  JSC::JSCell *v16;
  uint64_t v17;
  unint64_t v18;
  JSC::Structure *v19;

  v5 = *((_QWORD *)a2 + 412);
  if (!v5)
    goto LABEL_7;
  v6 = *(_DWORD *)(v5 - 8);
  v7 = ((unint64_t)&WebCore::JSCSSStyleValue::s_info + ~((_QWORD)&WebCore::JSCSSStyleValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSStyleValue::s_info + ~((_QWORD)&WebCore::JSCSSStyleValue::s_info << 32)) >> 22);
  v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  v10 = v6 & ((v9 >> 31) ^ v9);
  v11 = *(char ***)(v5 + 16 * v10);
  if (v11 != &WebCore::JSCSSStyleValue::s_info)
  {
    v12 = 1;
    while (v11)
    {
      v10 = ((_DWORD)v10 + v12) & v6;
      v11 = *(char ***)(v5 + 16 * v10);
      ++v12;
      if (v11 == &WebCore::JSCSSStyleValue::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
  if (!v13)
  {
LABEL_7:
    Structure = WebCore::JSCSSStyleValuePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v16 = (JSC::JSCell *)WebCore::JSCSSStyleValuePrototype::create(this, a2, Structure, v15);
    v17 = WebCore::JSCSSStyleValue::createStructure((uint64_t *)this, (uint64_t)a2, v16);
    v13 = WebCore::cacheDOMStructure((JSCell *)a2, v17, (uint64_t)&WebCore::JSCSSStyleValue::s_info);
  }
  v18 = WebCore::JSCSSUnparsedValuePrototype::createStructure((uint64_t *)this, (uint64_t)a2, *(JSC::JSCell **)(v13 + 48));
  *(_DWORD *)(v18 + 16) |= 0x80000u;
  return WebCore::JSCSSUnparsedValuePrototype::create(this, a2, v18, v19);
}

uint64_t WebCore::JSCSSUnparsedValuePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCSSUnparsedValuePrototype::create(WebCore::JSCSSUnparsedValuePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t Direct;
  WTF::StringImpl *v13;
  JSC::JSObject *v14;
  unint64_t v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  JSC::Structure *v19;
  int v20;
  unint64_t v22;
  WTF::StringImpl *v23;
  unint64_t v24;
  uint64_t v25;
  int *v26;
  JSC::Structure **v27;
  int *v28;
  int v29;
  int v30;
  JSC::Structure *v31;
  int v32;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v22 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v22);
    *((_QWORD *)this + 4865) = SlowCase + (int)v22;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCSSUnparsedValue::s_info, (uint64_t)&WebCore::JSCSSUnparsedValuePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2712);
  v10 = *(_QWORD *)(*(_QWORD *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x28) + 672);
  v11 = (_DWORD *)MEMORY[0x1E0CBEBF0];
  *MEMORY[0x1E0CBEBF0] += 2;
  Direct = JSC::JSObject::getDirect(v10, this, (unint64_t)v11);
  v23 = 0;
  v24 = SlowCase;
  v25 = 0x1000000FFFFFFFFLL;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, this, v9, Direct, 4, (uint64_t)&v23);
  if (*v11 == 2)
    WTF::StringImpl::destroy(MEMORY[0x1E0CBEBF0], v13);
  else
    *v11 -= 2;
  WebCore::addValueIterableMethods(*(WebCore **)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x28), (JSC::JSGlobalObject *)SlowCase, v14);
  v15 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v17 = JSC::JSString::create((uint64_t)this, &v23);
  v18 = v23;
  v23 = 0;
  if (v18)
  {
    if (*(_DWORD *)v18 == 2)
      WTF::StringImpl::destroy(v18, v16);
    else
      *(_DWORD *)v18 -= 2;
  }
  v19 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v32 = *(_DWORD *)SlowCase;
  v31 = v19;
  v20 = JSC::Structure::outOfLineCapacity(v19);
  v29 = 0;
  v30 = v20;
  v23 = (WTF::StringImpl *)&v30;
  v24 = SlowCase;
  v25 = (uint64_t)this;
  v26 = &v32;
  v27 = &v31;
  v28 = &v29;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v19, this, v15, 6, (uint64_t)&v23);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v29, v17);
  *((_DWORD *)v19 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSUnparsedValue>,(WebCore::DOMConstructorID)380>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  unint64_t v34;
  int v35;
  int v36;
  uint64_t v37;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3040);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleValue>,(WebCore::DOMConstructorID)378>(a1, a2);
  v7 = v6;
  LODWORD(v33) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v31 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v31);
    v5[2] = SlowCase + (int)v31;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v33, &WebCore::JSDOMConstructor<WebCore::JSCSSUnparsedValue>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v32 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v32);
    v10[2848] = v2 + (int)v32;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v33);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v33);
  v14 = v33;
  v33 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v33);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCSSUnparsedValue::s_info + ~((_QWORD)&WebCore::JSCSSUnparsedValue::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSUnparsedValue::s_info + ~((_QWORD)&WebCore::JSCSSUnparsedValue::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCSSUnparsedValue::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCSSUnparsedValue::s_info)
          goto LABEL_20;
      }
    }
  }
  Prototype = (JSC::JSCell *)WebCore::JSCSSUnparsedValue::createPrototype((WebCore::JSCSSUnparsedValue *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCSSUnparsedValue::createStructure((uint64_t *)a1, a2, Prototype);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, Structure, (uint64_t)&WebCore::JSCSSUnparsedValue::s_info);
LABEL_22:
  v29 = *(_QWORD *)(v26 + 48);
  v33 = 0;
  v34 = v2;
  v35 = -1;
  v36 = 0x1000000;
  v37 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v29, 14, (uint64_t)&v33);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3040) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCSSUnparsedValueConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCSSUnparsedValuePrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCSSUnparsedValue>,(WebCore::DOMConstructorID)380>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsCSSUnparsedValue_length(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(unsigned int *)(*(_QWORD *)(a2 + 24) + 52);
  if ((v2 & 0x80000000) != 0)
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

uint64_t WebCore::JSCSSUnparsedValue::subspaceForImpl(WebCore::JSCSSUnparsedValue *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3088);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3088))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3088);
    *(_QWORD *)(v8 + 3088) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3088);
  *(_QWORD *)(v3 + 3088) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

unint64_t WebCore::convertDictionary<WebCore::CacheQueryOptions>@<X0>(JSC::JSCell *this@<X1>, unint64_t result@<X0>, uint64_t a3@<X8>)
{
  JSC::VM *v4;
  BOOL v5;
  BOOL v6;
  JSC::JSGlobalObject *v7;
  uint64_t Object;
  JSC::Structure *v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  JSC::VM *v12;
  double v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  JSC::VM *v16;
  WTF::StringImpl *v17;
  unint64_t v18;
  BOOL v19;
  double v20;
  int v21;
  BOOL v22;
  int v23;
  uint64_t v24;
  int *v25;
  int v26;
  BOOL v27;
  int v28;
  uint64_t v29;
  int *v30;
  int v31;
  BOOL v32;
  int v33;
  uint64_t v34;
  int *v35;
  int v36;
  WTF::StringImpl *v37;

  v4 = *(JSC::VM **)(result + 56);
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    v7 = (JSC::JSGlobalObject *)result;
    if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
    {
      result = JSC::throwTypeError();
      goto LABEL_44;
    }
    v9 = (JSC::Structure *)Object;
    WTF::AtomStringImpl::addLiteral();
    v11 = JSC::JSObject::get(v9, v7, (unint64_t)v37);
    if (v37)
    {
      if (*(_DWORD *)v37 == 2)
        WTF::StringImpl::destroy(v37, v10);
      else
        *(_DWORD *)v37 -= 2;
    }
    if (*((_DWORD *)v4 + 20))
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
      if ((result & 1) != 0)
        goto LABEL_44;
    }
    if (v11 == 10)
    {
      v5 = 0;
      goto LABEL_16;
    }
    v12 = (JSC::VM *)*((_QWORD *)v7 + 7);
    if (v11 >= 0xFFFE000000000000)
    {
      v22 = (_DWORD)v11 == 0;
    }
    else
    {
      *(_QWORD *)&v13 = v11 - 0x2000000000000;
      if (v11 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
      {
        v5 = v13 > 0.0 || v13 < 0.0;
LABEL_15:
        if (*((_DWORD *)v12 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v12);
          if ((result & 1) != 0)
            goto LABEL_44;
        }
LABEL_16:
        WTF::AtomStringImpl::addLiteral();
        v15 = JSC::JSObject::get(v9, v7, (unint64_t)v37);
        if (v37)
        {
          if (*(_DWORD *)v37 == 2)
            WTF::StringImpl::destroy(v37, v14);
          else
            *(_DWORD *)v37 -= 2;
        }
        if (*((_DWORD *)v4 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
          if ((result & 1) != 0)
            goto LABEL_44;
        }
        if (v15 == 10)
        {
          v6 = 0;
          goto LABEL_27;
        }
        v16 = (JSC::VM *)*((_QWORD *)v7 + 7);
        if (v15 >= 0xFFFE000000000000)
        {
          v27 = (_DWORD)v15 == 0;
        }
        else
        {
          if (v15 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
          {
            v6 = COERCE_DOUBLE(v15 - 0x2000000000000) > 0.0 || COERCE_DOUBLE(v15 - 0x2000000000000) < 0.0;
LABEL_26:
            if (*((_DWORD *)v16 + 20))
            {
              result = JSC::VM::hasExceptionsAfterHandlingTraps(v16);
              if ((result & 1) != 0)
                goto LABEL_44;
            }
LABEL_27:
            WTF::AtomStringImpl::addLiteral();
            result = JSC::JSObject::get(v9, v7, (unint64_t)v37);
            v18 = result;
            if (v37)
            {
              if (*(_DWORD *)v37 == 2)
                result = WTF::StringImpl::destroy(v37, v17);
              else
                *(_DWORD *)v37 -= 2;
            }
            if (*((_DWORD *)v4 + 20))
            {
              result = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
              if ((result & 1) != 0)
                goto LABEL_44;
            }
            if (v18 == 10)
              goto LABEL_32;
            result = *((_QWORD *)v7 + 7);
            if (v18 >= 0xFFFE000000000000)
            {
              v32 = (_DWORD)v18 == 0;
              goto LABEL_96;
            }
            *(_QWORD *)&v20 = v18 - 0x2000000000000;
            if (v18 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
            {
              if (v20 <= 0.0)
              {
                v19 = v20 < 0.0;
                goto LABEL_37;
              }
            }
            else
            {
              if ((v18 & 0xFFFE000000000002) != 0)
              {
                v19 = v18 == 7;
                goto LABEL_37;
              }
              v33 = *(unsigned __int8 *)(v18 + 5);
              if (v33 == 3)
              {
                v36 = *(_DWORD *)(v18 + 8);
LABEL_95:
                v32 = v36 == 0;
                goto LABEL_96;
              }
              if (v33 == 2)
              {
                v34 = *(_QWORD *)(v18 + 8);
                if ((v34 & 1) != 0)
                  v35 = (int *)(v18 + 16);
                else
                  v35 = (int *)(v34 + 4);
                v36 = *v35;
                goto LABEL_95;
              }
              if ((*(_BYTE *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0xA) & 1) != 0)
              {
                v32 = *(_QWORD *)(16 * (*(_DWORD *)v18 & 0xFFFFFFFE) + 0x28) == (_QWORD)v7;
LABEL_96:
                v19 = !v32;
LABEL_37:
                if (!*(_DWORD *)(result + 80))
                  goto LABEL_38;
                result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)result);
                if ((result & 1) == 0)
                  goto LABEL_38;
LABEL_44:
                v21 = 1;
                goto LABEL_39;
              }
            }
            v19 = 1;
            goto LABEL_37;
          }
          if ((v15 & 0xFFFE000000000002) != 0)
          {
            v6 = v15 == 7;
            goto LABEL_26;
          }
          v28 = *(unsigned __int8 *)(v15 + 5);
          if (v28 == 3)
          {
            v31 = *(_DWORD *)(v15 + 8);
          }
          else
          {
            if (v28 != 2)
            {
              if ((*(_BYTE *)(16 * (*(_DWORD *)v15 & 0xFFFFFFFE) + 0xA) & 1) == 0)
              {
                v6 = 1;
                goto LABEL_26;
              }
              v27 = *(_QWORD *)(16 * (*(_DWORD *)v15 & 0xFFFFFFFE) + 0x28) == (_QWORD)v7;
              goto LABEL_106;
            }
            v29 = *(_QWORD *)(v15 + 8);
            if ((v29 & 1) != 0)
              v30 = (int *)(v15 + 16);
            else
              v30 = (int *)(v29 + 4);
            v31 = *v30;
          }
          v27 = v31 == 0;
        }
LABEL_106:
        v6 = !v27;
        goto LABEL_26;
      }
      if ((v11 & 0xFFFE000000000002) != 0)
      {
        v5 = v11 == 7;
        goto LABEL_15;
      }
      v23 = *(unsigned __int8 *)(v11 + 5);
      if (v23 == 3)
      {
        v26 = *(_DWORD *)(v11 + 8);
      }
      else
      {
        if (v23 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
            v5 = 1;
            goto LABEL_15;
          }
          v22 = *(_QWORD *)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0x28) == (_QWORD)v7;
          goto LABEL_102;
        }
        v24 = *(_QWORD *)(v11 + 8);
        if ((v24 & 1) != 0)
          v25 = (int *)(v11 + 16);
        else
          v25 = (int *)(v24 + 4);
        v26 = *v25;
      }
      v22 = v26 == 0;
    }
LABEL_102:
    v5 = !v22;
    goto LABEL_15;
  }
  v5 = 0;
  v6 = 0;
LABEL_32:
  v19 = 0;
LABEL_38:
  v21 = 0;
  *(_BYTE *)a3 = v6;
  *(_BYTE *)(a3 + 1) = v5;
  *(_BYTE *)(a3 + 2) = v19;
LABEL_39:
  *(_DWORD *)(a3 + 4) = v21;
  return result;
}

uint64_t WebCore::JSCanvasCaptureMediaStreamTrack::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24) - 32);
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSMediaStreamTrack::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSMediaStreamTrack::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSMediaStreamTrack::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCanvasCaptureMediaStreamTrackPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCanvasCaptureMediaStreamTrackPrototype::create(WebCore::JSCanvasCaptureMediaStreamTrackPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSCanvasCaptureMediaStreamTrack::s_info, &WebCore::JSCanvasCaptureMediaStreamTrackPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCanvasCaptureMediaStreamTrack>,(WebCore::DOMConstructorID)134>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  unint64_t v30;
  unint64_t v31;
  JSC::JSObject *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  WTF::StringImpl *v39;
  unint64_t v40;
  int v41;
  int v42;
  uint64_t v43;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1072);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSMediaStreamTrack>,(WebCore::DOMConstructorID)140>(a1, a2);
  v7 = v6;
  LODWORD(v39) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v36 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v36);
    v5[2] = SlowCase + (int)v36;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v39, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCanvasCaptureMediaStreamTrack>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v37 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v37);
    v10[2848] = v2 + (int)v37;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v39 = 0;
  v40 = v2;
  v41 = -1;
  v42 = 0x1000000;
  v43 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v39);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v39);
  v14 = v39;
  v39 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v39 = 0;
  v40 = v2;
  v41 = -1;
  v42 = 0x1000000;
  v43 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v39);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (!v18)
    goto LABEL_21;
  v19 = *(_DWORD *)(v18 - 8);
  v20 = ((unint64_t)&WebCore::JSCanvasCaptureMediaStreamTrack::s_info
       + ~((_QWORD)&WebCore::JSCanvasCaptureMediaStreamTrack::s_info << 32)) ^ (((unint64_t)&WebCore::JSCanvasCaptureMediaStreamTrack::s_info
                                                                               + ~((_QWORD)&WebCore::JSCanvasCaptureMediaStreamTrack::s_info << 32)) >> 22);
  v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
  v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
  v23 = v19 & ((v22 >> 31) ^ v22);
  v24 = *(char ***)(v18 + 16 * v23);
  if (v24 != &WebCore::JSCanvasCaptureMediaStreamTrack::s_info)
  {
    v25 = 1;
    while (v24)
    {
      v23 = ((_DWORD)v23 + v25) & v19;
      v24 = *(char ***)(v18 + 16 * v23);
      ++v25;
      if (v24 == &WebCore::JSCanvasCaptureMediaStreamTrack::s_info)
        goto LABEL_20;
    }
LABEL_21:
    v27 = (JSC::JSCell *)WebCore::JSMediaStreamTrack::prototype((WebCore::JSMediaStreamTrack *)a1, (JSC::VM *)a2, v16);
    Structure = WebCore::JSCanvasCaptureMediaStreamTrackPrototype::createStructure((uint64_t *)a1, a2, v27);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v30 = WebCore::JSCanvasCaptureMediaStreamTrackPrototype::create((WebCore::JSCanvasCaptureMediaStreamTrackPrototype *)a1, (JSC::VM *)a2, Structure, v29);
    v31 = v30;
    LODWORD(v39) = 23;
    if ((v30 & 0xFFFE000000000002) == 0)
    {
      v32 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v30);
      if (v32)
        JSC::JSObject::didBecomePrototype(v32, (JSC::VM *)a1);
    }
    v33 = *v5;
    if (*v5 >= (unint64_t)v5[1])
    {
      v33 = v5[2];
      if ((v33 & 1) != 0)
      {
        JSC::sanitizeStackForVM();
        v33 = JSC::LocalAllocator::allocateSlowCase();
        goto LABEL_26;
      }
      v38 = *(_QWORD *)(v33 + 8) ^ v5[3];
      v5[1] = v33 + HIDWORD(v38);
      v5[2] = v33 + (int)v38;
    }
    *v5 = v33 + 128;
LABEL_26:
    *(_DWORD *)v33 = 0;
    MEMORY[0x19AEA4278](v33, a1, a2, v31, &v39, &WebCore::JSCanvasCaptureMediaStreamTrack::s_info, 0, 0);
    if (*(_BYTE *)(a1 + 755))
      __dmb(0xAu);
    v26 = WebCore::cacheDOMStructure((JSCell *)a2, v33, (uint64_t)&WebCore::JSCanvasCaptureMediaStreamTrack::s_info);
    goto LABEL_29;
  }
LABEL_20:
  v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
  if (!v26)
    goto LABEL_21;
LABEL_29:
  v34 = *(_QWORD *)(v26 + 48);
  v39 = 0;
  v40 = v2;
  v41 = -1;
  v42 = 0x1000000;
  v43 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v34, 14, (uint64_t)&v39);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1072) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCanvasCaptureMediaStreamTrackConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCanvasCaptureMediaStreamTrackPrototype::s_info != (char **)(16
                                                                             * *(unsigned int *)(16
                                                                                               * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCanvasCaptureMediaStreamTrack>,(WebCore::DOMConstructorID)134>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCanvasCaptureMediaStreamTrack_canvas(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::HTMLElement *a4)
{
  return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WebCore::JSDOMGlobalObject **)(*(_QWORD *)(a2 + 24) + 1200), a4);
}

uint64_t WebCore::JSCanvasCaptureMediaStreamTrack::subspaceForImpl(WebCore::JSCanvasCaptureMediaStreamTrack *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 1096);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v20 = *(_QWORD *)(v8 + 1096);
  if (!v20)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v22, "IsoSpace T");
    v21 = 0;
    MEMORY[0x19AEA3204](v9, &v22, (char *)this + 192, (char *)this + 1872, 32, 8, &v21);
    v11 = v21;
    v21 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v22;
    v22 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v20 = v9;
    v13 = *(_QWORD *)(v8 + 1096);
    *(_QWORD *)(v8 + 1096) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v6 + 2832, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
      *(_DWORD *)(v6 + 2844) = v14 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 1096);
  *(_QWORD *)(v3 + 1096) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCanvasCaptureMediaStreamTrackOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  v6 = *(_QWORD *)(v5 - 24);
  if (!v6)
    return 0;
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7 || *(_BYTE *)(v7 + 180))
    return 0;
  if (*(_QWORD *)(v5 - 16)
    || (result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 - 32) + 64))(v5 - 32), (_DWORD)result))
  {
    if (a5)
    {
      *a5 = "ActiveDOMObject with pending activity";
      a5[1] = 38;
    }
    return 1;
  }
  return result;
}

uint64_t WebCore::JSCanvasCaptureMediaStreamTrackOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v27;
  uint64_t v28;

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  result = v3 - 32;
  v5 = *(_DWORD *)(v3 - 8);
  *(_DWORD *)(v3 - 8) = v5 + 1;
  if (*(_DWORD *)(a3 + 48))
  {
    v9 = *(_QWORD *)(a3 + 32);
    v7 = (uint64_t *)(a3 + 32);
    v8 = v9;
    if (v9)
    {
      v10 = *(_DWORD *)(v8 - 8);
      v11 = (~(result << 32) + result) ^ ((unint64_t)(~(result << 32) + result) >> 22);
      v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
      v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
      v14 = v10 & ((v13 >> 31) ^ v13);
      v15 = *(_QWORD *)(v8 + 16 * v14);
      if (v15 != result)
      {
        v16 = 1;
        while (v15)
        {
          v14 = ((_DWORD)v14 + v16) & v10;
          v15 = *(_QWORD *)(v8 + 16 * v14);
          ++v16;
          if (v15 == result)
            goto LABEL_12;
        }
        v14 = *(unsigned int *)(v8 - 4);
      }
LABEL_12:
      if (v14 != *(_DWORD *)(v8 - 4))
      {
        v17 = (_QWORD *)(v8 + 16 * v14);
        *v17 = -1;
        v20 = v17[1];
        v19 = v17 + 1;
        v18 = v20;
        if (v20)
        {
          *(_QWORD *)(v18 + 8) = 3;
          *v19 = 0;
        }
        ++*(_DWORD *)(*v7 - 16);
        v21 = *v7;
        if (*v7)
          v22 = *(_DWORD *)(v21 - 12) - 1;
        else
          v22 = -1;
        *(_DWORD *)(v21 - 12) = v22;
        v23 = *v7;
        if (*v7)
        {
          v24 = 6 * *(_DWORD *)(v23 - 12);
          v25 = *(_DWORD *)(v23 - 4);
          if (v24 < v25 && v25 >= 9)
          {
            v27 = v3;
            v28 = v3 - 32;
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v7, v25 >> 1, 0);
            v3 = v27;
            result = v28;
          }
        }
      }
    }
    v5 = *(_DWORD *)(v3 - 8) - 1;
  }
  else
  {
    v6 = *(_QWORD *)(v3 + 8);
    if (v6)
    {
      *(_QWORD *)(v6 + 8) = 3;
      *(_QWORD *)(v3 + 8) = 0;
    }
  }
  if (!v5)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
  *(_DWORD *)(v3 - 8) = v5;
  return result;
}

uint64_t WebCore::convertEnumerationToJS<WebCore::CanvasDirection>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)(a1 + 41968);
  {
    WebCore::convertEnumerationToString(WebCore::CanvasDirection)::$_0::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CanvasDirection)::$_1::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CanvasDirection)::values[0] = (uint64_t)&WebCore::convertEnumerationToString(WebCore::CanvasDirection)::$_0::operator() const(void)::impl;
    unk_1EE2F43A0 = &WebCore::convertEnumerationToString(WebCore::CanvasDirection)::$_1::operator() const(void)::impl;
    WebCore::convertEnumerationToString(WebCore::CanvasDirection)::$_2::operator() const(void)::impl += 2;
    qword_1EE2F43A8 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::CanvasDirection)::$_2::operator() const(void)::impl;
  }
  v3 = WebCore::convertEnumerationToString(WebCore::CanvasDirection)::values[(int)a2];
  if (!v3)
    return *v2;
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  *(_DWORD *)v3 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_6:
      v6 = *(_QWORD *)(a1 + 64760);
      if (!v6 || v3 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v3 - 2;
      }
      goto LABEL_9;
    }
    v8 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_6;
      v9 = v10;
    }
    v6 = *(_QWORD *)(a1 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *v2;
  }
LABEL_9:
  if (v4)
    *(_DWORD *)v3 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v3, a2);
  return v6;
}

uint64_t WebCore::parseEnumeration<WebCore::CanvasDirection>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  const char *v5;
  int v6;
  unint64_t v7;
  uint64_t v9;
  uint64_t v11;
  BOOL v12;
  char **v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v20;
  unint64_t v21;

  v3 = a1;
  v21 = this;
  if ((this & 0xFFFE000000000002) == 0 && *(_BYTE *)(this + 5) == 2)
  {
    v4 = *(_QWORD *)(this + 8);
    if ((v4 & 1) != 0)
    {
      v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
      if (!v4)
      {
LABEL_6:
        if (v4)
          goto LABEL_7;
        return 0;
      }
    }
    else if (!v4)
    {
      goto LABEL_6;
    }
    *(_DWORD *)v4 += 2;
    goto LABEL_6;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v21, a1);
  v4 = v20;
  if (!v20)
    return 0;
LABEL_7:
  v5 = *(const char **)(v4 + 8);
  v6 = *(_DWORD *)(v4 + 4);
  v7 = ((unint64_t)*(unsigned int *)(v4 + 16) >> 2) & 1;
  if (v5 != "inherit" && v6 == 7)
  {
    if ((_DWORD)v7)
    {
      if (*v5 != 105 || *(_DWORD *)(v5 + 1) != 1919248494 || *(_DWORD *)(v5 + 3) != 1953067621)
        goto LABEL_16;
    }
    else
    {
      if (*(_WORD *)v5 != 105)
        goto LABEL_16;
      v15 = *(_QWORD *)(v5 + 2);
      v16 = *(_QWORD *)(v5 + 6);
      if (v15 != 0x7200650068006ELL || v16 != 0x74006900720065)
        goto LABEL_16;
    }
LABEL_45:
    v13 = &WebCore::parseEnumerationFromString<WebCore::CanvasDirection>(WTF::String const&)::mappings;
    goto LABEL_46;
  }
  if (v5 == "inherit" && v6 == 7)
    goto LABEL_45;
  v11 = v7 << 32;
  v12 = v6 != 3;
  if (v5 == "ltr" || v6 != 3)
  {
    v14 = *(_DWORD *)(v4 + 4);
    if (v5 == "ltr" && v6 == 3)
      goto LABEL_26;
    goto LABEL_30;
  }
  if (!(_DWORD)v7)
  {
    if (*(_WORD *)v5 == 108 && *(_DWORD *)(v5 + 2) == 7471220)
      goto LABEL_26;
    v12 = 0;
    v14 = 3;
LABEL_30:
    if (v5 == "rtl" || v12)
    {
      if (v6 == 3 && v5 == "rtl")
        goto LABEL_36;
    }
    else
    {
      if (!v14)
      {
LABEL_36:
        v13 = &off_1E3237B30;
        goto LABEL_46;
      }
      if (v11)
      {
        if (*v5 == 114 && *(_WORD *)(v5 + 1) == 27764)
          goto LABEL_36;
      }
      else if (*(_WORD *)v5 == 114 && *(_DWORD *)(v5 + 2) == 7078004)
      {
        goto LABEL_36;
      }
    }
LABEL_16:
    v9 = 0;
    goto LABEL_47;
  }
  if (*v5 != 108 || *(_WORD *)(v5 + 1) != 29300)
  {
    v12 = 0;
    v14 = 3;
    v11 = 0x100000000;
    goto LABEL_30;
  }
LABEL_26:
  v13 = &off_1E3237B18;
LABEL_46:
  v9 = *((unsigned int *)v13 + 4) | 0x100000000;
LABEL_47:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v9;
}

uint64_t WebCore::parseEnumeration<WebCore::CanvasFillRule>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  int v5;
  const char *v6;
  int v7;
  BOOL v8;
  int v9;
  BOOL v10;
  char **v12;
  uint64_t v13;
  uint64_t v17;
  unint64_t v18;

  v3 = a1;
  v18 = this;
  if ((this & 0xFFFE000000000002) != 0 || *(_BYTE *)(this + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v18, a1);
    v4 = v17;
    if (v17)
      goto LABEL_7;
    return 0;
  }
  v4 = *(_QWORD *)(this + 8);
  if ((v4 & 1) == 0)
  {
    if (!v4)
      goto LABEL_6;
    goto LABEL_5;
  }
  v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
  if (v4)
LABEL_5:
    *(_DWORD *)v4 += 2;
LABEL_6:
  if (!v4)
    return 0;
LABEL_7:
  v5 = *(_DWORD *)(v4 + 16);
  v6 = *(const char **)(v4 + 8);
  v7 = *(_DWORD *)(v4 + 4);
  v8 = v7 != 7;
  if (v6 != "evenodd" && v7 == 7)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 101 || *(_DWORD *)(v6 + 1) != 1869505910 || *(_DWORD *)(v6 + 3) != 1684303726)
      {
LABEL_13:
        v9 = 7;
        goto LABEL_18;
      }
    }
    else
    {
      if (*(_WORD *)v6 != 101)
        goto LABEL_13;
      if (*(_QWORD *)(v6 + 2) != 0x6F006E00650076 || *(_QWORD *)(v6 + 6) != 0x640064006F006ELL)
        goto LABEL_13;
    }
LABEL_43:
    v12 = &WebCore::parseEnumerationFromString<WebCore::CanvasFillRule>(WTF::String const&)::mappings;
    goto LABEL_44;
  }
  v10 = v6 == "evenodd" && v7 == 7;
  v9 = *(_DWORD *)(v4 + 4);
  if (v10)
    goto LABEL_43;
LABEL_18:
  if (v6 == "nonzero")
    v8 = 1;
  if (v8)
  {
    if (v7 != 7 || v6 != "nonzero")
      goto LABEL_50;
    goto LABEL_32;
  }
  if (!v9)
    goto LABEL_32;
  if ((v5 & 4) == 0)
  {
    if (*(_WORD *)v6 != 110)
      goto LABEL_50;
    if (*(_QWORD *)(v6 + 6) != 0x6F00720065007ALL || *(_QWORD *)(v6 + 2) != 0x65007A006E006FLL)
      goto LABEL_50;
    goto LABEL_32;
  }
  if (*v6 == 110 && *(_DWORD *)(v6 + 1) == 1702522479 && *(_DWORD *)(v6 + 3) == 1869768058)
  {
LABEL_32:
    v12 = &off_1E3237B60;
LABEL_44:
    v13 = *((unsigned int *)v12 + 4) | 0x100000000;
    goto LABEL_51;
  }
LABEL_50:
  v13 = 0;
LABEL_51:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v13;
}

WTF::StringImpl *WebCore::JSCanvasGradientPrototype::finishCreation(WebCore::JSCanvasGradientPrototype *this, JSC::VM *a2)
{
  unint64_t v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *result;
  WTF::StringImpl *v8;

  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(a2, (uint64_t)&WebCore::JSCanvasGradient::s_info, (uint64_t)&WebCore::JSCanvasGradientPrototypeTableValues, this);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 5244) + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v5 = JSC::jsNontrivialString((uint64_t)a2, &v8);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v4, v5, 6);
  result = v8;
  v8 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WebCore::CanvasGradient *WebCore::JSCanvasGradient::destroy(WebCore::JSCanvasGradient *this, JSC::JSCell *a2)
{
  WebCore::CanvasGradient *result;
  WTF *v4;
  void *v5;

  result = (WebCore::CanvasGradient *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
    {
      WebCore::CanvasGradient::~CanvasGradient(result, a2);
      return (WebCore::CanvasGradient *)WTF::fastFree(v4, v5);
    }
    else
    {
      --*(_DWORD *)result;
    }
  }
  return result;
}

uint64_t WebCore::JSCanvasGradient::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSCanvasGradient::createPrototype(WebCore::JSCanvasGradient *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t v4;
  WebCore::JSDOMGlobalObject *v5;
  JSC::Structure *v6;

  v4 = JSC::Structure::create((uint64_t *)this, (int)a2, a2[82]);
  *(_DWORD *)(v4 + 16) |= 0x80000u;
  return WebCore::JSCanvasGradientPrototype::create(this, v4, v5, v6);
}

unint64_t WebCore::JSCanvasGradientPrototype::create(WebCore::JSCanvasGradientPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSCanvasGradientPrototype::finishCreation((WebCore::JSCanvasGradientPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCanvasGradient>,(WebCore::DOMConstructorID)603>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  uint64_t v17;
  unint64_t v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4824);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v21) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v19 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v19);
    v5[2] = SlowCase + (int)v19;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v21, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCanvasGradient>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 >= v9[2847])
  {
    v2 = v9[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v20 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v20);
    v9[2848] = v2 + (int)v20;
  }
  v9[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v21);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v21);
  v13 = v21;
  v21 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v21);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v17 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSCanvasGradient>((WebCore::JSCanvasGradient *)a1, (JSC::VM *)a2, v16)+ 48);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v17, 14, (uint64_t)&v21);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4824) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCanvasGradientConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCanvasGradientPrototype::s_info != (char **)(16
                                                              * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCanvasGradient>,(WebCore::DOMConstructorID)603>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSCanvasGradientOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

void WebCore::JSCanvasGradientOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  WebCore::CanvasGradient *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WebCore::CanvasGradient *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  int v23;
  WTF *v24;
  void *v25;

  v3 = *(WebCore::CanvasGradient **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(WebCore::CanvasGradient **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v23 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v23) & v7;
        v12 = *(WebCore::CanvasGradient **)(v5 + 16 * v11);
        ++v23;
        if (v12 == v3)
          goto LABEL_3;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_3:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v13 = (_QWORD *)(v5 + 16 * v11);
      *v13 = -1;
      v16 = v13[1];
      v15 = v13 + 1;
      v14 = v16;
      if (v16)
      {
        *(_QWORD *)(v14 + 8) = 3;
        *v15 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v17 = *v4;
      if (*v4)
        v18 = *(_DWORD *)(v17 - 12) - 1;
      else
        v18 = -1;
      *(_DWORD *)(v17 - 12) = v18;
      v19 = *v4;
      if (*v4)
      {
        v20 = 6 * *(_DWORD *)(v19 - 12);
        v21 = *(_DWORD *)(v19 - 4);
        if (v20 < v21 && v21 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v21 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
  {
    WebCore::CanvasGradient::~CanvasGradient(v3, a2);
    WTF::fastFree(v24, v25);
  }
  else
  {
    --*(_DWORD *)v3;
  }
}

unint64_t WebCore::toJSNewlyCreated(uint64_t a1, uint64_t a2, WebCore::JSDOMGlobalObject *a3)
{
  WTF *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t SlowCase;
  WTF *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *Allocator;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;
  void *v23;
  int v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  WTF *v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  WTF *v32;

  v5 = *(WTF **)a3;
  v6 = WebCore::getDOMStructure<WebCore::JSCanvasGradient>(*(WebCore::JSCanvasGradient **)(a2 + 56), (JSC::VM *)a2, a3);
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(v7 + 41456);
  v9 = *(_QWORD *)(v8 + 23536);
  v10 = *(_QWORD **)(v9 + 4904);
  if (!v10)
  {
    v18 = *(_QWORD *)(v8 + 22648);
    if (__ldaxr((unsigned __int8 *)v18))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v18))
    {
LABEL_21:
      v20 = *(_QWORD *)(v18 + 2824);
      if (!*(_QWORD *)(v20 + 4904))
      {
        v25 = WTF::fastMalloc((WTF *)0xF8);
        WTF::CString::CString((WTF::CString *)&v32, "IsoSpace T");
        v31 = 0;
        MEMORY[0x19AEA3204](v25, &v32, v7 + 192, v7 + 1872, 32, 8, &v31);
        v27 = (uint64_t)v31;
        v31 = 0;
        if (v27)
          (*(void (**)(uint64_t))(*(_QWORD *)v27 + 8))(v27);
        v28 = v32;
        v32 = 0;
        if (v28)
        {
          if (*(_DWORD *)v28 == 1)
            WTF::fastFree(v28, v26);
          else
            --*(_DWORD *)v28;
        }
        v29 = *(_QWORD *)(v20 + 4904);
        *(_QWORD *)(v20 + 4904) = v25;
        if (v29)
          (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
      }
      v10 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
      JSC::GCClient::IsoSubspace::IsoSubspace();
      v21 = *(_QWORD *)(v9 + 4904);
      *(_QWORD *)(v9 + 4904) = v10;
      if (v21)
      {
        v22 = (WTF *)MEMORY[0x19AEA3528]();
        WTF::fastFree(v22, v23);
      }
      v24 = __ldxr((unsigned __int8 *)v18);
      if (v24 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v18))
          goto LABEL_2;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v18);
      goto LABEL_2;
    }
    MEMORY[0x19AEA534C](v18);
    goto LABEL_21;
  }
LABEL_2:
  SlowCase = v10[3];
  if (SlowCase < v10[4])
  {
LABEL_3:
    v10[3] = SlowCase + 32;
    goto LABEL_4;
  }
  SlowCase = v10[5];
  if ((SlowCase & 1) == 0)
  {
    v30 = *(_QWORD *)(SlowCase + 8) ^ v10[6];
    v10[4] = SlowCase + HIDWORD(v30);
    v10[5] = SlowCase + (int)v30;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_4:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v6);
  v12 = *(WTF **)a3;
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(SlowCase + 24) = v12;
  if (*(_BYTE *)(v7 + 755))
    __dmb(0xAu);
  v13 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE334E68 & 1) == 0)
  {
    qword_1EE334E60 = (uint64_t)&off_1E3238628;
    byte_1EE334E68 = 1;
  }
  v32 = v5;
  if ((SlowCase & 8) != 0)
    v14 = (SlowCase - 112) | 1;
  else
    v14 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v14 & 1) != 0)
    v15 = v14 + 47;
  else
    v15 = *(_QWORD *)v14 + 32;
  Allocator = *(_QWORD **)(v15 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v15 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE334E60;
  Allocator[2] = v13;
  v31 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v13 + 32), (uint64_t *)&v32, (uint64_t *)&v31);
  if (v31)
    v31[1] = 3;
  return SlowCase;
}

{
  void (***v3)(WebCore::DOMException *__hidden);
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t SlowCase;
  void (***v12)(WebCore::DOMException *__hidden);
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *Allocator;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;
  void *v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (***v28)(WebCore::DOMException *__hidden);

  v3 = *(void (****)(WebCore::DOMException *__hidden))a3;
  if (**(void (****)(WebCore::DOMException *__hidden))a3 != off_1E334F098)
  {
    __break(0xC471u);
    JUMPOUT(0x19497E7A0);
  }
  v6 = WebCore::getDOMStructure<WebCore::JSDOMException>(*(WebCore::JSDOMException **)(a2 + 56), (JSC::VM *)a2, a3);
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(v7 + 41456);
  v9 = *(_QWORD *)(v8 + 23536);
  v10 = *(_QWORD **)(v9 + 3488);
  if (!v10)
  {
    v18 = *(_QWORD *)(v8 + 22648);
    if (__ldaxr((unsigned __int8 *)v18))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v18))
    {
      goto LABEL_22;
    }
    MEMORY[0x19AEA534C](v18);
LABEL_22:
    v20 = *(_QWORD *)(v18 + 2824);
    if (!*(_QWORD *)(v20 + 3488))
    {
      v27 = 32;
      std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", v7 + 192, v7 + 1872, &v27, JSC::JSCell::numberOfLowerTierCells, (uint64_t *)&v28);
      v25 = *(_QWORD *)(v20 + 3488);
      *(_QWORD *)(v20 + 3488) = v28;
      if (v25)
        (*(void (**)(uint64_t))(*(_QWORD *)v25 + 8))(v25);
    }
    v10 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
    JSC::GCClient::IsoSubspace::IsoSubspace();
    v21 = *(_QWORD *)(v9 + 3488);
    *(_QWORD *)(v9 + 3488) = v10;
    if (v21)
    {
      v22 = (WTF *)MEMORY[0x19AEA3528]();
      WTF::fastFree(v22, v23);
    }
    v24 = __ldxr((unsigned __int8 *)v18);
    if (v24 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v18))
        goto LABEL_3;
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v18);
  }
LABEL_3:
  SlowCase = v10[3];
  if (SlowCase < v10[4])
  {
LABEL_4:
    v10[3] = SlowCase + 32;
    goto LABEL_5;
  }
  SlowCase = v10[5];
  if ((SlowCase & 1) == 0)
  {
    v26 = *(_QWORD *)(SlowCase + 8) ^ v10[6];
    v10[4] = SlowCase + HIDWORD(v26);
    v10[5] = SlowCase + (int)v26;
    goto LABEL_4;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_5:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v6);
  v12 = *(void (****)(WebCore::DOMException *__hidden))a3;
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(SlowCase + 24) = v12;
  if (*(_BYTE *)(v7 + 755))
    __dmb(0xAu);
  v13 = *(_QWORD *)(a2 + 3320);
  {
    WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::DOMException *)::owner = (uint64_t)&off_1E326AD60;
  }
  v28 = v3;
  if ((SlowCase & 8) != 0)
    v14 = (SlowCase - 112) | 1;
  else
    v14 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v14 & 1) != 0)
    v15 = v14 + 47;
  else
    v15 = *(_QWORD *)v14 + 32;
  Allocator = *(_QWORD **)(v15 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v15 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::DOMException *)::owner;
  Allocator[2] = v13;
  v27 = (uint64_t)Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v13 + 32), (uint64_t *)&v28, &v27);
  if (v27)
    *(_QWORD *)(v27 + 8) = 3;
  return SlowCase;
}

{
  uint64_t (***v3)(WebCore::ContextDestructionObserver *__hidden);
  unint64_t v6;
  WebCore::JSFetchResponse *v7;
  JSC::VM *v8;
  _QWORD *v9;
  unint64_t SlowCase;
  uint64_t (***v11)(WebCore::ContextDestructionObserver *__hidden);
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *Allocator;
  unint64_t v17;
  _QWORD *v18;
  uint64_t (***v19)(WebCore::ContextDestructionObserver *__hidden);

  v3 = *(uint64_t (****)(WebCore::ContextDestructionObserver *__hidden))a3;
  if (**(uint64_t (****)(WebCore::ContextDestructionObserver *__hidden))a3 != &off_1E3355D80)
  {
    __break(0xC471u);
    JUMPOUT(0x194AE6600);
  }
  v6 = WebCore::getDOMStructure<WebCore::JSFetchResponse>(*(WebCore::JSFetchResponse **)(a2 + 56), (JSC::VM *)a2, a3);
  v7 = *(WebCore::JSFetchResponse **)(a2 + 56);
  v9 = (_QWORD *)WebCore::JSFetchResponse::subspaceForImpl(v7, v8);
  SlowCase = v9[3];
  if (SlowCase < v9[4])
    goto LABEL_3;
  SlowCase = v9[5];
  if ((SlowCase & 1) == 0)
  {
    v17 = *(_QWORD *)(SlowCase + 8) ^ v9[6];
    v9[4] = SlowCase + HIDWORD(v17);
    v9[5] = SlowCase + (int)v17;
LABEL_3:
    v9[3] = SlowCase + 32;
    goto LABEL_4;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_4:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v6);
  v11 = *(uint64_t (****)(WebCore::ContextDestructionObserver *__hidden))a3;
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(SlowCase + 24) = v11;
  if (*((_BYTE *)v7 + 755))
    __dmb(0xAu);
  v12 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE335440 & 1) == 0)
  {
    qword_1EE335438 = (uint64_t)&off_1E32710E0;
    byte_1EE335440 = 1;
  }
  v19 = v3;
  if ((SlowCase & 8) != 0)
    v13 = (SlowCase - 112) | 1;
  else
    v13 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v13 & 1) != 0)
    v14 = v13 + 47;
  else
    v14 = *(_QWORD *)v13 + 32;
  Allocator = *(_QWORD **)(v14 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v14 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE335438;
  Allocator[2] = v12;
  v18 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v12 + 32), (uint64_t *)&v19, (uint64_t *)&v18);
  if (v18)
    v18[1] = 3;
  return SlowCase;
}

unint64_t WebCore::toJS(WebCore *this, JSC::JSGlobalObject *a2, WebCore::JSDOMGlobalObject *a3, WebCore::CanvasGradient *a4)
{
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  WTF *v11;
  void *v12;
  WebCore::CanvasGradient *v13;

  v6 = (uint64_t *)(*((_QWORD *)a2 + 415) + 32);
  v13 = a3;
  v7 = WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::get(v6, &v13);
  if (v7)
    return v7;
  ++*(_DWORD *)a3;
  v13 = a3;
  v9 = WebCore::toJSNewlyCreated(0, (uint64_t)a2, (WebCore::JSDOMGlobalObject *)&v13);
  if (v13)
  {
    if (*(_DWORD *)v13 == 1)
    {
      WebCore::CanvasGradient::~CanvasGradient(v13, v8);
      WTF::fastFree(v11, v12);
    }
    else
    {
      --*(_DWORD *)v13;
    }
  }
  return v9;
}

uint64_t WebCore::convertEnumerationToJS<WebCore::CanvasLineCap>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)(a1 + 41968);
  {
    WebCore::convertEnumerationToString(WebCore::CanvasLineCap)::$_0::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CanvasLineCap)::$_1::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CanvasLineCap)::values[0] = (uint64_t)&WebCore::convertEnumerationToString(WebCore::CanvasLineCap)::$_0::operator() const(void)::impl;
    *(_QWORD *)algn_1EE2F43D8 = &WebCore::convertEnumerationToString(WebCore::CanvasLineCap)::$_1::operator() const(void)::impl;
    WebCore::convertEnumerationToString(WebCore::CanvasLineCap)::$_2::operator() const(void)::impl += 2;
    qword_1EE2F43E0 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::CanvasLineCap)::$_2::operator() const(void)::impl;
  }
  v3 = WebCore::convertEnumerationToString(WebCore::CanvasLineCap)::values[(int)a2];
  if (!v3)
    return *v2;
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  *(_DWORD *)v3 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_6:
      v6 = *(_QWORD *)(a1 + 64760);
      if (!v6 || v3 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v3 - 2;
      }
      goto LABEL_9;
    }
    v8 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_6;
      v9 = v10;
    }
    v6 = *(_QWORD *)(a1 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *v2;
  }
LABEL_9:
  if (v4)
    *(_DWORD *)v3 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v3, a2);
  return v6;
}

unsigned __int8 **WTF::SortedArrayMap<std::pair<WTF::ComparableASCIISubsetLiteral<(WTF::ASCIISubset)0>,WebCore::CanvasLineCap> [3]>::tryGet<WTF::String>(unsigned __int8 ***a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 **v6;
  unsigned __int8 **v7;
  unsigned __int8 *v9;
  uint64_t v10;
  unsigned __int8 **v11;
  uint64_t v12;
  int v13;
  char v14;
  char v15;

  v3 = *a2;
  if (*a2)
  {
    v4 = *(_QWORD *)(v3 + 8);
    v5 = *(unsigned int *)(v3 + 4) | ((unint64_t)((*(_DWORD *)(v3 + 16) >> 2) & 1) << 32);
  }
  else
  {
    v4 = 0;
    v5 = 0x100000000;
  }
  v12 = v4;
  v13 = v5;
  v14 = BYTE4(v5);
  v15 = 1;
  v6 = *a1;
  if ((WTF::SortedArrayMap<std::pair<WTF::ComparableASCIISubsetLiteral<(WTF::ASCIISubset)0>,WebCore::CanvasLineCap> [3]>::tryGet<WTF::String>(WTF::String const&)const::{lambda(WTF::String&)#1}::operator()<std::pair<WTF::ComparableASCIISubsetLiteral<(WTF::ASCIISubset)0>,WebCore::CanvasLineCap> const>((uint64_t)&v12, **a1, (uint64_t)(*a1)[1]) & 1) != 0)
  {
    v7 = v6;
  }
  else
  {
    v7 = v6 + 3;
    if ((WTF::SortedArrayMap<std::pair<WTF::ComparableASCIISubsetLiteral<(WTF::ASCIISubset)0>,WebCore::CanvasLineCap> [3]>::tryGet<WTF::String>(WTF::String const&)const::{lambda(WTF::String&)#1}::operator()<std::pair<WTF::ComparableASCIISubsetLiteral<(WTF::ASCIISubset)0>,WebCore::CanvasLineCap> const>((uint64_t)&v12, v6[3], (uint64_t)v6[4]) & 1) == 0)
    {
      v7 = v6 + 9;
      v9 = v6[6];
      v10 = (uint64_t)v6[7];
      v11 = v6 + 6;
      if (WTF::SortedArrayMap<std::pair<WTF::ComparableASCIISubsetLiteral<(WTF::ASCIISubset)0>,WebCore::CanvasLineCap> [3]>::tryGet<WTF::String>(WTF::String const&)const::{lambda(WTF::String&)#1}::operator()<std::pair<WTF::ComparableASCIISubsetLiteral<(WTF::ASCIISubset)0>,WebCore::CanvasLineCap> const>((uint64_t)&v12, v9, v10))v7 = v11;
    }
  }
  if (v7 == *a1 + 9)
    return 0;
  else
    return v7 + 2;
}

uint64_t WebCore::parseEnumeration<WebCore::CanvasLineCap>(JSC::JSGlobalObject *a1, uint64_t a2)
{
  unsigned __int8 **v2;
  WTF::StringImpl *v3;
  uint64_t v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *v7;
  uint64_t v8;

  v8 = a2;
  JSC::JSValue::toWTFString((JSC::JSValue *)&v8, a1, &v7);
  v2 = WTF::SortedArrayMap<std::pair<WTF::ComparableASCIISubsetLiteral<(WTF::ASCIISubset)0>,WebCore::CanvasLineCap> [3]>::tryGet<WTF::String>((unsigned __int8 ***)WebCore::parseEnumerationFromString<WebCore::CanvasLineCap>(WTF::String const&)::enumerationMapping, (uint64_t *)&v7);
  if (v2)
    v4 = *(unsigned int *)v2 | 0x100000000;
  else
    v4 = 0;
  v5 = v7;
  v7 = 0;
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      WTF::StringImpl::destroy(v5, v3);
    else
      *(_DWORD *)v5 -= 2;
  }
  return v4;
}

uint64_t WebCore::convertEnumerationToJS<WebCore::CanvasLineJoin>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)(a1 + 41968);
  {
    WebCore::convertEnumerationToString(WebCore::CanvasLineJoin)::$_0::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CanvasLineJoin)::$_1::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CanvasLineJoin)::values[0] = (uint64_t)&WebCore::convertEnumerationToString(WebCore::CanvasLineJoin)::$_0::operator() const(void)::impl;
    *(_QWORD *)algn_1EE2F43F8 = &WebCore::convertEnumerationToString(WebCore::CanvasLineJoin)::$_1::operator() const(void)::impl;
    WebCore::convertEnumerationToString(WebCore::CanvasLineJoin)::$_2::operator() const(void)::impl += 2;
    qword_1EE2F4400 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::CanvasLineJoin)::$_2::operator() const(void)::impl;
  }
  v3 = WebCore::convertEnumerationToString(WebCore::CanvasLineJoin)::values[(int)a2];
  if (!v3)
    return *v2;
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  *(_DWORD *)v3 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_6:
      v6 = *(_QWORD *)(a1 + 64760);
      if (!v6 || v3 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v3 - 2;
      }
      goto LABEL_9;
    }
    v8 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_6;
      v9 = v10;
    }
    v6 = *(_QWORD *)(a1 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *v2;
  }
LABEL_9:
  if (v4)
    *(_DWORD *)v3 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v3, a2);
  return v6;
}

uint64_t WebCore::parseEnumeration<WebCore::CanvasLineJoin>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  int v5;
  const char *v6;
  int v7;
  BOOL v8;
  char **v9;
  uint64_t v10;
  BOOL v12;
  int v13;
  uint64_t v16;
  unint64_t v17;

  v3 = a1;
  v17 = this;
  if ((this & 0xFFFE000000000002) != 0 || *(_BYTE *)(this + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v17, a1);
    v4 = v16;
  }
  else
  {
    v4 = *(_QWORD *)(this + 8);
    if ((v4 & 1) != 0)
      v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
    if (v4)
      *(_DWORD *)v4 += 2;
  }
  if (!v4)
    return 0;
  v5 = *(_DWORD *)(v4 + 16);
  v6 = *(const char **)(v4 + 8);
  v7 = *(_DWORD *)(v4 + 4);
  v8 = v7 != 5;
  if (v6 == "bevel" || v7 != 5)
  {
    v12 = v6 == "bevel" && v7 == 5;
    v13 = *(_DWORD *)(v4 + 4);
    if (v12)
      goto LABEL_14;
  }
  else
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 == 98 && *(_WORD *)(v6 + 1) == 30309 && *(_WORD *)(v6 + 3) == 27749)
      {
LABEL_14:
        v9 = &WebCore::parseEnumerationFromString<WebCore::CanvasLineJoin>(WTF::String const&)::mappings;
LABEL_15:
        v10 = *((unsigned int *)v9 + 4) | 0x100000000;
        goto LABEL_16;
      }
    }
    else if (*(_WORD *)v6 == 98 && *(_QWORD *)(v6 + 2) == 0x6C006500760065)
    {
      goto LABEL_14;
    }
    v13 = 5;
  }
  if (v6 == "miter" || v7 != 5)
  {
    if (v6 == "miter" && v7 == 5)
      goto LABEL_39;
  }
  else
  {
    if (!v13)
    {
LABEL_39:
      v9 = &off_1E3237EE8;
      goto LABEL_15;
    }
    if ((v5 & 4) != 0)
    {
      if (*v6 == 109 && *(_WORD *)(v6 + 1) == 29801 && *(_WORD *)(v6 + 3) == 29285)
        goto LABEL_39;
    }
    else if (*(_WORD *)v6 == 109 && *(_QWORD *)(v6 + 2) == 0x72006500740069)
    {
      goto LABEL_39;
    }
  }
  if (v6 == "round")
    v8 = 1;
  if (v8)
  {
    if (v7 == 5 && v6 == "round")
      goto LABEL_50;
  }
  else
  {
    if (!v13)
    {
LABEL_50:
      v9 = &off_1E3237F00;
      goto LABEL_15;
    }
    if ((v5 & 4) != 0)
    {
      if (*v6 == 114 && *(_WORD *)(v6 + 1) == 30063 && *(_WORD *)(v6 + 3) == 25710)
        goto LABEL_50;
    }
    else if (*(_WORD *)v6 == 114 && *(_QWORD *)(v6 + 2) == 0x64006E0075006FLL)
    {
      goto LABEL_50;
    }
  }
  v10 = 0;
LABEL_16:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v10;
}

uint64_t WebCore::JSCanvasPattern::destroy(uint64_t this, JSC::JSCell *a2)
{
  WTF *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v2 = *(WTF **)(this + 24);
  *(_QWORD *)(this + 24) = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = *((_QWORD *)v2 + 1);
      *((_QWORD *)v2 + 1) = 0;
      if (v3)
      {
        if (*(_DWORD *)v3 == 1)
        {
          if (*(_BYTE *)(v3 + 40))
          {
            v4 = *(unsigned int *)(v3 + 32);
            if ((_DWORD)v4 != -1)
              ((void (*)(char *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11NativeImageENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS7_INS8_11ImageBufferENSA_ISF_EENSC_ISF_EEEENS6_23ObjectIdentifierGenericINS8_31RenderingResourceIdentifierTypeENS6_38ObjectIdentifierThreadSafeAccessTraitsIyEEyEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSQ_EEEDcOSR_DpOT0____fmatrix[v4])(&v6, v3 + 24);
            *(_DWORD *)(v3 + 32) = -1;
          }
          v5 = *(unsigned int *)(v3 + 16);
          if ((_DWORD)v5 != -1)
            ((void (*)(char *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11NativeImageENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS7_INS8_11ImageBufferENSA_ISF_EENSC_ISF_EEEENS6_23ObjectIdentifierGenericINS8_31RenderingResourceIdentifierTypeENS6_38ObjectIdentifierThreadSafeAccessTraitsIyEEyEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSQ_EEEDcOSR_DpOT0____fmatrix[v5])(&v7, v3 + 8);
          *(_DWORD *)(v3 + 16) = -1;
          WTF::fastFree((WTF *)v3, a2);
        }
        else
        {
          --*(_DWORD *)v3;
        }
      }
      return WTF::fastFree(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
  return this;
}

uint64_t WebCore::JSCanvasPattern::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCanvasPatternPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCanvasPatternPrototype::create(WebCore::JSCanvasPatternPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSCanvasPattern::s_info, (uint64_t)&WebCore::JSCanvasPatternPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCanvasPattern>,(WebCore::DOMConstructorID)604>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4832);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCanvasPattern>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSCanvasPattern::s_info + ~((_QWORD)&WebCore::JSCanvasPattern::s_info << 32)) ^ (((unint64_t)&WebCore::JSCanvasPattern::s_info + ~((_QWORD)&WebCore::JSCanvasPattern::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSCanvasPattern::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSCanvasPattern::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSCanvasPatternPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSCanvasPatternPrototype::create((WebCore::JSCanvasPatternPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSCanvasPattern::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSCanvasPattern::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4832) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCanvasPatternConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCanvasPatternPrototype::s_info != (char **)(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCanvasPattern>,(WebCore::DOMConstructorID)604>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSCanvasPatternOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

_QWORD *WebCore::JSCanvasPatternOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  WTF *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WTF *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *result;
  char v28;
  char v29;

  v3 = *(WTF **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(WTF **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(WTF **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
  {
    v24 = *((_QWORD *)v3 + 1);
    *((_QWORD *)v3 + 1) = 0;
    if (v24)
    {
      if (*(_DWORD *)v24 == 1)
      {
        if (*(_BYTE *)(v24 + 40))
        {
          v25 = *(unsigned int *)(v24 + 32);
          if ((_DWORD)v25 != -1)
            ((void (*)(char *, uint64_t, uint64_t *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11NativeImageENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS7_INS8_11ImageBufferENSA_ISF_EENSC_ISF_EEEENS6_23ObjectIdentifierGenericINS8_31RenderingResourceIdentifierTypeENS6_38ObjectIdentifierThreadSafeAccessTraitsIyEEyEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSQ_EEEDcOSR_DpOT0____fmatrix[v25])(&v28, v24 + 24, v4);
          *(_DWORD *)(v24 + 32) = -1;
        }
        v26 = *(unsigned int *)(v24 + 16);
        if ((_DWORD)v26 != -1)
          ((void (*)(char *, uint64_t, uint64_t *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11NativeImageENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS7_INS8_11ImageBufferENSA_ISF_EENSC_ISF_EEEENS6_23ObjectIdentifierGenericINS8_31RenderingResourceIdentifierTypeENS6_38ObjectIdentifierThreadSafeAccessTraitsIyEEyEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSQ_EEEDcOSR_DpOT0____fmatrix[v26])(&v29, v24 + 8, v4);
        *(_DWORD *)(v24 + 16) = -1;
        WTF::fastFree((WTF *)v24, a2);
      }
      else
      {
        --*(_DWORD *)v24;
      }
    }
    return (_QWORD *)WTF::fastFree(v3, a2);
  }
  else
  {
    --*(_DWORD *)v3;
  }
  return result;
}

unint64_t WebCore::createWrapper<WebCore::CanvasPattern,WebCore::CanvasPattern>(uint64_t a1, WTF **a2)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  uint64_t *v14;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v16;
  JSC::Structure *v17;
  JSC::JSCell *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  WTF *v30;
  uint64_t v31;
  uint64_t v32;
  WTF *v33;
  void *v34;
  int v35;
  unint64_t SlowCase;
  WTF *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *Allocator;
  unint64_t v43;
  _QWORD *v44;
  WTF *v45;

  v4 = *a2;
  v5 = *(_QWORD *)(a1 + 3296);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSCanvasPattern::s_info + ~((_QWORD)&WebCore::JSCanvasPattern::s_info << 32)) ^ (((unint64_t)&WebCore::JSCanvasPattern::s_info + ~((_QWORD)&WebCore::JSCanvasPattern::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSCanvasPattern::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSCanvasPattern::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = *(uint64_t **)(a1 + 56);
  Structure = WebCore::JSCanvasPatternPrototype::createStructure(v14, a1, *(JSC::JSCell **)(a1 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v18 = (JSC::JSCell *)WebCore::JSCanvasPatternPrototype::create((WebCore::JSCanvasPatternPrototype *)v14, Structure, v16, v17);
  v19 = WebCore::JSCanvasPattern::createStructure(v14, a1, v18);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v19, (uint64_t)&WebCore::JSCanvasPattern::s_info);
LABEL_8:
  v20 = *(_QWORD *)(a1 + 56);
  v21 = *(_QWORD *)(v20 + 41456);
  v22 = *(_QWORD *)(v21 + 23536);
  v23 = *(_QWORD **)(v22 + 4912);
  if (v23)
    goto LABEL_28;
  v24 = *(_QWORD *)(v21 + 22648);
  if (__ldaxr((unsigned __int8 *)v24))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v24))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v24);
LABEL_13:
  v26 = *(_QWORD *)(v24 + 2824);
  if (!*(_QWORD *)(v26 + 4912))
  {
    v27 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v45, "IsoSpace T");
    v44 = 0;
    MEMORY[0x19AEA3204](v27, &v45, v20 + 192, v20 + 1872, 32, 8, &v44);
    v29 = (uint64_t)v44;
    v44 = 0;
    if (v29)
      (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
    v30 = v45;
    v45 = 0;
    if (v30)
    {
      if (*(_DWORD *)v30 == 1)
        WTF::fastFree(v30, v28);
      else
        --*(_DWORD *)v30;
    }
    v31 = *(_QWORD *)(v26 + 4912);
    *(_QWORD *)(v26 + 4912) = v27;
    if (v31)
      (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
  }
  v23 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v32 = *(_QWORD *)(v22 + 4912);
  *(_QWORD *)(v22 + 4912) = v23;
  if (v32)
  {
    v33 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v33, v34);
  }
  v35 = __ldxr((unsigned __int8 *)v24);
  if (v35 != 1)
  {
    __clrex();
    goto LABEL_27;
  }
  if (__stlxr(0, (unsigned __int8 *)v24))
LABEL_27:
    WTF::Lock::unlockSlow((WTF::Lock *)v24);
LABEL_28:
  SlowCase = v23[3];
  if (SlowCase < v23[4])
  {
LABEL_29:
    v23[3] = SlowCase + 32;
    goto LABEL_30;
  }
  SlowCase = v23[5];
  if ((SlowCase & 1) == 0)
  {
    v43 = *(_QWORD *)(SlowCase + 8) ^ v23[6];
    v23[4] = SlowCase + HIDWORD(v43);
    v23[5] = SlowCase + (int)v43;
    goto LABEL_29;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_30:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  v37 = *a2;
  *a2 = 0;
  *(_QWORD *)(SlowCase + 24) = v37;
  if (*(_BYTE *)(v20 + 755))
    __dmb(0xAu);
  v38 = *(_QWORD *)(a1 + 3320);
  if ((byte_1EE334E78 & 1) == 0)
  {
    qword_1EE334E70 = (uint64_t)&off_1E3238658;
    byte_1EE334E78 = 1;
  }
  v45 = v4;
  if ((SlowCase & 8) != 0)
    v39 = (SlowCase - 112) | 1;
  else
    v39 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v39 & 1) != 0)
    v40 = v39 + 47;
  else
    v40 = *(_QWORD *)v39 + 32;
  Allocator = *(_QWORD **)(v40 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v40 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE334E70;
  Allocator[2] = v38;
  v44 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v38 + 32), (uint64_t *)&v45, (uint64_t *)&v44);
  if (v44)
    v44[1] = 3;
  return SlowCase;
}

uint64_t WebCore::JSCanvasRenderingContext2D::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 88);
  if (!v2 || !*(_BYTE *)(v2 + 24))
    return WebCore::JSCanvasRenderingContext2D::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
  result = 75;
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCanvasRenderingContext2D::destroy(uint64_t this, JSCell *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(this + 24);
  *(_QWORD *)(this + 24) = 0;
  if (v2)
    return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 24))(*(_QWORD *)(v2 + 32));
  return this;
}

uint64_t WebCore::JSCanvasRenderingContext2D::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCanvasRenderingContext2D::visitChildren(uint64_t a1, uint64_t a2)
{
  JSC::JSObject::visitChildren();
  return WebCore::JSCanvasRenderingContext2D::visitAdditionalChildren<JSC::AbstractSlotVisitor>(a1, a2);
}

uint64_t WebCore::JSCanvasRenderingContext2D::visitChildren(WebCore::JSCanvasRenderingContext2D *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    JSC::JSObject::visitChildren();
    result = WebCore::JSCanvasRenderingContext2D::visitAdditionalChildren<JSC::AbstractSlotVisitor>((uint64_t)this, (uint64_t)a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSCanvasRenderingContext2DPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCanvasRenderingContext2DPrototype::create(WebCore::JSCanvasRenderingContext2DPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  int *v9;
  uint64_t i;
  char *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BOOL4 v17;
  WTF::StringImpl *v18;
  int v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  uint64_t v22;
  WTF::StringImpl *v23;
  int v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  uint64_t v27;
  WTF::StringImpl *v28;
  int v29;
  WTF::StringImpl *v30;
  uint64_t v31;
  uint64_t v32;
  WTF::StringImpl *v33;
  int v34;
  WTF::StringImpl *v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  uint64_t v38;
  WTF::StringImpl *v39;
  JSC::Structure *v40;
  int v41;
  unint64_t v43;
  WTF::StringImpl *v44[6];
  int v45;
  int v46;
  JSC::Structure *v47;
  int v48;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v43 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v43);
    *((_QWORD *)this + 4865) = SlowCase + (int)v43;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  v9 = (int *)((char *)this + 93124);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)SlowCase, this);
  for (i = 0; i != 420; i += 5)
  {
    v11 = (&WebCore::JSCanvasRenderingContext2DPrototypeTableValues)[i + 1];
    if (v11)
    {
      if (v11 == (char *)2)
        JSC::SmallStrings::singleCharacterStringRep((WebCore::JSCanvasRenderingContext2DPrototype *)((char *)this + 41968));
      else
        WTF::AtomStringImpl::addLiteral();
      v12 = v44[0];
      JSC::reifyStaticProperty(this, (uint64_t)&WebCore::JSCanvasRenderingContext2D::s_info, (unint64_t *)v44, (uint64_t)&(&WebCore::JSCanvasRenderingContext2DPrototypeTableValues)[i], (unsigned __int8 *)SlowCase);
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, v13);
        else
          *(_DWORD *)v12 -= 2;
      }
    }
  }
  v14 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v14 && *(_BYTE *)(v14 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x19490171CLL);
  }
  v15 = v14 - 192;
  if (!v14)
    v15 = 0;
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 680) + 672);
  v17 = (v16 & 0x80000000000000) == 0;
  if ((v16 & 0x80000000000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v18 = v44[0];
    v19 = *v9;
    *v9 = 1;
    LODWORD(v44[0]) = -1;
    WORD2(v44[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v9 = v19;
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v20);
      else
        *(_DWORD *)v18 -= 2;
    }
  }
  v21 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v21 && *(_BYTE *)(v21 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x19490173CLL);
  }
  v22 = v21 - 192;
  if (!v21)
    v22 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v22 + 680) + 664) & 0x1000000000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v23 = v44[0];
    v24 = *v9;
    v17 = 1;
    *v9 = 1;
    LODWORD(v44[0]) = -1;
    WORD2(v44[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v9 = v24;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v25);
      else
        *(_DWORD *)v23 -= 2;
    }
  }
  v26 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v26 && *(_BYTE *)(v26 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x19490175CLL);
  }
  v27 = v26 - 192;
  if (!v26)
    v27 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v27 + 680) + 664) & 0x1000000000000) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v28 = v44[0];
    v29 = *v9;
    v17 = 1;
    *v9 = 1;
    LODWORD(v44[0]) = -1;
    WORD2(v44[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v9 = v29;
    if (v28)
    {
      if (*(_DWORD *)v28 == 2)
        WTF::StringImpl::destroy(v28, v30);
      else
        *(_DWORD *)v28 -= 2;
    }
  }
  v31 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)SlowCase & 0xFFFFFFFE)
                                                                                          + 0x28));
  if (v31 && *(_BYTE *)(v31 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x19490177CLL);
  }
  v32 = v31 - 192;
  if (!v31)
    v32 = 0;
  if ((*(_QWORD *)(*(_QWORD *)(v32 + 680) + 664) & 0x400000000000) != 0)
  {
    if (!v17)
      goto LABEL_51;
  }
  else
  {
    WTF::AtomStringImpl::addLiteral();
    v33 = v44[0];
    v34 = *v9;
    *v9 = 1;
    LODWORD(v44[0]) = -1;
    WORD2(v44[0]) = 1;
    JSC::JSObject::deleteProperty();
    *v9 = v34;
    if (v33)
    {
      if (*(_DWORD *)v33 == 2)
        WTF::StringImpl::destroy(v33, v35);
      else
        *(_DWORD *)v33 -= 2;
    }
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x10) & 3) != 0)
    JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE)), this, (JSC::JSObject *)SlowCase);
LABEL_51:
  v36 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v38 = JSC::JSString::create((uint64_t)this, v44);
  v39 = v44[0];
  v44[0] = 0;
  if (v39)
  {
    if (*(_DWORD *)v39 == 2)
      WTF::StringImpl::destroy(v39, v37);
    else
      *(_DWORD *)v39 -= 2;
  }
  v40 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v48 = *(_DWORD *)SlowCase;
  v47 = v40;
  v41 = JSC::Structure::outOfLineCapacity(v40);
  v45 = 0;
  v46 = v41;
  v44[0] = (WTF::StringImpl *)&v46;
  v44[1] = (WTF::StringImpl *)SlowCase;
  v44[2] = this;
  v44[3] = (WTF::StringImpl *)&v48;
  v44[4] = (WTF::StringImpl *)&v47;
  v44[5] = (WTF::StringImpl *)&v45;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v40, this, v36, 6, (uint64_t)v44);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v45, v38);
  *((_DWORD *)v40 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCanvasRenderingContext2D>,(WebCore::DOMConstructorID)605>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4840);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCanvasRenderingContext2D>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSCanvasRenderingContext2D::s_info
         + ~((_QWORD)&WebCore::JSCanvasRenderingContext2D::s_info << 32)) ^ (((unint64_t)&WebCore::JSCanvasRenderingContext2D::s_info
                                                                            + ~((_QWORD)&WebCore::JSCanvasRenderingContext2D::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSCanvasRenderingContext2D::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSCanvasRenderingContext2D::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSCanvasRenderingContext2DPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSCanvasRenderingContext2DPrototype::create((WebCore::JSCanvasRenderingContext2DPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSCanvasRenderingContext2D::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSCanvasRenderingContext2D::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 4840) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCanvasRenderingContext2DConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCanvasRenderingContext2DPrototype::s_info != (char **)(16
                                                                        * *(unsigned int *)(16
                                                                                          * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                          + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCanvasRenderingContext2D>,(WebCore::DOMConstructorID)605>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCanvasRenderingContext2D_canvas(WebCore *a1, uint64_t a2)
{
  uint64_t v3;
  JSC::JSGlobalObject *v4;
  WebCore::HTMLElement *v5;
  uint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 32);
  v4 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3) & 1) != 0)
    return WebCore::toJS(a1, v4, (WebCore::JSDOMGlobalObject *)(v3 - 112), v5);
  result = 96;
  __break(0xC471u);
  return result;
}

unint64_t WebCore::jsCanvasRenderingContext2D_webkitBackingStorePixelRatio()
{
  return 0xFFFE000000000001;
}

void WebCore::jsCanvasRenderingContext2D_webkitImageSmoothingEnabled(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WebCore::InspectorInstrumentation *v3;
  WebCore::ScriptExecutionContext *v4;
  uint64_t v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  _QWORD v8[2];
  WTF::StringImpl *v9;

  v2 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v2 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v8[0] = 0;
    v8[1] = 0;
    v3 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 144))(*(_QWORD *)(v2 + 32));
    if (v3)
    {
      v5 = WebCore::InspectorInstrumentation::instrumentingAgents(v3, v4);
      if (v5)
      {
        v6 = *(_QWORD *)(v5 + 96);
        if (v6)
          WebCore::InspectorCanvasAgent::recordAction(v6, (WebCore::CanvasRenderingContext *)v2, (const WTF::StringImpl *)&v9, v8);
      }
    }
    v7 = v9;
    v9 = 0;
    if (v7)
    {
      if (*(_DWORD *)v7 == 2)
        WTF::StringImpl::destroy(v7, v4);
      else
        *(_DWORD *)v7 -= 2;
    }
  }
  if (!*(_DWORD *)(v2 + 132))
    __break(0xC471u);
}

BOOL WebCore::setJSCanvasRenderingContext2D_webkitImageSmoothingEnabled(uint64_t a1, unint64_t a2, unint64_t a3)
{
  JSC::VM *v5;
  unint64_t v6;
  double v7;
  _BOOL8 v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  char v15;
  unsigned __int8 v16;
  WebCore::InspectorInstrumentation *v18;
  WebCore::ScriptExecutionContext *v19;
  uint64_t v20;
  WebCore::InspectorCanvasAgent *v21;
  WebCore::InspectorInstrumentation *v22;
  WebCore::ScriptExecutionContext *v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  WTF::StringImpl *v27;
  BOOL v28;
  int v29;
  uint64_t v30;
  int *v31;
  int v32;
  _QWORD v33[2];
  WTF::StringImpl *v34;
  _QWORD v35[2];
  char v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v5 = *(JSC::VM **)(a1 + 56);
  v6 = JSC::jsDynamicCast<WebCore::JSCanvasRenderingContext2D *>(a2);
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v28 = (_DWORD)a3 == 0;
    goto LABEL_58;
  }
  *(_QWORD *)&v7 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v8 = a3 == 7;
      goto LABEL_6;
    }
    v29 = *(unsigned __int8 *)(a3 + 5);
    if (v29 == 3)
    {
      v32 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v29 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v8 = 1;
          goto LABEL_6;
        }
        v28 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_58;
      }
      v30 = *(_QWORD *)(a3 + 8);
      if ((v30 & 1) != 0)
        v31 = (int *)(a3 + 16);
      else
        v31 = (int *)(v30 + 4);
      v32 = *v31;
    }
    v28 = v32 == 0;
LABEL_58:
    v8 = !v28;
    goto LABEL_6;
  }
  v8 = v7 > 0.0 || v7 < 0.0;
LABEL_6:
  v9 = *(_QWORD *)(v6 + 24);
  if (!*((_DWORD *)v5 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) == 0)
  {
    if (*(_BYTE *)(v9 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v18 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
      if (v18
        && (v20 = WebCore::InspectorInstrumentation::instrumentingAgents(v18, v19)) != 0
        && (v21 = *(WebCore::InspectorCanvasAgent **)(v20 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v21, (WebCore::CanvasRenderingContext *)v9, (WTF::JSONImpl::Value *)v8, (uint64_t)v35);
      }
      else
      {
        LOBYTE(v35[0]) = 0;
        v36 = 0;
      }
      v33[0] = v35;
      v33[1] = 1;
      v22 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
      if (v22)
      {
        v24 = WebCore::InspectorInstrumentation::instrumentingAgents(v22, v23);
        if (v24)
        {
          v25 = *(_QWORD *)(v24 + 96);
          if (v25)
            WebCore::InspectorCanvasAgent::recordAction(v25, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v34, v33);
        }
      }
      if (v36)
      {
        v26 = (_DWORD *)v35[0];
        v35[0] = 0;
        if (v26)
        {
          if (*v26 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v26;
        }
      }
      v27 = v34;
      v34 = 0;
      if (v27)
      {
        if (*(_DWORD *)v27 == 2)
          WTF::StringImpl::destroy(v27, v23);
        else
          *(_DWORD *)v27 -= 2;
      }
    }
    v10 = *(_DWORD *)(v9 + 132);
    if (v10)
    {
      if (*(_BYTE *)(*(_QWORD *)(v9 + 120) + 560 * v10 - 368) == v8)
        return 1;
      WebCore::CanvasRenderingContext2DBase::realizeSaves((WebCore::CanvasRenderingContext2DBase::State *)v9);
      v11 = *(_DWORD *)(v9 + 132);
      if (!v11)
      {
        __break(0xC471u);
        JUMPOUT(0x1949020C8);
      }
      *(_BYTE *)(*(_QWORD *)(v9 + 120) + 560 * v11 - 368) = v8;
      v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 240))(v9);
      if (!v12)
        return 1;
      if (!v8)
      {
        v16 = 1;
LABEL_21:
        if (*(unsigned __int8 *)(v12 + 340) != v16)
        {
          *(_BYTE *)(v12 + 340) = v16;
          *(_DWORD *)(v12 + 184) |= 0x400u;
        }
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v12 + 88))(v12, v12 + 8);
        return 1;
      }
      v13 = *(_DWORD *)(v9 + 132);
      if (v13)
      {
        v14 = *(_DWORD *)(*(_QWORD *)(v9 + 120) + 560 * v13 - 364);
        if (v14 == 1)
          v15 = 3;
        else
          v15 = 2;
        if (v14 == 2)
          v16 = 4;
        else
          v16 = v15;
        goto LABEL_21;
      }
    }
    __break(0xC471u);
    JUMPOUT(0x1949020C0);
  }
  return 0;
}

WTF::StringImpl *WebCore::jsCanvasRenderingContext2D_webkitLineDash(WTF::StringImpl *result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  WebCore::InspectorInstrumentation *v6;
  WebCore::ScriptExecutionContext *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];
  WTF::StringImpl *v11;

  v3 = (uint64_t)result;
  v4 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v4 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v10[0] = 0;
    v10[1] = 0;
    v6 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 144))(*(_QWORD *)(v4 + 32));
    if (v6)
    {
      v8 = WebCore::InspectorInstrumentation::instrumentingAgents(v6, v7);
      if (v8)
      {
        v9 = *(_QWORD *)(v8 + 96);
        if (v9)
          WebCore::InspectorCanvasAgent::recordAction(v9, (WebCore::CanvasRenderingContext *)v4, (const WTF::StringImpl *)&v11, v10);
      }
    }
    result = v11;
    v11 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v7);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v5 = *(_DWORD *)(v4 + 132);
  if (v5)
    return (WTF::StringImpl *)WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLUnrestrictedDouble>>::convert<double,0ul>(v3, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(v4 + 120) + 560 * v5 - 392);
  __break(0xC471u);
  return result;
}

BOOL WebCore::setJSCanvasRenderingContext2D_webkitLineDash(JSC::JSGlobalObject *a1, unint64_t a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  int v7;
  _BOOL8 v8;
  uint64_t v9;
  void *v10;
  WTF *v11;
  WebCore::InspectorInstrumentation *v13;
  WebCore::ScriptExecutionContext *v14;
  uint64_t v15;
  uint64_t v16;
  WebCore::InspectorInstrumentation *v17;
  WebCore::ScriptExecutionContext *v18;
  uint64_t v19;
  uint64_t v20;
  WTF *v21;
  WTF::StringImpl *v22;
  _QWORD v23[2];
  WTF::StringImpl *v24;
  WTF *v25;
  uint64_t v26;
  int v27;
  WTF *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v5 = JSC::jsDynamicCast<WebCore::JSCanvasRenderingContext2D *>(a2);
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(_QWORD *)(v5 + 24);
  WebCore::Detail::NumericSequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLUnrestrictedDouble>>::convert(a3, a1, (uint64_t)&v25);
  v7 = v27;
  v8 = v27 == 0;
  if (!v27)
  {
    if (*(_BYTE *)(v6 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      if (v27)
        goto LABEL_29;
      v13 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v6 + 32) + 144))(*(_QWORD *)(v6 + 32));
      if (v13
        && (v15 = WebCore::InspectorInstrumentation::instrumentingAgents(v13, v14)) != 0
        && (v16 = *(_QWORD *)(v15 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v16, v6, (uint64_t)&v25, (uint64_t)&v28);
      }
      else
      {
        LOBYTE(v28) = 0;
        v30 = 0;
      }
      v23[0] = &v28;
      v23[1] = 1;
      v17 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v6 + 32) + 144))(*(_QWORD *)(v6 + 32));
      if (v17)
      {
        v19 = WebCore::InspectorInstrumentation::instrumentingAgents(v17, v18);
        if (v19)
        {
          v20 = *(_QWORD *)(v19 + 96);
          if (v20)
            WebCore::InspectorCanvasAgent::recordAction(v20, (WebCore::CanvasRenderingContext *)v6, (const WTF::StringImpl *)&v24, v23);
        }
      }
      if (v30)
      {
        v21 = v28;
        v28 = 0;
        if (v21)
        {
          if (*(_DWORD *)v21 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*(_DWORD *)v21;
        }
      }
      v22 = v24;
      v24 = 0;
      if (v22)
      {
        if (*(_DWORD *)v22 == 2)
          goto LABEL_30;
        *(_DWORD *)v22 -= 2;
      }
      while (v27)
      {
LABEL_29:
        v22 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_30:
        WTF::StringImpl::destroy(v22, v18);
      }
    }
    v28 = v25;
    v9 = v26;
    v25 = 0;
    v26 = 0;
    v29 = v9;
    WebCore::CanvasRenderingContext2DBase::setWebkitLineDash((WebCore::CanvasRenderingContext2DBase *)v6, (const void **)&v28);
    v11 = v28;
    if (v28)
    {
      v28 = 0;
      LODWORD(v29) = 0;
      WTF::fastFree(v11, v10);
    }
    v7 = v27;
  }
  if (v7 != -1)
    ((void (*)(WTF **, WTF **))off_1E3249748[v7])(&v28, &v25);
  return v8;
}

void WebCore::jsCanvasRenderingContext2D_webkitLineDashOffset(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WebCore::InspectorInstrumentation *v4;
  WebCore::ScriptExecutionContext *v5;
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  _QWORD v9[2];
  WTF::StringImpl *v10;

  v2 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v2 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v9[0] = 0;
    v9[1] = 0;
    v4 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 144))(*(_QWORD *)(v2 + 32));
    if (v4)
    {
      v6 = WebCore::InspectorInstrumentation::instrumentingAgents(v4, v5);
      if (v6)
      {
        v7 = *(_QWORD *)(v6 + 96);
        if (v7)
          WebCore::InspectorCanvasAgent::recordAction(v7, (WebCore::CanvasRenderingContext *)v2, (const WTF::StringImpl *)&v10, v9);
      }
    }
    v8 = v10;
    v10 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 2)
        WTF::StringImpl::destroy(v8, v5);
      else
        *(_DWORD *)v8 -= 2;
    }
  }
  if (!*(_DWORD *)(v2 + 132))
    __break(0xC471u);
}

BOOL WebCore::setJSCanvasRenderingContext2D_webkitLineDashOffset(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  JSC::VM *v5;
  unint64_t v6;
  uint64_t v7;
  double v8;
  WebCore::InspectorInstrumentation *v10;
  WebCore::ScriptExecutionContext *v11;
  uint64_t v12;
  WebCore::InspectorCanvasAgent *v13;
  WebCore::InspectorInstrumentation *v14;
  WebCore::ScriptExecutionContext *v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v18;
  WTF::StringImpl *v19;
  double v20;
  _QWORD v21[2];
  WTF::StringImpl *v22;
  _QWORD v23[2];
  char v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v6 = JSC::jsDynamicCast<WebCore::JSCanvasRenderingContext2D *>(a2);
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(_QWORD *)(v6 + 24);
  v23[0] = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v8 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v23, a1);
    v8 = v20;
  }
  else
  {
    *(_QWORD *)&v8 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
    return 0;
  if (*(_BYTE *)(v7 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v10 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v7 + 32) + 144))(*(_QWORD *)(v7 + 32));
    if (v10
      && (v12 = WebCore::InspectorInstrumentation::instrumentingAgents(v10, v11)) != 0
      && (v13 = *(WebCore::InspectorCanvasAgent **)(v12 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v13, (WebCore::CanvasRenderingContext *)v7, v8, (uint64_t)v23);
    }
    else
    {
      LOBYTE(v23[0]) = 0;
      v24 = 0;
    }
    v21[0] = v23;
    v21[1] = 1;
    v14 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v7 + 32) + 144))(*(_QWORD *)(v7 + 32));
    if (v14)
    {
      v16 = WebCore::InspectorInstrumentation::instrumentingAgents(v14, v15);
      if (v16)
      {
        v17 = *(_QWORD *)(v16 + 96);
        if (v17)
          WebCore::InspectorCanvasAgent::recordAction(v17, (WebCore::CanvasRenderingContext *)v7, (const WTF::StringImpl *)&v22, v21);
      }
    }
    if (v24)
    {
      v18 = (_DWORD *)v23[0];
      v23[0] = 0;
      if (v18)
      {
        if (*v18 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v18;
      }
    }
    v19 = v22;
    v22 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v15);
      else
        *(_DWORD *)v19 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::setLineDashOffset((WTF *)v7, v8);
  return 1;
}

void WebCore::jsCanvasRenderingContext2D_globalAlpha(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WebCore::InspectorInstrumentation *v4;
  WebCore::ScriptExecutionContext *v5;
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  _QWORD v9[2];
  WTF::StringImpl *v10;

  v2 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v2 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v9[0] = 0;
    v9[1] = 0;
    v4 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 144))(*(_QWORD *)(v2 + 32));
    if (v4)
    {
      v6 = WebCore::InspectorInstrumentation::instrumentingAgents(v4, v5);
      if (v6)
      {
        v7 = *(_QWORD *)(v6 + 96);
        if (v7)
          WebCore::InspectorCanvasAgent::recordAction(v7, (WebCore::CanvasRenderingContext *)v2, (const WTF::StringImpl *)&v10, v9);
      }
    }
    v8 = v10;
    v10 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 2)
        WTF::StringImpl::destroy(v8, v5);
      else
        *(_DWORD *)v8 -= 2;
    }
  }
  if (!*(_DWORD *)(v2 + 132))
    __break(0xC471u);
}

BOOL WebCore::IDLAttribute<WebCore::JSCanvasRenderingContext2D>::set<&WebCore::setJSCanvasRenderingContext2D_globalAlphaSetter,(WebCore::CastedThisErrorBehavior)0>(JSC::JSGlobalObject *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;

  v5 = JSC::jsDynamicCast<WebCore::JSCanvasRenderingContext2D *>(a2);
  if (v5)
    return WebCore::setJSCanvasRenderingContext2D_globalAlphaSetter(a1, *(WebCore::InspectorCanvasCallTracer **)(v5 + 24), a3);
  else
    return JSC::throwDOMAttributeSetterTypeError() != 0;
}

WTF::StringImpl *WebCore::jsCanvasRenderingContext2D_globalCompositeOperation(WTF::StringImpl *result, uint64_t a2)
{
  WTF::StringImpl *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  unint64_t v6;
  char **v7;
  char *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned int v15;
  unsigned int v16;
  WebCore::InspectorInstrumentation *v17;
  WebCore::ScriptExecutionContext *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v21[2];
  WTF::StringImpl *v22;

  v2 = result;
  v3 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v21[0] = 0;
    v21[1] = 0;
    v17 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v3 + 32) + 144))(*(_QWORD *)(v3 + 32));
    if (v17)
    {
      v19 = WebCore::InspectorInstrumentation::instrumentingAgents(v17, v18);
      if (v19)
      {
        v20 = *(_QWORD *)(v19 + 96);
        if (v20)
          WebCore::InspectorCanvasAgent::recordAction(v20, (WebCore::CanvasRenderingContext *)v3, (const WTF::StringImpl *)&v22, v21);
      }
    }
    result = v22;
    v22 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v18);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v4 = *(_DWORD *)(v3 + 132);
  if (v4)
  {
    v5 = *(_QWORD *)(v3 + 120) + 560 * v4 - 560;
    v6 = *(unsigned __int8 *)(v5 + 105);
    if (v6 < 2)
      v7 = &(&WebCore::compositeOperatorNames)[2 * *(unsigned __int8 *)(v5 + 104)];
    else
      v7 = &(&WebCore::blendOperatorNames)[2 * (v6 - 1)];
    v8 = v7[1];
    if (v8)
    {
      v9 = (WTF::StringImpl *)(v8 - 1);
      if (v8 == (char *)1)
      {
        v10 = (WTF::StringImpl *)MEMORY[0x1E0CBEF70];
        *MEMORY[0x1E0CBEF70] += 2;
      }
      else
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v10 = v21[0];
      }
      v11 = *((_QWORD *)v2 + 7);
      if (v10)
      {
        v12 = *((_DWORD *)v10 + 1);
        if (v12)
        {
          if (v12 != 1)
          {
LABEL_12:
            v13 = *(_QWORD *)(v11 + 64760);
            if (!v13 || v10 != *(WTF::StringImpl **)(v13 + 8))
              v13 = JSC::jsStringWithCacheSlowCase();
            goto LABEL_15;
          }
          v14 = (unsigned __int8 *)*((_QWORD *)v10 + 1);
          if ((*((_BYTE *)v10 + 16) & 4) != 0)
          {
            v15 = *v14;
          }
          else
          {
            v16 = *(unsigned __int16 *)v14;
            if (v16 > 0xFF)
              goto LABEL_12;
            v15 = v16;
          }
          v13 = *(_QWORD *)(v11 + 8 * v15 + 42216);
        }
        else
        {
          v13 = *(_QWORD *)(v11 + 41968);
        }
LABEL_15:
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, v9);
        else
          *(_DWORD *)v10 -= 2;
        return (WTF::StringImpl *)v13;
      }
    }
    else
    {
      v11 = *((_QWORD *)v2 + 7);
    }
    return *(WTF::StringImpl **)(v11 + 41968);
  }
  __break(0xC471u);
  return result;
}

uint64_t WebCore::setJSCanvasRenderingContext2D_globalCompositeOperation(JSC::JSGlobalObject *a1, unint64_t a2, uint64_t a3)
{
  JSC::VM *v5;
  unint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  int v12;
  uint64_t v13;
  WTF::StringImpl *v15;
  int hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v17;
  WebCore::ScriptExecutionContext *v18;
  uint64_t v19;
  WebCore::InspectorCanvasAgent *v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  uint64_t v27;
  WTF::StringImpl *v28[2];
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  int v31;
  WTF::StringImpl *v32[2];
  char v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v6 = JSC::jsDynamicCast<WebCore::JSCanvasRenderingContext2D *>(a2);
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(_QWORD *)(v6 + 24);
  v32[0] = (WTF::StringImpl *)a3;
  if ((a3 & 0xFFFE000000000002) == 0 && *(_BYTE *)(a3 + 5) == 2)
  {
    v8 = *(WTF::StringImpl **)(a3 + 8);
    if ((v8 & 1) != 0)
    {
      v8 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)a3, a1);
      if (!v8)
        goto LABEL_7;
    }
    else if (!v8)
    {
LABEL_7:
      v28[0] = v8;
      goto LABEL_8;
    }
    *(_DWORD *)v8 += 2;
    goto LABEL_7;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v32, a1);
LABEL_8:
  if (*((_DWORD *)v5 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    v9 = v28[0];
    if (hasExceptionsAfterHandlingTraps)
    {
      v31 = 1;
      v28[0] = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 2)
          WTF::StringImpl::destroy(v9, v15);
        else
          *(_DWORD *)v9 -= 2;
      }
      v13 = 0;
      v12 = 1;
LABEL_15:
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3238AF8[v12])(v32, &v30);
      return v13;
    }
  }
  else
  {
    v9 = v28[0];
  }
  v30 = v9;
  v31 = 0;
  if (!*(_BYTE *)(v7 + 25))
  {
LABEL_11:
    v30 = 0;
    v32[0] = v9;
    WebCore::CanvasRenderingContext2DBase::setGlobalCompositeOperation((WebCore::CanvasRenderingContext2DBase *)v7, (const WTF::String *)v32);
    v11 = v32[0];
    v32[0] = 0;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v10);
      else
        *(_DWORD *)v11 -= 2;
    }
    v12 = v31;
    v13 = 1;
    if (v31 == -1)
      return v13;
    goto LABEL_15;
  }
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v17 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v7 + 32) + 144))(*(_QWORD *)(v7 + 32));
  if (v17
    && (v19 = WebCore::InspectorInstrumentation::instrumentingAgents(v17, v18)) != 0
    && (v20 = *(WebCore::InspectorCanvasAgent **)(v19 + 96)) != 0)
  {
    WebCore::InspectorCanvasAgent::processArgument(v20, (WebCore::CanvasRenderingContext *)v7, (int **)&v30, (uint64_t)v32);
  }
  else
  {
    LOBYTE(v32[0]) = 0;
    v33 = 0;
  }
  v28[0] = (WTF::StringImpl *)v32;
  v28[1] = (WTF::StringImpl *)1;
  v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v7 + 32) + 144))(*(_QWORD *)(v7 + 32));
  if (v21)
  {
    v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22);
    if (v23)
    {
      v24 = *(_QWORD *)(v23 + 96);
      if (v24)
        WebCore::InspectorCanvasAgent::recordAction(v24, (WebCore::CanvasRenderingContext *)v7, (const WTF::StringImpl *)&v29, v28);
    }
  }
  if (v33)
  {
    v25 = v32[0];
    v32[0] = 0;
    if (v25)
    {
      if (*(_DWORD *)v25 == 1)
        WTF::JSONImpl::Value::operator delete();
      else
        --*(_DWORD *)v25;
    }
  }
  v26 = v29;
  v29 = 0;
  if (v26)
  {
    if (*(_DWORD *)v26 == 2)
      WTF::StringImpl::destroy(v26, v22);
    else
      *(_DWORD *)v26 -= 2;
  }
  if (!v31)
  {
    v9 = v30;
    goto LABEL_11;
  }
  v27 = std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsCanvasRenderingContext2D_strokeStyle(v27);
}

WTF::StringImpl *WebCore::jsCanvasRenderingContext2D_strokeStyle(WTF::StringImpl *result, uint64_t a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore::CanvasGradient *v9;
  uint64_t v10;
  uint64_t v11;
  WebCore::InspectorInstrumentation *v12;
  WebCore::ScriptExecutionContext *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  WTF::StringImpl *v18[5];
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  WTF::StringImpl *v24;
  uint64_t v25;
  uint64_t *v26;

  v3 = result;
  v4 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v4 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v22 = 0;
    v23 = 0;
    v12 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 144))(*(_QWORD *)(v4 + 32));
    if (v12)
    {
      v14 = WebCore::InspectorInstrumentation::instrumentingAgents(v12, v13);
      if (v14)
      {
        v15 = *(_QWORD *)(v14 + 96);
        if (v15)
          WebCore::InspectorCanvasAgent::recordAction(v15, (WebCore::CanvasRenderingContext *)v4, (const WTF::StringImpl *)v18, &v22);
      }
    }
    result = v18[0];
    v18[0] = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v13);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v5 = *(_DWORD *)(v4 + 132);
  if (!v5)
    goto LABEL_20;
  v6 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v7 = *(_QWORD *)(v4 + 120) + 560 * v5;
  v22 = &v19;
  v23 = &v19;
  v24 = (WTF::StringImpl *)&v19;
  v8 = *(unsigned int *)(v7 - 536);
  if ((_DWORD)v8 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_19:
    result = (WTF::StringImpl *)std::__throw_bad_optional_access[abi:sn180100]();
LABEL_20:
    __break(0xC471u);
    return result;
  }
  v18[0] = (WTF::StringImpl *)&v22;
  ((void (*)(uint64_t *__return_ptr, WTF::StringImpl **, uint64_t))*(&__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZNK7WebCore11CanvasStyle5visitIJZNS8_L14toStyleVariantERKS9_E3__0ZNS8_L14toStyleVariantESC_E3__1ZNS8_L14toStyleVariantESC_E3__2EEEDcDpOT_EUlRKNS8_5ColorEE_JZNKSA_IJSD_SE_SF_EEESG_SJ_EUlRKNS6_3RefINS8_14CanvasGradientENS6_12RawPtrTraitsISP_EENS6_21DefaultRefDerefTraitsISP_EEEEE_ZNKSA_IJSD_SE_SF_EEESG_SJ_EUlRKNSO_INS8_13CanvasPatternENSQ_ISY_EENSS_ISY_EEEEE_EEEEEJRKNS0_6__implIJSK_SU_S11_EEEEEESG_OT_DpOT0____fmatrix
                                                                            + v8))(&v16, v18, v7 - 544);
  v10 = v17;
  if (v17 == -1)
    v10 = -1;
  v21 = v10;
  LOBYTE(v19) = 0;
  v20 = 0;
  v22 = &v21;
  v23 = &v19;
  v24 = v3;
  v25 = v6;
  v26 = &v16;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLDOMStringENS_12IDLInterfaceINS_14CanvasGradientEEENS5_INS_13CanvasPatternEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6StringENSJ_6RefPtrIS6_NSJ_12RawPtrTraitsIS6_EENSJ_21DefaultRefDerefTraitsIS6_EEEENSL_IS8_NSM_IS8_EENSO_IS8_EEEEEEEEUlTyvE_JNSH_17integral_constantIlLl0EEENSY_IlLl1EEENSY_IlLl2EEEEEET_S12_((uint64_t)&v22, v9, (uint64_t)v18);
  if (!v20)
    goto LABEL_19;
  v11 = v19;
  if (v17 != -1)
    ((void (*)(uint64_t **, uint64_t *))off_1E32497A8[v17])(&v22, &v16);
  return (WTF::StringImpl *)v11;
}

BOOL WebCore::setJSCanvasRenderingContext2D_strokeStyle(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  JSC::JSGlobalObject *v4;
  unint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  _BOOL4 v15;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v24;
  WTF::StringImpl *v26;
  int hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  uint64_t v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  WTF::StringImpl *v37;
  _DWORD *v38;
  int v39;
  _DWORD *v40;
  WTF::StringImpl *v41;
  uint64_t v42;
  WTF::StringImpl *v43;
  unint64_t v44;
  WTF::StringImpl *v45;
  unsigned int v46;
  int v47;
  _DWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v3 = a1;
  v51 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::JSGlobalObject *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = this;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCanvasRenderingContext2D::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  LOBYTE(v48) = 0;
  LOBYTE(v50) = 0;
  if ((this & 0xFFFE000000000002) != 0)
  {
    v44 = this;
    goto LABEL_54;
  }
  v11 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSCanvasGradient::s_info;
  else
    v14 = 1;
  v15 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  if (!v14)
  {
    v24 = 16 * v11;
    do
    {
      v24 = *(_QWORD *)(v24 + 16);
      v15 = v24 != 0;
    }
    while ((char **)v24 != &WebCore::JSCanvasGradient::s_info && v24 != 0);
  }
  if (!v15)
    goto LABEL_15;
  while (1)
  {
    v38 = *(_DWORD **)(v5 + 24);
    if (v38)
    {
      ++*v38;
      v48 = v38;
      v39 = 1;
      LODWORD(v49) = 1;
      LOBYTE(v50) = 1;
      LOBYTE(v45) = 0;
      v46 = -1;
    }
    else
    {
LABEL_15:
      if ((_DWORD)v11 && v13 != &WebCore::JSCanvasPattern::s_info)
      {
        do
        {
          v13 = (char **)v13[2];
          v12 = v13 != 0;
        }
        while (v13 != &WebCore::JSCanvasPattern::s_info && v13 != 0);
      }
      if (!v12)
        goto LABEL_23;
      v40 = *(_DWORD **)(v5 + 24);
      if (!v40)
        goto LABEL_23;
      v4 = v3;
      ++*v40;
      v44 = (unint64_t)v40;
      LODWORD(v45) = 2;
      std::optional<std::variant<WTF::String,WTF::RefPtr<WebCore::CanvasGradient,WTF::RawPtrTraits<WebCore::CanvasGradient>,WTF::DefaultRefDerefTraits<WebCore::CanvasGradient>>,WTF::RefPtr<WebCore::CanvasPattern,WTF::RawPtrTraits<WebCore::CanvasPattern>,WTF::DefaultRefDerefTraits<WebCore::CanvasPattern>>>>::operator=[abi:sn180100]<std::variant<WTF::String,WTF::RefPtr<WebCore::CanvasGradient,WTF::RawPtrTraits<WebCore::CanvasGradient>,WTF::DefaultRefDerefTraits<WebCore::CanvasGradient>>,WTF::RefPtr<WebCore::CanvasPattern,WTF::RawPtrTraits<WebCore::CanvasPattern>,WTF::DefaultRefDerefTraits<WebCore::CanvasPattern>>>,void>((uint64_t)&v48, (uint64_t)&v44);
      if ((_DWORD)v45 != -1)
        ((void (*)(WTF::StringImpl **, unint64_t *))off_1E32497A8[v45])(&v41, &v44);
      if (!(_BYTE)v50)
      {
        v3 = v4;
        v4 = (JSC::JSGlobalObject *)*((_QWORD *)v4 + 7);
LABEL_23:
        v44 = v5;
        if (*(_BYTE *)(v5 + 5) == 2)
        {
          v17 = *(WTF::StringImpl **)(v5 + 8);
          if ((v17 & 1) != 0)
            v17 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v5, v3);
          if (v17)
            *(_DWORD *)v17 += 2;
          v41 = v17;
        }
        else
        {
LABEL_54:
          JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v44, v3);
        }
        if (!*((_DWORD *)v4 + 20))
        {
          v18 = v41;
          goto LABEL_31;
        }
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
        v18 = v41;
        if (hasExceptionsAfterHandlingTraps)
        {
          LODWORD(v49) = 1;
          v41 = 0;
          if (v18)
          {
            if (*(_DWORD *)v18 == 2)
              WTF::StringImpl::destroy(v18, v26);
            else
              *(_DWORD *)v18 -= 2;
          }
          v19 = 1;
          v20 = 1;
        }
        else
        {
LABEL_31:
          v19 = 0;
          v20 = 0;
          LODWORD(v49) = 0;
          v48 = 0;
          v45 = v18;
          v46 = 0;
        }
        v47 = v19;
        ((void (*)(WTF::StringImpl **, _DWORD **))off_1E3238AF8[v20])(&v41, &v48);
        goto LABEL_33;
      }
      v39 = v49;
      LOBYTE(v45) = 0;
      v46 = -1;
      if ((_DWORD)v49 == -1)
      {
        v47 = 0;
        goto LABEL_84;
      }
    }
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **, _DWORD **))off_1E32497D8[v39])(&v41, &v45, &v48);
    v46 = v39;
    v47 = 0;
    if (!(_BYTE)v50)
      goto LABEL_33;
    if ((_DWORD)v49 != -1)
      ((void (*)(WTF::StringImpl **, _DWORD **))off_1E32497A8[v49])(&v41, &v48);
LABEL_84:
    LODWORD(v49) = -1;
LABEL_33:
    v21 = v47;
    v5 = v47 == 0;
    if (v47)
      goto LABEL_39;
    if (!*(_BYTE *)(v10 + 25))
      goto LABEL_97;
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    if (!v47)
    {
      v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v10 + 32) + 144))(*(_QWORD *)(v10 + 32));
      if (v28
        && (v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29)) != 0
        && (v31 = *(_QWORD *)(v30 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v31, v10, (uint64_t)&v45);
      }
      else
      {
        LOBYTE(v48) = 0;
        LOBYTE(v50) = 0;
      }
      v41 = (WTF::StringImpl *)&v48;
      v42 = 1;
      v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v10 + 32) + 144))(*(_QWORD *)(v10 + 32));
      if (v32)
      {
        v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33);
        if (v34)
        {
          v35 = *(_QWORD *)(v34 + 96);
          if (v35)
            WebCore::InspectorCanvasAgent::recordAction(v35, (WebCore::CanvasRenderingContext *)v10, (const WTF::StringImpl *)&v43, &v41);
        }
      }
      if ((_BYTE)v50)
      {
        v36 = v48;
        v48 = 0;
        if (v36)
        {
          if (*v36 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v36;
        }
      }
      v37 = v43;
      v43 = 0;
      if (v37)
      {
        if (*(_DWORD *)v37 == 2)
          WTF::StringImpl::destroy(v37, v33);
        else
          *(_DWORD *)v37 -= 2;
      }
      if (!v47)
      {
LABEL_97:
        LOBYTE(v41) = 0;
        LODWORD(v42) = -1;
        v4 = (JSC::JSGlobalObject *)v46;
        if (v46 != -1)
          break;
      }
    }
    std::__throw_bad_variant_access[abi:sn180100]();
  }
  ((void (*)(_DWORD **, WTF::StringImpl **, WTF::StringImpl **))off_1E32497D8[v46])(&v48, &v41, &v45);
  LODWORD(v42) = (_DWORD)v4;
  v48 = (_DWORD *)v10;
  v49 = v10;
  v50 = v10;
  v43 = (WTF::StringImpl *)&v48;
  ((void (*)(WTF::StringImpl **, WTF::StringImpl **))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore28CanvasRenderingContext2DBase14setStrokeStyleEONS_7variantIJNS6_6StringENS6_6RefPtrINS8_14CanvasGradientENS6_12RawPtrTraitsISD_EENS6_21DefaultRefDerefTraitsISD_EEEENSC_INS8_13CanvasPatternENSE_ISJ_EENSG_ISJ_EEEEEEEE3__0JZNS9_14setStrokeStyleESO_E3__1ZNS9_14setStrokeStyleESO_E3__2EEEEEJNS0_6__implIJSB_SI_SM_EEEEEEDcOT_DpOT0____fmatrix[(_QWORD)v4])(&v43, &v41);
  if ((_DWORD)v42 != -1)
    ((void (*)(_DWORD **, WTF::StringImpl **))off_1E32497A8[v42])(&v48, &v41);
  v21 = v47;
LABEL_39:
  if (v21 != -1)
    ((void (*)(_DWORD **, WTF::StringImpl **))off_1E32497F0[v21])(&v48, &v45);
  return v5;
}

WTF::StringImpl *WebCore::jsCanvasRenderingContext2D_fillStyle(WTF::StringImpl *result, uint64_t a2)
{
  WTF::StringImpl *v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WebCore::CanvasGradient *v9;
  uint64_t v10;
  uint64_t v11;
  WebCore::InspectorInstrumentation *v12;
  WebCore::ScriptExecutionContext *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  WTF::StringImpl *v18[5];
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  WTF::StringImpl *v24;
  uint64_t v25;
  uint64_t *v26;

  v3 = result;
  v4 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v4 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v22 = 0;
    v23 = 0;
    v12 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 144))(*(_QWORD *)(v4 + 32));
    if (v12)
    {
      v14 = WebCore::InspectorInstrumentation::instrumentingAgents(v12, v13);
      if (v14)
      {
        v15 = *(_QWORD *)(v14 + 96);
        if (v15)
          WebCore::InspectorCanvasAgent::recordAction(v15, (WebCore::CanvasRenderingContext *)v4, (const WTF::StringImpl *)v18, &v22);
      }
    }
    result = v18[0];
    v18[0] = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v13);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v5 = *(_DWORD *)(v4 + 132);
  if (!v5)
    goto LABEL_20;
  v6 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  v7 = *(_QWORD *)(v4 + 120) + 560 * v5;
  v22 = &v19;
  v23 = &v19;
  v24 = (WTF::StringImpl *)&v19;
  v8 = *(unsigned int *)(v7 - 520);
  if ((_DWORD)v8 == -1)
  {
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_19:
    result = (WTF::StringImpl *)std::__throw_bad_optional_access[abi:sn180100]();
LABEL_20:
    __break(0xC471u);
    return result;
  }
  v18[0] = (WTF::StringImpl *)&v22;
  ((void (*)(uint64_t *__return_ptr, WTF::StringImpl **, uint64_t))*(&__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZNK7WebCore11CanvasStyle5visitIJZNS8_L14toStyleVariantERKS9_E3__0ZNS8_L14toStyleVariantESC_E3__1ZNS8_L14toStyleVariantESC_E3__2EEEDcDpOT_EUlRKNS8_5ColorEE_JZNKSA_IJSD_SE_SF_EEESG_SJ_EUlRKNS6_3RefINS8_14CanvasGradientENS6_12RawPtrTraitsISP_EENS6_21DefaultRefDerefTraitsISP_EEEEE_ZNKSA_IJSD_SE_SF_EEESG_SJ_EUlRKNSO_INS8_13CanvasPatternENSQ_ISY_EENSS_ISY_EEEEE_EEEEEJRKNS0_6__implIJSK_SU_S11_EEEEEESG_OT_DpOT0____fmatrix
                                                                            + v8))(&v16, v18, v7 - 528);
  v10 = v17;
  if (v17 == -1)
    v10 = -1;
  v21 = v10;
  LOBYTE(v19) = 0;
  v20 = 0;
  v22 = &v21;
  v23 = &v19;
  v24 = v3;
  v25 = v6;
  v26 = &v16;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLDOMStringENS_12IDLInterfaceINS_14CanvasGradientEEENS5_INS_13CanvasPatternEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6StringENSJ_6RefPtrIS6_NSJ_12RawPtrTraitsIS6_EENSJ_21DefaultRefDerefTraitsIS6_EEEENSL_IS8_NSM_IS8_EENSO_IS8_EEEEEEEEUlTyvE_JNSH_17integral_constantIlLl0EEENSY_IlLl1EEENSY_IlLl2EEEEEET_S12_((uint64_t)&v22, v9, (uint64_t)v18);
  if (!v20)
    goto LABEL_19;
  v11 = v19;
  if (v17 != -1)
    ((void (*)(uint64_t **, uint64_t *))off_1E32497A8[v17])(&v22, &v16);
  return (WTF::StringImpl *)v11;
}

BOOL WebCore::setJSCanvasRenderingContext2D_fillStyle(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  JSC::JSGlobalObject *v4;
  unint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  _BOOL4 v15;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v24;
  WTF::StringImpl *v26;
  int hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  uint64_t v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  WTF::StringImpl *v37;
  _DWORD *v38;
  int v39;
  _DWORD *v40;
  WTF::StringImpl *v41;
  uint64_t v42;
  WTF::StringImpl *v43;
  unint64_t v44;
  WTF::StringImpl *v45;
  unsigned int v46;
  int v47;
  _DWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v3 = a1;
  v51 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::JSGlobalObject *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = this;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCanvasRenderingContext2D::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  LOBYTE(v48) = 0;
  LOBYTE(v50) = 0;
  if ((this & 0xFFFE000000000002) != 0)
  {
    v44 = this;
    goto LABEL_54;
  }
  v11 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSCanvasGradient::s_info;
  else
    v14 = 1;
  v15 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  if (!v14)
  {
    v24 = 16 * v11;
    do
    {
      v24 = *(_QWORD *)(v24 + 16);
      v15 = v24 != 0;
    }
    while ((char **)v24 != &WebCore::JSCanvasGradient::s_info && v24 != 0);
  }
  if (!v15)
    goto LABEL_15;
  while (1)
  {
    v38 = *(_DWORD **)(v5 + 24);
    if (v38)
    {
      ++*v38;
      v48 = v38;
      v39 = 1;
      LODWORD(v49) = 1;
      LOBYTE(v50) = 1;
      LOBYTE(v45) = 0;
      v46 = -1;
    }
    else
    {
LABEL_15:
      if ((_DWORD)v11 && v13 != &WebCore::JSCanvasPattern::s_info)
      {
        do
        {
          v13 = (char **)v13[2];
          v12 = v13 != 0;
        }
        while (v13 != &WebCore::JSCanvasPattern::s_info && v13 != 0);
      }
      if (!v12)
        goto LABEL_23;
      v40 = *(_DWORD **)(v5 + 24);
      if (!v40)
        goto LABEL_23;
      v4 = v3;
      ++*v40;
      v44 = (unint64_t)v40;
      LODWORD(v45) = 2;
      std::optional<std::variant<WTF::String,WTF::RefPtr<WebCore::CanvasGradient,WTF::RawPtrTraits<WebCore::CanvasGradient>,WTF::DefaultRefDerefTraits<WebCore::CanvasGradient>>,WTF::RefPtr<WebCore::CanvasPattern,WTF::RawPtrTraits<WebCore::CanvasPattern>,WTF::DefaultRefDerefTraits<WebCore::CanvasPattern>>>>::operator=[abi:sn180100]<std::variant<WTF::String,WTF::RefPtr<WebCore::CanvasGradient,WTF::RawPtrTraits<WebCore::CanvasGradient>,WTF::DefaultRefDerefTraits<WebCore::CanvasGradient>>,WTF::RefPtr<WebCore::CanvasPattern,WTF::RawPtrTraits<WebCore::CanvasPattern>,WTF::DefaultRefDerefTraits<WebCore::CanvasPattern>>>,void>((uint64_t)&v48, (uint64_t)&v44);
      if ((_DWORD)v45 != -1)
        ((void (*)(WTF::StringImpl **, unint64_t *))off_1E32497A8[v45])(&v41, &v44);
      if (!(_BYTE)v50)
      {
        v3 = v4;
        v4 = (JSC::JSGlobalObject *)*((_QWORD *)v4 + 7);
LABEL_23:
        v44 = v5;
        if (*(_BYTE *)(v5 + 5) == 2)
        {
          v17 = *(WTF::StringImpl **)(v5 + 8);
          if ((v17 & 1) != 0)
            v17 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v5, v3);
          if (v17)
            *(_DWORD *)v17 += 2;
          v41 = v17;
        }
        else
        {
LABEL_54:
          JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v44, v3);
        }
        if (!*((_DWORD *)v4 + 20))
        {
          v18 = v41;
          goto LABEL_31;
        }
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
        v18 = v41;
        if (hasExceptionsAfterHandlingTraps)
        {
          LODWORD(v49) = 1;
          v41 = 0;
          if (v18)
          {
            if (*(_DWORD *)v18 == 2)
              WTF::StringImpl::destroy(v18, v26);
            else
              *(_DWORD *)v18 -= 2;
          }
          v19 = 1;
          v20 = 1;
        }
        else
        {
LABEL_31:
          v19 = 0;
          v20 = 0;
          LODWORD(v49) = 0;
          v48 = 0;
          v45 = v18;
          v46 = 0;
        }
        v47 = v19;
        ((void (*)(WTF::StringImpl **, _DWORD **))off_1E3238AF8[v20])(&v41, &v48);
        goto LABEL_33;
      }
      v39 = v49;
      LOBYTE(v45) = 0;
      v46 = -1;
      if ((_DWORD)v49 == -1)
      {
        v47 = 0;
        goto LABEL_84;
      }
    }
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **, _DWORD **))off_1E32497D8[v39])(&v41, &v45, &v48);
    v46 = v39;
    v47 = 0;
    if (!(_BYTE)v50)
      goto LABEL_33;
    if ((_DWORD)v49 != -1)
      ((void (*)(WTF::StringImpl **, _DWORD **))off_1E32497A8[v49])(&v41, &v48);
LABEL_84:
    LODWORD(v49) = -1;
LABEL_33:
    v21 = v47;
    v5 = v47 == 0;
    if (v47)
      goto LABEL_39;
    if (!*(_BYTE *)(v10 + 25))
      goto LABEL_97;
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    if (!v47)
    {
      v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v10 + 32) + 144))(*(_QWORD *)(v10 + 32));
      if (v28
        && (v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29)) != 0
        && (v31 = *(_QWORD *)(v30 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v31, v10, (uint64_t)&v45);
      }
      else
      {
        LOBYTE(v48) = 0;
        LOBYTE(v50) = 0;
      }
      v41 = (WTF::StringImpl *)&v48;
      v42 = 1;
      v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v10 + 32) + 144))(*(_QWORD *)(v10 + 32));
      if (v32)
      {
        v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33);
        if (v34)
        {
          v35 = *(_QWORD *)(v34 + 96);
          if (v35)
            WebCore::InspectorCanvasAgent::recordAction(v35, (WebCore::CanvasRenderingContext *)v10, (const WTF::StringImpl *)&v43, &v41);
        }
      }
      if ((_BYTE)v50)
      {
        v36 = v48;
        v48 = 0;
        if (v36)
        {
          if (*v36 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v36;
        }
      }
      v37 = v43;
      v43 = 0;
      if (v37)
      {
        if (*(_DWORD *)v37 == 2)
          WTF::StringImpl::destroy(v37, v33);
        else
          *(_DWORD *)v37 -= 2;
      }
      if (!v47)
      {
LABEL_97:
        LOBYTE(v41) = 0;
        LODWORD(v42) = -1;
        v4 = (JSC::JSGlobalObject *)v46;
        if (v46 != -1)
          break;
      }
    }
    std::__throw_bad_variant_access[abi:sn180100]();
  }
  ((void (*)(_DWORD **, WTF::StringImpl **, WTF::StringImpl **))off_1E32497D8[v46])(&v48, &v41, &v45);
  LODWORD(v42) = (_DWORD)v4;
  v48 = (_DWORD *)v10;
  v49 = v10;
  v50 = v10;
  v43 = (WTF::StringImpl *)&v48;
  ((void (*)(WTF::StringImpl **, WTF::StringImpl **))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore28CanvasRenderingContext2DBase12setFillStyleEONS_7variantIJNS6_6StringENS6_6RefPtrINS8_14CanvasGradientENS6_12RawPtrTraitsISD_EENS6_21DefaultRefDerefTraitsISD_EEEENSC_INS8_13CanvasPatternENSE_ISJ_EENSG_ISJ_EEEEEEEE3__0JZNS9_12setFillStyleESO_E3__1ZNS9_12setFillStyleESO_E3__2EEEEEJNS0_6__implIJSB_SI_SM_EEEEEEDcOT_DpOT0____fmatrix[(_QWORD)v4])(&v43, &v41);
  if ((_DWORD)v42 != -1)
    ((void (*)(_DWORD **, WTF::StringImpl **))off_1E32497A8[v42])(&v48, &v41);
  v21 = v47;
LABEL_39:
  if (v21 != -1)
    ((void (*)(_DWORD **, WTF::StringImpl **))off_1E32497F0[v21])(&v48, &v45);
  return v5;
}

WTF::StringImpl *WebCore::jsCanvasRenderingContext2D_filter(WTF::StringImpl *result, WebCore::ScriptExecutionContext *a2)
{
  WTF::StringImpl *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;
  WebCore::InspectorInstrumentation *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];
  WTF::StringImpl *v17;

  v2 = result;
  v3 = *((_QWORD *)a2 + 3);
  if (*(_BYTE *)(v3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v16[0] = 0;
    v16[1] = 0;
    v13 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v3 + 32) + 144))(*(_QWORD *)(v3 + 32));
    if (v13)
    {
      v14 = WebCore::InspectorInstrumentation::instrumentingAgents(v13, a2);
      if (v14)
      {
        v15 = *(_QWORD *)(v14 + 96);
        if (v15)
          WebCore::InspectorCanvasAgent::recordAction(v15, (WebCore::CanvasRenderingContext *)v3, (const WTF::StringImpl *)&v17, v16);
      }
    }
    result = v17;
    v17 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v4 = *(_DWORD *)(v3 + 132);
  if (v4)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(v3 + 120) + 560 * v4 - 344);
    if (!v5)
      return *(WTF::StringImpl **)(*((_QWORD *)v2 + 7) + 41968);
    v6 = *(_DWORD *)v5;
    v7 = *(_DWORD *)(v5 + 4);
    *(_DWORD *)v5 += 2;
    v8 = *((_QWORD *)v2 + 7);
    if (v7)
    {
      if (v7 != 1)
      {
LABEL_6:
        v9 = *(_QWORD *)(v8 + 64760);
        if (!v9 || v5 != *(_QWORD *)(v9 + 8))
        {
          v9 = JSC::jsStringWithCacheSlowCase();
          v6 = *(_DWORD *)v5 - 2;
        }
        goto LABEL_9;
      }
      v10 = *(unsigned __int8 **)(v5 + 8);
      if ((*(_BYTE *)(v5 + 16) & 4) != 0)
      {
        v11 = *v10;
      }
      else
      {
        v12 = *(unsigned __int16 *)v10;
        if (v12 > 0xFF)
          goto LABEL_6;
        v11 = v12;
      }
      v9 = *(_QWORD *)(v8 + 8 * v11 + 42216);
    }
    else
    {
      v9 = *(_QWORD *)(v8 + 41968);
    }
LABEL_9:
    if (v6)
      *(_DWORD *)v5 = v6;
    else
      WTF::StringImpl::destroy((WTF::StringImpl *)v5, a2);
    return (WTF::StringImpl *)v9;
  }
  __break(0xC471u);
  return result;
}

uint64_t WebCore::setJSCanvasRenderingContext2D_filter(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  int v14;
  uint64_t v15;
  WTF::StringImpl *v17;
  int hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v19;
  WebCore::ScriptExecutionContext *v20;
  uint64_t v21;
  WebCore::InspectorCanvasAgent *v22;
  WebCore::InspectorInstrumentation *v23;
  WebCore::ScriptExecutionContext *v24;
  uint64_t v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  uint64_t v29;
  WTF::StringImpl *v30[2];
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  int v33;
  WTF::StringImpl *v34[2];
  char v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v34[0] = this;
  if (((unint64_t)this & 0xFFFE000000000002) == 0 && *((_BYTE *)this + 5) == 2)
  {
    v10 = (WTF::StringImpl *)*((_QWORD *)this + 1);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope(this, a1);
      if (!v10)
        goto LABEL_17;
    }
    else if (!v10)
    {
LABEL_17:
      v30[0] = v10;
      goto LABEL_18;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v34, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v11 = v30[0];
    if (hasExceptionsAfterHandlingTraps)
    {
      v33 = 1;
      v30[0] = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v17);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
LABEL_25:
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3238AF8[v14])(v34, &v32);
      return v15;
    }
  }
  else
  {
    v11 = v30[0];
  }
  v32 = v11;
  v33 = 0;
  if (!*(_BYTE *)(v9 + 25))
  {
LABEL_21:
    v32 = 0;
    v34[0] = v11;
    WebCore::CanvasRenderingContext2DBase::setFilterString((WebCore::CanvasRenderingContext2DBase *)v9, v34, this);
    v13 = v34[0];
    v34[0] = 0;
    if (v13)
    {
      if (*(_DWORD *)v13 == 2)
        WTF::StringImpl::destroy(v13, v12);
      else
        *(_DWORD *)v13 -= 2;
    }
    v14 = v33;
    v15 = 1;
    if (v33 == -1)
      return v15;
    goto LABEL_25;
  }
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v19 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
  if (v19
    && (v21 = WebCore::InspectorInstrumentation::instrumentingAgents(v19, v20)) != 0
    && (v22 = *(WebCore::InspectorCanvasAgent **)(v21 + 96)) != 0)
  {
    WebCore::InspectorCanvasAgent::processArgument(v22, (WebCore::CanvasRenderingContext *)v9, (int **)&v32, (uint64_t)v34);
  }
  else
  {
    LOBYTE(v34[0]) = 0;
    v35 = 0;
  }
  v30[0] = (WTF::StringImpl *)v34;
  v30[1] = (WTF::StringImpl *)1;
  v23 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
  if (v23)
  {
    v25 = WebCore::InspectorInstrumentation::instrumentingAgents(v23, v24);
    if (v25)
    {
      v26 = *(_QWORD *)(v25 + 96);
      if (v26)
        WebCore::InspectorCanvasAgent::recordAction(v26, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v31, v30);
    }
  }
  if (v35)
  {
    v27 = v34[0];
    v34[0] = 0;
    if (v27)
    {
      if (*(_DWORD *)v27 == 1)
        WTF::JSONImpl::Value::operator delete();
      else
        --*(_DWORD *)v27;
    }
  }
  v28 = v31;
  v31 = 0;
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v24);
    else
      *(_DWORD *)v28 -= 2;
  }
  if (!v33)
  {
    v11 = v32;
    goto LABEL_21;
  }
  v29 = std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsCanvasRenderingContext2D_imageSmoothingEnabled(v29);
}

void WebCore::jsCanvasRenderingContext2D_imageSmoothingEnabled(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WebCore::InspectorInstrumentation *v3;
  WebCore::ScriptExecutionContext *v4;
  uint64_t v5;
  uint64_t v6;
  WTF::StringImpl *v7;
  _QWORD v8[2];
  WTF::StringImpl *v9;

  v2 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v2 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v8[0] = 0;
    v8[1] = 0;
    v3 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 144))(*(_QWORD *)(v2 + 32));
    if (v3)
    {
      v5 = WebCore::InspectorInstrumentation::instrumentingAgents(v3, v4);
      if (v5)
      {
        v6 = *(_QWORD *)(v5 + 96);
        if (v6)
          WebCore::InspectorCanvasAgent::recordAction(v6, (WebCore::CanvasRenderingContext *)v2, (const WTF::StringImpl *)&v9, v8);
      }
    }
    v7 = v9;
    v9 = 0;
    if (v7)
    {
      if (*(_DWORD *)v7 == 2)
        WTF::StringImpl::destroy(v7, v4);
      else
        *(_DWORD *)v7 -= 2;
    }
  }
  if (!*(_DWORD *)(v2 + 132))
    __break(0xC471u);
}

BOOL WebCore::setJSCanvasRenderingContext2D_imageSmoothingEnabled(uint64_t a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  double v10;
  _BOOL8 v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  int v17;
  char v18;
  unsigned __int8 v19;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  WebCore::InspectorCanvasAgent *v24;
  WebCore::InspectorInstrumentation *v25;
  WebCore::ScriptExecutionContext *v26;
  uint64_t v27;
  uint64_t v28;
  _DWORD *v29;
  WTF::StringImpl *v30;
  BOOL v31;
  int v32;
  uint64_t v33;
  int *v34;
  int v35;
  _QWORD v36[2];
  WTF::StringImpl *v37;
  _QWORD v38[2];
  char v39;
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v4 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCanvasRenderingContext2D::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v31 = (_DWORD)a3 == 0;
    goto LABEL_68;
  }
  *(_QWORD *)&v10 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v11 = a3 == 7;
      goto LABEL_16;
    }
    v32 = *(unsigned __int8 *)(a3 + 5);
    if (v32 == 3)
    {
      v35 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v32 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v11 = 1;
          goto LABEL_16;
        }
        v31 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_68;
      }
      v33 = *(_QWORD *)(a3 + 8);
      if ((v33 & 1) != 0)
        v34 = (int *)(a3 + 16);
      else
        v34 = (int *)(v33 + 4);
      v35 = *v34;
    }
    v31 = v35 == 0;
LABEL_68:
    v11 = !v31;
    goto LABEL_16;
  }
  v11 = v10 > 0.0 || v10 < 0.0;
LABEL_16:
  v12 = *(_QWORD *)(a2 + 24);
  if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
  {
    if (*(_BYTE *)(v12 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
      if (v21
        && (v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22)) != 0
        && (v24 = *(WebCore::InspectorCanvasAgent **)(v23 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v24, (WebCore::CanvasRenderingContext *)v12, (WTF::JSONImpl::Value *)v11, (uint64_t)v38);
      }
      else
      {
        LOBYTE(v38[0]) = 0;
        v39 = 0;
      }
      v36[0] = v38;
      v36[1] = 1;
      v25 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
      if (v25)
      {
        v27 = WebCore::InspectorInstrumentation::instrumentingAgents(v25, v26);
        if (v27)
        {
          v28 = *(_QWORD *)(v27 + 96);
          if (v28)
            WebCore::InspectorCanvasAgent::recordAction(v28, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v37, v36);
        }
      }
      if (v39)
      {
        v29 = (_DWORD *)v38[0];
        v38[0] = 0;
        if (v29)
        {
          if (*v29 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v29;
        }
      }
      v30 = v37;
      v37 = 0;
      if (v30)
      {
        if (*(_DWORD *)v30 == 2)
          WTF::StringImpl::destroy(v30, v26);
        else
          *(_DWORD *)v30 -= 2;
      }
    }
    v13 = *(_DWORD *)(v12 + 132);
    if (v13)
    {
      if (*(_BYTE *)(*(_QWORD *)(v12 + 120) + 560 * v13 - 368) == v11)
        return 1;
      WebCore::CanvasRenderingContext2DBase::realizeSaves((WebCore::CanvasRenderingContext2DBase::State *)v12);
      v14 = *(_DWORD *)(v12 + 132);
      if (!v14)
      {
        __break(0xC471u);
        JUMPOUT(0x1949043E4);
      }
      *(_BYTE *)(*(_QWORD *)(v12 + 120) + 560 * v14 - 368) = v11;
      v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 240))(v12);
      if (!v15)
        return 1;
      if (!v11)
      {
        v19 = 1;
LABEL_31:
        if (*(unsigned __int8 *)(v15 + 340) != v19)
        {
          *(_BYTE *)(v15 + 340) = v19;
          *(_DWORD *)(v15 + 184) |= 0x400u;
        }
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v15 + 88))(v15, v15 + 8);
        return 1;
      }
      v16 = *(_DWORD *)(v12 + 132);
      if (v16)
      {
        v17 = *(_DWORD *)(*(_QWORD *)(v12 + 120) + 560 * v16 - 364);
        if (v17 == 1)
          v18 = 3;
        else
          v18 = 2;
        if (v17 == 2)
          v19 = 4;
        else
          v19 = v18;
        goto LABEL_31;
      }
    }
    __break(0xC471u);
    JUMPOUT(0x1949043DCLL);
  }
  return 0;
}

WTF::StringImpl *WebCore::jsCanvasRenderingContext2D_imageSmoothingQuality(WTF::StringImpl *result, uint64_t a2)
{
  WTF::StringImpl *v2;
  uint64_t v3;
  unsigned int v4;
  WebCore::InspectorInstrumentation *v5;
  WebCore::ScriptExecutionContext *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[2];
  WTF::StringImpl *v10;

  v2 = result;
  v3 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v9[0] = 0;
    v9[1] = 0;
    v5 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v3 + 32) + 144))(*(_QWORD *)(v3 + 32));
    if (v5)
    {
      v7 = WebCore::InspectorInstrumentation::instrumentingAgents(v5, v6);
      if (v7)
      {
        v8 = *(_QWORD *)(v7 + 96);
        if (v8)
          WebCore::InspectorCanvasAgent::recordAction(v8, (WebCore::CanvasRenderingContext *)v3, (const WTF::StringImpl *)&v10, v9);
      }
    }
    result = v10;
    v10 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v6);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v4 = *(_DWORD *)(v3 + 132);
  if (v4)
    return (WTF::StringImpl *)WebCore::convertEnumerationToJS<WebCore::ImageSmoothingQuality>(*((_QWORD *)v2 + 7), (WTF::StringImpl *)*(unsigned int *)(*(_QWORD *)(v3 + 120) + 560 * v4 - 364));
  __break(0xC471u);
  return result;
}

BOOL WebCore::setJSCanvasRenderingContext2D_imageSmoothingQuality(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  _BOOL8 result;
  char hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v20;
  WebCore::ScriptExecutionContext *v21;
  uint64_t v22;
  uint64_t v23;
  WebCore::InspectorInstrumentation *v24;
  WebCore::ScriptExecutionContext *v25;
  uint64_t v26;
  uint64_t v27;
  _DWORD *v28;
  WTF::StringImpl *v29;
  _QWORD v30[2];
  WTF::StringImpl *v31;
  _QWORD v32[2];
  char v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v10 = WebCore::parseEnumeration<WebCore::ImageSmoothingQuality>(a1, (unint64_t)this);
  v11 = v10;
  v12 = BYTE4(v10);
  if (!*((_DWORD *)v3 + 20))
  {
    if (!BYTE4(v10))
      return 0;
LABEL_14:
    if (*(_BYTE *)(v9 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v20 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
      if (v20
        && (v22 = WebCore::InspectorInstrumentation::instrumentingAgents(v20, v21)) != 0
        && (v23 = *(_QWORD *)(v22 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v23, v9, v11, (uint64_t)v32);
      }
      else
      {
        LOBYTE(v32[0]) = 0;
        v33 = 0;
      }
      v30[0] = v32;
      v30[1] = 1;
      v24 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
      if (v24)
      {
        v26 = WebCore::InspectorInstrumentation::instrumentingAgents(v24, v25);
        if (v26)
        {
          v27 = *(_QWORD *)(v26 + 96);
          if (v27)
            WebCore::InspectorCanvasAgent::recordAction(v27, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v31, v30);
        }
      }
      if (v33)
      {
        v28 = (_DWORD *)v32[0];
        v32[0] = 0;
        if (v28)
        {
          if (*v28 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v28;
        }
      }
      v29 = v31;
      v31 = 0;
      if (v29)
      {
        if (*(_DWORD *)v29 == 2)
          WTF::StringImpl::destroy(v29, v25);
        else
          *(_DWORD *)v29 -= 2;
      }
    }
    v13 = *(_DWORD *)(v9 + 132);
    if (v13)
    {
      if (*(_DWORD *)(*(_QWORD *)(v9 + 120) + 560 * v13 - 364) == v11)
        return 1;
      WebCore::CanvasRenderingContext2DBase::realizeSaves((WebCore::CanvasRenderingContext2DBase::State *)v9);
      v14 = *(_DWORD *)(v9 + 132);
      if (v14)
      {
        v15 = *(_QWORD *)(v9 + 120) + 560 * v14 - 560;
        *(_DWORD *)(v15 + 196) = v11;
        if (*(_BYTE *)(v15 + 192))
        {
          v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 240))(v9);
          if (v16)
          {
            if (v11 == 1)
              v17 = 3;
            else
              v17 = 2;
            if (v11 == 2)
              v17 = 4;
            if (*(unsigned __int8 *)(v16 + 340) != v17)
            {
              *(_BYTE *)(v16 + 340) = v17;
              *(_DWORD *)(v16 + 184) |= 0x400u;
            }
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v16 + 88))(v16, v16 + 8);
          }
        }
        return 1;
      }
    }
    __break(0xC471u);
    JUMPOUT(0x194904778);
  }
  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
  result = 0;
  if ((hasExceptionsAfterHandlingTraps & 1) == 0 && v12)
    goto LABEL_14;
  return result;
}

void WebCore::jsCanvasRenderingContext2D_lineWidth(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WebCore::InspectorInstrumentation *v4;
  WebCore::ScriptExecutionContext *v5;
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  _QWORD v9[2];
  WTF::StringImpl *v10;

  v2 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v2 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v9[0] = 0;
    v9[1] = 0;
    v4 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 144))(*(_QWORD *)(v2 + 32));
    if (v4)
    {
      v6 = WebCore::InspectorInstrumentation::instrumentingAgents(v4, v5);
      if (v6)
      {
        v7 = *(_QWORD *)(v6 + 96);
        if (v7)
          WebCore::InspectorCanvasAgent::recordAction(v7, (WebCore::CanvasRenderingContext *)v2, (const WTF::StringImpl *)&v10, v9);
      }
    }
    v8 = v10;
    v10 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 2)
        WTF::StringImpl::destroy(v8, v5);
      else
        *(_DWORD *)v8 -= 2;
    }
  }
  if (!*(_DWORD *)(v2 + 132))
    __break(0xC471u);
}

BOOL WebCore::setJSCanvasRenderingContext2D_lineWidth(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v9;
  double v10;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  float v16;
  WebCore::InspectorInstrumentation *v19;
  WebCore::ScriptExecutionContext *v20;
  uint64_t v21;
  WebCore::InspectorCanvasAgent *v22;
  WebCore::InspectorInstrumentation *v23;
  WebCore::ScriptExecutionContext *v24;
  uint64_t v25;
  uint64_t v26;
  _DWORD *v27;
  WTF::StringImpl *v28;
  uint64_t v29;
  double v30;
  JSC::VM *v31;
  _QWORD v32[2];
  WTF::StringImpl *v33;
  _QWORD v34[2];
  char v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCanvasRenderingContext2D::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v34[0] = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v10 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v31 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v34, a1);
    v4 = v31;
    v10 = v30;
  }
  else
  {
    *(_QWORD *)&v10 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  if (*(_BYTE *)(v9 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v19 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
    if (v19
      && (v21 = WebCore::InspectorInstrumentation::instrumentingAgents(v19, v20)) != 0
      && (v22 = *(WebCore::InspectorCanvasAgent **)(v21 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v22, (WebCore::CanvasRenderingContext *)v9, v10, (uint64_t)v34);
    }
    else
    {
      LOBYTE(v34[0]) = 0;
      v35 = 0;
    }
    v32[0] = v34;
    v32[1] = 1;
    v23 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
    if (v23)
    {
      v25 = WebCore::InspectorInstrumentation::instrumentingAgents(v23, v24);
      if (v25)
      {
        v26 = *(_QWORD *)(v25 + 96);
        if (v26)
          WebCore::InspectorCanvasAgent::recordAction(v26, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v33, v32);
      }
    }
    if (v35)
    {
      v27 = (_DWORD *)v34[0];
      v34[0] = 0;
      if (v27)
      {
        if (*v27 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v27;
      }
    }
    v28 = v33;
    v33 = 0;
    if (v28)
    {
      if (*(_DWORD *)v28 == 2)
        WTF::StringImpl::destroy(v28, v24);
      else
        *(_DWORD *)v28 -= 2;
    }
  }
  if (v10 >= 0.0 && ((*(_QWORD *)&v10 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 <= 0x3FE
    || (unint64_t)(*(_QWORD *)&v10 - 1) <= 0xFFFFFFFFFFFFELL)
  {
    v13 = *(_DWORD *)(v9 + 132);
    if (!v13)
    {
      __break(0xC471u);
      JUMPOUT(0x194904BE8);
    }
    if (*(double *)(*(_QWORD *)(v9 + 120) + 560 * v13 - 512) != v10)
    {
      if (*(_DWORD *)(v9 + 712))
      {
        WebCore::CanvasRenderingContext2DBase::realizeSavesLoop((WebCore::CanvasRenderingContext2DBase *)v9);
        if (*(_DWORD *)(v9 + 712))
        {
          {
            WebCore::CanvasRenderingContext2DBase::realizeSaves(void)::$_0::operator() const(void)::impl += 2;
            WebCore::CanvasRenderingContext2DBase::realizeSaves(void)::consoleMessage = (uint64_t)&WebCore::CanvasRenderingContext2DBase::realizeSaves(void)::$_0::operator() const(void)::impl;
          }
          v29 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t *, _QWORD))(*(_QWORD *)v29 + 248))(v29, 6, 2, &WebCore::CanvasRenderingContext2DBase::realizeSaves(void)::consoleMessage, 0);
        }
      }
      v14 = *(_DWORD *)(v9 + 132);
      if (!v14)
      {
        __break(0xC471u);
        JUMPOUT(0x194904BF0);
      }
      *(double *)(*(_QWORD *)(v9 + 120) + 560 * v14 - 512) = v10;
      v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 240))(v9);
      if (v15)
      {
        v16 = v10;
        if (*(float *)(v15 + 188) != v16)
        {
          *(float *)(v15 + 188) = v16;
          *(_DWORD *)(v15 + 184) |= 8u;
        }
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v15 + 88))(v15, v15 + 8);
      }
    }
  }
  return 1;
}

WTF::StringImpl *WebCore::jsCanvasRenderingContext2D_lineCap(WTF::StringImpl *result, uint64_t a2)
{
  WTF::StringImpl *v2;
  uint64_t v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  WebCore::InspectorInstrumentation *v7;
  WebCore::ScriptExecutionContext *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  WTF::StringImpl *v12;

  v2 = result;
  v3 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v11[0] = 0;
    v11[1] = 0;
    v7 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v3 + 32) + 144))(*(_QWORD *)(v3 + 32));
    if (v7)
    {
      v9 = WebCore::InspectorInstrumentation::instrumentingAgents(v7, v8);
      if (v9)
      {
        v10 = *(_QWORD *)(v9 + 96);
        if (v10)
          WebCore::InspectorCanvasAgent::recordAction(v10, (WebCore::CanvasRenderingContext *)v3, (const WTF::StringImpl *)&v12, v11);
      }
    }
    result = v12;
    v12 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v8);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v4 = *(_DWORD *)(v3 + 132);
  if (v4)
  {
    v5 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 120) + 560 * v4 - 504);
    if (v5 == 2)
      v6 = 2;
    else
      v6 = v5 == 1;
    return (WTF::StringImpl *)WebCore::convertEnumerationToJS<WebCore::CanvasLineCap>(*((_QWORD *)v2 + 7), (WTF::StringImpl *)v6);
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

uint64_t WebCore::IDLAttribute<WebCore::JSCanvasRenderingContext2D>::set<&WebCore::setJSCanvasRenderingContext2D_lineCapSetter,(WebCore::CastedThisErrorBehavior)0>(JSC::JSGlobalObject *a1, unint64_t a2, uint64_t a3)
{
  unint64_t v5;

  v5 = JSC::jsDynamicCast<WebCore::JSCanvasRenderingContext2D *>(a2);
  if (v5)
    return WebCore::setJSCanvasRenderingContext2D_lineCapSetter(a1, *(WebCore::CanvasRenderingContext **)(v5 + 24), a3);
  else
    return JSC::throwDOMAttributeSetterTypeError() != 0;
}

WTF::StringImpl *WebCore::jsCanvasRenderingContext2D_lineJoin(WTF::StringImpl *result, uint64_t a2)
{
  WTF::StringImpl *v2;
  uint64_t v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  WebCore::InspectorInstrumentation *v7;
  WebCore::ScriptExecutionContext *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  WTF::StringImpl *v12;

  v2 = result;
  v3 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v11[0] = 0;
    v11[1] = 0;
    v7 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v3 + 32) + 144))(*(_QWORD *)(v3 + 32));
    if (v7)
    {
      v9 = WebCore::InspectorInstrumentation::instrumentingAgents(v7, v8);
      if (v9)
      {
        v10 = *(_QWORD *)(v9 + 96);
        if (v10)
          WebCore::InspectorCanvasAgent::recordAction(v10, (WebCore::CanvasRenderingContext *)v3, (const WTF::StringImpl *)&v12, v11);
      }
    }
    result = v12;
    v12 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v8);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v4 = *(_DWORD *)(v3 + 132);
  if (v4)
  {
    v5 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 120) + 560 * v4 - 503);
    if (v5)
      v6 = v5 == 2;
    else
      v6 = 2;
    return (WTF::StringImpl *)WebCore::convertEnumerationToJS<WebCore::CanvasLineJoin>(*((_QWORD *)v2 + 7), (WTF::StringImpl *)v6);
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

BOOL WebCore::setJSCanvasRenderingContext2D_lineJoin(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::CanvasRenderingContext *v8;
  uint64_t v9;
  int v10;
  int v11;
  _BOOL8 result;
  char hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  _QWORD v17[2];
  WTF::StringImpl *v18;
  _BYTE v19[24];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(WebCore::CanvasRenderingContext **)(a2 + 24);
  v9 = WebCore::parseEnumeration<WebCore::CanvasLineJoin>(a1, (unint64_t)this);
  v10 = v9;
  v11 = BYTE4(v9);
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    result = 0;
    if ((hasExceptionsAfterHandlingTraps & 1) != 0 || !v11)
      return result;
  }
  else if (!BYTE4(v9))
  {
    return 0;
  }
  if (*((_BYTE *)v8 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    WebCore::InspectorCanvasCallTracer::processArgument((uint64_t)v8, v10, v19);
    v17[0] = v19;
    v17[1] = 1;
    WebCore::InspectorCanvasCallTracer::recordAction(v8, (const WTF::StringImpl *)&v18, v17);
    std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v19);
    v16 = v18;
    v18 = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v15);
      else
        *(_DWORD *)v16 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::setLineJoin((uint64_t)v8, v10);
  return 1;
}

void WebCore::jsCanvasRenderingContext2D_miterLimit(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WebCore::InspectorInstrumentation *v4;
  WebCore::ScriptExecutionContext *v5;
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  _QWORD v9[2];
  WTF::StringImpl *v10;

  v2 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v2 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v9[0] = 0;
    v9[1] = 0;
    v4 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 144))(*(_QWORD *)(v2 + 32));
    if (v4)
    {
      v6 = WebCore::InspectorInstrumentation::instrumentingAgents(v4, v5);
      if (v6)
      {
        v7 = *(_QWORD *)(v6 + 96);
        if (v7)
          WebCore::InspectorCanvasAgent::recordAction(v7, (WebCore::CanvasRenderingContext *)v2, (const WTF::StringImpl *)&v10, v9);
      }
    }
    v8 = v10;
    v10 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 2)
        WTF::StringImpl::destroy(v8, v5);
      else
        *(_DWORD *)v8 -= 2;
    }
  }
  if (!*(_DWORD *)(v2 + 132))
    __break(0xC471u);
}

BOOL WebCore::setJSCanvasRenderingContext2D_miterLimit(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  double v11;
  WebCore::InspectorInstrumentation *v13;
  WebCore::ScriptExecutionContext *v14;
  uint64_t v15;
  WebCore::InspectorCanvasAgent *v16;
  WebCore::InspectorInstrumentation *v17;
  WebCore::ScriptExecutionContext *v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  WTF::StringImpl *v22;
  double v23;
  JSC::VM *v24;
  _QWORD v25[2];
  WTF::StringImpl *v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCanvasRenderingContext2D::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(_QWORD *)(a2 + 24);
  v27[0] = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v24 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v27, a1);
    v4 = v24;
    v11 = v23;
  }
  else
  {
    *(_QWORD *)&v11 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  if (*(_BYTE *)(v10 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v13 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v10 + 32) + 144))(*(_QWORD *)(v10 + 32));
    if (v13
      && (v15 = WebCore::InspectorInstrumentation::instrumentingAgents(v13, v14)) != 0
      && (v16 = *(WebCore::InspectorCanvasAgent **)(v15 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v16, (WebCore::CanvasRenderingContext *)v10, v11, (uint64_t)v27);
    }
    else
    {
      LOBYTE(v27[0]) = 0;
      v28 = 0;
    }
    v25[0] = v27;
    v25[1] = 1;
    v17 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v10 + 32) + 144))(*(_QWORD *)(v10 + 32));
    if (v17)
    {
      v19 = WebCore::InspectorInstrumentation::instrumentingAgents(v17, v18);
      if (v19)
      {
        v20 = *(_QWORD *)(v19 + 96);
        if (v20)
          WebCore::InspectorCanvasAgent::recordAction(v20, (WebCore::CanvasRenderingContext *)v10, (const WTF::StringImpl *)&v26, v25);
      }
    }
    if (v28)
    {
      v21 = (_DWORD *)v27[0];
      v27[0] = 0;
      if (v21)
      {
        if (*v21 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v21;
      }
    }
    v22 = v26;
    v26 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, v18);
      else
        *(_DWORD *)v22 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::setMiterLimit(v10, v11);
  return 1;
}

void WebCore::jsCanvasRenderingContext2D_lineDashOffset(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WebCore::InspectorInstrumentation *v4;
  WebCore::ScriptExecutionContext *v5;
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  _QWORD v9[2];
  WTF::StringImpl *v10;

  v2 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v2 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v9[0] = 0;
    v9[1] = 0;
    v4 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 144))(*(_QWORD *)(v2 + 32));
    if (v4)
    {
      v6 = WebCore::InspectorInstrumentation::instrumentingAgents(v4, v5);
      if (v6)
      {
        v7 = *(_QWORD *)(v6 + 96);
        if (v7)
          WebCore::InspectorCanvasAgent::recordAction(v7, (WebCore::CanvasRenderingContext *)v2, (const WTF::StringImpl *)&v10, v9);
      }
    }
    v8 = v10;
    v10 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 2)
        WTF::StringImpl::destroy(v8, v5);
      else
        *(_DWORD *)v8 -= 2;
    }
  }
  if (!*(_DWORD *)(v2 + 132))
    __break(0xC471u);
}

BOOL WebCore::setJSCanvasRenderingContext2D_lineDashOffset(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v9;
  double v10;
  unsigned int v11;
  WebCore::CanvasRenderingContext *v14;
  WTF::StringImpl *v15;
  _DWORD *v16;
  WTF::StringImpl *v17;
  unsigned int v18;
  double v19;
  JSC::VM *v20;
  _QWORD v21[2];
  WTF::StringImpl *v22;
  _QWORD v23[2];
  char v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCanvasRenderingContext2D::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v23[0] = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v10 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v20 = v4;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v23, a1);
    v4 = v20;
    v10 = v19;
  }
  else
  {
    *(_QWORD *)&v10 = a3 - 0x2000000000000;
  }
  if (!*((_DWORD *)v4 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v4))
  {
    if (*(_BYTE *)(v9 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      WebCore::InspectorCanvasCallTracer::processArgument((WebCore::InspectorCanvasCallTracer *)v9, v14, v10, v23);
      v21[0] = v23;
      v21[1] = 1;
      WebCore::InspectorCanvasCallTracer::recordAction((WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v22, v21);
      if (v24)
      {
        v16 = (_DWORD *)v23[0];
        v23[0] = 0;
        if (v16)
        {
          if (*v16 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v16;
        }
      }
      v17 = v22;
      v22 = 0;
      if (v17)
      {
        if (*(_DWORD *)v17 == 2)
          WTF::StringImpl::destroy(v17, v15);
        else
          *(_DWORD *)v17 -= 2;
      }
    }
    if ((*(_QWORD *)&v10 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL)
      return 1;
    v11 = *(_DWORD *)(v9 + 132);
    if (v11)
    {
      if (*(double *)(*(_QWORD *)(v9 + 120) + 560 * v11 - 376) == v10)
        return 1;
      WebCore::CanvasRenderingContext2DBase::realizeSaves((WebCore::CanvasRenderingContext2DBase::State *)v9);
      v18 = *(_DWORD *)(v9 + 132);
      if (v18)
      {
        *(double *)(*(_QWORD *)(v9 + 120) + 560 * v18 - 376) = v10;
        WebCore::CanvasRenderingContext2DBase::applyLineDash((WebCore::CanvasRenderingContext2DBase *)v9);
        return 1;
      }
    }
    __break(0xC471u);
    JUMPOUT(0x1949056DCLL);
  }
  return 0;
}

void WebCore::jsCanvasRenderingContext2D_shadowOffsetX(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WebCore::InspectorInstrumentation *v4;
  WebCore::ScriptExecutionContext *v5;
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  _QWORD v9[2];
  WTF::StringImpl *v10;

  v2 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v2 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v9[0] = 0;
    v9[1] = 0;
    v4 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 144))(*(_QWORD *)(v2 + 32));
    if (v4)
    {
      v6 = WebCore::InspectorInstrumentation::instrumentingAgents(v4, v5);
      if (v6)
      {
        v7 = *(_QWORD *)(v6 + 96);
        if (v7)
          WebCore::InspectorCanvasAgent::recordAction(v7, (WebCore::CanvasRenderingContext *)v2, (const WTF::StringImpl *)&v10, v9);
      }
    }
    v8 = v10;
    v10 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 2)
        WTF::StringImpl::destroy(v8, v5);
      else
        *(_DWORD *)v8 -= 2;
    }
  }
  if (!*(_DWORD *)(v2 + 132))
    __break(0xC471u);
}

BOOL WebCore::setJSCanvasRenderingContext2D_shadowOffsetX(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  double v12;
  WebCore::InspectorInstrumentation *v14;
  WebCore::ScriptExecutionContext *v15;
  uint64_t v16;
  WebCore::InspectorCanvasAgent *v17;
  WebCore::InspectorInstrumentation *v18;
  WebCore::ScriptExecutionContext *v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  WTF::StringImpl *v23;
  JSC::VM *v24;
  _QWORD v25[2];
  WTF::StringImpl *v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCanvasRenderingContext2D::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  v27[0] = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v12 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v24 = v5;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v27, a1);
    v5 = v24;
    v12 = a4.n128_f64[0];
  }
  else
  {
    *(_QWORD *)&v12 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
    return 0;
  if (*(_BYTE *)(v11 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v14 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
    if (v14
      && (v16 = WebCore::InspectorInstrumentation::instrumentingAgents(v14, v15)) != 0
      && (v17 = *(WebCore::InspectorCanvasAgent **)(v16 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v17, (WebCore::CanvasRenderingContext *)v11, v12, (uint64_t)v27);
    }
    else
    {
      LOBYTE(v27[0]) = 0;
      v28 = 0;
    }
    v25[0] = v27;
    v25[1] = 1;
    v18 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
    if (v18)
    {
      v20 = WebCore::InspectorInstrumentation::instrumentingAgents(v18, v19);
      if (v20)
      {
        v21 = *(_QWORD *)(v20 + 96);
        if (v21)
          WebCore::InspectorCanvasAgent::recordAction(v21, (WebCore::CanvasRenderingContext *)v11, (const WTF::StringImpl *)&v26, v25);
      }
    }
    if (v28)
    {
      v22 = (_DWORD *)v27[0];
      v27[0] = 0;
      if (v22)
      {
        if (*v22 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v22;
      }
    }
    v23 = v26;
    v26 = 0;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v19);
      else
        *(_DWORD *)v23 -= 2;
    }
  }
  a4.n128_f32[0] = v12;
  WebCore::CanvasRenderingContext2DBase::setShadowOffsetX(v11, a4);
  return 1;
}

void WebCore::jsCanvasRenderingContext2D_shadowOffsetY(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WebCore::InspectorInstrumentation *v4;
  WebCore::ScriptExecutionContext *v5;
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  _QWORD v9[2];
  WTF::StringImpl *v10;

  v2 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v2 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v9[0] = 0;
    v9[1] = 0;
    v4 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 144))(*(_QWORD *)(v2 + 32));
    if (v4)
    {
      v6 = WebCore::InspectorInstrumentation::instrumentingAgents(v4, v5);
      if (v6)
      {
        v7 = *(_QWORD *)(v6 + 96);
        if (v7)
          WebCore::InspectorCanvasAgent::recordAction(v7, (WebCore::CanvasRenderingContext *)v2, (const WTF::StringImpl *)&v10, v9);
      }
    }
    v8 = v10;
    v10 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 2)
        WTF::StringImpl::destroy(v8, v5);
      else
        *(_DWORD *)v8 -= 2;
    }
  }
  if (!*(_DWORD *)(v2 + 132))
    __break(0xC471u);
}

BOOL WebCore::setJSCanvasRenderingContext2D_shadowOffsetY(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  double v12;
  WebCore::InspectorInstrumentation *v14;
  WebCore::ScriptExecutionContext *v15;
  uint64_t v16;
  WebCore::InspectorCanvasAgent *v17;
  WebCore::InspectorInstrumentation *v18;
  WebCore::ScriptExecutionContext *v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  WTF::StringImpl *v23;
  JSC::VM *v24;
  _QWORD v25[2];
  WTF::StringImpl *v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCanvasRenderingContext2D::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  v27[0] = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v12 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v24 = v5;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v27, a1);
    v5 = v24;
    v12 = a4.n128_f64[0];
  }
  else
  {
    *(_QWORD *)&v12 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
    return 0;
  if (*(_BYTE *)(v11 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v14 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
    if (v14
      && (v16 = WebCore::InspectorInstrumentation::instrumentingAgents(v14, v15)) != 0
      && (v17 = *(WebCore::InspectorCanvasAgent **)(v16 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v17, (WebCore::CanvasRenderingContext *)v11, v12, (uint64_t)v27);
    }
    else
    {
      LOBYTE(v27[0]) = 0;
      v28 = 0;
    }
    v25[0] = v27;
    v25[1] = 1;
    v18 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
    if (v18)
    {
      v20 = WebCore::InspectorInstrumentation::instrumentingAgents(v18, v19);
      if (v20)
      {
        v21 = *(_QWORD *)(v20 + 96);
        if (v21)
          WebCore::InspectorCanvasAgent::recordAction(v21, (WebCore::CanvasRenderingContext *)v11, (const WTF::StringImpl *)&v26, v25);
      }
    }
    if (v28)
    {
      v22 = (_DWORD *)v27[0];
      v27[0] = 0;
      if (v22)
      {
        if (*v22 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v22;
      }
    }
    v23 = v26;
    v26 = 0;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v19);
      else
        *(_DWORD *)v23 -= 2;
    }
  }
  a4.n128_f32[0] = v12;
  WebCore::CanvasRenderingContext2DBase::setShadowOffsetY(v11, a4);
  return 1;
}

void WebCore::jsCanvasRenderingContext2D_shadowBlur(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  WebCore::InspectorInstrumentation *v4;
  WebCore::ScriptExecutionContext *v5;
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  _QWORD v9[2];
  WTF::StringImpl *v10;

  v2 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v2 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v9[0] = 0;
    v9[1] = 0;
    v4 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v2 + 32) + 144))(*(_QWORD *)(v2 + 32));
    if (v4)
    {
      v6 = WebCore::InspectorInstrumentation::instrumentingAgents(v4, v5);
      if (v6)
      {
        v7 = *(_QWORD *)(v6 + 96);
        if (v7)
          WebCore::InspectorCanvasAgent::recordAction(v7, (WebCore::CanvasRenderingContext *)v2, (const WTF::StringImpl *)&v10, v9);
      }
    }
    v8 = v10;
    v10 = 0;
    if (v8)
    {
      if (*(_DWORD *)v8 == 2)
        WTF::StringImpl::destroy(v8, v5);
      else
        *(_DWORD *)v8 -= 2;
    }
  }
  if (!*(_DWORD *)(v2 + 132))
    __break(0xC471u);
}

BOOL WebCore::setJSCanvasRenderingContext2D_shadowBlur(JSC::JSGlobalObject *a1, uint64_t a2, unint64_t a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  double v12;
  WebCore::InspectorInstrumentation *v14;
  WebCore::ScriptExecutionContext *v15;
  uint64_t v16;
  WebCore::InspectorCanvasAgent *v17;
  WebCore::InspectorInstrumentation *v18;
  WebCore::ScriptExecutionContext *v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  WTF::StringImpl *v23;
  JSC::VM *v24;
  _QWORD v25[2];
  WTF::StringImpl *v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCanvasRenderingContext2D::s_info && v8 != 0);
  }
  if (!v7)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v11 = *(_QWORD *)(a2 + 24);
  v27[0] = a3;
  if (a3 >= 0xFFFE000000000000)
  {
    v12 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v24 = v5;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v27, a1);
    v5 = v24;
    v12 = a4.n128_f64[0];
  }
  else
  {
    *(_QWORD *)&v12 = a3 - 0x2000000000000;
  }
  if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
    return 0;
  if (*(_BYTE *)(v11 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v14 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
    if (v14
      && (v16 = WebCore::InspectorInstrumentation::instrumentingAgents(v14, v15)) != 0
      && (v17 = *(WebCore::InspectorCanvasAgent **)(v16 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v17, (WebCore::CanvasRenderingContext *)v11, v12, (uint64_t)v27);
    }
    else
    {
      LOBYTE(v27[0]) = 0;
      v28 = 0;
    }
    v25[0] = v27;
    v25[1] = 1;
    v18 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
    if (v18)
    {
      v20 = WebCore::InspectorInstrumentation::instrumentingAgents(v18, v19);
      if (v20)
      {
        v21 = *(_QWORD *)(v20 + 96);
        if (v21)
          WebCore::InspectorCanvasAgent::recordAction(v21, (WebCore::CanvasRenderingContext *)v11, (const WTF::StringImpl *)&v26, v25);
      }
    }
    if (v28)
    {
      v22 = (_DWORD *)v27[0];
      v27[0] = 0;
      if (v22)
      {
        if (*v22 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v22;
      }
    }
    v23 = v26;
    v26 = 0;
    if (v23)
    {
      if (*(_DWORD *)v23 == 2)
        WTF::StringImpl::destroy(v23, v19);
      else
        *(_DWORD *)v23 -= 2;
    }
  }
  a4.n128_f32[0] = v12;
  WebCore::CanvasRenderingContext2DBase::setShadowBlur(v11, a4);
  return 1;
}

WTF::StringImpl *WebCore::jsCanvasRenderingContext2D_shadowColor(WTF::StringImpl *result, uint64_t a2)
{
  WTF::StringImpl *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;
  WebCore::InspectorInstrumentation *v12;
  WebCore::ScriptExecutionContext *v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16[2];
  WTF::StringImpl *v17;

  v2 = result;
  v3 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v16[0] = 0;
    v16[1] = 0;
    v12 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v3 + 32) + 144))(*(_QWORD *)(v3 + 32));
    if (v12)
    {
      v14 = WebCore::InspectorInstrumentation::instrumentingAgents(v12, v13);
      if (v14)
      {
        v15 = *(_QWORD *)(v14 + 96);
        if (v15)
          WebCore::InspectorCanvasAgent::recordAction(v15, (WebCore::CanvasRenderingContext *)v3, (const WTF::StringImpl *)&v17, v16);
      }
    }
    result = v17;
    v17 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v13);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v4 = *(_DWORD *)(v3 + 132);
  if (v4)
  {
    WebCore::serializationForHTML((WebCore *)(*(_QWORD *)(v3 + 120) + 560 * v4 - 472), v16);
    v5 = *((_QWORD *)v2 + 7);
    v6 = v16[0];
    if (!v16[0] || (v7 = *((_DWORD *)v16[0] + 1)) == 0)
    {
      v8 = *(_QWORD *)(v5 + 41968);
LABEL_9:
      v16[0] = 0;
      if (!v6)
        return (WTF::StringImpl *)v8;
LABEL_16:
      if (*(_DWORD *)v6 == 2)
        WTF::StringImpl::destroy(v6, v6);
      else
        *(_DWORD *)v6 -= 2;
      return (WTF::StringImpl *)v8;
    }
    if (v7 != 1)
      goto LABEL_6;
    v9 = (unsigned __int8 *)*((_QWORD *)v16[0] + 1);
    if ((*((_BYTE *)v16[0] + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
      {
LABEL_6:
        v8 = *(_QWORD *)(v5 + 64760);
        if (!v8 || v16[0] != *(WTF::StringImpl **)(v8 + 8))
        {
          v8 = JSC::jsStringWithCacheSlowCase();
          v6 = v16[0];
          goto LABEL_9;
        }
LABEL_15:
        v16[0] = 0;
        goto LABEL_16;
      }
      v10 = v11;
    }
    v8 = *(_QWORD *)(v5 + 8 * v10 + 42216);
    goto LABEL_15;
  }
  __break(0xC471u);
  return result;
}

uint64_t WebCore::setJSCanvasRenderingContext2D_shadowColor(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  int v14;
  uint64_t v15;
  WTF::StringImpl *v17;
  int hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v19;
  WebCore::ScriptExecutionContext *v20;
  uint64_t v21;
  WebCore::InspectorCanvasAgent *v22;
  WebCore::InspectorInstrumentation *v23;
  WebCore::ScriptExecutionContext *v24;
  uint64_t v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  uint64_t v29;
  WTF::StringImpl *v30[2];
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  int v33;
  WTF::StringImpl *v34[2];
  char v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v34[0] = this;
  if (((unint64_t)this & 0xFFFE000000000002) == 0 && *((_BYTE *)this + 5) == 2)
  {
    v10 = (WTF::StringImpl *)*((_QWORD *)this + 1);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope(this, a1);
      if (!v10)
        goto LABEL_17;
    }
    else if (!v10)
    {
LABEL_17:
      v30[0] = v10;
      goto LABEL_18;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_17;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v34, a1);
LABEL_18:
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v11 = v30[0];
    if (hasExceptionsAfterHandlingTraps)
    {
      v33 = 1;
      v30[0] = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v17);
        else
          *(_DWORD *)v11 -= 2;
      }
      v15 = 0;
      v14 = 1;
LABEL_25:
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3238AF8[v14])(v34, &v32);
      return v15;
    }
  }
  else
  {
    v11 = v30[0];
  }
  v32 = v11;
  v33 = 0;
  if (!*(_BYTE *)(v9 + 25))
  {
LABEL_21:
    v32 = 0;
    v34[0] = v11;
    WebCore::CanvasRenderingContext2DBase::setShadowColor((const WTF::String **)v9, (unsigned int **)v34);
    v13 = v34[0];
    v34[0] = 0;
    if (v13)
    {
      if (*(_DWORD *)v13 == 2)
        WTF::StringImpl::destroy(v13, v12);
      else
        *(_DWORD *)v13 -= 2;
    }
    v14 = v33;
    v15 = 1;
    if (v33 == -1)
      return v15;
    goto LABEL_25;
  }
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v19 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
  if (v19
    && (v21 = WebCore::InspectorInstrumentation::instrumentingAgents(v19, v20)) != 0
    && (v22 = *(WebCore::InspectorCanvasAgent **)(v21 + 96)) != 0)
  {
    WebCore::InspectorCanvasAgent::processArgument(v22, (WebCore::CanvasRenderingContext *)v9, (int **)&v32, (uint64_t)v34);
  }
  else
  {
    LOBYTE(v34[0]) = 0;
    v35 = 0;
  }
  v30[0] = (WTF::StringImpl *)v34;
  v30[1] = (WTF::StringImpl *)1;
  v23 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
  if (v23)
  {
    v25 = WebCore::InspectorInstrumentation::instrumentingAgents(v23, v24);
    if (v25)
    {
      v26 = *(_QWORD *)(v25 + 96);
      if (v26)
        WebCore::InspectorCanvasAgent::recordAction(v26, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v31, v30);
    }
  }
  if (v35)
  {
    v27 = v34[0];
    v34[0] = 0;
    if (v27)
    {
      if (*(_DWORD *)v27 == 1)
        WTF::JSONImpl::Value::operator delete();
      else
        --*(_DWORD *)v27;
    }
  }
  v28 = v31;
  v31 = 0;
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v24);
    else
      *(_DWORD *)v28 -= 2;
  }
  if (!v33)
  {
    v11 = v32;
    goto LABEL_21;
  }
  v29 = std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsCanvasRenderingContext2D_font(v29);
}

WTF::StringImpl *WebCore::jsCanvasRenderingContext2D_font(WTF::StringImpl *result, WebCore::ScriptExecutionContext *a2)
{
  WTF::StringImpl *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;
  WebCore::InspectorInstrumentation *v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15[2];
  WTF::StringImpl *v16;

  v2 = result;
  v3 = *((_QWORD *)a2 + 3);
  if (*(_BYTE *)(v3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v15[0] = 0;
    v15[1] = 0;
    v12 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v3 + 32) + 144))(*(_QWORD *)(v3 + 32));
    if (v12)
    {
      v13 = WebCore::InspectorInstrumentation::instrumentingAgents(v12, a2);
      if (v13)
      {
        v14 = *(_QWORD *)(v13 + 96);
        if (v14)
          WebCore::InspectorCanvasAgent::recordAction(v14, (WebCore::CanvasRenderingContext *)v3, (const WTF::StringImpl *)&v16, v15);
      }
    }
    result = v16;
    v16 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v4 = *(_DWORD *)(v3 + 132);
  if (v4)
  {
    WebCore::CanvasRenderingContext2DBase::State::fontString((WebCore::CanvasRenderingContext2DBase::FontProxy **)(*(_QWORD *)(v3 + 120) + 560 * v4 - 560), a2, v15);
    v5 = *((_QWORD *)v2 + 7);
    v6 = v15[0];
    if (!v15[0] || (v7 = *((_DWORD *)v15[0] + 1)) == 0)
    {
      v8 = *(_QWORD *)(v5 + 41968);
LABEL_9:
      v15[0] = 0;
      if (!v6)
        return (WTF::StringImpl *)v8;
LABEL_16:
      if (*(_DWORD *)v6 == 2)
        WTF::StringImpl::destroy(v6, v6);
      else
        *(_DWORD *)v6 -= 2;
      return (WTF::StringImpl *)v8;
    }
    if (v7 != 1)
      goto LABEL_6;
    v9 = (unsigned __int8 *)*((_QWORD *)v15[0] + 1);
    if ((*((_BYTE *)v15[0] + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
      {
LABEL_6:
        v8 = *(_QWORD *)(v5 + 64760);
        if (!v8 || v15[0] != *(WTF::StringImpl **)(v8 + 8))
        {
          v8 = JSC::jsStringWithCacheSlowCase();
          v6 = v15[0];
          goto LABEL_9;
        }
LABEL_15:
        v15[0] = 0;
        goto LABEL_16;
      }
      v10 = v11;
    }
    v8 = *(_QWORD *)(v5 + 8 * v10 + 42216);
    goto LABEL_15;
  }
  __break(0xC471u);
  return result;
}

uint64_t WebCore::setJSCanvasRenderingContext2D_font(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  uint64_t v12;
  const WTF::StringImpl *v13;
  void *v14;
  WTF::StringImpl *v15;
  int v16;
  uint64_t v17;
  WTF::StringImpl *v20;
  int hasExceptionsAfterHandlingTraps;
  WTF::String *v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  WTF::StringImpl *v27[2];
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  int v30;
  WTF::StringImpl *v31[2];
  char v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  v31[0] = this;
  if (((unint64_t)this & 0xFFFE000000000002) != 0 || *((_BYTE *)this + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v31, a1);
  }
  else
  {
    v9 = (WTF::StringImpl *)*((_QWORD *)this + 1);
    if ((v9 & 1) != 0)
      v9 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope(this, a1);
    if (v9)
      *(_DWORD *)v9 += 2;
    v27[0] = v9;
  }
  if (*((_DWORD *)v3 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
    v10 = v27[0];
    if (hasExceptionsAfterHandlingTraps)
    {
      v30 = 1;
      v27[0] = 0;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, v20);
        else
          *(_DWORD *)v10 -= 2;
      }
      v17 = 0;
      v16 = 1;
LABEL_25:
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3238AF8[v16])(v31, &v29);
      return v17;
    }
  }
  else
  {
    v10 = v27[0];
  }
  v29 = v10;
  v30 = 0;
  if (!*(_BYTE *)(v8 + 25))
  {
LABEL_18:
    v29 = 0;
    v31[0] = v10;
    v11 = *(_QWORD *)(v8 + 32);
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 32))(v11) & 1) == 0)
    {
      __break(0xC471u);
      JUMPOUT(0x194906A14);
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v11 - 72) + 8);
    *(_DWORD *)(v12 + 24) += 2;
    WebCore::Document::updateStyleIfNeeded((WebCore::Document *)v12);
    WebCore::CanvasRenderingContext2D::setFontWithoutUpdatingStyle((WebCore::CanvasRenderingContext2D *)v8, v31, v13);
    if (*(_DWORD *)(v12 + 24) == 2)
    {
      if ((*(_WORD *)(v12 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v12, v14);
    }
    else
    {
      *(_DWORD *)(v12 + 24) -= 2;
    }
    v15 = v31[0];
    v31[0] = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, (WTF::StringImpl *)v14);
      else
        *(_DWORD *)v15 -= 2;
    }
    v16 = v30;
    v17 = 1;
    if (v30 == -1)
      return v17;
    goto LABEL_25;
  }
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  WebCore::InspectorCanvasCallTracer::processArgument((WebCore::InspectorCanvasCallTracer *)v8, (int **)&v29, v22, v31);
  v27[0] = (WTF::StringImpl *)v31;
  v27[1] = (WTF::StringImpl *)1;
  WebCore::InspectorCanvasCallTracer::recordAction((WebCore::CanvasRenderingContext *)v8, (const WTF::StringImpl *)&v28, v27);
  if (v32)
  {
    v24 = v31[0];
    v31[0] = 0;
    if (v24)
    {
      if (*(_DWORD *)v24 == 1)
        WTF::JSONImpl::Value::operator delete();
      else
        --*(_DWORD *)v24;
    }
  }
  v25 = v28;
  v28 = 0;
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v23);
    else
      *(_DWORD *)v25 -= 2;
  }
  if (!v30)
  {
    v10 = v29;
    goto LABEL_18;
  }
  v26 = std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsCanvasRenderingContext2D_textAlign(v26);
}

WTF::StringImpl *WebCore::jsCanvasRenderingContext2D_textAlign(WTF::StringImpl *result, uint64_t a2)
{
  WTF::StringImpl *v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  WTF::StringImpl *v6;
  WebCore::InspectorInstrumentation *v7;
  WebCore::ScriptExecutionContext *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  WTF::StringImpl *v12;

  v2 = result;
  v3 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v11[0] = 0;
    v11[1] = 0;
    v7 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v3 + 32) + 144))(*(_QWORD *)(v3 + 32));
    if (v7)
    {
      v9 = WebCore::InspectorInstrumentation::instrumentingAgents(v7, v8);
      if (v9)
      {
        v10 = *(_QWORD *)(v9 + 96);
        if (v10)
          WebCore::InspectorCanvasAgent::recordAction(v10, (WebCore::CanvasRenderingContext *)v3, (const WTF::StringImpl *)&v12, v11);
      }
    }
    result = v12;
    v12 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v8);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v4 = *(_DWORD *)(v3 + 132);
  if (v4)
  {
    v5 = *(_DWORD *)(*(_QWORD *)(v3 + 120) + 560 * v4 - 360) - 1;
    if (v5 > 3)
      v6 = 0;
    else
      v6 = (WTF::StringImpl *)dword_1968BCF70[v5];
    return (WTF::StringImpl *)WebCore::convertEnumerationToJS<WebCore::CanvasTextAlign>(*((_QWORD *)v2 + 7), v6);
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

BOOL WebCore::setJSCanvasRenderingContext2D_textAlign(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  _BOOL8 result;
  char hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  _QWORD v20[2];
  WTF::StringImpl *v21;
  _BYTE v22[24];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  v9 = WebCore::parseEnumeration<WebCore::CanvasTextAlign>(a1, (unint64_t)this);
  v10 = v9;
  v11 = BYTE4(v9);
  if (!*((_DWORD *)v3 + 20))
  {
    if (!BYTE4(v9))
      return 0;
LABEL_10:
    if (*(_BYTE *)(v8 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      WebCore::InspectorCanvasCallTracer::processArgument(v8, v10, v22);
      v20[0] = v22;
      v20[1] = 1;
      WebCore::InspectorCanvasCallTracer::recordAction((WebCore::CanvasRenderingContext *)v8, (const WTF::StringImpl *)&v21, v20);
      std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v22);
      v19 = v21;
      v21 = 0;
      if (v19)
      {
        if (*(_DWORD *)v19 == 2)
          WTF::StringImpl::destroy(v19, v18);
        else
          *(_DWORD *)v19 -= 2;
      }
    }
    if ((v10 - 1) > 3)
      v12 = 0;
    else
      v12 = dword_1968BCF70[v10 - 1];
    v13 = *(_DWORD *)(v8 + 132);
    if (v13)
    {
      if (*(_DWORD *)(*(_QWORD *)(v8 + 120) + 560 * v13 - 360) == v12)
        return 1;
      WebCore::CanvasRenderingContext2DBase::realizeSaves((WebCore::CanvasRenderingContext2DBase::State *)v8);
      v14 = *(_DWORD *)(v8 + 132);
      if (v14)
      {
        *(_DWORD *)(*(_QWORD *)(v8 + 120) + 560 * v14 - 360) = v12;
        return 1;
      }
    }
    __break(0xC471u);
    JUMPOUT(0x194906D2CLL);
  }
  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
  result = 0;
  if ((hasExceptionsAfterHandlingTraps & 1) == 0 && v11)
    goto LABEL_10;
  return result;
}

WTF::StringImpl *WebCore::jsCanvasRenderingContext2D_textBaseline(WTF::StringImpl *result, uint64_t a2)
{
  WTF::StringImpl *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WebCore::InspectorInstrumentation *v7;
  WebCore::ScriptExecutionContext *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  WTF::StringImpl *v12;

  v2 = result;
  v3 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v11[0] = 0;
    v11[1] = 0;
    v7 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v3 + 32) + 144))(*(_QWORD *)(v3 + 32));
    if (v7)
    {
      v9 = WebCore::InspectorInstrumentation::instrumentingAgents(v7, v8);
      if (v9)
      {
        v10 = *(_QWORD *)(v9 + 96);
        if (v10)
          WebCore::InspectorCanvasAgent::recordAction(v10, (WebCore::CanvasRenderingContext *)v3, (const WTF::StringImpl *)&v12, v11);
      }
    }
    result = v12;
    v12 = 0;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v8);
      else
        *(_DWORD *)result -= 2;
    }
  }
  v4 = *(_DWORD *)(v3 + 132);
  if (v4)
  {
    v5 = *(int *)(*(_QWORD *)(v3 + 120) + 560 * v4 - 356);
    if (v5 > 5)
      v6 = 0;
    else
      v6 = (WTF::StringImpl *)dword_1968BCF8C[v5];
    return (WTF::StringImpl *)WebCore::convertEnumerationToJS<WebCore::CanvasTextBaseline>(*((_QWORD *)v2 + 7), v6);
  }
  else
  {
    __break(0xC471u);
  }
  return result;
}

BOOL WebCore::setJSCanvasRenderingContext2D_textBaseline(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  _BOOL8 result;
  char hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  _QWORD v20[2];
  WTF::StringImpl *v21;
  _BYTE v22[24];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v8 = *(_QWORD *)(a2 + 24);
  v9 = WebCore::parseEnumeration<WebCore::CanvasTextBaseline>(a1, (unint64_t)this);
  v10 = v9;
  v11 = BYTE4(v9);
  if (!*((_DWORD *)v3 + 20))
  {
    if (!BYTE4(v9))
      return 0;
LABEL_10:
    if (*(_BYTE *)(v8 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      WebCore::InspectorCanvasCallTracer::processArgument(v8, v10, v22);
      v20[0] = v22;
      v20[1] = 1;
      WebCore::InspectorCanvasCallTracer::recordAction((WebCore::CanvasRenderingContext *)v8, (const WTF::StringImpl *)&v21, v20);
      std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v22);
      v19 = v21;
      v21 = 0;
      if (v19)
      {
        if (*(_DWORD *)v19 == 2)
          WTF::StringImpl::destroy(v19, v18);
        else
          *(_DWORD *)v19 -= 2;
      }
    }
    if ((v10 - 1) > 4)
      v12 = 1;
    else
      v12 = dword_1968BCFA4[v10 - 1];
    v13 = *(_DWORD *)(v8 + 132);
    if (v13)
    {
      if (*(_DWORD *)(*(_QWORD *)(v8 + 120) + 560 * v13 - 356) == v12)
        return 1;
      WebCore::CanvasRenderingContext2DBase::realizeSaves((WebCore::CanvasRenderingContext2DBase::State *)v8);
      v14 = *(_DWORD *)(v8 + 132);
      if (v14)
      {
        *(_DWORD *)(*(_QWORD *)(v8 + 120) + 560 * v14 - 356) = v12;
        return 1;
      }
    }
    __break(0xC471u);
    JUMPOUT(0x194907028);
  }
  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
  result = 0;
  if ((hasExceptionsAfterHandlingTraps & 1) == 0 && v11)
    goto LABEL_10;
  return result;
}

uint64_t WebCore::jsCanvasRenderingContext2D_direction(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BOOL8 v4;
  WebCore::InspectorInstrumentation *v6;
  WebCore::ScriptExecutionContext *v7;
  uint64_t v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  _QWORD v11[2];
  WTF::StringImpl *v12;

  v3 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v11[0] = 0;
    v11[1] = 0;
    v6 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v3 + 32) + 144))(*(_QWORD *)(v3 + 32));
    if (v6)
    {
      v8 = WebCore::InspectorInstrumentation::instrumentingAgents(v6, v7);
      if (v8)
      {
        v9 = *(_QWORD *)(v8 + 96);
        if (v9)
          WebCore::InspectorCanvasAgent::recordAction(v9, (WebCore::CanvasRenderingContext *)v3, (const WTF::StringImpl *)&v12, v11);
      }
    }
    v10 = v12;
    v12 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
        WTF::StringImpl::destroy(v10, v7);
      else
        *(_DWORD *)v10 -= 2;
    }
  }
  v4 = WebCore::CanvasRenderingContext2D::direction((WebCore::CanvasRenderingContext2D *)v3);
  return WebCore::convertEnumerationToJS<WebCore::CanvasDirection>(*(_QWORD *)(a1 + 56), (WTF::StringImpl *)v4);
}

BOOL WebCore::setJSCanvasRenderingContext2D_direction(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  JSC::VM *v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  _BOOL8 result;
  char hasExceptionsAfterHandlingTraps;
  WebCore::InspectorInstrumentation *v17;
  WebCore::ScriptExecutionContext *v18;
  uint64_t v19;
  uint64_t v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD *v25;
  WTF::StringImpl *v26;
  _QWORD v27[2];
  WTF::StringImpl *v28;
  _QWORD v29[2];
  char v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v9 = *(_QWORD *)(a2 + 24);
  v10 = WebCore::parseEnumeration<WebCore::CanvasDirection>(a1, (unint64_t)this);
  v11 = v10;
  v12 = BYTE4(v10);
  if (!*((_DWORD *)v3 + 20))
  {
    if (!BYTE4(v10))
      return 0;
LABEL_14:
    if (*(_BYTE *)(v9 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v17 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
      if (v17
        && (v19 = WebCore::InspectorInstrumentation::instrumentingAgents(v17, v18)) != 0
        && (v20 = *(_QWORD *)(v19 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v20, v9, v11, (uint64_t)v29);
      }
      else
      {
        LOBYTE(v29[0]) = 0;
        v30 = 0;
      }
      v27[0] = v29;
      v27[1] = 1;
      v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
      if (v21)
      {
        v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22);
        if (v23)
        {
          v24 = *(_QWORD *)(v23 + 96);
          if (v24)
            WebCore::InspectorCanvasAgent::recordAction(v24, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v28, v27);
        }
      }
      if (v30)
      {
        v25 = (_DWORD *)v29[0];
        v29[0] = 0;
        if (v25)
        {
          if (*v25 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v25;
        }
      }
      v26 = v28;
      v28 = 0;
      if (v26)
      {
        if (*(_DWORD *)v26 == 2)
          WTF::StringImpl::destroy(v26, v22);
        else
          *(_DWORD *)v26 -= 2;
      }
    }
    v13 = *(_DWORD *)(v9 + 132);
    if (v13)
    {
      if (*(_DWORD *)(*(_QWORD *)(v9 + 120) + 560 * v13 - 352) == v11)
        return 1;
      WebCore::CanvasRenderingContext2DBase::realizeSaves((WebCore::CanvasRenderingContext2DBase::State *)v9);
      v14 = *(_DWORD *)(v9 + 132);
      if (v14)
      {
        *(_DWORD *)(*(_QWORD *)(v9 + 120) + 560 * v14 - 352) = v11;
        return 1;
      }
    }
    __break(0xC471u);
    JUMPOUT(0x194907344);
  }
  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v3);
  result = 0;
  if ((hasExceptionsAfterHandlingTraps & 1) == 0 && v12)
    goto LABEL_14;
  return result;
}

uint64_t WebCore::JSCanvasRenderingContext2DOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  (*(void (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 16))(*(_QWORD *)(v4 + 32));
  v5 = v4 + 8;
  if (!v4)
    v5 = 0;
  if (*(_DWORD *)(a3 + 48))
  {
    JSC::weakRemove<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,WebCore::JSBlob *>((uint64_t *)(a3 + 32), v4);
  }
  else if (*(_QWORD *)v5)
  {
    *(_QWORD *)(*(_QWORD *)v5 + 8) = 3;
    *(_QWORD *)v5 = 0;
  }
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 32) + 24))(*(_QWORD *)(v4 + 32));
}

unint64_t WebCore::toJS(WebCore *this, JSC::JSGlobalObject *a2, WebCore::JSDOMGlobalObject *a3, WebCore::CanvasRenderingContext2D *a4)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t SlowCase;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char **v16;
  unint64_t v17;
  uint64_t *v18;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v20;
  JSC::Structure *v21;
  JSC::JSCell *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  WTF *v38;
  void *v39;
  int v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  WTF *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *Allocator;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  WTF *v53;

  v6 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v6 + 48))
  {
    v53 = a3;
    SlowCase = WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::get((uint64_t *)(v6 + 32), &v53);
  }
  else
  {
    v7 = *((_QWORD *)a3 + 1);
    if (!v7 || (*(_BYTE *)(v7 + 8) & 3) != 0)
      goto LABEL_7;
    SlowCase = *(_QWORD *)v7;
  }
  if (SlowCase)
    return SlowCase;
LABEL_7:
  (*(void (**)(_QWORD))(**((_QWORD **)a3 + 4) + 16))(*((_QWORD *)a3 + 4));
  if (*(void (***)(WebCore::CanvasRenderingContext2D *__hidden))a3 != off_1E33DC338)
  {
    __break(0xC471u);
    JUMPOUT(0x194907808);
  }
  v10 = *((_QWORD *)a2 + 412);
  if (v10)
  {
    v11 = *(_DWORD *)(v10 - 8);
    v12 = ((unint64_t)&WebCore::JSCanvasRenderingContext2D::s_info
         + ~((_QWORD)&WebCore::JSCanvasRenderingContext2D::s_info << 32)) ^ (((unint64_t)&WebCore::JSCanvasRenderingContext2D::s_info
                                                                            + ~((_QWORD)&WebCore::JSCanvasRenderingContext2D::s_info << 32)) >> 22);
    v13 = 9 * ((v12 + ~(v12 << 13)) ^ ((v12 + ~(v12 << 13)) >> 8));
    v14 = (v13 ^ (v13 >> 15)) + ~((v13 ^ (v13 >> 15)) << 27);
    v15 = v11 & ((v14 >> 31) ^ v14);
    v16 = *(char ***)(v10 + 16 * v15);
    if (v16 == &WebCore::JSCanvasRenderingContext2D::s_info)
    {
LABEL_10:
      v17 = *(_QWORD *)(v10 + 16 * v15 + 8);
      if (v17)
        goto LABEL_12;
    }
    else
    {
      v33 = 1;
      while (v16)
      {
        v15 = ((_DWORD)v15 + v33) & v11;
        v16 = *(char ***)(v10 + 16 * v15);
        ++v33;
        if (v16 == &WebCore::JSCanvasRenderingContext2D::s_info)
          goto LABEL_10;
      }
    }
  }
  v18 = (uint64_t *)*((_QWORD *)a2 + 7);
  Structure = WebCore::JSCanvasRenderingContext2DPrototype::createStructure(v18, (uint64_t)a2, *((JSC::JSCell **)a2 + 82));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v22 = (JSC::JSCell *)WebCore::JSCanvasRenderingContext2DPrototype::create((WebCore::JSCanvasRenderingContext2DPrototype *)v18, Structure, v20, v21);
  v23 = WebCore::JSCanvasRenderingContext2D::createStructure(v18, (uint64_t)a2, v22);
  v17 = WebCore::cacheDOMStructure((JSCell *)a2, v23, (uint64_t)&WebCore::JSCanvasRenderingContext2D::s_info);
LABEL_12:
  v24 = *((_QWORD *)a2 + 7);
  v25 = *(_QWORD *)(v24 + 41456);
  v26 = *(_QWORD *)(v25 + 23536);
  v27 = *(_QWORD **)(v26 + 4920);
  if (v27)
    goto LABEL_13;
  v34 = *(_QWORD *)(v25 + 22648);
  if (__ldaxr((unsigned __int8 *)v34))
  {
    __clrex();
LABEL_35:
    MEMORY[0x19AEA534C](v34);
    goto LABEL_36;
  }
  if (__stxr(1u, (unsigned __int8 *)v34))
    goto LABEL_35;
LABEL_36:
  v36 = *(_QWORD *)(v34 + 2824);
  v51 = *(_QWORD *)(v36 + 4920);
  if (!v51)
  {
    v41 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v53, "IsoSpace T");
    v52 = 0;
    MEMORY[0x19AEA3204](v41, &v53, v24 + 192, v24 + 1872, 32, 8, &v52);
    v43 = (uint64_t)v52;
    v52 = 0;
    if (v43)
      (*(void (**)(uint64_t))(*(_QWORD *)v43 + 8))(v43);
    v44 = v53;
    v53 = 0;
    if (v44)
    {
      if (*(_DWORD *)v44 == 1)
        WTF::fastFree(v44, v42);
      else
        --*(_DWORD *)v44;
    }
    v51 = v41;
    v45 = *(_QWORD *)(v36 + 4920);
    *(_QWORD *)(v36 + 4920) = v41;
    if (v45)
      (*(void (**)(uint64_t))(*(_QWORD *)v45 + 8))(v45);
    v46 = *(unsigned int *)(v34 + 2844);
    if ((_DWORD)v46 == *(_DWORD *)(v34 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v34 + 2832, (unint64_t)&v51);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v34 + 2832) + 8 * v46) = v41;
      *(_DWORD *)(v34 + 2844) = v46 + 1;
    }
  }
  v27 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v37 = *(_QWORD *)(v26 + 4920);
  *(_QWORD *)(v26 + 4920) = v27;
  if (v37)
  {
    v38 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v38, v39);
  }
  v40 = __ldxr((unsigned __int8 *)v34);
  if (v40 != 1)
  {
    __clrex();
    goto LABEL_43;
  }
  if (__stlxr(0, (unsigned __int8 *)v34))
LABEL_43:
    WTF::Lock::unlockSlow((WTF::Lock *)v34);
LABEL_13:
  SlowCase = v27[3];
  if (SlowCase < v27[4])
  {
LABEL_14:
    v27[3] = SlowCase + 32;
    goto LABEL_15;
  }
  SlowCase = v27[5];
  if ((SlowCase & 1) == 0)
  {
    v50 = *(_QWORD *)(SlowCase + 8) ^ v27[6];
    v27[4] = SlowCase + HIDWORD(v50);
    v27[5] = SlowCase + (int)v50;
    goto LABEL_14;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_15:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v17);
  *(_QWORD *)(SlowCase + 24) = a3;
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v28 = *((_QWORD *)a2 + 415);
  if ((byte_1EE334E88 & 1) == 0)
  {
    qword_1EE334E80 = (uint64_t)&off_1E3392CA8;
    byte_1EE334E88 = 1;
  }
  if (*(_DWORD *)(v28 + 48))
  {
    v53 = a3;
    if ((SlowCase & 8) != 0)
      v47 = (SlowCase - 112) | 1;
    else
      v47 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v47 & 1) != 0)
      v48 = v47 + 47;
    else
      v48 = *(_QWORD *)v47 + 32;
    Allocator = *(_QWORD **)(v48 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v48 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1EE334E80;
    Allocator[2] = v28;
    v52 = Allocator;
    JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v28 + 32), (uint64_t *)&v53, (uint64_t *)&v52);
    v32 = (uint64_t)v52;
    if (v52)
      goto LABEL_28;
  }
  else
  {
    if ((SlowCase & 8) != 0)
      v29 = (SlowCase - 112) | 1;
    else
      v29 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v29 & 1) != 0)
      v30 = v29 + 47;
    else
      v30 = *(_QWORD *)v29 + 32;
    v31 = *(_QWORD **)(v30 + 16);
    if (!v31)
      v31 = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v30 + 16) = *v31;
    *v31 = SlowCase;
    v31[1] = &qword_1EE334E80;
    v31[2] = v28;
    v32 = *((_QWORD *)a3 + 1);
    *((_QWORD *)a3 + 1) = v31;
    if (v32)
LABEL_28:
      *(_QWORD *)(v32 + 8) = 3;
  }
  return SlowCase;
}

unint64_t JSC::jsDynamicCast<WebCore::JSCanvasRenderingContext2D *>(unint64_t result)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((result & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSCanvasRenderingContext2D::s_info && v3 != 0);
  }
  if (!v2)
    return 0;
  return result;
}

unint64_t WebCore::convertDictionary<WebCore::CanvasRenderingContext2DSettings>@<X0>(WebCore::JSDOMGlobalObject *this@<X0>, JSC::JSCell *a2@<X1>, uint64_t a3@<X8>)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::Structure *Object;
  uint64_t v8;
  unsigned __int16 v9;
  BOOL v10;
  uint64_t v11;
  unint64_t result;
  uint64_t v13;
  char v14;
  JSC::Structure *v15;
  char v16;
  unsigned __int8 v17;
  BOOL v18;
  WTF::StringImpl *v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  unint64_t v22;
  WTF::StringImpl *v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  BOOL v34;
  BOOL v35;
  BOOL v36;
  _DWORD *v37;
  int v38;
  uint64_t v39;
  int *v40;
  int *v41;
  int v42;
  BOOL v43;
  int v44;
  uint64_t v45;
  int *v46;
  int v47;
  int v48;
  _BYTE v49[12];
  int v50;
  JSC::VM *v51;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v51 = v5;
  v6 = (unint64_t)a2 & 0xFFFFFFFFFFFFFFF7;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    Object = 0;
  }
  else
  {
    if (((unint64_t)a2 & 0xFFFE000000000002) != 0)
      goto LABEL_12;
    Object = (JSC::Structure *)JSC::JSCell::getObject(a2);
    if (!Object)
      goto LABEL_12;
  }
  v8 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 136))(v8) + 432) & 0x200000000000) == 0)
  {
    LOBYTE(v9) = 0;
    v10 = 0;
    if (v6 == 2)
      goto LABEL_7;
    goto LABEL_32;
  }
  if (v6 == 2)
  {
    LOBYTE(v9) = 0;
LABEL_6:
    v10 = 0;
    goto LABEL_7;
  }
  WTF::AtomStringImpl::addLiteral();
  v20 = JSC::JSObject::get(Object, this, *(unint64_t *)v49);
  if (*(_QWORD *)v49)
  {
    if (**(_DWORD **)v49 == 2)
      WTF::StringImpl::destroy(*(WTF::StringImpl **)v49, v19);
    else
      **(_DWORD **)v49 -= 2;
  }
  if (*((_DWORD *)v5 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    if ((_DWORD)result)
      goto LABEL_13;
  }
  if (v20 == 10)
  {
    LOBYTE(v9) = 0;
    goto LABEL_32;
  }
  *(_QWORD *)v49 = *((_QWORD *)this + 7);
  v9 = WebCore::parseEnumeration<WebCore::PredefinedColorSpace>(this, v20);
  if (*(_DWORD *)(*(_QWORD *)v49 + 80))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(*(JSC::VM **)v49);
    if ((result & 1) != 0)
      goto LABEL_13;
  }
  if (v9 <= 0xFFu)
  {
LABEL_12:
    result = JSC::throwTypeError();
    goto LABEL_13;
  }
LABEL_32:
  WTF::AtomStringImpl::addLiteral();
  v24 = JSC::JSObject::get(Object, this, *(unint64_t *)v49);
  if (*(_QWORD *)v49)
  {
    if (**(_DWORD **)v49 == 2)
    {
      v30 = v24;
      WTF::StringImpl::destroy(*(WTF::StringImpl **)v49, v23);
      v24 = v30;
    }
    else
    {
      **(_DWORD **)v49 -= 2;
    }
  }
  if (*((_DWORD *)v5 + 20))
  {
    v32 = v24;
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    v24 = v32;
    if ((_DWORD)result)
      goto LABEL_13;
  }
  if (v24 == 10)
    goto LABEL_6;
  v25 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v24 >= 0xFFFE000000000000)
  {
    v34 = (_DWORD)v24 == 0;
    goto LABEL_76;
  }
  *(_QWORD *)&v26 = v24 - 0x2000000000000;
  if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v24 & 0xFFFE000000000002) != 0)
    {
      v10 = v24 == 7;
      goto LABEL_41;
    }
    v37 = (_DWORD *)v24;
    v38 = *(unsigned __int8 *)(v24 + 5);
    if (v38 == 3)
    {
      v42 = v37[2];
    }
    else
    {
      if (v38 != 2)
      {
        if ((*(_BYTE *)(16 * (*v37 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v10 = 1;
          goto LABEL_41;
        }
        v34 = *(_QWORD *)(16 * (*v37 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
        goto LABEL_76;
      }
      v39 = *((_QWORD *)v37 + 1);
      v40 = v37 + 4;
      if ((v39 & 1) != 0)
        v41 = v40;
      else
        v41 = (int *)(v39 + 4);
      v42 = *v41;
    }
    v34 = v42 == 0;
LABEL_76:
    v10 = !v34;
    goto LABEL_41;
  }
  v35 = v26 <= 0.0;
  v36 = v26 < 0.0;
  v10 = !v35 || v36;
LABEL_41:
  if (*((_DWORD *)v25 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v25);
    if ((_DWORD)result)
      goto LABEL_13;
  }
LABEL_7:
  v11 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 136))(v11);
  v13 = *(_QWORD *)(result + 440);
  if ((v13 & 0x80000000000000) != 0)
  {
    if (v6 == 2)
    {
      v14 = v9;
      v17 = 0;
      v16 = 0;
      v18 = 0;
      goto LABEL_9;
    }
    WTF::AtomStringImpl::addLiteral();
    v22 = JSC::JSObject::get(Object, this, *(unint64_t *)v49);
    if (*(_QWORD *)v49)
    {
      if (**(_DWORD **)v49 == 2)
      {
        v31 = v22;
        WTF::StringImpl::destroy(*(WTF::StringImpl **)v49, v21);
        v22 = v31;
      }
      else
      {
        **(_DWORD **)v49 -= 2;
      }
    }
    LODWORD(v13) = *((_DWORD *)v5 + 20);
    if ((_DWORD)v13)
    {
      v33 = v22;
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
      v22 = v33;
      if ((_DWORD)result)
        goto LABEL_13;
    }
    v14 = v9;
    v15 = Object;
    if (v22 == 10)
    {
      v16 = 0;
      v17 = 0;
    }
    else
    {
      result = WebCore::convert<WebCore::IDLNullable<WebCore::IDLEnumeration<WebCore::CanvasRenderingContext2DSettings::RenderingMode>>>((uint64_t)v49, this, v22);
      if (v50)
        goto LABEL_13;
      v17 = v49[4];
      v13 = *(_QWORD *)&v49[4] >> 8;
      v16 = v49[8];
    }
  }
  else
  {
    v14 = v9;
    v15 = Object;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    if (v6 == 2)
    {
LABEL_9:
      *(_BYTE *)a3 = v10;
      *(_BYTE *)(a3 + 1) = v18;
      *(_BYTE *)(a3 + 2) = v14;
      *(_DWORD *)(a3 + 4) = v17 | ((_DWORD)v13 << 8);
      *(_BYTE *)(a3 + 8) = v16;
      *(_WORD *)(a3 + 9) = *(_WORD *)v49;
      *(_BYTE *)(a3 + 11) = v49[2];
      *(_DWORD *)(a3 + 12) = 0;
      return result;
    }
  }
  v48 = v13;
  WTF::AtomStringImpl::addLiteral();
  v27 = *(WTF::StringImpl **)v49;
  result = JSC::JSObject::get(v15, this, *(unint64_t *)v49);
  v29 = result;
  if (v27)
  {
    if (*(_DWORD *)v27 == 2)
      result = WTF::StringImpl::destroy(v27, v28);
    else
      *(_DWORD *)v27 -= 2;
  }
  if (*((_DWORD *)v5 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    if ((_DWORD)result)
      goto LABEL_13;
  }
  if (v29 == 10)
  {
    v18 = 0;
LABEL_57:
    LODWORD(v13) = v48;
    goto LABEL_9;
  }
  result = *((_QWORD *)this + 7);
  if (v29 >= 0xFFFE000000000000)
  {
    v43 = (_DWORD)v29 == 0;
    goto LABEL_89;
  }
  if (v29 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
  {
    v18 = COERCE_DOUBLE(v29 - 0x2000000000000) > 0.0 || COERCE_DOUBLE(v29 - 0x2000000000000) < 0.0;
    goto LABEL_56;
  }
  if ((v29 & 0xFFFE000000000002) == 0)
  {
    v44 = *(unsigned __int8 *)(v29 + 5);
    if (v44 == 3)
    {
      v47 = *(_DWORD *)(v29 + 8);
    }
    else
    {
      if (v44 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)v29 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v18 = 1;
          goto LABEL_56;
        }
        v43 = *(_QWORD *)(16 * (*(_DWORD *)v29 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_89:
        v18 = !v43;
        goto LABEL_56;
      }
      v45 = *(_QWORD *)(v29 + 8);
      if ((v45 & 1) != 0)
        v46 = (int *)(v29 + 16);
      else
        v46 = (int *)(v45 + 4);
      v47 = *v46;
    }
    v43 = v47 == 0;
    goto LABEL_89;
  }
  v18 = v29 == 7;
LABEL_56:
  if (!*(_DWORD *)(result + 80))
    goto LABEL_57;
  result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)result);
  LODWORD(v13) = v48;
  if (!(_DWORD)result)
    goto LABEL_9;
LABEL_13:
  *(_DWORD *)(a3 + 12) = 1;
  return result;
}

uint64_t WebCore::convert<WebCore::IDLNullable<WebCore::IDLEnumeration<WebCore::CanvasRenderingContext2DSettings::RenderingMode>>>(uint64_t result, JSC::JSGlobalObject *a2, unint64_t this)
{
  uint64_t v3;
  int v4;
  JSC::VM *v5;
  int v6;
  const char *v7;
  int v8;
  uint64_t v10;
  char **v13;
  uint16x8_t v14;
  uint16x8_t v15;
  uint16x8_t v16;
  uint16x8_t v17;
  uint64_t v19;
  unint64_t v20;

  v3 = result;
  if ((this & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    v5 = (JSC::VM *)*((_QWORD *)a2 + 7);
    v20 = this;
    if ((this & 0xFFFE000000000002) != 0 || *(_BYTE *)(this + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v20, a2);
      result = v19;
      if (v19)
      {
LABEL_9:
        v6 = *(_DWORD *)(result + 16);
        v7 = *(const char **)(result + 8);
        v8 = *(_DWORD *)(result + 4);
        if (v7 != "Accelerated" && v8 == 11)
        {
          if ((v6 & 4) != 0)
          {
            if (*v7 != 65 || *(_QWORD *)(v7 + 1) != 0x746172656C656363 || *(_QWORD *)(v7 + 3) != 0x6465746172656C65)
              goto LABEL_18;
          }
          else
          {
            if (*(_WORD *)v7 != 65)
              goto LABEL_18;
            v14 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v7 + 2), (int16x8_t)xmmword_1968BCF00);
            v14.i16[0] = vminvq_u16(v14);
            if (!v14.i32[0])
              goto LABEL_18;
            v15 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v7 + 6), (int16x8_t)xmmword_1968BCF10);
            v15.i16[0] = vminvq_u16(v15);
            if (!v15.i32[0])
              goto LABEL_18;
          }
        }
        else if (v7 != "Accelerated" || v8 != 11)
        {
          if (v7 == "Unaccelerated" || v8 != 13)
          {
            if (v8 != 13 || v7 != "Unaccelerated")
              goto LABEL_18;
            goto LABEL_32;
          }
          if ((v6 & 4) != 0)
          {
            if (*v7 == 85 && *(_QWORD *)(v7 + 1) == 0x72656C656363616ELL && *(_QWORD *)(v7 + 5) == 0x6465746172656C65)
            {
LABEL_32:
              v13 = &off_1E3238438;
LABEL_41:
              v10 = *((unsigned int *)v13 + 4) | 0x100000000;
LABEL_42:
              if (*(_DWORD *)result == 2)
                result = WTF::StringImpl::destroy((WTF::StringImpl *)result, a2);
              else
                *(_DWORD *)result -= 2;
LABEL_44:
              if (!*((_DWORD *)v5 + 20) || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v5), (result & 1) == 0))
              {
                if ((v10 & 0x100000000) != 0)
                {
                  v4 = 0;
                  *(_QWORD *)(v3 + 4) = v10 | 0x100000000;
                  goto LABEL_47;
                }
                result = JSC::throwTypeError();
              }
              v4 = 1;
              goto LABEL_47;
            }
          }
          else if (*(_WORD *)v7 == 85)
          {
            v16 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v7 + 2), (int16x8_t)xmmword_1968BCF20);
            v16.i16[0] = vminvq_u16(v16);
            if (v16.i32[0])
            {
              v17 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v7 + 10), (int16x8_t)xmmword_1968BCF10);
              v17.i16[0] = vminvq_u16(v17);
              if (v17.i32[0])
                goto LABEL_32;
            }
          }
LABEL_18:
          v10 = 0;
          goto LABEL_42;
        }
        v13 = &WebCore::parseEnumerationFromString<WebCore::CanvasRenderingContext2DSettings::RenderingMode>(WTF::String const&)::mappings;
        goto LABEL_41;
      }
LABEL_36:
      v10 = 0;
      goto LABEL_44;
    }
    result = *(_QWORD *)(this + 8);
    if ((result & 1) != 0)
    {
      result = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, a2);
      if (!result)
      {
LABEL_8:
        if (result)
          goto LABEL_9;
        goto LABEL_36;
      }
    }
    else if (!result)
    {
      goto LABEL_8;
    }
    *(_DWORD *)result += 2;
    goto LABEL_8;
  }
  v4 = 0;
  *(_QWORD *)(result + 4) = 0;
LABEL_47:
  *(_DWORD *)(v3 + 12) = v4;
  return result;
}

uint64_t WebCore::convertEnumerationToJS<WebCore::CanvasTextAlign>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)(a1 + 41968);
  {
    WebCore::convertEnumerationToString(WebCore::CanvasTextAlign)::$_0::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CanvasTextAlign)::$_1::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CanvasTextAlign)::$_2::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CanvasTextAlign)::$_3::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CanvasTextAlign)::values[0] = (uint64_t)&WebCore::convertEnumerationToString(WebCore::CanvasTextAlign)::$_0::operator() const(void)::impl;
    *(_QWORD *)algn_1EE2F4418 = &WebCore::convertEnumerationToString(WebCore::CanvasTextAlign)::$_1::operator() const(void)::impl;
    qword_1EE2F4420 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::CanvasTextAlign)::$_2::operator() const(void)::impl;
    unk_1EE2F4428 = &WebCore::convertEnumerationToString(WebCore::CanvasTextAlign)::$_3::operator() const(void)::impl;
    WebCore::convertEnumerationToString(WebCore::CanvasTextAlign)::$_4::operator() const(void)::impl += 2;
    qword_1EE2F4430 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::CanvasTextAlign)::$_4::operator() const(void)::impl;
  }
  v3 = WebCore::convertEnumerationToString(WebCore::CanvasTextAlign)::values[(int)a2];
  if (!v3)
    return *v2;
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  *(_DWORD *)v3 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_6:
      v6 = *(_QWORD *)(a1 + 64760);
      if (!v6 || v3 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v3 - 2;
      }
      goto LABEL_9;
    }
    v8 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_6;
      v9 = v10;
    }
    v6 = *(_QWORD *)(a1 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *v2;
  }
LABEL_9:
  if (v4)
    *(_DWORD *)v3 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v3, a2);
  return v6;
}

uint64_t WebCore::parseEnumeration<WebCore::CanvasTextAlign>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  const char *v5;
  int v6;
  unint64_t v7;
  char **v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v17;
  BOOL v18;
  int v19;
  uint64_t v21;
  unint64_t v22;

  v3 = a1;
  v22 = this;
  if ((this & 0xFFFE000000000002) != 0 || *(_BYTE *)(this + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v22, a1);
    v4 = v21;
  }
  else
  {
    v4 = *(_QWORD *)(this + 8);
    if ((v4 & 1) != 0)
      v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
    if (v4)
      *(_DWORD *)v4 += 2;
  }
  if (!v4)
    return 0;
  v5 = *(const char **)(v4 + 8);
  v6 = *(_DWORD *)(v4 + 4);
  v7 = ((unint64_t)*(unsigned int *)(v4 + 16) >> 2) & 1;
  if (v5 != "center" && v6 == 6)
  {
    if ((_DWORD)v7)
    {
      if (*v5 != 99 || *(_DWORD *)(v5 + 1) != 1702129253 || *(_DWORD *)(v5 + 2) != 1919251566)
        goto LABEL_39;
    }
    else
    {
      if (*(_WORD *)v5 != 99)
        goto LABEL_39;
      v13 = *(_QWORD *)(v5 + 2);
      v14 = *(_QWORD *)(v5 + 4);
      if (v13 != 0x650074006E0065 || v14 != 0x7200650074006ELL)
        goto LABEL_39;
    }
    goto LABEL_17;
  }
  if (v5 == "center" && v6 == 6)
  {
LABEL_17:
    v9 = &WebCore::parseEnumerationFromString<WebCore::CanvasTextAlign>(WTF::String const&)::mappings;
LABEL_18:
    v10 = *((unsigned int *)v9 + 4) | 0x100000000;
    goto LABEL_40;
  }
  if (v5 != "end" && v6 == 3)
  {
    if ((_DWORD)v7)
    {
      if (*v5 != 101 || *(_WORD *)(v5 + 1) != 25710)
        goto LABEL_39;
    }
    else if (*(_WORD *)v5 != 101 || *(_DWORD *)(v5 + 2) != 6553710)
    {
      goto LABEL_39;
    }
    goto LABEL_31;
  }
  if (v5 == "end" && v6 == 3)
  {
LABEL_31:
    v9 = &off_1E3238468;
    goto LABEL_18;
  }
  if (v5 == "left" || v6 != 4)
  {
    if (v5 == "left" && v6 == 4)
      goto LABEL_55;
    v17 = v7 << 32;
    v18 = v6 != 5;
    if (v5 == "right" || v6 != 5)
    {
      v19 = *(_DWORD *)(v4 + 4);
      if (v5 != "right" || v6 != 5)
      {
LABEL_76:
        if (v5 == "start" || v18)
        {
          if (v6 != 5 || v5 != "start")
            goto LABEL_39;
        }
        else if (v19)
        {
          if ((v17 & 0x100000000) != 0)
          {
            if (*v5 != 115 || *(_WORD *)(v5 + 1) != 24948 || *(_WORD *)(v5 + 3) != 29810)
              goto LABEL_39;
          }
          else if (*(_WORD *)v5 != 115 || *(_QWORD *)(v5 + 2) != 0x74007200610074)
          {
            goto LABEL_39;
          }
        }
        v9 = &off_1E32384B0;
        goto LABEL_18;
      }
    }
    else if ((_DWORD)v7)
    {
      if (*v5 != 114 || *(_WORD *)(v5 + 1) != 26473 || *(_WORD *)(v5 + 3) != 29800)
      {
        v18 = 0;
        v19 = 5;
        v17 = 0x100000000;
        goto LABEL_76;
      }
    }
    else if (*(_WORD *)v5 != 114 || *(_QWORD *)(v5 + 2) != 0x74006800670069)
    {
      v18 = 0;
      v19 = 5;
      goto LABEL_76;
    }
    v9 = &off_1E3238498;
    goto LABEL_18;
  }
  if ((_DWORD)v7)
  {
    if (*v5 == 108 && *(_WORD *)(v5 + 1) == 26213 && *((_WORD *)v5 + 1) == 29798)
    {
LABEL_55:
      v9 = &off_1E3238480;
      goto LABEL_18;
    }
  }
  else if (*(_WORD *)v5 == 108)
  {
    v10 = 0;
    if (*(_DWORD *)(v5 + 2) != 6684773 || *((_DWORD *)v5 + 1) != 7602278)
      goto LABEL_40;
    goto LABEL_55;
  }
LABEL_39:
  v10 = 0;
LABEL_40:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v10;
}

uint64_t WebCore::convertEnumerationToJS<WebCore::CanvasTextBaseline>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)(a1 + 41968);
  {
    WebCore::convertEnumerationToString(WebCore::CanvasTextBaseline)::$_0::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CanvasTextBaseline)::$_1::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CanvasTextBaseline)::$_2::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CanvasTextBaseline)::$_3::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CanvasTextBaseline)::$_4::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CanvasTextBaseline)::$_5::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CanvasTextBaseline)::values[0] = (uint64_t)&WebCore::convertEnumerationToString(WebCore::CanvasTextBaseline)::$_0::operator() const(void)::impl;
    *(_QWORD *)algn_1EE2F4448 = &WebCore::convertEnumerationToString(WebCore::CanvasTextBaseline)::$_1::operator() const(void)::impl;
    qword_1EE2F4450 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::CanvasTextBaseline)::$_2::operator() const(void)::impl;
    unk_1EE2F4458 = &WebCore::convertEnumerationToString(WebCore::CanvasTextBaseline)::$_3::operator() const(void)::impl;
    qword_1EE2F4460 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::CanvasTextBaseline)::$_4::operator() const(void)::impl;
    unk_1EE2F4468 = &WebCore::convertEnumerationToString(WebCore::CanvasTextBaseline)::$_5::operator() const(void)::impl;
  }
  v3 = WebCore::convertEnumerationToString(WebCore::CanvasTextBaseline)::values[(int)a2];
  if (!v3)
    return *v2;
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  *(_DWORD *)v3 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_6:
      v6 = *(_QWORD *)(a1 + 64760);
      if (!v6 || v3 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v3 - 2;
      }
      goto LABEL_9;
    }
    v8 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_6;
      v9 = v10;
    }
    v6 = *(_QWORD *)(a1 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *v2;
  }
LABEL_9:
  if (v4)
    *(_DWORD *)v3 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v3, a2);
  return v6;
}

uint64_t WebCore::parseEnumeration<WebCore::CanvasTextBaseline>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  const char *v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  char **v10;
  uint64_t v11;
  BOOL v14;
  BOOL v15;
  uint16x8_t v16;
  uint16x8_t v17;
  BOOL v18;
  _BOOL4 v19;
  uint16x8_t v22;
  uint16x8_t v23;
  uint64_t v24;
  unint64_t v25;

  v3 = a1;
  v25 = this;
  if ((this & 0xFFFE000000000002) != 0 || *(_BYTE *)(this + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v25, a1);
    v4 = v24;
  }
  else
  {
    v4 = *(_QWORD *)(this + 8);
    if ((v4 & 1) != 0)
      v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
    if (v4)
      *(_DWORD *)v4 += 2;
  }
  if (!v4)
    return 0;
  v5 = *(const char **)(v4 + 8);
  v6 = *(_DWORD *)(v4 + 4);
  v7 = ((unint64_t)*(unsigned int *)(v4 + 16) >> 2) & 1;
  v8 = v7 << 32;
  if (v5 != "alphabetic" && v6 == 10)
  {
    if ((_DWORD)v7)
    {
      if (*v5 != 97 || *(_QWORD *)(v5 + 1) != 0x697465626168706CLL || *(_QWORD *)(v5 + 2) != 0x6369746562616870)
        goto LABEL_70;
    }
    else
    {
      if (*(_WORD *)v5 != 97)
        goto LABEL_70;
      v16 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 2), (int16x8_t)xmmword_1968BCF30);
      v16.i16[0] = vminvq_u16(v16);
      if (!v16.i32[0])
        goto LABEL_70;
      v17 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 4), (int16x8_t)xmmword_1968BCF40);
      v17.i16[0] = vminvq_u16(v17);
      v14 = v17.i8[0];
      if (!v17.i32[0])
      {
        v18 = 0;
        v19 = v5 == "ideographic";
        v15 = 1;
        goto LABEL_40;
      }
    }
LABEL_17:
    v10 = &WebCore::parseEnumerationFromString<WebCore::CanvasTextBaseline>(WTF::String const&)::mappings;
LABEL_18:
    v11 = *((unsigned int *)v10 + 4) | 0x100000000;
    goto LABEL_19;
  }
  if (v5 == "alphabetic" && v6 == 10)
    goto LABEL_17;
  v14 = v6 == 6;
  v15 = v6 != 6;
  if (v5 != "bottom" && v6 == 6)
  {
    if ((_DWORD)v7)
    {
      if (*v5 == 98 && *(_DWORD *)(v5 + 1) == 1869902959 && *(_DWORD *)(v5 + 2) == 1836020852)
      {
LABEL_32:
        v10 = &off_1E32384E0;
        goto LABEL_18;
      }
    }
    else if (*(_WORD *)v5 == 98
           && *(_QWORD *)(v5 + 2) == 0x6F00740074006FLL
           && *(_QWORD *)(v5 + 4) == 0x6D006F00740074)
    {
      goto LABEL_32;
    }
    v15 = 0;
    v6 = 6;
    goto LABEL_49;
  }
  if (v5 == "bottom" && v6 == 6)
    goto LABEL_32;
  if (v5 == "hanging" || v6 != 7)
  {
    if (v5 == "hanging" && v6 == 7)
      goto LABEL_79;
    v18 = v6 == 11;
    v19 = v5 == "ideographic";
    if (v5 != "ideographic" && v6 == 11)
    {
      if ((_DWORD)v7)
      {
        if (*v5 != 105 || *(_QWORD *)(v5 + 1) != 0x68706172676F6564 || *(_QWORD *)(v5 + 3) != 0x636968706172676FLL)
        {
          v6 = 11;
          goto LABEL_90;
        }
      }
      else if (*(_WORD *)v5 != 105
             || (v22 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 2), (int16x8_t)xmmword_1968BCF50),
                 v22.i16[0] = vminvq_u16(v22),
                 !v22.i32[0])
             || (v23 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 6), (int16x8_t)xmmword_1968BCF60),
                 v23.i16[0] = vminvq_u16(v23),
                 !v23.i32[0]))
      {
        v6 = 11;
        goto LABEL_49;
      }
LABEL_42:
      v10 = &off_1E3238510;
      goto LABEL_18;
    }
LABEL_40:
    if (!v19 || !v18)
      goto LABEL_49;
    goto LABEL_42;
  }
  if ((_DWORD)v7)
  {
    if (*v5 == 104 && *(_DWORD *)(v5 + 1) == 1768386145 && *(_DWORD *)(v5 + 3) == 1735289191)
      goto LABEL_79;
    v6 = 7;
LABEL_90:
    v8 = 0x100000000;
    goto LABEL_49;
  }
  if (*(_WORD *)v5 != 104)
  {
    v6 = 7;
    goto LABEL_49;
  }
  v6 = 7;
  if (*(_QWORD *)(v5 + 2) == 0x690067006E0061 && *(_QWORD *)(v5 + 6) == 0x67006E00690067)
  {
LABEL_79:
    v10 = &off_1E32384F8;
    goto LABEL_18;
  }
LABEL_49:
  if (v5 == "middle" || v15)
  {
    if (v5 != "middle")
      v14 = 0;
    if (v14)
      goto LABEL_56;
  }
  else
  {
    if (!v6)
    {
LABEL_56:
      v10 = &off_1E3238528;
      goto LABEL_18;
    }
    if ((v8 & 0x100000000) != 0)
    {
      if (*v5 == 109 && *(_DWORD *)(v5 + 1) == 1818518633 && *(_DWORD *)(v5 + 2) == 1701602404)
        goto LABEL_56;
      v8 = 0x100000000;
    }
    else if (*(_WORD *)v5 == 109
           && *(_QWORD *)(v5 + 2) == 0x6C006400640069
           && *(_QWORD *)(v5 + 4) == 0x65006C00640064)
    {
      goto LABEL_56;
    }
  }
  if (v5 == "top" || v6 != 3)
  {
    if (v6 == 3 && v5 == "top")
      goto LABEL_63;
  }
  else if ((v8 & 0x100000000) != 0)
  {
    if (*v5 == 116 && *(_WORD *)(v5 + 1) == 28783)
    {
LABEL_63:
      v10 = &off_1E3238540;
      goto LABEL_18;
    }
  }
  else if (*(_WORD *)v5 == 116 && *(_DWORD *)(v5 + 2) == 7340143)
  {
    goto LABEL_63;
  }
LABEL_70:
  v11 = 0;
LABEL_19:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v11;
}

void WebCore::JSCSSNumericArrayOwner::~JSCSSNumericArrayOwner(WebCore::JSCSSNumericArrayOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSCSSOMVariableReferenceValueOwner::~JSCSSOMVariableReferenceValueOwner(WebCore::JSCSSOMVariableReferenceValueOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

BOOL WebCore::JSCSSPaintCallback::hasCallback(WebCore::JSCSSPaintCallback *this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *((_QWORD *)this + 4);
  return v1 && (v2 = *(_QWORD *)(v1 + 16)) != 0 && (*(_BYTE *)(v2 + 8) & 3) == 0 && *(_QWORD *)v2 != 0;
}

void WebCore::JSCSSPaintSizeOwner::~JSCSSPaintSizeOwner(WebCore::JSCSSPaintSizeOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSCSSRuleOwner::~JSCSSRuleOwner(WebCore::JSCSSRuleOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSCSSStyleDeclarationOwner::~JSCSSStyleDeclarationOwner(WebCore::JSCSSStyleDeclarationOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSCSSStyleValueOwner::~JSCSSStyleValueOwner(WebCore::JSCSSStyleValueOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSCSSTransformComponentOwner::~JSCSSTransformComponentOwner(WebCore::JSCSSTransformComponentOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSCSSTransitionOwner::~JSCSSTransitionOwner(WebCore::JSCSSTransitionOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSCanvasCaptureMediaStreamTrackOwner::~JSCanvasCaptureMediaStreamTrackOwner(WebCore::JSCanvasCaptureMediaStreamTrackOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSCanvasGradientOwner::~JSCanvasGradientOwner(WebCore::JSCanvasGradientOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

void WebCore::JSCanvasPatternOwner::~JSCanvasPatternOwner(WebCore::JSCanvasPatternOwner *this)
{
  JSC::WeakHandleOwner::~WeakHandleOwner(this);
  JUMPOUT(0x19AEA7644);
}

_DWORD *WebCore::jsCSSNumericValueConstructorFunction_parse(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  int v5;
  WTF::StringImpl *v6;
  _DWORD *v7;
  WTF::StringImpl *v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  JSValue v12;
  WTF::StringImpl *v13;
  JSValue v14;
  uint64_t v15;
  _DWORD **v16;
  WTF::StringImpl *v17;
  int v18[2];
  WTF::StringImpl *v19;
  int v20;
  WTF::StringImpl *v21;
  int v22;
  _BYTE v23[8];
  WTF::StringImpl *v24;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v12.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_DWORD *)JSC::VM::throwException(v4, this, v12);
  }
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v21);
  v5 = v22;
  if (v22)
  {
    v9 = 0;
LABEL_12:
    if (v5 != -1)
      ((void (*)(int *, WTF::StringImpl **))off_1E3238AF8[v5])(v18, &v21);
    return (_DWORD *)v9;
  }
  v6 = v21;
  v21 = 0;
  v17 = v6;
  WebCore::CSSNumericValue::parse((unsigned int **)&v17, (uint64_t)v18);
  if (!v20)
  {
    v7 = *(_DWORD **)v18;
    *(_QWORD *)v18 = 0;
    v9 = WebCore::wrap<WebCore::CSSStyleValue>((uint64_t)this, (uint64_t)this, (uint64_t)v7);
    if (v7[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v7 + 16))(v7);
    else
      --v7[2];
LABEL_6:
    if (v20 != -1)
      ((void (*)(_BYTE *, int *))off_1E32386F0[v20])(v23, v18);
    v20 = -1;
    v10 = v17;
    v17 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
        WTF::StringImpl::destroy(v10, v8);
      else
        *(_DWORD *)v10 -= 2;
    }
    v5 = v22;
    goto LABEL_12;
  }
  if (v20 == 1)
  {
    v8 = (WTF::StringImpl *)LOBYTE(v18[0]);
    v23[0] = v18[0];
    v13 = v19;
    v19 = 0;
    v24 = v13;
    if (!*((_QWORD *)v4 + 2))
    {
      v14.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v18[0]), (JSC::JSGlobalObject *)&v24);
      JSC::VM::throwException(v4, this, v14);
      v13 = v24;
    }
    v24 = 0;
    if (v13)
    {
      if (*(_DWORD *)v13 == 2)
        WTF::StringImpl::destroy(v13, v8);
      else
        *(_DWORD *)v13 -= 2;
    }
    v9 = 0;
    goto LABEL_6;
  }
  v15 = std::__throw_bad_variant_access[abi:sn180100]();
  return _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(v15, v16);
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_BYTE *WebCore::jsCSSNumericValuePrototypeFunction_add(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WTF *v11;
  uint64_t v12;
  _DWORD *v13;
  void *v14;
  unint64_t v15;
  WTF *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v22;
  JSValue v23;
  WebCore *v24;
  JSC::JSGlobalObject *v25;
  JSC::CallFrame *v26;
  uint64_t v27;
  int v28[2];
  WTF::StringImpl *v29;
  int v30;
  WTF *v31;
  _BYTE v32[8];
  WTF::StringImpl *v33;

  v4 = *((_QWORD *)this + 7);
  v27 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "CSSNumericValue", "add");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCSSNumericValue::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCSSNumericValue::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "CSSNumericValue", "add");
  v11 = *(WTF **)(v5 + 24);
  WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>>>((uint64_t)this, (uint64_t)a2, 0, &v31);
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
  {
    v15 = 0;
LABEL_18:
    v16 = v31;
    v31 = 0;
    if (v16)
    {
      v18 = (char *)v16 + 8;
      v17 = *(unsigned int *)v16;
      if ((_DWORD)v17)
      {
        v19 = 16 * v17;
        do
        {
          v20 = *((unsigned int *)v18 + 2);
          if ((_DWORD)v20 != -1)
            ((void (*)(int *, char *))off_1E32388B8[v20])(v28, v18);
          *((_DWORD *)v18 + 2) = -1;
          v18 += 16;
          v19 -= 16;
        }
        while (v19);
      }
      WTF::fastFree(v16, v14);
    }
    return (_BYTE *)v15;
  }
  v12 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  WebCore::CSSNumericValue::add(v11, (unsigned int **)&v31, (uint64_t)v28);
  if (!v30)
  {
    v13 = *(_DWORD **)v28;
    *(_QWORD *)v28 = 0;
    v15 = WebCore::wrap<WebCore::CSSStyleValue>((uint64_t)this, v12, (uint64_t)v13);
    if (v13[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v13 + 16))(v13);
    else
      --v13[2];
LABEL_16:
    if (v30 != -1)
      ((void (*)(_BYTE *, int *))off_1E32386F0[v30])(v32, v28);
    goto LABEL_18;
  }
  if (v30 == 1)
  {
    v14 = (void *)LOBYTE(v28[0]);
    v32[0] = v28[0];
    v22 = v29;
    v29 = 0;
    v33 = v22;
    if (!*(_QWORD *)(v4 + 16))
    {
      v23.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v28[0]), (JSC::JSGlobalObject *)&v33);
      JSC::VM::throwException((JSC::VM *)v4, this, v23);
      v22 = v33;
    }
    v33 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, (WTF::StringImpl *)v14);
      else
        *(_DWORD *)v22 -= 2;
    }
    v15 = 0;
    goto LABEL_16;
  }
  v24 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsCSSNumericValuePrototypeFunction_sub(v24, v25, v26);
}

_BYTE *WebCore::jsCSSNumericValuePrototypeFunction_sub(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WTF *v11;
  uint64_t v12;
  _DWORD *v13;
  void *v14;
  unint64_t v15;
  WTF *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v22;
  JSValue v23;
  WebCore *v24;
  JSC::JSGlobalObject *v25;
  JSC::CallFrame *v26;
  uint64_t v27;
  int v28[2];
  WTF::StringImpl *v29;
  int v30;
  WTF *v31;
  _BYTE v32[8];
  WTF::StringImpl *v33;

  v4 = *((_QWORD *)this + 7);
  v27 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "CSSNumericValue", "sub");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCSSNumericValue::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCSSNumericValue::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "CSSNumericValue", "sub");
  v11 = *(WTF **)(v5 + 24);
  WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>>>((uint64_t)this, (uint64_t)a2, 0, &v31);
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
  {
    v15 = 0;
LABEL_18:
    v16 = v31;
    v31 = 0;
    if (v16)
    {
      v18 = (char *)v16 + 8;
      v17 = *(unsigned int *)v16;
      if ((_DWORD)v17)
      {
        v19 = 16 * v17;
        do
        {
          v20 = *((unsigned int *)v18 + 2);
          if ((_DWORD)v20 != -1)
            ((void (*)(int *, char *))off_1E32388B8[v20])(v28, v18);
          *((_DWORD *)v18 + 2) = -1;
          v18 += 16;
          v19 -= 16;
        }
        while (v19);
      }
      WTF::fastFree(v16, v14);
    }
    return (_BYTE *)v15;
  }
  v12 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  WebCore::CSSNumericValue::sub(v11, (unsigned int **)&v31, (uint64_t)v28);
  if (!v30)
  {
    v13 = *(_DWORD **)v28;
    *(_QWORD *)v28 = 0;
    v15 = WebCore::wrap<WebCore::CSSStyleValue>((uint64_t)this, v12, (uint64_t)v13);
    if (v13[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v13 + 16))(v13);
    else
      --v13[2];
LABEL_16:
    if (v30 != -1)
      ((void (*)(_BYTE *, int *))off_1E32386F0[v30])(v32, v28);
    goto LABEL_18;
  }
  if (v30 == 1)
  {
    v14 = (void *)LOBYTE(v28[0]);
    v32[0] = v28[0];
    v22 = v29;
    v29 = 0;
    v33 = v22;
    if (!*(_QWORD *)(v4 + 16))
    {
      v23.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v28[0]), (JSC::JSGlobalObject *)&v33);
      JSC::VM::throwException((JSC::VM *)v4, this, v23);
      v22 = v33;
    }
    v33 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, (WTF::StringImpl *)v14);
      else
        *(_DWORD *)v22 -= 2;
    }
    v15 = 0;
    goto LABEL_16;
  }
  v24 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsCSSNumericValuePrototypeFunction_mul(v24, v25, v26);
}

_BYTE *WebCore::jsCSSNumericValuePrototypeFunction_mul(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  _DWORD *v11;
  uint64_t v12;
  _DWORD *v13;
  void *v14;
  unint64_t v15;
  WTF *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v22;
  JSValue v23;
  WebCore *v24;
  JSC::JSGlobalObject *v25;
  JSC::CallFrame *v26;
  uint64_t v27;
  int v28[2];
  WTF::StringImpl *v29;
  int v30;
  WTF *v31;
  _BYTE v32[8];
  WTF::StringImpl *v33;

  v4 = *((_QWORD *)this + 7);
  v27 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "CSSNumericValue", "mul");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCSSNumericValue::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCSSNumericValue::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "CSSNumericValue", "mul");
  v11 = *(_DWORD **)(v5 + 24);
  WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>>>((uint64_t)this, (uint64_t)a2, 0, &v31);
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
  {
    v15 = 0;
LABEL_18:
    v16 = v31;
    v31 = 0;
    if (v16)
    {
      v18 = (char *)v16 + 8;
      v17 = *(unsigned int *)v16;
      if ((_DWORD)v17)
      {
        v19 = 16 * v17;
        do
        {
          v20 = *((unsigned int *)v18 + 2);
          if ((_DWORD)v20 != -1)
            ((void (*)(int *, char *))off_1E32388B8[v20])(v28, v18);
          *((_DWORD *)v18 + 2) = -1;
          v18 += 16;
          v19 -= 16;
        }
        while (v19);
      }
      WTF::fastFree(v16, v14);
    }
    return (_BYTE *)v15;
  }
  v12 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  WebCore::CSSNumericValue::mul(v11, (unsigned int **)&v31, (uint64_t)v28);
  if (!v30)
  {
    v13 = *(_DWORD **)v28;
    *(_QWORD *)v28 = 0;
    v15 = WebCore::wrap<WebCore::CSSStyleValue>((uint64_t)this, v12, (uint64_t)v13);
    if (v13[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v13 + 16))(v13);
    else
      --v13[2];
LABEL_16:
    if (v30 != -1)
      ((void (*)(_BYTE *, int *))off_1E32386F0[v30])(v32, v28);
    goto LABEL_18;
  }
  if (v30 == 1)
  {
    v14 = (void *)LOBYTE(v28[0]);
    v32[0] = v28[0];
    v22 = v29;
    v29 = 0;
    v33 = v22;
    if (!*(_QWORD *)(v4 + 16))
    {
      v23.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v28[0]), (JSC::JSGlobalObject *)&v33);
      JSC::VM::throwException((JSC::VM *)v4, this, v23);
      v22 = v33;
    }
    v33 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, (WTF::StringImpl *)v14);
      else
        *(_DWORD *)v22 -= 2;
    }
    v15 = 0;
    goto LABEL_16;
  }
  v24 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsCSSNumericValuePrototypeFunction_div(v24, v25, v26);
}

_BYTE *WebCore::jsCSSNumericValuePrototypeFunction_div(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  _DWORD *v11;
  uint64_t v12;
  _DWORD *v13;
  void *v14;
  unint64_t v15;
  WTF *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v22;
  JSValue v23;
  WebCore *v24;
  JSC::JSGlobalObject *v25;
  JSC::CallFrame *v26;
  uint64_t v27;
  int v28[2];
  WTF::StringImpl *v29;
  int v30;
  WTF *v31;
  _BYTE v32[8];
  WTF::StringImpl *v33;

  v4 = *((_QWORD *)this + 7);
  v27 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "CSSNumericValue", "div");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCSSNumericValue::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCSSNumericValue::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "CSSNumericValue", "div");
  v11 = *(_DWORD **)(v5 + 24);
  WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>>>((uint64_t)this, (uint64_t)a2, 0, &v31);
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
  {
    v15 = 0;
LABEL_18:
    v16 = v31;
    v31 = 0;
    if (v16)
    {
      v18 = (char *)v16 + 8;
      v17 = *(unsigned int *)v16;
      if ((_DWORD)v17)
      {
        v19 = 16 * v17;
        do
        {
          v20 = *((unsigned int *)v18 + 2);
          if ((_DWORD)v20 != -1)
            ((void (*)(int *, char *))off_1E32388B8[v20])(v28, v18);
          *((_DWORD *)v18 + 2) = -1;
          v18 += 16;
          v19 -= 16;
        }
        while (v19);
      }
      WTF::fastFree(v16, v14);
    }
    return (_BYTE *)v15;
  }
  v12 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  WebCore::CSSNumericValue::div(v11, (unsigned int **)&v31, (uint64_t)v28);
  if (!v30)
  {
    v13 = *(_DWORD **)v28;
    *(_QWORD *)v28 = 0;
    v15 = WebCore::wrap<WebCore::CSSStyleValue>((uint64_t)this, v12, (uint64_t)v13);
    if (v13[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v13 + 16))(v13);
    else
      --v13[2];
LABEL_16:
    if (v30 != -1)
      ((void (*)(_BYTE *, int *))off_1E32386F0[v30])(v32, v28);
    goto LABEL_18;
  }
  if (v30 == 1)
  {
    v14 = (void *)LOBYTE(v28[0]);
    v32[0] = v28[0];
    v22 = v29;
    v29 = 0;
    v33 = v22;
    if (!*(_QWORD *)(v4 + 16))
    {
      v23.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v28[0]), (JSC::JSGlobalObject *)&v33);
      JSC::VM::throwException((JSC::VM *)v4, this, v23);
      v22 = v33;
    }
    v33 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, (WTF::StringImpl *)v14);
      else
        *(_DWORD *)v22 -= 2;
    }
    v15 = 0;
    goto LABEL_16;
  }
  v24 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsCSSNumericValuePrototypeFunction_min(v24, v25, v26);
}

_BYTE *WebCore::jsCSSNumericValuePrototypeFunction_min(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  unint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  void *v14;
  unint64_t v15;
  WTF *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v22;
  JSValue v23;
  WebCore *v24;
  JSC::JSGlobalObject *v25;
  JSC::CallFrame *v26;
  uint64_t v27;
  int v28[2];
  WTF::StringImpl *v29;
  int v30;
  WTF *v31;
  _BYTE v32[8];
  WTF::StringImpl *v33;

  v4 = *((_QWORD *)this + 7);
  v27 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "CSSNumericValue", "min");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCSSNumericValue::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCSSNumericValue::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "CSSNumericValue", "min");
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>>>((uint64_t)this, (uint64_t)a2, 0, &v31);
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
  {
    v15 = 0;
LABEL_18:
    v16 = v31;
    v31 = 0;
    if (v16)
    {
      v18 = (char *)v16 + 8;
      v17 = *(unsigned int *)v16;
      if ((_DWORD)v17)
      {
        v19 = 16 * v17;
        do
        {
          v20 = *((unsigned int *)v18 + 2);
          if ((_DWORD)v20 != -1)
            ((void (*)(int *, char *))off_1E32388B8[v20])(v28, v18);
          *((_DWORD *)v18 + 2) = -1;
          v18 += 16;
          v19 -= 16;
        }
        while (v19);
      }
      WTF::fastFree(v16, v14);
    }
    return (_BYTE *)v15;
  }
  v12 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  WebCore::CSSNumericValue::min(v11, (unsigned int **)&v31, (uint64_t)v28);
  if (!v30)
  {
    v13 = *(_DWORD **)v28;
    *(_QWORD *)v28 = 0;
    v15 = WebCore::wrap<WebCore::CSSStyleValue>((uint64_t)this, v12, (uint64_t)v13);
    if (v13[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v13 + 16))(v13);
    else
      --v13[2];
LABEL_16:
    if (v30 != -1)
      ((void (*)(_BYTE *, int *))off_1E32386F0[v30])(v32, v28);
    goto LABEL_18;
  }
  if (v30 == 1)
  {
    v14 = (void *)LOBYTE(v28[0]);
    v32[0] = v28[0];
    v22 = v29;
    v29 = 0;
    v33 = v22;
    if (!*(_QWORD *)(v4 + 16))
    {
      v23.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v28[0]), (JSC::JSGlobalObject *)&v33);
      JSC::VM::throwException((JSC::VM *)v4, this, v23);
      v22 = v33;
    }
    v33 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, (WTF::StringImpl *)v14);
      else
        *(_DWORD *)v22 -= 2;
    }
    v15 = 0;
    goto LABEL_16;
  }
  v24 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsCSSNumericValuePrototypeFunction_max(v24, v25, v26);
}

_BYTE *WebCore::jsCSSNumericValuePrototypeFunction_max(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  unint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  void *v14;
  unint64_t v15;
  WTF *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  WTF::StringImpl *v22;
  JSValue v23;
  WebCore *v24;
  JSC::JSGlobalObject *v25;
  JSC::CallFrame *v26;
  uint64_t v27;
  int v28[2];
  WTF::StringImpl *v29;
  int v30;
  WTF *v31;
  _BYTE v32[8];
  WTF::StringImpl *v33;

  v4 = *((_QWORD *)this + 7);
  v27 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "CSSNumericValue", "max");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCSSNumericValue::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCSSNumericValue::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v27, "CSSNumericValue", "max");
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>>>((uint64_t)this, (uint64_t)a2, 0, &v31);
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
  {
    v15 = 0;
LABEL_18:
    v16 = v31;
    v31 = 0;
    if (v16)
    {
      v18 = (char *)v16 + 8;
      v17 = *(unsigned int *)v16;
      if ((_DWORD)v17)
      {
        v19 = 16 * v17;
        do
        {
          v20 = *((unsigned int *)v18 + 2);
          if ((_DWORD)v20 != -1)
            ((void (*)(int *, char *))off_1E32388B8[v20])(v28, v18);
          *((_DWORD *)v18 + 2) = -1;
          v18 += 16;
          v19 -= 16;
        }
        while (v19);
      }
      WTF::fastFree(v16, v14);
    }
    return (_BYTE *)v15;
  }
  v12 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  WebCore::CSSNumericValue::max(v11, (unsigned int **)&v31, (uint64_t)v28);
  if (!v30)
  {
    v13 = *(_DWORD **)v28;
    *(_QWORD *)v28 = 0;
    v15 = WebCore::wrap<WebCore::CSSStyleValue>((uint64_t)this, v12, (uint64_t)v13);
    if (v13[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v13 + 16))(v13);
    else
      --v13[2];
LABEL_16:
    if (v30 != -1)
      ((void (*)(_BYTE *, int *))off_1E32386F0[v30])(v32, v28);
    goto LABEL_18;
  }
  if (v30 == 1)
  {
    v14 = (void *)LOBYTE(v28[0]);
    v32[0] = v28[0];
    v22 = v29;
    v29 = 0;
    v33 = v22;
    if (!*(_QWORD *)(v4 + 16))
    {
      v23.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v28[0]), (JSC::JSGlobalObject *)&v33);
      JSC::VM::throwException((JSC::VM *)v4, this, v23);
      v22 = v33;
    }
    v33 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, (WTF::StringImpl *)v14);
      else
        *(_DWORD *)v22 -= 2;
    }
    v15 = 0;
    goto LABEL_16;
  }
  v24 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsCSSNumericValuePrototypeFunction_equals(v24, v25, v26);
}

_BYTE *WebCore::jsCSSNumericValuePrototypeFunction_equals(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  WTF *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  JSC::VM *v19;
  WTF *v20;
  char v21;

  v3 = (JSC::VM *)*((_QWORD *)this + 7);
  v19 = v3;
  v4 = *((_QWORD *)a2 + 5);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v19, "CSSNumericValue", "equals");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSNumericValue::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSNumericValue::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v19, "CSSNumericValue", "equals");
  v10 = *(_QWORD *)(v4 + 24);
  WebCore::convertVariadicArguments<WebCore::IDLUnion<WebCore::IDLDouble,WebCore::IDLInterface<WebCore::CSSNumericValue>>>((uint64_t)this, (uint64_t)a2, 0, &v20);
  if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
  {
    v12 = 0;
  }
  else if (WebCore::CSSNumericValue::equals(v10, (unsigned int **)&v20))
  {
    v12 = 7;
  }
  else
  {
    v12 = 6;
  }
  v13 = v20;
  v20 = 0;
  if (v13)
  {
    v15 = (char *)v13 + 8;
    v14 = *(unsigned int *)v13;
    if ((_DWORD)v14)
    {
      v16 = 16 * v14;
      do
      {
        v17 = *((unsigned int *)v15 + 2);
        if ((_DWORD)v17 != -1)
          ((void (*)(char *, char *))off_1E32388B8[v17])(&v21, v15);
        *((_DWORD *)v15 + 2) = -1;
        v15 += 16;
        v16 -= 16;
      }
      while (v16);
    }
    WTF::fastFree(v13, v11);
  }
  return (_BYTE *)v12;
}

_BYTE *WebCore::jsCSSNumericValuePrototypeFunction_to(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  int v12;
  JSC::VM *v13;
  uint64_t v14;
  unsigned int v15;
  unsigned __int8 *v16;
  unint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  JSValue v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  JSValue v27;
  WebCore *v28;
  JSC::JSGlobalObject *v29;
  JSC::CallFrame *v30;
  JSC::VM *v31;
  int v32[2];
  WTF::StringImpl *v33;
  unsigned int v34;
  uint64_t v35;
  int v36;
  _BYTE v37[8];
  WTF::StringImpl *v38;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v31 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "CSSNumericValue", "to");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCSSNumericValue::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCSSNumericValue::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "CSSNumericValue", "to");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v24.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v24);
  }
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v35);
  v12 = v36;
  if (v36)
  {
    v20 = 0;
LABEL_28:
    if (v12 != -1)
      ((void (*)(int *, uint64_t *))off_1E3238AF8[v12])(v32, &v35);
    return (_BYTE *)v20;
  }
  v13 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v14 = v35;
  v35 = 0;
  if ((MEMORY[0x19AEA53F4](v14, "number", 6) & 1) != 0)
  {
    v15 = 1;
  }
  else if ((MEMORY[0x19AEA53F4](v14, "percent", 7) & 1) != 0)
  {
    v15 = 3;
  }
  else
  {
    if (v14)
    {
      v16 = *(unsigned __int8 **)(v14 + 8);
      v17 = *(unsigned int *)(v14 + 4) | ((unint64_t)((*(_DWORD *)(v14 + 16) >> 2) & 1) << 32);
    }
    else
    {
      v16 = 0;
      v17 = 0x100000000;
    }
    v15 = WebCore::CSSParserToken::stringToUnitType(v16, v17);
  }
  WebCore::CSSNumericValue::to(v11, v15, (uint64_t)v32);
  v18 = v34;
  if (!v34)
  {
    v19 = *(_DWORD **)v32;
    *(_QWORD *)v32 = 0;
    v20 = WebCore::wrap<WebCore::CSSUnitValue>((int)this, v13, (uint64_t)v19);
    if (v19[2] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v19 + 16))(v19);
    else
      --v19[2];
LABEL_24:
    ((void (*)(_BYTE *, int *))off_1E32486F8[v18])(v37, v32);
    v34 = -1;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy((WTF::StringImpl *)v14, v21);
      else
        *(_DWORD *)v14 -= 2;
    }
    v12 = v36;
    goto LABEL_28;
  }
  if (v34 == 1)
  {
    v25 = (WTF::StringImpl *)LOBYTE(v32[0]);
    v37[0] = v32[0];
    v26 = v33;
    v33 = 0;
    v38 = v26;
    if (!*((_QWORD *)v4 + 2))
    {
      v27.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v32[0]), (JSC::JSGlobalObject *)&v38);
      JSC::VM::throwException(v4, this, v27);
      v26 = v38;
    }
    v38 = 0;
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
        WTF::StringImpl::destroy(v26, v25);
      else
        *(_DWORD *)v26 -= 2;
    }
    v20 = 0;
    goto LABEL_24;
  }
  v28 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsCSSNumericValuePrototypeFunction_toSum(v28, v29, v30);
}

_BYTE *WebCore::jsCSSNumericValuePrototypeFunction_toSum(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v3;
  uint64_t v4;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  int v13;
  WTF *v14;
  WTF *v15;
  unint64_t v16;
  uint64_t v17;
  JSC::VM *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  int v21;
  int v22;
  WTF::StringImpl *v23;
  WTF::StringImpl **v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  JSC::VM *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  WTF::StringImpl **v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  WTF::StringImpl *v37;
  JSValue v38;
  WTF::StringImpl *v39;
  uint64_t v40;
  WTF::StringImpl **v41;
  uint64_t v42;
  WTF::StringImpl *v43;
  WebCore *v44;
  JSC::JSGlobalObject *v45;
  JSC::CallFrame *v46;
  int v47;
  WTF::StringImpl **v48;
  uint64_t v49;
  uint64_t v50;
  JSC::VM *v52;
  int v53[2];
  WTF::StringImpl *v54;
  int v55;
  WTF *v56;
  char v57[8];
  WTF::StringImpl *v58;

  v3 = (JSC::VM *)*((_QWORD *)this + 7);
  v52 = v3;
  v4 = *((_QWORD *)a2 + 5);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v52, "CSSNumericValue", "toSum");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCSSNumericValue::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCSSNumericValue::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v52, "CSSNumericValue", "toSum");
  v11 = *(_QWORD *)(v4 + 24);
  v12 = *((int *)a2 + 8);
  v13 = v12 - 1;
  if (v12 == 1)
  {
    v56 = 0;
    goto LABEL_45;
  }
  v14 = (WTF *)WTF::fastMalloc((WTF *)(8 * (v12 - 1) + 8));
  v15 = v14;
  *(_DWORD *)v14 = v13;
  if (!v13)
    goto LABEL_43;
  v49 = v11;
  v50 = v4;
  v16 = 0;
  v47 = v13;
  v48 = (WTF::StringImpl **)((char *)v14 + 8);
  v17 = 0x600000000;
  while (1)
  {
    v18 = v3;
    WebCore::valueToUSVString(this, *(_QWORD *)((char *)a2 + (v17 >> 29)), (uint64_t)v53);
    if ((_DWORD)v54)
    {
      v21 = 0;
      v20 = 0;
      v22 = 0;
      v23 = 0;
      if ((_DWORD)v54 == -1)
        goto LABEL_18;
    }
    else
    {
      v20 = *(WTF::StringImpl **)v53;
      *(_QWORD *)v53 = 0;
      v21 = 1;
    }
    ((void (*)(char *, int *))off_1E3238AF8[v54])(v57, v53);
    v22 = v21;
    v23 = v20;
LABEL_18:
    v3 = v18;
    if (*((_DWORD *)v18 + 20))
    {
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v18) & 1) != 0)
        break;
    }
    if (!v22)
      goto LABEL_30;
    *((_QWORD *)v15 + ++v16) = v23;
    v17 += 0x100000000;
    if (v16 >= *(unsigned int *)v15)
    {
      LODWORD(v16) = *(_DWORD *)v15;
      goto LABEL_32;
    }
  }
  if (v22 && v23)
  {
    if (*(_DWORD *)v23 == 2)
      WTF::StringImpl::destroy(v23, v19);
    else
      *(_DWORD *)v23 -= 2;
    v3 = v18;
  }
LABEL_30:
  *(_DWORD *)v15 = v16;
LABEL_32:
  v24 = v48;
  if ((_DWORD)v16 == v47)
  {
    v11 = v49;
    v4 = v50;
  }
  else
  {
    v11 = v49;
    v4 = v50;
    if ((_DWORD)v16)
    {
      v25 = 8 * v16;
      do
      {
        v26 = *v24;
        *v24 = 0;
        if (v26)
        {
          if (*(_DWORD *)v26 == 2)
            WTF::StringImpl::destroy(v26, v19);
          else
            *(_DWORD *)v26 -= 2;
        }
        ++v24;
        v25 -= 8;
      }
      while (v25);
    }
    WTF::fastFree(v15, v19);
    v15 = 0;
  }
LABEL_43:
  if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
  {
    v56 = 0;
    if (v15)
    {
      v41 = (WTF::StringImpl **)((char *)v15 + 8);
      v40 = *(unsigned int *)v15;
      if ((_DWORD)v40)
      {
        v42 = 8 * v40;
        do
        {
          v43 = *v41;
          *v41 = 0;
          if (v43)
          {
            if (*(_DWORD *)v43 == 2)
              WTF::StringImpl::destroy(v43, v39);
            else
              *(_DWORD *)v43 -= 2;
          }
          ++v41;
          v42 -= 8;
        }
        while (v42);
      }
      WTF::fastFree(v15, v39);
    }
  }
  else
  {
    v56 = v15;
  }
LABEL_45:
  if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
  {
    v30 = 0;
    goto LABEL_51;
  }
  v27 = *(JSC::VM **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  WebCore::CSSNumericValue::toSum(v11, (unsigned int **)&v56, (uint64_t)v53);
  if (v55)
  {
    if (v55 == 1)
    {
      v29 = (WTF::StringImpl *)LOBYTE(v53[0]);
      v57[0] = v53[0];
      v37 = v54;
      v54 = 0;
      v58 = v37;
      if (!*((_QWORD *)v3 + 2))
      {
        v38.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v53[0]), (JSC::JSGlobalObject *)&v58);
        JSC::VM::throwException(v3, this, v38);
        v37 = v58;
      }
      v58 = 0;
      if (v37)
      {
        if (*(_DWORD *)v37 == 2)
          WTF::StringImpl::destroy(v37, v29);
        else
          *(_DWORD *)v37 -= 2;
      }
      v30 = 0;
      goto LABEL_49;
    }
    v44 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
    return (_BYTE *)WebCore::jsCSSNumericValuePrototypeFunction_type(v44, v45, v46);
  }
  else
  {
    v28 = *(WTF::StringImpl **)v53;
    *(_QWORD *)v53 = 0;
    v30 = WebCore::wrap<WebCore::CSSMathSum>((int)this, v27, (uint64_t)v28);
    if (*((_DWORD *)v28 + 2) == 1)
      (*(void (**)(WTF::StringImpl *))(*(_QWORD *)v28 + 16))(v28);
    else
      --*((_DWORD *)v28 + 2);
LABEL_49:
    if (v55 != -1)
      ((void (*)(char *, int *))off_1E32388D8[v55])(v57, v53);
LABEL_51:
    v31 = v56;
    v56 = 0;
    if (v31)
    {
      v33 = (WTF::StringImpl **)((char *)v31 + 8);
      v32 = *(unsigned int *)v31;
      if ((_DWORD)v32)
      {
        v34 = 8 * v32;
        do
        {
          v35 = *v33;
          *v33 = 0;
          if (v35)
          {
            if (*(_DWORD *)v35 == 2)
              WTF::StringImpl::destroy(v35, v29);
            else
              *(_DWORD *)v35 -= 2;
          }
          ++v33;
          v34 -= 8;
        }
        while (v34);
      }
      WTF::fastFree(v31, v29);
    }
    return (_BYTE *)v30;
  }
}

_BYTE *WebCore::jsCSSNumericValuePrototypeFunction_type(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  unint64_t v12;
  size_t v13;
  unint64_t v14;
  int v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  unint64_t v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  uint64_t v23;
  unint64_t v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  unint64_t v27;
  WTF::StringImpl *v28;
  uint64_t v29;
  unint64_t v30;
  WTF::StringImpl *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  WTF::StringImpl *v39;
  WTF::StringImpl *v40;
  uint64_t v41;
  unint64_t v42;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44;
  uint64_t v45;
  unint64_t v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;
  unsigned __int8 *v50;
  unsigned int v51;
  unsigned int v52;
  uint64_t v53;
  WTF::StringImpl *v54;
  unint64_t v55;
  int v56;
  int v57;
  uint64_t v58;

  v4 = *((_QWORD *)a2 + 5);
  v5 = *((_QWORD *)this + 7);
  v53 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v53, "CSSNumericValue", "type");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCSSNumericValue::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCSSNumericValue::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v53, "CSSNumericValue", "type");
  v11 = *(_QWORD *)(v4 + 24);
  v12 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v13 = 8 * *(unsigned __int8 *)(v12 + 14);
  v14 = JSC::allocateCell<JSC::JSFinalObject>(v5, v13 + 16);
  v15 = *(_DWORD *)(v12 + 8);
  *(_DWORD *)v14 = v12 >> 4;
  *(_DWORD *)(v14 + 4) = v15;
  *(_QWORD *)(v14 + 8) = 0;
  bzero((void *)(v14 + 16), v13);
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v17 = *(unsigned int *)(v11 + 44);
  if ((_DWORD)v17 != 0x80000000)
  {
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    v18 = v17 | 0xFFFE000000000000;
    WTF::AtomStringImpl::addLiteral();
    v19 = v54;
    v54 = 0;
    v55 = v14;
    v56 = -1;
    v57 = 0x1000000;
    v58 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v19, v18, 0, (uint64_t)&v54);
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v16);
      else
        *(_DWORD *)v19 -= 2;
    }
  }
  v20 = *(unsigned int *)(v11 + 60);
  if ((_DWORD)v20 != 0x80000000)
  {
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    v21 = v20 | 0xFFFE000000000000;
    WTF::AtomStringImpl::addLiteral();
    v22 = v54;
    v54 = 0;
    v55 = v14;
    v56 = -1;
    v57 = 0x1000000;
    v58 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v22, v21, 0, (uint64_t)&v54);
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, v16);
      else
        *(_DWORD *)v22 -= 2;
    }
  }
  v23 = *(unsigned int *)(v11 + 52);
  if ((_DWORD)v23 != 0x80000000)
  {
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    v24 = v23 | 0xFFFE000000000000;
    WTF::AtomStringImpl::addLiteral();
    v25 = v54;
    v54 = 0;
    v55 = v14;
    v56 = -1;
    v57 = 0x1000000;
    v58 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v25, v24, 0, (uint64_t)&v54);
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, v16);
      else
        *(_DWORD *)v25 -= 2;
    }
  }
  v26 = *(unsigned int *)(v11 + 40);
  if ((_DWORD)v26 != 0x80000000)
  {
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    v27 = v26 | 0xFFFE000000000000;
    WTF::AtomStringImpl::addLiteral();
    v28 = v54;
    v54 = 0;
    v55 = v14;
    v56 = -1;
    v57 = 0x1000000;
    v58 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v28, v27, 0, (uint64_t)&v54);
    if (v28)
    {
      if (*(_DWORD *)v28 == 2)
        WTF::StringImpl::destroy(v28, v16);
      else
        *(_DWORD *)v28 -= 2;
    }
  }
  v29 = *(unsigned int *)(v11 + 64);
  if ((_DWORD)v29 != 0x80000000)
  {
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    v30 = v29 | 0xFFFE000000000000;
    WTF::AtomStringImpl::addLiteral();
    v31 = v54;
    v54 = 0;
    v55 = v14;
    v56 = -1;
    v57 = 0x1000000;
    v58 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v31, v30, 0, (uint64_t)&v54);
    if (v31)
    {
      if (*(_DWORD *)v31 == 2)
        WTF::StringImpl::destroy(v31, v16);
      else
        *(_DWORD *)v31 -= 2;
    }
  }
  v32 = *(unsigned __int8 *)(v11 + 68);
  if (v32 != 255)
  {
    v33 = *((_QWORD *)this + 7);
    v34 = (uint64_t *)(v33 + 41968);
    if ((_MergedGlobals_823[0] & 1) == 0)
    {
      _MergedGlobals_11 += 2;
      dword_1ECE77130 += 2;
      qword_1EE334EB0 = (uint64_t)&_MergedGlobals_11;
      unk_1EE334EB8 = &dword_1ECE77130;
      dword_1ECE77150 += 2;
      dword_1ECE77170 += 2;
      qword_1EE334EC0 = (uint64_t)&dword_1ECE77150;
      unk_1EE334EC8 = &dword_1ECE77170;
      dword_1ECE77190 += 2;
      dword_1ECE771B0 += 2;
      qword_1EE334ED0 = (uint64_t)&dword_1ECE77190;
      unk_1EE334ED8 = &dword_1ECE771B0;
      dword_1ECE771D0 += 2;
      qword_1EE334EE0 = (uint64_t)&dword_1ECE771D0;
      _MergedGlobals_823[0] = 1;
    }
    v35 = *(_QWORD *)&_MergedGlobals_823[8 * v32 + 168];
    if (!v35)
    {
      v38 = *v34;
LABEL_50:
      if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
        return 0;
      WTF::AtomStringImpl::addLiteral();
      v39 = v54;
      v54 = 0;
      v55 = v14;
      v56 = -1;
      v57 = 0x1000000;
      v58 = 0;
      JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v39, v38, 0, (uint64_t)&v54);
      if (v39)
      {
        if (*(_DWORD *)v39 == 2)
          WTF::StringImpl::destroy(v39, v40);
        else
          *(_DWORD *)v39 -= 2;
      }
      goto LABEL_54;
    }
    v36 = *(_DWORD *)v35;
    v37 = *(_DWORD *)(v35 + 4);
    *(_DWORD *)v35 += 2;
    if (v37)
    {
      if (v37 != 1)
      {
LABEL_45:
        v38 = *(_QWORD *)(v33 + 64760);
        if (!v38 || v35 != *(_QWORD *)(v38 + 8))
        {
          v38 = JSC::jsStringWithCacheSlowCase();
          v36 = *(_DWORD *)v35 - 2;
        }
        goto LABEL_48;
      }
      v50 = *(unsigned __int8 **)(v35 + 8);
      if ((*(_BYTE *)(v35 + 16) & 4) != 0)
      {
        v51 = *v50;
      }
      else
      {
        v52 = *(unsigned __int16 *)v50;
        if (v52 > 0xFF)
          goto LABEL_45;
        v51 = v52;
      }
      v38 = *(_QWORD *)(v33 + 8 * v51 + 42216);
    }
    else
    {
      v38 = *v34;
    }
LABEL_48:
    if (v36)
      *(_DWORD *)v35 = v36;
    else
      WTF::StringImpl::destroy((WTF::StringImpl *)v35, v16);
    goto LABEL_50;
  }
LABEL_54:
  v41 = *(unsigned int *)(v11 + 56);
  if ((_DWORD)v41 != 0x80000000)
  {
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    v42 = v41 | 0xFFFE000000000000;
    WTF::AtomStringImpl::addLiteral();
    v43 = v54;
    v54 = 0;
    v55 = v14;
    v56 = -1;
    v57 = 0x1000000;
    v58 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v43, v42, 0, (uint64_t)&v54);
    if (v43)
    {
      if (*(_DWORD *)v43 == 2)
        WTF::StringImpl::destroy(v43, v44);
      else
        *(_DWORD *)v43 -= 2;
    }
  }
  v45 = *(unsigned int *)(v11 + 48);
  if ((_DWORD)v45 != 0x80000000)
  {
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    v46 = v45 | 0xFFFE000000000000;
    WTF::AtomStringImpl::addLiteral();
    v47 = v54;
    v54 = 0;
    v55 = v14;
    v56 = -1;
    v57 = 0x1000000;
    v58 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v14, (JSC::VM *)v5, (unint64_t)v47, v46, 0, (uint64_t)&v54);
    if (v47)
    {
      if (*(_DWORD *)v47 == 2)
        WTF::StringImpl::destroy(v47, v48);
      else
        *(_DWORD *)v47 -= 2;
    }
  }
  return (_BYTE *)v14;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore8CSSOKLCHENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore8CSSOKLCHENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore8CSSOKLabENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore8CSSOKLabENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore27CSSOMVariableReferenceValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  bmalloc::api *v2;
  _DWORD *v3;
  WTF::StringImpl *v4;

  v2 = *(bmalloc::api **)a2;
  *(_QWORD *)a2 = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = (_DWORD *)*((_QWORD *)v2 + 2);
      *((_QWORD *)v2 + 2) = 0;
      if (v3)
      {
        if (v3[2] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v3 + 16))(v3);
        else
          --v3[2];
      }
      v4 = (WTF::StringImpl *)*((_QWORD *)v2 + 1);
      *((_QWORD *)v2 + 1) = 0;
      if (v4)
      {
        if (*(_DWORD *)v4 == 2)
          WTF::StringImpl::destroy(v4, a2);
        else
          *(_DWORD *)v4 -= 2;
      }
      bmalloc::api::isoDeallocate(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore27CSSOMVariableReferenceValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS9_INSA_15CSSKeywordValueENSC_ISI_EENSE_ISI_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSN_1EJSG_SH_SL_EEEEEEDcSP_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS9_INSA_15CSSKeywordValueENSC_ISI_EENSE_ISI_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSN_1EJSG_SH_SL_EEEEEEDcSP_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS9_INSA_15CSSKeywordValueENSC_ISI_EENSE_ISI_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSN_1EJSG_SH_SL_EEEEEEDcSP_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS9_INSA_15CSSKeywordValueENSC_ISI_EENSE_ISI_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISM_LNS0_6_TraitE1EEEEEvRSN_OT_EUlRST_OT0_E_JRNS0_6__baseILSQ_1EJSG_SH_SL_EEEOS11_EEEDcST_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS9_INSA_15CSSKeywordValueENSC_ISI_EENSE_ISI_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISM_LNS0_6_TraitE1EEEEEvRSN_OT_EUlRST_OT0_E_JRNS0_6__baseILSQ_1EJSG_SH_SL_EEEOS11_EEEDcST_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore15CSSNumericValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringENS9_INSA_15CSSKeywordValueENSC_ISI_EENSE_ISI_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISM_LNS0_6_TraitE1EEEEEvRSN_OT_EUlRST_OT0_E_JRNS0_6__baseILSQ_1EJSG_SH_SL_EEEOS11_EEEDcST_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore14CSSPerspectiveENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 32))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore14CSSPerspectiveENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6RefPtrIN7WebCore15CSSNumericValueENS9_12RawPtrTraitsISC_EENS9_21DefaultRefDerefTraitsISC_EEEENS9_6StringENSA_INSB_15CSSKeywordValueENSD_ISJ_EENSF_ISJ_EEEEEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSQ_1EJSN_SO_EEEEEEDcSS_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E3238C70[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore6CSSRGBENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore6CSSRGBENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::toJSNewlyCreated<WebCore::IDLInterface<WebCore::CSSRotate>,WebCore::ExceptionOr<WTF::Ref<WebCore::CSSRotate,WTF::RawPtrTraits<WebCore::CSSRotate>,WTF::DefaultRefDerefTraits<WebCore::CSSRotate>>>>(JSC *a1, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3, uint64_t a4)
{
  int v4;
  uint64_t (***v5)(WebCore::CSSRotate *__hidden, WTF::StringBuilder *);
  uint64_t v6;
  uint64_t (***v7)(WebCore::CSSRotate *__hidden, WTF::StringBuilder *);
  WTF::StringImpl *v10;
  uint64_t v11;
  uint64_t (***v12)(WebCore::CSSRotate *__hidden, WTF::StringBuilder *);
  WTF::StringImpl *v13;

  v4 = *(_DWORD *)(a4 + 16);
  if (!v4)
  {
    v5 = *(uint64_t (****)(WebCore::CSSRotate *__hidden, WTF::StringBuilder *))a4;
    *(_QWORD *)a4 = 0;
    v12 = v5;
    if (*v5 != &off_1E339FF00)
    {
      __break(0xC471u);
      JUMPOUT(0x19490B2D0);
    }
    v6 = WebCore::createWrapper<WebCore::CSSRotate,WebCore::CSSRotate>(a2, (uint64_t *)&v12, a3);
    v7 = v12;
    v12 = 0;
    if (v7)
    {
      if (*((_DWORD *)v7 + 2) == 1)
        ((void (*)(uint64_t (***)(WebCore::CSSRotate *__hidden, WTF::StringBuilder *)))(*v7)[4])(v7);
      else
        --*((_DWORD *)v7 + 2);
    }
    return v6;
  }
  if (v4 == 1)
  {
    LOBYTE(v12) = *(_BYTE *)a4;
    v10 = *(WTF::StringImpl **)(a4 + 8);
    *(_QWORD *)(a4 + 8) = 0;
    v13 = v10;
    if (!*(_QWORD *)(*(_QWORD *)a3 + 16))
    {
      WebCore::propagateExceptionSlowPath(a1, (JSC::VM **)a3, (unsigned __int8 *)&v12);
      v10 = v13;
    }
    v13 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
        WTF::StringImpl::destroy(v10, a2);
      else
        *(_DWORD *)v10 -= 2;
    }
    return 0;
  }
  v11 = std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::setSubclassStructureIfNeeded<WebCore::CSSRotate>(v11);
}

JSCell *WebCore::setSubclassStructureIfNeeded<WebCore::CSSRotate>(JSC *a1, uint64_t a2, JSCell *a3)
{
  JSCell *result;
  JSC::JSObject *v7;
  JSC::JSGlobalObject *v9;
  JSC::VM *v10;
  uint64_t FunctionRealm;
  JSC::JSObject *v12;
  JSC::Structure *v13;
  JSC::VM *v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  JSC::JSCell *Prototype;
  uint64_t Structure;
  unint64_t SubclassStructure;

  result = *(JSCell **)(a2 + 40);
  if (((unint64_t)result & 0xFFFE000000000002) == 0)
  {
    result = (JSCell *)JSC::JSCell::getObject((JSC::JSCell *)result);
    if (result && result != *(JSCell **)(a2 + 24))
    {
      v9 = (JSC::JSGlobalObject *)result;
      v10 = (JSC::VM *)*((_QWORD *)a1 + 7);
      FunctionRealm = JSC::getFunctionRealm(a1, (JSC::JSGlobalObject *)result, v7);
      v14 = (JSC::VM *)FunctionRealm;
      if (!*((_DWORD *)v10 + 20)
        || (result = (JSCell *)JSC::VM::hasExceptionsAfterHandlingTraps(v10), (result & 1) == 0))
      {
        v15 = *((_QWORD *)v14 + 412);
        if (v15)
        {
          v16 = *(_DWORD *)(v15 - 8);
          v17 = ((unint64_t)&WebCore::JSCSSRotate::s_info + ~((_QWORD)&WebCore::JSCSSRotate::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSRotate::s_info + ~((_QWORD)&WebCore::JSCSSRotate::s_info << 32)) >> 22);
          v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
          v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
          v20 = v16 & ((v19 >> 31) ^ v19);
          v21 = *(char ***)(v15 + 16 * v20);
          if (v21 == &WebCore::JSCSSRotate::s_info)
          {
LABEL_14:
            v12 = *(JSC::JSObject **)(v15 + 16 * v20 + 8);
            if (v12)
            {
LABEL_16:
              SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v9, v12, v13);
              if (!*((_DWORD *)v10 + 20))
                return JSC::JSObject::setStructure(a3, v10, SubclassStructure);
              result = (JSCell *)JSC::VM::hasExceptionsAfterHandlingTraps(v10);
              if ((result & 1) == 0)
                return JSC::JSObject::setStructure(a3, v10, SubclassStructure);
              return result;
            }
          }
          else
          {
            v22 = 1;
            while (v21)
            {
              v20 = ((_DWORD)v20 + v22) & v16;
              v21 = *(char ***)(v15 + 16 * v20);
              ++v22;
              if (v21 == &WebCore::JSCSSRotate::s_info)
                goto LABEL_14;
            }
          }
        }
        Prototype = (JSC::JSCell *)WebCore::JSCSSRotate::createPrototype(v10, v14, v12);
        Structure = WebCore::JSCSSRotate::createStructure((uint64_t *)v10, (uint64_t)v14, Prototype);
        v12 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)v14, Structure, (uint64_t)&WebCore::JSCSSRotate::s_info);
        goto LABEL_16;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSCSSRotate::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore9CSSRotateENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 32))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore9CSSRotateENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

unint64_t WebCore::jsCSSRuleListPrototypeFunction_item(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  JSValue v15;
  JSC::VM *v16;
  _DWORD v17[2];

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v16 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "CSSRuleList", "item");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCSSRuleList::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCSSRuleList::s_info && v8 != 0);
  }
  if (!v7)
    return (unint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "CSSRuleList", "item");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v15.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v15);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v17);
    if (v17[1])
    {
      return 0;
    }
    else
    {
      v12 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
      v13 = (_DWORD *)(*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v11 + 40))(v11, v17[0]);
      if (v13)
        return WebCore::wrap<WebCore::CSSRule>((uint64_t)this, v12, v13);
      else
        return 2;
    }
  }
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore8CSSScaleENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 32))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore8CSSScaleENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_8optionalINS_7variantIJdN3WTF6RefPtrIN7WebCore15CSSNumericValueENSA_12RawPtrTraitsISD_EENSA_21DefaultRefDerefTraitsISD_EEEEEEEEENSC_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSN_1EJSK_SL_EEEEEEDcSP_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  if (*(_BYTE *)(a2 + 16))
  {
    v3 = *(unsigned int *)(a2 + 8);
    if ((_DWORD)v3 != -1)
      result = ((uint64_t (*)(char *, uint64_t))off_1E32388B8[v3])(&v5, a2);
    *(_DWORD *)(a2 + 8) = -1;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore7CSSSkewENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 32))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore7CSSSkewENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore8CSSSkewXENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 32))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore8CSSSkewXENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore8CSSSkewYENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 32))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore8CSSSkewYENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_BYTE *WebCore::jsCSSStyleDeclarationPrototypeFunction_item(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  int v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v16;
  JSValue v18;
  JSC::VM *v19;
  WTF::StringImpl *v20;
  _DWORD v21[2];

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v19 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSCSSStyleDeclaration *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v19, "CSSStyleDeclaration", "item");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
    return (_BYTE *)JSC::VM::throwException(v5, this, v18);
  }
  v8 = *(_QWORD *)(v6 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v21);
  if (v21[1])
    return 0;
  (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v8 + 80))(&v20, v8, v21[0]);
  v9 = *((_QWORD *)this + 7);
  v10 = v20;
  if (!v20 || (v11 = *((_DWORD *)v20 + 1)) == 0)
  {
    v12 = *(_QWORD *)(v9 + 41968);
LABEL_10:
    v20 = 0;
    if (!v10)
      return (_BYTE *)v12;
    goto LABEL_17;
  }
  if (v11 != 1)
    goto LABEL_7;
  v13 = (unsigned __int8 *)*((_QWORD *)v20 + 1);
  if ((*((_BYTE *)v20 + 16) & 4) != 0)
  {
    v14 = *v13;
LABEL_15:
    v12 = *(_QWORD *)(v9 + 8 * v14 + 42216);
    goto LABEL_16;
  }
  v16 = *(unsigned __int16 *)v13;
  if (v16 <= 0xFF)
  {
    v14 = v16;
    goto LABEL_15;
  }
LABEL_7:
  v12 = *(_QWORD *)(v9 + 64760);
  if (!v12 || v20 != *(WTF::StringImpl **)(v12 + 8))
  {
    v12 = JSC::jsStringWithCacheSlowCase();
    v10 = v20;
    goto LABEL_10;
  }
LABEL_16:
  v20 = 0;
LABEL_17:
  if (*(_DWORD *)v10 == 2)
    WTF::StringImpl::destroy(v10, v10);
  else
    *(_DWORD *)v10 -= 2;
  return (_BYTE *)v12;
}

_BYTE *WebCore::jsCSSStyleDeclarationPrototypeFunction_getPropertyValue(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v10;
  int v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  int v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  unsigned __int8 *v20;
  unsigned int v21;
  unsigned int v22;
  JSValue v24;
  JSC::VM *v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  int v29;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "CSSStyleDeclaration", "getPropertyValue");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCSSStyleDeclaration::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCSSStyleDeclaration::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "CSSStyleDeclaration", "getPropertyValue");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v24.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v24);
  }
  v10 = *(_QWORD *)(v5 + 24);
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v28);
  v11 = v29;
  if (!v29)
  {
    v12 = v28;
    v28 = 0;
    v26 = v12;
    (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t, WTF::StringImpl **))(*(_QWORD *)v10 + 96))(&v27, v10, &v26);
    v13 = *((_QWORD *)this + 7);
    v14 = v27;
    if (!v27 || (v15 = *((_DWORD *)v27 + 1)) == 0)
    {
      v16 = *(_QWORD *)(v13 + 41968);
LABEL_16:
      v27 = 0;
      if (!v14)
      {
LABEL_19:
        v17 = v26;
        v26 = 0;
        if (v17)
        {
          if (*(_DWORD *)v17 == 2)
            WTF::StringImpl::destroy(v17, v14);
          else
            *(_DWORD *)v17 -= 2;
        }
        v11 = v29;
        goto LABEL_23;
      }
LABEL_17:
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v14);
      else
        *(_DWORD *)v14 -= 2;
      goto LABEL_19;
    }
    if (v15 != 1)
      goto LABEL_13;
    v20 = (unsigned __int8 *)*((_QWORD *)v27 + 1);
    if ((*((_BYTE *)v27 + 16) & 4) != 0)
    {
      v21 = *v20;
    }
    else
    {
      v22 = *(unsigned __int16 *)v20;
      if (v22 > 0xFF)
      {
LABEL_13:
        v16 = *(_QWORD *)(v13 + 64760);
        if (!v16 || v27 != *(WTF::StringImpl **)(v16 + 8))
        {
          v16 = JSC::jsStringWithCacheSlowCase();
          v14 = v27;
          goto LABEL_16;
        }
LABEL_37:
        v27 = 0;
        goto LABEL_17;
      }
      v21 = v22;
    }
    v16 = *(_QWORD *)(v13 + 8 * v21 + 42216);
    goto LABEL_37;
  }
  v16 = 0;
LABEL_23:
  if (v11 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3238AF8[v11])(&v27, &v28);
  return (_BYTE *)v16;
}

_BYTE *WebCore::jsCSSStyleDeclarationPrototypeFunction_getPropertyPriority(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  int v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  int v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned int v19;
  WTF::StringImpl *v20;
  unsigned int v22;
  JSValue v24;
  JSC::VM *v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  int v29;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "CSSStyleDeclaration", "getPropertyPriority");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCSSStyleDeclaration::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCSSStyleDeclaration::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "CSSStyleDeclaration", "getPropertyPriority");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v24.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v24);
  }
  v11 = *(_QWORD *)(v5 + 24);
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v28);
  v12 = v29;
  if (!v29)
  {
    v13 = v28;
    v28 = 0;
    v26 = v13;
    (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t, WTF::StringImpl **))(*(_QWORD *)v11 + 104))(&v27, v11, &v26);
    v14 = *((_QWORD *)this + 7);
    v15 = v27;
    if (!v27 || (v16 = *((_DWORD *)v27 + 1)) == 0)
    {
      v17 = *(_QWORD *)(v14 + 41968);
LABEL_20:
      v27 = 0;
      if (!v15)
      {
LABEL_29:
        v20 = v26;
        v26 = 0;
        if (v20)
        {
          if (*(_DWORD *)v20 == 2)
            WTF::StringImpl::destroy(v20, v15);
          else
            *(_DWORD *)v20 -= 2;
        }
        v12 = v29;
        goto LABEL_33;
      }
LABEL_27:
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v15);
      else
        *(_DWORD *)v15 -= 2;
      goto LABEL_29;
    }
    if (v16 != 1)
      goto LABEL_17;
    v18 = (unsigned __int8 *)*((_QWORD *)v27 + 1);
    if ((*((_BYTE *)v27 + 16) & 4) != 0)
    {
      v19 = *v18;
    }
    else
    {
      v22 = *(unsigned __int16 *)v18;
      if (v22 > 0xFF)
      {
LABEL_17:
        v17 = *(_QWORD *)(v14 + 64760);
        if (!v17 || v27 != *(WTF::StringImpl **)(v17 + 8))
        {
          v17 = JSC::jsStringWithCacheSlowCase();
          v15 = v27;
          goto LABEL_20;
        }
LABEL_26:
        v27 = 0;
        goto LABEL_27;
      }
      v19 = v22;
    }
    v17 = *(_QWORD *)(v14 + 8 * v19 + 42216);
    goto LABEL_26;
  }
  v17 = 0;
LABEL_33:
  if (v12 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3238AF8[v12])(&v27, &v28);
  return (_BYTE *)v17;
}

_BYTE *WebCore::jsCSSStyleDeclarationPrototypeFunction_setProperty(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v11;
  void *v12;
  int v13;
  int v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  int v23;
  WTF *v24;
  JSValue v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  JSC::VM *v35;
  WTF::StringImpl *v36;
  int v37;
  WTF::StringImpl *v38;
  int v39;
  WTF::StringImpl *v40;
  int v41;
  uint64_t *v42;
  uint64_t v43;
  _BYTE v44[40];
  uint64_t v45;
  JSC::JSGlobalObject *v46;
  JSC::VM *v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  uint64_t v50;
  WTF::StringImpl *v51;
  char v52;
  WTF::StringImpl *v53;
  WTF::StringImpl *v54;

  v3 = (uint64_t)this;
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v35 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v35, "CSSStyleDeclaration", "setProperty");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCSSStyleDeclaration::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCSSStyleDeclaration::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v35, "CSSStyleDeclaration", "setProperty");
  v11 = *(_QWORD *)(v5 + 24);
  v47 = v4;
  v42 = (uint64_t *)v44;
  v43 = 4;
  v44[32] = 0;
  v45 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v46 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v42;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v28.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    v3 = JSC::VM::throwException(v4, (JSC::JSGlobalObject *)v3, v28);
    goto LABEL_42;
  }
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v40);
  v13 = v41;
  if (!v41)
  {
    if (*((_QWORD *)a2 + 7) == 2)
    {
      v34 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
      if (*MEMORY[0x1E0CBF738])
        *(_DWORD *)v34 += 2;
      v38 = v34;
      v39 = 0;
    }
    else
    {
      WebCore::valueToUSVString((JSC::JSGlobalObject *)v3, *((_QWORD *)a2 + 7), (uint64_t)&v50);
      LOBYTE(v38) = 0;
      v39 = -1;
      v14 = (int)v51;
      if ((_DWORD)v51 == -1)
      {
        v3 = 0;
LABEL_39:
        v13 = v41;
        goto LABEL_40;
      }
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **, uint64_t *))off_1E3247F70[v51])(&v48, &v38, &v50);
      v39 = v14;
      if ((_DWORD)v51 != -1)
      {
        ((void (*)(WTF::StringImpl **, uint64_t *))off_1E3238AF8[v51])(&v48, &v50);
        v14 = v39;
      }
      if (v14)
      {
        v3 = 0;
LABEL_37:
        if (v14 != -1)
          ((void (*)(uint64_t *, WTF::StringImpl **))off_1E3238AF8[v14])(&v50, &v38);
        goto LABEL_39;
      }
    }
    if ((unint64_t)(*((int *)a2 + 8) - 4) >= 0xFFFFFFFFFFFFFFFDLL || (v15 = *((_QWORD *)a2 + 8), v15 == 10))
    {
      v16 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
      if (*MEMORY[0x1E0CBF738])
        *(_DWORD *)v16 += 2;
      v36 = v16;
      v37 = 0;
    }
    else
    {
      WebCore::convert<WebCore::IDLLegacyNullToEmptyStringAdaptor<WebCore::IDLUSVString>>((uint64_t)&v36, (JSC::JSGlobalObject *)v3, v15);
      v23 = v37;
      if (v37)
      {
        v3 = 0;
        goto LABEL_34;
      }
    }
    if (v41 || (v17 = v40, v40 = 0, v48 = v17, v39))
    {
      v24 = (WTF *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_87:
      v42 = 0;
      LODWORD(v43) = 0;
      WTF::fastFree(v24, v12);
      return (_BYTE *)v3;
    }
    v18 = v38;
    v38 = 0;
    v19 = v36;
    v36 = 0;
    v53 = v19;
    v54 = v18;
    (*(void (**)(uint64_t *__return_ptr, uint64_t, WTF::StringImpl **, WTF::StringImpl **, WTF::StringImpl **))(*(_QWORD *)v11 + 128))(&v50, v11, &v48, &v54, &v53);
    v20 = v53;
    v53 = 0;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
        WTF::StringImpl::destroy(v20, (WTF::StringImpl *)v12);
      else
        *(_DWORD *)v20 -= 2;
    }
    v21 = v54;
    v54 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, (WTF::StringImpl *)v12);
      else
        *(_DWORD *)v21 -= 2;
    }
    v22 = v48;
    v48 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, (WTF::StringImpl *)v12);
      else
        *(_DWORD *)v22 -= 2;
    }
    if (!v52)
    {
      v3 = 10;
LABEL_33:
      v23 = v37;
LABEL_34:
      if (v23 != -1)
        ((void (*)(uint64_t *, WTF::StringImpl **))off_1E3238AF8[v23])(&v50, &v36);
      v14 = v39;
      goto LABEL_37;
    }
    LOBYTE(v48) = v50;
    v32 = v51;
    v51 = 0;
    v49 = v32;
    if (!*((_QWORD *)v4 + 2))
    {
      WebCore::propagateExceptionSlowPath((JSC *)v3, &v47, (unsigned __int8 *)&v48);
      v32 = v49;
    }
    v49 = 0;
    if (v32)
    {
      if (*(_DWORD *)v32 == 2)
        WTF::StringImpl::destroy(v32, (WTF::StringImpl *)v12);
      else
        *(_DWORD *)v32 -= 2;
    }
    if (v52)
    {
      v33 = v51;
      v51 = 0;
      if (v33)
      {
        if (*(_DWORD *)v33 != 2)
        {
          v3 = 0;
          *(_DWORD *)v33 -= 2;
          goto LABEL_33;
        }
        WTF::StringImpl::destroy(v33, (WTF::StringImpl *)v12);
      }
    }
    v3 = 0;
    goto LABEL_33;
  }
  v3 = 0;
LABEL_40:
  if (v13 != -1)
    ((void (*)(uint64_t *, WTF::StringImpl **))off_1E3238AF8[v13])(&v50, &v40);
LABEL_42:
  if (HIDWORD(v43))
  {
    WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v42, v46);
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v45;
    if (HIDWORD(v43))
    {
      v29 = v42;
      v30 = 8 * HIDWORD(v43);
      do
      {
        v31 = *v29;
        *v29 = 0;
        if (v31)
        {
          if (*(_DWORD *)(v31 + 24) == 2)
          {
            if ((*(_WORD *)(v31 + 30) & 0x400) == 0)
              WebCore::Node::removedLastRef((WebCore::Node *)v31, v12);
          }
          else
          {
            *(_DWORD *)(v31 + 24) -= 2;
          }
        }
        ++v29;
        v30 -= 8;
      }
      while (v30);
    }
  }
  else
  {
    WebCore::CustomElementReactionStack::s_currentProcessingStack = v45;
  }
  v24 = (WTF *)v42;
  if (v44 != (_BYTE *)v42 && v42 != 0)
    goto LABEL_87;
  return (_BYTE *)v3;
}

_BYTE *WebCore::jsCSSStyleDeclarationPrototypeFunction_removeProperty(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  void *v12;
  int v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF *v19;
  JSValue v22;
  WTF *v23;
  uint64_t v24;
  uint64_t v25;
  WTF::StringImpl *v26;
  JSValue v27;
  WebCore *v28;
  JSC::JSGlobalObject *v29;
  JSC::CallFrame *v30;
  JSC::VM *v31;
  WTF::StringImpl *v32;
  int v33[2];
  WTF::StringImpl *v34;
  int v35;
  WTF::StringImpl *v36;
  int v37;
  WTF *v38;
  uint64_t v39;
  _BYTE v40[40];
  uint64_t v41;
  JSC::JSGlobalObject *v42;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v31 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "CSSStyleDeclaration", "removeProperty");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCSSStyleDeclaration::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCSSStyleDeclaration::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "CSSStyleDeclaration", "removeProperty");
  v11 = *(_QWORD *)(v5 + 24);
  v38 = (WTF *)v40;
  v39 = 4;
  v40[32] = 0;
  v41 = WebCore::CustomElementReactionStack::s_currentProcessingStack;
  v42 = this;
  WebCore::CustomElementReactionStack::s_currentProcessingStack = (uint64_t)&v38;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v22.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    v16 = JSC::VM::throwException(v4, this, v22);
LABEL_26:
    if (HIDWORD(v39))
    {
      WebCore::CustomElementQueue::processQueue((WebCore::CustomElementQueue *)&v38, v42);
      WebCore::CustomElementReactionStack::s_currentProcessingStack = v41;
      if (HIDWORD(v39))
      {
        v23 = v38;
        v24 = 8 * HIDWORD(v39);
        do
        {
          v25 = *(_QWORD *)v23;
          *(_QWORD *)v23 = 0;
          if (v25)
          {
            if (*(_DWORD *)(v25 + 24) == 2)
            {
              if ((*(_WORD *)(v25 + 30) & 0x400) == 0)
                WebCore::Node::removedLastRef((WebCore::Node *)v25, v12);
            }
            else
            {
              *(_DWORD *)(v25 + 24) -= 2;
            }
          }
          v23 = (WTF *)((char *)v23 + 8);
          v24 -= 8;
        }
        while (v24);
      }
    }
    else
    {
      WebCore::CustomElementReactionStack::s_currentProcessingStack = v41;
    }
    v19 = v38;
    if (v40 != (_BYTE *)v38 && v38 != 0)
    {
      v38 = 0;
      LODWORD(v39) = 0;
      WTF::fastFree(v19, v12);
    }
    return (_BYTE *)v16;
  }
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v36);
  v13 = v37;
  if (v37)
  {
    v16 = 0;
LABEL_24:
    if (v13 != -1)
      ((void (*)(int *, WTF::StringImpl **))off_1E3238AF8[v13])(v33, &v36);
    goto LABEL_26;
  }
  v14 = v36;
  v36 = 0;
  v32 = v14;
  (*(void (**)(int *__return_ptr, uint64_t, WTF::StringImpl **))(*(_QWORD *)v11 + 136))(v33, v11, &v32);
  if (!v35)
  {
    v15 = *(_QWORD *)v33;
    *(_QWORD *)v33 = 0;
    v43 = (WTF::StringImpl *)v15;
    v16 = WebCore::toJS<WebCore::IDLUSVString,WTF::String>((uint64_t)this, (uint64_t *)&v43);
    v17 = v43;
    v43 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, (WTF::StringImpl *)v12);
      else
        *(_DWORD *)v17 -= 2;
    }
LABEL_18:
    if (v35 != -1)
      ((void (*)(WTF::StringImpl **, int *))off_1E3247F80[v35])(&v43, v33);
    v35 = -1;
    v18 = v32;
    v32 = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, (WTF::StringImpl *)v12);
      else
        *(_DWORD *)v18 -= 2;
    }
    v13 = v37;
    goto LABEL_24;
  }
  if (v35 == 1)
  {
    v12 = (void *)LOBYTE(v33[0]);
    LOBYTE(v43) = v33[0];
    v26 = v34;
    v34 = 0;
    v44 = v26;
    if (!*((_QWORD *)v4 + 2))
    {
      v27.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v33[0]), (JSC::JSGlobalObject *)&v44);
      JSC::VM::throwException(v4, this, v27);
      v26 = v44;
    }
    v44 = 0;
    if (v26)
    {
      if (*(_DWORD *)v26 == 2)
        WTF::StringImpl::destroy(v26, (WTF::StringImpl *)v12);
      else
        *(_DWORD *)v26 -= 2;
    }
    v16 = 0;
    goto LABEL_18;
  }
  v28 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsCSSStyleDeclarationPrototypeFunction_getPropertyCSSValue(v28, v29, v30);
}

_BYTE *WebCore::jsCSSStyleDeclarationPrototypeFunction_getPropertyCSSValue(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  void *v16;
  WTF::StringImpl *v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  JSValue v27;
  WTF::StringImpl *v28;
  int hasExceptionsAfterHandlingTraps;
  JSC::VM *v30;
  WTF::StringImpl *v31;
  uint64_t v32;
  int v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v30 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v30, "CSSStyleDeclaration", "getPropertyCSSValue");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCSSStyleDeclaration::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCSSStyleDeclaration::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v30, "CSSStyleDeclaration", "getPropertyCSSValue");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v27.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v27);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v35 = (WTF::StringImpl *)v12;
  if ((v12 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v12 + 5) == 2)
  {
    v13 = *(WTF::StringImpl **)(v12 + 8);
    if ((v13 & 1) != 0)
    {
      v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, this);
      if (!v13)
        goto LABEL_18;
    }
    else if (!v13)
    {
LABEL_18:
      v34 = v13;
      goto LABEL_19;
    }
    *(_DWORD *)v13 += 2;
    goto LABEL_18;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v35, this);
LABEL_19:
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v14 = v34;
    if (hasExceptionsAfterHandlingTraps)
    {
      v33 = 1;
      v34 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v28);
        else
          *(_DWORD *)v14 -= 2;
      }
      v20 = 0;
      v24 = 1;
      goto LABEL_35;
    }
  }
  else
  {
    v14 = v34;
  }
  v33 = 0;
  v15 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v31 = v14;
  v32 = 0;
  (*(void (**)(WTF::StringImpl **__return_ptr, uint64_t, WTF::StringImpl **, JSC::CallFrame *))(*(_QWORD *)v11 + 88))(&v34, v11, &v31, a3);
  v17 = v34;
  if (v34)
  {
    v18 = (uint64_t *)(*(_QWORD *)(v15 + 3320) + 32);
    v35 = v34;
    v19 = WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::get(v18, &v35);
    if (v19)
    {
      v20 = v19;
    }
    else
    {
      ++*(_DWORD *)v17;
      v35 = v17;
      v20 = WebCore::toJSNewlyCreated(0, v15, (uint64_t *)&v35);
      v21 = v35;
      v35 = 0;
      if (v21)
      {
        if (*(_DWORD *)v21 == 1)
          WebCore::DeprecatedCSSOMValue::operator delete((uint64_t)v21, v16);
        else
          --*(_DWORD *)v21;
      }
    }
    v22 = v34;
    v34 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 1)
        WebCore::DeprecatedCSSOMValue::operator delete((uint64_t)v22, v16);
      else
        --*(_DWORD *)v22;
    }
  }
  else
  {
    v34 = 0;
    v20 = 2;
  }
  v23 = v31;
  v31 = 0;
  if (v23)
  {
    if (*(_DWORD *)v23 == 2)
      WTF::StringImpl::destroy(v23, (WTF::StringImpl *)v16);
    else
      *(_DWORD *)v23 -= 2;
  }
  v24 = 0;
LABEL_35:
  ((void (*)(WTF::StringImpl **, uint64_t *))off_1E3238AF8[v24])(&v35, &v32);
  return (_BYTE *)v20;
}

uint64_t WebCore::convert<WebCore::IDLLegacyNullToEmptyStringAdaptor<WebCore::IDLUSVString>>(uint64_t result, JSC::JSGlobalObject *a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  _DWORD *v5;
  _BYTE v6[8];
  int v7;
  char v8;

  v3 = result;
  if (a3 == 2)
  {
    v5 = (_DWORD *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *v5 += 2;
    *(_QWORD *)result = v5;
    *(_DWORD *)(result + 8) = 0;
  }
  else
  {
    result = WebCore::valueToUSVString(a2, a3, (uint64_t)v6);
    *(_BYTE *)v3 = 0;
    *(_DWORD *)(v3 + 8) = -1;
    v4 = v7;
    if (v7 != -1)
    {
      result = ((uint64_t (*)(char *, uint64_t, _BYTE *))off_1E3247F70[v7])(&v8, v3, v6);
      *(_DWORD *)(v3 + 8) = v4;
      if (v7 != -1)
        return ((uint64_t (*)(char *, _BYTE *))off_1E3238AF8[v7])(&v8, v6);
    }
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6StringEN7WebCore25ConversionResultExceptionEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISC_LNS0_6_TraitE1EEEEEvRSD_OT_EUlRSJ_OT0_E_JRNS0_6__baseILSG_1EJS9_SB_EEEOSR_EEEDcSJ_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

_BYTE *WebCore::jsCSSStyleRulePrototypeFunction_insertRule(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::CSSStyleRule *v12;
  int v13;
  unint64_t v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  WTF::StringImpl *v20;
  JSValue v23;
  WTF::StringImpl *v24;
  WebCore *v25;
  JSC::JSGlobalObject *v26;
  JSC::CallFrame *v27;
  JSC::VM *v28;
  WTF::StringImpl *v29;
  unsigned int v30;
  WTF::StringImpl *v31;
  int v32;
  unsigned int v33[2];
  WTF::StringImpl *v34;
  int v35;
  JSC::VM *v36;
  unsigned __int8 v37[8];
  WTF::StringImpl *v38;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v28 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "CSSStyleRule", "insertRule");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCSSStyleRule::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCSSStyleRule::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "CSSStyleRule", "insertRule");
  v12 = *(WebCore::CSSStyleRule **)(v5 + 24);
  v36 = v4;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v23.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v23);
  }
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v34);
  v13 = v35;
  if (v35)
  {
    v19 = 0;
LABEL_27:
    if (v13 != -1)
      ((void (*)(unsigned int *, WTF::StringImpl **))off_1E3238AF8[v13])(&v30, &v34);
    return (_BYTE *)v19;
  }
  if ((unint64_t)(*((int *)a2 + 8) - 3) > 0xFFFFFFFFFFFFFFFDLL)
    v14 = 10;
  else
    v14 = *((_QWORD *)a2 + 7);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, v14, v33);
  if (v33[1])
  {
    v19 = 0;
LABEL_26:
    v13 = v35;
    goto LABEL_27;
  }
  if (!v35)
  {
    v15 = v34;
    v34 = 0;
    v29 = v15;
    WebCore::CSSStyleRule::insertRule(v12, v33[0], (uint64_t)&v30);
    if (!v32)
    {
      v17 = 0;
      if ((v30 & 0x80000000) != 0)
        v18 = COERCE__INT64((double)v30) + 0x2000000000000;
      else
        v18 = v30 | 0xFFFE000000000000;
LABEL_22:
      ((void (*)(unsigned __int8 *, unsigned int *))off_1E32480D0[v17])(v37, &v30);
      v19 = v18;
LABEL_23:
      v32 = -1;
      v20 = v29;
      v29 = 0;
      if (v20)
      {
        if (*(_DWORD *)v20 == 2)
          WTF::StringImpl::destroy(v20, v16);
        else
          *(_DWORD *)v20 -= 2;
      }
      goto LABEL_26;
    }
    if (v32 == 1)
    {
      v37[0] = v30;
      v24 = v31;
      v31 = 0;
      v38 = v24;
      if (!*((_QWORD *)v4 + 2))
      {
        WebCore::propagateExceptionSlowPath(this, &v36, v37);
        v24 = v38;
      }
      v38 = 0;
      if (v24)
      {
        if (*(_DWORD *)v24 == 2)
          WTF::StringImpl::destroy(v24, v16);
        else
          *(_DWORD *)v24 -= 2;
      }
      v18 = 0;
      v19 = 0;
      v17 = v32;
      if (v32 == -1)
        goto LABEL_23;
      goto LABEL_22;
    }
  }
  v25 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsCSSStyleRulePrototypeFunction_deleteRule(v25, v26, v27);
}

uint64_t WebCore::jsCSSStyleRulePrototypeFunction_deleteRule(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::CSSStyleRule *v11;
  WTF::StringImpl *v12;
  uint64_t result;
  JSValue v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSC::VM *v17;
  unsigned int v18[2];
  JSC::VM *v19;
  unsigned __int8 v20[8];
  WTF::StringImpl *v21;
  uint64_t v22;
  WTF::StringImpl *v23;
  char v24;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v17 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "CSSStyleRule", "deleteRule");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCSSStyleRule::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCSSStyleRule::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "CSSStyleRule", "deleteRule");
  v11 = *(WebCore::CSSStyleRule **)(v5 + 24);
  v19 = v4;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v14.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v14);
  }
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v18);
  if (!v18[1])
  {
    WebCore::CSSStyleRule::deleteRule(v11, v18[0], &v22);
    if (!v24)
      return 10;
    v20[0] = v22;
    v15 = v23;
    v23 = 0;
    v21 = v15;
    if (!*((_QWORD *)v4 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v19, v20);
      v15 = v21;
    }
    v21 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v12);
      else
        *(_DWORD *)v15 -= 2;
    }
    if (v24)
    {
      v16 = v23;
      v23 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 != 2)
        {
          result = 0;
          *(_DWORD *)v16 -= 2;
          return result;
        }
        WTF::StringImpl::destroy(v16, v12);
      }
    }
  }
  return 0;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore9MediaListENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF **a2)
{
  WTF *v2;
  uint64_t result;

  v2 = *a2;
  *a2 = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      if (*((_BYTE *)v2 + 40))
        WTF::Vector<WebCore::MQ::MediaQuery,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((uint64_t)v2 + 24, a2);
      return WTF::fastFree(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore9MediaListENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore9MediaListENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISI_LNS0_6_TraitE1EEEEEvRSJ_OT_EUlRSP_OT0_E_JRNS0_6__baseILSM_1EJSG_SH_EEEOSX_EEEDcSP_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore9MediaListENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISI_LNS0_6_TraitE1EEEEEvRSJ_OT_EUlRSP_OT0_E_JRNS0_6__baseILSM_1EJSG_SH_EEEOSX_EEEDcSP_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN7WebCore9MediaListENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISI_LNS0_6_TraitE1EEEEEvOT_EUlRSO_OT0_E_JRNS0_6__baseILSM_1EJSG_SH_EEEOSW_EEEDcSO_DpT0_(uint64_t result, WTF **a2, WTF **a3)
{
  uint64_t v4;
  uint64_t v5;
  WTF *v6;
  WTF *v7;
  WTF *v8;
  char v9;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5)
  {
    result = ((uint64_t (*)(char *, uint64_t))off_1E32480E0[v5])(&v9, v4);
LABEL_7:
    v8 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v8;
    *(_DWORD *)(v4 + 8) = 0;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  v7 = *a2;
  *a2 = v6;
  if (v7)
  {
    if (*(_DWORD *)v7 == 1)
    {
      if (*((_BYTE *)v7 + 40))
        WTF::Vector<WebCore::MQ::MediaQuery,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((uint64_t)v7 + 24, a2);
      return WTF::fastFree(v7, a2);
    }
    else
    {
      --*(_DWORD *)v7;
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN7WebCore9MediaListENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS8_6StringEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISI_LNS0_6_TraitE1EEEEEvOT_EUlRSO_OT0_E_JRNS0_6__baseILSM_1EJSG_SH_EEEOSW_EEEDcSO_DpT0_(WTF::StringImpl *result, WTF::StringImpl *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5 != 1)
  {
    result = (WTF::StringImpl *)((uint64_t (*)(char *, uint64_t))off_1E32480E0[v5])(&v8, v4);
LABEL_7:
    v7 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v7;
    *(_DWORD *)(v4 + 8) = 1;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = v6;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6RefPtrIN7WebCore9MediaListENS9_12RawPtrTraitsISC_EENS9_21DefaultRefDerefTraitsISC_EEEENS9_6StringEEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSJ_SK_EEEEEEDcSO_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E32480E0[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore13CSSStyleSheetENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore13CSSStyleSheetENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore13CSSStyleSheet4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, unsigned int *a2)
{
  uint64_t v3;
  WTF::StringImpl *result;
  char v5;

  v3 = a2[4];
  if ((_DWORD)v3 != -1)
    ((void (*)(char *, unsigned int *))off_1E32480E0[v3])(&v5, a2 + 2);
  a2[4] = -1;
  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, (WTF::StringImpl *)a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_BYTE *WebCore::jsCSSStyleSheetPrototypeFunction_insertRule(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  WebCore::CSSStyleSheet *v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  JSValue v21;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  JSValue v25;
  WebCore *v26;
  JSC::JSGlobalObject *v27;
  JSC::CallFrame *v28;
  uint64_t v29;
  WTF::StringImpl *v30;
  int v31[2];
  WTF::StringImpl *v32;
  int v33;
  unsigned int v34[2];
  WTF::StringImpl *v35;
  int v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;

  v5 = *((_QWORD *)this + 7);
  v29 = v5;
  v6 = WebCore::IDLOperation<WebCore::JSCSSStyleSheet>::cast(*((_QWORD *)a2 + 5));
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v29, "CSSStyleSheet", "insertRule");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
    return (_BYTE *)JSC::VM::throwException((JSC::VM *)v5, this, v21);
  }
  v8 = *(WebCore::CSSStyleSheet **)(v6 + 24);
  v9 = *((_QWORD *)a2 + 6);
  *(_QWORD *)v31 = v9;
  if ((v9 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v9 + 5) == 2)
  {
    v10 = *(WTF::StringImpl **)(v9 + 8);
    if ((v10 & 1) != 0)
    {
      v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v9, this);
      if (!v10)
        goto LABEL_8;
    }
    else if (!v10)
    {
LABEL_8:
      v37 = v10;
      goto LABEL_9;
    }
    *(_DWORD *)v10 += 2;
    goto LABEL_8;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v31, this);
LABEL_9:
  if (*(_DWORD *)(v5 + 80))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5);
    v11 = v37;
    if (hasExceptionsAfterHandlingTraps)
    {
      v36 = 1;
      v37 = 0;
      if (v11)
      {
        if (*(_DWORD *)v11 == 2)
          WTF::StringImpl::destroy(v11, v23);
        else
          *(_DWORD *)v11 -= 2;
      }
      v16 = 0;
      v18 = 1;
      goto LABEL_25;
    }
  }
  else
  {
    v11 = v37;
  }
  v35 = v11;
  v36 = 0;
  if ((unint64_t)(*((int *)a2 + 8) - 3) > 0xFFFFFFFFFFFFFFFDLL)
    v12 = 10;
  else
    v12 = *((_QWORD *)a2 + 7);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, v12, v34);
  if (v34[1])
  {
    v16 = 0;
LABEL_24:
    v18 = 0;
LABEL_25:
    ((void (*)(int *, WTF::StringImpl **))off_1E3238AF8[v18])(v31, &v35);
    return (_BYTE *)v16;
  }
  v35 = 0;
  v30 = v11;
  WebCore::CSSStyleSheet::insertRule(v8, v34[0], (uint64_t)v31);
  if (!v33)
  {
    if (v31[0] < 0)
      v13 = COERCE__INT64((double)v31[0]) + 0x2000000000000;
    else
      v13 = v31[0] | 0xFFFE000000000000;
    v14 = 0;
LABEL_20:
    ((void (*)(WTF::StringImpl **, int *))off_1E32480D0[v14])(&v37, v31);
    v16 = v13;
LABEL_21:
    v33 = -1;
    v17 = v30;
    v30 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v15);
      else
        *(_DWORD *)v17 -= 2;
    }
    goto LABEL_24;
  }
  if (v33 == 1)
  {
    v15 = (WTF::StringImpl *)LOBYTE(v31[0]);
    LOBYTE(v37) = v31[0];
    v24 = v32;
    v32 = 0;
    v38 = v24;
    if (!*(_QWORD *)(v5 + 16))
    {
      v25.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v31[0]), (JSC::JSGlobalObject *)&v38);
      JSC::VM::throwException((JSC::VM *)v5, this, v25);
      v24 = v38;
    }
    v38 = 0;
    if (v24)
    {
      if (*(_DWORD *)v24 == 2)
        WTF::StringImpl::destroy(v24, v15);
      else
        *(_DWORD *)v24 -= 2;
    }
    v13 = 0;
    v16 = 0;
    v14 = v33;
    if (v33 == -1)
      goto LABEL_21;
    goto LABEL_20;
  }
  v26 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsCSSStyleSheetPrototypeFunction_deleteRule(v26, v27, v28);
}

uint64_t WebCore::jsCSSStyleSheetPrototypeFunction_deleteRule(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  WebCore::CSSStyleSheet *v8;
  JSValue v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  JSValue v13;
  JSC::VM *v14;
  unsigned int v15[2];
  char v16;
  WTF::StringImpl *v17;
  int v18;
  WTF::StringImpl *v19;
  char v20;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v14 = v5;
  v6 = WebCore::IDLOperation<WebCore::JSCSSStyleSheet>::cast(*((_QWORD *)a2 + 5));
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v14, "CSSStyleSheet", "deleteRule");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v10.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
    return JSC::VM::throwException(v5, this, v10);
  }
  else
  {
    v8 = *(WebCore::CSSStyleSheet **)(v6 + 24);
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, *((_QWORD *)a2 + 6), v15);
    if (!v15[1])
    {
      WebCore::CSSStyleSheet::deleteRule(v8, (WTF::StringImpl *)v15[0], (uint64_t)&v18);
      if (!v20)
        return 10;
      v11 = (WTF::StringImpl *)v18;
      v16 = v18;
      v12 = v19;
      v17 = v19;
      if (!*((_QWORD *)v5 + 2))
      {
        v13.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v18, (JSC::JSGlobalObject *)&v17);
        JSC::VM::throwException(v5, this, v13);
        v12 = v17;
      }
      v17 = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, v11);
        else
          *(_DWORD *)v12 -= 2;
      }
    }
    return 0;
  }
}

_BYTE *WebCore::jsCSSStyleSheetPrototypeFunction_addRule(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  unint64_t v6;
  WebCore::CSSStyleSheet *v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  JSC::VM *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  int v18;
  unint64_t v19;
  WTF::StringImpl *v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  int v25;
  WTF::StringImpl *v27;
  int hasExceptionsAfterHandlingTraps;
  int v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  JSValue v32;
  WebCore *v33;
  JSC::JSGlobalObject *v34;
  JSC::CallFrame *v35;
  uint64_t v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  int v39[2];
  WTF::StringImpl *v40;
  int v41;
  WTF::StringImpl *v42;
  int v43;
  WTF::StringImpl *v44;
  int v45;
  WTF::StringImpl *v46;
  WTF::StringImpl *v47;

  v5 = *((_QWORD *)this + 7);
  v36 = v5;
  v6 = WebCore::IDLOperation<WebCore::JSCSSStyleSheet>::cast(*((_QWORD *)a2 + 5));
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v36, "CSSStyleSheet", "addRule");
  v7 = *(WebCore::CSSStyleSheet **)(v6 + 24);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    *(_QWORD *)v39 = 10;
  }
  else
  {
    v8 = *((_QWORD *)a2 + 6);
    *(_QWORD *)v39 = v8;
    if ((v8 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v8 + 5) == 2)
    {
      v9 = *(WTF::StringImpl **)(v8 + 8);
      if ((v9 & 1) != 0)
      {
        v9 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v8, this);
        if (!v9)
          goto LABEL_8;
      }
      else if (!v9)
      {
LABEL_8:
        v46 = v9;
        goto LABEL_11;
      }
      *(_DWORD *)v9 += 2;
      goto LABEL_8;
    }
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v39, this);
LABEL_11:
  if (*(_DWORD *)(v5 + 80))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5);
    v10 = v46;
    if (hasExceptionsAfterHandlingTraps)
    {
      v45 = 1;
      v46 = 0;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, v27);
        else
          *(_DWORD *)v10 -= 2;
      }
      v21 = 0;
      v25 = 1;
      goto LABEL_40;
    }
  }
  else
  {
    v10 = v46;
  }
  v44 = v10;
  v45 = 0;
  if ((unint64_t)(*((int *)a2 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL)
  {
    *(_QWORD *)v39 = 10;
    v12 = (JSC::VM *)*((_QWORD *)this + 7);
  }
  else
  {
    v11 = *((_QWORD *)a2 + 7);
    *(_QWORD *)v39 = v11;
    v12 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((v11 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v11 + 5) == 2)
    {
      v13 = *(WTF::StringImpl **)(v11 + 8);
      if ((v13 & 1) != 0)
      {
        v13 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v11, this);
        if (!v13)
          goto LABEL_19;
      }
      else if (!v13)
      {
LABEL_19:
        v46 = v13;
        goto LABEL_22;
      }
      *(_DWORD *)v13 += 2;
      goto LABEL_19;
    }
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v39, this);
LABEL_22:
  if (*((_DWORD *)v12 + 20))
  {
    v29 = JSC::VM::hasExceptionsAfterHandlingTraps(v12);
    v14 = v46;
    if (v29)
    {
      v43 = 1;
      v46 = 0;
      if (v14)
      {
        if (*(_DWORD *)v14 == 2)
          WTF::StringImpl::destroy(v14, v30);
        else
          *(_DWORD *)v14 -= 2;
      }
      v21 = 0;
      v24 = 1;
LABEL_39:
      ((void (*)(int *, WTF::StringImpl **))off_1E3238AF8[v24])(v39, &v42);
      v25 = v45;
      if (v45 == -1)
        return (_BYTE *)v21;
LABEL_40:
      ((void (*)(int *, WTF::StringImpl **))off_1E3238AF8[v25])(v39, &v44);
      return (_BYTE *)v21;
    }
  }
  else
  {
    v14 = v46;
  }
  v42 = v14;
  v43 = 0;
  if ((unint64_t)(*((int *)a2 + 8) - 4) > 0xFFFFFFFFFFFFFFFCLL)
  {
    v16 = 0;
  }
  else
  {
    v15 = *((_QWORD *)a2 + 8);
    if (v15 == 10)
    {
      v16 = 0;
    }
    else
    {
      WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, v15, v39);
      if (v39[1])
      {
        v21 = 0;
LABEL_38:
        v24 = 0;
        goto LABEL_39;
      }
      v16 = v39[0] | 0x100000000;
    }
  }
  if (!v45)
  {
    v17 = v44;
    v44 = 0;
    v37 = v14;
    v38 = v17;
    v42 = 0;
    WebCore::CSSStyleSheet::addRule(v7, &v38, &v37, v16, (uint64_t)v39);
    v18 = v41;
    if (!v41)
    {
      v19 = v39[0] | 0xFFFE000000000000;
LABEL_31:
      ((void (*)(WTF::StringImpl **, int *))off_1E32482D0[v18])(&v46, v39);
      v21 = v19;
LABEL_32:
      v41 = -1;
      v22 = v37;
      v37 = 0;
      if (v22)
      {
        if (*(_DWORD *)v22 == 2)
          WTF::StringImpl::destroy(v22, v20);
        else
          *(_DWORD *)v22 -= 2;
      }
      v23 = v38;
      v38 = 0;
      if (v23)
      {
        if (*(_DWORD *)v23 == 2)
          WTF::StringImpl::destroy(v23, v20);
        else
          *(_DWORD *)v23 -= 2;
      }
      goto LABEL_38;
    }
    if (v41 == 1)
    {
      v20 = (WTF::StringImpl *)LOBYTE(v39[0]);
      LOBYTE(v46) = v39[0];
      v31 = v40;
      v40 = 0;
      v47 = v31;
      if (!*(_QWORD *)(v5 + 16))
      {
        v32.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v39[0]), (JSC::JSGlobalObject *)&v47);
        JSC::VM::throwException((JSC::VM *)v5, this, v32);
        v31 = v47;
      }
      v47 = 0;
      if (v31)
      {
        if (*(_DWORD *)v31 == 2)
          WTF::StringImpl::destroy(v31, v20);
        else
          *(_DWORD *)v31 -= 2;
      }
      v19 = 0;
      v21 = 0;
      v18 = v41;
      if (v41 == -1)
        goto LABEL_32;
      goto LABEL_31;
    }
  }
  v33 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsCSSStyleSheetPrototypeFunction_removeRule(v33, v34, v35);
}

uint64_t WebCore::jsCSSStyleSheetPrototypeFunction_removeRule(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  unint64_t v7;
  WebCore::CSSStyleSheet *v8;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  JSValue v12;
  JSC::VM *v13;
  unsigned int v14[2];
  char v15;
  WTF::StringImpl *v16;
  int v17;
  WTF::StringImpl *v18;
  char v19;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v13 = v5;
  v6 = WebCore::IDLOperation<WebCore::JSCSSStyleSheet>::cast(*((_QWORD *)a2 + 5));
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v13, "CSSStyleSheet", "removeRule");
  if (*((_DWORD *)a2 + 8) == 1)
    v7 = 10;
  else
    v7 = *((_QWORD *)a2 + 6);
  v8 = *(WebCore::CSSStyleSheet **)(v6 + 24);
  WebCore::convertToInteger<WebCore::IDLUnsignedLong>(this, v7, v14);
  if (!v14[1])
  {
    WebCore::CSSStyleSheet::deleteRule(v8, (WTF::StringImpl *)v14[0], (uint64_t)&v17);
    if (!v19)
      return 10;
    v10 = (WTF::StringImpl *)v17;
    v15 = v17;
    v11 = v18;
    v16 = v18;
    if (!*((_QWORD *)v5 + 2))
    {
      v12.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v17, (JSC::JSGlobalObject *)&v16);
      JSC::VM::throwException(v5, this, v12);
      v11 = v16;
    }
    v16 = 0;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v10);
      else
        *(_DWORD *)v11 -= 2;
    }
  }
  return 0;
}

unint64_t WebCore::jsCSSStyleSheetPrototypeFunction_replace(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  int v11;
  JSC::VM *v12;
  unint64_t v13;
  WebCore::DOMGuardedObject *v14;
  WebCore::DOMGuardedObject *v15;
  unint64_t v16;
  JSC::JSGlobalObject *v17;
  const char *v18;
  WebCore::CSSStyleSheet *v19;
  int v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  JSC::VM *v26;
  JSValue v27;
  objc_class *v28;
  WebCore::DOMGuardedObject *v29;
  WebCore::DOMGuardedObject *v30;
  WebCore::DOMGuardedObject *v31;
  int v32;
  WTF::StringImpl *v33;

  v5 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSDOMGlobalObject::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSDOMGlobalObject::s_info && v7 != 0);
  }
  if (!v6)
  {
    __break(0xC471u);
    JUMPOUT(0x19490DCC0);
  }
  v10 = *((_QWORD *)this + 7);
  v11 = *((_DWORD *)this + 291);
  if (v11)
    v12 = (JSC::VM *)(16 * (v11 & 0xFFFFFFFE));
  else
    v12 = 0;
  v13 = JSC::JSPromise::create(*((JSC::JSPromise **)this + 7), v12, a3);
  v14 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x30);
  v15 = WebCore::DOMGuardedObject::DOMGuardedObject(v14, (unint64_t)this, v13);
  *(_QWORD *)v15 = &off_1E3226868;
  *((_DWORD *)v15 + 10) = 0;
  *((_BYTE *)v15 + 44) = 0;
  v30 = v15;
  v16 = WebCore::IDLOperation<WebCore::JSCSSStyleSheet>::cast(*((_QWORD *)a2 + 5));
  if (v16)
  {
    if (*((_DWORD *)a2 + 8) == 1)
    {
      v26 = (JSC::VM *)*((_QWORD *)this + 7);
      v27.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v17);
      JSC::VM::throwException(v26, this, v27);
    }
    else
    {
      v19 = *(WebCore::CSSStyleSheet **)(v16 + 24);
      WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v31);
      v20 = v32;
      if (!v32)
      {
        v21 = v31;
        v31 = 0;
        v33 = v21;
        WebCore::CSSStyleSheet::replace(v19, (const WTF::String *)&v33, (uint64_t *)&v30);
        v23 = v33;
        v33 = 0;
        if (v23)
        {
          if (*(_DWORD *)v23 == 2)
            WTF::StringImpl::destroy(v23, v22);
          else
            *(_DWORD *)v23 -= 2;
        }
        v20 = v32;
      }
      if (v20 != -1)
        ((void (*)(WTF::StringImpl **, WebCore::DOMGuardedObject **))off_1E3238AF8[v20])(&v33, &v31);
    }
  }
  else
  {
    WebCore::rejectPromiseWithThisTypeError(v14, (WebCore::DeferredPromise *)"CSSStyleSheet", "replace", v18);
  }
  if (*((_DWORD *)v14 + 4) == 1)
    (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v14 + 16))(v14);
  else
    --*((_DWORD *)v14 + 4);
  v24 = *(_QWORD *)(v10 + 16);
  if (v24)
  {
    if (*(_QWORD *)(v10 + 24) != v24)
    {
      v28 = *(objc_class **)(v24 + 8);
      JSC::VM::clearException((JSC::VM *)v10);
      WebCore::DeferredPromise::create((unint64_t)this, v13, 0, &v31);
      WebCore::DeferredPromise::reject<WebCore::IDLAny>((uint64_t)v31, v28, 0);
      v29 = v31;
      v31 = 0;
      if (v29)
      {
        if (*((_DWORD *)v29 + 4) == 1)
          (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v29 + 16))(v29);
        else
          --*((_DWORD *)v29 + 4);
      }
    }
  }
  if (*(_DWORD *)(v10 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v10) & 1) != 0)
    return 10;
  return v13;
}

_BYTE *WebCore::jsCSSStyleSheetPrototypeFunction_replaceSync(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::CSSStyleSheet *v10;
  int v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  JSValue v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  JSC::VM *v22;
  WTF::StringImpl *v23;
  int v24;
  JSC::VM *v25;
  WTF::StringImpl *v26;
  WTF::StringImpl *v27;
  _BYTE v28[8];
  WTF::StringImpl *v29;
  char v30;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v22 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v22, "CSSStyleSheet", "replaceSync");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCSSStyleSheet::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCSSStyleSheet::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v22, "CSSStyleSheet", "replaceSync");
  v10 = *(WebCore::CSSStyleSheet **)(v5 + 24);
  v25 = v4;
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v19);
  }
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 6), (uint64_t)&v23);
  v11 = v24;
  if (!v24)
  {
    v12 = v23;
    v23 = 0;
    v26 = v12;
    WebCore::CSSStyleSheet::replaceSync(v10, (const WTF::String *)&v26, (uint64_t)v28);
    v14 = v26;
    v26 = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v13);
      else
        *(_DWORD *)v14 -= 2;
    }
    if (!v30)
    {
      v15 = 10;
LABEL_15:
      v11 = v24;
      goto LABEL_16;
    }
    LOBYTE(v26) = v28[0];
    v20 = v29;
    v29 = 0;
    v27 = v20;
    if (!*((_QWORD *)v4 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v25, (unsigned __int8 *)&v26);
      v20 = v27;
    }
    v27 = 0;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
        WTF::StringImpl::destroy(v20, v13);
      else
        *(_DWORD *)v20 -= 2;
    }
    if (v30)
    {
      v21 = v29;
      v29 = 0;
      if (v21)
      {
        if (*(_DWORD *)v21 != 2)
        {
          v15 = 0;
          *(_DWORD *)v21 -= 2;
          goto LABEL_15;
        }
        WTF::StringImpl::destroy(v21, v13);
      }
    }
    v15 = 0;
    goto LABEL_15;
  }
  v15 = 0;
LABEL_16:
  if (v11 != -1)
    ((void (*)(_BYTE *, WTF::StringImpl **))off_1E3238AF8[v11])(v28, &v23);
  return (_BYTE *)v15;
}

unint64_t WebCore::IDLOperation<WebCore::JSCSSStyleSheet>::cast(unint64_t result)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((result & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)result & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSCSSStyleSheet::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSCSSStyleSheet::s_info && v3 != 0);
  }
  if (!v2)
    return 0;
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJiN7WebCore9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSB_1EJiS9_EEEEEEDcSD_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

unint64_t WebCore::jsCSSStyleValueConstructorFunction_parse(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  _DWORD *v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSValue v18;
  WTF::StringImpl *v19;
  JSValue v20;
  WebCore *v21;
  JSC::JSGlobalObject *v22;
  JSC::CallFrame *v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  int v26[2];
  WTF::StringImpl *v27;
  int v28;
  WTF::StringImpl *v29;
  int v30;
  WTF::StringImpl *v31;
  int v32;
  _BYTE v33[8];
  WTF::StringImpl *v34;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v18.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v18);
  }
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v6)
    return 10;
  v7 = v6;
  if (*(_BYTE *)(v6 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x19490E254);
  }
  WebCore::valueToUSVAtomString(this, *((_QWORD *)a2 + 6), (uint64_t)&v31);
  v8 = v32;
  if (v32)
  {
    v14 = 0;
LABEL_22:
    if (v8 != -1)
      ((void (*)(int *, WTF::StringImpl **))off_1E3248340[v8])(v26, &v31);
    return v14;
  }
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 7), (uint64_t)&v29);
  v9 = v30;
  if (v30)
  {
    v14 = 0;
LABEL_19:
    if (v9 != -1)
      ((void (*)(int *, WTF::StringImpl **))off_1E3238AF8[v9])(v26, &v29);
    v8 = v32;
    goto LABEL_22;
  }
  if (!v32)
  {
    v10 = v31;
    v31 = 0;
    v11 = v29;
    v29 = 0;
    v24 = v11;
    v25 = v10;
    WebCore::CSSStyleValue::parse((WebCore::CSSStyleValue *)(v7 - 192), (unsigned int **)&v25, (unsigned int **)&v24, (uint64_t)v26);
    if (!v28)
    {
      v12 = *(_DWORD **)v26;
      *(_QWORD *)v26 = 0;
      v14 = WebCore::wrap<WebCore::CSSStyleValue>((uint64_t)this, (uint64_t)this, (uint64_t)v12);
      if (v12[2] == 1)
        (*(void (**)(_DWORD *))(*(_QWORD *)v12 + 16))(v12);
      else
        --v12[2];
LABEL_10:
      if (v28 != -1)
        ((void (*)(_BYTE *, int *))off_1E3248330[v28])(v33, v26);
      v28 = -1;
      v15 = v24;
      v24 = 0;
      if (v15)
      {
        if (*(_DWORD *)v15 == 2)
          WTF::StringImpl::destroy(v15, v13);
        else
          *(_DWORD *)v15 -= 2;
      }
      v16 = v25;
      v25 = 0;
      if (v16)
      {
        if (*(_DWORD *)v16 == 2)
          WTF::StringImpl::destroy(v16, v13);
        else
          *(_DWORD *)v16 -= 2;
      }
      v9 = v30;
      goto LABEL_19;
    }
    if (v28 == 1)
    {
      v13 = (WTF::StringImpl *)LOBYTE(v26[0]);
      v33[0] = v26[0];
      v19 = v27;
      v27 = 0;
      v34 = v19;
      if (!*((_QWORD *)v4 + 2))
      {
        v20.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v26[0]), (JSC::JSGlobalObject *)&v34);
        JSC::VM::throwException(v4, this, v20);
        v19 = v34;
      }
      v34 = 0;
      if (v19)
      {
        if (*(_DWORD *)v19 == 2)
          WTF::StringImpl::destroy(v19, v13);
        else
          *(_DWORD *)v19 -= 2;
      }
      v14 = 0;
      goto LABEL_10;
    }
  }
  v21 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsCSSStyleValueConstructorFunction_parseAll(v21, v22, v23);
}

uint64_t WebCore::jsCSSStyleValueConstructorFunction_parseAll(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  WTF *v15;
  uint64_t v16;
  JSC::VM *v17;
  WTF *v18;
  uint64_t *v19;
  objc_class *v20;
  int v21;
  BOOL v22;
  JSValue v23;
  void *v24;
  char v25;
  WTF *v26;
  int v27;
  uint64_t v28;
  uint64_t *v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  WTF *v33;
  _DWORD *v34;
  JSValue v35;
  WTF::StringImpl *v36;
  JSValue v37;
  _QWORD *v38;
  uint64_t v39;
  _DWORD **v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  int v43[2];
  WTF::StringImpl *v44;
  int v45;
  WTF::StringImpl *v46;
  int v47;
  WTF::StringImpl *v48;
  int v49;
  WTF::StringImpl **v50;
  int v51;
  WTF::StringImpl *v52;
  WTF::StringImpl *v53;
  WTF *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  JSC::VM *v60;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v35.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v35);
  }
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v6)
    return 10;
  v7 = v6;
  if (*(_BYTE *)(v6 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x19490E704);
  }
  WebCore::valueToUSVAtomString(this, *((_QWORD *)a2 + 6), (uint64_t)&v48);
  v8 = v49;
  if (v49)
  {
    v28 = 0;
LABEL_54:
    if (v8 != -1)
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3248340[v8])(&v52, &v48);
    return v28;
  }
  WebCore::valueToUSVString(this, *((_QWORD *)a2 + 7), (uint64_t)&v46);
  v9 = v47;
  if (v47)
  {
    v28 = 0;
LABEL_51:
    if (v9 != -1)
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3238AF8[v9])(&v52, &v46);
    v8 = v49;
    goto LABEL_54;
  }
  if (!v49)
  {
    v10 = v48;
    v48 = 0;
    v11 = v46;
    v46 = 0;
    v41 = v11;
    v42 = v10;
    WebCore::CSSParserContext::CSSParserContext((WebCore::CSSParserContext *)&v52, (const WebCore::Document *)(v7 - 192));
    WebCore::CSSStyleValueFactory::parseStyleValue((WebCore::CSSStyleValueFactory *)&v42, (unsigned int **)&v41, (const WTF::String *)1, (const WTF::String *)&v52, (uint64_t)v43);
    v13 = (WTF::StringImpl *)v56;
    *(_QWORD *)&v56 = 0;
    if (v13)
    {
      if (*(_DWORD *)v13 == 2)
        WTF::StringImpl::destroy(v13, v12);
      else
        *(_DWORD *)v13 -= 2;
    }
    v14 = v52;
    v52 = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v12);
      else
        *(_DWORD *)v14 -= 2;
    }
    if (!v45)
    {
      v15 = *(WTF **)v43;
      v16 = HIDWORD(v44);
      *(_QWORD *)v43 = 0;
      v44 = 0;
      v17 = (JSC::VM *)*((_QWORD *)this + 7);
      v60 = v17;
      LOBYTE(v52) = 0;
      v53 = (WTF::StringImpl *)0x800000000;
      v55 = 0u;
      v56 = 0u;
      v57 = 0u;
      v58 = 0u;
      v54 = (WTF *)((char *)&v55 + 8);
      v59 = 0;
      if (v16 >= 9)
      {
        LOBYTE(v52) = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v53) == 1;
        v18 = (WTF *)((char *)v15 + 8 * v16);
      }
      else
      {
        v18 = (WTF *)((char *)v15 + 8 * v16);
        if (!(_DWORD)v16)
        {
          v27 = 0;
          v25 = 1;
          v26 = (WTF *)((char *)&v55 + 8);
LABEL_34:
          v50 = (WTF::StringImpl **)v26;
          v51 = v27;
          if (!*((_DWORD *)v17 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) == 0)
          {
            v28 = JSC::constructArray();
LABEL_36:
            v29 = (uint64_t *)v55;
            if ((_QWORD)v55)
            {
              v50 = &v53;
              v38 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>((uint64_t *)v55, (uint64_t *)&v50);
              WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v29, v38);
            }
            if (v54 != (WTF *)((char *)&v55 + 8) && v54)
              WTF::fastFree(v54, v24);
            if ((v25 & 1) == 0)
            {
              v33 = v15;
              do
              {
                v34 = *(_DWORD **)v33;
                *(_QWORD *)v33 = 0;
                if (v34)
                {
                  if (v34[2] == 1)
                    (*(void (**)(_DWORD *))(*(_QWORD *)v34 + 16))(v34);
                  else
                    --v34[2];
                }
                v33 = (WTF *)((char *)v33 + 8);
              }
              while (v33 != v18);
            }
            if (v15)
              WTF::fastFree(v15, v24);
LABEL_42:
            if (v45 != -1)
              ((void (*)(WTF::StringImpl **, int *))off_1E3248350[v45])(&v52, v43);
            v45 = -1;
            v30 = v41;
            v41 = 0;
            if (v30)
            {
              if (*(_DWORD *)v30 == 2)
                WTF::StringImpl::destroy(v30, (WTF::StringImpl *)v24);
              else
                *(_DWORD *)v30 -= 2;
            }
            v31 = v42;
            v42 = 0;
            if (v31)
            {
              if (*(_DWORD *)v31 == 2)
                WTF::StringImpl::destroy(v31, (WTF::StringImpl *)v24);
              else
                *(_DWORD *)v31 -= 2;
            }
            v9 = v47;
            goto LABEL_51;
          }
LABEL_86:
          v28 = 0;
          goto LABEL_36;
        }
      }
      v19 = (uint64_t *)v15;
      while (1)
      {
        v20 = (objc_class *)WebCore::wrap<WebCore::CSSStyleValue>((uint64_t)this, (uint64_t)this, *v19);
        if (*((_DWORD *)v17 + 20))
        {
          if ((JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) != 0)
            break;
        }
        v21 = (int)v53;
        if ((_DWORD)v53 != HIDWORD(v53) && (v54 != (WTF *)((char *)&v55 + 8) ? (v22 = v54 == 0) : (v22 = 1), v22))
        {
          *((_QWORD *)v54 + v53) = v20;
          LODWORD(v53) = v21 + 1;
        }
        else
        {
          v23.super.isa = v20;
          if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v53, v23) == 1)
            LOBYTE(v52) = 1;
        }
        if (++v19 == (uint64_t *)v18)
        {
          if (!(_BYTE)v52)
          {
            v25 = 0;
            v26 = v54;
            v27 = (int)v53;
            v17 = (JSC::VM *)*((_QWORD *)this + 7);
            goto LABEL_34;
          }
          JSC::throwOutOfMemoryError();
          break;
        }
      }
      v25 = 0;
      goto LABEL_86;
    }
    if (v45 == 1)
    {
      v24 = (void *)LOBYTE(v43[0]);
      LOBYTE(v52) = v43[0];
      v36 = v44;
      v44 = 0;
      v53 = v36;
      if (!*((_QWORD *)v4 + 2))
      {
        v37.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)LOBYTE(v43[0]), (JSC::JSGlobalObject *)&v53);
        JSC::VM::throwException(v4, this, v37);
        v36 = v53;
      }
      v53 = 0;
      if (v36)
      {
        if (*(_DWORD *)v36 == 2)
          WTF::StringImpl::destroy(v36, (WTF::StringImpl *)v24);
        else
          *(_DWORD *)v36 -= 2;
      }
      v28 = 0;
      goto LABEL_42;
    }
  }
  v39 = std::__throw_bad_variant_access[abi:sn180100]();
  return (uint64_t)_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore13CSSStyleValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(v39, v40);
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore13CSSStyleValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore13CSSStyleValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorINS8_3RefIN7WebCore13CSSStyleValueENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSB_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSN_1EJSK_SL_EEEEEEDcSP_DpT0_(uint64_t a1, WTF **a2)
{
  uint64_t v3;
  WTF *v4;
  uint64_t v5;
  _DWORD *v6;
  WTF *result;

  v3 = *((unsigned int *)a2 + 3);
  if ((_DWORD)v3)
  {
    v4 = *a2;
    v5 = 8 * v3;
    do
    {
      v6 = *(_DWORD **)v4;
      *(_QWORD *)v4 = 0;
      if (v6)
      {
        if (v6[2] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v6 + 16))(v6);
        else
          --v6[2];
      }
      v4 = (WTF *)((char *)v4 + 8);
      v5 -= 8;
    }
    while (v5);
  }
  result = *a2;
  if (*a2)
  {
    *a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorINS8_3RefIN7WebCore13CSSStyleValueENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSB_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSN_1EJSK_SL_EEEEEEDcSP_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_BYTE *WebCore::jsCSSStyleValuePrototypeFunction_toString(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WTF::StringImpl *v10;
  uint64_t v11;
  uint64_t *v12;
  WTF::StringImpl *v13;
  int v14;
  uint64_t v15;
  unsigned __int8 *v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  WTF::StringImpl *v21;

  v4 = *((_QWORD *)a2 + 5);
  v20 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v20, "CSSStyleValue", "toString");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSStyleValue::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSStyleValue::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v20, "CSSStyleValue", "toString");
  WebCore::CSSStyleValue::toString(*(WebCore::CSSStyleValue **)(v4 + 24), &v21);
  v11 = *((_QWORD *)this + 7);
  v12 = (uint64_t *)(v11 + 41968);
  v13 = v21;
  if (!v21)
    return (_BYTE *)*v12;
  v14 = *((_DWORD *)v21 + 1);
  if (v14)
  {
    if (v14 != 1)
    {
LABEL_15:
      v15 = *(_QWORD *)(v11 + 64760);
      if (!v15 || v21 != *(WTF::StringImpl **)(v15 + 8))
        v15 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_18;
    }
    v17 = (unsigned __int8 *)*((_QWORD *)v21 + 1);
    if ((*((_BYTE *)v21 + 16) & 4) != 0)
    {
      v18 = *v17;
    }
    else
    {
      v19 = *(unsigned __int16 *)v17;
      if (v19 > 0xFF)
        goto LABEL_15;
      v18 = v19;
    }
    v15 = *(_QWORD *)(v11 + 8 * v18 + 42216);
  }
  else
  {
    v15 = *v12;
  }
LABEL_18:
  if (*(_DWORD *)v13 == 2)
    WTF::StringImpl::destroy(v13, v10);
  else
    *(_DWORD *)v13 -= 2;
  return (_BYTE *)v15;
}

_BYTE *WebCore::jsCSSTransformComponentPrototypeFunction_toMatrix(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  JSC::VM *v13;
  WTF::StringImpl *v14;
  bmalloc::api *v15;
  void *v16;
  uint64_t v17;
  WTF::StringImpl *v19;
  WebCore *v20;
  JSC::JSGlobalObject *v21;
  JSC::CallFrame *v22;
  JSC::VM *v23;
  bmalloc::api *v24;
  WTF::StringImpl *v25;
  int v26;
  JSC::VM *v27;
  unsigned __int8 v28[8];
  WTF::StringImpl *v29;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v23 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v23, "CSSTransformComponent", "toMatrix");
  v6 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v7 = *(unsigned int *)(v6 + 0x4C);
  v8 = *(_DWORD *)(v6 + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCSSTransformComponent::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCSSTransformComponent::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v23, "CSSTransformComponent", "toMatrix");
  v12 = *(_QWORD *)(v4 + 24);
  v27 = v5;
  v13 = *(JSC::VM **)(v6 + 40);
  (*(void (**)(bmalloc::api **__return_ptr))(*(_QWORD *)v12 + 16))(&v24);
  if (!v26)
  {
    v15 = v24;
    v24 = 0;
    v17 = WebCore::wrap<WebCore::DOMMatrix>((int)this, v13, v15);
    if (*((_DWORD *)v15 + 2) == 1)
    {
      if (*(_QWORD *)v15)
      {
        *(_QWORD *)(*(_QWORD *)v15 + 8) = 3;
        *(_QWORD *)v15 = 0;
      }
      bmalloc::api::isoDeallocate(v15, v16);
    }
    else
    {
      --*((_DWORD *)v15 + 2);
    }
LABEL_15:
    if (v26 != -1)
      ((void (*)(unsigned __int8 *, bmalloc::api **))off_1E3248478[v26])(v28, &v24);
    return (_BYTE *)v17;
  }
  if (v26 == 1)
  {
    v28[0] = v24;
    v19 = v25;
    v25 = 0;
    v29 = v19;
    if (!*((_QWORD *)v5 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v27, v28);
      v19 = v29;
    }
    v29 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v14);
      else
        *(_DWORD *)v19 -= 2;
    }
    v17 = 0;
    goto LABEL_15;
  }
  v20 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsCSSTransformComponentPrototypeFunction_toString(v20, v21, v22);
}

_BYTE *WebCore::jsCSSTransformComponentPrototypeFunction_toString(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  WTF::StringImpl *v10;
  uint64_t v11;
  uint64_t *v12;
  WTF::StringImpl *v13;
  int v14;
  uint64_t v15;
  unsigned __int8 *v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  WTF::StringImpl *v21;

  v4 = *((_QWORD *)a2 + 5);
  v20 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v20, "CSSTransformComponent", "toString");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCSSTransformComponent::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCSSTransformComponent::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v20, "CSSTransformComponent", "toString");
  WebCore::CSSTransformComponent::toString(*(WebCore::CSSTransformComponent **)(v4 + 24), &v21);
  v11 = *((_QWORD *)this + 7);
  v12 = (uint64_t *)(v11 + 41968);
  v13 = v21;
  if (!v21)
    return (_BYTE *)*v12;
  v14 = *((_DWORD *)v21 + 1);
  if (v14)
  {
    if (v14 != 1)
    {
LABEL_15:
      v15 = *(_QWORD *)(v11 + 64760);
      if (!v15 || v21 != *(WTF::StringImpl **)(v15 + 8))
        v15 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_18;
    }
    v17 = (unsigned __int8 *)*((_QWORD *)v21 + 1);
    if ((*((_BYTE *)v21 + 16) & 4) != 0)
    {
      v18 = *v17;
    }
    else
    {
      v19 = *(unsigned __int16 *)v17;
      if (v19 > 0xFF)
        goto LABEL_15;
      v18 = v19;
    }
    v15 = *(_QWORD *)(v11 + 8 * v18 + 42216);
  }
  else
  {
    v15 = *v12;
  }
LABEL_18:
  if (*(_DWORD *)v13 == 2)
    WTF::StringImpl::destroy(v13, v10);
  else
    *(_DWORD *)v13 -= 2;
  return (_BYTE *)v15;
}

bmalloc::api *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore9DOMMatrixENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, bmalloc::api **a2)
{
  bmalloc::api *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*((_DWORD *)result + 2) == 1)
    {
      if (*(_QWORD *)result)
      {
        *(_QWORD *)(*(_QWORD *)result + 8) = 3;
        *(_QWORD *)result = 0;
      }
      return (bmalloc::api *)bmalloc::api::isoDeallocate(result, a2);
    }
    else
    {
      --*((_DWORD *)result + 2);
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore9DOMMatrixENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore17CSSTransformValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore17CSSTransformValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorINS8_3RefIN7WebCore21CSSTransformComponentENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSN_1EJSK_SL_EEEEEEDcSP_DpT0_(uint64_t a1, WTF **a2)
{
  uint64_t v3;
  WTF *v4;
  uint64_t v5;
  _DWORD *v6;
  WTF *result;

  v3 = *((unsigned int *)a2 + 3);
  if ((_DWORD)v3)
  {
    v4 = *a2;
    v5 = 8 * v3;
    do
    {
      v6 = *(_DWORD **)v4;
      *(_QWORD *)v4 = 0;
      if (v6)
      {
        if (v6[2] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v6 + 32))(v6);
        else
          --v6[2];
      }
      v4 = (WTF *)((char *)v4 + 8);
      v5 -= 8;
    }
    while (v5);
  }
  result = *a2;
  if (*a2)
  {
    *a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

_BYTE *WebCore::jsCSSTransformValuePrototypeFunction_toMatrix(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::CSSTransformValue *v12;
  JSC::VM *v13;
  WTF::StringImpl *v14;
  bmalloc::api *v15;
  void *v16;
  uint64_t v17;
  WTF::StringImpl *v19;
  uint64_t v20;
  JSC::VM *v21;
  bmalloc::api *v22;
  WTF::StringImpl *v23;
  int v24;
  JSC::VM *v25;
  unsigned __int8 v26[8];
  WTF::StringImpl *v27;

  v4 = *((_QWORD *)a2 + 5);
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v21 = v5;
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "CSSTransformValue", "toMatrix");
  v6 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v7 = *(unsigned int *)(v6 + 0x4C);
  v8 = *(_DWORD *)(v6 + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCSSTransformValue::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCSSTransformValue::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v21, "CSSTransformValue", "toMatrix");
  v12 = *(WebCore::CSSTransformValue **)(v4 + 24);
  v25 = v5;
  v13 = *(JSC::VM **)(v6 + 40);
  WebCore::CSSTransformValue::toMatrix(v12, (uint64_t)&v22);
  if (!v24)
  {
    v15 = v22;
    v22 = 0;
    v17 = WebCore::wrap<WebCore::DOMMatrix>((int)this, v13, v15);
    if (*((_DWORD *)v15 + 2) == 1)
    {
      if (*(_QWORD *)v15)
      {
        *(_QWORD *)(*(_QWORD *)v15 + 8) = 3;
        *(_QWORD *)v15 = 0;
      }
      bmalloc::api::isoDeallocate(v15, v16);
    }
    else
    {
      --*((_DWORD *)v15 + 2);
    }
LABEL_15:
    if (v24 != -1)
      ((void (*)(unsigned __int8 *, bmalloc::api **))off_1E3248478[v24])(v26, &v22);
    return (_BYTE *)v17;
  }
  if (v24 == 1)
  {
    v26[0] = v22;
    v19 = v23;
    v23 = 0;
    v27 = v19;
    if (!*((_QWORD *)v5 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v25, v26);
      v19 = v27;
    }
    v27 = 0;
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v14);
      else
        *(_DWORD *)v19 -= 2;
    }
    v17 = 0;
    goto LABEL_15;
  }
  v20 = std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore18CSSTransitionEvent4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(v20);
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN7WebCore18CSSTransitionEvent4InitENS8_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJSA_SB_EEEEEEDcSF_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *v3;
  WTF::StringImpl *result;

  v3 = (WTF::StringImpl *)*((_QWORD *)a2 + 3);
  *((_QWORD *)a2 + 3) = 0;
  if (v3)
  {
    if (*(_DWORD *)v3 == 2)
      WTF::StringImpl::destroy(v3, a2);
    else
      *(_DWORD *)v3 -= 2;
  }
  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore12CSSTranslateENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 32))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore12CSSTranslateENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore12CSSUnitValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore12CSSUnitValueENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorINS_7variantIJNS8_6StringENS8_6RefPtrIN7WebCore27CSSOMVariableReferenceValueENS8_12RawPtrTraitsISE_EENS8_21DefaultRefDerefTraitsISE_EEEEEEELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSD_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSQ_1EJSN_SO_EEEEEEDcSS_DpT0_(uint64_t a1, unsigned int **a2)
{
  uint64_t v3;
  unsigned int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char v8;

  v3 = *((unsigned int *)a2 + 3);
  v4 = *a2;
  if ((_DWORD)v3)
  {
    v5 = 16 * v3;
    do
    {
      v6 = v4[2];
      if ((_DWORD)v6 != -1)
        result = ((uint64_t (*)(char *, unsigned int *))off_1E32487E0[v6])(&v8, v4);
      v4[2] = -1;
      v4 += 4;
      v5 -= 16;
    }
    while (v5);
    v4 = *a2;
  }
  if (v4)
  {
    *a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return WTF::fastFree((WTF *)v4, a2);
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore27CSSOMVariableReferenceValueENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJS9_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore27CSSOMVariableReferenceValueENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJS9_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  bmalloc::api *v2;
  _DWORD *v3;
  WTF::StringImpl *v4;

  v2 = *(bmalloc::api **)a2;
  *(_QWORD *)a2 = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = (_DWORD *)*((_QWORD *)v2 + 2);
      *((_QWORD *)v2 + 2) = 0;
      if (v3)
      {
        if (v3[2] == 1)
          (*(void (**)(_DWORD *))(*(_QWORD *)v3 + 16))(v3);
        else
          --v3[2];
      }
      v4 = (WTF::StringImpl *)*((_QWORD *)v2 + 1);
      *((_QWORD *)v2 + 1) = 0;
      if (v4)
      {
        if (*(_DWORD *)v4 == 2)
          WTF::StringImpl::destroy(v4, a2);
        else
          *(_DWORD *)v4 -= 2;
      }
      bmalloc::api::isoDeallocate(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6StringENS9_6RefPtrIN7WebCore27CSSOMVariableReferenceValueENS9_12RawPtrTraitsISD_EENS9_21DefaultRefDerefTraitsISD_EEEEEEENSC_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSJ_SK_EEEEEEDcSO_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E32487E0[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

uint64_t WebCore::jsCanvasCaptureMediaStreamTrackPrototypeFunction_requestFrame(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v10;

  v3 = *((_QWORD *)a2 + 5);
  v10 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "CanvasCaptureMediaStreamTrack", "requestFrame");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCanvasCaptureMediaStreamTrack::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCanvasCaptureMediaStreamTrack::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v10, "CanvasCaptureMediaStreamTrack", "requestFrame");
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 24) + 64) + 40) + 8) + 344) = 1;
  return 10;
}

uint64_t WebCore::jsCanvasGradientPrototypeFunction_addColorStop(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  unsigned int *v11;
  uint64_t v12;
  WebCore::ScriptExecutionContext *v13;
  unint64_t v14;
  WTF::StringImpl *v15;
  double v16;
  unint64_t v17;
  JSC::VM *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  uint64_t v23;
  uint64_t v24;
  JSValue v28;
  WTF::StringImpl *v29;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v31;
  double v32;
  JSC::VM *v33;
  uint64_t v34;
  int v35;
  JSC::VM *v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  unint64_t v39;
  WTF::StringImpl *v40;
  char v41;

  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v33 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v33, "CanvasGradient", "addColorStop");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCanvasGradient::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCanvasGradient::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v33, "CanvasGradient", "addColorStop");
  v11 = *(unsigned int **)(v5 + 24);
  v36 = v4;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v28.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v28);
  }
  v12 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if (!v12)
    return 10;
  v13 = (WebCore::ScriptExecutionContext *)v12;
  v14 = *((_QWORD *)a2 + 6);
  v39 = v14;
  v15 = (WTF::StringImpl *)*((_QWORD *)this + 7);
  v37 = v15;
  if (v14 >= 0xFFFE000000000000)
  {
    v16 = (double)(int)v14;
  }
  else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v39, this);
    v16 = v32;
  }
  else
  {
    *(_QWORD *)&v16 = v14 - 0x2000000000000;
  }
  if (*((_DWORD *)v15 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v16 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v17 = *((_QWORD *)a2 + 7);
  v39 = v17;
  v18 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v17 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v17 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v39, this);
  }
  else
  {
    v19 = *(WTF::StringImpl **)(v17 + 8);
    if ((v19 & 1) != 0)
      v19 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v17, this);
    if (v19)
      *(_DWORD *)v19 += 2;
    v37 = v19;
  }
  if (*((_DWORD *)v18 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v18);
    v20 = v37;
    if (hasExceptionsAfterHandlingTraps)
    {
      v35 = 1;
      v37 = 0;
      if (v20)
      {
        if (*(_DWORD *)v20 == 2)
          WTF::StringImpl::destroy(v20, v29);
        else
          *(_DWORD *)v20 -= 2;
      }
      v23 = 0;
      v24 = 1;
      goto LABEL_30;
    }
  }
  else
  {
    v20 = v37;
  }
  v35 = 0;
  v34 = 0;
  v37 = v20;
  WebCore::CanvasGradient::addColorStop(v11, v13, v16, (unsigned int **)&v37, (uint64_t)&v39);
  v22 = v37;
  v37 = 0;
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v21);
    else
      *(_DWORD *)v22 -= 2;
  }
  if (v41)
  {
    LOBYTE(v37) = v39;
    v31 = v40;
    v38 = v40;
    if (!*((_QWORD *)v4 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v36, (unsigned __int8 *)&v37);
      v31 = v38;
    }
    v38 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 2)
        WTF::StringImpl::destroy(v31, v21);
      else
        *(_DWORD *)v31 -= 2;
    }
    v23 = 0;
  }
  else
  {
    v23 = 10;
  }
  v24 = 0;
LABEL_30:
  ((void (*)(unint64_t *, uint64_t *))off_1E3238AF8[v24])(&v39, &v34);
  return v23;
}

uint64_t WebCore::jsCanvasPatternPrototypeFunction_setTransform(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  double *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  JSC::VM *v23;
  JSC::VM *v24;
  WTF::StringImpl *v25[2];
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[8];
  WTF::StringImpl *v38;
  char v39;
  _BYTE v40[8];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  int v53;
  uint64_t v54;

  v54 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v23 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v23, "CanvasPattern", "setTransform");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCanvasPattern::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCanvasPattern::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v23, "CanvasPattern", "setTransform");
  v11 = *(_QWORD *)(v5 + 24);
  v24 = v4;
  if (*((_DWORD *)a2 + 8) == 1)
    v12 = 10;
  else
    v12 = *((_QWORD *)a2 + 6);
  WebCore::convertDictionary<WebCore::DOMMatrix2DInit>((JSC::JSCell *)v12, (uint64_t)this, (uint64_t)v40);
  if (v53)
    return 0;
  v34 = v50;
  v35 = v51;
  v36 = v52;
  v29 = v45;
  v30 = v46;
  v31 = v47;
  v32 = v48;
  v33 = v49;
  *(_OWORD *)v25 = v41;
  v26 = v42;
  v27 = v43;
  v28 = v44;
  WebCore::DOMMatrixReadOnly::validateAndFixup((uint64_t)v25, (uint64_t)v37);
  if (v39)
  {
    v14 = v38;
    LOBYTE(v25[0]) = v37[0];
    v25[1] = v38;
    if (!*((_QWORD *)v4 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v24, (unsigned __int8 *)v25);
      v14 = v25[1];
    }
    v25[1] = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v13);
      else
        *(_DWORD *)v14 -= 2;
    }
    return 0;
  }
  v16 = *(double **)(v11 + 8);
  v17 = *(double *)v25;
  v18 = 1.0;
  if (!LOBYTE(v25[1]))
    v17 = 1.0;
  v19 = *(double *)&v26;
  v20 = 0.0;
  if (!BYTE8(v26))
    v19 = 0.0;
  v21 = *(double *)&v27;
  if (!BYTE8(v27))
    v21 = 0.0;
  if (BYTE8(v28))
    v18 = *(double *)&v28;
  v22 = *(double *)&v29;
  if (!BYTE8(v29))
    v22 = 0.0;
  if (BYTE8(v30))
    v20 = *(double *)&v30;
  v16[7] = v17;
  v16[8] = v19;
  v16[9] = v21;
  v16[10] = v18;
  v16[11] = v22;
  v16[12] = v20;
  return 10;
}

_BYTE *WebCore::jsCanvasRenderingContext2DPrototypeFunction_getContextAttributes(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  unint64_t v5;
  _DWORD *v6;
  uint64_t v7;
  WebCore::JSDOMGlobalObject *v8;
  unint64_t v9;
  size_t v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  WTF::StringImpl *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  uint64_t v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  unsigned __int8 *v35;
  unsigned int v36;
  unsigned int v37;
  WebCore::InspectorInstrumentation *v38;
  WebCore::ScriptExecutionContext *v39;
  uint64_t v40;
  uint64_t v41;
  WTF::StringImpl *v42;
  uint64_t v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  unint64_t v46;
  int v47;
  int v48;
  uint64_t v49;

  v4 = *((_QWORD *)this + 7);
  v43 = v4;
  v5 = JSC::jsDynamicCast<WebCore::JSCanvasRenderingContext2D *>(*((_QWORD *)a2 + 5));
  if (!v5)
    return WebCore::throwThisTypeError((int)this, (int)&v43, "CanvasRenderingContext2D", "getContextAttributes");
  v6 = (_DWORD *)v5;
  v7 = *(_QWORD *)(v5 + 24);
  if (*(_BYTE *)(v7 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v45 = 0;
    v46 = 0;
    v38 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v7 + 32) + 144))(*(_QWORD *)(v7 + 32));
    if (v38)
    {
      v40 = WebCore::InspectorInstrumentation::instrumentingAgents(v38, v39);
      if (v40)
      {
        v41 = *(_QWORD *)(v40 + 96);
        if (v41)
          WebCore::InspectorCanvasAgent::recordAction(v41, (WebCore::CanvasRenderingContext *)v7, (const WTF::StringImpl *)&v44, &v45);
      }
    }
    v42 = v44;
    v44 = 0;
    if (v42)
    {
      if (*(_DWORD *)v42 == 2)
        WTF::StringImpl::destroy(v42, v39);
      else
        *(_DWORD *)v42 -= 2;
    }
    v4 = *((_QWORD *)this + 7);
  }
  v8 = *(WebCore::JSDOMGlobalObject **)(16 * (*v6 & 0xFFFFFFFE) + 0x28);
  v9 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v10 = 8 * *(unsigned __int8 *)(v9 + 14);
  v11 = JSC::allocateCell<JSC::JSFinalObject>(v4, v10 + 16);
  v12 = *(_DWORD *)(v9 + 8);
  *(_DWORD *)v11 = v9 >> 4;
  *(_DWORD *)(v11 + 4) = v12;
  *(_QWORD *)(v11 + 8) = 0;
  bzero((void *)(v11 + 16), v10);
  if (*(_BYTE *)(v4 + 755))
    __dmb(0xAu);
  v13 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v8);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 136))(v13) + 432) & 0x200000000000) != 0)
  {
    v14 = WebCore::convertEnumerationToJS<WebCore::PredefinedColorSpace>(*((_QWORD *)this + 7), (WTF::StringImpl *)*(unsigned __int8 *)(v7 + 802));
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v15 = v45;
    v45 = 0;
    v46 = v11;
    v47 = -1;
    v48 = 0x1000000;
    v49 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v11, (JSC::VM *)v4, (unint64_t)v15, v14, 0, (uint64_t)&v45);
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v16);
      else
        *(_DWORD *)v15 -= 2;
    }
  }
  if (*(_BYTE *)(v7 + 800))
    v17 = 7;
  else
    v17 = 6;
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v18 = v45;
  v45 = 0;
  v46 = v11;
  v47 = -1;
  v48 = 0x1000000;
  v49 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v11, (JSC::VM *)v4, (unint64_t)v18, v17, 0, (uint64_t)&v45);
  if (v18)
  {
    if (*(_DWORD *)v18 == 2)
      WTF::StringImpl::destroy(v18, v19);
    else
      *(_DWORD *)v18 -= 2;
  }
  v20 = WebCore::JSDOMGlobalObject::scriptExecutionContext(v8);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v20 + 136))(v20) + 440) & 0x80000000000000) != 0
    && *(_BYTE *)(v7 + 808))
  {
    v22 = *(int *)(v7 + 804);
    v23 = *((_QWORD *)this + 7);
    v24 = (uint64_t *)(v23 + 41968);
    if ((byte_1EE334E0A & 1) == 0)
    {
      unk_1EE334EA0 = &dword_1ECE77230;
      dword_1ECE77230 += 2;
      dword_1ECE77250 += 2;
      unk_1EE334EA8 = &dword_1ECE77250;
      byte_1EE334E0A = 1;
    }
    v25 = *(_QWORD *)&_MergedGlobals_823[8 * v22 + 152];
    if (!v25)
    {
      v28 = *v24;
LABEL_29:
      if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
        return 0;
      WTF::AtomStringImpl::addLiteral();
      v29 = v45;
      v45 = 0;
      v46 = v11;
      v47 = -1;
      v48 = 0x1000000;
      v49 = 0;
      JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v11, (JSC::VM *)v4, (unint64_t)v29, v28, 0, (uint64_t)&v45);
      if (v29)
      {
        if (*(_DWORD *)v29 == 2)
          WTF::StringImpl::destroy(v29, v30);
        else
          *(_DWORD *)v29 -= 2;
      }
      goto LABEL_33;
    }
    v26 = *(_DWORD *)v25;
    v27 = *(_DWORD *)(v25 + 4);
    *(_DWORD *)v25 += 2;
    if (v27)
    {
      if (v27 != 1)
      {
LABEL_24:
        v28 = *(_QWORD *)(v23 + 64760);
        if (!v28 || v25 != *(_QWORD *)(v28 + 8))
        {
          v28 = JSC::jsStringWithCacheSlowCase();
          v26 = *(_DWORD *)v25 - 2;
        }
        goto LABEL_27;
      }
      v35 = *(unsigned __int8 **)(v25 + 8);
      if ((*(_BYTE *)(v25 + 16) & 4) != 0)
      {
        v36 = *v35;
      }
      else
      {
        v37 = *(unsigned __int16 *)v35;
        if (v37 > 0xFF)
          goto LABEL_24;
        v36 = v37;
      }
      v28 = *(_QWORD *)(v23 + 8 * v36 + 42216);
    }
    else
    {
      v28 = *v24;
    }
LABEL_27:
    if (v26)
      *(_DWORD *)v25 = v26;
    else
      WTF::StringImpl::destroy((WTF::StringImpl *)v25, v21);
    goto LABEL_29;
  }
LABEL_33:
  if (*(_BYTE *)(v7 + 801))
    v31 = 7;
  else
    v31 = 6;
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v32 = v45;
  v45 = 0;
  v46 = v11;
  v47 = -1;
  v48 = 0x1000000;
  v49 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v11, (JSC::VM *)v4, (unint64_t)v32, v31, 0, (uint64_t)&v45);
  if (v32)
  {
    if (*(_DWORD *)v32 == 2)
      WTF::StringImpl::destroy(v32, v33);
    else
      *(_DWORD *)v32 -= 2;
  }
  return (_BYTE *)v11;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_setAlpha(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  double v9;
  double v10;
  float v11;
  WebCore::InspectorInstrumentation *v13;
  WebCore::ScriptExecutionContext *v14;
  uint64_t v15;
  WebCore::InspectorCanvasAgent *v16;
  WebCore::InspectorInstrumentation *v17;
  WebCore::ScriptExecutionContext *v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  WTF::StringImpl *v22;
  JSC::VM *v23;
  _QWORD v24[2];
  WTF::StringImpl *v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v23 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSCanvasRenderingContext2D *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v23, "CanvasRenderingContext2D", "setAlpha");
  v7 = *(_QWORD *)(v6 + 24);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v26[0] = 10;
LABEL_7:
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v26, this);
    v9 = v10;
    goto LABEL_8;
  }
  v8 = *((_QWORD *)a2 + 6);
  v26[0] = v8;
  if (v8 >= 0xFFFE000000000000)
  {
    v9 = (double)(int)v8;
    goto LABEL_8;
  }
  if (v8 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    goto LABEL_7;
  *(_QWORD *)&v9 = v8 - 0x2000000000000;
LABEL_8:
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  if (v9 < -3.40282347e38)
  {
    v11 = -INFINITY;
  }
  else if (v9 <= 3.40282347e38)
  {
    v11 = v9;
  }
  else
  {
    v11 = INFINITY;
  }
  if (*(_BYTE *)(v7 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v13 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v7 + 32) + 144))(*(_QWORD *)(v7 + 32));
    if (v13
      && (v15 = WebCore::InspectorInstrumentation::instrumentingAgents(v13, v14)) != 0
      && (v16 = *(WebCore::InspectorCanvasAgent **)(v15 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v16, (WebCore::CanvasRenderingContext *)v7, v11, (uint64_t)v26);
    }
    else
    {
      LOBYTE(v26[0]) = 0;
      v27 = 0;
    }
    v24[0] = v26;
    v24[1] = 1;
    v17 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v7 + 32) + 144))(*(_QWORD *)(v7 + 32));
    if (v17)
    {
      v19 = WebCore::InspectorInstrumentation::instrumentingAgents(v17, v18);
      if (v19)
      {
        v20 = *(_QWORD *)(v19 + 96);
        if (v20)
          WebCore::InspectorCanvasAgent::recordAction(v20, (WebCore::CanvasRenderingContext *)v7, (const WTF::StringImpl *)&v25, v24);
      }
    }
    if (v27)
    {
      v21 = (_DWORD *)v26[0];
      v26[0] = 0;
      if (v21)
      {
        if (*v21 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v21;
      }
    }
    v22 = v25;
    v25 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, v18);
      else
        *(_DWORD *)v22 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::setGlobalAlpha(v7, v11);
  return 10;
}

_BYTE *WebCore::jsCanvasRenderingContext2DPrototypeFunction_setCompositeOperation(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  int v13;
  uint64_t v14;
  WebCore::InspectorInstrumentation *v16;
  WebCore::ScriptExecutionContext *v17;
  uint64_t v18;
  WebCore::InspectorCanvasAgent *v19;
  WebCore::InspectorInstrumentation *v20;
  WebCore::ScriptExecutionContext *v21;
  uint64_t v22;
  uint64_t v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  int hasExceptionsAfterHandlingTraps;
  WebCore *v28;
  JSC::JSGlobalObject *v29;
  JSC::CallFrame *v30;
  JSC::VM *v31;
  WTF::StringImpl *v32[2];
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  int v35;
  WTF::StringImpl *v36[2];
  char v37;
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v31 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSCanvasRenderingContext2D *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "CanvasRenderingContext2D", "setCompositeOperation");
  v7 = *(_QWORD *)(v6 + 24);
  if (*((_DWORD *)a2 + 8) == 1 || (v8 = *((_QWORD *)a2 + 6), v8 == 10))
  {
    v9 = 0;
    v34 = 0;
    v35 = 0;
    goto LABEL_14;
  }
  v36[0] = (WTF::StringImpl *)v8;
  if ((v8 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v8 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v36, this);
    goto LABEL_11;
  }
  v10 = *(WTF::StringImpl **)(v8 + 8);
  if ((v10 & 1) != 0)
  {
    v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v8, this);
    if (!v10)
      goto LABEL_10;
    goto LABEL_9;
  }
  if (v10)
LABEL_9:
    *(_DWORD *)v10 += 2;
LABEL_10:
  v32[0] = v10;
LABEL_11:
  if (*((_DWORD *)v5 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    v9 = v32[0];
    if (hasExceptionsAfterHandlingTraps)
    {
      v35 = 1;
      v32[0] = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 2)
          WTF::StringImpl::destroy(v9, v26);
        else
          *(_DWORD *)v9 -= 2;
      }
      v14 = 0;
      v13 = 1;
LABEL_19:
      ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3238AF8[v13])(v36, &v34);
      return (_BYTE *)v14;
    }
  }
  else
  {
    v9 = v32[0];
  }
  v34 = v9;
  v35 = 0;
LABEL_14:
  if (!*(_BYTE *)(v7 + 25))
    goto LABEL_15;
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v16 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v7 + 32) + 144))(*(_QWORD *)(v7 + 32));
  if (v16
    && (v18 = WebCore::InspectorInstrumentation::instrumentingAgents(v16, v17)) != 0
    && (v19 = *(WebCore::InspectorCanvasAgent **)(v18 + 96)) != 0)
  {
    WebCore::InspectorCanvasAgent::processArgument(v19, (WebCore::CanvasRenderingContext *)v7, (int **)&v34, (uint64_t)v36);
  }
  else
  {
    LOBYTE(v36[0]) = 0;
    v37 = 0;
  }
  v32[0] = (WTF::StringImpl *)v36;
  v32[1] = (WTF::StringImpl *)1;
  v20 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v7 + 32) + 144))(*(_QWORD *)(v7 + 32));
  if (v20)
  {
    v22 = WebCore::InspectorInstrumentation::instrumentingAgents(v20, v21);
    if (v22)
    {
      v23 = *(_QWORD *)(v22 + 96);
      if (v23)
        WebCore::InspectorCanvasAgent::recordAction(v23, (WebCore::CanvasRenderingContext *)v7, (const WTF::StringImpl *)&v33, v32);
    }
  }
  if (v37)
  {
    v24 = v36[0];
    v36[0] = 0;
    if (v24)
    {
      if (*(_DWORD *)v24 == 1)
        WTF::JSONImpl::Value::operator delete();
      else
        --*(_DWORD *)v24;
    }
  }
  v25 = v33;
  v33 = 0;
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v21);
    else
      *(_DWORD *)v25 -= 2;
  }
  if (!v35)
  {
    v9 = v34;
LABEL_15:
    v34 = 0;
    v36[0] = v9;
    WebCore::CanvasRenderingContext2DBase::setGlobalCompositeOperation((WebCore::CanvasRenderingContext2DBase *)v7, (const WTF::String *)v36);
    v12 = v36[0];
    v36[0] = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 2)
        WTF::StringImpl::destroy(v12, v11);
      else
        *(_DWORD *)v12 -= 2;
    }
    v13 = v35;
    v14 = 10;
    if (v35 == -1)
      return (_BYTE *)v14;
    goto LABEL_19;
  }
  v28 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsCanvasRenderingContext2DPrototypeFunction_drawImageFromRect(v28, v29, v30);
}

_BYTE *WebCore::jsCanvasRenderingContext2DPrototypeFunction_drawImageFromRect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  double v3;
  uint64_t v4;
  JSC::VM *v6;
  unint64_t v7;
  JSC::JSGlobalObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  float v14;
  unint64_t v15;
  unint64_t v16;
  double v17;
  float v18;
  unint64_t v19;
  double v20;
  float v21;
  unint64_t v22;
  double v23;
  float v24;
  double v25;
  float v26;
  unint64_t v27;
  double v28;
  float v29;
  unint64_t v30;
  double v31;
  float v32;
  unint64_t v33;
  double v34;
  uint64_t v35;
  WTF::StringImpl *v36;
  int *v37;
  int *v38;
  WTF::StringImpl *v39;
  WTF::StringImpl *v40;
  int v41;
  uint64_t v42;
  JSValue v45;
  WebCore::InspectorInstrumentation *v46;
  WebCore::ScriptExecutionContext *v47;
  uint64_t v48;
  unsigned int *v49;
  WebCore::InspectorInstrumentation *v50;
  WebCore::ScriptExecutionContext *v51;
  uint64_t v52;
  WebCore::InspectorCanvasAgent *v53;
  WebCore::InspectorInstrumentation *v54;
  WebCore::ScriptExecutionContext *v55;
  uint64_t v56;
  WebCore::InspectorCanvasAgent *v57;
  WebCore::InspectorInstrumentation *v58;
  WebCore::ScriptExecutionContext *v59;
  uint64_t v60;
  WebCore::InspectorCanvasAgent *v61;
  WebCore::InspectorInstrumentation *v62;
  WebCore::ScriptExecutionContext *v63;
  uint64_t v64;
  WebCore::InspectorCanvasAgent *v65;
  WebCore::InspectorInstrumentation *v66;
  WebCore::ScriptExecutionContext *v67;
  uint64_t v68;
  WebCore::InspectorCanvasAgent *v69;
  WebCore::InspectorInstrumentation *v70;
  WebCore::ScriptExecutionContext *v71;
  uint64_t v72;
  WebCore::InspectorCanvasAgent *v73;
  WebCore::InspectorInstrumentation *v74;
  WebCore::ScriptExecutionContext *v75;
  uint64_t v76;
  WebCore::InspectorCanvasAgent *v77;
  WebCore::InspectorInstrumentation *v78;
  WebCore::ScriptExecutionContext *v79;
  uint64_t v80;
  WebCore::InspectorCanvasAgent *v81;
  WebCore::InspectorInstrumentation *v82;
  WebCore::ScriptExecutionContext *v83;
  uint64_t v84;
  WebCore::InspectorCanvasAgent *v85;
  WebCore::InspectorInstrumentation *v86;
  WebCore::ScriptExecutionContext *v87;
  uint64_t v88;
  uint64_t v89;
  _DWORD *v90;
  _DWORD *v91;
  _DWORD *v92;
  _DWORD *v93;
  _DWORD *v94;
  _DWORD *v95;
  _DWORD *v96;
  _DWORD *v97;
  _DWORD *v98;
  WTF::StringImpl *v99;
  WTF::StringImpl *v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  WTF::StringImpl *v106;
  char hasExceptionsAfterHandlingTraps;
  int v108;
  int v109;
  int v110;
  double v111;
  double v112;
  double v113;
  double v114;
  double v115;
  double v116;
  double v117;
  double v118;
  WebCore::HTMLImageElement *v119;
  uint64_t v120;
  JSC::VM *v121;
  int *v122;
  int v123;
  WTF::StringImpl *v124;
  unsigned __int8 v125;
  WTF::StringImpl *v126;
  float v127;
  float v128;
  WTF::StringImpl *v129;
  unint64_t v130;
  char v131;
  unsigned __int8 v132;
  WTF::StringImpl *v133;
  WTF::StringImpl *v134;
  char v135;
  _DWORD *v136;
  char v137;
  _DWORD *v138;
  char v139;
  _DWORD *v140;
  char v141;
  _DWORD *v142;
  char v143;
  _DWORD *v144;
  char v145;
  _DWORD *v146;
  char v147;
  _DWORD *v148;
  char v149;
  _DWORD *v150;
  char v151;
  _DWORD *v152;
  char v153;
  uint64_t v154;

  v4 = (uint64_t)a2;
  v154 = *MEMORY[0x1E0C80C00];
  v6 = (JSC::VM *)*((_QWORD *)this + 7);
  v121 = v6;
  v7 = JSC::jsDynamicCast<WebCore::JSCanvasRenderingContext2D *>(*((_QWORD *)a2 + 5));
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v121, "CanvasRenderingContext2D", "drawImageFromRect");
  v9 = *(int *)(v4 + 32);
  if ((_DWORD)v9 == 1)
  {
    v45.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v8);
    return (_BYTE *)JSC::VM::throwException(v6, this, v45);
  }
  v120 = *(_QWORD *)(v7 + 24);
  v10 = *(_QWORD *)(v4 + 48);
  v133 = v6;
  v11 = WebCore::JSHTMLImageElement::toWrapped((uint64_t)v6, v10);
  if (v11)
  {
    v13 = v11;
    v14 = 0.0;
    if ((unint64_t)(v9 - 3) > 0xFFFFFFFFFFFFFFFDLL || (v15 = *(_QWORD *)(v4 + 56), v15 == 10))
    {
      LODWORD(v3) = 0;
      goto LABEL_15;
    }
    v133 = *(WTF::StringImpl **)(v4 + 56);
    if (v15 >= 0xFFFE000000000000)
    {
      v3 = (double)(int)v15;
    }
    else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v133, this);
      v3 = v111;
    }
    else
    {
      *(_QWORD *)&v3 = v15 - 0x2000000000000;
    }
    if (*((_DWORD *)v6 + 20))
      goto LABEL_237;
    while (v3 >= -3.40282347e38)
    {
      if (v3 > 3.40282347e38)
      {
        v101 = 2139095040;
        goto LABEL_266;
      }
      *(float *)&v3 = v3;
LABEL_13:
      v9 = *(int *)(v4 + 32);
LABEL_15:
      if ((unint64_t)(v9 - 4) <= 0xFFFFFFFFFFFFFFFCLL)
      {
        v16 = *(_QWORD *)(v4 + 64);
        if (v16 != 10)
        {
          v133 = *(WTF::StringImpl **)(v4 + 64);
          v6 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v16 >= 0xFFFE000000000000)
          {
            v17 = (double)(int)v16;
          }
          else if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v133, this);
            v17 = v112;
          }
          else
          {
            *(_QWORD *)&v17 = v16 - 0x2000000000000;
          }
          if (*((_DWORD *)v6 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) != 0)
            return 0;
          if (v17 < -3.40282347e38)
          {
            v102 = -8388608;
          }
          else
          {
            if (v17 <= 3.40282347e38)
            {
              v14 = v17;
LABEL_24:
              v9 = *(int *)(v4 + 32);
              goto LABEL_25;
            }
            v102 = 2139095040;
          }
          LODWORD(v14) = v102;
          goto LABEL_24;
        }
      }
LABEL_25:
      v18 = 0.0;
      if ((unint64_t)(v9 - 5) > 0xFFFFFFFFFFFFFFFBLL || (v19 = *(_QWORD *)(v4 + 72), v19 == 10))
      {
        v21 = 0.0;
        goto LABEL_36;
      }
      v133 = *(WTF::StringImpl **)(v4 + 72);
      v6 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v19 >= 0xFFFE000000000000)
      {
        v20 = (double)(int)v19;
      }
      else if (v19 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v133, this);
        v20 = v113;
      }
      else
      {
        *(_QWORD *)&v20 = v19 - 0x2000000000000;
      }
      if (*((_DWORD *)v6 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) != 0)
        return 0;
      if (v20 < -3.40282347e38)
      {
        v103 = -8388608;
LABEL_271:
        LODWORD(v21) = v103;
        goto LABEL_34;
      }
      if (v20 > 3.40282347e38)
      {
        v103 = 2139095040;
        goto LABEL_271;
      }
      v21 = v20;
LABEL_34:
      v9 = *(int *)(v4 + 32);
LABEL_36:
      if ((unint64_t)(v9 - 6) <= 0xFFFFFFFFFFFFFFFALL)
      {
        v22 = *(_QWORD *)(v4 + 80);
        if (v22 != 10)
        {
          v133 = *(WTF::StringImpl **)(v4 + 80);
          v6 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v22 >= 0xFFFE000000000000)
          {
            v23 = (double)(int)v22;
          }
          else if (v22 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v133, this);
            v23 = v114;
          }
          else
          {
            *(_QWORD *)&v23 = v22 - 0x2000000000000;
          }
          if (*((_DWORD *)v6 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) != 0)
            return 0;
          if (v23 < -3.40282347e38)
          {
            v104 = -8388608;
          }
          else
          {
            if (v23 <= 3.40282347e38)
            {
              v18 = v23;
LABEL_45:
              v9 = *(int *)(v4 + 32);
              goto LABEL_46;
            }
            v104 = 2139095040;
          }
          LODWORD(v18) = v104;
          goto LABEL_45;
        }
      }
LABEL_46:
      v119 = (WebCore::HTMLImageElement *)v13;
      v24 = 0.0;
      if ((unint64_t)(v9 - 7) > 0xFFFFFFFFFFFFFFF9)
      {
        v13 = 10;
LABEL_57:
        v26 = 0.0;
        goto LABEL_58;
      }
      v13 = *(_QWORD *)(v4 + 88);
      if (v13 == 10)
        goto LABEL_57;
      v133 = *(WTF::StringImpl **)(v4 + 88);
      v6 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v13 >= 0xFFFE000000000000)
      {
        v25 = (double)(int)v13;
      }
      else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v133, this);
        v25 = v115;
      }
      else
      {
        *(_QWORD *)&v25 = v13 - 0x2000000000000;
      }
      if (*((_DWORD *)v6 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) != 0)
        return 0;
      if (v25 < -3.40282347e38)
      {
        v105 = -8388608;
LABEL_275:
        LODWORD(v26) = v105;
        goto LABEL_55;
      }
      if (v25 > 3.40282347e38)
      {
        v105 = 2139095040;
        goto LABEL_275;
      }
      v26 = v25;
LABEL_55:
      v9 = *(int *)(v4 + 32);
LABEL_58:
      if ((unint64_t)(v9 - 8) <= 0xFFFFFFFFFFFFFFF8)
      {
        v27 = *(_QWORD *)(v4 + 96);
        if (v27 != 10)
        {
          v133 = *(WTF::StringImpl **)(v4 + 96);
          v6 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v27 >= 0xFFFE000000000000)
          {
            v28 = (double)(int)v27;
          }
          else if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v133, this);
            v28 = v116;
          }
          else
          {
            *(_QWORD *)&v28 = v27 - 0x2000000000000;
          }
          if (*((_DWORD *)v6 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) != 0)
            return 0;
          if (v28 < -3.40282347e38)
          {
            v108 = -8388608;
          }
          else
          {
            if (v28 <= 3.40282347e38)
            {
              v24 = v28;
LABEL_67:
              v9 = *(int *)(v4 + 32);
              goto LABEL_68;
            }
            v108 = 2139095040;
          }
          LODWORD(v24) = v108;
          goto LABEL_67;
        }
      }
LABEL_68:
      v29 = 0.0;
      if ((unint64_t)(v9 - 9) > 0xFFFFFFFFFFFFFFF7 || (v30 = *(_QWORD *)(v4 + 104), v30 == 10))
      {
        v32 = 0.0;
        goto LABEL_79;
      }
      v133 = *(WTF::StringImpl **)(v4 + 104);
      v6 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v30 >= 0xFFFE000000000000)
      {
        v31 = (double)(int)v30;
      }
      else if (v30 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v133, this);
        v31 = v117;
      }
      else
      {
        *(_QWORD *)&v31 = v30 - 0x2000000000000;
      }
      if (*((_DWORD *)v6 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) != 0)
        return 0;
      if (v31 < -3.40282347e38)
      {
        *(float *)&v109 = -INFINITY;
LABEL_279:
        v32 = *(float *)&v109;
        goto LABEL_77;
      }
      if (v31 > 3.40282347e38)
      {
        *(float *)&v109 = INFINITY;
        goto LABEL_279;
      }
      v32 = v31;
LABEL_77:
      v9 = *(int *)(v4 + 32);
LABEL_79:
      if ((unint64_t)(v9 - 10) <= 0xFFFFFFFFFFFFFFF6)
      {
        v33 = *(_QWORD *)(v4 + 112);
        if (v33 != 10)
        {
          v133 = *(WTF::StringImpl **)(v4 + 112);
          v6 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v33 >= 0xFFFE000000000000)
          {
            v34 = (double)(int)v33;
          }
          else if (v33 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v133, this);
            v34 = v118;
          }
          else
          {
            *(_QWORD *)&v34 = v33 - 0x2000000000000;
          }
          if (*((_DWORD *)v6 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) != 0)
            return 0;
          if (v34 < -3.40282347e38)
          {
            *(float *)&v110 = -INFINITY;
          }
          else
          {
            if (v34 <= 3.40282347e38)
            {
              v29 = v34;
LABEL_88:
              v9 = *(int *)(v4 + 32);
              goto LABEL_89;
            }
            *(float *)&v110 = INFINITY;
          }
          v29 = *(float *)&v110;
          goto LABEL_88;
        }
      }
LABEL_89:
      if ((unint64_t)(v9 - 11) >= 0xFFFFFFFFFFFFFFF6)
      {
        v35 = v120;
LABEL_101:
        v38 = (int *)*MEMORY[0x1E0CBF738];
        if (*MEMORY[0x1E0CBF738])
          *v38 += 2;
        v122 = v38;
        v123 = 0;
        v4 = 10;
        goto LABEL_104;
      }
      v4 = *(_QWORD *)(v4 + 120);
      v35 = v120;
      if (v4 == 10)
        goto LABEL_101;
      v133 = (WTF::StringImpl *)v4;
      v6 = (JSC::VM *)*((_QWORD *)this + 7);
      if ((v4 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v4 + 5) != 2)
      {
        JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v133, this);
        goto LABEL_97;
      }
      v36 = *(WTF::StringImpl **)(v4 + 8);
      if ((v36 & 1) != 0)
      {
        v36 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v4, this);
        if (!v36)
          goto LABEL_96;
LABEL_95:
        *(_DWORD *)v36 += 2;
        goto LABEL_96;
      }
      if (v36)
        goto LABEL_95;
LABEL_96:
      v129 = v36;
LABEL_97:
      if (!*((_DWORD *)v6 + 20))
      {
        v37 = (int *)v129;
LABEL_99:
        v122 = v37;
        v123 = 0;
        goto LABEL_104;
      }
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v6);
      v37 = (int *)v129;
      if ((hasExceptionsAfterHandlingTraps & 1) == 0)
        goto LABEL_99;
      v123 = 1;
      v129 = 0;
      if (!v37)
        goto LABEL_262;
      if (*v37 != 2)
      {
        *v37 -= 2;
LABEL_262:
        v42 = 0;
        v41 = 1;
LABEL_117:
        ((void (*)(WTF::StringImpl **, int **))off_1E3238AF8[v41])(&v133, &v122);
        return (_BYTE *)v42;
      }
      WTF::StringImpl::destroy((WTF::StringImpl *)v37, v106);
      v41 = v123;
      if (v123)
      {
        v42 = 0;
LABEL_116:
        if (v41 == -1)
          return (_BYTE *)v42;
        goto LABEL_117;
      }
      v35 = v120;
LABEL_104:
      if (!*(_BYTE *)(v35 + 25))
        goto LABEL_105;
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v126 = v133;
      v46 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v35 + 32) + 144))(*(_QWORD *)(v35 + 32));
      if (v46
        && (v48 = WebCore::InspectorInstrumentation::instrumentingAgents(v46, v47)) != 0
        && (v49 = *(unsigned int **)(v48 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v49, (WebCore::CanvasRenderingContext *)v35, v119, (uint64_t)&v133);
      }
      else
      {
        LOBYTE(v133) = 0;
        v135 = 0;
      }
      v50 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v35 + 32) + 144))(*(_QWORD *)(v35 + 32));
      if (v50
        && (v52 = WebCore::InspectorInstrumentation::instrumentingAgents(v50, v51)) != 0
        && (v53 = *(WebCore::InspectorCanvasAgent **)(v52 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v53, (WebCore::CanvasRenderingContext *)v35, *(float *)&v3, (uint64_t)&v136);
      }
      else
      {
        LOBYTE(v136) = 0;
        v137 = 0;
      }
      v54 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v35 + 32) + 144))(*(_QWORD *)(v35 + 32));
      if (v54
        && (v56 = WebCore::InspectorInstrumentation::instrumentingAgents(v54, v55)) != 0
        && (v57 = *(WebCore::InspectorCanvasAgent **)(v56 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v57, (WebCore::CanvasRenderingContext *)v35, v14, (uint64_t)&v138);
      }
      else
      {
        LOBYTE(v138) = 0;
        v139 = 0;
      }
      v58 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v35 + 32) + 144))(*(_QWORD *)(v35 + 32));
      if (v58
        && (v60 = WebCore::InspectorInstrumentation::instrumentingAgents(v58, v59)) != 0
        && (v61 = *(WebCore::InspectorCanvasAgent **)(v60 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v61, (WebCore::CanvasRenderingContext *)v35, v21, (uint64_t)&v140);
      }
      else
      {
        LOBYTE(v140) = 0;
        v141 = 0;
      }
      v62 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v35 + 32) + 144))(*(_QWORD *)(v35 + 32));
      if (v62
        && (v64 = WebCore::InspectorInstrumentation::instrumentingAgents(v62, v63)) != 0
        && (v65 = *(WebCore::InspectorCanvasAgent **)(v64 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v65, (WebCore::CanvasRenderingContext *)v35, v18, (uint64_t)&v142);
      }
      else
      {
        LOBYTE(v142) = 0;
        v143 = 0;
      }
      v66 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v35 + 32) + 144))(*(_QWORD *)(v35 + 32));
      if (v66
        && (v68 = WebCore::InspectorInstrumentation::instrumentingAgents(v66, v67)) != 0
        && (v69 = *(WebCore::InspectorCanvasAgent **)(v68 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v69, (WebCore::CanvasRenderingContext *)v35, v26, (uint64_t)&v144);
      }
      else
      {
        LOBYTE(v144) = 0;
        v145 = 0;
      }
      v70 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v35 + 32) + 144))(*(_QWORD *)(v35 + 32));
      if (v70
        && (v72 = WebCore::InspectorInstrumentation::instrumentingAgents(v70, v71)) != 0
        && (v73 = *(WebCore::InspectorCanvasAgent **)(v72 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v73, (WebCore::CanvasRenderingContext *)v35, v24, (uint64_t)&v146);
      }
      else
      {
        LOBYTE(v146) = 0;
        v147 = 0;
      }
      v74 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v35 + 32) + 144))(*(_QWORD *)(v35 + 32));
      if (v74
        && (v76 = WebCore::InspectorInstrumentation::instrumentingAgents(v74, v75)) != 0
        && (v77 = *(WebCore::InspectorCanvasAgent **)(v76 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v77, (WebCore::CanvasRenderingContext *)v35, v32, (uint64_t)&v148);
      }
      else
      {
        LOBYTE(v148) = 0;
        v149 = 0;
      }
      v78 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v35 + 32) + 144))(*(_QWORD *)(v35 + 32));
      if (v78
        && (v80 = WebCore::InspectorInstrumentation::instrumentingAgents(v78, v79)) != 0
        && (v81 = *(WebCore::InspectorCanvasAgent **)(v80 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v81, (WebCore::CanvasRenderingContext *)v35, v29, (uint64_t)&v150);
      }
      else
      {
        LOBYTE(v150) = 0;
        v151 = 0;
      }
      if (!v123)
      {
        v82 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v35 + 32) + 144))(*(_QWORD *)(v35 + 32));
        if (v82
          && (v84 = WebCore::InspectorInstrumentation::instrumentingAgents(v82, v83)) != 0
          && (v85 = *(WebCore::InspectorCanvasAgent **)(v84 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v85, (WebCore::CanvasRenderingContext *)v35, &v122, (uint64_t)&v152);
        }
        else
        {
          LOBYTE(v152) = 0;
          v153 = 0;
        }
        v129 = (WTF::StringImpl *)&v133;
        v130 = 10;
        v86 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v35 + 32) + 144))(*(_QWORD *)(v35 + 32));
        if (v86)
        {
          v88 = WebCore::InspectorInstrumentation::instrumentingAgents(v86, v87);
          if (v88)
          {
            v89 = *(_QWORD *)(v88 + 96);
            if (v89)
              WebCore::InspectorCanvasAgent::recordAction(v89, (WebCore::CanvasRenderingContext *)v35, (const WTF::StringImpl *)&v126, &v129);
          }
        }
        if (v153)
        {
          v90 = v152;
          v152 = 0;
          if (v90)
          {
            if (*v90 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v90;
          }
        }
        if (v151)
        {
          v91 = v150;
          v150 = 0;
          if (v91)
          {
            if (*v91 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v91;
          }
        }
        if (v149)
        {
          v92 = v148;
          v148 = 0;
          if (v92)
          {
            if (*v92 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v92;
          }
        }
        if (v147)
        {
          v93 = v146;
          v146 = 0;
          if (v93)
          {
            if (*v93 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v93;
          }
        }
        if (v145)
        {
          v94 = v144;
          v144 = 0;
          if (v94)
          {
            if (*v94 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v94;
          }
        }
        if (v143)
        {
          v95 = v142;
          v142 = 0;
          if (v95)
          {
            if (*v95 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v95;
          }
        }
        if (v141)
        {
          v96 = v140;
          v140 = 0;
          if (v96)
          {
            if (*v96 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v96;
          }
        }
        if (v139)
        {
          v97 = v138;
          v138 = 0;
          if (v97)
          {
            if (*v97 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v97;
          }
        }
        if (v137)
        {
          v98 = v136;
          v136 = 0;
          if (v98)
          {
            if (*v98 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v98;
          }
        }
        if (v135)
        {
          v99 = v133;
          v133 = 0;
          if (v99)
          {
            if (*(_DWORD *)v99 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*(_DWORD *)v99;
          }
        }
        v100 = v126;
        v126 = 0;
        if (v100)
        {
          if (*(_DWORD *)v100 == 2)
            WTF::StringImpl::destroy(v100, v87);
          else
            *(_DWORD *)v100 -= 2;
        }
        if (!v123)
        {
LABEL_105:
          v39 = (WTF::StringImpl *)v122;
          v122 = 0;
          v124 = v39;
          v132 = 0;
          v131 = 1;
          if (!WebCore::parseCompositeAndBlendOperator(&v124, (char *)&v132, &v131) || v131 != 1)
            v132 = 2;
          v129 = (WTF::StringImpl *)__PAIR64__(LODWORD(v14), LODWORD(v3));
          v130 = __PAIR64__(LODWORD(v18), LODWORD(v21));
          v126 = (WTF::StringImpl *)__PAIR64__(LODWORD(v24), LODWORD(v26));
          v127 = v32;
          v128 = v29;
          v125 = 1;
          WebCore::CanvasRenderingContext2DBase::drawImage((WebCore::CanvasRenderingContext *)v35, v119, (float *)&v129, (float *)&v126, &v132, &v125, (uint64_t)&v133);
          if (v135 && v134)
          {
            if (*(_DWORD *)v134 != 2)
            {
              *(_DWORD *)v134 -= 2;
              goto LABEL_112;
            }
            WTF::StringImpl::destroy(v134, v40);
            if (!v39)
            {
LABEL_115:
              v41 = v123;
              v42 = 10;
              goto LABEL_116;
            }
          }
          else
          {
LABEL_112:
            if (!v39)
              goto LABEL_115;
          }
          if (*(_DWORD *)v39 == 2)
            WTF::StringImpl::destroy(v39, v40);
          else
            *(_DWORD *)v39 -= 2;
          goto LABEL_115;
        }
      }
      std::__throw_bad_variant_access[abi:sn180100]();
LABEL_237:
      if ((JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) != 0)
        return 0;
    }
    v101 = -8388608;
LABEL_266:
    LODWORD(v3) = v101;
    goto LABEL_13;
  }
  WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v133, 0, "image", 6, "CanvasRenderingContext2D", 25, v12, "drawImageFromRect", 18, "HTMLImageElement", 17);
  return 0;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_setStrokeColor(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  WebCore::JSCanvasRenderingContext2D *v8;
  unint64_t v9;
  JSC::CallFrame *v10;
  JSValue v12;
  uint64_t v13;
  unint64_t v14;
  double v15;
  float v16;
  unint64_t v17;
  JSC::VM *v18;
  double v19;
  float v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  float v24;
  unint64_t v25;
  JSC::VM *v26;
  double v27;
  float v28;
  int v29;
  int v30;
  int v31;
  char hasExceptionsAfterHandlingTraps;
  int v33;
  WebCore::InspectorInstrumentation *v34;
  WebCore::ScriptExecutionContext *v35;
  uint64_t v36;
  WebCore::InspectorCanvasAgent *v37;
  WebCore::InspectorInstrumentation *v38;
  WebCore::ScriptExecutionContext *v39;
  uint64_t v40;
  WebCore::InspectorCanvasAgent *v41;
  WebCore::InspectorInstrumentation *v42;
  WebCore::ScriptExecutionContext *v43;
  uint64_t v44;
  WebCore::InspectorCanvasAgent *v45;
  WebCore::InspectorInstrumentation *v46;
  WebCore::ScriptExecutionContext *v47;
  uint64_t v48;
  WebCore::InspectorCanvasAgent *v49;
  WebCore::InspectorInstrumentation *v50;
  WebCore::ScriptExecutionContext *v51;
  uint64_t v52;
  uint64_t v53;
  _DWORD *v54;
  _DWORD *v55;
  _DWORD *v56;
  _DWORD *v57;
  WTF::StringImpl *v58;
  double v59;
  double v60;
  double v61;
  double v62;
  float v63;
  _QWORD v64[2];
  _QWORD v65[2];
  WTF::StringImpl *v66;
  _QWORD v67[2];
  char v68;
  _DWORD *v69;
  char v70;
  _DWORD *v71;
  char v72;
  _DWORD *v73;
  char v74;
  uint64_t v75;

  v75 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v64[0] = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSCanvasRenderingContext2D *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v64, "CanvasRenderingContext2D", "setStrokeColor");
  v64[1] = v5;
  v9 = *((int *)a2 + 8) - 1;
  if (v9 >= 4)
    v9 = 4;
  switch(v9)
  {
    case 0uLL:
      v12.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
      return JSC::VM::throwException(v5, this, v12);
    case 1uLL:
    case 2uLL:
      v10 = *(JSC::CallFrame **)(v6 + 24);
      if (*((_QWORD *)a2 + 6) >> 49)
        return WebCore::jsCanvasRenderingContext2DPrototypeFunction_setStrokeColor2Body(this, a2, v10, v8);
      else
        return WebCore::jsCanvasRenderingContext2DPrototypeFunction_setStrokeColor1Body(this, a2, v10, v8);
    case 4uLL:
      v13 = *(_QWORD *)(v6 + 24);
      v14 = *((_QWORD *)a2 + 6);
      v67[0] = v14;
      if (v14 >= 0xFFFE000000000000)
      {
        v15 = (double)(int)v14;
      }
      else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v67, this);
        v15 = v59;
      }
      else
      {
        *(_QWORD *)&v15 = v14 - 0x2000000000000;
      }
      if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
        return 0;
      if (v15 < -3.40282347e38)
      {
        *(float *)&v29 = -INFINITY;
      }
      else
      {
        if (v15 <= 3.40282347e38)
        {
          v16 = v15;
          goto LABEL_16;
        }
        *(float *)&v29 = INFINITY;
      }
      v16 = *(float *)&v29;
LABEL_16:
      v17 = *((_QWORD *)a2 + 7);
      v67[0] = v17;
      v18 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v17 >= 0xFFFE000000000000)
      {
        v19 = (double)(int)v17;
      }
      else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v67, this);
        v19 = v60;
      }
      else
      {
        *(_QWORD *)&v19 = v17 - 0x2000000000000;
      }
      if (*((_DWORD *)v18 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v18) & 1) != 0)
        return 0;
      if (v19 < -3.40282347e38)
      {
        *(float *)&v30 = -INFINITY;
      }
      else
      {
        if (v19 <= 3.40282347e38)
        {
          v20 = v19;
          goto LABEL_23;
        }
        *(float *)&v30 = INFINITY;
      }
      v20 = *(float *)&v30;
LABEL_23:
      v21 = *((_QWORD *)a2 + 8);
      v67[0] = v21;
      v22 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v21 >= 0xFFFE000000000000)
      {
        v23 = (double)(int)v21;
      }
      else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v67, this);
        v23 = v61;
      }
      else
      {
        *(_QWORD *)&v23 = v21 - 0x2000000000000;
      }
      if (*((_DWORD *)v22 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v22) & 1) != 0)
        return 0;
      if (v23 < -3.40282347e38)
      {
        *(float *)&v31 = -INFINITY;
      }
      else
      {
        if (v23 <= 3.40282347e38)
        {
          v24 = v23;
          goto LABEL_30;
        }
        *(float *)&v31 = INFINITY;
      }
      v24 = *(float *)&v31;
LABEL_30:
      v25 = *((_QWORD *)a2 + 9);
      v67[0] = v25;
      v26 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v25 >= 0xFFFE000000000000)
      {
        v27 = (double)(int)v25;
      }
      else if (v25 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v67, this);
      }
      else
      {
        *(_QWORD *)&v27 = v25 - 0x2000000000000;
      }
      if (*((_DWORD *)v26 + 20))
      {
        v62 = v27;
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v26);
        v27 = v62;
        if ((hasExceptionsAfterHandlingTraps & 1) != 0)
          return 0;
      }
      if (v27 < -3.40282347e38)
      {
        *(float *)&v33 = -INFINITY;
      }
      else
      {
        if (v27 <= 3.40282347e38)
        {
          v28 = v27;
          goto LABEL_37;
        }
        *(float *)&v33 = INFINITY;
      }
      v28 = *(float *)&v33;
LABEL_37:
      if (*(_BYTE *)(v13 + 25))
      {
        v63 = v28;
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v34 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 32) + 144))(*(_QWORD *)(v13 + 32));
        if (v34
          && (v36 = WebCore::InspectorInstrumentation::instrumentingAgents(v34, v35)) != 0
          && (v37 = *(WebCore::InspectorCanvasAgent **)(v36 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v37, (WebCore::CanvasRenderingContext *)v13, v16, (uint64_t)v67);
        }
        else
        {
          LOBYTE(v67[0]) = 0;
          v68 = 0;
        }
        v38 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 32) + 144))(*(_QWORD *)(v13 + 32));
        if (v38
          && (v40 = WebCore::InspectorInstrumentation::instrumentingAgents(v38, v39)) != 0
          && (v41 = *(WebCore::InspectorCanvasAgent **)(v40 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v41, (WebCore::CanvasRenderingContext *)v13, v20, (uint64_t)&v69);
        }
        else
        {
          LOBYTE(v69) = 0;
          v70 = 0;
        }
        v42 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 32) + 144))(*(_QWORD *)(v13 + 32));
        if (v42
          && (v44 = WebCore::InspectorInstrumentation::instrumentingAgents(v42, v43)) != 0
          && (v45 = *(WebCore::InspectorCanvasAgent **)(v44 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v45, (WebCore::CanvasRenderingContext *)v13, v24, (uint64_t)&v71);
        }
        else
        {
          LOBYTE(v71) = 0;
          v72 = 0;
        }
        v46 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 32) + 144))(*(_QWORD *)(v13 + 32));
        if (v46
          && (v48 = WebCore::InspectorInstrumentation::instrumentingAgents(v46, v47)) != 0
          && (v49 = *(WebCore::InspectorCanvasAgent **)(v48 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v49, (WebCore::CanvasRenderingContext *)v13, v63, (uint64_t)&v73);
        }
        else
        {
          LOBYTE(v73) = 0;
          v74 = 0;
        }
        v65[0] = v67;
        v65[1] = 4;
        v50 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 32) + 144))(*(_QWORD *)(v13 + 32));
        if (v50)
        {
          v52 = WebCore::InspectorInstrumentation::instrumentingAgents(v50, v51);
          if (v52)
          {
            v53 = *(_QWORD *)(v52 + 96);
            if (v53)
              WebCore::InspectorCanvasAgent::recordAction(v53, (WebCore::CanvasRenderingContext *)v13, (const WTF::StringImpl *)&v66, v65);
          }
        }
        if (v74)
        {
          v54 = v73;
          v73 = 0;
          if (v54)
          {
            if (*v54 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v54;
          }
        }
        if (v72)
        {
          v55 = v71;
          v71 = 0;
          if (v55)
          {
            if (*v55 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v55;
          }
        }
        if (v70)
        {
          v56 = v69;
          v69 = 0;
          if (v56)
          {
            if (*v56 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v56;
          }
        }
        if (v68)
        {
          v57 = (_DWORD *)v67[0];
          v67[0] = 0;
          if (v57)
          {
            if (*v57 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v57;
          }
        }
        v58 = v66;
        v66 = 0;
        if (v58)
        {
          if (*(_DWORD *)v58 == 2)
            WTF::StringImpl::destroy(v58, v51);
          else
            *(_DWORD *)v58 -= 2;
        }
        v28 = v63;
      }
      WebCore::CanvasRenderingContext2DBase::setStrokeColor(v13, v16, v20, v24, v28);
      return 10;
    default:
      return JSC::throwTypeError();
  }
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_setFillColor(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  WebCore::JSCanvasRenderingContext2D *v8;
  unint64_t v9;
  JSC::CallFrame *v10;
  JSValue v12;
  uint64_t v13;
  unint64_t v14;
  double v15;
  float v16;
  unint64_t v17;
  JSC::VM *v18;
  double v19;
  float v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  float v24;
  unint64_t v25;
  JSC::VM *v26;
  double v27;
  float v28;
  int v29;
  int v30;
  int v31;
  char hasExceptionsAfterHandlingTraps;
  int v33;
  WebCore::InspectorInstrumentation *v34;
  WebCore::ScriptExecutionContext *v35;
  uint64_t v36;
  WebCore::InspectorCanvasAgent *v37;
  WebCore::InspectorInstrumentation *v38;
  WebCore::ScriptExecutionContext *v39;
  uint64_t v40;
  WebCore::InspectorCanvasAgent *v41;
  WebCore::InspectorInstrumentation *v42;
  WebCore::ScriptExecutionContext *v43;
  uint64_t v44;
  WebCore::InspectorCanvasAgent *v45;
  WebCore::InspectorInstrumentation *v46;
  WebCore::ScriptExecutionContext *v47;
  uint64_t v48;
  WebCore::InspectorCanvasAgent *v49;
  WebCore::InspectorInstrumentation *v50;
  WebCore::ScriptExecutionContext *v51;
  uint64_t v52;
  uint64_t v53;
  _DWORD *v54;
  _DWORD *v55;
  _DWORD *v56;
  _DWORD *v57;
  WTF::StringImpl *v58;
  double v59;
  double v60;
  double v61;
  double v62;
  float v63;
  _QWORD v64[2];
  _QWORD v65[2];
  WTF::StringImpl *v66;
  _QWORD v67[2];
  char v68;
  _DWORD *v69;
  char v70;
  _DWORD *v71;
  char v72;
  _DWORD *v73;
  char v74;
  uint64_t v75;

  v75 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v64[0] = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSCanvasRenderingContext2D *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v64, "CanvasRenderingContext2D", "setFillColor");
  v64[1] = v5;
  v9 = *((int *)a2 + 8) - 1;
  if (v9 >= 4)
    v9 = 4;
  switch(v9)
  {
    case 0uLL:
      v12.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
      return JSC::VM::throwException(v5, this, v12);
    case 1uLL:
    case 2uLL:
      v10 = *(JSC::CallFrame **)(v6 + 24);
      if (*((_QWORD *)a2 + 6) >> 49)
        return WebCore::jsCanvasRenderingContext2DPrototypeFunction_setFillColor2Body(this, a2, v10, v8);
      else
        return WebCore::jsCanvasRenderingContext2DPrototypeFunction_setFillColor1Body(this, a2, v10, v8);
    case 4uLL:
      v13 = *(_QWORD *)(v6 + 24);
      v14 = *((_QWORD *)a2 + 6);
      v67[0] = v14;
      if (v14 >= 0xFFFE000000000000)
      {
        v15 = (double)(int)v14;
      }
      else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v67, this);
        v15 = v59;
      }
      else
      {
        *(_QWORD *)&v15 = v14 - 0x2000000000000;
      }
      if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
        return 0;
      if (v15 < -3.40282347e38)
      {
        *(float *)&v29 = -INFINITY;
      }
      else
      {
        if (v15 <= 3.40282347e38)
        {
          v16 = v15;
          goto LABEL_16;
        }
        *(float *)&v29 = INFINITY;
      }
      v16 = *(float *)&v29;
LABEL_16:
      v17 = *((_QWORD *)a2 + 7);
      v67[0] = v17;
      v18 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v17 >= 0xFFFE000000000000)
      {
        v19 = (double)(int)v17;
      }
      else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v67, this);
        v19 = v60;
      }
      else
      {
        *(_QWORD *)&v19 = v17 - 0x2000000000000;
      }
      if (*((_DWORD *)v18 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v18) & 1) != 0)
        return 0;
      if (v19 < -3.40282347e38)
      {
        *(float *)&v30 = -INFINITY;
      }
      else
      {
        if (v19 <= 3.40282347e38)
        {
          v20 = v19;
          goto LABEL_23;
        }
        *(float *)&v30 = INFINITY;
      }
      v20 = *(float *)&v30;
LABEL_23:
      v21 = *((_QWORD *)a2 + 8);
      v67[0] = v21;
      v22 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v21 >= 0xFFFE000000000000)
      {
        v23 = (double)(int)v21;
      }
      else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v67, this);
        v23 = v61;
      }
      else
      {
        *(_QWORD *)&v23 = v21 - 0x2000000000000;
      }
      if (*((_DWORD *)v22 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v22) & 1) != 0)
        return 0;
      if (v23 < -3.40282347e38)
      {
        *(float *)&v31 = -INFINITY;
      }
      else
      {
        if (v23 <= 3.40282347e38)
        {
          v24 = v23;
          goto LABEL_30;
        }
        *(float *)&v31 = INFINITY;
      }
      v24 = *(float *)&v31;
LABEL_30:
      v25 = *((_QWORD *)a2 + 9);
      v67[0] = v25;
      v26 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v25 >= 0xFFFE000000000000)
      {
        v27 = (double)(int)v25;
      }
      else if (v25 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v67, this);
      }
      else
      {
        *(_QWORD *)&v27 = v25 - 0x2000000000000;
      }
      if (*((_DWORD *)v26 + 20))
      {
        v62 = v27;
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v26);
        v27 = v62;
        if ((hasExceptionsAfterHandlingTraps & 1) != 0)
          return 0;
      }
      if (v27 < -3.40282347e38)
      {
        *(float *)&v33 = -INFINITY;
      }
      else
      {
        if (v27 <= 3.40282347e38)
        {
          v28 = v27;
          goto LABEL_37;
        }
        *(float *)&v33 = INFINITY;
      }
      v28 = *(float *)&v33;
LABEL_37:
      if (*(_BYTE *)(v13 + 25))
      {
        v63 = v28;
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v34 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 32) + 144))(*(_QWORD *)(v13 + 32));
        if (v34
          && (v36 = WebCore::InspectorInstrumentation::instrumentingAgents(v34, v35)) != 0
          && (v37 = *(WebCore::InspectorCanvasAgent **)(v36 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v37, (WebCore::CanvasRenderingContext *)v13, v16, (uint64_t)v67);
        }
        else
        {
          LOBYTE(v67[0]) = 0;
          v68 = 0;
        }
        v38 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 32) + 144))(*(_QWORD *)(v13 + 32));
        if (v38
          && (v40 = WebCore::InspectorInstrumentation::instrumentingAgents(v38, v39)) != 0
          && (v41 = *(WebCore::InspectorCanvasAgent **)(v40 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v41, (WebCore::CanvasRenderingContext *)v13, v20, (uint64_t)&v69);
        }
        else
        {
          LOBYTE(v69) = 0;
          v70 = 0;
        }
        v42 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 32) + 144))(*(_QWORD *)(v13 + 32));
        if (v42
          && (v44 = WebCore::InspectorInstrumentation::instrumentingAgents(v42, v43)) != 0
          && (v45 = *(WebCore::InspectorCanvasAgent **)(v44 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v45, (WebCore::CanvasRenderingContext *)v13, v24, (uint64_t)&v71);
        }
        else
        {
          LOBYTE(v71) = 0;
          v72 = 0;
        }
        v46 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 32) + 144))(*(_QWORD *)(v13 + 32));
        if (v46
          && (v48 = WebCore::InspectorInstrumentation::instrumentingAgents(v46, v47)) != 0
          && (v49 = *(WebCore::InspectorCanvasAgent **)(v48 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v49, (WebCore::CanvasRenderingContext *)v13, v63, (uint64_t)&v73);
        }
        else
        {
          LOBYTE(v73) = 0;
          v74 = 0;
        }
        v65[0] = v67;
        v65[1] = 4;
        v50 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 32) + 144))(*(_QWORD *)(v13 + 32));
        if (v50)
        {
          v52 = WebCore::InspectorInstrumentation::instrumentingAgents(v50, v51);
          if (v52)
          {
            v53 = *(_QWORD *)(v52 + 96);
            if (v53)
              WebCore::InspectorCanvasAgent::recordAction(v53, (WebCore::CanvasRenderingContext *)v13, (const WTF::StringImpl *)&v66, v65);
          }
        }
        if (v74)
        {
          v54 = v73;
          v73 = 0;
          if (v54)
          {
            if (*v54 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v54;
          }
        }
        if (v72)
        {
          v55 = v71;
          v71 = 0;
          if (v55)
          {
            if (*v55 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v55;
          }
        }
        if (v70)
        {
          v56 = v69;
          v69 = 0;
          if (v56)
          {
            if (*v56 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v56;
          }
        }
        if (v68)
        {
          v57 = (_DWORD *)v67[0];
          v67[0] = 0;
          if (v57)
          {
            if (*v57 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v57;
          }
        }
        v58 = v66;
        v66 = 0;
        if (v58)
        {
          if (*(_DWORD *)v58 == 2)
            WTF::StringImpl::destroy(v58, v51);
          else
            *(_DWORD *)v58 -= 2;
        }
        v28 = v63;
      }
      WebCore::CanvasRenderingContext2DBase::setFillColor(v13, v16, v20, v24, v28);
      return 10;
    default:
      return JSC::throwTypeError();
  }
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_setLineWidth(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  double v9;
  double v10;
  float v11;
  double v12;
  unint64_t v13;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  WebCore::InspectorInstrumentation *v19;
  WebCore::ScriptExecutionContext *v20;
  uint64_t v21;
  WebCore::InspectorCanvasAgent *v22;
  WebCore::InspectorInstrumentation *v23;
  WebCore::ScriptExecutionContext *v24;
  uint64_t v25;
  uint64_t v26;
  _DWORD *v27;
  WTF::StringImpl *v28;
  uint64_t v29;
  JSC::VM *v30;
  _QWORD v31[2];
  WTF::StringImpl *v32;
  _QWORD v33[2];
  char v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v30 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSCanvasRenderingContext2D *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v30, "CanvasRenderingContext2D", "setLineWidth");
  v7 = *(_QWORD *)(v6 + 24);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v33[0] = 10;
LABEL_7:
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v33, this);
    v9 = v10;
    goto LABEL_8;
  }
  v8 = *((_QWORD *)a2 + 6);
  v33[0] = v8;
  if (v8 >= 0xFFFE000000000000)
  {
    v9 = (double)(int)v8;
    goto LABEL_8;
  }
  if (v8 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    goto LABEL_7;
  *(_QWORD *)&v9 = v8 - 0x2000000000000;
LABEL_8:
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  if (v9 < -3.40282347e38)
  {
    v11 = -INFINITY;
  }
  else if (v9 <= 3.40282347e38)
  {
    v11 = v9;
  }
  else
  {
    v11 = INFINITY;
  }
  if (*(_BYTE *)(v7 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v19 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v7 + 32) + 144))(*(_QWORD *)(v7 + 32));
    if (v19
      && (v21 = WebCore::InspectorInstrumentation::instrumentingAgents(v19, v20)) != 0
      && (v22 = *(WebCore::InspectorCanvasAgent **)(v21 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v22, (WebCore::CanvasRenderingContext *)v7, v11, (uint64_t)v33);
    }
    else
    {
      LOBYTE(v33[0]) = 0;
      v34 = 0;
    }
    v31[0] = v33;
    v31[1] = 1;
    v23 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v7 + 32) + 144))(*(_QWORD *)(v7 + 32));
    if (v23)
    {
      v25 = WebCore::InspectorInstrumentation::instrumentingAgents(v23, v24);
      if (v25)
      {
        v26 = *(_QWORD *)(v25 + 96);
        if (v26)
          WebCore::InspectorCanvasAgent::recordAction(v26, (WebCore::CanvasRenderingContext *)v7, (const WTF::StringImpl *)&v32, v31);
      }
    }
    if (v34)
    {
      v27 = (_DWORD *)v33[0];
      v33[0] = 0;
      if (v27)
      {
        if (*v27 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v27;
      }
    }
    v28 = v32;
    v32 = 0;
    if (v28)
    {
      if (*(_DWORD *)v28 == 2)
        WTF::StringImpl::destroy(v28, v24);
      else
        *(_DWORD *)v28 -= 2;
    }
  }
  v12 = v11;
  v13 = (unint64_t)(COERCE__INT64(fabs(v11)) - 0x10000000000000) >> 53;
  if (COERCE__INT64(v11) >= 0 && v13 <= 0x3FE)
  {
    v15 = *(_DWORD *)(v7 + 132);
    if (!v15)
    {
      __break(0xC471u);
      JUMPOUT(0x194912278);
    }
    if (*(double *)(*(_QWORD *)(v7 + 120) + 560 * v15 - 512) != v12)
    {
      if (*(_DWORD *)(v7 + 712))
      {
        WebCore::CanvasRenderingContext2DBase::realizeSavesLoop((WebCore::CanvasRenderingContext2DBase *)v7);
        if (*(_DWORD *)(v7 + 712))
        {
          {
            WebCore::CanvasRenderingContext2DBase::realizeSaves(void)::$_0::operator() const(void)::impl += 2;
            WebCore::CanvasRenderingContext2DBase::realizeSaves(void)::consoleMessage = (uint64_t)&WebCore::CanvasRenderingContext2DBase::realizeSaves(void)::$_0::operator() const(void)::impl;
          }
          v29 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v7 + 32) + 144))(*(_QWORD *)(v7 + 32));
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t *, _QWORD))(*(_QWORD *)v29 + 248))(v29, 6, 2, &WebCore::CanvasRenderingContext2DBase::realizeSaves(void)::consoleMessage, 0);
        }
      }
      v16 = *(_DWORD *)(v7 + 132);
      if (!v16)
      {
        __break(0xC471u);
        JUMPOUT(0x194912280);
      }
      *(double *)(*(_QWORD *)(v7 + 120) + 560 * v16 - 512) = v12;
      v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 240))(v7);
      if (v17)
      {
        if (*(float *)(v17 + 188) != v11)
        {
          *(float *)(v17 + 188) = v11;
          *(_DWORD *)(v17 + 184) |= 8u;
        }
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v17 + 88))(v17, v17 + 8);
      }
    }
  }
  return 10;
}

_BYTE *WebCore::jsCanvasRenderingContext2DPrototypeFunction_setLineCap(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  int v11;
  WTF::StringImpl *v12;
  int v13;
  uint64_t v14;
  WebCore::InspectorInstrumentation *v16;
  WebCore::ScriptExecutionContext *v17;
  uint64_t v18;
  WebCore::InspectorCanvasAgent *v19;
  WebCore::InspectorInstrumentation *v20;
  WebCore::ScriptExecutionContext *v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  WTF::StringImpl *v25;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v27;
  WebCore *v28;
  JSC::JSGlobalObject *v29;
  JSC::CallFrame *v30;
  JSC::VM *v31;
  WTF::StringImpl *v32[2];
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  int v35;
  _QWORD v36[2];
  char v37;
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v31 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSCanvasRenderingContext2D *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "CanvasRenderingContext2D", "setLineCap");
  v7 = *(_QWORD *)(v6 + 24);
  if (*((_DWORD *)a2 + 8) == 1 || (v8 = *((_QWORD *)a2 + 6), v8 == 10))
  {
    v9 = 0;
    v34 = 0;
    v35 = 0;
    goto LABEL_14;
  }
  v36[0] = v8;
  if ((v8 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v8 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v36, this);
    goto LABEL_11;
  }
  v10 = *(WTF::StringImpl **)(v8 + 8);
  if ((v10 & 1) != 0)
  {
    v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v8, this);
    if (!v10)
      goto LABEL_10;
    goto LABEL_9;
  }
  if (v10)
LABEL_9:
    *(_DWORD *)v10 += 2;
LABEL_10:
  v32[0] = v10;
LABEL_11:
  if (*((_DWORD *)v5 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    v9 = v32[0];
    if (hasExceptionsAfterHandlingTraps)
    {
      v35 = 1;
      v32[0] = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 2)
          WTF::StringImpl::destroy(v9, v27);
        else
          *(_DWORD *)v9 -= 2;
      }
      v14 = 0;
      v13 = 1;
LABEL_26:
      ((void (*)(_QWORD *, WTF::StringImpl **))off_1E3238AF8[v13])(v36, &v34);
      return (_BYTE *)v14;
    }
  }
  else
  {
    v9 = v32[0];
  }
  v34 = v9;
  v35 = 0;
LABEL_14:
  if (!*(_BYTE *)(v7 + 25))
    goto LABEL_15;
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v16 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v7 + 32) + 144))(*(_QWORD *)(v7 + 32));
  if (v16
    && (v18 = WebCore::InspectorInstrumentation::instrumentingAgents(v16, v17)) != 0
    && (v19 = *(WebCore::InspectorCanvasAgent **)(v18 + 96)) != 0)
  {
    WebCore::InspectorCanvasAgent::processArgument(v19, (WebCore::CanvasRenderingContext *)v7, (int **)&v34, (uint64_t)v36);
  }
  else
  {
    LOBYTE(v36[0]) = 0;
    v37 = 0;
  }
  v32[0] = (WTF::StringImpl *)v36;
  v32[1] = (WTF::StringImpl *)1;
  v20 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v7 + 32) + 144))(*(_QWORD *)(v7 + 32));
  if (v20)
  {
    v22 = WebCore::InspectorInstrumentation::instrumentingAgents(v20, v21);
    if (v22)
    {
      v23 = *(_QWORD *)(v22 + 96);
      if (v23)
        WebCore::InspectorCanvasAgent::recordAction(v23, (WebCore::CanvasRenderingContext *)v7, (const WTF::StringImpl *)&v33, v32);
    }
  }
  if (v37)
  {
    v24 = (_DWORD *)v36[0];
    v36[0] = 0;
    if (v24)
    {
      if (*v24 == 1)
        WTF::JSONImpl::Value::operator delete();
      else
        --*v24;
    }
  }
  v25 = v33;
  v33 = 0;
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v21);
    else
      *(_DWORD *)v25 -= 2;
  }
  if (!v35)
  {
    v9 = v34;
LABEL_15:
    v34 = 0;
    if ((MEMORY[0x19AEA53F4](v9, "butt", 4) & 1) != 0)
    {
      v11 = 0;
    }
    else if ((MEMORY[0x19AEA53F4](v9, "round", 5) & 1) != 0)
    {
      v11 = 1;
    }
    else
    {
      if (!MEMORY[0x19AEA53F4](v9, "square", 6))
        goto LABEL_22;
      v11 = 2;
    }
    WebCore::CanvasRenderingContext2DBase::setLineCap(v7, v11);
LABEL_22:
    if (v9)
    {
      if (*(_DWORD *)v9 == 2)
        WTF::StringImpl::destroy(v9, v12);
      else
        *(_DWORD *)v9 -= 2;
    }
    v13 = v35;
    v14 = 10;
    if (v35 == -1)
      return (_BYTE *)v14;
    goto LABEL_26;
  }
  v28 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsCanvasRenderingContext2DPrototypeFunction_setLineJoin(v28, v29, v30);
}

_BYTE *WebCore::jsCanvasRenderingContext2DPrototypeFunction_setLineJoin(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  int v11;
  WTF::StringImpl *v12;
  int v13;
  uint64_t v14;
  WebCore::InspectorInstrumentation *v16;
  WebCore::ScriptExecutionContext *v17;
  uint64_t v18;
  WebCore::InspectorCanvasAgent *v19;
  WebCore::InspectorInstrumentation *v20;
  WebCore::ScriptExecutionContext *v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  WTF::StringImpl *v25;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v27;
  WebCore *v28;
  JSC::JSGlobalObject *v29;
  JSC::CallFrame *v30;
  JSC::VM *v31;
  WTF::StringImpl *v32[2];
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  int v35;
  _QWORD v36[2];
  char v37;
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v31 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSCanvasRenderingContext2D *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v31, "CanvasRenderingContext2D", "setLineJoin");
  v7 = *(_QWORD *)(v6 + 24);
  if (*((_DWORD *)a2 + 8) == 1 || (v8 = *((_QWORD *)a2 + 6), v8 == 10))
  {
    v9 = 0;
    v34 = 0;
    v35 = 0;
    goto LABEL_14;
  }
  v36[0] = v8;
  if ((v8 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v8 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v36, this);
    goto LABEL_11;
  }
  v10 = *(WTF::StringImpl **)(v8 + 8);
  if ((v10 & 1) != 0)
  {
    v10 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v8, this);
    if (!v10)
      goto LABEL_10;
    goto LABEL_9;
  }
  if (v10)
LABEL_9:
    *(_DWORD *)v10 += 2;
LABEL_10:
  v32[0] = v10;
LABEL_11:
  if (*((_DWORD *)v5 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    v9 = v32[0];
    if (hasExceptionsAfterHandlingTraps)
    {
      v35 = 1;
      v32[0] = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 2)
          WTF::StringImpl::destroy(v9, v27);
        else
          *(_DWORD *)v9 -= 2;
      }
      v14 = 0;
      v13 = 1;
LABEL_26:
      ((void (*)(_QWORD *, WTF::StringImpl **))off_1E3238AF8[v13])(v36, &v34);
      return (_BYTE *)v14;
    }
  }
  else
  {
    v9 = v32[0];
  }
  v34 = v9;
  v35 = 0;
LABEL_14:
  if (!*(_BYTE *)(v7 + 25))
    goto LABEL_15;
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v16 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v7 + 32) + 144))(*(_QWORD *)(v7 + 32));
  if (v16
    && (v18 = WebCore::InspectorInstrumentation::instrumentingAgents(v16, v17)) != 0
    && (v19 = *(WebCore::InspectorCanvasAgent **)(v18 + 96)) != 0)
  {
    WebCore::InspectorCanvasAgent::processArgument(v19, (WebCore::CanvasRenderingContext *)v7, (int **)&v34, (uint64_t)v36);
  }
  else
  {
    LOBYTE(v36[0]) = 0;
    v37 = 0;
  }
  v32[0] = (WTF::StringImpl *)v36;
  v32[1] = (WTF::StringImpl *)1;
  v20 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v7 + 32) + 144))(*(_QWORD *)(v7 + 32));
  if (v20)
  {
    v22 = WebCore::InspectorInstrumentation::instrumentingAgents(v20, v21);
    if (v22)
    {
      v23 = *(_QWORD *)(v22 + 96);
      if (v23)
        WebCore::InspectorCanvasAgent::recordAction(v23, (WebCore::CanvasRenderingContext *)v7, (const WTF::StringImpl *)&v33, v32);
    }
  }
  if (v37)
  {
    v24 = (_DWORD *)v36[0];
    v36[0] = 0;
    if (v24)
    {
      if (*v24 == 1)
        WTF::JSONImpl::Value::operator delete();
      else
        --*v24;
    }
  }
  v25 = v33;
  v33 = 0;
  if (v25)
  {
    if (*(_DWORD *)v25 == 2)
      WTF::StringImpl::destroy(v25, v21);
    else
      *(_DWORD *)v25 -= 2;
  }
  if (!v35)
  {
    v9 = v34;
LABEL_15:
    v34 = 0;
    if ((MEMORY[0x19AEA53F4](v9, "round", 5) & 1) != 0)
    {
      v11 = 0;
    }
    else if ((MEMORY[0x19AEA53F4](v9, "bevel", 5) & 1) != 0)
    {
      v11 = 1;
    }
    else
    {
      if (!MEMORY[0x19AEA53F4](v9, "miter", 5))
        goto LABEL_22;
      v11 = 2;
    }
    WebCore::CanvasRenderingContext2DBase::setLineJoin(v7, v11);
LABEL_22:
    if (v9)
    {
      if (*(_DWORD *)v9 == 2)
        WTF::StringImpl::destroy(v9, v12);
      else
        *(_DWORD *)v9 -= 2;
    }
    v13 = v35;
    v14 = 10;
    if (v35 == -1)
      return (_BYTE *)v14;
    goto LABEL_26;
  }
  v28 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsCanvasRenderingContext2DPrototypeFunction_setMiterLimit(v28, v29, v30);
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_setMiterLimit(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  double v9;
  double v10;
  float v11;
  WebCore::InspectorInstrumentation *v13;
  WebCore::ScriptExecutionContext *v14;
  uint64_t v15;
  WebCore::InspectorCanvasAgent *v16;
  WebCore::InspectorInstrumentation *v17;
  WebCore::ScriptExecutionContext *v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  WTF::StringImpl *v22;
  JSC::VM *v23;
  _QWORD v24[2];
  WTF::StringImpl *v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v23 = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSCanvasRenderingContext2D *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v23, "CanvasRenderingContext2D", "setMiterLimit");
  v7 = *(_QWORD *)(v6 + 24);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v26[0] = 10;
LABEL_7:
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v26, this);
    v9 = v10;
    goto LABEL_8;
  }
  v8 = *((_QWORD *)a2 + 6);
  v26[0] = v8;
  if (v8 >= 0xFFFE000000000000)
  {
    v9 = (double)(int)v8;
    goto LABEL_8;
  }
  if (v8 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    goto LABEL_7;
  *(_QWORD *)&v9 = v8 - 0x2000000000000;
LABEL_8:
  if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    return 0;
  if (v9 < -3.40282347e38)
  {
    v11 = -INFINITY;
  }
  else if (v9 <= 3.40282347e38)
  {
    v11 = v9;
  }
  else
  {
    v11 = INFINITY;
  }
  if (*(_BYTE *)(v7 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v13 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v7 + 32) + 144))(*(_QWORD *)(v7 + 32));
    if (v13
      && (v15 = WebCore::InspectorInstrumentation::instrumentingAgents(v13, v14)) != 0
      && (v16 = *(WebCore::InspectorCanvasAgent **)(v15 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v16, (WebCore::CanvasRenderingContext *)v7, v11, (uint64_t)v26);
    }
    else
    {
      LOBYTE(v26[0]) = 0;
      v27 = 0;
    }
    v24[0] = v26;
    v24[1] = 1;
    v17 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v7 + 32) + 144))(*(_QWORD *)(v7 + 32));
    if (v17)
    {
      v19 = WebCore::InspectorInstrumentation::instrumentingAgents(v17, v18);
      if (v19)
      {
        v20 = *(_QWORD *)(v19 + 96);
        if (v20)
          WebCore::InspectorCanvasAgent::recordAction(v20, (WebCore::CanvasRenderingContext *)v7, (const WTF::StringImpl *)&v25, v24);
      }
    }
    if (v27)
    {
      v21 = (_DWORD *)v26[0];
      v26[0] = 0;
      if (v21)
      {
        if (*v21 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v21;
      }
    }
    v22 = v25;
    v25 = 0;
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, v18);
      else
        *(_DWORD *)v22 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::setMiterLimit(v7, v11);
  return 10;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_setShadow(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::JSGlobalObject *v7;
  WebCore::JSCanvasRenderingContext2D *v8;
  unint64_t v9;
  unint64_t v10;
  JSC::CallFrame *v11;
  uint64_t result;
  JSValue v13;
  WebCore::CanvasRenderingContext *v14;
  unint64_t v15;
  double v16;
  float v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  float v21;
  unint64_t v22;
  JSC::VM *v23;
  double v24;
  float v25;
  unint64_t v26;
  JSC::VM *v27;
  double v28;
  float v29;
  unint64_t v30;
  JSC::VM *v31;
  double v32;
  float v33;
  unint64_t v34;
  JSC::VM *v35;
  double v36;
  float v37;
  unint64_t v38;
  JSC::VM *v39;
  double v40;
  float v41;
  WebCore::CanvasRenderingContext *v42;
  char hasExceptionsAfterHandlingTraps;
  int v44;
  JSC::VM *v45;
  WebCore::CanvasRenderingContext *v46;
  char v47;
  int v48;
  JSC::VM *v49;
  WebCore::CanvasRenderingContext *v50;
  char v51;
  int v52;
  JSC::VM *v53;
  WebCore::CanvasRenderingContext *v54;
  char v55;
  int v56;
  JSC::VM *v57;
  WebCore::CanvasRenderingContext *v58;
  char v59;
  int v60;
  JSC::VM *v61;
  WebCore::CanvasRenderingContext *v62;
  char v63;
  int v64;
  WebCore::CanvasRenderingContext *v65;
  char v66;
  int v67;
  WebCore::CanvasRenderingContext *v68;
  WebCore::InspectorInstrumentation *v69;
  WebCore::ScriptExecutionContext *v70;
  uint64_t v71;
  WebCore::InspectorCanvasAgent *v72;
  WebCore::InspectorInstrumentation *v73;
  WebCore::ScriptExecutionContext *v74;
  uint64_t v75;
  WebCore::InspectorCanvasAgent *v76;
  WebCore::InspectorInstrumentation *v77;
  WebCore::ScriptExecutionContext *v78;
  uint64_t v79;
  WebCore::InspectorCanvasAgent *v80;
  WebCore::InspectorInstrumentation *v81;
  WebCore::ScriptExecutionContext *v82;
  uint64_t v83;
  WebCore::InspectorCanvasAgent *v84;
  WebCore::InspectorInstrumentation *v85;
  WebCore::ScriptExecutionContext *v86;
  uint64_t v87;
  WebCore::InspectorCanvasAgent *v88;
  WebCore::InspectorInstrumentation *v89;
  WebCore::ScriptExecutionContext *v90;
  uint64_t v91;
  WebCore::InspectorCanvasAgent *v92;
  WebCore::InspectorInstrumentation *v93;
  WebCore::ScriptExecutionContext *v94;
  uint64_t v95;
  WebCore::InspectorCanvasAgent *v96;
  WebCore::InspectorInstrumentation *v97;
  WebCore::ScriptExecutionContext *v98;
  uint64_t v99;
  uint64_t v100;
  _DWORD *v101;
  _DWORD *v102;
  _DWORD *v103;
  _DWORD *v104;
  _DWORD *v105;
  _DWORD *v106;
  _DWORD *v107;
  WTF::StringImpl *v108;
  WebCore::CanvasRenderingContext *v109;
  double v110;
  WebCore::CanvasRenderingContext *v111;
  double v112;
  WebCore::CanvasRenderingContext *v113;
  double v114;
  WebCore::CanvasRenderingContext *v115;
  double v116;
  WebCore::CanvasRenderingContext *v117;
  double v118;
  double v119;
  double v120;
  float v121;
  WebCore::CanvasRenderingContext *v122;
  WebCore::CanvasRenderingContext *v123;
  _QWORD v124[2];
  _QWORD v125[2];
  WTF::StringImpl *v126;
  _QWORD v127[2];
  char v128;
  _DWORD *v129;
  char v130;
  _DWORD *v131;
  char v132;
  _DWORD *v133;
  char v134;
  _DWORD *v135;
  char v136;
  _DWORD *v137;
  char v138;
  _DWORD *v139;
  char v140;
  uint64_t v141;

  v141 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v124[0] = v5;
  v6 = JSC::jsDynamicCast<WebCore::JSCanvasRenderingContext2D *>(*((_QWORD *)a2 + 5));
  if (!v6)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v124, "CanvasRenderingContext2D", "setShadow");
  v124[1] = v5;
  v9 = *((int *)a2 + 8) - 1;
  if (v9 >= 7)
    v9 = 7;
  switch(v9)
  {
    case 3uLL:
      goto LABEL_6;
    case 4uLL:
    case 5uLL:
      v10 = *((_QWORD *)a2 + 9);
      if (v10 == 10)
      {
LABEL_6:
        v11 = *(JSC::CallFrame **)(v6 + 24);
        return WebCore::jsCanvasRenderingContext2DPrototypeFunction_setShadow1Body(this, a2, v11, v8);
      }
      v11 = *(JSC::CallFrame **)(v6 + 24);
      if (!(v10 >> 49))
        return WebCore::jsCanvasRenderingContext2DPrototypeFunction_setShadow1Body(this, a2, v11, v8);
      result = WebCore::jsCanvasRenderingContext2DPrototypeFunction_setShadow2Body(this, a2, v11, v8);
      break;
    case 7uLL:
      v14 = *(WebCore::CanvasRenderingContext **)(v6 + 24);
      v15 = *((_QWORD *)a2 + 6);
      v127[0] = v15;
      if (v15 >= 0xFFFE000000000000)
      {
        v16 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v109 = v14;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v127, this);
        v14 = v109;
        v16 = v110;
      }
      else
      {
        *(_QWORD *)&v16 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v5 + 20))
      {
        v42 = v14;
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
        v14 = v42;
        if ((hasExceptionsAfterHandlingTraps & 1) != 0)
          return 0;
      }
      if (v16 < -3.40282347e38)
      {
        *(float *)&v44 = -INFINITY;
      }
      else
      {
        if (v16 <= 3.40282347e38)
        {
          v17 = v16;
          goto LABEL_17;
        }
        *(float *)&v44 = INFINITY;
      }
      v17 = *(float *)&v44;
LABEL_17:
      v18 = *((_QWORD *)a2 + 7);
      v127[0] = v18;
      v19 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v18 >= 0xFFFE000000000000)
      {
        v20 = (double)(int)v18;
      }
      else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v111 = v14;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v127, this);
        v14 = v111;
        v20 = v112;
      }
      else
      {
        *(_QWORD *)&v20 = v18 - 0x2000000000000;
      }
      if (*((_DWORD *)v19 + 20))
      {
        v45 = v19;
        v46 = v14;
        v47 = JSC::VM::hasExceptionsAfterHandlingTraps(v45);
        v14 = v46;
        if ((v47 & 1) != 0)
          return 0;
      }
      if (v20 < -3.40282347e38)
      {
        *(float *)&v48 = -INFINITY;
      }
      else
      {
        if (v20 <= 3.40282347e38)
        {
          v21 = v20;
          goto LABEL_24;
        }
        *(float *)&v48 = INFINITY;
      }
      v21 = *(float *)&v48;
LABEL_24:
      v22 = *((_QWORD *)a2 + 8);
      v127[0] = v22;
      v23 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v22 >= 0xFFFE000000000000)
      {
        v24 = (double)(int)v22;
      }
      else if (v22 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v113 = v14;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v127, this);
        v14 = v113;
        v24 = v114;
      }
      else
      {
        *(_QWORD *)&v24 = v22 - 0x2000000000000;
      }
      if (*((_DWORD *)v23 + 20))
      {
        v49 = v23;
        v50 = v14;
        v51 = JSC::VM::hasExceptionsAfterHandlingTraps(v49);
        v14 = v50;
        if ((v51 & 1) != 0)
          return 0;
      }
      if (v24 < -3.40282347e38)
      {
        *(float *)&v52 = -INFINITY;
      }
      else
      {
        if (v24 <= 3.40282347e38)
        {
          v25 = v24;
          goto LABEL_31;
        }
        *(float *)&v52 = INFINITY;
      }
      v25 = *(float *)&v52;
LABEL_31:
      v26 = *((_QWORD *)a2 + 9);
      v127[0] = v26;
      v27 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v26 >= 0xFFFE000000000000)
      {
        v28 = (double)(int)v26;
      }
      else if (v26 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v115 = v14;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v127, this);
        v14 = v115;
        v28 = v116;
      }
      else
      {
        *(_QWORD *)&v28 = v26 - 0x2000000000000;
      }
      if (*((_DWORD *)v27 + 20))
      {
        v53 = v27;
        v54 = v14;
        v55 = JSC::VM::hasExceptionsAfterHandlingTraps(v53);
        v14 = v54;
        if ((v55 & 1) != 0)
          return 0;
      }
      if (v28 < -3.40282347e38)
      {
        *(float *)&v56 = -INFINITY;
      }
      else
      {
        if (v28 <= 3.40282347e38)
        {
          v29 = v28;
          goto LABEL_38;
        }
        *(float *)&v56 = INFINITY;
      }
      v29 = *(float *)&v56;
LABEL_38:
      v30 = *((_QWORD *)a2 + 10);
      v127[0] = v30;
      v31 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v30 >= 0xFFFE000000000000)
      {
        v32 = (double)(int)v30;
      }
      else if (v30 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v117 = v14;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v127, this);
        v14 = v117;
        v32 = v118;
      }
      else
      {
        *(_QWORD *)&v32 = v30 - 0x2000000000000;
      }
      if (*((_DWORD *)v31 + 20))
      {
        v57 = v31;
        v58 = v14;
        v59 = JSC::VM::hasExceptionsAfterHandlingTraps(v57);
        v14 = v58;
        if ((v59 & 1) != 0)
          return 0;
      }
      if (v32 < -3.40282347e38)
      {
        *(float *)&v60 = -INFINITY;
      }
      else
      {
        if (v32 <= 3.40282347e38)
        {
          v33 = v32;
          goto LABEL_45;
        }
        *(float *)&v60 = INFINITY;
      }
      v33 = *(float *)&v60;
LABEL_45:
      v34 = *((_QWORD *)a2 + 11);
      v127[0] = v34;
      v35 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v34 >= 0xFFFE000000000000)
      {
        v36 = (double)(int)v34;
      }
      else if (v34 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v122 = v14;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v127, this);
        v14 = v122;
        v36 = v119;
      }
      else
      {
        *(_QWORD *)&v36 = v34 - 0x2000000000000;
      }
      if (*((_DWORD *)v35 + 20))
      {
        v61 = v35;
        v62 = v14;
        v63 = JSC::VM::hasExceptionsAfterHandlingTraps(v61);
        v14 = v62;
        if ((v63 & 1) != 0)
          return 0;
      }
      if (v36 < -3.40282347e38)
      {
        *(float *)&v64 = -INFINITY;
      }
      else
      {
        if (v36 <= 3.40282347e38)
        {
          v37 = v36;
          goto LABEL_52;
        }
        *(float *)&v64 = INFINITY;
      }
      v37 = *(float *)&v64;
LABEL_52:
      v38 = *((_QWORD *)a2 + 12);
      v127[0] = v38;
      v39 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v38 >= 0xFFFE000000000000)
      {
        v40 = (double)(int)v38;
      }
      else if (v38 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v123 = v14;
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v127, this);
        v14 = v123;
      }
      else
      {
        *(_QWORD *)&v40 = v38 - 0x2000000000000;
      }
      if (*((_DWORD *)v39 + 20))
      {
        v120 = v40;
        v65 = v14;
        v66 = JSC::VM::hasExceptionsAfterHandlingTraps(v39);
        v14 = v65;
        v40 = v120;
        if ((v66 & 1) != 0)
          return 0;
      }
      if (v40 < -3.40282347e38)
      {
        *(float *)&v67 = -INFINITY;
      }
      else
      {
        if (v40 <= 3.40282347e38)
        {
          v41 = v40;
          goto LABEL_59;
        }
        *(float *)&v67 = INFINITY;
      }
      v41 = *(float *)&v67;
LABEL_59:
      if (*((_BYTE *)v14 + 25))
      {
        v121 = v41;
        v68 = v14;
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v126 = (WTF::StringImpl *)v127[0];
        v69 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD *))(**((_QWORD **)v68 + 4) + 144))(*((_QWORD **)v68 + 4));
        if (v69
          && (v71 = WebCore::InspectorInstrumentation::instrumentingAgents(v69, v70)) != 0
          && (v72 = *(WebCore::InspectorCanvasAgent **)(v71 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v72, v68, v17, (uint64_t)v127);
        }
        else
        {
          LOBYTE(v127[0]) = 0;
          v128 = 0;
        }
        v73 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD *))(**((_QWORD **)v68 + 4) + 144))(*((_QWORD **)v68 + 4));
        if (v73
          && (v75 = WebCore::InspectorInstrumentation::instrumentingAgents(v73, v74)) != 0
          && (v76 = *(WebCore::InspectorCanvasAgent **)(v75 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v76, v68, v21, (uint64_t)&v129);
        }
        else
        {
          LOBYTE(v129) = 0;
          v130 = 0;
        }
        v77 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD *))(**((_QWORD **)v68 + 4) + 144))(*((_QWORD **)v68 + 4));
        if (v77
          && (v79 = WebCore::InspectorInstrumentation::instrumentingAgents(v77, v78)) != 0
          && (v80 = *(WebCore::InspectorCanvasAgent **)(v79 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v80, v68, v25, (uint64_t)&v131);
        }
        else
        {
          LOBYTE(v131) = 0;
          v132 = 0;
        }
        v81 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD *))(**((_QWORD **)v68 + 4) + 144))(*((_QWORD **)v68 + 4));
        if (v81
          && (v83 = WebCore::InspectorInstrumentation::instrumentingAgents(v81, v82)) != 0
          && (v84 = *(WebCore::InspectorCanvasAgent **)(v83 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v84, v68, v29, (uint64_t)&v133);
        }
        else
        {
          LOBYTE(v133) = 0;
          v134 = 0;
        }
        v85 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD *))(**((_QWORD **)v68 + 4) + 144))(*((_QWORD **)v68 + 4));
        if (v85
          && (v87 = WebCore::InspectorInstrumentation::instrumentingAgents(v85, v86)) != 0
          && (v88 = *(WebCore::InspectorCanvasAgent **)(v87 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v88, v68, v33, (uint64_t)&v135);
        }
        else
        {
          LOBYTE(v135) = 0;
          v136 = 0;
        }
        v89 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD *))(**((_QWORD **)v68 + 4) + 144))(*((_QWORD **)v68 + 4));
        if (v89
          && (v91 = WebCore::InspectorInstrumentation::instrumentingAgents(v89, v90)) != 0
          && (v92 = *(WebCore::InspectorCanvasAgent **)(v91 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v92, v68, v37, (uint64_t)&v137);
        }
        else
        {
          LOBYTE(v137) = 0;
          v138 = 0;
        }
        v93 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD *))(**((_QWORD **)v68 + 4) + 144))(*((_QWORD **)v68 + 4));
        if (v93
          && (v95 = WebCore::InspectorInstrumentation::instrumentingAgents(v93, v94)) != 0
          && (v96 = *(WebCore::InspectorCanvasAgent **)(v95 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v96, v68, v121, (uint64_t)&v139);
        }
        else
        {
          LOBYTE(v139) = 0;
          v140 = 0;
        }
        v125[0] = v127;
        v125[1] = 7;
        v97 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD *))(**((_QWORD **)v68 + 4) + 144))(*((_QWORD **)v68 + 4));
        if (v97)
        {
          v99 = WebCore::InspectorInstrumentation::instrumentingAgents(v97, v98);
          if (v99)
          {
            v100 = *(_QWORD *)(v99 + 96);
            if (v100)
              WebCore::InspectorCanvasAgent::recordAction(v100, v68, (const WTF::StringImpl *)&v126, v125);
          }
        }
        if (v140)
        {
          v101 = v139;
          v139 = 0;
          if (v101)
          {
            if (*v101 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v101;
          }
        }
        if (v138)
        {
          v102 = v137;
          v137 = 0;
          if (v102)
          {
            if (*v102 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v102;
          }
        }
        if (v136)
        {
          v103 = v135;
          v135 = 0;
          if (v103)
          {
            if (*v103 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v103;
          }
        }
        if (v134)
        {
          v104 = v133;
          v133 = 0;
          if (v104)
          {
            if (*v104 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v104;
          }
        }
        if (v132)
        {
          v105 = v131;
          v131 = 0;
          if (v105)
          {
            if (*v105 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v105;
          }
        }
        if (v130)
        {
          v106 = v129;
          v129 = 0;
          if (v106)
          {
            if (*v106 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v106;
          }
        }
        if (v128)
        {
          v107 = (_DWORD *)v127[0];
          v127[0] = 0;
          if (v107)
          {
            if (*v107 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v107;
          }
        }
        v108 = v126;
        v126 = 0;
        if (v108)
        {
          if (*(_DWORD *)v108 == 2)
            WTF::StringImpl::destroy(v108, v98);
          else
            *(_DWORD *)v108 -= 2;
        }
        v41 = v121;
        v14 = v68;
      }
      WebCore::CanvasRenderingContext2DBase::setShadow(v14, v17, v21, v25, v29, v33, v37, v41);
      return 10;
    default:
      if (v9 > 2)
        return JSC::throwTypeError();
      v13.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, v7);
      return JSC::VM::throwException(v5, this, v13);
  }
  return result;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_clearShadow(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  int v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  WebCore::InspectorInstrumentation *v8;
  WebCore::ScriptExecutionContext *v9;
  uint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  _QWORD v17[2];
  WTF::StringImpl *v18;

  v3 = (int)this;
  v16 = *((_QWORD *)this + 7);
  v4 = JSC::jsDynamicCast<WebCore::JSCanvasRenderingContext2D *>(*((_QWORD *)a2 + 5));
  if (!v4)
    return (uint64_t)WebCore::throwThisTypeError(v3, (int)&v16, "CanvasRenderingContext2D", "clearShadow");
  v5 = *(_QWORD *)(v4 + 24);
  if (*(_BYTE *)(v5 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v17[0] = 0;
    v17[1] = 0;
    v8 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v5 + 32) + 144))(*(_QWORD *)(v5 + 32));
    if (v8)
    {
      v10 = WebCore::InspectorInstrumentation::instrumentingAgents(v8, v9);
      if (v10)
      {
        v11 = *(_QWORD *)(v10 + 96);
        if (v11)
          WebCore::InspectorCanvasAgent::recordAction(v11, (WebCore::CanvasRenderingContext *)v5, (const WTF::StringImpl *)&v18, v17);
      }
    }
    v12 = v18;
    v18 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 2)
        WTF::StringImpl::destroy(v12, v9);
      else
        *(_DWORD *)v12 -= 2;
    }
  }
  v17[0] = 0;
  v18 = (WTF::StringImpl *)0x1104000000000000;
  WebCore::CanvasRenderingContext2DBase::setShadow(v5, (const WebCore::FloatSize *)v17, 0.0, (const WebCore::Color *)&v18);
  if (((unint64_t)v18 & 0x8000000000000) != 0)
  {
    v13 = (unsigned int *)((unint64_t)v18 & 0xFFFFFFFFFFFFLL);
    do
    {
      v14 = __ldaxr(v13);
      v15 = v14 - 1;
    }
    while (__stlxr(v15, v13));
    if (!v15)
    {
      atomic_store(1u, v13);
      WTF::fastFree((WTF *)v13, v6);
    }
  }
  return 10;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_getEffectiveRenderingModeForTesting(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  unsigned __int8 *v17;
  unsigned int v18;
  unsigned int v19;
  WebCore::InspectorInstrumentation *v20;
  WebCore::ScriptExecutionContext *v21;
  uint64_t v22;
  uint64_t v23;
  WTF::StringImpl *v24;
  uint64_t v25;
  _QWORD v26[2];
  WTF::StringImpl *v27;

  v25 = *((_QWORD *)this + 7);
  v4 = JSC::jsDynamicCast<WebCore::JSCanvasRenderingContext2D *>(*((_QWORD *)a2 + 5));
  if (!v4)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v25, "CanvasRenderingContext2D", "getEffectiveRenderingModeForTesting");
  v5 = *(_QWORD *)(v4 + 24);
  if (*(_BYTE *)(v5 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v26[0] = 0;
    v26[1] = 0;
    v20 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v5 + 32) + 144))(*(_QWORD *)(v5 + 32));
    if (v20)
    {
      v22 = WebCore::InspectorInstrumentation::instrumentingAgents(v20, v21);
      if (v22)
      {
        v23 = *(_QWORD *)(v22 + 96);
        if (v23)
          WebCore::InspectorCanvasAgent::recordAction(v23, (WebCore::CanvasRenderingContext *)v5, (const WTF::StringImpl *)&v27, v26);
      }
    }
    v24 = v27;
    v27 = 0;
    if (v24)
    {
      if (*(_DWORD *)v24 == 2)
        WTF::StringImpl::destroy(v24, v21);
      else
        *(_DWORD *)v24 -= 2;
    }
  }
  v6 = *(_QWORD *)(v5 + 32);
  if (!*(_BYTE *)(v6 + 73))
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 160))(v6);
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
    return 2;
  (*(void (**)(uint64_t))(*(_QWORD *)v7 + 40))(v7);
  if (!*(_QWORD *)(v7 + 112))
    return 2;
  v9 = *(unsigned __int8 *)(v7 + 48);
  v10 = *((_QWORD *)this + 7);
  v11 = (uint64_t *)(v10 + 41968);
  if ((byte_1EE334E09 & 1) == 0)
  {
    unk_1EE334E90 = &dword_1ECE771F0;
    dword_1ECE771F0 += 2;
    dword_1ECE77210 += 2;
    unk_1EE334E98 = &dword_1ECE77210;
    byte_1EE334E09 = 1;
  }
  v12 = *(_QWORD *)&_MergedGlobals_823[8 * v9 + 136];
  if (!v12)
    return *v11;
  v13 = *(_DWORD *)v12;
  v14 = *(_DWORD *)(v12 + 4);
  *(_DWORD *)v12 += 2;
  if (v14)
  {
    if (v14 != 1)
    {
LABEL_12:
      v15 = *(_QWORD *)(v10 + 64760);
      if (!v15 || v12 != *(_QWORD *)(v15 + 8))
      {
        v15 = JSC::jsStringWithCacheSlowCase();
        v13 = *(_DWORD *)v12 - 2;
      }
      goto LABEL_15;
    }
    v17 = *(unsigned __int8 **)(v12 + 8);
    if ((*(_BYTE *)(v12 + 16) & 4) != 0)
    {
      v18 = *v17;
    }
    else
    {
      v19 = *(unsigned __int16 *)v17;
      if (v19 > 0xFF)
        goto LABEL_12;
      v18 = v19;
    }
    v15 = *(_QWORD *)(v10 + 8 * v18 + 42216);
  }
  else
  {
    v15 = *v11;
  }
LABEL_15:
  if (v13)
    *(_DWORD *)v12 = v13;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v12, v8);
  return v15;
}

_BYTE *WebCore::jsCanvasRenderingContext2DPrototypeFunction_drawImage(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4)
{
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  unint64_t v12;
  WebCore::InspectorCanvasCallTracer *v13;
  int v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  uint64_t v27;
  float v28;
  float v29;
  float v30;
  float v31;
  WTF::StringImpl *v32;
  uint64_t v33;
  WebCore::CanvasRenderingContext *v37;
  WebCore::CanvasRenderingContext *v38;
  WebCore::CanvasRenderingContext *v39;
  WebCore::CanvasRenderingContext *v40;
  WTF::StringImpl *v41;
  _DWORD *v42;
  _DWORD *v43;
  _DWORD *v44;
  _DWORD *v45;
  WTF::StringImpl *v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  JSValue v50;
  JSC::VM *v51;
  double v52;
  JSC::VM *v53;
  double v54;
  JSC::VM *v55;
  double v56;
  double v57;
  _QWORD v58[2];
  JSC::VM *v59;
  WTF::StringImpl **v60;
  WTF::StringImpl *v61;
  char v62;
  WTF::StringImpl *v63;
  int v64;
  float v65;
  float v66;
  float v67;
  float v68;
  WTF::StringImpl **v69;
  WTF::StringImpl *v70;
  WTF::StringImpl *v71;
  float *v72;
  _QWORD v73[2];
  char v74;
  _DWORD *v75;
  char v76;
  _DWORD *v77;
  char v78;
  _DWORD *v79;
  char v80;
  char v81[8];
  uint64_t v82;
  unsigned int v83;
  int v84;
  uint64_t v85;

  v85 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v58[0] = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)v58, "CanvasRenderingContext2D", "drawImage");
  v8 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v9 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v10 = (char **)(16 * v8);
  if ((_DWORD)v8)
    v11 = v10 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v11 = 1;
  if (!v11)
  {
    do
    {
      v10 = (char **)v10[2];
      v9 = v10 != 0;
    }
    while (v10 != &WebCore::JSCanvasRenderingContext2D::s_info && v10 != 0);
  }
  if (!v9)
    return WebCore::throwThisTypeError((int)this, (int)v58, "CanvasRenderingContext2D", "drawImage");
  v58[1] = v5;
  v12 = *((int *)a2 + 8) - 1;
  if (v12 >= 9)
    v12 = 9;
  if (v12 != 5)
  {
    if (v12 == 3)
      return (_BYTE *)WebCore::jsCanvasRenderingContext2DPrototypeFunction_drawImage1Body(this, a2, *(JSC::CallFrame **)(v6 + 24), a4);
    if (v12 == 9)
      return (_BYTE *)WebCore::jsCanvasRenderingContext2DPrototypeFunction_drawImage3Body(this, a2, *(JSC::CallFrame **)(v6 + 24), a4);
    if (v12 > 2)
      return (_BYTE *)JSC::throwTypeError();
    v50.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v5, this, v50);
  }
  v13 = *(WebCore::InspectorCanvasCallTracer **)(v6 + 24);
  v59 = v5;
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLImageElement>,WebCore::IDLInterface<WebCore::SVGImageElement>,WebCore::IDLInterface<WebCore::HTMLCanvasElement>,WebCore::IDLInterface<WebCore::ImageBitmap>,WebCore::IDLInterface<WebCore::CSSStyleImageValue>,WebCore::IDLInterface<WebCore::OffscreenCanvas>,WebCore::IDLInterface<WebCore::HTMLVideoElement>,WebCore::IDLInterface<WebCore::WebCodecsVideoFrame>>>::convert((uint64_t)this, *((_QWORD *)a2 + 6), (uint64_t)v81);
  v14 = v84;
  if (!v84)
  {
    v15 = *((_QWORD *)a2 + 7);
    v70 = (WTF::StringImpl *)v15;
    v16 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v15 >= 0xFFFE000000000000)
    {
      v17 = (double)(int)v15;
    }
    else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v51 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v70, this);
      v16 = v51;
      v17 = v52;
    }
    else
    {
      *(_QWORD *)&v17 = v15 - 0x2000000000000;
    }
    if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
    {
      v33 = 0;
      goto LABEL_37;
    }
    v18 = *((_QWORD *)a2 + 8);
    v70 = (WTF::StringImpl *)v18;
    v19 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v18 >= 0xFFFE000000000000)
    {
      v20 = (double)(int)v18;
    }
    else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v53 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v70, this);
      v19 = v53;
      v20 = v54;
    }
    else
    {
      *(_QWORD *)&v20 = v18 - 0x2000000000000;
    }
    if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
    {
      v33 = 0;
      goto LABEL_37;
    }
    v21 = *((_QWORD *)a2 + 9);
    v70 = (WTF::StringImpl *)v21;
    v22 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v21 >= 0xFFFE000000000000)
    {
      v23 = (double)(int)v21;
    }
    else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v55 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v70, this);
      v22 = v55;
      v23 = v56;
    }
    else
    {
      *(_QWORD *)&v23 = v21 - 0x2000000000000;
    }
    if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
    {
      v33 = 0;
      goto LABEL_37;
    }
    v24 = *((_QWORD *)a2 + 10);
    v70 = (WTF::StringImpl *)v24;
    v25 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v24 >= 0xFFFE000000000000)
    {
      v26 = (double)(int)v24;
    }
    else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v70, this);
      v26 = v57;
    }
    else
    {
      *(_QWORD *)&v26 = v24 - 0x2000000000000;
    }
    if (*((_DWORD *)v25 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v25))
    {
LABEL_60:
      v33 = 0;
      goto LABEL_37;
    }
    if (*((_BYTE *)v13 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v63 = v70;
      if (v84)
        goto LABEL_113;
      WebCore::InspectorCanvasCallTracer::processArgument((uint64_t)v13, (uint64_t)&v82, &v70);
      WebCore::InspectorCanvasCallTracer::processArgument(v13, v37, v17, v73);
      WebCore::InspectorCanvasCallTracer::processArgument(v13, v38, v20, &v75);
      WebCore::InspectorCanvasCallTracer::processArgument(v13, v39, v23, &v77);
      WebCore::InspectorCanvasCallTracer::processArgument(v13, v40, v26, &v79);
      v60 = &v70;
      v61 = (WTF::StringImpl *)5;
      WebCore::InspectorCanvasCallTracer::recordAction(v13, (const WTF::StringImpl *)&v63, &v60);
      if (v80)
      {
        v42 = v79;
        v79 = 0;
        if (v42)
        {
          if (*v42 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v42;
        }
      }
      if (v78)
      {
        v43 = v77;
        v77 = 0;
        if (v43)
        {
          if (*v43 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v43;
        }
      }
      if (v76)
      {
        v44 = v75;
        v75 = 0;
        if (v44)
        {
          if (*v44 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v44;
        }
      }
      if (v74)
      {
        v45 = (_DWORD *)v73[0];
        v73[0] = 0;
        if (v45)
        {
          if (*v45 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v45;
        }
      }
      if ((_BYTE)v72)
      {
        v46 = v70;
        v70 = 0;
        if (v46)
        {
          if (*(_DWORD *)v46 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*(_DWORD *)v46;
        }
      }
      v47 = v63;
      v63 = 0;
      if (v47)
      {
        if (*(_DWORD *)v47 == 2)
          WTF::StringImpl::destroy(v47, v41);
        else
          *(_DWORD *)v47 -= 2;
      }
    }
    if (!v84)
    {
      LOBYTE(v63) = 0;
      v64 = -1;
      v27 = v83;
      if (v83 != -1)
      {
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **, uint64_t *))off_1E32496B8[v83])(&v70, &v63, &v82);
        v64 = v27;
      }
      v28 = v17;
      v29 = v20;
      v30 = v23;
      v67 = v29;
      v68 = v28;
      v31 = v26;
      v65 = v31;
      v66 = v30;
      v70 = v13;
      v71 = (WTF::StringImpl *)&v68;
      v72 = &v67;
      v73[0] = &v66;
      v73[1] = &v65;
      if ((_DWORD)v27 != -1)
      {
        v69 = &v70;
        ((void (*)(WTF::StringImpl ***__return_ptr, WTF::StringImpl ***, WTF::StringImpl **))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore28CanvasRenderingContext2DBase9drawImageEONS_7variantIJNS6_6RefPtrINS8_16HTMLImageElementENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15SVGImageElementENSD_ISI_EENSF_ISI_EEEENSB_INS8_17HTMLCanvasElementENSD_ISM_EENSF_ISM_EEEENSB_INS8_11ImageBitmapENSD_ISQ_EENSF_ISQ_EEEENSB_INS8_18CSSStyleImageValueENSD_ISU_EENSF_ISU_EEEENSB_INS8_15OffscreenCanvasENSD_ISY_EENSF_ISY_EEEENSB_INS8_16HTMLVideoElementENSD_IS12_EENSF_IS12_EEEENSB_INS8_19WebCodecsVideoFrameENSD_IS16_EENSF_IS16_EEEEEEEffffE3__0JEEEEEJRNS0_6__implIJSH_SL_SP_ST_SX_S11_S15_S19_EEEEEEDcOT_DpOT0____fmatrix[v27])(&v60, &v69, &v63);
        if (v64 != -1)
          ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3249638[v64])(&v70, &v63);
        if (!v62)
        {
          v33 = 10;
LABEL_37:
          v14 = v84;
          goto LABEL_38;
        }
        LOBYTE(v70) = (_BYTE)v60;
        v48 = v61;
        v61 = 0;
        v71 = v48;
        if (!*((_QWORD *)v5 + 2))
        {
          WebCore::propagateExceptionSlowPath(this, &v59, (unsigned __int8 *)&v70);
          v48 = v71;
        }
        v71 = 0;
        if (v48)
        {
          if (*(_DWORD *)v48 == 2)
            WTF::StringImpl::destroy(v48, v32);
          else
            *(_DWORD *)v48 -= 2;
        }
        if (v62)
        {
          v49 = v61;
          v61 = 0;
          if (v49)
          {
            if (*(_DWORD *)v49 != 2)
            {
              v33 = 0;
              *(_DWORD *)v49 -= 2;
              goto LABEL_37;
            }
            WTF::StringImpl::destroy(v49, v32);
          }
        }
        goto LABEL_60;
      }
    }
LABEL_113:
    std::__throw_bad_variant_access[abi:sn180100]();
  }
  v33 = 0;
LABEL_38:
  if (v14 != -1)
    ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32496F8[v14])(&v70, &v82);
  return (_BYTE *)v33;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_beginPath(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  WebCore::InspectorInstrumentation *v12;
  WebCore::ScriptExecutionContext *v13;
  uint64_t v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  _QWORD v18[2];
  WTF::StringImpl *v19;

  v3 = *((_QWORD *)a2 + 5);
  v17 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "CanvasRenderingContext2D", "beginPath");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v17, "CanvasRenderingContext2D", "beginPath");
  v8 = *(_QWORD *)(v3 + 24);
  if (*(_BYTE *)(v8 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v18[0] = 0;
    v18[1] = 0;
    v12 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v8 + 32) + 144))(*(_QWORD *)(v8 + 32));
    if (v12)
    {
      v14 = WebCore::InspectorInstrumentation::instrumentingAgents(v12, v13);
      if (v14)
      {
        v15 = *(_QWORD *)(v14 + 96);
        if (v15)
          WebCore::InspectorCanvasAgent::recordAction(v15, (WebCore::CanvasRenderingContext *)v8, (const WTF::StringImpl *)&v19, v18);
      }
    }
    v16 = v19;
    v19 = 0;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v13);
      else
        *(_DWORD *)v16 -= 2;
    }
  }
  v9 = *(unsigned int *)(v8 + 112);
  if ((_DWORD)v9 == -1)
    goto LABEL_12;
  if ((_DWORD)v9)
  {
    ((void (*)(_QWORD *, uint64_t, JSC::CallFrame *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v9])(v18, v8 + 56, a3);
LABEL_12:
    *(_DWORD *)(v8 + 112) = 0;
  }
  return 10;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_fill(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  char **v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  JSC::JSRopeString *v17;
  uint64_t v18;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  uint64_t v24;
  WebCore::InspectorInstrumentation *v25;
  WebCore::ScriptExecutionContext *v26;
  uint64_t v27;
  uint64_t v28;
  _DWORD *v29;
  WTF::StringImpl *v30;
  uint64_t v31;
  uint64_t v32;
  _BOOL4 v33;
  char **v34;
  BOOL v35;
  _QWORD v37[2];
  _QWORD v38[2];
  WTF::StringImpl *v39;
  _DWORD v40[2];
  _QWORD v41[2];
  char v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v8 = *((_QWORD *)this + 7);
  v37[0] = v8;
  v9 = *((_QWORD *)a2 + 5);
  if ((v9 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v37, "CanvasRenderingContext2D", "fill");
  v10 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSCanvasRenderingContext2D::s_info && v12 != 0);
  }
  if (!v11)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v37, "CanvasRenderingContext2D", "fill");
  v37[1] = v8;
  v14 = *((int *)a2 + 8);
  v15 = v14 - 1;
  if ((unint64_t)(v14 - 1) >= 2)
    v15 = 2;
  if (v15)
  {
    if (v15 == 1)
    {
      v31 = *((_QWORD *)a2 + 6);
      if (v31 == 10 || (v31 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v31 + 5) < 0x17u)
        return WebCore::jsCanvasRenderingContext2DPrototypeFunction_fill1Body(this, a2, *(JSC::CallFrame **)(v9 + 24), a4);
      v32 = *(unsigned int *)(16 * (*(_DWORD *)v31 & 0xFFFFFFFE) + 0x4C);
      v33 = *(_DWORD *)(16 * (*(_DWORD *)v31 & 0xFFFFFFFE) + 0x4C) != 0;
      v34 = (char **)(16 * v32);
      if ((_DWORD)v32)
        v35 = v34 == &WebCore::JSPath2D::s_info;
      else
        v35 = 1;
      if (!v35)
      {
        do
        {
          v34 = (char **)v34[2];
          v33 = v34 != 0;
        }
        while (v34 != &WebCore::JSPath2D::s_info && v34 != 0);
      }
      if (!v33)
        return WebCore::jsCanvasRenderingContext2DPrototypeFunction_fill1Body(this, a2, *(JSC::CallFrame **)(v9 + 24), a4);
    }
    else if (v15 != 2)
    {
      return JSC::throwTypeError();
    }
    return WebCore::jsCanvasRenderingContext2DPrototypeFunction_fill2Body(this, a2, *(JSC::CallFrame **)(v9 + 24), a4, a5, a6, a7, a8);
  }
  v16 = *(_QWORD *)(v9 + 24);
  if ((_DWORD)v14 == 1 || (v17 = (JSC::JSRopeString *)*((_QWORD *)a2 + 6), v17 == (JSC::JSRopeString *)10))
  {
    v40[0] = 0;
  }
  else
  {
    WebCore::convert<WebCore::IDLEnumeration<WebCore::CanvasFillRule>,WebCore::jsCanvasRenderingContext2DPrototypeFunction_fill1Body(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSCanvasRenderingContext2D *)::{lambda(JSC::JSGlobalObject&,JSC::ThrowScope &)#1}>(v40, this, v17);
    if (v40[1])
      return 0;
  }
  if (*(_BYTE *)(v16 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v18 = v40[0];
    v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 32) + 144))(*(_QWORD *)(v16 + 32));
    if (v21
      && (v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22)) != 0
      && (v24 = *(_QWORD *)(v23 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v24, v16, v18, (uint64_t)v41);
    }
    else
    {
      LOBYTE(v41[0]) = 0;
      v42 = 0;
    }
    v38[0] = v41;
    v38[1] = 1;
    v25 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 32) + 144))(*(_QWORD *)(v16 + 32));
    if (v25)
    {
      v27 = WebCore::InspectorInstrumentation::instrumentingAgents(v25, v26);
      if (v27)
      {
        v28 = *(_QWORD *)(v27 + 96);
        if (v28)
          WebCore::InspectorCanvasAgent::recordAction(v28, (WebCore::CanvasRenderingContext *)v16, (const WTF::StringImpl *)&v39, v38);
      }
    }
    if (v42)
    {
      v29 = (_DWORD *)v41[0];
      v41[0] = 0;
      if (v29)
      {
        if (*v29 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v29;
      }
    }
    v30 = v39;
    v39 = 0;
    if (v30)
    {
      if (*(_DWORD *)v30 == 2)
        WTF::StringImpl::destroy(v30, v26);
      else
        *(_DWORD *)v30 -= 2;
    }
  }
  else
  {
    v18 = v40[0];
  }
  WebCore::CanvasRenderingContext2DBase::fill(v16, v18);
  return 10;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_stroke(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char **v11;
  BOOL v12;
  uint64_t v13;
  WebCore::InspectorInstrumentation *v16;
  WebCore::ScriptExecutionContext *v17;
  uint64_t v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  _QWORD v22[2];
  WTF::StringImpl *v23;

  v21 = *((_QWORD *)this + 7);
  v8 = *((_QWORD *)a2 + 5);
  if ((v8 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v21, "CanvasRenderingContext2D", "stroke");
  v9 = *(unsigned int *)(16 * (*(_DWORD *)v8 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)v8 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSCanvasRenderingContext2D::s_info && v11 != 0);
  }
  if (!v10)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v21, "CanvasRenderingContext2D", "stroke");
  if (*((_DWORD *)a2 + 8) != 1)
    return WebCore::jsCanvasRenderingContext2DPrototypeFunction_stroke2Body(this, *((_QWORD *)a2 + 6), *(JSC::CallFrame **)(v8 + 24), a4, a5, a6, a7, a8);
  v13 = *(_QWORD *)(v8 + 24);
  if (*(_BYTE *)(v13 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v22[0] = 0;
    v22[1] = 0;
    v16 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 32) + 144))(*(_QWORD *)(v13 + 32));
    if (v16)
    {
      v18 = WebCore::InspectorInstrumentation::instrumentingAgents(v16, v17);
      if (v18)
      {
        v19 = *(_QWORD *)(v18 + 96);
        if (v19)
          WebCore::InspectorCanvasAgent::recordAction(v19, (WebCore::CanvasRenderingContext *)v13, (const WTF::StringImpl *)&v23, v22);
      }
    }
    v20 = v23;
    v23 = 0;
    if (v20)
    {
      if (*(_DWORD *)v20 == 2)
        WTF::StringImpl::destroy(v20, v17);
      else
        *(_DWORD *)v20 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::stroke((WebCore::CanvasRenderingContext2DBase *)v13);
  return 10;
}

_BYTE *WebCore::jsCanvasRenderingContext2DPrototypeFunction_clip(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  char **v12;
  BOOL v13;
  unint64_t v14;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  _QWORD v23[2];

  v8 = *((_QWORD *)this + 7);
  v23[0] = v8;
  v9 = *((_QWORD *)a2 + 5);
  if ((v9 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)v23, "CanvasRenderingContext2D", "clip");
  v10 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
  v11 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
  v12 = (char **)(16 * v10);
  if ((_DWORD)v10)
    v13 = v12 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v13 = 1;
  if (!v13)
  {
    do
    {
      v12 = (char **)v12[2];
      v11 = v12 != 0;
    }
    while (v12 != &WebCore::JSCanvasRenderingContext2D::s_info && v12 != 0);
  }
  if (!v11)
    return WebCore::throwThisTypeError((int)this, (int)v23, "CanvasRenderingContext2D", "clip");
  v23[1] = v8;
  v14 = *((int *)a2 + 8) - 1;
  if (v14 >= 2)
    v14 = 2;
  if (!v14)
    return (_BYTE *)WebCore::jsCanvasRenderingContext2DPrototypeFunction_clip1Body(this, a2, *(JSC::CallFrame **)(v9 + 24), a4);
  if (v14 != 1)
    return (_BYTE *)WebCore::jsCanvasRenderingContext2DPrototypeFunction_clip2Body(this, a2, *(JSC::CallFrame **)(v9 + 24), a4, a5, a6, a7, a8);
  v17 = *((_QWORD *)a2 + 6);
  if (v17 == 10 || (v17 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v17 + 5) < 0x17u)
    return (_BYTE *)WebCore::jsCanvasRenderingContext2DPrototypeFunction_clip1Body(this, a2, *(JSC::CallFrame **)(v9 + 24), a4);
  v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
  v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
  v20 = (char **)(16 * v18);
  if ((_DWORD)v18)
    v21 = v20 == &WebCore::JSPath2D::s_info;
  else
    v21 = 1;
  if (!v21)
  {
    do
    {
      v20 = (char **)v20[2];
      v19 = v20 != 0;
    }
    while (v20 != &WebCore::JSPath2D::s_info && v20 != 0);
  }
  if (!v19)
    return (_BYTE *)WebCore::jsCanvasRenderingContext2DPrototypeFunction_clip1Body(this, a2, *(JSC::CallFrame **)(v9 + 24), a4);
  else
    return (_BYTE *)WebCore::jsCanvasRenderingContext2DPrototypeFunction_clip2Body(this, a2, *(JSC::CallFrame **)(v9 + 24), a4, a5, a6, a7, a8);
}

_BYTE *WebCore::jsCanvasRenderingContext2DPrototypeFunction_isPointInPath(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  unint64_t v16;
  JSValue v17;
  uint64_t v19;
  uint64_t v20;
  _BOOL4 v21;
  char **v22;
  BOOL v23;
  JSC::VM *v25;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v25 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "CanvasRenderingContext2D", "isPointInPath");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSCanvasRenderingContext2D::s_info && v13 != 0);
  }
  if (!v12)
    return WebCore::throwThisTypeError((int)this, (int)&v25, "CanvasRenderingContext2D", "isPointInPath");
  v16 = *((int *)a2 + 8) - 1;
  if (v16 >= 4)
    v16 = 4;
  switch(v16)
  {
    case 4uLL:
      return (_BYTE *)WebCore::jsCanvasRenderingContext2DPrototypeFunction_isPointInPath2Body(this, a2, *(JSC::CallFrame **)(v10 + 24), a4, a5, a6, a7, a8);
    case 3uLL:
      v19 = *((_QWORD *)a2 + 6);
      if ((v19 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v19 + 5) < 0x17u)
        return (_BYTE *)WebCore::jsCanvasRenderingContext2DPrototypeFunction_isPointInPath1Body(this, a2, *(JSC::CallFrame **)(v10 + 24), a4);
      v20 = *(unsigned int *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C);
      v21 = *(_DWORD *)(16 * (*(_DWORD *)v19 & 0xFFFFFFFE) + 0x4C) != 0;
      v22 = (char **)(16 * v20);
      if ((_DWORD)v20)
        v23 = v22 == &WebCore::JSPath2D::s_info;
      else
        v23 = 1;
      if (!v23)
      {
        do
        {
          v22 = (char **)v22[2];
          v21 = v22 != 0;
        }
        while (v22 != &WebCore::JSPath2D::s_info && v22 != 0);
      }
      if (!v21)
        return (_BYTE *)WebCore::jsCanvasRenderingContext2DPrototypeFunction_isPointInPath1Body(this, a2, *(JSC::CallFrame **)(v10 + 24), a4);
      return (_BYTE *)WebCore::jsCanvasRenderingContext2DPrototypeFunction_isPointInPath2Body(this, a2, *(JSC::CallFrame **)(v10 + 24), a4, a5, a6, a7, a8);
    case 2uLL:
      return (_BYTE *)WebCore::jsCanvasRenderingContext2DPrototypeFunction_isPointInPath1Body(this, a2, *(JSC::CallFrame **)(v10 + 24), a4);
  }
  v17.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
  return (_BYTE *)JSC::VM::throwException(v9, this, v17);
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_isPointInStroke(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v13;
  char **v14;
  BOOL v15;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BOOL4 v28;
  char **v29;
  BOOL v30;
  JSValue v32;
  uint64_t v33;
  unint64_t v34;
  double v35;
  unint64_t v36;
  JSC::VM *v37;
  double v38;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  WebCore::InspectorCanvasAgent *v42;
  WebCore::InspectorInstrumentation *v43;
  WebCore::ScriptExecutionContext *v44;
  uint64_t v45;
  WebCore::InspectorCanvasAgent *v46;
  WebCore::InspectorInstrumentation *v47;
  WebCore::ScriptExecutionContext *v48;
  uint64_t v49;
  uint64_t v50;
  _DWORD *v51;
  _DWORD *v52;
  WTF::StringImpl *v53;
  WebCore::InspectorInstrumentation *v54;
  WebCore::ScriptExecutionContext *v55;
  uint64_t v56;
  WebCore::InspectorCanvasAgent *v57;
  WebCore::InspectorInstrumentation *v58;
  WebCore::ScriptExecutionContext *v59;
  uint64_t v60;
  WebCore::InspectorCanvasAgent *v61;
  WebCore::InspectorInstrumentation *v62;
  WebCore::ScriptExecutionContext *v63;
  uint64_t v64;
  WebCore::InspectorCanvasAgent *v65;
  WebCore::InspectorInstrumentation *v66;
  WebCore::ScriptExecutionContext *v67;
  uint64_t v68;
  uint64_t v69;
  _DWORD *v70;
  _DWORD *v71;
  _DWORD *v72;
  WTF::StringImpl *v73;
  double v74;
  double v75;
  double v76;
  double v77;
  JSC::VM *v78;
  _QWORD *v79;
  uint64_t v80;
  WTF::StringImpl *v81;
  _QWORD v82[2];
  char v83;
  _QWORD v84[2];
  char v85;
  _DWORD *v86;
  char v87;
  uint64_t v88;

  v88 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v78 = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v78, "CanvasRenderingContext2D", "isPointInStroke");
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSCanvasRenderingContext2D::s_info && v14 != 0);
  }
  if (!v13)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v78, "CanvasRenderingContext2D", "isPointInStroke");
  v17 = *((int *)a2 + 8) - 1;
  if (v17 >= 3)
    v17 = 3;
  if (v17 == 3)
  {
    v25 = *(_QWORD *)(v10 + 24);
    v26 = *((_QWORD *)a2 + 6);
    v82[0] = v9;
    if ((v26 & 0xFFFE000000000002) != 0)
      goto LABEL_39;
    v27 = *(unsigned int *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0x4C);
    v28 = *(_DWORD *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0x4C) != 0;
    v29 = (char **)(16 * v27);
    if ((_DWORD)v27)
      v30 = v29 == &WebCore::JSPath2D::s_info;
    else
      v30 = 1;
    if (!v30)
    {
      do
      {
        v29 = (char **)v29[2];
        v28 = v29 != 0;
      }
      while (v29 != &WebCore::JSPath2D::s_info && v29 != 0);
    }
    if (v28 && (v33 = *(_QWORD *)(v26 + 24)) != 0)
    {
      v34 = *((_QWORD *)a2 + 7);
      v82[0] = v34;
      if (v34 >= 0xFFFE000000000000)
      {
        v35 = (double)(int)v34;
      }
      else if (v34 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v82, this);
        v35 = v76;
      }
      else
      {
        *(_QWORD *)&v35 = v34 - 0x2000000000000;
      }
      if (*((_DWORD *)v9 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v9))
      {
        return 0;
      }
      else
      {
        v36 = *((_QWORD *)a2 + 8);
        v82[0] = v36;
        v37 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v36 >= 0xFFFE000000000000)
        {
          v38 = (double)(int)v36;
        }
        else if (v36 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v82, this);
          v38 = v77;
        }
        else
        {
          *(_QWORD *)&v38 = v36 - 0x2000000000000;
        }
        if (*((_DWORD *)v37 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v37))
        {
          return 0;
        }
        else
        {
          if (*(_BYTE *)(v25 + 25))
          {
            WTF::StringImpl::createWithoutCopyingNonEmpty();
            v54 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v25 + 32)
                                                                                         + 144))(*(_QWORD *)(v25 + 32));
            if (v54
              && (v56 = WebCore::InspectorInstrumentation::instrumentingAgents(v54, v55)) != 0
              && (v57 = *(WebCore::InspectorCanvasAgent **)(v56 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v57, (WebCore::CanvasRenderingContext *)v25, (WebCore::Path2D *)v33, (uint64_t)v82);
            }
            else
            {
              LOBYTE(v82[0]) = 0;
              v83 = 0;
            }
            v58 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v25 + 32)
                                                                                         + 144))(*(_QWORD *)(v25 + 32));
            if (v58
              && (v60 = WebCore::InspectorInstrumentation::instrumentingAgents(v58, v59)) != 0
              && (v61 = *(WebCore::InspectorCanvasAgent **)(v60 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v61, (WebCore::CanvasRenderingContext *)v25, v35, (uint64_t)v84);
            }
            else
            {
              LOBYTE(v84[0]) = 0;
              v85 = 0;
            }
            v62 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v25 + 32)
                                                                                         + 144))(*(_QWORD *)(v25 + 32));
            if (v62
              && (v64 = WebCore::InspectorInstrumentation::instrumentingAgents(v62, v63)) != 0
              && (v65 = *(WebCore::InspectorCanvasAgent **)(v64 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v65, (WebCore::CanvasRenderingContext *)v25, v38, (uint64_t)&v86);
            }
            else
            {
              LOBYTE(v86) = 0;
              v87 = 0;
            }
            v79 = v82;
            v80 = 3;
            v66 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v25 + 32)
                                                                                         + 144))(*(_QWORD *)(v25 + 32));
            if (v66)
            {
              v68 = WebCore::InspectorInstrumentation::instrumentingAgents(v66, v67);
              if (v68)
              {
                v69 = *(_QWORD *)(v68 + 96);
                if (v69)
                  WebCore::InspectorCanvasAgent::recordAction(v69, (WebCore::CanvasRenderingContext *)v25, (const WTF::StringImpl *)&v81, &v79);
              }
            }
            if (v87)
            {
              v70 = v86;
              v86 = 0;
              if (v70)
              {
                if (*v70 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v70;
              }
            }
            if (v85)
            {
              v71 = (_DWORD *)v84[0];
              v84[0] = 0;
              if (v71)
              {
                if (*v71 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v71;
              }
            }
            if (v83)
            {
              v72 = (_DWORD *)v82[0];
              v82[0] = 0;
              if (v72)
              {
                if (*v72 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v72;
              }
            }
            v73 = v81;
            v81 = 0;
            if (v73)
            {
              if (*(_DWORD *)v73 == 2)
                WTF::StringImpl::destroy(v73, v67);
              else
                *(_DWORD *)v73 -= 2;
            }
          }
          if (WebCore::CanvasRenderingContext2DBase::isPointInStrokeInternal((WebCore::CanvasRenderingContext2DBase *)v25, (const WebCore::Path *)(v33 + 8), v35, v38))return 7;
          else
            return 6;
        }
      }
    }
    else
    {
LABEL_39:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v82, 0, "path", 5, "CanvasRenderingContext2D", 25, a8, "isPointInStroke", 16, "Path2D", 7);
      return 0;
    }
  }
  else if (v17 == 2)
  {
    v18 = *(_QWORD *)(v10 + 24);
    v19 = *((_QWORD *)a2 + 6);
    v82[0] = v19;
    if (v19 >= 0xFFFE000000000000)
    {
      v20 = (double)(int)v19;
    }
    else if (v19 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v82, this);
      v20 = v74;
    }
    else
    {
      *(_QWORD *)&v20 = v19 - 0x2000000000000;
    }
    if (*((_DWORD *)v9 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v9))
    {
      return 0;
    }
    else
    {
      v21 = *((_QWORD *)a2 + 7);
      v82[0] = v21;
      v22 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v21 >= 0xFFFE000000000000)
      {
        v23 = (double)(int)v21;
      }
      else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v82, this);
        v23 = v75;
      }
      else
      {
        *(_QWORD *)&v23 = v21 - 0x2000000000000;
      }
      if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
      {
        return 0;
      }
      else
      {
        if (*(_BYTE *)(v18 + 25))
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v18 + 32) + 144))(*(_QWORD *)(v18 + 32));
          if (v39
            && (v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40)) != 0
            && (v42 = *(WebCore::InspectorCanvasAgent **)(v41 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v42, (WebCore::CanvasRenderingContext *)v18, v20, (uint64_t)v82);
          }
          else
          {
            LOBYTE(v82[0]) = 0;
            v83 = 0;
          }
          v43 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v18 + 32) + 144))(*(_QWORD *)(v18 + 32));
          if (v43
            && (v45 = WebCore::InspectorInstrumentation::instrumentingAgents(v43, v44)) != 0
            && (v46 = *(WebCore::InspectorCanvasAgent **)(v45 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v46, (WebCore::CanvasRenderingContext *)v18, v23, (uint64_t)v84);
          }
          else
          {
            LOBYTE(v84[0]) = 0;
            v85 = 0;
          }
          v79 = v82;
          v80 = 2;
          v47 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v18 + 32) + 144))(*(_QWORD *)(v18 + 32));
          if (v47)
          {
            v49 = WebCore::InspectorInstrumentation::instrumentingAgents(v47, v48);
            if (v49)
            {
              v50 = *(_QWORD *)(v49 + 96);
              if (v50)
                WebCore::InspectorCanvasAgent::recordAction(v50, (WebCore::CanvasRenderingContext *)v18, (const WTF::StringImpl *)&v81, &v79);
            }
          }
          if (v85)
          {
            v51 = (_DWORD *)v84[0];
            v84[0] = 0;
            if (v51)
            {
              if (*v51 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v51;
            }
          }
          if (v83)
          {
            v52 = (_DWORD *)v82[0];
            v82[0] = 0;
            if (v52)
            {
              if (*v52 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v52;
            }
          }
          v53 = v81;
          v81 = 0;
          if (v53)
          {
            if (*(_DWORD *)v53 == 2)
              WTF::StringImpl::destroy(v53, v48);
            else
              *(_DWORD *)v53 -= 2;
          }
        }
        if (WebCore::CanvasRenderingContext2DBase::isPointInStrokeInternal((WebCore::CanvasRenderingContext2DBase *)v18, (const WebCore::Path *)(v18 + 48), v20, v23))return 7;
        else
          return 6;
      }
    }
  }
  else
  {
    v32.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v32);
  }
}

_BYTE *WebCore::jsCanvasRenderingContext2DPrototypeFunction_createLinearGradient(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::InspectorCanvasCallTracer *v11;
  unint64_t v12;
  double v13;
  unint64_t v14;
  JSC::VM *v15;
  double v16;
  unint64_t v17;
  JSC::VM *v18;
  double v19;
  unint64_t v20;
  JSC::VM *v21;
  double v22;
  WTF::StringImpl *v23;
  float v24;
  float v25;
  float v26;
  float v27;
  WebCore::CanvasGradient *v28;
  uint64_t v29;
  JSValue v33;
  WebCore::CanvasRenderingContext *v34;
  WebCore::CanvasRenderingContext *v35;
  WebCore::CanvasRenderingContext *v36;
  WebCore::CanvasRenderingContext *v37;
  WTF::StringImpl *v38;
  WTF::StringImpl *v39;
  double v40;
  double v41;
  double v42;
  double v43;
  JSC::VM *v44;
  _QWORD v45[2];
  JSC::VM *v46;
  WTF::StringImpl *v47;
  _QWORD v48[2];
  int v49;
  _BYTE v50[24];
  _BYTE v51[24];
  _BYTE v52[24];
  uint64_t v53;

  v53 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v44 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v44, "CanvasRenderingContext2D", "createLinearGradient");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v44, "CanvasRenderingContext2D", "createLinearGradient");
  v46 = v4;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v33.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v33);
  }
  v11 = *(WebCore::InspectorCanvasCallTracer **)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v48[0] = v12;
  v45[0] = v4;
  if (v12 >= 0xFFFE000000000000)
  {
    v13 = (double)(int)v12;
  }
  else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v48, this);
    v13 = v40;
  }
  else
  {
    *(_QWORD *)&v13 = v12 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v13 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v14 = *((_QWORD *)a2 + 7);
  v48[0] = v14;
  v15 = (JSC::VM *)*((_QWORD *)this + 7);
  v45[0] = v15;
  if (v14 >= 0xFFFE000000000000)
  {
    v16 = (double)(int)v14;
  }
  else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v48, this);
    v16 = v41;
  }
  else
  {
    *(_QWORD *)&v16 = v14 - 0x2000000000000;
  }
  if (*((_DWORD *)v15 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v16 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v17 = *((_QWORD *)a2 + 8);
  v48[0] = v17;
  v18 = (JSC::VM *)*((_QWORD *)this + 7);
  v45[0] = v18;
  if (v17 >= 0xFFFE000000000000)
  {
    v19 = (double)(int)v17;
  }
  else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v48, this);
    v19 = v42;
  }
  else
  {
    *(_QWORD *)&v19 = v17 - 0x2000000000000;
  }
  if (*((_DWORD *)v18 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v18) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v19 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v20 = *((_QWORD *)a2 + 9);
  v48[0] = v20;
  v21 = (JSC::VM *)*((_QWORD *)this + 7);
  v45[0] = v21;
  if (v20 >= 0xFFFE000000000000)
  {
    v22 = (double)(int)v20;
  }
  else if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v48, this);
    v22 = v43;
  }
  else
  {
    *(_QWORD *)&v22 = v20 - 0x2000000000000;
  }
  if (*((_DWORD *)v21 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v21) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v22 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  if (*((_BYTE *)v11 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    WebCore::InspectorCanvasCallTracer::processArgument(v11, v34, v13, v48);
    WebCore::InspectorCanvasCallTracer::processArgument(v11, v35, v16, v50);
    WebCore::InspectorCanvasCallTracer::processArgument(v11, v36, v19, v51);
    WebCore::InspectorCanvasCallTracer::processArgument(v11, v37, v22, v52);
    v45[0] = v48;
    v45[1] = 4;
    WebCore::InspectorCanvasCallTracer::recordAction(v11, (const WTF::StringImpl *)&v47, v45);
    std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v52);
    std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v51);
    std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v50);
    std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v48);
    v39 = v47;
    v47 = 0;
    if (v39)
    {
      if (*(_DWORD *)v39 == 2)
        WTF::StringImpl::destroy(v39, v38);
      else
        *(_DWORD *)v39 -= 2;
    }
  }
  v23 = *(WTF::StringImpl **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v24 = v13;
  if ((LODWORD(v24) & 0x7FFFFFFFu) > 0x7F7FFFFF
    || (v25 = v16, (LODWORD(v25) & 0x7FFFFFFFu) > 0x7F7FFFFF)
    || (v26 = v19, (LODWORD(v26) & 0x7FFFFFFFu) > 0x7F7FFFFF)
    || (v27 = v22, (LODWORD(v27) & 0x7FFFFFFFu) >= 0x7F800000))
  {
    LOBYTE(v48[0]) = 6;
    v48[1] = 0;
    v49 = 1;
  }
  else
  {
    *(float *)v45 = v13;
    *((float *)v45 + 1) = v16;
    *(float *)&v47 = v19;
    *((float *)&v47 + 1) = v22;
    v28 = (WebCore::CanvasGradient *)WTF::fastMalloc((WTF *)0x18);
    v48[0] = WebCore::CanvasGradient::CanvasGradient(v28, (const WebCore::FloatPoint *)v45, (const WebCore::FloatPoint *)&v47, v11);
    v49 = 0;
  }
  v29 = WebCore::toJS<WebCore::IDLInterface<WebCore::CanvasGradient>,WebCore::ExceptionOr<WTF::Ref<WebCore::CanvasGradient,WTF::RawPtrTraits<WebCore::CanvasGradient>,WTF::DefaultRefDerefTraits<WebCore::CanvasGradient>>>>(this, v23, &v46, (uint64_t)v48);
  if (v49 != -1)
    ((void (*)(_QWORD *, _QWORD *))off_1E3249708[v49])(v45, v48);
  return (_BYTE *)v29;
}

_BYTE *WebCore::jsCanvasRenderingContext2DPrototypeFunction_createRadialGradient(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  unint64_t v27;
  JSC::VM *v28;
  double v29;
  WTF::StringImpl *v30;
  float v31;
  float v32;
  float v33;
  float v34;
  float v35;
  float v36;
  WebCore::CanvasGradient *v37;
  float v38;
  float v39;
  uint64_t v40;
  JSValue v43;
  WebCore::InspectorInstrumentation *v44;
  WebCore::ScriptExecutionContext *v45;
  uint64_t v46;
  WebCore::InspectorCanvasAgent *v47;
  WebCore::InspectorInstrumentation *v48;
  WebCore::ScriptExecutionContext *v49;
  uint64_t v50;
  WebCore::InspectorCanvasAgent *v51;
  WebCore::InspectorInstrumentation *v52;
  WebCore::ScriptExecutionContext *v53;
  uint64_t v54;
  WebCore::InspectorCanvasAgent *v55;
  WebCore::InspectorInstrumentation *v56;
  WebCore::ScriptExecutionContext *v57;
  uint64_t v58;
  WebCore::InspectorCanvasAgent *v59;
  WebCore::InspectorInstrumentation *v60;
  WebCore::ScriptExecutionContext *v61;
  uint64_t v62;
  WebCore::InspectorCanvasAgent *v63;
  WebCore::InspectorInstrumentation *v64;
  WebCore::ScriptExecutionContext *v65;
  uint64_t v66;
  WebCore::InspectorCanvasAgent *v67;
  WebCore::InspectorInstrumentation *v68;
  WebCore::ScriptExecutionContext *v69;
  uint64_t v70;
  uint64_t v71;
  _DWORD *v72;
  _DWORD *v73;
  _DWORD *v74;
  _DWORD *v75;
  _DWORD *v76;
  _DWORD *v77;
  WTF::StringImpl *v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  JSC::VM *v85;
  _QWORD v86[2];
  JSC::VM *v87;
  WTF::StringImpl *v88;
  _QWORD v89[2];
  int v90;
  _DWORD *v91;
  char v92;
  _DWORD *v93;
  char v94;
  _DWORD *v95;
  char v96;
  _DWORD *v97;
  char v98;
  _DWORD *v99;
  char v100;
  uint64_t v101;

  v101 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v85 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v85, "CanvasRenderingContext2D", "createRadialGradient");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v85, "CanvasRenderingContext2D", "createRadialGradient");
  v87 = v4;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 5)
  {
    v43.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v43);
  }
  v12 = *(_QWORD *)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  v89[0] = v13;
  v86[0] = v4;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v89, this);
    v14 = v79;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v15 = *((_QWORD *)a2 + 7);
  v89[0] = v15;
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  v86[0] = v16;
  if (v15 >= 0xFFFE000000000000)
  {
    v17 = (double)(int)v15;
  }
  else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v89, this);
    v17 = v80;
  }
  else
  {
    *(_QWORD *)&v17 = v15 - 0x2000000000000;
  }
  if (*((_DWORD *)v16 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v16) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v17 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v18 = *((_QWORD *)a2 + 8);
  v89[0] = v18;
  v19 = (JSC::VM *)*((_QWORD *)this + 7);
  v86[0] = v19;
  if (v18 >= 0xFFFE000000000000)
  {
    v20 = (double)(int)v18;
  }
  else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v89, this);
    v20 = v81;
  }
  else
  {
    *(_QWORD *)&v20 = v18 - 0x2000000000000;
  }
  if (*((_DWORD *)v19 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v19) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v20 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v21 = *((_QWORD *)a2 + 9);
  v89[0] = v21;
  v22 = (JSC::VM *)*((_QWORD *)this + 7);
  v86[0] = v22;
  if (v21 >= 0xFFFE000000000000)
  {
    v23 = (double)(int)v21;
  }
  else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v89, this);
    v23 = v82;
  }
  else
  {
    *(_QWORD *)&v23 = v21 - 0x2000000000000;
  }
  if (*((_DWORD *)v22 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v22) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v23 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v24 = *((_QWORD *)a2 + 10);
  v89[0] = v24;
  v25 = (JSC::VM *)*((_QWORD *)this + 7);
  v86[0] = v25;
  if (v24 >= 0xFFFE000000000000)
  {
    v26 = (double)(int)v24;
  }
  else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v89, this);
    v26 = v83;
  }
  else
  {
    *(_QWORD *)&v26 = v24 - 0x2000000000000;
  }
  if (*((_DWORD *)v25 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v25) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v26 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v27 = *((_QWORD *)a2 + 11);
  v89[0] = v27;
  v28 = (JSC::VM *)*((_QWORD *)this + 7);
  v86[0] = v28;
  if (v27 >= 0xFFFE000000000000)
  {
    v29 = (double)(int)v27;
  }
  else if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v89, this);
    v29 = v84;
  }
  else
  {
    *(_QWORD *)&v29 = v27 - 0x2000000000000;
  }
  if (*((_DWORD *)v28 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v28) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v29 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  if (*(_BYTE *)(v12 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v88 = (WTF::StringImpl *)v89[0];
    v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
    if (v44
      && (v46 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, v45)) != 0
      && (v47 = *(WebCore::InspectorCanvasAgent **)(v46 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v47, (WebCore::CanvasRenderingContext *)v12, v14, (uint64_t)v89);
    }
    else
    {
      LOBYTE(v89[0]) = 0;
      LOBYTE(v90) = 0;
    }
    v48 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
    if (v48
      && (v50 = WebCore::InspectorInstrumentation::instrumentingAgents(v48, v49)) != 0
      && (v51 = *(WebCore::InspectorCanvasAgent **)(v50 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v51, (WebCore::CanvasRenderingContext *)v12, v17, (uint64_t)&v91);
    }
    else
    {
      LOBYTE(v91) = 0;
      v92 = 0;
    }
    v52 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
    if (v52
      && (v54 = WebCore::InspectorInstrumentation::instrumentingAgents(v52, v53)) != 0
      && (v55 = *(WebCore::InspectorCanvasAgent **)(v54 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v55, (WebCore::CanvasRenderingContext *)v12, v20, (uint64_t)&v93);
    }
    else
    {
      LOBYTE(v93) = 0;
      v94 = 0;
    }
    v56 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
    if (v56
      && (v58 = WebCore::InspectorInstrumentation::instrumentingAgents(v56, v57)) != 0
      && (v59 = *(WebCore::InspectorCanvasAgent **)(v58 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v59, (WebCore::CanvasRenderingContext *)v12, v23, (uint64_t)&v95);
    }
    else
    {
      LOBYTE(v95) = 0;
      v96 = 0;
    }
    v60 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
    if (v60
      && (v62 = WebCore::InspectorInstrumentation::instrumentingAgents(v60, v61)) != 0
      && (v63 = *(WebCore::InspectorCanvasAgent **)(v62 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v63, (WebCore::CanvasRenderingContext *)v12, v26, (uint64_t)&v97);
    }
    else
    {
      LOBYTE(v97) = 0;
      v98 = 0;
    }
    v64 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
    if (v64
      && (v66 = WebCore::InspectorInstrumentation::instrumentingAgents(v64, v65)) != 0
      && (v67 = *(WebCore::InspectorCanvasAgent **)(v66 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v67, (WebCore::CanvasRenderingContext *)v12, v29, (uint64_t)&v99);
    }
    else
    {
      LOBYTE(v99) = 0;
      v100 = 0;
    }
    v86[0] = v89;
    v86[1] = 6;
    v68 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
    if (v68)
    {
      v70 = WebCore::InspectorInstrumentation::instrumentingAgents(v68, v69);
      if (v70)
      {
        v71 = *(_QWORD *)(v70 + 96);
        if (v71)
          WebCore::InspectorCanvasAgent::recordAction(v71, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v88, v86);
      }
    }
    if (v100)
    {
      v72 = v99;
      v99 = 0;
      if (v72)
      {
        if (*v72 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v72;
      }
    }
    if (v98)
    {
      v73 = v97;
      v97 = 0;
      if (v73)
      {
        if (*v73 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v73;
      }
    }
    if (v96)
    {
      v74 = v95;
      v95 = 0;
      if (v74)
      {
        if (*v74 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v74;
      }
    }
    if (v94)
    {
      v75 = v93;
      v93 = 0;
      if (v75)
      {
        if (*v75 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v75;
      }
    }
    if (v92)
    {
      v76 = v91;
      v91 = 0;
      if (v76)
      {
        if (*v76 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v76;
      }
    }
    if ((_BYTE)v90)
    {
      v77 = (_DWORD *)v89[0];
      v89[0] = 0;
      if (v77)
      {
        if (*v77 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v77;
      }
    }
    v78 = v88;
    v88 = 0;
    if (v78)
    {
      if (*(_DWORD *)v78 == 2)
        WTF::StringImpl::destroy(v78, v69);
      else
        *(_DWORD *)v78 -= 2;
    }
  }
  v30 = *(WTF::StringImpl **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v31 = v14;
  if ((LODWORD(v31) & 0x7FFFFFFFu) > 0x7F7FFFFF
    || (v32 = v17, (LODWORD(v32) & 0x7FFFFFFFu) > 0x7F7FFFFF)
    || (v33 = v20, (LODWORD(v33) & 0x7FFFFFFFu) > 0x7F7FFFFF)
    || (v34 = v23, (LODWORD(v34) & 0x7FFFFFFFu) > 0x7F7FFFFF)
    || (v35 = v26, (LODWORD(v35) & 0x7FFFFFFFu) > 0x7F7FFFFF)
    || (v36 = v29, (LODWORD(v36) & 0x7FFFFFFFu) >= 0x7F800000))
  {
    LOBYTE(v89[0]) = 6;
  }
  else
  {
    if (v33 >= 0.0 && v36 >= 0.0)
    {
      v86[0] = __PAIR64__(LODWORD(v32), LODWORD(v31));
      *(float *)&v88 = v23;
      *((float *)&v88 + 1) = v26;
      v37 = (WebCore::CanvasGradient *)WTF::fastMalloc((WTF *)0x18);
      v38 = v20;
      v39 = v29;
      v89[0] = WebCore::CanvasGradient::CanvasGradient(v37, (const WebCore::FloatPoint *)v86, v38, (const WebCore::FloatPoint *)&v88, v39, (WebCore::CanvasRenderingContext *)v12);
      v90 = 0;
      goto LABEL_55;
    }
    LOBYTE(v89[0]) = 0;
  }
  v89[1] = 0;
  v90 = 1;
LABEL_55:
  v40 = WebCore::toJS<WebCore::IDLInterface<WebCore::CanvasGradient>,WebCore::ExceptionOr<WTF::Ref<WebCore::CanvasGradient,WTF::RawPtrTraits<WebCore::CanvasGradient>,WTF::DefaultRefDerefTraits<WebCore::CanvasGradient>>>>(this, v30, &v87, (uint64_t)v89);
  if (v90 != -1)
    ((void (*)(_QWORD *, _QWORD *))off_1E3249708[v90])(v86, v89);
  return (_BYTE *)v40;
}

_BYTE *WebCore::jsCanvasRenderingContext2DPrototypeFunction_createConicGradient(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  WTF::StringImpl *v21;
  float v22;
  float v23;
  BOOL v24;
  float v25;
  uint64_t v27;
  float v29;
  WebCore::CanvasGradient *v30;
  JSValue v32;
  WebCore::InspectorInstrumentation *v33;
  WebCore::ScriptExecutionContext *v34;
  uint64_t v35;
  WebCore::InspectorCanvasAgent *v36;
  WebCore::InspectorInstrumentation *v37;
  WebCore::ScriptExecutionContext *v38;
  uint64_t v39;
  WebCore::InspectorCanvasAgent *v40;
  WebCore::InspectorInstrumentation *v41;
  WebCore::ScriptExecutionContext *v42;
  uint64_t v43;
  WebCore::InspectorCanvasAgent *v44;
  WebCore::InspectorInstrumentation *v45;
  WebCore::ScriptExecutionContext *v46;
  uint64_t v47;
  uint64_t v48;
  _DWORD *v49;
  _DWORD *v50;
  _DWORD *v51;
  WTF::StringImpl *v52;
  double v53;
  double v54;
  double v55;
  JSC::VM *v56;
  _QWORD v57[2];
  WTF::StringImpl *v58;
  JSC::VM *v59;
  _QWORD v60[2];
  int v61;
  _DWORD *v62;
  char v63;
  _DWORD *v64;
  char v65;
  uint64_t v66;

  v66 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v56 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v56, "CanvasRenderingContext2D", "createConicGradient");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v56, "CanvasRenderingContext2D", "createConicGradient");
  v59 = v4;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v32.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v32);
  }
  v12 = *(_QWORD *)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  v60[0] = v13;
  v57[0] = v4;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v60, this);
    v14 = v53;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v15 = *((_QWORD *)a2 + 7);
  v60[0] = v15;
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  v57[0] = v16;
  if (v15 >= 0xFFFE000000000000)
  {
    v17 = (double)(int)v15;
  }
  else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v60, this);
    v17 = v54;
  }
  else
  {
    *(_QWORD *)&v17 = v15 - 0x2000000000000;
  }
  if (*((_DWORD *)v16 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v16) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v17 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  v18 = *((_QWORD *)a2 + 8);
  v60[0] = v18;
  v19 = (JSC::VM *)*((_QWORD *)this + 7);
  v57[0] = v19;
  if (v18 >= 0xFFFE000000000000)
  {
    v20 = (double)(int)v18;
  }
  else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v60, this);
    v20 = v55;
  }
  else
  {
    *(_QWORD *)&v20 = v18 - 0x2000000000000;
  }
  if (*((_DWORD *)v19 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v19) & 1) != 0)
    return 0;
  if ((*(_QWORD *)&v20 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    JSC::throwTypeError();
    return 0;
  }
  if (*(_BYTE *)(v12 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v33 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
    if (v33
      && (v35 = WebCore::InspectorInstrumentation::instrumentingAgents(v33, v34)) != 0
      && (v36 = *(WebCore::InspectorCanvasAgent **)(v35 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v36, (WebCore::CanvasRenderingContext *)v12, v14, (uint64_t)v60);
    }
    else
    {
      LOBYTE(v60[0]) = 0;
      LOBYTE(v61) = 0;
    }
    v37 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
    if (v37
      && (v39 = WebCore::InspectorInstrumentation::instrumentingAgents(v37, v38)) != 0
      && (v40 = *(WebCore::InspectorCanvasAgent **)(v39 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v40, (WebCore::CanvasRenderingContext *)v12, v17, (uint64_t)&v62);
    }
    else
    {
      LOBYTE(v62) = 0;
      v63 = 0;
    }
    v41 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
    if (v41
      && (v43 = WebCore::InspectorInstrumentation::instrumentingAgents(v41, v42)) != 0
      && (v44 = *(WebCore::InspectorCanvasAgent **)(v43 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v44, (WebCore::CanvasRenderingContext *)v12, v20, (uint64_t)&v64);
    }
    else
    {
      LOBYTE(v64) = 0;
      v65 = 0;
    }
    v57[0] = v60;
    v57[1] = 3;
    v45 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
    if (v45)
    {
      v47 = WebCore::InspectorInstrumentation::instrumentingAgents(v45, v46);
      if (v47)
      {
        v48 = *(_QWORD *)(v47 + 96);
        if (v48)
          WebCore::InspectorCanvasAgent::recordAction(v48, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v58, v57);
      }
    }
    if (v65)
    {
      v49 = v64;
      v64 = 0;
      if (v49)
      {
        if (*v49 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v49;
      }
    }
    if (v63)
    {
      v50 = v62;
      v62 = 0;
      if (v50)
      {
        if (*v50 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v50;
      }
    }
    if ((_BYTE)v61)
    {
      v51 = (_DWORD *)v60[0];
      v60[0] = 0;
      if (v51)
      {
        if (*v51 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v51;
      }
    }
    v52 = v58;
    v58 = 0;
    if (v52)
    {
      if (*(_DWORD *)v52 == 2)
        WTF::StringImpl::destroy(v52, v46);
      else
        *(_DWORD *)v52 -= 2;
    }
  }
  v21 = *(WTF::StringImpl **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
  v22 = v14;
  if ((LODWORD(v22) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
  {
    v23 = v17;
    v24 = (LODWORD(v23) & 0x7FFFFFFFu) <= 0x7F7FFFFF;
  }
  else
  {
    v24 = 0;
  }
  v25 = fabs(v20);
  if (v24 && SLODWORD(v25) < 2139095040)
  {
    v29 = (float)((float)((float)(v22 / 6.2832) - floorf(v22 / 6.2832)) * 6.2832) + 1.5708;
    *(float *)v57 = v17;
    *((float *)v57 + 1) = v20;
    v30 = (WebCore::CanvasGradient *)WTF::fastMalloc((WTF *)0x18);
    v60[0] = WebCore::CanvasGradient::CanvasGradient(v30, (const WebCore::FloatPoint *)v57, v29, (WebCore::CanvasRenderingContext *)v12);
    v61 = 0;
  }
  else
  {
    LOBYTE(v60[0]) = 6;
    v60[1] = 0;
    v61 = 1;
  }
  v27 = WebCore::toJS<WebCore::IDLInterface<WebCore::CanvasGradient>,WebCore::ExceptionOr<WTF::Ref<WebCore::CanvasGradient,WTF::RawPtrTraits<WebCore::CanvasGradient>,WTF::DefaultRefDerefTraits<WebCore::CanvasGradient>>>>(this, v21, &v59, (uint64_t)v60);
  if (v61 != -1)
    ((void (*)(_QWORD *, _QWORD *))off_1E3249708[v61])(v57, v60);
  return (_BYTE *)v27;
}

_BYTE *WebCore::jsCanvasRenderingContext2DPrototypeFunction_createPattern(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  WTF::StringImpl *v17;
  void *v18;
  WTF::StringImpl *v19;
  uint64_t *v20;
  unint64_t v21;
  WTF *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  JSValue v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  uint64_t v35;
  WTF::StringImpl *v36;
  WebCore::InspectorInstrumentation *v37;
  WebCore::ScriptExecutionContext *v38;
  uint64_t v39;
  WebCore::InspectorCanvasAgent *v40;
  WebCore::InspectorInstrumentation *v41;
  WebCore::ScriptExecutionContext *v42;
  uint64_t v43;
  uint64_t v44;
  _DWORD *v45;
  WTF::StringImpl *v46;
  WTF::StringImpl *v47;
  JSC::VM *v48;
  WTF::StringImpl *v49;
  WTF::StringImpl *v50;
  int v51;
  WTF::StringImpl *v52;
  int v53;
  JSC::VM *v54;
  WTF *v55;
  WTF::StringImpl *v56;
  char v57;
  WTF::StringImpl *v58;
  WTF::StringImpl *v59;
  int v60;
  _DWORD *v61;
  char v62;
  char v63[8];
  uint64_t v64;
  int v65;
  int v66;
  uint64_t v67;

  v67 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v48 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v48, "CanvasRenderingContext2D", "createPattern");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v48, "CanvasRenderingContext2D", "createPattern");
  v54 = v4;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v31.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v31);
  }
  v12 = *(_QWORD *)(v5 + 24);
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLImageElement>,WebCore::IDLInterface<WebCore::SVGImageElement>,WebCore::IDLInterface<WebCore::HTMLCanvasElement>,WebCore::IDLInterface<WebCore::ImageBitmap>,WebCore::IDLInterface<WebCore::CSSStyleImageValue>,WebCore::IDLInterface<WebCore::OffscreenCanvas>,WebCore::IDLInterface<WebCore::HTMLVideoElement>,WebCore::IDLInterface<WebCore::WebCodecsVideoFrame>>>::convert((uint64_t)this, *((_QWORD *)a2 + 6), (uint64_t)v63);
  v13 = v66;
  if (!v66)
  {
    WebCore::Converter<WebCore::IDLLegacyNullToEmptyStringAdaptor<WebCore::IDLDOMString>>::convert(this, *((_QWORD *)a2 + 7), (uint64_t)&v52);
    v14 = v53;
    if (v53)
    {
      v21 = 0;
LABEL_37:
      if (v14 != -1)
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3238AF8[v14])(&v58, &v52);
      v13 = v66;
      goto LABEL_40;
    }
    if (*(_BYTE *)(v12 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v50 = v58;
      if (v66)
        goto LABEL_109;
      v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
      if (v32
        && (v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33)) != 0
        && (v35 = *(_QWORD *)(v34 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v35, v12, (uint64_t)&v64);
      }
      else
      {
        LOBYTE(v58) = 0;
        LOBYTE(v60) = 0;
      }
      if (v53)
        goto LABEL_109;
      v37 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
      if (v37
        && (v39 = WebCore::InspectorInstrumentation::instrumentingAgents(v37, v38)) != 0
        && (v40 = *(WebCore::InspectorCanvasAgent **)(v39 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v40, (WebCore::CanvasRenderingContext *)v12, (int **)&v52, (uint64_t)&v61);
      }
      else
      {
        LOBYTE(v61) = 0;
        v62 = 0;
      }
      v55 = (WTF *)&v58;
      v56 = (WTF::StringImpl *)2;
      v41 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
      if (v41)
      {
        v43 = WebCore::InspectorInstrumentation::instrumentingAgents(v41, v42);
        if (v43)
        {
          v44 = *(_QWORD *)(v43 + 96);
          if (v44)
            WebCore::InspectorCanvasAgent::recordAction(v44, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v50, &v55);
        }
      }
      if (v62)
      {
        v45 = v61;
        v61 = 0;
        if (v45)
        {
          if (*v45 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v45;
        }
      }
      if ((_BYTE)v60)
      {
        v46 = v58;
        v58 = 0;
        if (v46)
        {
          if (*(_DWORD *)v46 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*(_DWORD *)v46;
        }
      }
      v47 = v50;
      v50 = 0;
      if (v47)
      {
        if (*(_DWORD *)v47 == 2)
          WTF::StringImpl::destroy(v47, v42);
        else
          *(_DWORD *)v47 -= 2;
      }
    }
    if (!v66)
    {
      v15 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
      LOBYTE(v50) = 0;
      v51 = -1;
      v16 = v65;
      if (v65 != -1)
      {
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **, uint64_t *))off_1E32496B8[v65])(&v58, &v50, &v64);
        v51 = v16;
      }
      if (!v53)
      {
        v17 = v52;
        v52 = 0;
        v49 = v17;
        WebCore::CanvasRenderingContext2DBase::createPattern(v12, (uint64_t)&v50, &v49, (uint64_t)&v58);
        if (!v60)
        {
          v19 = v58;
          v58 = 0;
          if (v19)
          {
            v20 = (uint64_t *)(*(_QWORD *)(v15 + 3320) + 32);
            v55 = v19;
            v21 = WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::get(v20, &v55);
            if (!v21)
            {
              ++*(_DWORD *)v19;
              v55 = v19;
              v21 = WebCore::createWrapper<WebCore::CanvasPattern,WebCore::CanvasPattern>(v15, &v55);
              v22 = v55;
              v55 = 0;
              if (v22)
              {
                if (*(_DWORD *)v22 == 1)
                {
                  v25 = *((_QWORD *)v22 + 1);
                  *((_QWORD *)v22 + 1) = 0;
                  if (v25)
                  {
                    if (*(_DWORD *)v25 == 1)
                    {
                      if (*(_BYTE *)(v25 + 40))
                      {
                        v29 = *(unsigned int *)(v25 + 32);
                        if ((_DWORD)v29 != -1)
                          ((void (*)(char *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11NativeImageENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS7_INS8_11ImageBufferENSA_ISF_EENSC_ISF_EEEENS6_23ObjectIdentifierGenericINS8_31RenderingResourceIdentifierTypeENS6_38ObjectIdentifierThreadSafeAccessTraitsIyEEyEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSQ_EEEDcOSR_DpOT0____fmatrix[v29])(&v57, v25 + 24);
                        *(_DWORD *)(v25 + 32) = -1;
                      }
                      v30 = *(unsigned int *)(v25 + 16);
                      if ((_DWORD)v30 != -1)
                        ((void (*)(char *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11NativeImageENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS7_INS8_11ImageBufferENSA_ISF_EENSC_ISF_EEEENS6_23ObjectIdentifierGenericINS8_31RenderingResourceIdentifierTypeENS6_38ObjectIdentifierThreadSafeAccessTraitsIyEEyEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSQ_EEEDcOSR_DpOT0____fmatrix[v30])(&v57, v25 + 8);
                      *(_DWORD *)(v25 + 16) = -1;
                      WTF::fastFree((WTF *)v25, v18);
                    }
                    else
                    {
                      --*(_DWORD *)v25;
                    }
                  }
                  WTF::fastFree(v22, v18);
                }
                else
                {
                  --*(_DWORD *)v22;
                }
              }
            }
            if (*(_DWORD *)v19 == 1)
            {
              v24 = *((_QWORD *)v19 + 1);
              *((_QWORD *)v19 + 1) = 0;
              if (v24)
              {
                if (*(_DWORD *)v24 == 1)
                {
                  if (*(_BYTE *)(v24 + 40))
                  {
                    v26 = *(unsigned int *)(v24 + 32);
                    if ((_DWORD)v26 != -1)
                      ((void (*)(WTF **, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11NativeImageENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS7_INS8_11ImageBufferENSA_ISF_EENSC_ISF_EEEENS6_23ObjectIdentifierGenericINS8_31RenderingResourceIdentifierTypeENS6_38ObjectIdentifierThreadSafeAccessTraitsIyEEyEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSQ_EEEDcOSR_DpOT0____fmatrix[v26])(&v55, v24 + 24);
                    *(_DWORD *)(v24 + 32) = -1;
                  }
                  v27 = *(unsigned int *)(v24 + 16);
                  if ((_DWORD)v27 != -1)
                    ((void (*)(WTF **, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11NativeImageENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS7_INS8_11ImageBufferENSA_ISF_EENSC_ISF_EEEENS6_23ObjectIdentifierGenericINS8_31RenderingResourceIdentifierTypeENS6_38ObjectIdentifierThreadSafeAccessTraitsIyEEyEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSQ_EEEDcOSR_DpOT0____fmatrix[v27])(&v55, v24 + 8);
                  *(_DWORD *)(v24 + 16) = -1;
                  WTF::fastFree((WTF *)v24, v18);
                }
                else
                {
                  --*(_DWORD *)v24;
                }
              }
              WTF::fastFree(v19, v18);
            }
            else
            {
              --*(_DWORD *)v19;
            }
          }
          else
          {
            v21 = 2;
          }
LABEL_29:
          if (v60 != -1)
            ((void (*)(WTF **, WTF::StringImpl **))off_1E3249718[v60])(&v55, &v58);
          v60 = -1;
          if (v17)
          {
            if (*(_DWORD *)v17 == 2)
              WTF::StringImpl::destroy(v17, (WTF::StringImpl *)v18);
            else
              *(_DWORD *)v17 -= 2;
          }
          if (v51 != -1)
            ((void (*)(WTF **, WTF::StringImpl **))off_1E3249638[v51])(&v55, &v50);
          v14 = v53;
          goto LABEL_37;
        }
        if (v60 == 1)
        {
          LOBYTE(v55) = (_BYTE)v58;
          v36 = v59;
          v59 = 0;
          v56 = v36;
          if (!*((_QWORD *)v4 + 2))
          {
            WebCore::propagateExceptionSlowPath(this, &v54, (unsigned __int8 *)&v55);
            v36 = v56;
          }
          v56 = 0;
          if (v36)
          {
            if (*(_DWORD *)v36 == 2)
              WTF::StringImpl::destroy(v36, (WTF::StringImpl *)v18);
            else
              *(_DWORD *)v36 -= 2;
          }
          v21 = 0;
          goto LABEL_29;
        }
      }
    }
LABEL_109:
    std::__throw_bad_variant_access[abi:sn180100]();
  }
  v21 = 0;
LABEL_40:
  if (v13 != -1)
    ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32496F8[v13])(&v58, &v64);
  return (_BYTE *)v21;
}

_BYTE *WebCore::jsCanvasRenderingContext2DPrototypeFunction_createImageData(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  unint64_t v9;
  _QWORD v11[9];

  v11[8] = *MEMORY[0x1E0C80C00];
  v11[0] = *((_QWORD *)this + 7);
  v3 = *((_QWORD *)a2 + 5);
  if ((v3 & 0xFFFE000000000002) == 0)
  {
    v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
    v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
    v6 = (char **)(16 * v4);
    if ((_DWORD)v4)
      v7 = v6 == &WebCore::JSCanvasRenderingContext2D::s_info;
    else
      v7 = 1;
    if (!v7)
    {
      do
      {
        v6 = (char **)v6[2];
        v5 = v6 != 0;
      }
      while (v6 != &WebCore::JSCanvasRenderingContext2D::s_info && v6 != 0);
    }
    if (v5)
    {
      v9 = *((int *)a2 + 8) - 1;
      if (v9 >= 3)
        v9 = 3;
      __asm { BR              X12 }
    }
  }
  return WebCore::throwThisTypeError((int)this, (int)v11, "CanvasRenderingContext2D", "createImageData");
}

_BYTE *WebCore::jsCanvasRenderingContext2DPrototypeFunction_getImageData(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  double v3;
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::CanvasRenderingContext *v11;
  unint64_t v12;
  WebCore::CanvasRenderingContext *v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  WebCore *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  void *v23;
  unint64_t v24;
  _DWORD *v27;
  JSC::JSGlobalObject *v29;
  JSValue v30;
  WebCore::InspectorInstrumentation *v31;
  WebCore::ScriptExecutionContext *v32;
  uint64_t v33;
  WebCore::InspectorCanvasAgent *v34;
  WTF::StringImpl *v35;
  WebCore::InspectorInstrumentation *v36;
  WebCore::ScriptExecutionContext *v37;
  uint64_t v38;
  WebCore::InspectorCanvasAgent *v39;
  WebCore::InspectorInstrumentation *v40;
  WebCore::ScriptExecutionContext *v41;
  uint64_t v42;
  WebCore::InspectorCanvasAgent *v43;
  WebCore::InspectorInstrumentation *v44;
  WebCore::ScriptExecutionContext *v45;
  uint64_t v46;
  WebCore::InspectorCanvasAgent *v47;
  WebCore::InspectorInstrumentation *v48;
  WebCore::ScriptExecutionContext *v49;
  uint64_t v50;
  uint64_t v51;
  _DWORD *v52;
  _DWORD *v53;
  _DWORD *v54;
  _DWORD *v55;
  WTF::StringImpl *v56;
  WTF::StringImpl *v57;
  unint64_t v58;
  WebCore::CanvasRenderingContext *v59;
  JSC::VM *v60;
  WebCore *v61;
  JSC::VM *v62;
  WebCore::CanvasRenderingContext *v63;
  WebCore *v64;
  JSC::VM *v65;
  WebCore *v66;
  JSC::VM *v67;
  double v68;
  double v69;
  double v70;
  double v71;
  WebCore::CanvasRenderingContext *v72;
  WebCore::CanvasRenderingContext *v73;
  JSC::VM *v74;
  JSC::JSGlobalObject *v75;
  int v76;
  JSC::VM *v77;
  WTF::StringImpl *v78;
  char v79[4];
  unsigned __int16 v80;
  int v81;
  JSC::VM *v82;
  unint64_t v83;
  WTF::StringImpl *v84;
  WTF::StringImpl *v85;
  WTF::StringImpl *v86;
  int v87;
  _DWORD *v88;
  char v89;
  _DWORD *v90;
  char v91;
  _DWORD *v92;
  char v93;
  _DWORD *v94;
  char v95;
  uint64_t v96;

  v96 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v77 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v77, "CanvasRenderingContext2D", "getImageData");
  v6 = (uint64_t)a2;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v77, "CanvasRenderingContext2D", "getImageData");
  v82 = v4;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v29 = this;
    v30.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, v29, v30);
  }
  v11 = *(WebCore::CanvasRenderingContext **)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v85 = (WTF::StringImpl *)v12;
  if (v12 < 0xFFFE000000000000)
  {
    v20 = this;
    v13 = v11;
    if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v85, this);
      v3 = v68;
    }
    else
    {
      *(_QWORD *)&v3 = v12 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20))
      goto LABEL_133;
    goto LABEL_118;
  }
  v83 = v12;
  while (1)
  {
    v13 = (WebCore::CanvasRenderingContext *)v83;
    if (HIDWORD(v83))
      return 0;
    v14 = *(_QWORD *)(v6 + 56);
    v85 = (WTF::StringImpl *)v14;
    if (v14 < 0xFFFE000000000000)
    {
      v58 = v83;
      v59 = v11;
      v60 = v4;
      v61 = this;
      v62 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v85, this);
        v3 = v69;
      }
      else
      {
        *(_QWORD *)&v3 = v14 - 0x2000000000000;
      }
      if (*((_DWORD *)v62 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v62))
      {
        HIDWORD(v83) = 1;
        v4 = v60;
        v11 = v59;
        this = v61;
      }
      else
      {
        WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)&v83, (uint64_t)v61, v3);
        this = v61;
        v4 = v60;
        v11 = v59;
      }
      v13 = (WebCore::CanvasRenderingContext *)v58;
    }
    else
    {
      v83 = v14;
    }
    if (HIDWORD(v83))
      return 0;
    v15 = *(_QWORD *)(v6 + 64);
    v85 = (WTF::StringImpl *)v15;
    v76 = v83;
    if (v15 < 0xFFFE000000000000)
    {
      v63 = v11;
      v64 = this;
      v65 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v85, this);
        v3 = v70;
      }
      else
      {
        *(_QWORD *)&v3 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v65 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v65))
      {
        HIDWORD(v83) = 1;
        v11 = v63;
        this = v64;
      }
      else
      {
        WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)&v83, (uint64_t)v64, v3);
        this = v64;
        v11 = v63;
      }
    }
    else
    {
      v83 = v15;
    }
    v16 = v83;
    if (HIDWORD(v83))
      return 0;
    v74 = v4;
    v4 = *(JSC::VM **)(v6 + 72);
    v85 = v4;
    if ((unint64_t)v4 < 0xFFFE000000000000)
    {
      v73 = v11;
      v66 = this;
      v67 = (JSC::VM *)*((_QWORD *)this + 7);
      if ((unint64_t)v4 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v85, this);
        v3 = v71;
      }
      else
      {
        *(_QWORD *)&v3 = (char *)v4 - 0x2000000000000;
      }
      if (*((_DWORD *)v67 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v67))
      {
        HIDWORD(v83) = 1;
        v11 = v73;
        this = v66;
      }
      else
      {
        WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)&v83, (uint64_t)v66, v3);
        this = v66;
        v11 = v73;
      }
    }
    else
    {
      v83 = v4;
    }
    v17 = v83;
    if (HIDWORD(v83))
      return 0;
    v18 = (uint64_t)v11;
    if ((unint64_t)(*(int *)(v6 + 32) - 6) > 0xFFFFFFFFFFFFFFFALL)
      v6 = 10;
    else
      v6 = *(_QWORD *)(v6 + 80);
    v75 = this;
    WebCore::convertDictionary<WebCore::ImageDataSettings>(this, (JSC::JSCell *)v6, (uint64_t)v79);
    if (v81)
      return 0;
    v19 = v18;
    if (*(_BYTE *)(v18 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v78 = v85;
      v72 = (WebCore::CanvasRenderingContext *)v18;
      v31 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v18 + 32) + 144))(*(_QWORD *)(v18 + 32));
      if (v31
        && (v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v31, v32)) != 0
        && (v34 = *(WebCore::InspectorCanvasAgent **)(v33 + 96)) != 0)
      {
        v20 = v13;
        WebCore::InspectorCanvasAgent::processArgument(v34, v72, (int)v13, (uint64_t)&v85);
      }
      else
      {
        LOBYTE(v85) = 0;
        LOBYTE(v87) = 0;
        v20 = v13;
      }
      v36 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v72 + 4) + 144))(*((_QWORD *)v72 + 4));
      if (v36
        && (v38 = WebCore::InspectorInstrumentation::instrumentingAgents(v36, v37)) != 0
        && (v39 = *(WebCore::InspectorCanvasAgent **)(v38 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v39, v72, v76, (uint64_t)&v88);
      }
      else
      {
        LOBYTE(v88) = 0;
        v89 = 0;
      }
      v40 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v72 + 4) + 144))(*((_QWORD *)v72 + 4));
      if (v40
        && (v42 = WebCore::InspectorInstrumentation::instrumentingAgents(v40, v41)) != 0
        && (v43 = *(WebCore::InspectorCanvasAgent **)(v42 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v43, v72, v16, (uint64_t)&v90);
      }
      else
      {
        LOBYTE(v90) = 0;
        v91 = 0;
      }
      v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v72 + 4) + 144))(*((_QWORD *)v72 + 4));
      if (v44
        && (v46 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, v45)) != 0
        && (v47 = *(WebCore::InspectorCanvasAgent **)(v46 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v47, v72, v17, (uint64_t)&v92);
      }
      else
      {
        LOBYTE(v92) = 0;
        v93 = 0;
      }
      if (v81)
        goto LABEL_132;
      v13 = v72;
      WebCore::InspectorCanvasCallTracer::processArgument((uint64_t)v72, &v94);
      v83 = (unint64_t)&v85;
      v84 = (WTF::StringImpl *)5;
      v48 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v13 + 4) + 144))(*((_QWORD *)v13 + 4));
      if (v48)
      {
        v50 = WebCore::InspectorInstrumentation::instrumentingAgents(v48, v49);
        if (v50)
        {
          v51 = *(_QWORD *)(v50 + 96);
          if (v51)
            WebCore::InspectorCanvasAgent::recordAction(v51, v72, (const WTF::StringImpl *)&v78, &v83);
        }
      }
      v19 = (uint64_t)v72;
      if (v95)
      {
        v52 = v94;
        v94 = 0;
        if (v52)
        {
          if (*v52 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v19 = (uint64_t)v72;
          }
          else
          {
            --*v52;
          }
        }
      }
      if (v93)
      {
        v53 = v92;
        v92 = 0;
        if (v53)
        {
          if (*v53 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v19 = (uint64_t)v72;
          }
          else
          {
            --*v53;
          }
        }
      }
      if (v91)
      {
        v54 = v90;
        v90 = 0;
        if (v54)
        {
          if (*v54 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v19 = (uint64_t)v72;
          }
          else
          {
            --*v54;
          }
        }
      }
      if (v89)
      {
        v55 = v88;
        v88 = 0;
        if (v55)
        {
          if (*v55 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v19 = (uint64_t)v72;
          }
          else
          {
            --*v55;
          }
        }
      }
      if ((_BYTE)v87)
      {
        v56 = v85;
        v85 = 0;
        if (v56)
        {
          if (*(_DWORD *)v56 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v19 = (uint64_t)v72;
          }
          else
          {
            --*(_DWORD *)v56;
          }
        }
      }
      v57 = v78;
      v78 = 0;
      if (v57)
      {
        if (*(_DWORD *)v57 == 2)
        {
          WTF::StringImpl::destroy(v57, v49);
          v19 = (uint64_t)v72;
        }
        else
        {
          *(_DWORD *)v57 -= 2;
        }
      }
      if (v81)
        goto LABEL_132;
      v5 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
    }
    else
    {
      v5 = *(_QWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
      v20 = v13;
    }
    WebCore::CanvasRenderingContext2DBase::getImageData(v19, (int)v20, v76, v16, v17, v80 | 0x10000, (uint64_t)&v85);
    if (!v87)
    {
      v22 = v85;
      v85 = 0;
      v24 = WebCore::wrap<WebCore::ImageData>(v75, v5, v22);
      if (*(_DWORD *)v22 == 1)
      {
        v27 = (_DWORD *)*((_QWORD *)v22 + 2);
        *((_QWORD *)v22 + 2) = 0;
        if (v27)
        {
          if (*v27 == 1)
            JSC::ArrayBufferView::operator delete();
          else
            --*v27;
        }
        WTF::fastFree(v22, v23);
      }
      else
      {
        --*(_DWORD *)v22;
      }
      goto LABEL_29;
    }
    if (v87 == 1)
      break;
LABEL_132:
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_133:
    if (JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      HIDWORD(v83) = 1;
      v11 = v13;
      this = v20;
    }
    else
    {
LABEL_118:
      WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)&v83, (uint64_t)v20, v3);
      this = v20;
      v11 = v13;
    }
  }
  LOBYTE(v83) = (_BYTE)v85;
  v35 = v86;
  v86 = 0;
  v84 = v35;
  if (!*((_QWORD *)v74 + 2))
  {
    WebCore::propagateExceptionSlowPath(v75, &v82, (unsigned __int8 *)&v83);
    v35 = v84;
  }
  v84 = 0;
  if (v35)
  {
    if (*(_DWORD *)v35 == 2)
      WTF::StringImpl::destroy(v35, v21);
    else
      *(_DWORD *)v35 -= 2;
  }
  v24 = 0;
LABEL_29:
  if (v87 != -1)
    ((void (*)(unint64_t *, WTF::StringImpl **))off_1E3249728[v87])(&v83, &v85);
  return (_BYTE *)v24;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_putImageData(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  char **v20;
  BOOL v21;
  int *v22;
  unint64_t v23;
  int v24;
  unint64_t v25;
  int v26;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  WebCore::InspectorCanvasAgent *v33;
  WebCore::InspectorInstrumentation *v34;
  WebCore::ScriptExecutionContext *v35;
  uint64_t v36;
  WebCore::InspectorCanvasAgent *v37;
  WebCore::InspectorInstrumentation *v38;
  WebCore::ScriptExecutionContext *v39;
  uint64_t v40;
  WebCore::InspectorCanvasAgent *v41;
  WebCore::InspectorInstrumentation *v42;
  WebCore::ScriptExecutionContext *v43;
  uint64_t v44;
  uint64_t v45;
  _DWORD *v46;
  _DWORD *v47;
  _DWORD *v48;
  WTF::StringImpl *v49;
  JSValue v50;
  JSC::JSGlobalObject *v51;
  double v52;
  JSC::VM *v53;
  double v54;
  double v55;
  double v56;
  _QWORD v57[2];
  int v58[2];
  uint64_t v59;
  WTF::StringImpl *v60;
  _QWORD v61[2];
  char v62;
  _DWORD *v63;
  char v64;
  _DWORD *v65;
  char v66;
  uint64_t v67;

  v67 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v57[0] = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v57, "CanvasRenderingContext2D", "putImageData");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSCanvasRenderingContext2D::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v57, "CanvasRenderingContext2D", "putImageData");
  v57[1] = v9;
  v15 = *((int *)a2 + 8) - 1;
  if (v15 >= 7)
    v15 = 7;
  if (v15 == 3)
  {
    v16 = *(_QWORD *)(v10 + 24);
    v17 = *((_QWORD *)a2 + 6);
    v61[0] = v9;
    if ((v17 & 0xFFFE000000000002) != 0)
      goto LABEL_38;
    v18 = *(unsigned int *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C);
    v19 = *(_DWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x4C) != 0;
    v20 = (char **)(16 * v18);
    if ((_DWORD)v18)
      v21 = v20 == &WebCore::JSImageData::s_info;
    else
      v21 = 1;
    if (!v21)
    {
      do
      {
        v20 = (char **)v20[2];
        v19 = v20 != 0;
      }
      while (v20 != &WebCore::JSImageData::s_info && v20 != 0);
    }
    if (v19 && (v22 = *(int **)(v17 + 24)) != 0)
    {
      v23 = *((_QWORD *)a2 + 7);
      v61[0] = v23;
      if (v23 < 0xFFFE000000000000)
      {
        v51 = a2;
        if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v61, this);
          v52 = v55;
        }
        else
        {
          *(_QWORD *)&v52 = v23 - 0x2000000000000;
        }
        if (*((_DWORD *)v9 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v9))
          v58[1] = 1;
        else
          WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)v58, (uint64_t)this, v52);
        a2 = v51;
      }
      else
      {
        v58[0] = v23;
        v58[1] = 0;
      }
      v24 = v58[0];
      if (v58[1])
      {
        return 0;
      }
      else
      {
        v25 = *((_QWORD *)a2 + 8);
        v61[0] = v25;
        if (v25 < 0xFFFE000000000000)
        {
          v53 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v25 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v61, this);
            v54 = v56;
          }
          else
          {
            *(_QWORD *)&v54 = v25 - 0x2000000000000;
          }
          if (*((_DWORD *)v53 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v53))
            v58[1] = 1;
          else
            WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)v58, (uint64_t)this, v54);
        }
        else
        {
          v58[0] = v25;
          v58[1] = 0;
        }
        v26 = v58[0];
        if (v58[1])
        {
          return 0;
        }
        else
        {
          if (*(_BYTE *)(v16 + 25))
          {
            WTF::StringImpl::createWithoutCopyingNonEmpty();
            v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 32)
                                                                                         + 144))(*(_QWORD *)(v16 + 32));
            if (v30
              && (v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31)) != 0
              && (v33 = *(WebCore::InspectorCanvasAgent **)(v32 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v33, (WebCore::CanvasRenderingContext *)v16, (WebCore::ImageData *)v22, (uint64_t)v61);
            }
            else
            {
              LOBYTE(v61[0]) = 0;
              v62 = 0;
            }
            v34 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 32)
                                                                                         + 144))(*(_QWORD *)(v16 + 32));
            if (v34
              && (v36 = WebCore::InspectorInstrumentation::instrumentingAgents(v34, v35)) != 0
              && (v37 = *(WebCore::InspectorCanvasAgent **)(v36 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v37, (WebCore::CanvasRenderingContext *)v16, v24, (uint64_t)&v63);
            }
            else
            {
              LOBYTE(v63) = 0;
              v64 = 0;
            }
            v38 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 32)
                                                                                         + 144))(*(_QWORD *)(v16 + 32));
            if (v38
              && (v40 = WebCore::InspectorInstrumentation::instrumentingAgents(v38, v39)) != 0
              && (v41 = *(WebCore::InspectorCanvasAgent **)(v40 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v41, (WebCore::CanvasRenderingContext *)v16, v26, (uint64_t)&v65);
            }
            else
            {
              LOBYTE(v65) = 0;
              v66 = 0;
            }
            *(_QWORD *)v58 = v61;
            v59 = 3;
            v42 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v16 + 32)
                                                                                         + 144))(*(_QWORD *)(v16 + 32));
            if (v42)
            {
              v44 = WebCore::InspectorInstrumentation::instrumentingAgents(v42, v43);
              if (v44)
              {
                v45 = *(_QWORD *)(v44 + 96);
                if (v45)
                  WebCore::InspectorCanvasAgent::recordAction(v45, (WebCore::CanvasRenderingContext *)v16, (const WTF::StringImpl *)&v60, v58);
              }
            }
            if (v66)
            {
              v46 = v65;
              v65 = 0;
              if (v46)
              {
                if (*v46 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v46;
              }
            }
            if (v64)
            {
              v47 = v63;
              v63 = 0;
              if (v47)
              {
                if (*v47 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v47;
              }
            }
            if (v62)
            {
              v48 = (_DWORD *)v61[0];
              v61[0] = 0;
              if (v48)
              {
                if (*v48 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v48;
              }
            }
            v49 = v60;
            v60 = 0;
            if (v49)
            {
              if (*(_DWORD *)v49 == 2)
                WTF::StringImpl::destroy(v49, v43);
              else
                *(_DWORD *)v49 -= 2;
            }
          }
          WebCore::CanvasRenderingContext2DBase::putImageData((WebCore::DestinationColorSpace *)v16, (WebCore::ImageData *)v22, v24, v26, 0, 0, v22[1], v22[2]);
          return 10;
        }
      }
    }
    else
    {
LABEL_38:
      WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v61, 0, "imagedata", 10, "CanvasRenderingContext2D", 25, a8, "putImageData", 13, "ImageData", 10);
      return 0;
    }
  }
  else if (v15 == 7)
  {
    return WebCore::jsCanvasRenderingContext2DPrototypeFunction_putImageData2Body(this, a2, *(JSC::CallFrame **)(v10 + 24), a4, a5, a6, a7, a8);
  }
  else if (v15 > 2)
  {
    return JSC::throwTypeError();
  }
  else
  {
    v50.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v50);
  }
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_beginLayer(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::InspectorInstrumentation *v11;
  WebCore::ScriptExecutionContext *v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  _QWORD v17[2];
  WTF::StringImpl *v18;

  v3 = *((_QWORD *)a2 + 5);
  v16 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "CanvasRenderingContext2D", "beginLayer");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "CanvasRenderingContext2D", "beginLayer");
  v9 = *(_QWORD *)(v3 + 24);
  if (*(_BYTE *)(v9 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v17[0] = 0;
    v17[1] = 0;
    v11 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
    if (v11)
    {
      v13 = WebCore::InspectorInstrumentation::instrumentingAgents(v11, v12);
      if (v13)
      {
        v14 = *(_QWORD *)(v13 + 96);
        if (v14)
          WebCore::InspectorCanvasAgent::recordAction(v14, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v18, v17);
      }
    }
    v15 = v18;
    v18 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v12);
      else
        *(_DWORD *)v15 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::beginLayer((WebCore::CanvasRenderingContext2DBase *)v9);
  return 10;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_endLayer(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::InspectorInstrumentation *v11;
  WebCore::ScriptExecutionContext *v12;
  uint64_t v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  uint64_t v16;
  _QWORD v17[2];
  WTF::StringImpl *v18;

  v3 = *((_QWORD *)a2 + 5);
  v16 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "CanvasRenderingContext2D", "endLayer");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v16, "CanvasRenderingContext2D", "endLayer");
  v9 = *(_QWORD *)(v3 + 24);
  if (*(_BYTE *)(v9 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v17[0] = 0;
    v17[1] = 0;
    v11 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
    if (v11)
    {
      v13 = WebCore::InspectorInstrumentation::instrumentingAgents(v11, v12);
      if (v13)
      {
        v14 = *(_QWORD *)(v13 + 96);
        if (v14)
          WebCore::InspectorCanvasAgent::recordAction(v14, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v18, v17);
      }
    }
    v15 = v18;
    v18 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v12);
      else
        *(_DWORD *)v15 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::endLayer((int32x2_t **)v9);
  return 10;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_closePath(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  _BYTE v28[32];
  __int128 v29;
  int v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v3 = *((_QWORD *)a2 + 5);
  v26 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "CanvasRenderingContext2D", "closePath");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "CanvasRenderingContext2D", "closePath");
  v8 = *(_QWORD *)(v3 + 24);
  if (*(_BYTE *)(v8 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    *(_OWORD *)v28 = 0uLL;
    v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v8 + 32) + 144))(*(_QWORD *)(v8 + 32));
    if (v21)
    {
      v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22);
      if (v23)
      {
        v24 = *(_QWORD *)(v23 + 96);
        if (v24)
          WebCore::InspectorCanvasAgent::recordAction(v24, (WebCore::CanvasRenderingContext *)v8, (const WTF::StringImpl *)&v27, v28);
      }
    }
    v25 = v27;
    v27 = 0;
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, v22);
      else
        *(_DWORD *)v25 -= 2;
    }
  }
  v9 = *(_DWORD *)(v8 + 112);
  if (v9 == 2)
  {
    v10 = *(_QWORD *)(v8 + 56);
    if (!v10 || ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 200))(v10) & 1) != 0)
      return 10;
    v9 = *(_DWORD *)(v8 + 112);
  }
  else if (!v9)
  {
    return 10;
  }
  if (v9 == 2)
  {
    v12 = *(_QWORD *)(v8 + 56);
    if (!v12 || !(*(unsigned int (**)(uint64_t))(*(_QWORD *)v12 + 216))(v12))
      return 10;
  }
  else if (v9 != 1 || (WebCore::PathStream::computeHasSubpaths((unsigned int *)(v8 + 56), 1) & 1) == 0)
  {
    return 10;
  }
  v13 = *(_DWORD *)(v8 + 112);
  if (v13 != 2)
  {
    if (v13)
      goto LABEL_27;
    return 10;
  }
  v16 = *(_QWORD *)(v8 + 56);
  if (!v16)
    goto LABEL_33;
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 200))(v16) & 1) != 0)
    return 10;
  v13 = *(_DWORD *)(v8 + 112);
LABEL_27:
  if (v13 == 2)
  {
    v18 = *(_QWORD *)(v8 + 56);
    if (!v18)
      goto LABEL_33;
    if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v18 + 208))(v18) & 1) != 0)
      return 10;
    if (*(_DWORD *)(v8 + 112) != 1)
      goto LABEL_33;
    v14 = *(_DWORD *)(v8 + 108);
    goto LABEL_40;
  }
  if (v13 != 1)
  {
LABEL_33:
    v17 = WebCore::Path::ensureImpl((WebCore::Path *)(v8 + 48));
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 120))(v17);
    return 10;
  }
  v14 = *(_DWORD *)(v8 + 108);
  result = 10;
  if (v14 != 6 && v14 != 15)
  {
LABEL_40:
    if (v14 == 5)
    {
      *(_OWORD *)v28 = *(_OWORD *)(v8 + 56);
      *(_QWORD *)&v28[13] = *(_QWORD *)(v8 + 69);
      v19 = *(_OWORD *)&v28[16];
      *(_OWORD *)(v8 + 88) = v29;
      *(_OWORD *)(v8 + 56) = *(_OWORD *)v28;
      v20 = v30;
      *(_OWORD *)(v8 + 72) = v19;
      *(_DWORD *)(v8 + 104) = v20;
      *(_DWORD *)(v8 + 108) = 6;
      return 10;
    }
    goto LABEL_33;
  }
  return result;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_moveTo(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v11;
  unint64_t v12;
  double v13;
  unint64_t v14;
  JSC::VM *v15;
  double v16;
  float v17;
  float v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int **v23;
  unsigned int *v24;
  unsigned int *v25;
  unsigned int v26;
  BOOL v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  __int128 v32;
  __int128 v33;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int *v38;
  unsigned int v39;
  uint64_t v40;
  unsigned int *v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int *v45;
  unsigned int *v46;
  unsigned int v47;
  unsigned int v48;
  JSValue v49;
  WebCore::InspectorInstrumentation *v50;
  WebCore::ScriptExecutionContext *v51;
  uint64_t v52;
  WebCore::InspectorCanvasAgent *v53;
  WebCore::InspectorInstrumentation *v54;
  WebCore::ScriptExecutionContext *v55;
  uint64_t v56;
  WebCore::InspectorCanvasAgent *v57;
  WebCore::InspectorInstrumentation *v58;
  WebCore::ScriptExecutionContext *v59;
  uint64_t v60;
  uint64_t v61;
  _DWORD *v62;
  _DWORD *v63;
  WTF::StringImpl *v64;
  double v65;
  double v66;
  JSC::VM *v67;
  _QWORD v68[2];
  WTF::StringImpl *v69;
  __int128 v70;
  _BYTE v71[32];
  uint64_t v72;
  uint64_t v73;

  v73 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v67 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v67, "CanvasRenderingContext2D", "moveTo");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v67, "CanvasRenderingContext2D", "moveTo");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v49.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v49);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  *(_QWORD *)&v70 = v12;
  if (v12 >= 0xFFFE000000000000)
  {
    v13 = (double)(int)v12;
  }
  else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v70, this);
    v13 = v65;
  }
  else
  {
    *(_QWORD *)&v13 = v12 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  v14 = *((_QWORD *)a2 + 7);
  *(_QWORD *)&v70 = v14;
  v15 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v14 >= 0xFFFE000000000000)
  {
    v16 = (double)(int)v14;
  }
  else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v70, this);
    v16 = v66;
  }
  else
  {
    *(_QWORD *)&v16 = v14 - 0x2000000000000;
  }
  if (!*((_DWORD *)v15 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v15))
  {
    if (*(_BYTE *)(v11 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v50 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
      if (v50
        && (v52 = WebCore::InspectorInstrumentation::instrumentingAgents(v50, v51)) != 0
        && (v53 = *(WebCore::InspectorCanvasAgent **)(v52 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v53, (WebCore::CanvasRenderingContext *)v11, v13, (uint64_t)&v70);
      }
      else
      {
        LOBYTE(v70) = 0;
        v71[0] = 0;
      }
      v54 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
      if (v54
        && (v56 = WebCore::InspectorInstrumentation::instrumentingAgents(v54, v55)) != 0
        && (v57 = *(WebCore::InspectorCanvasAgent **)(v56 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v57, (WebCore::CanvasRenderingContext *)v11, v16, (uint64_t)&v71[8]);
      }
      else
      {
        v71[8] = 0;
        v71[24] = 0;
      }
      v68[0] = &v70;
      v68[1] = 2;
      v58 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
      if (v58)
      {
        v60 = WebCore::InspectorInstrumentation::instrumentingAgents(v58, v59);
        if (v60)
        {
          v61 = *(_QWORD *)(v60 + 96);
          if (v61)
            WebCore::InspectorCanvasAgent::recordAction(v61, (WebCore::CanvasRenderingContext *)v11, (const WTF::StringImpl *)&v69, v68);
        }
      }
      if (v71[24])
      {
        v62 = *(_DWORD **)&v71[8];
        *(_QWORD *)&v71[8] = 0;
        if (v62)
        {
          if (*v62 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v62;
        }
      }
      if (v71[0])
      {
        v63 = (_DWORD *)v70;
        *(_QWORD *)&v70 = 0;
        if (v63)
        {
          if (*v63 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v63;
        }
      }
      v64 = v69;
      v69 = 0;
      if (v64)
      {
        if (*(_DWORD *)v64 == 2)
          WTF::StringImpl::destroy(v64, v59);
        else
          *(_DWORD *)v64 -= 2;
      }
    }
    v17 = v13;
    if ((LODWORD(v17) & 0x7FFFFFFFu) > 0x7F7FFFFF)
      return 10;
    v18 = v16;
    if ((LODWORD(v18) & 0x7FFFFFFFu) > 0x7F7FFFFF
      || !(*(unsigned int (**)(uint64_t))(*(_QWORD *)(v11 + 40) + 16))(v11 + 40))
    {
      return 10;
    }
    v19 = *(_DWORD *)(v11 + 112);
    if (v19 == 2)
    {
      v28 = v11 + 56;
      v29 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 56) + 200))(*(_QWORD *)(v11 + 56));
      v19 = *(_DWORD *)(v11 + 112);
      if (!v29)
      {
LABEL_23:
        if (v19 == 1)
        {
          v21 = WTF::fastMalloc((WTF *)0x20);
          *(_DWORD *)(v21 + 8) = 1;
          *(_QWORD *)v21 = off_1E340EC98;
          v35 = *(_OWORD *)(v11 + 72);
          v70 = *(_OWORD *)(v11 + 56);
          *(_OWORD *)v71 = v35;
          *(_OWORD *)&v71[16] = *(_OWORD *)(v11 + 88);
          v72 = *(_QWORD *)(v11 + 104);
          *(_QWORD *)(v21 + 16) = 0;
          *(_QWORD *)(v21 + 24) = 0;
          v36 = WTF::fastMalloc((WTF *)0x38);
          *(_DWORD *)(v21 + 24) = 1;
          *(_QWORD *)(v21 + 16) = v36;
          v37 = v36 + 56 * *(unsigned int *)(v21 + 28);
          *(_OWORD *)v37 = v70;
          *(_OWORD *)(v37 + 16) = *(_OWORD *)v71;
          *(_OWORD *)(v37 + 32) = *(_OWORD *)&v71[16];
          *(_QWORD *)(v37 + 48) = v72;
          ++*(_DWORD *)(v21 + 28);
          v22 = *(unsigned int *)(v11 + 112);
          if ((_DWORD)v22 == -1)
          {
LABEL_55:
            *(_QWORD *)(v11 + 56) = v21;
            *(_DWORD *)(v11 + 112) = 2;
            goto LABEL_56;
          }
          v23 = (unsigned int **)(v11 + 56);
          if ((_DWORD)v22 == 2)
          {
            v24 = *v23;
            *v23 = (unsigned int *)v21;
            if (v24)
            {
              v38 = v24 + 2;
              do
              {
                v39 = __ldaxr(v38);
                v27 = --v39 == 0;
              }
              while (__stlxr(v39, v38));
              goto LABEL_51;
            }
LABEL_56:
            (*(void (**)(uint64_t, float, float))(*(_QWORD *)v21 + 32))(v21, v17, v18);
            return 10;
          }
        }
        else
        {
          if (v19 == 2)
          {
            v20 = atomic_load((unsigned int *)(*(_QWORD *)(v11 + 56) + 8));
            v21 = *(_QWORD *)(v11 + 56);
            if (v20 != 1)
            {
              (*(void (**)(__int128 *__return_ptr, _QWORD))(*(_QWORD *)v21 + 24))(&v70, *(_QWORD *)(v11 + 56));
              v40 = v70;
              *(_QWORD *)&v70 = 0;
              v41 = *(unsigned int **)(v11 + 56);
              *(_QWORD *)(v11 + 56) = v40;
              if (v41)
              {
                v42 = v41 + 2;
                do
                {
                  v43 = __ldaxr(v42);
                  v44 = v43 - 1;
                }
                while (__stlxr(v44, v42));
                if (!v44)
                {
                  atomic_store(1u, v41 + 2);
                  (*(void (**)(unsigned int *))(*(_QWORD *)v41 + 8))(v41);
                }
                v45 = (unsigned int *)v70;
                *(_QWORD *)&v70 = 0;
                if (v45)
                {
                  v46 = v45 + 2;
                  do
                  {
                    v47 = __ldaxr(v46);
                    v48 = v47 - 1;
                  }
                  while (__stlxr(v48, v46));
                  if (!v48)
                  {
                    atomic_store(1u, v45 + 2);
                    (*(void (**)(unsigned int *))(*(_QWORD *)v45 + 8))(v45);
                  }
                }
              }
              v21 = *(_QWORD *)(v11 + 56);
            }
            if (v21)
              goto LABEL_56;
          }
          v21 = WTF::fastMalloc((WTF *)0x20);
          *(_DWORD *)(v21 + 8) = 1;
          *(_QWORD *)v21 = off_1E340EC98;
          *(_QWORD *)(v21 + 16) = 0;
          *(_QWORD *)(v21 + 24) = 0;
          v22 = *(unsigned int *)(v11 + 112);
          if ((_DWORD)v22 == -1)
            goto LABEL_55;
          v23 = (unsigned int **)(v11 + 56);
          if ((_DWORD)v22 == 2)
          {
            v24 = *v23;
            *v23 = (unsigned int *)v21;
            if (v24)
            {
              v25 = v24 + 2;
              do
              {
                v26 = __ldaxr(v25);
                v27 = --v26 == 0;
              }
              while (__stlxr(v26, v25));
LABEL_51:
              if (v27)
              {
                atomic_store(1u, v24 + 2);
                (*(void (**)(unsigned int *))(*(_QWORD *)v24 + 8))(v24);
              }
              goto LABEL_56;
            }
            goto LABEL_56;
          }
        }
        ((void (*)(__int128 *, unsigned int **))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v22])(&v70, v23);
        goto LABEL_55;
      }
      v30 = LODWORD(v17) | ((unint64_t)LODWORD(v18) << 32);
      if (v19 == -1)
        goto LABEL_44;
      if (v19 == 1)
      {
        *(_QWORD *)(v11 + 56) = v30;
        *(_DWORD *)(v11 + 108) = 0;
        return 10;
      }
    }
    else
    {
      if (v19)
        goto LABEL_23;
      v30 = LODWORD(v17) | ((unint64_t)LODWORD(v18) << 32);
      v28 = v11 + 56;
    }
    ((void (*)(_QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v19])(v68, v28);
LABEL_44:
    *(_QWORD *)(v11 + 56) = v30;
    v32 = v70;
    v33 = *(_OWORD *)v71;
    *(_OWORD *)(v28 + 36) = *(_OWORD *)&v71[12];
    *(_OWORD *)(v28 + 24) = v33;
    *(_OWORD *)(v28 + 8) = v32;
    *(_DWORD *)(v28 + 52) = 0;
    *(_DWORD *)(v11 + 112) = 1;
    return 10;
  }
  return 0;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_lineTo(JSC::VM **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WebCore *v3;
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v11;
  unint64_t v12;
  double v13;
  unint64_t v14;
  JSC::VM *v15;
  double v16;
  float v17;
  float v18;
  int v19;
  float v20;
  float v21;
  uint64_t v22;
  uint64_t v23;
  int v25;
  unint64_t v26;
  int v27;
  __int128 v28;
  int v30;
  unsigned int **v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int *v37;
  unsigned int *v38;
  unsigned int v39;
  BOOL v40;
  unsigned int v41;
  uint64_t v42;
  unsigned int **v43;
  unsigned int *v44;
  unsigned int v45;
  uint64_t v46;
  int v47;
  int v48;
  unint64_t v49;
  uint64_t v50;
  unsigned int *v51;
  unsigned int *v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int *v56;
  unsigned int *v57;
  unsigned int v58;
  unsigned int v59;
  JSValue v60;
  WebCore::InspectorInstrumentation *v61;
  WebCore::ScriptExecutionContext *v62;
  uint64_t v63;
  WebCore::InspectorCanvasAgent *v64;
  WebCore::InspectorInstrumentation *v65;
  WebCore::ScriptExecutionContext *v66;
  uint64_t v67;
  WebCore::InspectorCanvasAgent *v68;
  WebCore::InspectorInstrumentation *v69;
  WebCore::ScriptExecutionContext *v70;
  uint64_t v71;
  uint64_t v72;
  _DWORD *v73;
  _DWORD *v74;
  WTF::StringImpl *v75;
  double v76;
  double v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int *v81;
  unsigned int *v82;
  unsigned int v83;
  BOOL v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int *v90;
  unsigned int v91;
  uint64_t v92;
  unsigned int *v93;
  unsigned int *v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int *v97;
  unsigned int *v98;
  unsigned int v99;
  unsigned int v100;
  JSC::VM *v101;
  _QWORD v102[2];
  uint64_t v103;
  WTF::StringImpl *v104;
  __int128 v105;
  _BYTE v106[32];
  uint64_t v107;
  uint64_t v108;

  v3 = (WebCore *)this;
  v108 = *MEMORY[0x1E0C80C00];
  v4 = this[7];
  v101 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v101, "CanvasRenderingContext2D", "lineTo");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v101, "CanvasRenderingContext2D", "lineTo");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v60.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, a2);
    return JSC::VM::throwException(v4, v3, v60);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  *(_QWORD *)&v105 = v12;
  if (v12 >= 0xFFFE000000000000)
  {
    v13 = (double)(int)v12;
  }
  else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v105, (JSC::JSGlobalObject *)this);
    v13 = v76;
  }
  else
  {
    *(_QWORD *)&v13 = v12 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  v14 = *((_QWORD *)a2 + 7);
  *(_QWORD *)&v105 = v14;
  v15 = (JSC::VM *)*((_QWORD *)v3 + 7);
  if (v14 >= 0xFFFE000000000000)
  {
    v16 = (double)(int)v14;
  }
  else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v105, v3);
    v16 = v77;
  }
  else
  {
    *(_QWORD *)&v16 = v14 - 0x2000000000000;
  }
  if (!*((_DWORD *)v15 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v15))
  {
    if (*(_BYTE *)(v11 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v61 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
      if (v61
        && (v63 = WebCore::InspectorInstrumentation::instrumentingAgents(v61, v62)) != 0
        && (v64 = *(WebCore::InspectorCanvasAgent **)(v63 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v64, (WebCore::CanvasRenderingContext *)v11, v13, (uint64_t)&v105);
      }
      else
      {
        LOBYTE(v105) = 0;
        v106[0] = 0;
      }
      v65 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
      if (v65
        && (v67 = WebCore::InspectorInstrumentation::instrumentingAgents(v65, v66)) != 0
        && (v68 = *(WebCore::InspectorCanvasAgent **)(v67 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v68, (WebCore::CanvasRenderingContext *)v11, v16, (uint64_t)&v106[8]);
      }
      else
      {
        v106[8] = 0;
        v106[24] = 0;
      }
      v102[0] = &v105;
      v102[1] = 2;
      v69 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
      if (v69)
      {
        v71 = WebCore::InspectorInstrumentation::instrumentingAgents(v69, v70);
        if (v71)
        {
          v72 = *(_QWORD *)(v71 + 96);
          if (v72)
            WebCore::InspectorCanvasAgent::recordAction(v72, (WebCore::CanvasRenderingContext *)v11, (const WTF::StringImpl *)&v104, v102);
        }
      }
      if (v106[24])
      {
        v73 = *(_DWORD **)&v106[8];
        *(_QWORD *)&v106[8] = 0;
        if (v73)
        {
          if (*v73 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v73;
        }
      }
      if (v106[0])
      {
        v74 = (_DWORD *)v105;
        *(_QWORD *)&v105 = 0;
        if (v74)
        {
          if (*v74 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v74;
        }
      }
      v75 = v104;
      v104 = 0;
      if (v75)
      {
        if (*(_DWORD *)v75 == 2)
          WTF::StringImpl::destroy(v75, v70);
        else
          *(_DWORD *)v75 -= 2;
      }
    }
    v17 = v13;
    if ((LODWORD(v17) & 0x7FFFFFFFu) > 0x7F7FFFFF)
      return 10;
    v18 = v16;
    if ((LODWORD(v18) & 0x7FFFFFFFu) > 0x7F7FFFFF
      || !(*(unsigned int (**)(uint64_t))(*(_QWORD *)(v11 + 40) + 16))(v11 + 40))
    {
      return 10;
    }
    v19 = *(_DWORD *)(v11 + 112);
    if (v19 != 2)
    {
      if (v19)
        goto LABEL_23;
      goto LABEL_141;
    }
    v3 = (WebCore *)(v11 + 56);
    v23 = *(_QWORD *)(v11 + 56);
    v20 = 0.0;
    v21 = 0.0;
    if (!v23)
      goto LABEL_28;
    v47 = (*(uint64_t (**)(uint64_t, float, float))(*(_QWORD *)v23 + 200))(v23, 0.0, 0.0);
    v19 = *(_DWORD *)(v11 + 112);
    if (!v47)
    {
LABEL_23:
      v20 = 0.0;
      if (v19 == 2)
      {
        v46 = *(_QWORD *)(v11 + 56);
        v21 = 0.0;
        if (v46)
          (*(void (**)(uint64_t, float, float))(*(_QWORD *)v46 + 224))(v46, 0.0, 0.0);
      }
      else
      {
        v21 = 0.0;
        if (v19 == 1)
        {
          v103 = 0;
          v104 = 0;
          *(_QWORD *)&v105 = &v103;
          *((_QWORD *)&v105 + 1) = &v104;
          v22 = *(unsigned int *)(v11 + 108);
          if ((_DWORD)v22 == -1)
          {
            std::__throw_bad_variant_access[abi:sn180100]();
            goto LABEL_127;
          }
          v102[0] = &v105;
          ((void (*)(_QWORD *, uint64_t, float, float))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZNK7WebCore11PathSegment17calculateEndPointERKNS8_10FloatPointERSA_E3__0JEEEEEJRKNS0_6__implIJNS8_10PathMoveToENS8_10PathLineToENS8_15PathQuadCurveToENS8_17PathBezierCurveToENS8_9PathArcToENS8_7PathArcENS8_13PathClosedArcENS8_11PathEllipseENS8_17PathEllipseInRectENS8_8PathRectENS8_15PathRoundedRectENS8_12PathDataLineENS8_17PathDataQuadCurveENS8_19PathDataBezierCurveENS8_11PathDataArcENS8_16PathCloseSubpathEEEEEEEDcOT_DpOT0____fmatrix[v22])(v102, v11 + 56, 0.0, 0.0);
        }
      }
LABEL_28:
      if (v21 == v17 && v20 == v18)
        return 10;
      v25 = *(_DWORD *)(v11 + 112);
      if (v25 != 2)
      {
        if (!v25)
        {
          v26 = LODWORD(v17) | ((unint64_t)LODWORD(v18) << 32);
          v3 = (WebCore *)(v11 + 56);
          goto LABEL_35;
        }
LABEL_43:
        if (v25 == 2)
        {
          v41 = atomic_load((unsigned int *)(*(_QWORD *)(v11 + 56) + 8));
          v32 = *(_QWORD *)(v11 + 56);
          if (v41 != 1)
          {
            (*(void (**)(__int128 *__return_ptr, _QWORD))(*(_QWORD *)v32 + 24))(&v105, *(_QWORD *)(v11 + 56));
            v50 = v105;
            *(_QWORD *)&v105 = 0;
            v51 = *(unsigned int **)(v11 + 56);
            *(_QWORD *)(v11 + 56) = v50;
            if (v51)
            {
              v53 = v51 + 2;
              do
              {
                v54 = __ldaxr(v53);
                v55 = v54 - 1;
              }
              while (__stlxr(v55, v53));
              if (!v55)
              {
                atomic_store(1u, v51 + 2);
                (*(void (**)(unsigned int *))(*(_QWORD *)v51 + 8))(v51);
              }
              v56 = (unsigned int *)v105;
              *(_QWORD *)&v105 = 0;
              if (v56)
              {
                v57 = v56 + 2;
                do
                {
                  v58 = __ldaxr(v57);
                  v59 = v58 - 1;
                }
                while (__stlxr(v59, v57));
                if (!v59)
                {
                  atomic_store(1u, v56 + 2);
                  (*(void (**)(unsigned int *))(*(_QWORD *)v56 + 8))(v56);
                }
              }
            }
            v32 = *(_QWORD *)(v11 + 56);
          }
          if (v32)
            goto LABEL_74;
        }
        else if (v25 == 1)
        {
          if (*(_DWORD *)(v11 + 108))
          {
            v31 = (unsigned int **)(v11 + 56);
            v32 = WTF::fastMalloc((WTF *)0x20);
            *(_DWORD *)(v32 + 8) = 1;
            *(_QWORD *)v32 = off_1E340EC98;
            v33 = *(_OWORD *)(v11 + 72);
            v105 = *(_OWORD *)(v11 + 56);
            *(_OWORD *)v106 = v33;
            *(_OWORD *)&v106[16] = *(_OWORD *)(v11 + 88);
            v107 = *(_QWORD *)(v11 + 104);
            *(_QWORD *)(v32 + 16) = 0;
            *(_QWORD *)(v32 + 24) = 0;
            v34 = WTF::fastMalloc((WTF *)0x38);
            *(_DWORD *)(v32 + 24) = 1;
            *(_QWORD *)(v32 + 16) = v34;
            v35 = v34 + 56 * *(unsigned int *)(v32 + 28);
            *(_OWORD *)v35 = v105;
            *(_OWORD *)(v35 + 16) = *(_OWORD *)v106;
            *(_OWORD *)(v35 + 32) = *(_OWORD *)&v106[16];
            *(_QWORD *)(v35 + 48) = v107;
            ++*(_DWORD *)(v32 + 28);
            v36 = *(unsigned int *)(v11 + 112);
            if ((_DWORD)v36 != -1)
            {
              if ((_DWORD)v36 == 2)
              {
                v37 = *v31;
                *v31 = (unsigned int *)v32;
                if (v37)
                {
                  v38 = v37 + 2;
                  do
                  {
                    v39 = __ldaxr(v38);
                    v40 = --v39 == 0;
                  }
                  while (__stlxr(v39, v38));
LABEL_59:
                  if (v40)
                  {
                    atomic_store(1u, v37 + 2);
                    (*(void (**)(unsigned int *))(*(_QWORD *)v37 + 8))(v37);
                  }
                  goto LABEL_74;
                }
                goto LABEL_74;
              }
              ((void (*)(__int128 *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v36])(&v105, v11 + 56);
            }
            goto LABEL_73;
          }
          *(float *)(v11 + 64) = v17;
          *(float *)(v11 + 68) = v18;
LABEL_77:
          *(_DWORD *)(v11 + 108) = 11;
          return 10;
        }
        v32 = WTF::fastMalloc((WTF *)0x20);
        *(_DWORD *)(v32 + 8) = 1;
        *(_QWORD *)v32 = off_1E340EC98;
        *(_QWORD *)(v32 + 16) = 0;
        *(_QWORD *)(v32 + 24) = 0;
        v42 = *(unsigned int *)(v11 + 112);
        if ((_DWORD)v42 != -1)
        {
          v43 = (unsigned int **)(v11 + 56);
          if ((_DWORD)v42 == 2)
          {
            v37 = *v43;
            *v43 = (unsigned int *)v32;
            if (v37)
            {
              v44 = v37 + 2;
              do
              {
                v45 = __ldaxr(v44);
                v40 = --v45 == 0;
              }
              while (__stlxr(v45, v44));
              goto LABEL_59;
            }
LABEL_74:
            (*(void (**)(uint64_t, float, float))(*(_QWORD *)v32 + 40))(v32, v17, v18);
            return 10;
          }
          ((void (*)(__int128 *, unsigned int **))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v42])(&v105, v43);
        }
LABEL_73:
        *(_QWORD *)(v11 + 56) = v32;
        *(_DWORD *)(v11 + 112) = 2;
        goto LABEL_74;
      }
      v3 = (WebCore *)(v11 + 56);
      v30 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 56) + 200))(*(_QWORD *)(v11 + 56));
      v25 = *(_DWORD *)(v11 + 112);
      if (!v30)
        goto LABEL_43;
LABEL_127:
      v26 = LODWORD(v17) | ((unint64_t)LODWORD(v18) << 32);
      if (v25 == -1)
        goto LABEL_36;
      if (v25 != 1)
      {
LABEL_35:
        ((void (*)(_QWORD *, WebCore *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v25])(v102, v3);
LABEL_36:
        *(_QWORD *)(v11 + 56) = 0;
        *((_QWORD *)v3 + 1) = v26;
        v27 = *(_DWORD *)&v106[16];
        v28 = *(_OWORD *)v106;
        *((_OWORD *)v3 + 1) = v105;
        *((_OWORD *)v3 + 2) = v28;
        *((_DWORD *)v3 + 12) = v27;
        *((_DWORD *)v3 + 13) = 11;
LABEL_144:
        *(_DWORD *)(v11 + 112) = 1;
        return 10;
      }
      *(_QWORD *)(v11 + 56) = 0;
      *(_QWORD *)(v11 + 64) = v26;
      goto LABEL_77;
    }
    if (v19 == 2)
    {
      v48 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 56) + 200))(*(_QWORD *)(v11 + 56));
      v19 = *(_DWORD *)(v11 + 112);
      if (v48)
      {
        v49 = LODWORD(v17) | ((unint64_t)LODWORD(v18) << 32);
        if (v19 == -1)
        {
LABEL_143:
          *(_QWORD *)(v11 + 56) = v49;
          v85 = v105;
          v86 = *(_OWORD *)v106;
          *(_OWORD *)((char *)v3 + 36) = *(_OWORD *)&v106[12];
          *(_OWORD *)((char *)v3 + 24) = v86;
          *(_OWORD *)((char *)v3 + 8) = v85;
          *((_DWORD *)v3 + 13) = 0;
          goto LABEL_144;
        }
        if (v19 == 1)
        {
          *(_QWORD *)(v11 + 56) = v49;
          *(_DWORD *)(v11 + 108) = 0;
          return 10;
        }
LABEL_142:
        ((void (*)(_QWORD *, WebCore *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v19])(v102, v3);
        goto LABEL_143;
      }
    }
    else if (!v19)
    {
LABEL_141:
      v19 = 0;
      v49 = LODWORD(v17) | ((unint64_t)LODWORD(v18) << 32);
      v3 = (WebCore *)(v11 + 56);
      goto LABEL_142;
    }
    if (v19 == 1)
    {
      v79 = WTF::fastMalloc((WTF *)0x20);
      *(_DWORD *)(v79 + 8) = 1;
      *(_QWORD *)v79 = off_1E340EC98;
      v87 = *(_OWORD *)(v11 + 72);
      v105 = *(_OWORD *)v3;
      *(_OWORD *)v106 = v87;
      *(_OWORD *)&v106[16] = *(_OWORD *)(v11 + 88);
      v107 = *(_QWORD *)(v11 + 104);
      *(_QWORD *)(v79 + 16) = 0;
      *(_QWORD *)(v79 + 24) = 0;
      v88 = WTF::fastMalloc((WTF *)0x38);
      *(_DWORD *)(v79 + 24) = 1;
      *(_QWORD *)(v79 + 16) = v88;
      v89 = v88 + 56 * *(unsigned int *)(v79 + 28);
      *(_OWORD *)v89 = v105;
      *(_OWORD *)(v89 + 16) = *(_OWORD *)v106;
      *(_OWORD *)(v89 + 32) = *(_OWORD *)&v106[16];
      *(_QWORD *)(v89 + 48) = v107;
      ++*(_DWORD *)(v79 + 28);
      v80 = *(unsigned int *)(v11 + 112);
      if ((_DWORD)v80 == -1)
      {
LABEL_154:
        *(_QWORD *)(v11 + 56) = v79;
        *(_DWORD *)(v11 + 112) = 2;
        goto LABEL_155;
      }
      if ((_DWORD)v80 == 2)
      {
        v81 = *(unsigned int **)v3;
        *(_QWORD *)v3 = v79;
        if (v81)
        {
          v90 = v81 + 2;
          do
          {
            v91 = __ldaxr(v90);
            v84 = --v91 == 0;
          }
          while (__stlxr(v91, v90));
LABEL_150:
          if (v84)
          {
            atomic_store(1u, v81 + 2);
            (*(void (**)(unsigned int *))(*(_QWORD *)v81 + 8))(v81);
          }
        }
LABEL_155:
        (*(void (**)(uint64_t, float, float))(*(_QWORD *)v79 + 32))(v79, v17, v18);
        return 10;
      }
    }
    else
    {
      if (v19 == 2)
      {
        v78 = atomic_load((unsigned int *)(*(_QWORD *)v3 + 8));
        v79 = *(_QWORD *)v3;
        if (v78 != 1)
        {
          (*(void (**)(__int128 *__return_ptr, _QWORD))(*(_QWORD *)v79 + 24))(&v105, *(_QWORD *)v3);
          v92 = v105;
          *(_QWORD *)&v105 = 0;
          v93 = *(unsigned int **)v3;
          *(_QWORD *)v3 = v92;
          if (v93)
          {
            v94 = v93 + 2;
            do
            {
              v95 = __ldaxr(v94);
              v96 = v95 - 1;
            }
            while (__stlxr(v96, v94));
            if (!v96)
            {
              atomic_store(1u, v93 + 2);
              (*(void (**)(unsigned int *))(*(_QWORD *)v93 + 8))(v93);
            }
            v97 = (unsigned int *)v105;
            *(_QWORD *)&v105 = 0;
            if (v97)
            {
              v98 = v97 + 2;
              do
              {
                v99 = __ldaxr(v98);
                v100 = v99 - 1;
              }
              while (__stlxr(v100, v98));
              if (!v100)
              {
                atomic_store(1u, v97 + 2);
                (*(void (**)(unsigned int *))(*(_QWORD *)v97 + 8))(v97);
              }
            }
          }
          v79 = *(_QWORD *)v3;
        }
        if (v79)
          goto LABEL_155;
      }
      v79 = WTF::fastMalloc((WTF *)0x20);
      *(_DWORD *)(v79 + 8) = 1;
      *(_QWORD *)v79 = off_1E340EC98;
      *(_QWORD *)(v79 + 16) = 0;
      *(_QWORD *)(v79 + 24) = 0;
      v80 = *(unsigned int *)(v11 + 112);
      if ((_DWORD)v80 == -1)
        goto LABEL_154;
      if ((_DWORD)v80 == 2)
      {
        v81 = *(unsigned int **)v3;
        *(_QWORD *)v3 = v79;
        if (v81)
        {
          v82 = v81 + 2;
          do
          {
            v83 = __ldaxr(v82);
            v84 = --v83 == 0;
          }
          while (__stlxr(v83, v82));
          goto LABEL_150;
        }
        goto LABEL_155;
      }
    }
    ((void (*)(__int128 *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v80])(&v105, v11 + 56);
    goto LABEL_154;
  }
  return 0;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_quadraticCurveTo(JSC::VM **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WebCore *v3;
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v11;
  unint64_t v12;
  double v13;
  unint64_t v14;
  JSC::VM *v15;
  double v16;
  unint64_t v17;
  JSC::VM *v18;
  double v19;
  unint64_t v20;
  JSC::VM *v21;
  double v22;
  float v23;
  float v24;
  float v25;
  float v26;
  __n128 v27;
  int v28;
  float v29;
  int v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  int v36;
  int v37;
  unint64_t v38;
  int v39;
  unsigned int **v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int *v46;
  unsigned int *v47;
  unsigned int v48;
  BOOL v49;
  unsigned int v51;
  uint64_t v52;
  unsigned int **v53;
  unsigned int *v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int *v58;
  float v59;
  float v60;
  uint64_t result;
  unsigned int *v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int *v65;
  unsigned int *v66;
  unsigned int v67;
  unsigned int v68;
  JSValue v69;
  WebCore::InspectorInstrumentation *v70;
  WebCore::ScriptExecutionContext *v71;
  uint64_t v72;
  WebCore::InspectorCanvasAgent *v73;
  WebCore::InspectorInstrumentation *v74;
  WebCore::ScriptExecutionContext *v75;
  uint64_t v76;
  WebCore::InspectorCanvasAgent *v77;
  WebCore::InspectorInstrumentation *v78;
  WebCore::ScriptExecutionContext *v79;
  uint64_t v80;
  WebCore::InspectorCanvasAgent *v81;
  WebCore::InspectorInstrumentation *v82;
  WebCore::ScriptExecutionContext *v83;
  uint64_t v84;
  WebCore::InspectorCanvasAgent *v85;
  WebCore::InspectorInstrumentation *v86;
  WebCore::ScriptExecutionContext *v87;
  uint64_t v88;
  uint64_t v89;
  _DWORD *v90;
  _DWORD *v91;
  _DWORD *v92;
  _DWORD *v93;
  WTF::StringImpl *v94;
  double v95;
  double v96;
  double v97;
  double v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int *v102;
  unsigned int *v103;
  unsigned int v104;
  BOOL v105;
  __int128 v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  unsigned int *v111;
  unsigned int v112;
  uint64_t v113;
  unsigned int *v114;
  unsigned int *v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int *v118;
  unsigned int *v119;
  unsigned int v120;
  unsigned int v121;
  JSC::VM *v122;
  _QWORD v123[2];
  uint64_t v124;
  WTF::StringImpl *v125;
  _BYTE v126[48];
  _DWORD *v127;
  char v128;
  _DWORD *v129;
  char v130;
  uint64_t v131;

  v3 = (WebCore *)this;
  v131 = *MEMORY[0x1E0C80C00];
  v4 = this[7];
  v122 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v122, "CanvasRenderingContext2D", "quadraticCurveTo");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v122, "CanvasRenderingContext2D", "quadraticCurveTo");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v69.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, a2);
    return JSC::VM::throwException(v4, v3, v69);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  *(_QWORD *)v126 = v12;
  if (v12 >= 0xFFFE000000000000)
  {
    v13 = (double)(int)v12;
  }
  else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v126, (JSC::JSGlobalObject *)this);
    v13 = v95;
  }
  else
  {
    *(_QWORD *)&v13 = v12 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  v14 = *((_QWORD *)a2 + 7);
  *(_QWORD *)v126 = v14;
  v15 = (JSC::VM *)*((_QWORD *)v3 + 7);
  if (v14 >= 0xFFFE000000000000)
  {
    v16 = (double)(int)v14;
  }
  else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v126, v3);
    v16 = v96;
  }
  else
  {
    *(_QWORD *)&v16 = v14 - 0x2000000000000;
  }
  if (*((_DWORD *)v15 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v15))
    return 0;
  v17 = *((_QWORD *)a2 + 8);
  *(_QWORD *)v126 = v17;
  v18 = (JSC::VM *)*((_QWORD *)v3 + 7);
  if (v17 >= 0xFFFE000000000000)
  {
    v19 = (double)(int)v17;
  }
  else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v126, v3);
    v19 = v97;
  }
  else
  {
    *(_QWORD *)&v19 = v17 - 0x2000000000000;
  }
  if (*((_DWORD *)v18 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v18))
    return 0;
  v20 = *((_QWORD *)a2 + 9);
  *(_QWORD *)v126 = v20;
  v21 = (JSC::VM *)*((_QWORD *)v3 + 7);
  if (v20 >= 0xFFFE000000000000)
  {
    v22 = (double)(int)v20;
  }
  else if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v126, v3);
    v22 = v98;
  }
  else
  {
    *(_QWORD *)&v22 = v20 - 0x2000000000000;
  }
  if (*((_DWORD *)v21 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v21))
    return 0;
  if (*(_BYTE *)(v11 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v70 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
    if (v70
      && (v72 = WebCore::InspectorInstrumentation::instrumentingAgents(v70, v71)) != 0
      && (v73 = *(WebCore::InspectorCanvasAgent **)(v72 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v73, (WebCore::CanvasRenderingContext *)v11, v13, (uint64_t)v126);
    }
    else
    {
      v126[0] = 0;
      v126[16] = 0;
    }
    v74 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
    if (v74
      && (v76 = WebCore::InspectorInstrumentation::instrumentingAgents(v74, v75)) != 0
      && (v77 = *(WebCore::InspectorCanvasAgent **)(v76 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v77, (WebCore::CanvasRenderingContext *)v11, v16, (uint64_t)&v126[24]);
    }
    else
    {
      v126[24] = 0;
      v126[40] = 0;
    }
    v78 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
    if (v78
      && (v80 = WebCore::InspectorInstrumentation::instrumentingAgents(v78, v79)) != 0
      && (v81 = *(WebCore::InspectorCanvasAgent **)(v80 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v81, (WebCore::CanvasRenderingContext *)v11, v19, (uint64_t)&v127);
    }
    else
    {
      LOBYTE(v127) = 0;
      v128 = 0;
    }
    v82 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
    if (v82
      && (v84 = WebCore::InspectorInstrumentation::instrumentingAgents(v82, v83)) != 0
      && (v85 = *(WebCore::InspectorCanvasAgent **)(v84 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v85, (WebCore::CanvasRenderingContext *)v11, v22, (uint64_t)&v129);
    }
    else
    {
      LOBYTE(v129) = 0;
      v130 = 0;
    }
    v123[0] = v126;
    v123[1] = 4;
    v86 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
    if (v86)
    {
      v88 = WebCore::InspectorInstrumentation::instrumentingAgents(v86, v87);
      if (v88)
      {
        v89 = *(_QWORD *)(v88 + 96);
        if (v89)
          WebCore::InspectorCanvasAgent::recordAction(v89, (WebCore::CanvasRenderingContext *)v11, (const WTF::StringImpl *)&v125, v123);
      }
    }
    if (v130)
    {
      v90 = v129;
      v129 = 0;
      if (v90)
      {
        if (*v90 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v90;
      }
    }
    if (v128)
    {
      v91 = v127;
      v127 = 0;
      if (v91)
      {
        if (*v91 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v91;
      }
    }
    if (v126[40])
    {
      v92 = *(_DWORD **)&v126[24];
      *(_QWORD *)&v126[24] = 0;
      if (v92)
      {
        if (*v92 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v92;
      }
    }
    if (v126[16])
    {
      v93 = *(_DWORD **)v126;
      *(_QWORD *)v126 = 0;
      if (v93)
      {
        if (*v93 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v93;
      }
    }
    v94 = v125;
    v125 = 0;
    if (v94)
    {
      if (*(_DWORD *)v94 == 2)
        WTF::StringImpl::destroy(v94, v87);
      else
        *(_DWORD *)v94 -= 2;
    }
  }
  v23 = v13;
  if ((LODWORD(v23) & 0x7FFFFFFFu) > 0x7F7FFFFF)
    return 10;
  v24 = v16;
  if ((LODWORD(v24) & 0x7FFFFFFFu) > 0x7F7FFFFF)
    return 10;
  v25 = v19;
  if ((LODWORD(v25) & 0x7FFFFFFFu) > 0x7F7FFFFF)
    return 10;
  v26 = v22;
  if ((LODWORD(v26) & 0x7FFFFFFFu) > 0x7F7FFFFF
    || !(*(unsigned int (**)(uint64_t))(*(_QWORD *)(v11 + 40) + 16))(v11 + 40))
  {
    return 10;
  }
  v28 = *(_DWORD *)(v11 + 112);
  if (v28 != 2)
  {
    if (v28)
      goto LABEL_33;
    goto LABEL_177;
  }
  v3 = (WebCore *)(v11 + 56);
  v35 = *(_QWORD *)(v11 + 56);
  v29 = 0.0;
  v27.n128_u32[0] = 0;
  if (!v35)
  {
LABEL_35:
    if (v27.n128_f32[0] != v25)
      goto LABEL_37;
LABEL_36:
    if (v29 != v26 || v25 != v23 || v26 != v24)
      goto LABEL_37;
    return 10;
  }
  v36 = (*(uint64_t (**)(uint64_t, float, float))(*(_QWORD *)v35 + 200))(v35, 0.0, 0.0);
  v28 = *(_DWORD *)(v11 + 112);
  if (v36)
  {
    if (v28 == 2)
    {
      v37 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 56) + 200))(*(_QWORD *)(v11 + 56));
      v28 = *(_DWORD *)(v11 + 112);
      if (v37)
      {
        v38 = LODWORD(v23) | ((unint64_t)LODWORD(v24) << 32);
        if (v28 == -1)
        {
LABEL_179:
          *(_QWORD *)(v11 + 56) = v38;
          v27 = *(__n128 *)v126;
          v106 = *(_OWORD *)&v126[16];
          *(_OWORD *)((char *)v3 + 36) = *(_OWORD *)&v126[28];
          *(_OWORD *)((char *)v3 + 24) = v106;
          *(__n128 *)((char *)v3 + 8) = v27;
          *((_DWORD *)v3 + 13) = 0;
          *(_DWORD *)(v11 + 112) = 1;
          goto LABEL_180;
        }
        if (v28 == 1)
        {
          *(_QWORD *)(v11 + 56) = v38;
          *(_DWORD *)(v11 + 108) = 0;
          goto LABEL_180;
        }
LABEL_178:
        ((void (*)(_QWORD *, WebCore *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v28])(v123, v3);
        goto LABEL_179;
      }
    }
    else if (!v28)
    {
LABEL_177:
      v28 = 0;
      v38 = LODWORD(v23) | ((unint64_t)LODWORD(v24) << 32);
      v3 = (WebCore *)(v11 + 56);
      goto LABEL_178;
    }
    if (v28 != 1)
    {
      if (v28 == 2)
      {
        v99 = atomic_load((unsigned int *)(*(_QWORD *)v3 + 8));
        v100 = *(_QWORD *)v3;
        if (v99 != 1)
        {
          (*(void (**)(_BYTE *__return_ptr, _QWORD))(*(_QWORD *)v100 + 24))(v126, *(_QWORD *)v3);
          v113 = *(_QWORD *)v126;
          *(_QWORD *)v126 = 0;
          v114 = *(unsigned int **)v3;
          *(_QWORD *)v3 = v113;
          if (v114)
          {
            v115 = v114 + 2;
            do
            {
              v116 = __ldaxr(v115);
              v117 = v116 - 1;
            }
            while (__stlxr(v117, v115));
            if (!v117)
            {
              atomic_store(1u, v114 + 2);
              (*(void (**)(unsigned int *))(*(_QWORD *)v114 + 8))(v114);
            }
            v118 = *(unsigned int **)v126;
            *(_QWORD *)v126 = 0;
            if (v118)
            {
              v119 = v118 + 2;
              do
              {
                v120 = __ldaxr(v119);
                v121 = v120 - 1;
              }
              while (__stlxr(v121, v119));
              if (!v121)
              {
                atomic_store(1u, v118 + 2);
                (*(void (**)(unsigned int *))(*(_QWORD *)v118 + 8))(v118);
              }
            }
          }
          v100 = *(_QWORD *)v3;
        }
        if (v100)
          goto LABEL_193;
      }
      v100 = WTF::fastMalloc((WTF *)0x20);
      *(_DWORD *)(v100 + 8) = 1;
      *(_QWORD *)v100 = off_1E340EC98;
      *(_QWORD *)(v100 + 16) = 0;
      *(_QWORD *)(v100 + 24) = 0;
      v101 = *(unsigned int *)(v11 + 112);
      if ((_DWORD)v101 == -1)
        goto LABEL_192;
      if ((_DWORD)v101 == 2)
      {
        v102 = *(unsigned int **)v3;
        *(_QWORD *)v3 = v100;
        if (v102)
        {
          v103 = v102 + 2;
          do
          {
            v104 = __ldaxr(v103);
            v105 = --v104 == 0;
          }
          while (__stlxr(v104, v103));
          goto LABEL_188;
        }
        goto LABEL_193;
      }
      goto LABEL_191;
    }
    goto LABEL_183;
  }
LABEL_33:
  while (1)
  {
    v29 = 0.0;
    if (v28 == 2)
      break;
    v27.n128_u32[0] = 0;
    if (v28 != 1)
      goto LABEL_35;
LABEL_180:
    v124 = 0;
    v125 = 0;
    *(_QWORD *)v126 = &v124;
    *(_QWORD *)&v126[8] = &v125;
    v107 = *(unsigned int *)(v11 + 108);
    if ((_DWORD)v107 != -1)
    {
      v123[0] = v126;
      ((void (*)(_QWORD *, uint64_t, __n128))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZNK7WebCore11PathSegment17calculateEndPointERKNS8_10FloatPointERSA_E3__0JEEEEEJRKNS0_6__implIJNS8_10PathMoveToENS8_10PathLineToENS8_15PathQuadCurveToENS8_17PathBezierCurveToENS8_9PathArcToENS8_7PathArcENS8_13PathClosedArcENS8_11PathEllipseENS8_17PathEllipseInRectENS8_8PathRectENS8_15PathRoundedRectENS8_12PathDataLineENS8_17PathDataQuadCurveENS8_19PathDataBezierCurveENS8_11PathDataArcENS8_16PathCloseSubpathEEEEEEEDcOT_DpOT0____fmatrix[v107])(v123, v11 + 56, v27);
      goto LABEL_35;
    }
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_183:
    v100 = WTF::fastMalloc((WTF *)0x20);
    *(_DWORD *)(v100 + 8) = 1;
    *(_QWORD *)v100 = off_1E340EC98;
    v108 = *((_OWORD *)v3 + 1);
    *(_OWORD *)v126 = *(_OWORD *)v3;
    *(_OWORD *)&v126[16] = v108;
    *(_OWORD *)&v126[32] = *((_OWORD *)v3 + 2);
    v127 = (_DWORD *)*((_QWORD *)v3 + 6);
    *(_QWORD *)(v100 + 16) = 0;
    *(_QWORD *)(v100 + 24) = 0;
    v109 = WTF::fastMalloc((WTF *)0x38);
    *(_DWORD *)(v100 + 24) = 1;
    *(_QWORD *)(v100 + 16) = v109;
    v110 = v109 + 56 * *(unsigned int *)(v100 + 28);
    *(_OWORD *)v110 = *(_OWORD *)v126;
    *(_OWORD *)(v110 + 16) = *(_OWORD *)&v126[16];
    *(_OWORD *)(v110 + 32) = *(_OWORD *)&v126[32];
    *(_QWORD *)(v110 + 48) = v127;
    ++*(_DWORD *)(v100 + 28);
    v101 = *(unsigned int *)(v11 + 112);
    if ((_DWORD)v101 == -1)
      goto LABEL_192;
    if ((_DWORD)v101 != 2)
    {
LABEL_191:
      ((void (*)(_BYTE *, WebCore *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v101])(v126, v3);
LABEL_192:
      *(_QWORD *)(v11 + 56) = v100;
      *(_DWORD *)(v11 + 112) = 2;
      goto LABEL_193;
    }
    v102 = *(unsigned int **)v3;
    *(_QWORD *)v3 = v100;
    if (v102)
    {
      v111 = v102 + 2;
      do
      {
        v112 = __ldaxr(v111);
        v105 = --v112 == 0;
      }
      while (__stlxr(v112, v111));
LABEL_188:
      if (v105)
      {
        atomic_store(1u, v102 + 2);
        (*(void (**)(unsigned int *))(*(_QWORD *)v102 + 8))(v102);
      }
    }
LABEL_193:
    (*(void (**)(uint64_t, float, float))(*(_QWORD *)v100 + 32))(v100, v23, v24);
    v28 = *(_DWORD *)(v11 + 112);
  }
  v56 = *(_QWORD *)(v11 + 56);
  v27.n128_u32[0] = 0;
  if (!v56)
    goto LABEL_35;
  if ((*(float (**)(uint64_t, float, float))(*(_QWORD *)v56 + 224))(v56, 0.0, 0.0) == v25)
    goto LABEL_36;
LABEL_37:
  v30 = *(_DWORD *)(v11 + 112);
  if (v30 == 2)
  {
    v33 = v11 + 56;
    v39 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 56) + 200))(*(_QWORD *)(v11 + 56));
    v30 = *(_DWORD *)(v11 + 112);
    if (!v39)
      goto LABEL_50;
    v31 = LODWORD(v23) | ((unint64_t)LODWORD(v24) << 32);
    v32 = LODWORD(v25) | ((unint64_t)LODWORD(v26) << 32);
    if (v30 != -1)
    {
      if (v30 == 1)
      {
        *(_QWORD *)(v11 + 56) = 0;
        *(_QWORD *)(v11 + 64) = v31;
        *(_QWORD *)(v11 + 72) = v32;
        *(_DWORD *)(v11 + 108) = 12;
        return 10;
      }
LABEL_40:
      ((void (*)(_QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v30])(v123, v33);
    }
    *(_QWORD *)(v11 + 56) = 0;
    *(_QWORD *)(v33 + 8) = v31;
    *(_QWORD *)(v33 + 16) = v32;
    v34 = *(_OWORD *)&v126[12];
    *(_OWORD *)(v33 + 24) = *(_OWORD *)v126;
    *(_OWORD *)(v33 + 36) = v34;
    *(_DWORD *)(v33 + 52) = 12;
    *(_DWORD *)(v11 + 112) = 1;
    return 10;
  }
  if (!v30)
  {
    v31 = LODWORD(v23) | ((unint64_t)LODWORD(v24) << 32);
    v32 = LODWORD(v25) | ((unint64_t)LODWORD(v26) << 32);
    v33 = v11 + 56;
    goto LABEL_40;
  }
LABEL_50:
  if (v30 == 2)
  {
    v51 = atomic_load((unsigned int *)(*(_QWORD *)(v11 + 56) + 8));
    v41 = *(_QWORD *)(v11 + 56);
    if (v51 != 1)
    {
      (*(void (**)(_BYTE *__return_ptr, _QWORD))(*(_QWORD *)v41 + 24))(v126, *(_QWORD *)(v11 + 56));
      v57 = *(_QWORD *)v126;
      *(_QWORD *)v126 = 0;
      v58 = *(unsigned int **)(v11 + 56);
      *(_QWORD *)(v11 + 56) = v57;
      if (v58)
      {
        v62 = v58 + 2;
        do
        {
          v63 = __ldaxr(v62);
          v64 = v63 - 1;
        }
        while (__stlxr(v64, v62));
        if (!v64)
        {
          atomic_store(1u, v58 + 2);
          (*(void (**)(unsigned int *))(*(_QWORD *)v58 + 8))(v58);
        }
        v65 = *(unsigned int **)v126;
        *(_QWORD *)v126 = 0;
        if (v65)
        {
          v66 = v65 + 2;
          do
          {
            v67 = __ldaxr(v66);
            v68 = v67 - 1;
          }
          while (__stlxr(v68, v66));
          if (!v68)
          {
            atomic_store(1u, v65 + 2);
            (*(void (**)(unsigned int *))(*(_QWORD *)v65 + 8))(v65);
          }
        }
      }
      v41 = *(_QWORD *)(v11 + 56);
    }
    if (v41)
      goto LABEL_81;
    goto LABEL_66;
  }
  if (v30 != 1)
  {
LABEL_66:
    v41 = WTF::fastMalloc((WTF *)0x20);
    *(_DWORD *)(v41 + 8) = 1;
    *(_QWORD *)v41 = off_1E340EC98;
    *(_QWORD *)(v41 + 16) = 0;
    *(_QWORD *)(v41 + 24) = 0;
    v52 = *(unsigned int *)(v11 + 112);
    if ((_DWORD)v52 == -1)
      goto LABEL_80;
    v53 = (unsigned int **)(v11 + 56);
    if ((_DWORD)v52 != 2)
    {
      ((void (*)(_BYTE *, unsigned int **))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v52])(v126, v53);
      goto LABEL_80;
    }
    v46 = *v53;
    *v53 = (unsigned int *)v41;
    if (v46)
    {
      v54 = v46 + 2;
      do
      {
        v55 = __ldaxr(v54);
        v49 = --v55 == 0;
      }
      while (__stlxr(v55, v54));
LABEL_71:
      if (v49)
      {
        atomic_store(1u, v46 + 2);
        (*(void (**)(unsigned int *))(*(_QWORD *)v46 + 8))(v46);
      }
    }
LABEL_81:
    v59 = v19;
    v60 = v22;
    (*(void (**)(uint64_t, float, float, float, float))(*(_QWORD *)v41 + 48))(v41, v23, v24, v59, v60);
    return 10;
  }
  if (*(_DWORD *)(v11 + 108))
  {
    v40 = (unsigned int **)(v11 + 56);
    v41 = WTF::fastMalloc((WTF *)0x20);
    *(_DWORD *)(v41 + 8) = 1;
    *(_QWORD *)v41 = off_1E340EC98;
    v42 = *(_OWORD *)(v11 + 72);
    *(_OWORD *)v126 = *(_OWORD *)(v11 + 56);
    *(_OWORD *)&v126[16] = v42;
    *(_OWORD *)&v126[32] = *(_OWORD *)(v11 + 88);
    v127 = *(_DWORD **)(v11 + 104);
    *(_QWORD *)(v41 + 16) = 0;
    *(_QWORD *)(v41 + 24) = 0;
    v43 = WTF::fastMalloc((WTF *)0x38);
    *(_DWORD *)(v41 + 24) = 1;
    *(_QWORD *)(v41 + 16) = v43;
    v44 = v43 + 56 * *(unsigned int *)(v41 + 28);
    *(_OWORD *)v44 = *(_OWORD *)v126;
    *(_OWORD *)(v44 + 16) = *(_OWORD *)&v126[16];
    *(_OWORD *)(v44 + 32) = *(_OWORD *)&v126[32];
    *(_QWORD *)(v44 + 48) = v127;
    ++*(_DWORD *)(v41 + 28);
    v45 = *(unsigned int *)(v11 + 112);
    if ((_DWORD)v45 != -1)
    {
      if ((_DWORD)v45 == 2)
      {
        v46 = *v40;
        *v40 = (unsigned int *)v41;
        if (v46)
        {
          v47 = v46 + 2;
          do
          {
            v48 = __ldaxr(v47);
            v49 = --v48 == 0;
          }
          while (__stlxr(v48, v47));
          goto LABEL_71;
        }
        goto LABEL_81;
      }
      ((void (*)(_BYTE *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v45])(v126, v11 + 56);
    }
LABEL_80:
    *(_QWORD *)(v11 + 56) = v41;
    *(_DWORD *)(v11 + 112) = 2;
    goto LABEL_81;
  }
  *(float *)(v11 + 64) = v23;
  *(float *)(v11 + 68) = v24;
  *(float *)(v11 + 72) = v25;
  *(float *)(v11 + 76) = v26;
  result = 10;
  *(_DWORD *)(v11 + 108) = 12;
  return result;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_bezierCurveTo(JSC::VM **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WebCore *v3;
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v11;
  unint64_t v12;
  double v13;
  unint64_t v14;
  JSC::VM *v15;
  double v16;
  unint64_t v17;
  JSC::VM *v18;
  double v19;
  unint64_t v20;
  JSC::VM *v21;
  double v22;
  unint64_t v23;
  JSC::VM *v24;
  double v25;
  unint64_t v26;
  JSC::VM *v27;
  double v28;
  float v29;
  float v30;
  float v31;
  float v32;
  float v33;
  float v34;
  __n128 v35;
  int v36;
  float v37;
  int v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  int v46;
  unsigned int **v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int *v53;
  unsigned int *v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v58;
  uint64_t v59;
  unsigned int **v60;
  unsigned int *v61;
  unsigned int v62;
  unsigned int v63;
  uint64_t v64;
  unint64_t v65;
  unsigned int *v66;
  unsigned int *v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int *v71;
  unsigned int *v72;
  unsigned int v73;
  unsigned int v74;
  JSValue v75;
  WebCore::InspectorInstrumentation *v76;
  WebCore::ScriptExecutionContext *v77;
  uint64_t v78;
  WebCore::InspectorCanvasAgent *v79;
  WebCore::InspectorInstrumentation *v80;
  WebCore::ScriptExecutionContext *v81;
  uint64_t v82;
  WebCore::InspectorCanvasAgent *v83;
  WebCore::InspectorInstrumentation *v84;
  WebCore::ScriptExecutionContext *v85;
  uint64_t v86;
  WebCore::InspectorCanvasAgent *v87;
  WebCore::InspectorInstrumentation *v88;
  WebCore::ScriptExecutionContext *v89;
  uint64_t v90;
  WebCore::InspectorCanvasAgent *v91;
  WebCore::InspectorInstrumentation *v92;
  WebCore::ScriptExecutionContext *v93;
  uint64_t v94;
  WebCore::InspectorCanvasAgent *v95;
  WebCore::InspectorInstrumentation *v96;
  WebCore::ScriptExecutionContext *v97;
  uint64_t v98;
  WebCore::InspectorCanvasAgent *v99;
  WebCore::InspectorInstrumentation *v100;
  WebCore::ScriptExecutionContext *v101;
  uint64_t v102;
  uint64_t v103;
  _DWORD *v104;
  _DWORD *v105;
  _DWORD *v106;
  _DWORD *v107;
  _DWORD *v108;
  _DWORD *v109;
  WTF::StringImpl *v110;
  double v111;
  double v112;
  double v113;
  double v114;
  double v115;
  double v116;
  unsigned int v117;
  uint64_t v118;
  unsigned int *v119;
  unsigned int *v120;
  unsigned int v121;
  BOOL v122;
  __int128 v123;
  uint64_t v124;
  __int128 v125;
  uint64_t v126;
  uint64_t v127;
  unsigned int *v128;
  unsigned int v129;
  unint64_t v130;
  unsigned int *v131;
  unsigned int *v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int *v135;
  unsigned int *v136;
  unsigned int v137;
  unsigned int v138;
  JSC::VM *v139;
  _QWORD v140[2];
  uint64_t v141;
  WTF::StringImpl *v142;
  __n128 v143;
  _BYTE v144[32];
  _DWORD *v145;
  char v146;
  _DWORD *v147;
  char v148;
  _DWORD *v149;
  char v150;
  _DWORD *v151;
  char v152;
  uint64_t v153;

  v3 = (WebCore *)this;
  v153 = *MEMORY[0x1E0C80C00];
  v4 = this[7];
  v139 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v139, "CanvasRenderingContext2D", "bezierCurveTo");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v139, "CanvasRenderingContext2D", "bezierCurveTo");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 5)
  {
    v75.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, a2);
    return JSC::VM::throwException(v4, v3, v75);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v143.n128_u64[0] = v12;
  if (v12 >= 0xFFFE000000000000)
  {
    v13 = (double)(int)v12;
  }
  else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v143, (JSC::JSGlobalObject *)this);
    v13 = v111;
  }
  else
  {
    *(_QWORD *)&v13 = v12 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  v14 = *((_QWORD *)a2 + 7);
  v143.n128_u64[0] = v14;
  v15 = (JSC::VM *)*((_QWORD *)v3 + 7);
  if (v14 >= 0xFFFE000000000000)
  {
    v16 = (double)(int)v14;
  }
  else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v143, v3);
    v16 = v112;
  }
  else
  {
    *(_QWORD *)&v16 = v14 - 0x2000000000000;
  }
  if (*((_DWORD *)v15 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v15))
    return 0;
  v17 = *((_QWORD *)a2 + 8);
  v143.n128_u64[0] = v17;
  v18 = (JSC::VM *)*((_QWORD *)v3 + 7);
  if (v17 >= 0xFFFE000000000000)
  {
    v19 = (double)(int)v17;
  }
  else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v143, v3);
    v19 = v113;
  }
  else
  {
    *(_QWORD *)&v19 = v17 - 0x2000000000000;
  }
  if (*((_DWORD *)v18 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v18))
    return 0;
  v20 = *((_QWORD *)a2 + 9);
  v143.n128_u64[0] = v20;
  v21 = (JSC::VM *)*((_QWORD *)v3 + 7);
  if (v20 >= 0xFFFE000000000000)
  {
    v22 = (double)(int)v20;
  }
  else if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v143, v3);
    v22 = v114;
  }
  else
  {
    *(_QWORD *)&v22 = v20 - 0x2000000000000;
  }
  if (*((_DWORD *)v21 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v21))
    return 0;
  v23 = *((_QWORD *)a2 + 10);
  v143.n128_u64[0] = v23;
  v24 = (JSC::VM *)*((_QWORD *)v3 + 7);
  if (v23 >= 0xFFFE000000000000)
  {
    v25 = (double)(int)v23;
  }
  else if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v143, v3);
    v25 = v115;
  }
  else
  {
    *(_QWORD *)&v25 = v23 - 0x2000000000000;
  }
  if (*((_DWORD *)v24 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v24))
    return 0;
  v26 = *((_QWORD *)a2 + 11);
  v143.n128_u64[0] = v26;
  v27 = (JSC::VM *)*((_QWORD *)v3 + 7);
  if (v26 >= 0xFFFE000000000000)
  {
    v28 = (double)(int)v26;
  }
  else if (v26 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v143, v3);
    v28 = v116;
  }
  else
  {
    *(_QWORD *)&v28 = v26 - 0x2000000000000;
  }
  if (!*((_DWORD *)v27 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v27))
  {
    if (*(_BYTE *)(v11 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v142 = (WTF::StringImpl *)v143.n128_u64[0];
      v76 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
      if (v76
        && (v78 = WebCore::InspectorInstrumentation::instrumentingAgents(v76, v77)) != 0
        && (v79 = *(WebCore::InspectorCanvasAgent **)(v78 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v79, (WebCore::CanvasRenderingContext *)v11, v13, (uint64_t)&v143);
      }
      else
      {
        v143.n128_u8[0] = 0;
        v144[0] = 0;
      }
      v80 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
      if (v80
        && (v82 = WebCore::InspectorInstrumentation::instrumentingAgents(v80, v81)) != 0
        && (v83 = *(WebCore::InspectorCanvasAgent **)(v82 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v83, (WebCore::CanvasRenderingContext *)v11, v16, (uint64_t)&v144[8]);
      }
      else
      {
        v144[8] = 0;
        v144[24] = 0;
      }
      v84 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
      if (v84
        && (v86 = WebCore::InspectorInstrumentation::instrumentingAgents(v84, v85)) != 0
        && (v87 = *(WebCore::InspectorCanvasAgent **)(v86 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v87, (WebCore::CanvasRenderingContext *)v11, v19, (uint64_t)&v145);
      }
      else
      {
        LOBYTE(v145) = 0;
        v146 = 0;
      }
      v88 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
      if (v88
        && (v90 = WebCore::InspectorInstrumentation::instrumentingAgents(v88, v89)) != 0
        && (v91 = *(WebCore::InspectorCanvasAgent **)(v90 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v91, (WebCore::CanvasRenderingContext *)v11, v22, (uint64_t)&v147);
      }
      else
      {
        LOBYTE(v147) = 0;
        v148 = 0;
      }
      v92 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
      if (v92
        && (v94 = WebCore::InspectorInstrumentation::instrumentingAgents(v92, v93)) != 0
        && (v95 = *(WebCore::InspectorCanvasAgent **)(v94 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v95, (WebCore::CanvasRenderingContext *)v11, v25, (uint64_t)&v149);
      }
      else
      {
        LOBYTE(v149) = 0;
        v150 = 0;
      }
      v96 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
      if (v96
        && (v98 = WebCore::InspectorInstrumentation::instrumentingAgents(v96, v97)) != 0
        && (v99 = *(WebCore::InspectorCanvasAgent **)(v98 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v99, (WebCore::CanvasRenderingContext *)v11, v28, (uint64_t)&v151);
      }
      else
      {
        LOBYTE(v151) = 0;
        v152 = 0;
      }
      v140[0] = &v143;
      v140[1] = 6;
      v100 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
      if (v100)
      {
        v102 = WebCore::InspectorInstrumentation::instrumentingAgents(v100, v101);
        if (v102)
        {
          v103 = *(_QWORD *)(v102 + 96);
          if (v103)
            WebCore::InspectorCanvasAgent::recordAction(v103, (WebCore::CanvasRenderingContext *)v11, (const WTF::StringImpl *)&v142, v140);
        }
      }
      if (v152)
      {
        v104 = v151;
        v151 = 0;
        if (v104)
        {
          if (*v104 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v104;
        }
      }
      if (v150)
      {
        v105 = v149;
        v149 = 0;
        if (v105)
        {
          if (*v105 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v105;
        }
      }
      if (v148)
      {
        v106 = v147;
        v147 = 0;
        if (v106)
        {
          if (*v106 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v106;
        }
      }
      if (v146)
      {
        v107 = v145;
        v145 = 0;
        if (v107)
        {
          if (*v107 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v107;
        }
      }
      if (v144[24])
      {
        v108 = *(_DWORD **)&v144[8];
        *(_QWORD *)&v144[8] = 0;
        if (v108)
        {
          if (*v108 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v108;
        }
      }
      if (v144[0])
      {
        v109 = (_DWORD *)v143.n128_u64[0];
        v143.n128_u64[0] = 0;
        if (v109)
        {
          if (*v109 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v109;
        }
      }
      v110 = v142;
      v142 = 0;
      if (v110)
      {
        if (*(_DWORD *)v110 == 2)
          WTF::StringImpl::destroy(v110, v101);
        else
          *(_DWORD *)v110 -= 2;
      }
    }
    v29 = v13;
    if ((LODWORD(v29) & 0x7FFFFFFFu) > 0x7F7FFFFF)
      return 10;
    v30 = v16;
    if ((LODWORD(v30) & 0x7FFFFFFFu) > 0x7F7FFFFF)
      return 10;
    v31 = v19;
    if ((LODWORD(v31) & 0x7FFFFFFFu) > 0x7F7FFFFF)
      return 10;
    v32 = v22;
    if ((LODWORD(v32) & 0x7FFFFFFFu) > 0x7F7FFFFF)
      return 10;
    v33 = v25;
    if ((LODWORD(v33) & 0x7FFFFFFFu) > 0x7F7FFFFF)
      return 10;
    v34 = v28;
    if ((LODWORD(v34) & 0x7FFFFFFFu) > 0x7F7FFFFF
      || !(*(unsigned int (**)(uint64_t))(*(_QWORD *)(v11 + 40) + 16))(v11 + 40))
    {
      return 10;
    }
    v36 = *(_DWORD *)(v11 + 112);
    if (v36 != 2)
    {
      if (v36)
      {
LABEL_43:
        v37 = 0.0;
        if (v36 == 2)
        {
          v64 = *(_QWORD *)(v11 + 56);
          v35.n128_u32[0] = 0;
          if (v64)
          {
            if ((*(float (**)(uint64_t, float, float))(*(_QWORD *)v64 + 224))(v64, 0.0, 0.0) != v33)
              goto LABEL_47;
            goto LABEL_46;
          }
LABEL_45:
          if (v35.n128_f32[0] != v33)
            goto LABEL_47;
LABEL_46:
          if (v37 == v34 && v33 == v29 && v34 == v30 && v33 == v31 && v34 == v32)
            return 10;
LABEL_47:
          v38 = *(_DWORD *)(v11 + 112);
          if (v38 == 2)
          {
            v42 = v11 + 56;
            v46 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 56) + 200))(*(_QWORD *)(v11 + 56));
            v38 = *(_DWORD *)(v11 + 112);
            if (v46)
            {
              v39 = LODWORD(v29) | ((unint64_t)LODWORD(v30) << 32);
              v40 = LODWORD(v31) | ((unint64_t)LODWORD(v32) << 32);
              v41 = LODWORD(v33) | ((unint64_t)LODWORD(v34) << 32);
              if (v38 == -1)
                goto LABEL_51;
              if (v38 == 1)
              {
                *(_QWORD *)(v11 + 56) = 0;
                *(_QWORD *)(v11 + 64) = v39;
                *(_QWORD *)(v11 + 72) = v40;
                *(_QWORD *)(v11 + 80) = v41;
                *(_DWORD *)(v11 + 108) = 13;
                return 10;
              }
LABEL_50:
              ((void (*)(_QWORD *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v38])(v140, v42);
LABEL_51:
              *(_QWORD *)(v11 + 56) = 0;
              *(_QWORD *)(v11 + 64) = v39;
              *(_QWORD *)(v11 + 72) = v40;
              *(_QWORD *)(v11 + 80) = v41;
              *(__n128 *)(v11 + 88) = v143;
              *(_DWORD *)(v11 + 104) = *(_DWORD *)v144;
              *(_QWORD *)(v11 + 108) = 0x10000000DLL;
              return 10;
            }
          }
          else if (!v38)
          {
            v39 = LODWORD(v29) | ((unint64_t)LODWORD(v30) << 32);
            v40 = LODWORD(v31) | ((unint64_t)LODWORD(v32) << 32);
            v41 = LODWORD(v33) | ((unint64_t)LODWORD(v34) << 32);
            v42 = v11 + 56;
            goto LABEL_50;
          }
          if (v38 == 2)
          {
            v58 = atomic_load((unsigned int *)(*(_QWORD *)(v11 + 56) + 8));
            v48 = *(_QWORD *)(v11 + 56);
            if (v58 != 1)
            {
              (*(void (**)(__n128 *__return_ptr, _QWORD))(*(_QWORD *)v48 + 24))(&v143, *(_QWORD *)(v11 + 56));
              v65 = v143.n128_u64[0];
              v143.n128_u64[0] = 0;
              v66 = *(unsigned int **)(v11 + 56);
              *(_QWORD *)(v11 + 56) = v65;
              if (v66)
              {
                v68 = v66 + 2;
                do
                {
                  v69 = __ldaxr(v68);
                  v70 = v69 - 1;
                }
                while (__stlxr(v70, v68));
                if (!v70)
                {
                  atomic_store(1u, v66 + 2);
                  (*(void (**)(unsigned int *))(*(_QWORD *)v66 + 8))(v66);
                }
                v71 = (unsigned int *)v143.n128_u64[0];
                v143.n128_u64[0] = 0;
                if (v71)
                {
                  v72 = v71 + 2;
                  do
                  {
                    v73 = __ldaxr(v72);
                    v74 = v73 - 1;
                  }
                  while (__stlxr(v74, v72));
                  if (!v74)
                  {
                    atomic_store(1u, v71 + 2);
                    (*(void (**)(unsigned int *))(*(_QWORD *)v71 + 8))(v71);
                  }
                }
              }
              v48 = *(_QWORD *)(v11 + 56);
            }
            if (v48)
              goto LABEL_91;
          }
          else if (v38 == 1)
          {
            if (!*(_DWORD *)(v11 + 108))
            {
              *(float *)(v11 + 64) = v29;
              *(float *)(v11 + 68) = v30;
              *(float *)(v11 + 72) = v31;
              *(float *)(v11 + 76) = v32;
              *(float *)(v11 + 80) = v33;
              *(float *)(v11 + 84) = v34;
              *(_DWORD *)(v11 + 108) = 13;
              return 10;
            }
            v47 = (unsigned int **)(v11 + 56);
            v48 = WTF::fastMalloc((WTF *)0x20);
            *(_DWORD *)(v48 + 8) = 1;
            *(_QWORD *)v48 = off_1E340EC98;
            v49 = *(_OWORD *)(v11 + 72);
            v143 = *(__n128 *)(v11 + 56);
            *(_OWORD *)v144 = v49;
            *(_OWORD *)&v144[16] = *(_OWORD *)(v11 + 88);
            v145 = *(_DWORD **)(v11 + 104);
            *(_QWORD *)(v48 + 16) = 0;
            *(_QWORD *)(v48 + 24) = 0;
            v50 = WTF::fastMalloc((WTF *)0x38);
            *(_DWORD *)(v48 + 24) = 1;
            *(_QWORD *)(v48 + 16) = v50;
            v51 = v50 + 56 * *(unsigned int *)(v48 + 28);
            *(__n128 *)v51 = v143;
            *(_OWORD *)(v51 + 16) = *(_OWORD *)v144;
            *(_OWORD *)(v51 + 32) = *(_OWORD *)&v144[16];
            *(_QWORD *)(v51 + 48) = v145;
            ++*(_DWORD *)(v48 + 28);
            v52 = *(unsigned int *)(v11 + 112);
            if ((_DWORD)v52 != -1)
            {
              if ((_DWORD)v52 == 2)
              {
                v53 = *v47;
                *v47 = (unsigned int *)v48;
                if (!v53)
                  goto LABEL_91;
                v54 = v53 + 2;
                do
                {
                  v55 = __ldaxr(v54);
                  v56 = v55 - 1;
                }
                while (__stlxr(v56, v54));
                if (v56)
                  goto LABEL_91;
                goto LABEL_83;
              }
              ((void (*)(__n128 *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v52])(&v143, v11 + 56);
            }
            *(_QWORD *)(v11 + 56) = v48;
            *(_DWORD *)(v11 + 112) = 2;
            goto LABEL_91;
          }
          v48 = WTF::fastMalloc((WTF *)0x20);
          *(_DWORD *)(v48 + 8) = 1;
          *(_QWORD *)v48 = off_1E340EC98;
          *(_QWORD *)(v48 + 16) = 0;
          *(_QWORD *)(v48 + 24) = 0;
          v59 = *(unsigned int *)(v11 + 112);
          if ((_DWORD)v59 != -1)
          {
            v60 = (unsigned int **)(v11 + 56);
            if ((_DWORD)v59 == 2)
            {
              v53 = *v60;
              *v60 = (unsigned int *)v48;
              if (!v53)
                goto LABEL_91;
              v61 = v53 + 2;
              do
              {
                v62 = __ldaxr(v61);
                v63 = v62 - 1;
              }
              while (__stlxr(v63, v61));
              if (v63)
                goto LABEL_91;
LABEL_83:
              atomic_store(1u, v53 + 2);
              (*(void (**)(unsigned int *))(*(_QWORD *)v53 + 8))(v53);
LABEL_91:
              v143.n128_u64[0] = __PAIR64__(LODWORD(v30), LODWORD(v29));
              v143.n128_u64[1] = __PAIR64__(LODWORD(v32), LODWORD(v31));
              *(float *)v144 = v25;
              *(float *)&v144[4] = v28;
              (*(void (**)(uint64_t, __n128 *))(*(_QWORD *)v48 + 56))(v48, &v143);
              return 10;
            }
            ((void (*)(__n128 *, unsigned int **))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v59])(&v143, v60);
          }
          *(_QWORD *)(v11 + 56) = v48;
          *(_DWORD *)(v11 + 112) = 2;
          goto LABEL_91;
        }
        v35.n128_u32[0] = 0;
        if (v36 != 1)
          goto LABEL_45;
LABEL_222:
        while (1)
        {
          v141 = 0;
          v142 = 0;
          v143.n128_u64[0] = (unint64_t)&v141;
          v143.n128_u64[1] = (unint64_t)&v142;
          v124 = *(unsigned int *)(v11 + 108);
          if ((_DWORD)v124 != -1)
            break;
          std::__throw_bad_variant_access[abi:sn180100]();
LABEL_221:
          *(_QWORD *)(v11 + 56) = v27;
          v35 = v143;
          v123 = *(_OWORD *)v144;
          *(_OWORD *)((char *)v3 + 36) = *(_OWORD *)&v144[12];
          *(_OWORD *)((char *)v3 + 24) = v123;
          *(__n128 *)((char *)v3 + 8) = v35;
          *((_DWORD *)v3 + 13) = 0;
          *(_DWORD *)(v11 + 112) = 1;
        }
        v140[0] = &v143;
        ((void (*)(_QWORD *, uint64_t, __n128))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZNK7WebCore11PathSegment17calculateEndPointERKNS8_10FloatPointERSA_E3__0JEEEEEJRKNS0_6__implIJNS8_10PathMoveToENS8_10PathLineToENS8_15PathQuadCurveToENS8_17PathBezierCurveToENS8_9PathArcToENS8_7PathArcENS8_13PathClosedArcENS8_11PathEllipseENS8_17PathEllipseInRectENS8_8PathRectENS8_15PathRoundedRectENS8_12PathDataLineENS8_17PathDataQuadCurveENS8_19PathDataBezierCurveENS8_11PathDataArcENS8_16PathCloseSubpathEEEEEEEDcOT_DpOT0____fmatrix[v124])(v140, v11 + 56, v35);
        goto LABEL_45;
      }
      goto LABEL_219;
    }
    v3 = (WebCore *)(v11 + 56);
    v43 = *(_QWORD *)(v11 + 56);
    v37 = 0.0;
    v35.n128_u32[0] = 0;
    if (!v43)
      goto LABEL_45;
    v44 = (*(uint64_t (**)(uint64_t, float, float))(*(_QWORD *)v43 + 200))(v43, 0.0, 0.0);
    v36 = *(_DWORD *)(v11 + 112);
    if (!v44)
      goto LABEL_43;
    if (v36 == 2)
    {
      v45 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 56) + 200))(*(_QWORD *)(v11 + 56));
      v36 = *(_DWORD *)(v11 + 112);
      if (v45)
      {
        v27 = (JSC::VM *)(LODWORD(v29) | ((unint64_t)LODWORD(v30) << 32));
        if (v36 == -1)
          goto LABEL_221;
        if (v36 == 1)
        {
          *(_QWORD *)(v11 + 56) = v27;
          *(_DWORD *)(v11 + 108) = 0;
          goto LABEL_222;
        }
LABEL_220:
        ((void (*)(_QWORD *, WebCore *))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v36])(v140, v3);
        goto LABEL_221;
      }
    }
    else if (!v36)
    {
LABEL_219:
      v36 = 0;
      v27 = (JSC::VM *)(LODWORD(v29) | ((unint64_t)LODWORD(v30) << 32));
      v3 = (WebCore *)(v11 + 56);
      goto LABEL_220;
    }
    if (v36 == 1)
    {
      v27 = (JSC::VM *)WTF::fastMalloc((WTF *)0x20);
      *((_DWORD *)v27 + 2) = 1;
      *(_QWORD *)v27 = off_1E340EC98;
      v125 = *(_OWORD *)(v11 + 72);
      v143 = *(__n128 *)v3;
      *(_OWORD *)v144 = v125;
      *(_OWORD *)&v144[16] = *(_OWORD *)(v11 + 88);
      v145 = *(_DWORD **)(v11 + 104);
      *((_QWORD *)v27 + 2) = 0;
      *((_QWORD *)v27 + 3) = 0;
      v126 = WTF::fastMalloc((WTF *)0x38);
      *((_DWORD *)v27 + 6) = 1;
      *((_QWORD *)v27 + 2) = v126;
      v127 = v126 + 56 * *((unsigned int *)v27 + 7);
      *(__n128 *)v127 = v143;
      *(_OWORD *)(v127 + 16) = *(_OWORD *)v144;
      *(_OWORD *)(v127 + 32) = *(_OWORD *)&v144[16];
      *(_QWORD *)(v127 + 48) = v145;
      ++*((_DWORD *)v27 + 7);
      v118 = *(unsigned int *)(v11 + 112);
      if ((_DWORD)v118 == -1)
      {
LABEL_236:
        *(_QWORD *)(v11 + 56) = v27;
        *(_DWORD *)(v11 + 112) = 2;
        goto LABEL_237;
      }
      if ((_DWORD)v118 == 2)
      {
        v119 = *(unsigned int **)v3;
        *(_QWORD *)v3 = v27;
        if (v119)
        {
          v128 = v119 + 2;
          do
          {
            v129 = __ldaxr(v128);
            v122 = --v129 == 0;
          }
          while (__stlxr(v129, v128));
LABEL_232:
          if (v122)
          {
            atomic_store(1u, v119 + 2);
            (*(void (**)(unsigned int *))(*(_QWORD *)v119 + 8))(v119);
          }
        }
LABEL_237:
        (*(void (**)(JSC::VM *, float, float))(*(_QWORD *)v27 + 32))(v27, v29, v30);
        v36 = *(_DWORD *)(v11 + 112);
        goto LABEL_43;
      }
    }
    else
    {
      if (v36 == 2)
      {
        v117 = atomic_load((unsigned int *)(*(_QWORD *)v3 + 8));
        v27 = *(JSC::VM **)v3;
        if (v117 != 1)
        {
          (*(void (**)(__n128 *__return_ptr, _QWORD))(*(_QWORD *)v27 + 24))(&v143, *(_QWORD *)v3);
          v130 = v143.n128_u64[0];
          v143.n128_u64[0] = 0;
          v131 = *(unsigned int **)v3;
          *(_QWORD *)v3 = v130;
          if (v131)
          {
            v132 = v131 + 2;
            do
            {
              v133 = __ldaxr(v132);
              v134 = v133 - 1;
            }
            while (__stlxr(v134, v132));
            if (!v134)
            {
              atomic_store(1u, v131 + 2);
              (*(void (**)(unsigned int *))(*(_QWORD *)v131 + 8))(v131);
            }
            v135 = (unsigned int *)v143.n128_u64[0];
            v143.n128_u64[0] = 0;
            if (v135)
            {
              v136 = v135 + 2;
              do
              {
                v137 = __ldaxr(v136);
                v138 = v137 - 1;
              }
              while (__stlxr(v138, v136));
              if (!v138)
              {
                atomic_store(1u, v135 + 2);
                (*(void (**)(unsigned int *))(*(_QWORD *)v135 + 8))(v135);
              }
            }
          }
          v27 = *(JSC::VM **)v3;
        }
        if (v27)
          goto LABEL_237;
      }
      v27 = (JSC::VM *)WTF::fastMalloc((WTF *)0x20);
      *((_DWORD *)v27 + 2) = 1;
      *(_QWORD *)v27 = off_1E340EC98;
      *((_QWORD *)v27 + 2) = 0;
      *((_QWORD *)v27 + 3) = 0;
      v118 = *(unsigned int *)(v11 + 112);
      if ((_DWORD)v118 == -1)
        goto LABEL_236;
      if ((_DWORD)v118 == 2)
      {
        v119 = *(unsigned int **)v3;
        *(_QWORD *)v3 = v27;
        if (v119)
        {
          v120 = v119 + 2;
          do
          {
            v121 = __ldaxr(v120);
            v122 = --v121 == 0;
          }
          while (__stlxr(v121, v120));
          goto LABEL_232;
        }
        goto LABEL_237;
      }
    }
    ((void (*)(__n128 *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v118])(&v143, v11 + 56);
    goto LABEL_236;
  }
  return 0;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_arcTo(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  float v27;
  float v28;
  float v29;
  float v30;
  float v31;
  WTF::StringImpl *v32;
  JSValue v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  WebCore::InspectorCanvasAgent *v38;
  WTF::StringImpl *v39;
  WebCore::InspectorInstrumentation *v40;
  WebCore::ScriptExecutionContext *v41;
  uint64_t v42;
  WebCore::InspectorCanvasAgent *v43;
  WebCore::InspectorInstrumentation *v44;
  WebCore::ScriptExecutionContext *v45;
  uint64_t v46;
  WebCore::InspectorCanvasAgent *v47;
  WebCore::InspectorInstrumentation *v48;
  WebCore::ScriptExecutionContext *v49;
  uint64_t v50;
  WebCore::InspectorCanvasAgent *v51;
  WebCore::InspectorInstrumentation *v52;
  WebCore::ScriptExecutionContext *v53;
  uint64_t v54;
  WebCore::InspectorCanvasAgent *v55;
  WebCore::InspectorInstrumentation *v56;
  WebCore::ScriptExecutionContext *v57;
  uint64_t v58;
  uint64_t v59;
  _DWORD *v60;
  _DWORD *v61;
  _DWORD *v62;
  _DWORD *v63;
  WTF::StringImpl *v64;
  WTF::StringImpl *v65;
  double v66;
  JSC::VM *v67;
  double v68;
  JSC::VM *v69;
  double v70;
  JSC::VM *v71;
  double v72;
  double v73;
  uint64_t v74;
  WTF::StringImpl *v75;
  JSC::VM *v76;
  WTF::StringImpl **v77;
  WTF::StringImpl *v78;
  WTF::StringImpl *v79;
  WTF::StringImpl *v80;
  char v81;
  _DWORD *v82;
  char v83;
  _DWORD *v84;
  char v85;
  _DWORD *v86;
  char v87;
  _DWORD *v88;
  char v89;
  uint64_t v90;

  v90 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)this + 7);
  v74 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v74, "CanvasRenderingContext2D", "arcTo");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v74, "CanvasRenderingContext2D", "arcTo");
  v12 = *(_QWORD *)(v5 + 24);
  v76 = (JSC::VM *)v4;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 4)
  {
    v34.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException((JSC::VM *)v4, this, v34);
  }
  else
  {
    v13 = *((_QWORD *)a2 + 6);
    v79 = (WTF::StringImpl *)v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v79, this);
      v14 = v66;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*(_DWORD *)(v4 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v79 = (WTF::StringImpl *)v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v67 = (JSC::VM *)*((_QWORD *)this + 7);
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v79, this);
        v16 = v67;
        v17 = v68;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = *((_QWORD *)a2 + 8);
        v79 = (WTF::StringImpl *)v18;
        v19 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v18 >= 0xFFFE000000000000)
        {
          v20 = (double)(int)v18;
        }
        else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v69 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v79, this);
          v19 = v69;
          v20 = v70;
        }
        else
        {
          *(_QWORD *)&v20 = v18 - 0x2000000000000;
        }
        if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
        {
          return 0;
        }
        else
        {
          v21 = *((_QWORD *)a2 + 9);
          v79 = (WTF::StringImpl *)v21;
          v22 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v21 >= 0xFFFE000000000000)
          {
            v23 = (double)(int)v21;
          }
          else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            v71 = (JSC::VM *)*((_QWORD *)this + 7);
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v79, this);
            v22 = v71;
            v23 = v72;
          }
          else
          {
            *(_QWORD *)&v23 = v21 - 0x2000000000000;
          }
          if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
          {
            return 0;
          }
          else
          {
            v24 = *((_QWORD *)a2 + 10);
            v79 = (WTF::StringImpl *)v24;
            v25 = (JSC::VM *)*((_QWORD *)this + 7);
            if (v24 >= 0xFFFE000000000000)
            {
              v26 = (double)(int)v24;
            }
            else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v79, this);
              v26 = v73;
            }
            else
            {
              *(_QWORD *)&v26 = v24 - 0x2000000000000;
            }
            if (!*((_DWORD *)v25 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v25))
            {
              if (*(_BYTE *)(v12 + 25))
              {
                WTF::StringImpl::createWithoutCopyingNonEmpty();
                v75 = v79;
                v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                             + 144))(*(_QWORD *)(v12 + 32));
                if (v35
                  && (v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36)) != 0
                  && (v38 = *(WebCore::InspectorCanvasAgent **)(v37 + 96)) != 0)
                {
                  WebCore::InspectorCanvasAgent::processArgument(v38, (WebCore::CanvasRenderingContext *)v12, v14, (uint64_t)&v79);
                }
                else
                {
                  LOBYTE(v79) = 0;
                  v81 = 0;
                }
                v40 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                             + 144))(*(_QWORD *)(v12 + 32));
                if (v40
                  && (v42 = WebCore::InspectorInstrumentation::instrumentingAgents(v40, v41)) != 0
                  && (v43 = *(WebCore::InspectorCanvasAgent **)(v42 + 96)) != 0)
                {
                  WebCore::InspectorCanvasAgent::processArgument(v43, (WebCore::CanvasRenderingContext *)v12, v17, (uint64_t)&v82);
                }
                else
                {
                  LOBYTE(v82) = 0;
                  v83 = 0;
                }
                v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                             + 144))(*(_QWORD *)(v12 + 32));
                if (v44
                  && (v46 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, v45)) != 0
                  && (v47 = *(WebCore::InspectorCanvasAgent **)(v46 + 96)) != 0)
                {
                  WebCore::InspectorCanvasAgent::processArgument(v47, (WebCore::CanvasRenderingContext *)v12, v20, (uint64_t)&v84);
                }
                else
                {
                  LOBYTE(v84) = 0;
                  v85 = 0;
                }
                v48 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                             + 144))(*(_QWORD *)(v12 + 32));
                if (v48
                  && (v50 = WebCore::InspectorInstrumentation::instrumentingAgents(v48, v49)) != 0
                  && (v51 = *(WebCore::InspectorCanvasAgent **)(v50 + 96)) != 0)
                {
                  WebCore::InspectorCanvasAgent::processArgument(v51, (WebCore::CanvasRenderingContext *)v12, v23, (uint64_t)&v86);
                }
                else
                {
                  LOBYTE(v86) = 0;
                  v87 = 0;
                }
                v52 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                             + 144))(*(_QWORD *)(v12 + 32));
                if (v52
                  && (v54 = WebCore::InspectorInstrumentation::instrumentingAgents(v52, v53)) != 0
                  && (v55 = *(WebCore::InspectorCanvasAgent **)(v54 + 96)) != 0)
                {
                  WebCore::InspectorCanvasAgent::processArgument(v55, (WebCore::CanvasRenderingContext *)v12, v26, (uint64_t)&v88);
                }
                else
                {
                  LOBYTE(v88) = 0;
                  v89 = 0;
                }
                v77 = &v79;
                v78 = (WTF::StringImpl *)5;
                v56 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                             + 144))(*(_QWORD *)(v12 + 32));
                if (v56)
                {
                  v58 = WebCore::InspectorInstrumentation::instrumentingAgents(v56, v57);
                  if (v58)
                  {
                    v59 = *(_QWORD *)(v58 + 96);
                    if (v59)
                      WebCore::InspectorCanvasAgent::recordAction(v59, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v75, &v77);
                  }
                }
                if (v89)
                {
                  v60 = v88;
                  v88 = 0;
                  if (v60)
                  {
                    if (*v60 == 1)
                      WTF::JSONImpl::Value::operator delete();
                    else
                      --*v60;
                  }
                }
                if (v87)
                {
                  v61 = v86;
                  v86 = 0;
                  if (v61)
                  {
                    if (*v61 == 1)
                      WTF::JSONImpl::Value::operator delete();
                    else
                      --*v61;
                  }
                }
                if (v85)
                {
                  v62 = v84;
                  v84 = 0;
                  if (v62)
                  {
                    if (*v62 == 1)
                      WTF::JSONImpl::Value::operator delete();
                    else
                      --*v62;
                  }
                }
                if (v83)
                {
                  v63 = v82;
                  v82 = 0;
                  if (v63)
                  {
                    if (*v63 == 1)
                      WTF::JSONImpl::Value::operator delete();
                    else
                      --*v63;
                  }
                }
                if (v81)
                {
                  v64 = v79;
                  v79 = 0;
                  if (v64)
                  {
                    if (*(_DWORD *)v64 == 1)
                      WTF::JSONImpl::Value::operator delete();
                    else
                      --*(_DWORD *)v64;
                  }
                }
                v65 = v75;
                v75 = 0;
                if (v65)
                {
                  if (*(_DWORD *)v65 == 2)
                    WTF::StringImpl::destroy(v65, v57);
                  else
                    *(_DWORD *)v65 -= 2;
                }
              }
              v27 = v23;
              v28 = v20;
              v29 = v17;
              v30 = v14;
              v31 = v26;
              WebCore::CanvasPath::arcTo((WebCore::CanvasPath *)(v12 + 40), v30, v29, v28, v27, v31, (uint64_t)&v79);
              if (!v81)
                return 10;
              LOBYTE(v77) = (_BYTE)v79;
              v39 = v80;
              v78 = v80;
              if (!*(_QWORD *)(v4 + 16))
              {
                WebCore::propagateExceptionSlowPath(this, &v76, (unsigned __int8 *)&v77);
                v39 = v78;
              }
              v78 = 0;
              if (v39)
              {
                if (*(_DWORD *)v39 == 2)
                  WTF::StringImpl::destroy(v39, v32);
                else
                  *(_DWORD *)v39 -= 2;
              }
            }
            return 0;
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_rect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v11;
  unint64_t v12;
  double v13;
  unint64_t v14;
  JSC::VM *v15;
  double v16;
  unint64_t v17;
  JSC::VM *v18;
  double v19;
  unint64_t v20;
  JSC::VM *v21;
  double v22;
  float v23;
  float v24;
  float v25;
  float v26;
  JSValue v29;
  WebCore::CanvasRenderingContext *v30;
  WebCore::CanvasRenderingContext *v31;
  WebCore::CanvasRenderingContext *v32;
  WebCore::CanvasRenderingContext *v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  double v36;
  double v37;
  double v38;
  double v39;
  JSC::VM *v40;
  _QWORD v41[2];
  WTF::StringImpl *v42;
  unint64_t v43;
  float v44;
  float v45;
  _BYTE v46[24];
  _BYTE v47[24];
  _BYTE v48[24];
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v40 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v40, "CanvasRenderingContext2D", "rect");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v40, "CanvasRenderingContext2D", "rect");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v29.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v29);
  }
  else
  {
    v11 = *(_QWORD *)(v5 + 24);
    v12 = *((_QWORD *)a2 + 6);
    v43 = v12;
    if (v12 >= 0xFFFE000000000000)
    {
      v13 = (double)(int)v12;
    }
    else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v43, this);
      v13 = v36;
    }
    else
    {
      *(_QWORD *)&v13 = v12 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v14 = *((_QWORD *)a2 + 7);
      v43 = v14;
      v15 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v14 >= 0xFFFE000000000000)
      {
        v16 = (double)(int)v14;
      }
      else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v43, this);
        v16 = v37;
      }
      else
      {
        *(_QWORD *)&v16 = v14 - 0x2000000000000;
      }
      if (*((_DWORD *)v15 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v15))
      {
        return 0;
      }
      else
      {
        v17 = *((_QWORD *)a2 + 8);
        v43 = v17;
        v18 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v17 >= 0xFFFE000000000000)
        {
          v19 = (double)(int)v17;
        }
        else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v43, this);
          v19 = v38;
        }
        else
        {
          *(_QWORD *)&v19 = v17 - 0x2000000000000;
        }
        if (*((_DWORD *)v18 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v18))
        {
          return 0;
        }
        else
        {
          v20 = *((_QWORD *)a2 + 9);
          v43 = v20;
          v21 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v20 >= 0xFFFE000000000000)
          {
            v22 = (double)(int)v20;
          }
          else if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v43, this);
            v22 = v39;
          }
          else
          {
            *(_QWORD *)&v22 = v20 - 0x2000000000000;
          }
          if (*((_DWORD *)v21 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v21))
          {
            return 0;
          }
          else
          {
            if (*(_BYTE *)(v11 + 25))
            {
              WTF::StringImpl::createWithoutCopyingNonEmpty();
              WebCore::InspectorCanvasCallTracer::processArgument((WebCore::InspectorCanvasCallTracer *)v11, v30, v13, &v43);
              WebCore::InspectorCanvasCallTracer::processArgument((WebCore::InspectorCanvasCallTracer *)v11, v31, v16, v46);
              WebCore::InspectorCanvasCallTracer::processArgument((WebCore::InspectorCanvasCallTracer *)v11, v32, v19, v47);
              WebCore::InspectorCanvasCallTracer::processArgument((WebCore::InspectorCanvasCallTracer *)v11, v33, v22, v48);
              v41[0] = &v43;
              v41[1] = 4;
              WebCore::InspectorCanvasCallTracer::recordAction((WebCore::CanvasRenderingContext *)v11, (const WTF::StringImpl *)&v42, v41);
              std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v48);
              std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v47);
              std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v46);
              std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)&v43);
              v35 = v42;
              v42 = 0;
              if (v35)
              {
                if (*(_DWORD *)v35 == 2)
                  WTF::StringImpl::destroy(v35, v34);
                else
                  *(_DWORD *)v35 -= 2;
              }
            }
            if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)(v11 + 40) + 16))(v11 + 40))
            {
              v23 = v13;
              if ((LODWORD(v23) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
              {
                v24 = v16;
                if ((LODWORD(v24) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
                {
                  v25 = v19;
                  if ((LODWORD(v25) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
                  {
                    v26 = v22;
                    if ((LODWORD(v26) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
                    {
                      if (v25 == 0.0 && v26 == 0.0)
                      {
                        *(float *)&v43 = v13;
                        *((float *)&v43 + 1) = v16;
                        WebCore::Path::moveTo((WebCore::Path *)(v11 + 48), (const WebCore::FloatPoint *)&v43);
                      }
                      else
                      {
                        *(float *)&v43 = v13;
                        *((float *)&v43 + 1) = v16;
                        v44 = v19;
                        v45 = v22;
                        WebCore::Path::addRect((WebCore::Path *)(v11 + 48), (const WebCore::FloatRect *)&v43);
                      }
                    }
                  }
                }
              }
            }
            return 10;
          }
        }
      }
    }
  }
}

_BYTE *WebCore::jsCanvasRenderingContext2DPrototypeFunction_roundRect(WebCore *this, JSC::JSGlobalObject *a2, JSValue a3, WebCore::JSCanvasRenderingContext2D *a4)
{
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  int hasIteratorMethod;
  int v14;
  uint64_t v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  double v18;
  WTF::StringImpl *v19;
  JSC::VM *v20;
  double v21;
  WTF::StringImpl *v22;
  JSC::VM *v23;
  double v24;
  WTF::StringImpl *v25;
  JSC::VM *v26;
  double v27;
  WTF::StringImpl **v28;
  float v29;
  float v30;
  float v31;
  WTF *v32;
  WTF *v33;
  float v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  int v38;
  JSValue v39;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  char hasExceptionsAfterHandlingTraps;
  void *v45;
  WTF::StringImpl *v46;
  WebCore::InspectorInstrumentation *v47;
  WebCore::ScriptExecutionContext *v48;
  uint64_t v49;
  WebCore::InspectorCanvasAgent *v50;
  WTF::StringImpl *v51;
  WTF::StringImpl *v52;
  WebCore::InspectorInstrumentation *v53;
  WebCore::ScriptExecutionContext *v54;
  uint64_t v55;
  WebCore::InspectorCanvasAgent *v56;
  WebCore::InspectorInstrumentation *v57;
  WebCore::ScriptExecutionContext *v58;
  uint64_t v59;
  WebCore::InspectorCanvasAgent *v60;
  WebCore::InspectorInstrumentation *v61;
  WebCore::ScriptExecutionContext *v62;
  uint64_t v63;
  WebCore::InspectorCanvasAgent *v64;
  WebCore::InspectorInstrumentation *v65;
  WebCore::ScriptExecutionContext *v66;
  uint64_t v67;
  uint64_t v68;
  WebCore::InspectorInstrumentation *v69;
  WebCore::ScriptExecutionContext *v70;
  uint64_t v71;
  uint64_t v72;
  _DWORD *v73;
  _DWORD *v74;
  _DWORD *v75;
  _DWORD *v76;
  WTF::StringImpl *v77;
  WTF::StringImpl *v78;
  double v79;
  JSC::VM *v80;
  double v81;
  JSC::VM *v82;
  double v83;
  JSC::VM *v84;
  double v85;
  JSC::VM *v86;
  WTF::StringImpl *v87;
  WTF *v88;
  WTF::StringImpl *v89;
  int v90;
  JSC::VM *v91;
  WTF::StringImpl **v92;
  WTF::StringImpl *v93;
  WTF::StringImpl *v94;
  WTF::StringImpl *v95;
  char v96;
  _DWORD *v97;
  char v98;
  _DWORD *v99;
  char v100;
  _DWORD *v101;
  char v102;
  _DWORD *v103;
  char v104;
  uint64_t v105;

  v105 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v86 = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v86, "CanvasRenderingContext2D", "roundRect");
  v7 = (uint64_t)a2;
  v8 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v9 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v10 = (char **)(16 * v8);
  if ((_DWORD)v8)
    v11 = v10 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v11 = 1;
  if (!v11)
  {
    do
    {
      v10 = (char **)v10[2];
      v9 = v10 != 0;
    }
    while (v10 != &WebCore::JSCanvasRenderingContext2D::s_info && v10 != 0);
  }
  if (!v9)
    return WebCore::throwThisTypeError((int)this, (int)&v86, "CanvasRenderingContext2D", "roundRect");
  if ((unint64_t)(*((int *)a2 + 8) - 6) > 0xFFFFFFFFFFFFFFFALL)
  {
    v39.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v5, this, v39);
  }
  if ((*((_QWORD *)a2 + 10) & 0xFFFFFFFFFFFFFFF7) == 2)
    return (_BYTE *)WebCore::jsCanvasRenderingContext2DPrototypeFunction_roundRect2Body(this, (WTF::StringImpl **)v7, *(JSC::CallFrame **)(v6 + 24), a4);
  hasIteratorMethod = JSC::hasIteratorMethod(this, *((JSC::JSGlobalObject **)a2 + 10), a3);
  v14 = hasIteratorMethod;
  if (!*((_DWORD *)v5 + 20))
  {
    if (hasIteratorMethod)
    {
LABEL_16:
      v15 = *(_QWORD *)(v6 + 24);
      v16 = *((_QWORD *)this + 7);
      v91 = (JSC::VM *)v16;
      v17 = *(WTF::StringImpl **)(v7 + 48);
      v94 = v17;
      if ((unint64_t)v17 >= 0xFFFE000000000000)
      {
        v18 = (double)(int)v17;
      }
      else
      {
        if ((unint64_t)v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          goto LABEL_139;
        *(_QWORD *)&v18 = (char *)v17 - 0x2000000000000;
      }
      while (1)
      {
        if (*(_DWORD *)(v16 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v16))
          return 0;
        v19 = *(WTF::StringImpl **)(v7 + 56);
        v94 = v19;
        v20 = (JSC::VM *)*((_QWORD *)this + 7);
        if ((unint64_t)v19 >= 0xFFFE000000000000)
        {
          v21 = (double)(int)v19;
        }
        else if ((unint64_t)v19 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v80 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v94, this);
          v20 = v80;
          v21 = v81;
        }
        else
        {
          *(_QWORD *)&v21 = (char *)v19 - 0x2000000000000;
        }
        if (*((_DWORD *)v20 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v20))
          return 0;
        v22 = *(WTF::StringImpl **)(v7 + 64);
        v94 = v22;
        v23 = (JSC::VM *)*((_QWORD *)this + 7);
        if ((unint64_t)v22 >= 0xFFFE000000000000)
        {
          v24 = (double)(int)v22;
        }
        else if ((unint64_t)v22 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v82 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v94, this);
          v23 = v82;
          v24 = v83;
        }
        else
        {
          *(_QWORD *)&v24 = (char *)v22 - 0x2000000000000;
        }
        if (*((_DWORD *)v23 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v23))
          return 0;
        v25 = *(WTF::StringImpl **)(v7 + 72);
        v94 = v25;
        v26 = (JSC::VM *)*((_QWORD *)this + 7);
        if ((unint64_t)v25 >= 0xFFFE000000000000)
        {
          v27 = (double)(int)v25;
        }
        else if ((unint64_t)v25 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v84 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v94, this);
          v26 = v84;
          v27 = v85;
        }
        else
        {
          *(_QWORD *)&v27 = (char *)v25 - 0x2000000000000;
        }
        if (*((_DWORD *)v26 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v26))
          return 0;
        v7 = *(_QWORD *)(v7 + 80);
        v28 = (WTF::StringImpl **)*((_QWORD *)this + 7);
        v92 = v28;
        if ((v7 & 0xFFFE000000000002) != 0 || *(unsigned __int8 *)(v7 + 5) <= 0x16u)
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          JSC::throwTypeError();
          v43 = v94;
          v94 = 0;
          if (v43)
          {
            if (*(_DWORD *)v43 == 2)
              WTF::StringImpl::destroy(v43, v42);
            else
              *(_DWORD *)v43 -= 2;
          }
          v37 = 0;
          v38 = 1;
          v90 = 1;
          goto LABEL_51;
        }
        v94 = 0;
        v95 = 0;
        v88 = (WTF *)&v94;
        JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLUnion<WebCore::IDLUnrestrictedDouble,WebCore::IDLDictionary<WebCore::DOMPointInit>>>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<std::variant<double,WebCore::DOMPointInit>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(this, v7, (uint64_t *)&v88);
        if (*((_DWORD *)v28 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v28) & 1) != 0)
        {
          v46 = v94;
          v38 = 1;
          v90 = 1;
          if (!v94)
          {
            v37 = 0;
            goto LABEL_51;
          }
          v94 = 0;
          LODWORD(v95) = 0;
          WTF::fastFree(v46, v45);
          v38 = v90;
          if (v90)
          {
            v37 = 0;
            goto LABEL_42;
          }
        }
        else
        {
          v88 = v94;
          v89 = v95;
          v90 = 0;
        }
        if (!*(_BYTE *)(v15 + 25))
          goto LABEL_37;
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v87 = v94;
        v47 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v15 + 32) + 144))(*(_QWORD *)(v15 + 32));
        if (v47
          && (v49 = WebCore::InspectorInstrumentation::instrumentingAgents(v47, v48)) != 0
          && (v50 = *(WebCore::InspectorCanvasAgent **)(v49 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v50, (WebCore::CanvasRenderingContext *)v15, v18, (uint64_t)&v94);
        }
        else
        {
          LOBYTE(v94) = 0;
          v96 = 0;
        }
        v53 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v15 + 32) + 144))(*(_QWORD *)(v15 + 32));
        if (v53
          && (v55 = WebCore::InspectorInstrumentation::instrumentingAgents(v53, v54)) != 0
          && (v56 = *(WebCore::InspectorCanvasAgent **)(v55 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v56, (WebCore::CanvasRenderingContext *)v15, v21, (uint64_t)&v97);
        }
        else
        {
          LOBYTE(v97) = 0;
          v98 = 0;
        }
        v57 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v15 + 32) + 144))(*(_QWORD *)(v15 + 32));
        if (v57
          && (v59 = WebCore::InspectorInstrumentation::instrumentingAgents(v57, v58)) != 0
          && (v60 = *(WebCore::InspectorCanvasAgent **)(v59 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v60, (WebCore::CanvasRenderingContext *)v15, v24, (uint64_t)&v99);
        }
        else
        {
          LOBYTE(v99) = 0;
          v100 = 0;
        }
        v61 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v15 + 32) + 144))(*(_QWORD *)(v15 + 32));
        if (v61
          && (v63 = WebCore::InspectorInstrumentation::instrumentingAgents(v61, v62)) != 0
          && (v64 = *(WebCore::InspectorCanvasAgent **)(v63 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v64, (WebCore::CanvasRenderingContext *)v15, v27, (uint64_t)&v101);
        }
        else
        {
          LOBYTE(v101) = 0;
          v102 = 0;
        }
        if (!v90)
        {
          v65 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v15 + 32) + 144))(*(_QWORD *)(v15 + 32));
          if (v65
            && (v67 = WebCore::InspectorInstrumentation::instrumentingAgents(v65, v66)) != 0
            && (v68 = *(_QWORD *)(v67 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v68, v15, (uint64_t)&v88, (uint64_t)&v103);
          }
          else
          {
            LOBYTE(v103) = 0;
            v104 = 0;
          }
          v92 = &v94;
          v93 = (WTF::StringImpl *)5;
          v69 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v15 + 32) + 144))(*(_QWORD *)(v15 + 32));
          if (v69)
          {
            v71 = WebCore::InspectorInstrumentation::instrumentingAgents(v69, v70);
            if (v71)
            {
              v72 = *(_QWORD *)(v71 + 96);
              if (v72)
                WebCore::InspectorCanvasAgent::recordAction(v72, (WebCore::CanvasRenderingContext *)v15, (const WTF::StringImpl *)&v87, &v92);
            }
          }
          if (v104)
          {
            v73 = v103;
            v103 = 0;
            if (v73)
            {
              if (*v73 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v73;
            }
          }
          if (v102)
          {
            v74 = v101;
            v101 = 0;
            if (v74)
            {
              if (*v74 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v74;
            }
          }
          if (v100)
          {
            v75 = v99;
            v99 = 0;
            if (v75)
            {
              if (*v75 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v75;
            }
          }
          if (v98)
          {
            v76 = v97;
            v97 = 0;
            if (v76)
            {
              if (*v76 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v76;
            }
          }
          if (v96)
          {
            v77 = v94;
            v94 = 0;
            if (v77)
            {
              if (*(_DWORD *)v77 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*(_DWORD *)v77;
            }
          }
          v78 = v87;
          v87 = 0;
          if (v78)
          {
            if (*(_DWORD *)v78 == 2)
              WTF::StringImpl::destroy(v78, v70);
            else
              *(_DWORD *)v78 -= 2;
          }
          if (!v90)
          {
LABEL_37:
            v29 = v24;
            v30 = v21;
            v31 = v18;
            v32 = (WTF *)(v15 + 40);
            v33 = v88;
            v34 = v27;
            v35 = HIDWORD(v89);
            v88 = 0;
            v89 = 0;
            WebCore::CanvasPath::roundRect(v32, (uint64_t)v33, v35, &v94, v31, v30, v29, v34);
            if (v33)
              WTF::fastFree(v33, v36);
            if (!v96)
            {
              v37 = 10;
              goto LABEL_41;
            }
            LOBYTE(v92) = (_BYTE)v94;
            v51 = v95;
            v95 = 0;
            v93 = v51;
            if (!*(_QWORD *)(v16 + 16))
            {
              WebCore::propagateExceptionSlowPath(this, &v91, (unsigned __int8 *)&v92);
              v51 = v93;
            }
            v93 = 0;
            if (v51)
            {
              if (*(_DWORD *)v51 == 2)
                WTF::StringImpl::destroy(v51, (WTF::StringImpl *)v36);
              else
                *(_DWORD *)v51 -= 2;
            }
            if (v96)
            {
              v52 = v95;
              v95 = 0;
              if (v52)
              {
                if (*(_DWORD *)v52 != 2)
                {
                  v37 = 0;
                  *(_DWORD *)v52 -= 2;
                  goto LABEL_41;
                }
                WTF::StringImpl::destroy(v52, (WTF::StringImpl *)v36);
              }
            }
            v37 = 0;
LABEL_41:
            v38 = v90;
LABEL_42:
            if (v38 == -1)
              return (_BYTE *)v37;
LABEL_51:
            ((void (*)(WTF::StringImpl **, WTF **))off_1E3249738[v38])(&v94, &v88);
            return (_BYTE *)v37;
          }
        }
        std::__throw_bad_variant_access[abi:sn180100]();
LABEL_139:
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v94, this);
        v18 = v79;
      }
    }
    return (_BYTE *)WebCore::jsCanvasRenderingContext2DPrototypeFunction_roundRect2Body(this, (WTF::StringImpl **)v7, *(JSC::CallFrame **)(v6 + 24), a4);
  }
  hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
  if ((hasExceptionsAfterHandlingTraps & 1) == 0 && ((v14 ^ 1) & 1) == 0)
    goto LABEL_16;
  if ((hasExceptionsAfterHandlingTraps & 1) != 0)
    return 0;
  return (_BYTE *)WebCore::jsCanvasRenderingContext2DPrototypeFunction_roundRect2Body(this, (WTF::StringImpl **)v7, *(JSC::CallFrame **)(v6 + 24), a4);
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_arc(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v11;
  unint64_t v12;
  double v13;
  unint64_t v14;
  JSC::VM *v15;
  double v16;
  unint64_t v17;
  JSC::VM *v18;
  double v19;
  unint64_t v20;
  JSC::VM *v21;
  double v22;
  unint64_t v23;
  JSC::VM *v24;
  double v25;
  unint64_t v26;
  JSC::VM *v27;
  double v28;
  uint64_t v29;
  float v30;
  float v31;
  float v32;
  float v33;
  float v34;
  __n128 v35;
  __n128 v36;
  float v37;
  float v38;
  char v39;
  int v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int **v44;
  unsigned int *v45;
  unsigned int *v46;
  unsigned int v47;
  BOOL v48;
  uint64_t v49;
  int v50;
  unint64_t v51;
  __int128 v53;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int **v59;
  unsigned int *v60;
  unsigned int v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int *v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int *v67;
  unsigned int *v68;
  unsigned int v69;
  unsigned int v70;
  JSValue v71;
  WebCore::InspectorInstrumentation *v72;
  WebCore::ScriptExecutionContext *v73;
  uint64_t v74;
  WebCore::InspectorCanvasAgent *v75;
  WebCore::InspectorInstrumentation *v76;
  WebCore::ScriptExecutionContext *v77;
  uint64_t v78;
  WebCore::InspectorCanvasAgent *v79;
  WebCore::InspectorInstrumentation *v80;
  WebCore::ScriptExecutionContext *v81;
  uint64_t v82;
  WebCore::InspectorCanvasAgent *v83;
  WebCore::InspectorInstrumentation *v84;
  WebCore::ScriptExecutionContext *v85;
  uint64_t v86;
  WebCore::InspectorCanvasAgent *v87;
  WebCore::InspectorInstrumentation *v88;
  WebCore::ScriptExecutionContext *v89;
  uint64_t v90;
  WebCore::InspectorCanvasAgent *v91;
  WebCore::InspectorInstrumentation *v92;
  WebCore::ScriptExecutionContext *v93;
  uint64_t v94;
  WebCore::InspectorCanvasAgent *v95;
  WebCore::InspectorInstrumentation *v96;
  WebCore::ScriptExecutionContext *v97;
  uint64_t v98;
  uint64_t v99;
  _DWORD *v100;
  _DWORD *v101;
  _DWORD *v102;
  _DWORD *v103;
  _DWORD *v104;
  _DWORD *v105;
  WTF::StringImpl *v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  __float2 v112;
  WTF::StringImpl *v113;
  WTF::StringImpl *v114;
  JSC::VM *v115;
  JSC::VM *v116;
  _QWORD v117[2];
  WTF::StringImpl *v118;
  JSC::VM *v119;
  _BYTE v120[32];
  __int128 v121;
  _DWORD *v122;
  char v123;
  _DWORD *v124;
  char v125;
  _DWORD *v126;
  char v127;
  _DWORD *v128;
  char v129;
  uint64_t v130;

  v130 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v116 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v116, "CanvasRenderingContext2D", "arc");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v116, "CanvasRenderingContext2D", "arc");
  v11 = *(_QWORD *)(v5 + 24);
  v119 = v4;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 4)
  {
    v71.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v71);
  }
  v12 = *((_QWORD *)a2 + 6);
  *(_QWORD *)v120 = v12;
  if (v12 >= 0xFFFE000000000000)
  {
    v13 = (double)(int)v12;
  }
  else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v120, this);
    v13 = v107;
  }
  else
  {
    *(_QWORD *)&v13 = v12 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    return 0;
  v14 = *((_QWORD *)a2 + 7);
  *(_QWORD *)v120 = v14;
  v15 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v14 >= 0xFFFE000000000000)
  {
    v16 = (double)(int)v14;
  }
  else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v120, this);
    v16 = v108;
  }
  else
  {
    *(_QWORD *)&v16 = v14 - 0x2000000000000;
  }
  if (*((_DWORD *)v15 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v15))
    return 0;
  v17 = *((_QWORD *)a2 + 8);
  *(_QWORD *)v120 = v17;
  v18 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v17 >= 0xFFFE000000000000)
  {
    v19 = (double)(int)v17;
  }
  else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v120, this);
    v19 = v109;
  }
  else
  {
    *(_QWORD *)&v19 = v17 - 0x2000000000000;
  }
  if (*((_DWORD *)v18 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v18))
    return 0;
  v20 = *((_QWORD *)a2 + 9);
  *(_QWORD *)v120 = v20;
  v21 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v20 >= 0xFFFE000000000000)
  {
    v22 = (double)(int)v20;
  }
  else if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v120, this);
    v22 = v110;
  }
  else
  {
    *(_QWORD *)&v22 = v20 - 0x2000000000000;
  }
  if (*((_DWORD *)v21 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v21))
    return 0;
  v23 = *((_QWORD *)a2 + 10);
  *(_QWORD *)v120 = v23;
  v24 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v23 >= 0xFFFE000000000000)
  {
    v25 = (double)(int)v23;
  }
  else if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v120, this);
    v25 = v111;
  }
  else
  {
    *(_QWORD *)&v25 = v23 - 0x2000000000000;
  }
  if (*((_DWORD *)v24 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v24))
    return 0;
  if ((unint64_t)(*((int *)a2 + 8) - 7) >= 0xFFFFFFFFFFFFFFFALL)
  {
    v27 = (JSC::VM *)*((_QWORD *)this + 7);
    v26 = 10;
LABEL_33:
    v29 = v26 == 7;
    goto LABEL_34;
  }
  v26 = *((_QWORD *)a2 + 11);
  v27 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v26 >= 0xFFFE000000000000)
  {
    v29 = (_DWORD)v26 != 0;
    goto LABEL_34;
  }
  *(_QWORD *)&v28 = v26 - 0x2000000000000;
  if (v26 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((v26 & 0xFFFE000000000002) == 0)
    {
      v115 = (JSC::VM *)*((_QWORD *)this + 7);
      v29 = JSC::JSCell::toBoolean(v26, (uint64_t)this);
      v27 = v115;
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  v29 = v28 > 0.0 || v28 < 0.0;
LABEL_34:
  if (!*((_DWORD *)v27 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v27) & 1) == 0)
  {
    if (*(_BYTE *)(v11 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v118 = *(WTF::StringImpl **)v120;
      v72 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
      if (v72
        && (v74 = WebCore::InspectorInstrumentation::instrumentingAgents(v72, v73)) != 0
        && (v75 = *(WebCore::InspectorCanvasAgent **)(v74 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v75, (WebCore::CanvasRenderingContext *)v11, v13, (uint64_t)v120);
      }
      else
      {
        v120[0] = 0;
        v120[16] = 0;
      }
      v76 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
      if (v76
        && (v78 = WebCore::InspectorInstrumentation::instrumentingAgents(v76, v77)) != 0
        && (v79 = *(WebCore::InspectorCanvasAgent **)(v78 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v79, (WebCore::CanvasRenderingContext *)v11, v16, (uint64_t)&v120[24]);
      }
      else
      {
        v120[24] = 0;
        BYTE8(v121) = 0;
      }
      v80 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
      if (v80
        && (v82 = WebCore::InspectorInstrumentation::instrumentingAgents(v80, v81)) != 0
        && (v83 = *(WebCore::InspectorCanvasAgent **)(v82 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v83, (WebCore::CanvasRenderingContext *)v11, v19, (uint64_t)&v122);
      }
      else
      {
        LOBYTE(v122) = 0;
        v123 = 0;
      }
      v84 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
      if (v84
        && (v86 = WebCore::InspectorInstrumentation::instrumentingAgents(v84, v85)) != 0
        && (v87 = *(WebCore::InspectorCanvasAgent **)(v86 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v87, (WebCore::CanvasRenderingContext *)v11, v22, (uint64_t)&v124);
      }
      else
      {
        LOBYTE(v124) = 0;
        v125 = 0;
      }
      v88 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
      if (v88
        && (v90 = WebCore::InspectorInstrumentation::instrumentingAgents(v88, v89)) != 0
        && (v91 = *(WebCore::InspectorCanvasAgent **)(v90 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v91, (WebCore::CanvasRenderingContext *)v11, v25, (uint64_t)&v126);
      }
      else
      {
        LOBYTE(v126) = 0;
        v127 = 0;
      }
      v92 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
      if (v92
        && (v94 = WebCore::InspectorInstrumentation::instrumentingAgents(v92, v93)) != 0
        && (v95 = *(WebCore::InspectorCanvasAgent **)(v94 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v95, (WebCore::CanvasRenderingContext *)v11, (WTF::JSONImpl::Value *)v29, (uint64_t)&v128);
      }
      else
      {
        LOBYTE(v128) = 0;
        v129 = 0;
      }
      v117[0] = v120;
      v117[1] = 6;
      v96 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
      if (v96)
      {
        v98 = WebCore::InspectorInstrumentation::instrumentingAgents(v96, v97);
        if (v98)
        {
          v99 = *(_QWORD *)(v98 + 96);
          if (v99)
            WebCore::InspectorCanvasAgent::recordAction(v99, (WebCore::CanvasRenderingContext *)v11, (const WTF::StringImpl *)&v118, v117);
        }
      }
      if (v129)
      {
        v100 = v128;
        v128 = 0;
        if (v100)
        {
          if (*v100 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v100;
        }
      }
      if (v127)
      {
        v101 = v126;
        v126 = 0;
        if (v101)
        {
          if (*v101 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v101;
        }
      }
      if (v125)
      {
        v102 = v124;
        v124 = 0;
        if (v102)
        {
          if (*v102 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v102;
        }
      }
      if (v123)
      {
        v103 = v122;
        v122 = 0;
        if (v103)
        {
          if (*v103 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v103;
        }
      }
      if (BYTE8(v121))
      {
        v104 = *(_DWORD **)&v120[24];
        *(_QWORD *)&v120[24] = 0;
        if (v104)
        {
          if (*v104 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v104;
        }
      }
      if (v120[16])
      {
        v105 = *(_DWORD **)v120;
        *(_QWORD *)v120 = 0;
        if (v105)
        {
          if (*v105 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v105;
        }
      }
      v106 = v118;
      v118 = 0;
      if (v106)
      {
        if (*(_DWORD *)v106 == 2)
          WTF::StringImpl::destroy(v106, v97);
        else
          *(_DWORD *)v106 -= 2;
      }
    }
    v30 = v13;
    if ((LODWORD(v30) & 0x7FFFFFFFu) > 0x7F7FFFFF)
      return 10;
    v31 = v16;
    if ((LODWORD(v31) & 0x7FFFFFFFu) > 0x7F7FFFFF)
      return 10;
    v32 = v19;
    if ((LODWORD(v32) & 0x7FFFFFFFu) > 0x7F7FFFFF)
      return 10;
    v33 = v22;
    if ((LODWORD(v33) & 0x7FFFFFFFu) > 0x7F7FFFFF)
      return 10;
    v34 = v25;
    if ((LODWORD(v34) & 0x7FFFFFFFu) > 0x7F7FFFFF)
      return 10;
    if (v32 < 0.0)
    {
      v120[0] = 0;
      *(_QWORD *)&v120[8] = 0;
      if (!*((_QWORD *)v119 + 2))
      {
        WebCore::propagateExceptionSlowPath(this, &v119, v120);
        v114 = *(WTF::StringImpl **)&v120[8];
        *(_QWORD *)&v120[8] = 0;
        if (v114)
        {
          if (*(_DWORD *)v114 == 2)
            WTF::StringImpl::destroy(v114, v113);
          else
            *(_DWORD *)v114 -= 2;
        }
      }
      return 0;
    }
    if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)(v11 + 40) + 16))(v11 + 40))
      return 10;
    v35.n128_f32[0] = fmodf(v33, 6.2832);
    if (v35.n128_f32[0] >= 0.0)
      v37 = v35.n128_f32[0];
    else
      v37 = v35.n128_f32[0] + 6.2832;
    v38 = (float)(v37 - v33) + v34;
    if ((_DWORD)v29)
    {
      v35.n128_f32[0] = v37 - v38;
      v36.n128_u32[0] = 1086918619;
      if ((float)(v37 - v38) < 6.2832)
        goto LABEL_52;
      v35.n128_u32[0] = -1060565029;
    }
    else
    {
      v36.n128_f32[0] = v38 - v37;
      v35.n128_u32[0] = 1086918619;
      if ((float)(v38 - v37) < 6.2832)
        goto LABEL_52;
    }
    v38 = v37 + v35.n128_f32[0];
LABEL_52:
    if (v32 == 0.0 || v37 == v38)
    {
      v112 = __sincosf_stret(v37);
      WebCore::CanvasPath::lineTo((WebCore::CanvasPath *)(v11 + 40), v30 + (float)(v32 * v112.__cosval), v31 + (float)(v32 * v112.__sinval));
      return 10;
    }
    if ((LODWORD(v37) & 0x7FFFFFFFu) > 0x7F7FFFFF || (LODWORD(v38) & 0x7FFFFFFFu) > 0x7F7FFFFF)
      return 10;
    v39 = v29 ^ 1;
    v40 = *(_DWORD *)(v11 + 112);
    if (v40 != 2)
    {
      if (v40)
        goto LABEL_58;
      v51 = LODWORD(v30) | ((unint64_t)LODWORD(v31) << 32);
      v49 = v11 + 56;
      goto LABEL_79;
    }
    v49 = v11 + 56;
    v50 = (*(uint64_t (**)(_QWORD, __n128, __n128))(**(_QWORD **)(v11 + 56) + 200))(*(_QWORD *)(v11 + 56), v35, v36);
    v40 = *(_DWORD *)(v11 + 112);
    if (!v50)
    {
LABEL_58:
      if (v40 != 1)
      {
        if (v40 == 2)
        {
          v41 = atomic_load((unsigned int *)(*(_QWORD *)(v11 + 56) + 8));
          v42 = *(_QWORD *)(v11 + 56);
          if (v41 != 1)
          {
            (*(void (**)(_BYTE *__return_ptr, _QWORD, __n128, __n128))(*(_QWORD *)v42 + 24))(v120, *(_QWORD *)(v11 + 56), v35, v36);
            v62 = *(_QWORD *)v120;
            *(_QWORD *)v120 = 0;
            v63 = *(unsigned int **)(v11 + 56);
            *(_QWORD *)(v11 + 56) = v62;
            if (v63)
            {
              v64 = v63 + 2;
              do
              {
                v65 = __ldaxr(v64);
                v66 = v65 - 1;
              }
              while (__stlxr(v66, v64));
              if (!v66)
              {
                atomic_store(1u, v63 + 2);
                (*(void (**)(unsigned int *))(*(_QWORD *)v63 + 8))(v63);
              }
              v67 = *(unsigned int **)v120;
              *(_QWORD *)v120 = 0;
              if (v67)
              {
                v68 = v67 + 2;
                do
                {
                  v69 = __ldaxr(v68);
                  v70 = v69 - 1;
                }
                while (__stlxr(v70, v68));
                if (!v70)
                {
                  atomic_store(1u, v67 + 2);
                  (*(void (**)(unsigned int *))(*(_QWORD *)v67 + 8))(v67);
                }
              }
            }
            v42 = *(_QWORD *)(v11 + 56);
          }
          if (v42)
            goto LABEL_94;
        }
        v42 = WTF::fastMalloc((WTF *)0x20);
        *(_DWORD *)(v42 + 8) = 1;
        *(_QWORD *)v42 = off_1E340EC98;
        *(_QWORD *)(v42 + 16) = 0;
        *(_QWORD *)(v42 + 24) = 0;
        v43 = *(unsigned int *)(v11 + 112);
        if ((_DWORD)v43 != -1)
        {
          v44 = (unsigned int **)(v11 + 56);
          if ((_DWORD)v43 == 2)
          {
            v45 = *v44;
            *v44 = (unsigned int *)v42;
            if (v45)
            {
              v46 = v45 + 2;
              do
              {
                v47 = __ldaxr(v46);
                v48 = --v47 == 0;
              }
              while (__stlxr(v47, v46));
LABEL_87:
              if (v48)
              {
                atomic_store(1u, v45 + 2);
                (*(void (**)(unsigned int *))(*(_QWORD *)v45 + 8))(v45);
              }
              goto LABEL_94;
            }
            goto LABEL_94;
          }
          ((void (*)(_BYTE *, unsigned int **))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v43])(v120, v44);
        }
        *(_QWORD *)(v11 + 56) = v42;
        *(_DWORD *)(v11 + 112) = 2;
        goto LABEL_94;
      }
      v42 = WTF::fastMalloc((WTF *)0x20);
      *(_DWORD *)(v42 + 8) = 1;
      *(_QWORD *)v42 = off_1E340EC98;
      v55 = *(_OWORD *)(v11 + 72);
      *(_OWORD *)v120 = *(_OWORD *)(v11 + 56);
      *(_OWORD *)&v120[16] = v55;
      v121 = *(_OWORD *)(v11 + 88);
      v122 = *(_DWORD **)(v11 + 104);
      *(_QWORD *)(v42 + 16) = 0;
      *(_QWORD *)(v42 + 24) = 0;
      v56 = WTF::fastMalloc((WTF *)0x38);
      *(_DWORD *)(v42 + 24) = 1;
      *(_QWORD *)(v42 + 16) = v56;
      v57 = v56 + 56 * *(unsigned int *)(v42 + 28);
      *(_OWORD *)v57 = *(_OWORD *)v120;
      *(_OWORD *)(v57 + 16) = *(_OWORD *)&v120[16];
      *(_OWORD *)(v57 + 32) = v121;
      *(_QWORD *)(v57 + 48) = v122;
      ++*(_DWORD *)(v42 + 28);
      v58 = *(unsigned int *)(v11 + 112);
      if ((_DWORD)v58 != -1)
      {
        v59 = (unsigned int **)(v11 + 56);
        if ((_DWORD)v58 == 2)
        {
          v45 = *v59;
          *v59 = (unsigned int *)v42;
          if (v45)
          {
            v60 = v45 + 2;
            do
            {
              v61 = __ldaxr(v60);
              v48 = --v61 == 0;
            }
            while (__stlxr(v61, v60));
            goto LABEL_87;
          }
LABEL_94:
          *(float *)v120 = v30;
          *(float *)&v120[4] = v31;
          *(float *)&v120[8] = v32;
          *(float *)&v120[12] = v37;
          *(float *)&v120[16] = v38;
          v120[20] = v39;
          (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v42 + 72))(v42, v120);
          return 10;
        }
        ((void (*)(_BYTE *, unsigned int **))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v58])(v120, v59);
      }
      *(_QWORD *)(v11 + 56) = v42;
      *(_DWORD *)(v11 + 112) = 2;
      goto LABEL_94;
    }
    v51 = LODWORD(v30) | ((unint64_t)LODWORD(v31) << 32);
    if (v40 == -1)
      goto LABEL_80;
    if (v40 != 1)
    {
LABEL_79:
      ((void (*)(_QWORD *, uint64_t, __n128, __n128))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJNS_9monostateEN7WebCore11PathSegmentEN3WTF7DataRefINS7_8PathImplEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSF_EEEDcOSG_DpOT0____fmatrix_7[v40])(v117, v49, v35, v36);
LABEL_80:
      *(_QWORD *)(v11 + 56) = v51;
      *(float *)(v49 + 8) = v32;
      *(float *)(v49 + 12) = v37;
      *(float *)(v49 + 16) = v38;
      *(_BYTE *)(v49 + 20) = v39;
      v53 = *(_OWORD *)&v120[15];
      *(_OWORD *)(v49 + 21) = *(_OWORD *)v120;
      *(_OWORD *)(v49 + 36) = v53;
      *(_DWORD *)(v49 + 52) = 5;
      *(_DWORD *)(v11 + 112) = 1;
      return 10;
    }
    *(_QWORD *)(v11 + 56) = v51;
    *(float *)(v11 + 64) = v32;
    *(float *)(v11 + 68) = v37;
    *(float *)(v11 + 72) = v38;
    *(_BYTE *)(v11 + 76) = v39;
    *(_DWORD *)(v11 + 108) = 5;
    return 10;
  }
  return 0;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_ellipse(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::CanvasRenderingContext *v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  unint64_t v27;
  JSC::VM *v28;
  double v29;
  unint64_t v30;
  JSC::VM *v31;
  double v32;
  unint64_t v33;
  JSC::VM *v34;
  double v35;
  int v36;
  uint64_t v37;
  int *v38;
  int v39;
  _BOOL8 v40;
  float v41;
  float v42;
  float v43;
  float v44;
  float v45;
  unsigned int v46;
  unsigned int v47;
  WTF::StringImpl *v48;
  uint64_t result;
  JSValue v50;
  WebCore::CanvasRenderingContext *v51;
  int hasExceptionsAfterHandlingTraps;
  WebCore::CanvasRenderingContext *v53;
  int v54;
  WebCore::CanvasRenderingContext *v55;
  int v56;
  WebCore::CanvasRenderingContext *v57;
  int v58;
  WebCore::CanvasRenderingContext *v59;
  int v60;
  WebCore::CanvasRenderingContext *v61;
  int v62;
  JSC::VM *v63;
  WebCore::CanvasRenderingContext *v64;
  int v65;
  char v66;
  WebCore::InspectorInstrumentation *v67;
  WebCore::ScriptExecutionContext *v68;
  uint64_t v69;
  WebCore::InspectorCanvasAgent *v70;
  WTF::StringImpl *v71;
  WTF::StringImpl *v72;
  WebCore::InspectorInstrumentation *v73;
  WebCore::ScriptExecutionContext *v74;
  uint64_t v75;
  WebCore::InspectorCanvasAgent *v76;
  WebCore::InspectorInstrumentation *v77;
  WebCore::ScriptExecutionContext *v78;
  uint64_t v79;
  WebCore::InspectorCanvasAgent *v80;
  WebCore::InspectorInstrumentation *v81;
  WebCore::ScriptExecutionContext *v82;
  uint64_t v83;
  WebCore::InspectorCanvasAgent *v84;
  WebCore::InspectorInstrumentation *v85;
  WebCore::ScriptExecutionContext *v86;
  uint64_t v87;
  WebCore::InspectorCanvasAgent *v88;
  WebCore::InspectorInstrumentation *v89;
  WebCore::ScriptExecutionContext *v90;
  uint64_t v91;
  WebCore::InspectorCanvasAgent *v92;
  WebCore::InspectorInstrumentation *v93;
  WebCore::ScriptExecutionContext *v94;
  uint64_t v95;
  WebCore::InspectorCanvasAgent *v96;
  WebCore::InspectorInstrumentation *v97;
  WebCore::ScriptExecutionContext *v98;
  uint64_t v99;
  WebCore::InspectorCanvasAgent *v100;
  WebCore::InspectorInstrumentation *v101;
  WebCore::ScriptExecutionContext *v102;
  uint64_t v103;
  uint64_t v104;
  _DWORD *v105;
  _DWORD *v106;
  _DWORD *v107;
  _DWORD *v108;
  _DWORD *v109;
  _DWORD *v110;
  _DWORD *v111;
  WTF::StringImpl *v112;
  WTF::StringImpl *v113;
  WebCore::CanvasRenderingContext *v114;
  double v115;
  WebCore::CanvasRenderingContext *v116;
  double v117;
  WebCore::CanvasRenderingContext *v118;
  double v119;
  WebCore::CanvasRenderingContext *v120;
  double v121;
  WebCore::CanvasRenderingContext *v122;
  double v123;
  WebCore::CanvasRenderingContext *v124;
  double v125;
  double v126;
  BOOL v127;
  WebCore::CanvasRenderingContext *v128;
  WebCore::CanvasRenderingContext *v129;
  WebCore::CanvasRenderingContext *v130;
  JSC::VM *v131;
  WTF::StringImpl *v132;
  JSC::VM *v133;
  WTF::StringImpl **v134;
  WTF::StringImpl *v135;
  WTF::StringImpl *v136;
  WTF::StringImpl *v137;
  char v138;
  _DWORD *v139;
  char v140;
  _DWORD *v141;
  char v142;
  _DWORD *v143;
  char v144;
  _DWORD *v145;
  char v146;
  _DWORD *v147;
  char v148;
  _DWORD *v149;
  char v150;
  _DWORD *v151;
  char v152;
  uint64_t v153;

  v153 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v131 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v131, "CanvasRenderingContext2D", "ellipse");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v131, "CanvasRenderingContext2D", "ellipse");
  v12 = *(WebCore::CanvasRenderingContext **)(v5 + 24);
  v133 = v4;
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 6)
  {
    v50.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v50);
  }
  v13 = *((_QWORD *)a2 + 6);
  v136 = (WTF::StringImpl *)v13;
  if (v13 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v13;
  }
  else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v114 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v136, this);
    v12 = v114;
    v14 = v115;
  }
  else
  {
    *(_QWORD *)&v14 = v13 - 0x2000000000000;
  }
  if (*((_DWORD *)v4 + 20))
  {
    v51 = v12;
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v12 = v51;
    if (hasExceptionsAfterHandlingTraps)
      return 0;
  }
  v15 = *((_QWORD *)a2 + 7);
  v136 = (WTF::StringImpl *)v15;
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v15 >= 0xFFFE000000000000)
  {
    v17 = (double)(int)v15;
  }
  else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v116 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v136, this);
    v12 = v116;
    v17 = v117;
  }
  else
  {
    *(_QWORD *)&v17 = v15 - 0x2000000000000;
  }
  if (*((_DWORD *)v16 + 20))
  {
    v53 = v12;
    v54 = JSC::VM::hasExceptionsAfterHandlingTraps(v16);
    v12 = v53;
    if (v54)
      return 0;
  }
  v18 = *((_QWORD *)a2 + 8);
  v136 = (WTF::StringImpl *)v18;
  v19 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v18 >= 0xFFFE000000000000)
  {
    v20 = (double)(int)v18;
  }
  else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v118 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v136, this);
    v12 = v118;
    v20 = v119;
  }
  else
  {
    *(_QWORD *)&v20 = v18 - 0x2000000000000;
  }
  if (*((_DWORD *)v19 + 20))
  {
    v55 = v12;
    v56 = JSC::VM::hasExceptionsAfterHandlingTraps(v19);
    v12 = v55;
    if (v56)
      return 0;
  }
  v21 = *((_QWORD *)a2 + 9);
  v136 = (WTF::StringImpl *)v21;
  v22 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v21 >= 0xFFFE000000000000)
  {
    v23 = (double)(int)v21;
  }
  else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v120 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v136, this);
    v12 = v120;
    v23 = v121;
  }
  else
  {
    *(_QWORD *)&v23 = v21 - 0x2000000000000;
  }
  if (*((_DWORD *)v22 + 20))
  {
    v57 = v12;
    v58 = JSC::VM::hasExceptionsAfterHandlingTraps(v22);
    v12 = v57;
    if (v58)
      return 0;
  }
  v24 = *((_QWORD *)a2 + 10);
  v136 = (WTF::StringImpl *)v24;
  v25 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v24 >= 0xFFFE000000000000)
  {
    v26 = (double)(int)v24;
  }
  else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v122 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v136, this);
    v12 = v122;
    v26 = v123;
  }
  else
  {
    *(_QWORD *)&v26 = v24 - 0x2000000000000;
  }
  if (*((_DWORD *)v25 + 20))
  {
    v59 = v12;
    v60 = JSC::VM::hasExceptionsAfterHandlingTraps(v25);
    v12 = v59;
    if (v60)
      return 0;
  }
  v27 = *((_QWORD *)a2 + 11);
  v136 = (WTF::StringImpl *)v27;
  v28 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v27 >= 0xFFFE000000000000)
  {
    v29 = (double)(int)v27;
  }
  else if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v124 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v136, this);
    v12 = v124;
    v29 = v125;
  }
  else
  {
    *(_QWORD *)&v29 = v27 - 0x2000000000000;
  }
  if (*((_DWORD *)v28 + 20))
  {
    v61 = v12;
    v62 = JSC::VM::hasExceptionsAfterHandlingTraps(v28);
    v12 = v61;
    if (v62)
      return 0;
  }
  v30 = *((_QWORD *)a2 + 12);
  v136 = (WTF::StringImpl *)v30;
  v31 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v30 >= 0xFFFE000000000000)
  {
    v32 = (double)(int)v30;
  }
  else if (v30 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v130 = v12;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v136, this);
    v12 = v130;
    v32 = v126;
  }
  else
  {
    *(_QWORD *)&v32 = v30 - 0x2000000000000;
  }
  if (*((_DWORD *)v31 + 20))
  {
    v63 = v31;
    v64 = v12;
    v65 = JSC::VM::hasExceptionsAfterHandlingTraps(v63);
    v12 = v64;
    if (v65)
      return 0;
  }
  if ((unint64_t)(*((int *)a2 + 8) - 9) >= 0xFFFFFFFFFFFFFFF8)
  {
    v34 = (JSC::VM *)*((_QWORD *)this + 7);
    v33 = 10;
    goto LABEL_52;
  }
  v33 = *((_QWORD *)a2 + 13);
  v34 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v33 >= 0xFFFE000000000000)
  {
    v40 = (_DWORD)v33 != 0;
    goto LABEL_53;
  }
  *(_QWORD *)&v35 = v33 - 0x2000000000000;
  if (v33 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
  {
    v40 = v35 > 0.0 || v35 < 0.0;
    goto LABEL_53;
  }
  if ((v33 & 0xFFFE000000000002) != 0)
  {
LABEL_52:
    v40 = v33 == 7;
    goto LABEL_53;
  }
  v36 = *(unsigned __int8 *)(v33 + 5);
  if (v36 == 3)
  {
    v39 = *(_DWORD *)(v33 + 8);
LABEL_194:
    v127 = v39 == 0;
    goto LABEL_195;
  }
  if (v36 == 2)
  {
    v37 = *(_QWORD *)(v33 + 8);
    if ((v37 & 1) != 0)
      v38 = (int *)(v33 + 16);
    else
      v38 = (int *)(v37 + 4);
    v39 = *v38;
    goto LABEL_194;
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)v33 & 0xFFFFFFFE) + 0xA) & 1) != 0)
  {
    v127 = *(_QWORD *)(16 * (*(_DWORD *)v33 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_195:
    v40 = !v127;
    goto LABEL_53;
  }
  v40 = 1;
LABEL_53:
  if (!*((_DWORD *)v34 + 20)
    || (v128 = v12, v66 = JSC::VM::hasExceptionsAfterHandlingTraps(v34), v12 = v128, (v66 & 1) == 0))
  {
    if (*((_BYTE *)v12 + 25))
    {
      v129 = v12;
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v132 = v136;
      v67 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v129 + 4) + 144))(*((_QWORD *)v129 + 4));
      if (v67
        && (v69 = WebCore::InspectorInstrumentation::instrumentingAgents(v67, v68)) != 0
        && (v70 = *(WebCore::InspectorCanvasAgent **)(v69 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v70, v129, v14, (uint64_t)&v136);
      }
      else
      {
        LOBYTE(v136) = 0;
        v138 = 0;
      }
      v73 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v129 + 4) + 144))(*((_QWORD *)v129 + 4));
      if (v73
        && (v75 = WebCore::InspectorInstrumentation::instrumentingAgents(v73, v74)) != 0
        && (v76 = *(WebCore::InspectorCanvasAgent **)(v75 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v76, v129, v17, (uint64_t)&v139);
      }
      else
      {
        LOBYTE(v139) = 0;
        v140 = 0;
      }
      v77 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v129 + 4) + 144))(*((_QWORD *)v129 + 4));
      if (v77
        && (v79 = WebCore::InspectorInstrumentation::instrumentingAgents(v77, v78)) != 0
        && (v80 = *(WebCore::InspectorCanvasAgent **)(v79 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v80, v129, v20, (uint64_t)&v141);
      }
      else
      {
        LOBYTE(v141) = 0;
        v142 = 0;
      }
      v81 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v129 + 4) + 144))(*((_QWORD *)v129 + 4));
      if (v81
        && (v83 = WebCore::InspectorInstrumentation::instrumentingAgents(v81, v82)) != 0
        && (v84 = *(WebCore::InspectorCanvasAgent **)(v83 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v84, v129, v23, (uint64_t)&v143);
      }
      else
      {
        LOBYTE(v143) = 0;
        v144 = 0;
      }
      v85 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v129 + 4) + 144))(*((_QWORD *)v129 + 4));
      if (v85
        && (v87 = WebCore::InspectorInstrumentation::instrumentingAgents(v85, v86)) != 0
        && (v88 = *(WebCore::InspectorCanvasAgent **)(v87 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v88, v129, v26, (uint64_t)&v145);
      }
      else
      {
        LOBYTE(v145) = 0;
        v146 = 0;
      }
      v89 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v129 + 4) + 144))(*((_QWORD *)v129 + 4));
      if (v89
        && (v91 = WebCore::InspectorInstrumentation::instrumentingAgents(v89, v90)) != 0
        && (v92 = *(WebCore::InspectorCanvasAgent **)(v91 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v92, v129, v29, (uint64_t)&v147);
      }
      else
      {
        LOBYTE(v147) = 0;
        v148 = 0;
      }
      v93 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v129 + 4) + 144))(*((_QWORD *)v129 + 4));
      if (v93
        && (v95 = WebCore::InspectorInstrumentation::instrumentingAgents(v93, v94)) != 0
        && (v96 = *(WebCore::InspectorCanvasAgent **)(v95 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v96, v129, v32, (uint64_t)&v149);
      }
      else
      {
        LOBYTE(v149) = 0;
        v150 = 0;
      }
      v97 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v129 + 4) + 144))(*((_QWORD *)v129 + 4));
      if (v97
        && (v99 = WebCore::InspectorInstrumentation::instrumentingAgents(v97, v98)) != 0
        && (v100 = *(WebCore::InspectorCanvasAgent **)(v99 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v100, v129, (WTF::JSONImpl::Value *)v40, (uint64_t)&v151);
      }
      else
      {
        LOBYTE(v151) = 0;
        v152 = 0;
      }
      v134 = &v136;
      v135 = (WTF::StringImpl *)8;
      v101 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v129 + 4) + 144))(*((_QWORD *)v129 + 4));
      if (v101)
      {
        v103 = WebCore::InspectorInstrumentation::instrumentingAgents(v101, v102);
        if (v103)
        {
          v104 = *(_QWORD *)(v103 + 96);
          if (v104)
            WebCore::InspectorCanvasAgent::recordAction(v104, v129, (const WTF::StringImpl *)&v132, &v134);
        }
      }
      if (v152)
      {
        v105 = v151;
        v151 = 0;
        if (v105)
        {
          if (*v105 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v105;
        }
      }
      v12 = v129;
      if (v150)
      {
        v106 = v149;
        v149 = 0;
        if (v106)
        {
          if (*v106 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v12 = v129;
          }
          else
          {
            --*v106;
          }
        }
      }
      if (v148)
      {
        v107 = v147;
        v147 = 0;
        if (v107)
        {
          if (*v107 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v12 = v129;
          }
          else
          {
            --*v107;
          }
        }
      }
      if (v146)
      {
        v108 = v145;
        v145 = 0;
        if (v108)
        {
          if (*v108 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v12 = v129;
          }
          else
          {
            --*v108;
          }
        }
      }
      if (v144)
      {
        v109 = v143;
        v143 = 0;
        if (v109)
        {
          if (*v109 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v12 = v129;
          }
          else
          {
            --*v109;
          }
        }
      }
      if (v142)
      {
        v110 = v141;
        v141 = 0;
        if (v110)
        {
          if (*v110 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v12 = v129;
          }
          else
          {
            --*v110;
          }
        }
      }
      if (v140)
      {
        v111 = v139;
        v139 = 0;
        if (v111)
        {
          if (*v111 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v12 = v129;
          }
          else
          {
            --*v111;
          }
        }
      }
      if (v138)
      {
        v112 = v136;
        v136 = 0;
        if (v112)
        {
          if (*(_DWORD *)v112 == 1)
          {
            WTF::JSONImpl::Value::operator delete();
            v12 = v129;
          }
          else
          {
            --*(_DWORD *)v112;
          }
        }
      }
      v113 = v132;
      v132 = 0;
      if (v113)
      {
        if (*(_DWORD *)v113 == 2)
        {
          WTF::StringImpl::destroy(v113, v102);
          v12 = v129;
        }
        else
        {
          *(_DWORD *)v113 -= 2;
        }
      }
    }
    v41 = v32;
    v42 = v29;
    v43 = v26;
    v44 = v23;
    v45 = v20;
    *(float *)&v46 = v17;
    *(float *)&v47 = v14;
    WebCore::CanvasPath::ellipse((WebCore::CanvasRenderingContext *)((char *)v12 + 40), v47, v46, v45, v44, v43, v42, v41, v40, (uint64_t)&v136);
    if (!v138)
      return 10;
    LOBYTE(v134) = (_BYTE)v136;
    v71 = v137;
    v137 = 0;
    v135 = v71;
    if (!*((_QWORD *)v133 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v133, (unsigned __int8 *)&v134);
      v71 = v135;
    }
    v135 = 0;
    if (v71)
    {
      if (*(_DWORD *)v71 == 2)
        WTF::StringImpl::destroy(v71, v48);
      else
        *(_DWORD *)v71 -= 2;
    }
    if (v138)
    {
      v72 = v137;
      v137 = 0;
      if (v72)
      {
        if (*(_DWORD *)v72 != 2)
        {
          result = 0;
          *(_DWORD *)v72 -= 2;
          return result;
        }
        WTF::StringImpl::destroy(v72, v48);
      }
    }
  }
  return 0;
}

_BYTE *WebCore::jsCanvasRenderingContext2DPrototypeFunction_setLineDash(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::CanvasRenderingContext *v10;
  __n128 v11;
  int v12;
  uint64_t v13;
  void *v14;
  WTF *v15;
  uint64_t v16;
  JSValue v20;
  WTF::StringImpl *v21;
  WTF *v22;
  WTF::StringImpl *v23;
  JSC::VM *v24;
  _QWORD v25[2];
  WTF::StringImpl *v26;
  WTF *v27;
  uint64_t v28;
  int v29;
  WTF *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v24 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "CanvasRenderingContext2D", "setLineDash");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCanvasRenderingContext2D::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v24, "CanvasRenderingContext2D", "setLineDash");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v20.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v20);
  }
  v10 = *(WebCore::CanvasRenderingContext **)(v5 + 24);
  WebCore::Detail::NumericSequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLUnrestrictedDouble>>::convert(*((_QWORD *)a2 + 6), this, (uint64_t)&v27);
  v12 = v29;
  if (v29)
  {
    v16 = 0;
  }
  else
  {
    if (*((_BYTE *)v10 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      if (v29)
        goto LABEL_35;
      WebCore::InspectorCanvasCallTracer::processArgument((uint64_t)v10, (uint64_t)&v27, &v30);
      v25[0] = &v30;
      v25[1] = 1;
      WebCore::InspectorCanvasCallTracer::recordAction(v10, (const WTF::StringImpl *)&v26, v25);
      if (v32)
      {
        v22 = v30;
        v30 = 0;
        if (v22)
        {
          if (*(_DWORD *)v22 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*(_DWORD *)v22;
        }
      }
      v23 = v26;
      v26 = 0;
      if (v23)
      {
        if (*(_DWORD *)v23 == 2)
          goto LABEL_36;
        *(_DWORD *)v23 -= 2;
      }
      while (v29)
      {
LABEL_35:
        v23 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_36:
        WTF::StringImpl::destroy(v23, v21);
      }
    }
    v30 = v27;
    v13 = v28;
    v27 = 0;
    v28 = 0;
    v31 = v13;
    v11.n128_f64[0] = WebCore::CanvasRenderingContext2DBase::setLineDash(v10, (unsigned int *)&v30);
    v15 = v30;
    if (v30)
    {
      v30 = 0;
      LODWORD(v31) = 0;
      WTF::fastFree(v15, v14);
    }
    v12 = v29;
    v16 = 10;
  }
  if (v12 != -1)
    ((void (*)(WTF **, WTF **, __n128))off_1E3249748[v12])(&v30, &v27, v11);
  return (_BYTE *)v16;
}

_BYTE *WebCore::jsCanvasRenderingContext2DPrototypeFunction_getLineDash(_BYTE *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  unsigned int v11;
  WebCore::InspectorInstrumentation *v12;
  WebCore::ScriptExecutionContext *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  WTF::StringImpl *v18;

  v3 = (uint64_t)this;
  v4 = *((_QWORD *)a2 + 5);
  v16 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v16, "CanvasRenderingContext2D", "getLineDash");
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCanvasRenderingContext2D::s_info && v7 != 0);
  }
  if (!v6)
    return WebCore::throwThisTypeError((int)this, (int)&v16, "CanvasRenderingContext2D", "getLineDash");
  v10 = *(_QWORD *)(v4 + 24);
  if (*(_BYTE *)(v10 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v17[0] = 0;
    v17[1] = 0;
    v12 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v10 + 32) + 144))(*(_QWORD *)(v10 + 32));
    if (v12)
    {
      v14 = WebCore::InspectorInstrumentation::instrumentingAgents(v12, v13);
      if (v14)
      {
        v15 = *(_QWORD *)(v14 + 96);
        if (v15)
          WebCore::InspectorCanvasAgent::recordAction(v15, (WebCore::CanvasRenderingContext *)v10, (const WTF::StringImpl *)&v18, v17);
      }
    }
    this = v18;
    v18 = 0;
    if (this)
    {
      if (*(_DWORD *)this == 2)
        this = (_BYTE *)WTF::StringImpl::destroy((WTF::StringImpl *)this, v13);
      else
        *(_DWORD *)this -= 2;
    }
  }
  v11 = *(_DWORD *)(v10 + 132);
  if (v11)
    return (_BYTE *)WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLUnrestrictedDouble>>::convert<double,0ul>(v3, *(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(v10 + 120) + 560 * v11 - 392);
  __break(0xC471u);
  return this;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_clearRect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, __n128 a4)
{
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  WebCore::InspectorCanvasCallTracer *v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  JSValue v26;
  WebCore::CanvasRenderingContext *v27;
  WebCore::CanvasRenderingContext *v28;
  WebCore::CanvasRenderingContext *v29;
  WebCore::CanvasRenderingContext *v30;
  WTF::StringImpl *v31;
  _DWORD *v32;
  _DWORD *v33;
  _DWORD *v34;
  _DWORD *v35;
  WTF::StringImpl *v36;
  JSC::VM *v37;
  _QWORD v38[2];
  WTF::StringImpl *v39;
  _QWORD v40[2];
  char v41;
  _DWORD *v42;
  char v43;
  _DWORD *v44;
  char v45;
  _DWORD *v46;
  char v47;
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v37 = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v37, "CanvasRenderingContext2D", "clearRect");
  v8 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v9 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v10 = (char **)(16 * v8);
  if ((_DWORD)v8)
    v11 = v10 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v11 = 1;
  if (!v11)
  {
    do
    {
      v10 = (char **)v10[2];
      v9 = v10 != 0;
    }
    while (v10 != &WebCore::JSCanvasRenderingContext2D::s_info && v10 != 0);
  }
  if (!v9)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v37, "CanvasRenderingContext2D", "clearRect");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v26.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v5, this, v26);
  }
  else
  {
    v12 = *(WebCore::InspectorCanvasCallTracer **)(v6 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v40[0] = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v40, this);
      v14 = a4.n128_f64[0];
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v40[0] = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v40, this);
        v17 = a4.n128_f64[0];
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = *((_QWORD *)a2 + 8);
        v40[0] = v18;
        v19 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v18 >= 0xFFFE000000000000)
        {
          v20 = (double)(int)v18;
        }
        else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v40, this);
          v20 = a4.n128_f64[0];
        }
        else
        {
          *(_QWORD *)&v20 = v18 - 0x2000000000000;
        }
        if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
        {
          return 0;
        }
        else
        {
          v21 = *((_QWORD *)a2 + 9);
          v40[0] = v21;
          v22 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v21 >= 0xFFFE000000000000)
          {
            v23 = (double)(int)v21;
          }
          else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v40, this);
            v23 = a4.n128_f64[0];
          }
          else
          {
            *(_QWORD *)&v23 = v21 - 0x2000000000000;
          }
          if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
          {
            return 0;
          }
          else
          {
            if (*((_BYTE *)v12 + 25))
            {
              WTF::StringImpl::createWithoutCopyingNonEmpty();
              WebCore::InspectorCanvasCallTracer::processArgument(v12, v27, v14, v40);
              WebCore::InspectorCanvasCallTracer::processArgument(v12, v28, v17, &v42);
              WebCore::InspectorCanvasCallTracer::processArgument(v12, v29, v20, &v44);
              WebCore::InspectorCanvasCallTracer::processArgument(v12, v30, v23, &v46);
              v38[0] = v40;
              v38[1] = 4;
              WebCore::InspectorCanvasCallTracer::recordAction(v12, (const WTF::StringImpl *)&v39, v38);
              if (v47)
              {
                v32 = v46;
                v46 = 0;
                if (v32)
                {
                  if (*v32 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v32;
                }
              }
              if (v45)
              {
                v33 = v44;
                v44 = 0;
                if (v33)
                {
                  if (*v33 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v33;
                }
              }
              if (v43)
              {
                v34 = v42;
                v42 = 0;
                if (v34)
                {
                  if (*v34 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v34;
                }
              }
              if (v41)
              {
                v35 = (_DWORD *)v40[0];
                v40[0] = 0;
                if (v35)
                {
                  if (*v35 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v35;
                }
              }
              v36 = v39;
              v39 = 0;
              if (v36)
              {
                if (*(_DWORD *)v36 == 2)
                  WTF::StringImpl::destroy(v36, v31);
                else
                  *(_DWORD *)v36 -= 2;
              }
            }
            a4.n128_f64[0] = v14;
            WebCore::CanvasRenderingContext2DBase::clearRect((float *)v12, a4, v17, v20, v23);
            return 10;
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_fillRect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, double *a5)
{
  JSC::VM *v6;
  uint64_t v7;
  uint64_t v9;
  BOOL v10;
  char **v11;
  BOOL v12;
  uint64_t v14;
  unint64_t v15;
  double v16;
  unint64_t v17;
  JSC::VM *v18;
  double v19;
  unint64_t v20;
  JSC::VM *v21;
  double v22;
  unint64_t v23;
  JSC::VM *v24;
  double v25;
  JSValue v27;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  WebCore::InspectorCanvasAgent *v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  WebCore::InspectorCanvasAgent *v35;
  WebCore::InspectorInstrumentation *v36;
  WebCore::ScriptExecutionContext *v37;
  uint64_t v38;
  WebCore::InspectorCanvasAgent *v39;
  WebCore::InspectorInstrumentation *v40;
  WebCore::ScriptExecutionContext *v41;
  uint64_t v42;
  WebCore::InspectorCanvasAgent *v43;
  WebCore::InspectorInstrumentation *v44;
  uint64_t v45;
  uint64_t v46;
  _DWORD *v47;
  _DWORD *v48;
  _DWORD *v49;
  _DWORD *v50;
  WTF::StringImpl *v51;
  double v52;
  double v53;
  double v54;
  double v55;
  JSC::VM *v56;
  _QWORD v57[2];
  WTF::StringImpl *v58;
  _QWORD v59[2];
  char v60;
  _DWORD *v61;
  char v62;
  _DWORD *v63;
  char v64;
  _DWORD *v65;
  char v66;
  uint64_t v67;

  v67 = *MEMORY[0x1E0C80C00];
  v6 = (JSC::VM *)*((_QWORD *)this + 7);
  v56 = v6;
  v7 = *((_QWORD *)a2 + 5);
  if ((v7 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v56, "CanvasRenderingContext2D", "fillRect");
  v9 = *(unsigned int *)(16 * (*(_DWORD *)v7 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)v7 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSCanvasRenderingContext2D::s_info && v11 != 0);
  }
  if (!v10)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v56, "CanvasRenderingContext2D", "fillRect");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v27.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v6, this, v27);
  }
  else
  {
    v14 = *(_QWORD *)(v7 + 24);
    v15 = *((_QWORD *)a2 + 6);
    v59[0] = v15;
    if (v15 >= 0xFFFE000000000000)
    {
      v16 = (double)(int)v15;
    }
    else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v59, this);
      v16 = v52;
    }
    else
    {
      *(_QWORD *)&v16 = v15 - 0x2000000000000;
    }
    if (*((_DWORD *)v6 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v6))
    {
      return 0;
    }
    else
    {
      v17 = *((_QWORD *)a2 + 7);
      v59[0] = v17;
      v18 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v17 >= 0xFFFE000000000000)
      {
        v19 = (double)(int)v17;
      }
      else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v59, this);
        v19 = v53;
      }
      else
      {
        *(_QWORD *)&v19 = v17 - 0x2000000000000;
      }
      if (*((_DWORD *)v18 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v18))
      {
        return 0;
      }
      else
      {
        v20 = *((_QWORD *)a2 + 8);
        v59[0] = v20;
        v21 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v20 >= 0xFFFE000000000000)
        {
          v22 = (double)(int)v20;
        }
        else if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v59, this);
          v22 = v54;
        }
        else
        {
          *(_QWORD *)&v22 = v20 - 0x2000000000000;
        }
        if (*((_DWORD *)v21 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v21))
        {
          return 0;
        }
        else
        {
          v23 = *((_QWORD *)a2 + 9);
          v59[0] = v23;
          v24 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v23 >= 0xFFFE000000000000)
          {
            v25 = (double)(int)v23;
          }
          else if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v59, this);
            v25 = v55;
          }
          else
          {
            *(_QWORD *)&v25 = v23 - 0x2000000000000;
          }
          if (*((_DWORD *)v24 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v24))
          {
            return 0;
          }
          else
          {
            if (*(_BYTE *)(v14 + 25))
            {
              WTF::StringImpl::createWithoutCopyingNonEmpty();
              v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v14 + 32)
                                                                                           + 144))(*(_QWORD *)(v14 + 32));
              if (v28
                && (v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29)) != 0
                && (v31 = *(WebCore::InspectorCanvasAgent **)(v30 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v31, (WebCore::CanvasRenderingContext *)v14, v16, (uint64_t)v59);
              }
              else
              {
                LOBYTE(v59[0]) = 0;
                v60 = 0;
              }
              v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v14 + 32)
                                                                                           + 144))(*(_QWORD *)(v14 + 32));
              if (v32
                && (v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33)) != 0
                && (v35 = *(WebCore::InspectorCanvasAgent **)(v34 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v35, (WebCore::CanvasRenderingContext *)v14, v19, (uint64_t)&v61);
              }
              else
              {
                LOBYTE(v61) = 0;
                v62 = 0;
              }
              v36 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v14 + 32)
                                                                                           + 144))(*(_QWORD *)(v14 + 32));
              if (v36
                && (v38 = WebCore::InspectorInstrumentation::instrumentingAgents(v36, v37)) != 0
                && (v39 = *(WebCore::InspectorCanvasAgent **)(v38 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v39, (WebCore::CanvasRenderingContext *)v14, v22, (uint64_t)&v63);
              }
              else
              {
                LOBYTE(v63) = 0;
                v64 = 0;
              }
              v40 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v14 + 32)
                                                                                           + 144))(*(_QWORD *)(v14 + 32));
              if (v40
                && (v42 = WebCore::InspectorInstrumentation::instrumentingAgents(v40, v41)) != 0
                && (v43 = *(WebCore::InspectorCanvasAgent **)(v42 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v43, (WebCore::CanvasRenderingContext *)v14, v25, (uint64_t)&v65);
              }
              else
              {
                LOBYTE(v65) = 0;
                v66 = 0;
              }
              v57[0] = v59;
              v57[1] = 4;
              v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v14 + 32)
                                                                                           + 144))(*(_QWORD *)(v14 + 32));
              if (v44)
              {
                v45 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, a2);
                if (v45)
                {
                  v46 = *(_QWORD *)(v45 + 96);
                  if (v46)
                    WebCore::InspectorCanvasAgent::recordAction(v46, (WebCore::CanvasRenderingContext *)v14, (const WTF::StringImpl *)&v58, v57);
                }
              }
              if (v66)
              {
                v47 = v65;
                v65 = 0;
                if (v47)
                {
                  if (*v47 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v47;
                }
              }
              if (v64)
              {
                v48 = v63;
                v63 = 0;
                if (v48)
                {
                  if (*v48 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v48;
                }
              }
              if (v62)
              {
                v49 = v61;
                v61 = 0;
                if (v49)
                {
                  if (*v49 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v49;
                }
              }
              if (v60)
              {
                v50 = (_DWORD *)v59[0];
                v59[0] = 0;
                if (v50)
                {
                  if (*v50 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v50;
                }
              }
              v51 = v58;
              v58 = 0;
              if (v51)
              {
                if (*(_DWORD *)v51 == 2)
                  WTF::StringImpl::destroy(v51, a2);
                else
                  *(_DWORD *)v51 -= 2;
              }
            }
            WebCore::CanvasRenderingContext2DBase::fillRect((uint64_t **)v14, v16, v19, v22, v25, (uint64_t)a2, (uint64_t)a3, a4, a5);
            return 10;
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_strokeRect(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, double *a5)
{
  JSC::VM *v6;
  uint64_t v7;
  uint64_t v9;
  BOOL v10;
  char **v11;
  BOOL v12;
  uint64_t v14;
  unint64_t v15;
  double v16;
  unint64_t v17;
  JSC::VM *v18;
  double v19;
  unint64_t v20;
  JSC::VM *v21;
  double v22;
  unint64_t v23;
  JSC::VM *v24;
  double v25;
  JSValue v27;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  WebCore::InspectorCanvasAgent *v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  WebCore::InspectorCanvasAgent *v35;
  WebCore::InspectorInstrumentation *v36;
  WebCore::ScriptExecutionContext *v37;
  uint64_t v38;
  WebCore::InspectorCanvasAgent *v39;
  WebCore::InspectorInstrumentation *v40;
  WebCore::ScriptExecutionContext *v41;
  uint64_t v42;
  WebCore::InspectorCanvasAgent *v43;
  WebCore::InspectorInstrumentation *v44;
  uint64_t v45;
  uint64_t v46;
  _DWORD *v47;
  _DWORD *v48;
  _DWORD *v49;
  _DWORD *v50;
  WTF::StringImpl *v51;
  double v52;
  double v53;
  double v54;
  double v55;
  JSC::VM *v56;
  _QWORD v57[2];
  WTF::StringImpl *v58;
  _QWORD v59[2];
  char v60;
  _DWORD *v61;
  char v62;
  _DWORD *v63;
  char v64;
  _DWORD *v65;
  char v66;
  uint64_t v67;

  v67 = *MEMORY[0x1E0C80C00];
  v6 = (JSC::VM *)*((_QWORD *)this + 7);
  v56 = v6;
  v7 = *((_QWORD *)a2 + 5);
  if ((v7 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v56, "CanvasRenderingContext2D", "strokeRect");
  v9 = *(unsigned int *)(16 * (*(_DWORD *)v7 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)v7 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSCanvasRenderingContext2D::s_info && v11 != 0);
  }
  if (!v10)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v56, "CanvasRenderingContext2D", "strokeRect");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 3)
  {
    v27.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v6, this, v27);
  }
  else
  {
    v14 = *(_QWORD *)(v7 + 24);
    v15 = *((_QWORD *)a2 + 6);
    v59[0] = v15;
    if (v15 >= 0xFFFE000000000000)
    {
      v16 = (double)(int)v15;
    }
    else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v59, this);
      v16 = v52;
    }
    else
    {
      *(_QWORD *)&v16 = v15 - 0x2000000000000;
    }
    if (*((_DWORD *)v6 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v6))
    {
      return 0;
    }
    else
    {
      v17 = *((_QWORD *)a2 + 7);
      v59[0] = v17;
      v18 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v17 >= 0xFFFE000000000000)
      {
        v19 = (double)(int)v17;
      }
      else if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v59, this);
        v19 = v53;
      }
      else
      {
        *(_QWORD *)&v19 = v17 - 0x2000000000000;
      }
      if (*((_DWORD *)v18 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v18))
      {
        return 0;
      }
      else
      {
        v20 = *((_QWORD *)a2 + 8);
        v59[0] = v20;
        v21 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v20 >= 0xFFFE000000000000)
        {
          v22 = (double)(int)v20;
        }
        else if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v59, this);
          v22 = v54;
        }
        else
        {
          *(_QWORD *)&v22 = v20 - 0x2000000000000;
        }
        if (*((_DWORD *)v21 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v21))
        {
          return 0;
        }
        else
        {
          v23 = *((_QWORD *)a2 + 9);
          v59[0] = v23;
          v24 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v23 >= 0xFFFE000000000000)
          {
            v25 = (double)(int)v23;
          }
          else if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v59, this);
            v25 = v55;
          }
          else
          {
            *(_QWORD *)&v25 = v23 - 0x2000000000000;
          }
          if (*((_DWORD *)v24 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v24))
          {
            return 0;
          }
          else
          {
            if (*(_BYTE *)(v14 + 25))
            {
              WTF::StringImpl::createWithoutCopyingNonEmpty();
              v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v14 + 32)
                                                                                           + 144))(*(_QWORD *)(v14 + 32));
              if (v28
                && (v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29)) != 0
                && (v31 = *(WebCore::InspectorCanvasAgent **)(v30 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v31, (WebCore::CanvasRenderingContext *)v14, v16, (uint64_t)v59);
              }
              else
              {
                LOBYTE(v59[0]) = 0;
                v60 = 0;
              }
              v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v14 + 32)
                                                                                           + 144))(*(_QWORD *)(v14 + 32));
              if (v32
                && (v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33)) != 0
                && (v35 = *(WebCore::InspectorCanvasAgent **)(v34 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v35, (WebCore::CanvasRenderingContext *)v14, v19, (uint64_t)&v61);
              }
              else
              {
                LOBYTE(v61) = 0;
                v62 = 0;
              }
              v36 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v14 + 32)
                                                                                           + 144))(*(_QWORD *)(v14 + 32));
              if (v36
                && (v38 = WebCore::InspectorInstrumentation::instrumentingAgents(v36, v37)) != 0
                && (v39 = *(WebCore::InspectorCanvasAgent **)(v38 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v39, (WebCore::CanvasRenderingContext *)v14, v22, (uint64_t)&v63);
              }
              else
              {
                LOBYTE(v63) = 0;
                v64 = 0;
              }
              v40 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v14 + 32)
                                                                                           + 144))(*(_QWORD *)(v14 + 32));
              if (v40
                && (v42 = WebCore::InspectorInstrumentation::instrumentingAgents(v40, v41)) != 0
                && (v43 = *(WebCore::InspectorCanvasAgent **)(v42 + 96)) != 0)
              {
                WebCore::InspectorCanvasAgent::processArgument(v43, (WebCore::CanvasRenderingContext *)v14, v25, (uint64_t)&v65);
              }
              else
              {
                LOBYTE(v65) = 0;
                v66 = 0;
              }
              v57[0] = v59;
              v57[1] = 4;
              v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v14 + 32)
                                                                                           + 144))(*(_QWORD *)(v14 + 32));
              if (v44)
              {
                v45 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, a2);
                if (v45)
                {
                  v46 = *(_QWORD *)(v45 + 96);
                  if (v46)
                    WebCore::InspectorCanvasAgent::recordAction(v46, (WebCore::CanvasRenderingContext *)v14, (const WTF::StringImpl *)&v58, v57);
                }
              }
              if (v66)
              {
                v47 = v65;
                v65 = 0;
                if (v47)
                {
                  if (*v47 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v47;
                }
              }
              if (v64)
              {
                v48 = v63;
                v63 = 0;
                if (v48)
                {
                  if (*v48 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v48;
                }
              }
              if (v62)
              {
                v49 = v61;
                v61 = 0;
                if (v49)
                {
                  if (*v49 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v49;
                }
              }
              if (v60)
              {
                v50 = (_DWORD *)v59[0];
                v59[0] = 0;
                if (v50)
                {
                  if (*v50 == 1)
                    WTF::JSONImpl::Value::operator delete();
                  else
                    --*v50;
                }
              }
              v51 = v58;
              v58 = 0;
              if (v51)
              {
                if (*(_DWORD *)v51 == 2)
                  WTF::StringImpl::destroy(v51, a2);
                else
                  *(_DWORD *)v51 -= 2;
              }
            }
            WebCore::CanvasRenderingContext2DBase::strokeRect((WebCore::CanvasRenderingContext2DBase *)v14, v16, v19, v22, v25, (uint64_t)a2, (uint64_t)a3, a4, a5);
            return 10;
          }
        }
      }
    }
  }
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_save(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v8;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  _QWORD v14[2];
  WTF::StringImpl *v15;

  v3 = *((_QWORD *)a2 + 5);
  v13 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v13, "CanvasRenderingContext2D", "save");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v13, "CanvasRenderingContext2D", "save");
  v8 = *(_QWORD *)(v3 + 24);
  if (*(_BYTE *)(v8 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v14[0] = 0;
    v14[1] = 0;
    WebCore::InspectorCanvasCallTracer::recordAction((WebCore::CanvasRenderingContext *)v8, (const WTF::StringImpl *)&v15, v14);
    v12 = v15;
    v15 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 2)
        WTF::StringImpl::destroy(v12, v11);
      else
        *(_DWORD *)v12 -= 2;
    }
  }
  ++*(_DWORD *)(v8 + 712);
  return 10;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_restore(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::CanvasRenderingContext *v8;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  _QWORD v14[2];
  WTF::StringImpl *v15;

  v3 = *((_QWORD *)a2 + 5);
  v13 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v13, "CanvasRenderingContext2D", "restore");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v13, "CanvasRenderingContext2D", "restore");
  v8 = *(WebCore::CanvasRenderingContext **)(v3 + 24);
  if (*((_BYTE *)v8 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v14[0] = 0;
    v14[1] = 0;
    WebCore::InspectorCanvasCallTracer::recordAction(v8, (const WTF::StringImpl *)&v15, v14);
    v12 = v15;
    v15 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 2)
        WTF::StringImpl::destroy(v12, v11);
      else
        *(_DWORD *)v12 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::restore((uint64_t)v8);
  return 10;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_reset(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  WebCore::InspectorInstrumentation *v11;
  uint64_t v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  _QWORD v16[2];
  WTF::StringImpl *v17;

  v3 = *((_QWORD *)a2 + 5);
  v15 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v15, "CanvasRenderingContext2D", "reset");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v15, "CanvasRenderingContext2D", "reset");
  v9 = *(_QWORD *)(v3 + 24);
  if (*(_BYTE *)(v9 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v16[0] = 0;
    v16[1] = 0;
    v11 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v9 + 32) + 144))(*(_QWORD *)(v9 + 32));
    if (v11)
    {
      v12 = WebCore::InspectorInstrumentation::instrumentingAgents(v11, a2);
      if (v12)
      {
        v13 = *(_QWORD *)(v12 + 96);
        if (v13)
          WebCore::InspectorCanvasAgent::recordAction(v13, (WebCore::CanvasRenderingContext *)v9, (const WTF::StringImpl *)&v17, v16);
      }
    }
    v14 = v17;
    v17 = 0;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, a2);
      else
        *(_DWORD *)v14 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::reset((WebCore::CanvasRenderingContext2DBase *)v9, a2);
  return 10;
}

_BYTE *WebCore::jsCanvasRenderingContext2DPrototypeFunction_fillText(WTF::StringImpl **this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  WTF::StringImpl **v3;
  JSC::VM *v4;
  uint64_t v5;
  JSC::JSGlobalObject *v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  int *v14;
  WTF::StringImpl *v15;
  JSC::VM *v16;
  double v17;
  WTF::StringImpl *v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  char v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  uint64_t v29;
  int v30;
  double v33;
  JSValue v35;
  WTF::StringImpl *v36;
  char v37;
  WTF::String *v38;
  WebCore::CanvasRenderingContext *v39;
  WebCore::CanvasRenderingContext *v40;
  WTF::StringImpl *v41;
  _DWORD *v42;
  _DWORD *v43;
  _DWORD *v44;
  WTF::StringImpl *v45;
  WTF::StringImpl *v46;
  double v47;
  double v48;
  char hasExceptionsAfterHandlingTraps;
  double v50;
  JSC::VM *v51;
  _QWORD v52[2];
  WTF::StringImpl *v53;
  int *v54;
  int v55;
  WTF::StringImpl *v56[2];
  char v57;
  _DWORD *v58;
  char v59;
  _DWORD *v60;
  char v61;
  _DWORD *v62;
  char v63;
  int *v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;

  v3 = this;
  v68 = *MEMORY[0x1E0C80C00];
  v4 = this[7];
  v51 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v51, "CanvasRenderingContext2D", "fillText");
  v6 = a2;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v51, "CanvasRenderingContext2D", "fillText");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v35.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, (JSC::JSGlobalObject *)v3, v35);
  }
  v11 = *(_QWORD *)(v5 + 24);
  v12 = *((_QWORD *)a2 + 6);
  v56[0] = (WTF::StringImpl *)v12;
  if ((v12 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v12 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v56, (JSC::JSGlobalObject *)this);
  }
  else
  {
    v13 = *(int **)(v12 + 8);
    if ((v13 & 1) != 0)
      v13 = *(int **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v12, (JSC::JSGlobalObject *)this);
    if (v13)
      *v13 += 2;
    v64 = v13;
  }
  if (!*((_DWORD *)v4 + 20))
  {
    v14 = v64;
LABEL_18:
    v54 = v14;
    v55 = 0;
    v15 = (WTF::StringImpl *)*((_QWORD *)v6 + 7);
    v56[0] = v15;
    v16 = v3[7];
    if ((unint64_t)v15 >= 0xFFFE000000000000)
    {
      v17 = (double)(int)v15;
    }
    else if ((unint64_t)v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v56, (JSC::JSGlobalObject *)v3);
      v17 = v47;
    }
    else
    {
      *(_QWORD *)&v17 = (char *)v15 - 0x2000000000000;
    }
    if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
    {
      v29 = 0;
      goto LABEL_38;
    }
    v18 = (WTF::StringImpl *)*((_QWORD *)v6 + 8);
    v56[0] = v18;
    v19 = v3[7];
    if ((unint64_t)v18 >= 0xFFFE000000000000)
    {
      v20 = (double)(int)v18;
    }
    else if ((unint64_t)v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v56, (JSC::JSGlobalObject *)v3);
      v20 = v48;
    }
    else
    {
      *(_QWORD *)&v20 = (char *)v18 - 0x2000000000000;
    }
    if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
    {
      v29 = 0;
      goto LABEL_38;
    }
    if ((unint64_t)(*((int *)v6 + 8) - 5) < 0xFFFFFFFFFFFFFFFCLL)
    {
      v21 = *((_QWORD *)v6 + 9);
      if (v21 != 10)
      {
        v56[0] = *((WTF::StringImpl **)v6 + 9);
        v6 = v3[7];
        if (v21 >= 0xFFFE000000000000)
        {
          v33 = (double)(int)v21;
          goto LABEL_54;
        }
        if (v21 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
        {
          *(_QWORD *)&v33 = v21 - 0x2000000000000;
          goto LABEL_54;
        }
        goto LABEL_101;
      }
    }
    v22 = 0;
    LOBYTE(v65) = 0;
    while (1)
    {
      LOBYTE(v66) = v22;
      v67 = 0;
      if (*(_BYTE *)(v11 + 25))
      {
        v3 = v56;
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v53 = v56[0];
        if (v55)
          goto LABEL_100;
        WebCore::InspectorCanvasCallTracer::processArgument((WebCore::InspectorCanvasCallTracer *)v11, &v54, v38, v56);
        WebCore::InspectorCanvasCallTracer::processArgument((WebCore::InspectorCanvasCallTracer *)v11, v39, v17, &v58);
        WebCore::InspectorCanvasCallTracer::processArgument((WebCore::InspectorCanvasCallTracer *)v11, v40, v20, &v60);
        if (v67)
          goto LABEL_100;
        v3 = v56;
        WebCore::InspectorCanvasCallTracer::processArgument((WTF::StringImpl *)v11, (uint64_t)&v65, &v62);
        v52[0] = v56;
        v52[1] = 4;
        WebCore::InspectorCanvasCallTracer::recordAction((WebCore::CanvasRenderingContext *)v11, (const WTF::StringImpl *)&v53, v52);
        if (v63)
        {
          v42 = v62;
          v62 = 0;
          if (v42)
          {
            if (*v42 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v42;
          }
        }
        if (v61)
        {
          v43 = v60;
          v60 = 0;
          if (v43)
          {
            if (*v43 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v43;
          }
        }
        if (v59)
        {
          v44 = v58;
          v58 = 0;
          if (v44)
          {
            if (*v44 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v44;
          }
        }
        if (v57)
        {
          v45 = v56[0];
          v56[0] = 0;
          if (v45)
          {
            if (*(_DWORD *)v45 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*(_DWORD *)v45;
          }
        }
        v46 = v53;
        v53 = 0;
        if (v46)
        {
          if (*(_DWORD *)v46 == 2)
            WTF::StringImpl::destroy(v46, v41);
          else
            *(_DWORD *)v46 -= 2;
        }
      }
      if (!v55)
      {
        v23 = (WTF::StringImpl *)v54;
        v54 = 0;
        v56[0] = v23;
        if (!v67)
        {
          v24 = v65;
          v25 = v66;
          v26 = *(_QWORD *)(v11 + 32);
          if (*(_QWORD *)(v26 + 64) != 0x7FFFFFFFFFFFFFFFLL)
            WTF::String::operator=((uint64_t *)(v26 + 40), v56);
          WebCore::CanvasRenderingContext2D::drawTextInternal(v11, (uint64_t *)v56, 1, v24, v25, v17, v20);
          v28 = v56[0];
          v56[0] = 0;
          if (v28)
          {
            if (*(_DWORD *)v28 == 2)
              WTF::StringImpl::destroy(v28, v27);
            else
              *(_DWORD *)v28 -= 2;
          }
          v29 = 10;
LABEL_38:
          v30 = v55;
LABEL_39:
          if (v30 != -1)
            goto LABEL_40;
          return (_BYTE *)v29;
        }
      }
LABEL_100:
      std::__throw_bad_variant_access[abi:sn180100]();
LABEL_101:
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v56, (JSC::JSGlobalObject *)v3);
LABEL_54:
      if (*((_DWORD *)v6 + 20))
      {
        v50 = v33;
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v6);
        v33 = v50;
        if ((hasExceptionsAfterHandlingTraps & 1) != 0)
        {
          v29 = 0;
          goto LABEL_38;
        }
      }
      v65 = *(_QWORD *)&v33;
      v22 = 1;
    }
  }
  v37 = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
  v14 = v64;
  if ((v37 & 1) == 0)
    goto LABEL_18;
  v55 = 1;
  v64 = 0;
  if (v14)
  {
    if (*v14 == 2)
    {
      WTF::StringImpl::destroy((WTF::StringImpl *)v14, v36);
      v30 = v55;
      v29 = 0;
      goto LABEL_39;
    }
    *v14 -= 2;
  }
  v29 = 0;
  v30 = 1;
LABEL_40:
  ((void (*)(WTF::StringImpl **, int **))off_1E3238AF8[v30])(v56, &v54);
  return (_BYTE *)v29;
}

_BYTE *WebCore::jsCanvasRenderingContext2DPrototypeFunction_strokeText(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  JSC::JSGlobalObject *v6;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  int *v15;
  WTF::StringImpl *v16;
  JSC::VM *v17;
  double v18;
  WTF::StringImpl *v19;
  JSC::VM *v20;
  double v21;
  unint64_t v22;
  char v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  uint64_t v27;
  int v28;
  double v30;
  JSValue v32;
  WTF::StringImpl *v33;
  char v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  WebCore::InspectorCanvasAgent *v38;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  WebCore::InspectorCanvasAgent *v42;
  WebCore::InspectorInstrumentation *v43;
  WebCore::ScriptExecutionContext *v44;
  uint64_t v45;
  WebCore::InspectorCanvasAgent *v46;
  WebCore::InspectorInstrumentation *v47;
  WebCore::ScriptExecutionContext *v48;
  uint64_t v49;
  uint64_t v50;
  WebCore::InspectorInstrumentation *v51;
  WebCore::ScriptExecutionContext *v52;
  uint64_t v53;
  uint64_t v54;
  _DWORD *v55;
  _DWORD *v56;
  _DWORD *v57;
  WTF::StringImpl *v58;
  WTF::StringImpl *v59;
  double v60;
  double v61;
  char hasExceptionsAfterHandlingTraps;
  double v63;
  JSC::VM *v64;
  _QWORD v65[2];
  WTF::StringImpl *v66;
  int *v67;
  int v68;
  WTF::StringImpl *v69[2];
  char v70;
  _DWORD *v71;
  char v72;
  _DWORD *v73;
  char v74;
  _DWORD *v75;
  char v76;
  int *v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;

  v81 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v64 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v64, "CanvasRenderingContext2D", "strokeText");
  v6 = a2;
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return WebCore::throwThisTypeError((int)this, (int)&v64, "CanvasRenderingContext2D", "strokeText");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 2)
  {
    v32.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v32);
  }
  v12 = *(_QWORD *)(v5 + 24);
  v13 = *((_QWORD *)a2 + 6);
  v69[0] = (WTF::StringImpl *)v13;
  if ((v13 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v13 + 5) == 2)
  {
    v14 = *(int **)(v13 + 8);
    if ((v14 & 1) != 0)
    {
      v14 = *(int **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v13, this);
      if (!v14)
        goto LABEL_18;
    }
    else if (!v14)
    {
LABEL_18:
      v77 = v14;
      goto LABEL_19;
    }
    *v14 += 2;
    goto LABEL_18;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v69, this);
LABEL_19:
  if (!*((_DWORD *)v4 + 20))
  {
    v15 = v77;
LABEL_21:
    v67 = v15;
    v68 = 0;
    v16 = (WTF::StringImpl *)*((_QWORD *)v6 + 7);
    v69[0] = v16;
    v17 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((unint64_t)v16 >= 0xFFFE000000000000)
    {
      v18 = (double)(int)v16;
    }
    else if ((unint64_t)v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v69, this);
      v18 = v60;
    }
    else
    {
      *(_QWORD *)&v18 = (char *)v16 - 0x2000000000000;
    }
    if (*((_DWORD *)v17 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v17))
    {
      v27 = 0;
      goto LABEL_39;
    }
    v19 = (WTF::StringImpl *)*((_QWORD *)v6 + 8);
    v69[0] = v19;
    v20 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((unint64_t)v19 >= 0xFFFE000000000000)
    {
      v21 = (double)(int)v19;
    }
    else if ((unint64_t)v19 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v69, this);
      v21 = v61;
    }
    else
    {
      *(_QWORD *)&v21 = (char *)v19 - 0x2000000000000;
    }
    if (*((_DWORD *)v20 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v20))
    {
      v27 = 0;
      goto LABEL_39;
    }
    if ((unint64_t)(*((int *)v6 + 8) - 5) < 0xFFFFFFFFFFFFFFFCLL)
    {
      v22 = *((_QWORD *)v6 + 9);
      if (v22 != 10)
      {
        v69[0] = *((WTF::StringImpl **)v6 + 9);
        v6 = (JSC::JSGlobalObject *)*((_QWORD *)this + 7);
        if (v22 >= 0xFFFE000000000000)
        {
          v30 = (double)(int)v22;
          goto LABEL_52;
        }
        if (v22 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
        {
          *(_QWORD *)&v30 = v22 - 0x2000000000000;
          goto LABEL_52;
        }
        goto LABEL_123;
      }
    }
    v23 = 0;
    LOBYTE(v78) = 0;
    while (1)
    {
      LOBYTE(v79) = v23;
      v80 = 0;
      if (*(_BYTE *)(v12 + 25))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v66 = v69[0];
        if (v68)
          goto LABEL_122;
        v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
        if (v35
          && (v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36)) != 0
          && (v38 = *(WebCore::InspectorCanvasAgent **)(v37 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v38, (WebCore::CanvasRenderingContext *)v12, &v67, (uint64_t)v69);
        }
        else
        {
          LOBYTE(v69[0]) = 0;
          v70 = 0;
        }
        v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
        if (v39
          && (v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40)) != 0
          && (v42 = *(WebCore::InspectorCanvasAgent **)(v41 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v42, (WebCore::CanvasRenderingContext *)v12, v18, (uint64_t)&v71);
        }
        else
        {
          LOBYTE(v71) = 0;
          v72 = 0;
        }
        v43 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
        if (v43
          && (v45 = WebCore::InspectorInstrumentation::instrumentingAgents(v43, v44)) != 0
          && (v46 = *(WebCore::InspectorCanvasAgent **)(v45 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v46, (WebCore::CanvasRenderingContext *)v12, v21, (uint64_t)&v73);
        }
        else
        {
          LOBYTE(v73) = 0;
          v74 = 0;
        }
        if (v80)
          goto LABEL_122;
        v47 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
        if (v47
          && (v49 = WebCore::InspectorInstrumentation::instrumentingAgents(v47, v48)) != 0
          && (v50 = *(_QWORD *)(v49 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v50, (WTF::StringImpl *)v12, (uint64_t)&v78, (uint64_t)&v75);
        }
        else
        {
          LOBYTE(v75) = 0;
          v76 = 0;
        }
        v65[0] = v69;
        v65[1] = 4;
        v51 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32) + 144))(*(_QWORD *)(v12 + 32));
        if (v51)
        {
          v53 = WebCore::InspectorInstrumentation::instrumentingAgents(v51, v52);
          if (v53)
          {
            v54 = *(_QWORD *)(v53 + 96);
            if (v54)
              WebCore::InspectorCanvasAgent::recordAction(v54, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v66, v65);
          }
        }
        if (v76)
        {
          v55 = v75;
          v75 = 0;
          if (v55)
          {
            if (*v55 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v55;
          }
        }
        if (v74)
        {
          v56 = v73;
          v73 = 0;
          if (v56)
          {
            if (*v56 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v56;
          }
        }
        if (v72)
        {
          v57 = v71;
          v71 = 0;
          if (v57)
          {
            if (*v57 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v57;
          }
        }
        if (v70)
        {
          v58 = v69[0];
          v69[0] = 0;
          if (v58)
          {
            if (*(_DWORD *)v58 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*(_DWORD *)v58;
          }
        }
        v59 = v66;
        v66 = 0;
        if (v59)
        {
          if (*(_DWORD *)v59 == 2)
            WTF::StringImpl::destroy(v59, v52);
          else
            *(_DWORD *)v59 -= 2;
        }
      }
      if (!v68)
      {
        v24 = (WTF::StringImpl *)v67;
        v67 = 0;
        v69[0] = v24;
        if (!v80)
        {
          WebCore::CanvasRenderingContext2D::drawTextInternal(v12, (uint64_t *)v69, 0, v78, v79, v18, v21);
          v26 = v69[0];
          v69[0] = 0;
          if (v26)
          {
            if (*(_DWORD *)v26 == 2)
              WTF::StringImpl::destroy(v26, v25);
            else
              *(_DWORD *)v26 -= 2;
          }
          v27 = 10;
LABEL_39:
          v28 = v68;
LABEL_40:
          if (v28 != -1)
            goto LABEL_41;
          return (_BYTE *)v27;
        }
      }
LABEL_122:
      std::__throw_bad_variant_access[abi:sn180100]();
LABEL_123:
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v69, this);
LABEL_52:
      if (*((_DWORD *)v6 + 20))
      {
        v63 = v30;
        hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v6);
        v30 = v63;
        if ((hasExceptionsAfterHandlingTraps & 1) != 0)
        {
          v27 = 0;
          goto LABEL_39;
        }
      }
      v78 = *(_QWORD *)&v30;
      v23 = 1;
    }
  }
  v34 = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
  v15 = v77;
  if ((v34 & 1) == 0)
    goto LABEL_21;
  v68 = 1;
  v77 = 0;
  if (v15)
  {
    if (*v15 == 2)
    {
      WTF::StringImpl::destroy((WTF::StringImpl *)v15, v33);
      v28 = v68;
      v27 = 0;
      goto LABEL_40;
    }
    *v15 -= 2;
  }
  v27 = 0;
  v28 = 1;
LABEL_41:
  ((void (*)(WTF::StringImpl **, int **))off_1E3238AF8[v28])(v69, &v67);
  return (_BYTE *)v27;
}

_BYTE *WebCore::jsCanvasRenderingContext2DPrototypeFunction_measureText(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::InspectorCanvasCallTracer *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  JSC::VM *v14;
  void *v15;
  unint64_t v16;
  WTF *v17;
  WTF::StringImpl *v18;
  int v19;
  JSValue v23;
  WTF::StringImpl *v24;
  int hasExceptionsAfterHandlingTraps;
  WTF::String *v26;
  WTF::StringImpl *v27;
  WTF *v28;
  WTF::StringImpl *v29;
  WebCore *v30;
  JSC::JSGlobalObject *v31;
  JSC::CallFrame *v32;
  JSC::VM *v33;
  WTF::StringImpl *v34[2];
  WTF::StringImpl *v35;
  WTF::StringImpl *v36;
  int v37;
  WTF *v38[2];
  char v39;
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v33 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v33, "CanvasRenderingContext2D", "measureText");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCanvasRenderingContext2D::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v33, "CanvasRenderingContext2D", "measureText");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v23.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return (_BYTE *)JSC::VM::throwException(v4, this, v23);
  }
  v10 = *(WebCore::InspectorCanvasCallTracer **)(v5 + 24);
  v11 = *((_QWORD *)a2 + 6);
  v38[0] = (WTF *)v11;
  if ((v11 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v11 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v38, this);
  }
  else
  {
    v12 = *(WTF::StringImpl **)(v11 + 8);
    if ((v12 & 1) != 0)
      v12 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v11, this);
    if (v12)
      *(_DWORD *)v12 += 2;
    v34[0] = v12;
  }
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v13 = v34[0];
    if (hasExceptionsAfterHandlingTraps)
    {
      v37 = 1;
      v34[0] = 0;
      if (v13)
      {
        if (*(_DWORD *)v13 == 2)
          WTF::StringImpl::destroy(v13, v24);
        else
          *(_DWORD *)v13 -= 2;
      }
      v16 = 0;
      v19 = 1;
LABEL_27:
      ((void (*)(WTF **, WTF::StringImpl **))off_1E3238AF8[v19])(v38, &v36);
      return (_BYTE *)v16;
    }
  }
  else
  {
    v13 = v34[0];
  }
  v36 = v13;
  v37 = 0;
  if (!*((_BYTE *)v10 + 25))
  {
    v14 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
    goto LABEL_20;
  }
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  WebCore::InspectorCanvasCallTracer::processArgument(v10, (int **)&v36, v26, v38);
  v34[0] = (WTF::StringImpl *)v38;
  v34[1] = (WTF::StringImpl *)1;
  WebCore::InspectorCanvasCallTracer::recordAction(v10, (const WTF::StringImpl *)&v35, v34);
  if (v39)
  {
    v28 = v38[0];
    v38[0] = 0;
    if (v28)
    {
      if (*(_DWORD *)v28 == 1)
        WTF::JSONImpl::Value::operator delete();
      else
        --*(_DWORD *)v28;
    }
  }
  v29 = v35;
  v35 = 0;
  if (v29)
  {
    if (*(_DWORD *)v29 == 2)
      WTF::StringImpl::destroy(v29, v27);
    else
      *(_DWORD *)v29 -= 2;
  }
  if (!v37)
  {
    v14 = *(JSC::VM **)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x28);
    v13 = v36;
LABEL_20:
    v36 = 0;
    v34[0] = v13;
    WebCore::CanvasRenderingContext2D::measureText(v10, (const WTF::String *)v34, (uint64_t *)v38);
    v16 = WebCore::wrap<WebCore::TextMetrics>((int)this, v14, v38[0]);
    v17 = v38[0];
    v38[0] = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 1)
        WTF::fastFree(v17, v15);
      else
        --*(_DWORD *)v17;
    }
    v18 = v34[0];
    v34[0] = 0;
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, (WTF::StringImpl *)v15);
      else
        *(_DWORD *)v18 -= 2;
    }
    v19 = v37;
    if (v37 == -1)
      return (_BYTE *)v16;
    goto LABEL_27;
  }
  v30 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return (_BYTE *)WebCore::jsCanvasRenderingContext2DPrototypeFunction_scale(v30, v31, v32);
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_scale(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::InspectorCanvasCallTracer *v11;
  unint64_t v12;
  double v13;
  unint64_t v14;
  JSC::VM *v15;
  double v16;
  JSValue v19;
  WebCore::CanvasRenderingContext *v20;
  WebCore::CanvasRenderingContext *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  double v24;
  double v25;
  JSC::VM *v26;
  _QWORD v27[2];
  WTF::StringImpl *v28;
  _QWORD v29[3];
  _BYTE v30[24];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "CanvasRenderingContext2D", "scale");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "CanvasRenderingContext2D", "scale");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v19);
  }
  else
  {
    v11 = *(WebCore::InspectorCanvasCallTracer **)(v5 + 24);
    v12 = *((_QWORD *)a2 + 6);
    v29[0] = v12;
    if (v12 >= 0xFFFE000000000000)
    {
      v13 = (double)(int)v12;
    }
    else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v29, this);
      v13 = v24;
    }
    else
    {
      *(_QWORD *)&v13 = v12 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v14 = *((_QWORD *)a2 + 7);
      v29[0] = v14;
      v15 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v14 >= 0xFFFE000000000000)
      {
        v16 = (double)(int)v14;
      }
      else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v29, this);
        v16 = v25;
      }
      else
      {
        *(_QWORD *)&v16 = v14 - 0x2000000000000;
      }
      if (*((_DWORD *)v15 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v15))
      {
        return 0;
      }
      else
      {
        if (*((_BYTE *)v11 + 25))
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          WebCore::InspectorCanvasCallTracer::processArgument(v11, v20, v13, v29);
          WebCore::InspectorCanvasCallTracer::processArgument(v11, v21, v16, v30);
          v27[0] = v29;
          v27[1] = 2;
          WebCore::InspectorCanvasCallTracer::recordAction(v11, (const WTF::StringImpl *)&v28, v27);
          std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v30);
          std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v29);
          v23 = v28;
          v28 = 0;
          if (v23)
          {
            if (*(_DWORD *)v23 == 2)
              WTF::StringImpl::destroy(v23, v22);
            else
              *(_DWORD *)v23 -= 2;
          }
        }
        WebCore::CanvasRenderingContext2DBase::scale(v11, v13, v16);
        return 10;
      }
    }
  }
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_rotate(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::InspectorCanvasCallTracer *v10;
  unint64_t v11;
  double v12;
  JSValue v15;
  WebCore::CanvasRenderingContext *v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  double v19;
  JSC::VM *v20;
  _QWORD v21[2];
  WTF::StringImpl *v22;
  _QWORD v23[4];

  v23[3] = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v20 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "CanvasRenderingContext2D", "rotate");
  v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCanvasRenderingContext2D::s_info && v8 != 0);
  }
  if (!v7)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v20, "CanvasRenderingContext2D", "rotate");
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v15.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v15);
  }
  else
  {
    v10 = *(WebCore::InspectorCanvasCallTracer **)(v5 + 24);
    v11 = *((_QWORD *)a2 + 6);
    v23[0] = v11;
    if (v11 >= 0xFFFE000000000000)
    {
      v12 = (double)(int)v11;
    }
    else if (v11 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v23, this);
      v12 = v19;
    }
    else
    {
      *(_QWORD *)&v12 = v11 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      if (*((_BYTE *)v10 + 25))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        WebCore::InspectorCanvasCallTracer::processArgument(v10, v16, v12, v23);
        v21[0] = v23;
        v21[1] = 1;
        WebCore::InspectorCanvasCallTracer::recordAction(v10, (const WTF::StringImpl *)&v22, v21);
        std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v23);
        v18 = v22;
        v22 = 0;
        if (v18)
        {
          if (*(_DWORD *)v18 == 2)
            WTF::StringImpl::destroy(v18, v17);
          else
            *(_DWORD *)v18 -= 2;
        }
      }
      WebCore::CanvasRenderingContext2DBase::rotate(v10, v12);
      return 10;
    }
  }
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_translate(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  WebCore::InspectorCanvasCallTracer *v11;
  unint64_t v12;
  double v13;
  unint64_t v14;
  JSC::VM *v15;
  double v16;
  JSValue v19;
  WebCore::CanvasRenderingContext *v20;
  WebCore::CanvasRenderingContext *v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  double v24;
  double v25;
  JSC::VM *v26;
  _QWORD v27[2];
  WTF::StringImpl *v28;
  _QWORD v29[3];
  _BYTE v30[24];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v26 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "CanvasRenderingContext2D", "translate");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v26, "CanvasRenderingContext2D", "translate");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 1)
  {
    v19.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v19);
  }
  else
  {
    v11 = *(WebCore::InspectorCanvasCallTracer **)(v5 + 24);
    v12 = *((_QWORD *)a2 + 6);
    v29[0] = v12;
    if (v12 >= 0xFFFE000000000000)
    {
      v13 = (double)(int)v12;
    }
    else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v29, this);
      v13 = v24;
    }
    else
    {
      *(_QWORD *)&v13 = v12 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v14 = *((_QWORD *)a2 + 7);
      v29[0] = v14;
      v15 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v14 >= 0xFFFE000000000000)
      {
        v16 = (double)(int)v14;
      }
      else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v29, this);
        v16 = v25;
      }
      else
      {
        *(_QWORD *)&v16 = v14 - 0x2000000000000;
      }
      if (*((_DWORD *)v15 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v15))
      {
        return 0;
      }
      else
      {
        if (*((_BYTE *)v11 + 25))
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          WebCore::InspectorCanvasCallTracer::processArgument(v11, v20, v13, v29);
          WebCore::InspectorCanvasCallTracer::processArgument(v11, v21, v16, v30);
          v27[0] = v29;
          v27[1] = 2;
          WebCore::InspectorCanvasCallTracer::recordAction(v11, (const WTF::StringImpl *)&v28, v27);
          std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v30);
          std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v29);
          v23 = v28;
          v28 = 0;
          if (v23)
          {
            if (*(_DWORD *)v23 == 2)
              WTF::StringImpl::destroy(v23, v22);
            else
              *(_DWORD *)v23 -= 2;
          }
        }
        WebCore::CanvasRenderingContext2DBase::translate(v11, v13, v16);
        return 10;
      }
    }
  }
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_transform(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  char **v9;
  BOOL v10;
  uint64_t v12;
  unint64_t v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  unint64_t v27;
  JSC::VM *v28;
  double v29;
  JSValue v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  WebCore::InspectorCanvasAgent *v35;
  WebCore::InspectorInstrumentation *v36;
  WebCore::ScriptExecutionContext *v37;
  uint64_t v38;
  WebCore::InspectorCanvasAgent *v39;
  WebCore::InspectorInstrumentation *v40;
  WebCore::ScriptExecutionContext *v41;
  uint64_t v42;
  WebCore::InspectorCanvasAgent *v43;
  WebCore::InspectorInstrumentation *v44;
  WebCore::ScriptExecutionContext *v45;
  uint64_t v46;
  WebCore::InspectorCanvasAgent *v47;
  WebCore::InspectorInstrumentation *v48;
  WebCore::ScriptExecutionContext *v49;
  uint64_t v50;
  WebCore::InspectorCanvasAgent *v51;
  WebCore::InspectorInstrumentation *v52;
  WebCore::ScriptExecutionContext *v53;
  uint64_t v54;
  WebCore::InspectorCanvasAgent *v55;
  WebCore::InspectorInstrumentation *v56;
  WebCore::ScriptExecutionContext *v57;
  uint64_t v58;
  uint64_t v59;
  _DWORD *v60;
  _DWORD *v61;
  _DWORD *v62;
  _DWORD *v63;
  _DWORD *v64;
  _DWORD *v65;
  WTF::StringImpl *v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  JSC::VM *v73;
  _QWORD v74[2];
  WTF::StringImpl *v75;
  _QWORD v76[2];
  char v77;
  _DWORD *v78;
  char v79;
  _DWORD *v80;
  char v81;
  _DWORD *v82;
  char v83;
  _DWORD *v84;
  char v85;
  _DWORD *v86;
  char v87;
  uint64_t v88;

  v88 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)this + 7);
  v73 = v4;
  v5 = *((_QWORD *)a2 + 5);
  if ((v5 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v73, "CanvasRenderingContext2D", "transform");
  v7 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
  v8 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
  v9 = (char **)(16 * v7);
  if ((_DWORD)v7)
    v10 = v9 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v10 = 1;
  if (!v10)
  {
    do
    {
      v9 = (char **)v9[2];
      v8 = v9 != 0;
    }
    while (v9 != &WebCore::JSCanvasRenderingContext2D::s_info && v9 != 0);
  }
  if (!v8)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v73, "CanvasRenderingContext2D", "transform");
  if ((unint64_t)(*((int *)a2 + 8) - 1) <= 5)
  {
    v31.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v4, this, v31);
  }
  else
  {
    v12 = *(_QWORD *)(v5 + 24);
    v13 = *((_QWORD *)a2 + 6);
    v76[0] = v13;
    if (v13 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v13;
    }
    else if (v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v76, this);
      v14 = v67;
    }
    else
    {
      *(_QWORD *)&v14 = v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v4 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v4))
    {
      return 0;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 7);
      v76[0] = v15;
      v16 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v15 >= 0xFFFE000000000000)
      {
        v17 = (double)(int)v15;
      }
      else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v76, this);
        v17 = v68;
      }
      else
      {
        *(_QWORD *)&v17 = v15 - 0x2000000000000;
      }
      if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
      {
        return 0;
      }
      else
      {
        v18 = *((_QWORD *)a2 + 8);
        v76[0] = v18;
        v19 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v18 >= 0xFFFE000000000000)
        {
          v20 = (double)(int)v18;
        }
        else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v76, this);
          v20 = v69;
        }
        else
        {
          *(_QWORD *)&v20 = v18 - 0x2000000000000;
        }
        if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
        {
          return 0;
        }
        else
        {
          v21 = *((_QWORD *)a2 + 9);
          v76[0] = v21;
          v22 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v21 >= 0xFFFE000000000000)
          {
            v23 = (double)(int)v21;
          }
          else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v76, this);
            v23 = v70;
          }
          else
          {
            *(_QWORD *)&v23 = v21 - 0x2000000000000;
          }
          if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
          {
            return 0;
          }
          else
          {
            v24 = *((_QWORD *)a2 + 10);
            v76[0] = v24;
            v25 = (JSC::VM *)*((_QWORD *)this + 7);
            if (v24 >= 0xFFFE000000000000)
            {
              v26 = (double)(int)v24;
            }
            else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v76, this);
              v26 = v71;
            }
            else
            {
              *(_QWORD *)&v26 = v24 - 0x2000000000000;
            }
            if (*((_DWORD *)v25 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v25))
            {
              return 0;
            }
            else
            {
              v27 = *((_QWORD *)a2 + 11);
              v76[0] = v27;
              v28 = (JSC::VM *)*((_QWORD *)this + 7);
              if (v27 >= 0xFFFE000000000000)
              {
                v29 = (double)(int)v27;
              }
              else if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
              {
                JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v76, this);
                v29 = v72;
              }
              else
              {
                *(_QWORD *)&v29 = v27 - 0x2000000000000;
              }
              if (*((_DWORD *)v28 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v28))
              {
                return 0;
              }
              else
              {
                if (*(_BYTE *)(v12 + 25))
                {
                  WTF::StringImpl::createWithoutCopyingNonEmpty();
                  v75 = (WTF::StringImpl *)v76[0];
                  v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                               + 144))(*(_QWORD *)(v12 + 32));
                  if (v32
                    && (v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33)) != 0
                    && (v35 = *(WebCore::InspectorCanvasAgent **)(v34 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v35, (WebCore::CanvasRenderingContext *)v12, v14, (uint64_t)v76);
                  }
                  else
                  {
                    LOBYTE(v76[0]) = 0;
                    v77 = 0;
                  }
                  v36 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                               + 144))(*(_QWORD *)(v12 + 32));
                  if (v36
                    && (v38 = WebCore::InspectorInstrumentation::instrumentingAgents(v36, v37)) != 0
                    && (v39 = *(WebCore::InspectorCanvasAgent **)(v38 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v39, (WebCore::CanvasRenderingContext *)v12, v17, (uint64_t)&v78);
                  }
                  else
                  {
                    LOBYTE(v78) = 0;
                    v79 = 0;
                  }
                  v40 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                               + 144))(*(_QWORD *)(v12 + 32));
                  if (v40
                    && (v42 = WebCore::InspectorInstrumentation::instrumentingAgents(v40, v41)) != 0
                    && (v43 = *(WebCore::InspectorCanvasAgent **)(v42 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v43, (WebCore::CanvasRenderingContext *)v12, v20, (uint64_t)&v80);
                  }
                  else
                  {
                    LOBYTE(v80) = 0;
                    v81 = 0;
                  }
                  v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                               + 144))(*(_QWORD *)(v12 + 32));
                  if (v44
                    && (v46 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, v45)) != 0
                    && (v47 = *(WebCore::InspectorCanvasAgent **)(v46 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v47, (WebCore::CanvasRenderingContext *)v12, v23, (uint64_t)&v82);
                  }
                  else
                  {
                    LOBYTE(v82) = 0;
                    v83 = 0;
                  }
                  v48 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                               + 144))(*(_QWORD *)(v12 + 32));
                  if (v48
                    && (v50 = WebCore::InspectorInstrumentation::instrumentingAgents(v48, v49)) != 0
                    && (v51 = *(WebCore::InspectorCanvasAgent **)(v50 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v51, (WebCore::CanvasRenderingContext *)v12, v26, (uint64_t)&v84);
                  }
                  else
                  {
                    LOBYTE(v84) = 0;
                    v85 = 0;
                  }
                  v52 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                               + 144))(*(_QWORD *)(v12 + 32));
                  if (v52
                    && (v54 = WebCore::InspectorInstrumentation::instrumentingAgents(v52, v53)) != 0
                    && (v55 = *(WebCore::InspectorCanvasAgent **)(v54 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v55, (WebCore::CanvasRenderingContext *)v12, v29, (uint64_t)&v86);
                  }
                  else
                  {
                    LOBYTE(v86) = 0;
                    v87 = 0;
                  }
                  v74[0] = v76;
                  v74[1] = 6;
                  v56 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v12 + 32)
                                                                                               + 144))(*(_QWORD *)(v12 + 32));
                  if (v56)
                  {
                    v58 = WebCore::InspectorInstrumentation::instrumentingAgents(v56, v57);
                    if (v58)
                    {
                      v59 = *(_QWORD *)(v58 + 96);
                      if (v59)
                        WebCore::InspectorCanvasAgent::recordAction(v59, (WebCore::CanvasRenderingContext *)v12, (const WTF::StringImpl *)&v75, v74);
                    }
                  }
                  if (v87)
                  {
                    v60 = v86;
                    v86 = 0;
                    if (v60)
                    {
                      if (*v60 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v60;
                    }
                  }
                  if (v85)
                  {
                    v61 = v84;
                    v84 = 0;
                    if (v61)
                    {
                      if (*v61 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v61;
                    }
                  }
                  if (v83)
                  {
                    v62 = v82;
                    v82 = 0;
                    if (v62)
                    {
                      if (*v62 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v62;
                    }
                  }
                  if (v81)
                  {
                    v63 = v80;
                    v80 = 0;
                    if (v63)
                    {
                      if (*v63 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v63;
                    }
                  }
                  if (v79)
                  {
                    v64 = v78;
                    v78 = 0;
                    if (v64)
                    {
                      if (*v64 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v64;
                    }
                  }
                  if (v77)
                  {
                    v65 = (_DWORD *)v76[0];
                    v76[0] = 0;
                    if (v65)
                    {
                      if (*v65 == 1)
                        WTF::JSONImpl::Value::operator delete();
                      else
                        --*v65;
                    }
                  }
                  v66 = v75;
                  v75 = 0;
                  if (v66)
                  {
                    if (*(_DWORD *)v66 == 2)
                      WTF::StringImpl::destroy(v66, v57);
                    else
                      *(_DWORD *)v66 -= 2;
                  }
                }
                WebCore::CanvasRenderingContext2DBase::transform((WebCore::CanvasRenderingContext2DBase *)v12, v14, v17, v20, v23, v26, v29);
                return 10;
              }
            }
          }
        }
      }
    }
  }
}

_BYTE *WebCore::jsCanvasRenderingContext2DPrototypeFunction_getTransform(_BYTE *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  uint64_t v11;
  unsigned int v12;
  JSC::VM *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  bmalloc::api *v23;
  WebCore::InspectorInstrumentation *v24;
  WebCore::ScriptExecutionContext *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  bmalloc::api *v29[2];
  WTF::StringImpl *v30;

  v3 = (int)this;
  v4 = *((_QWORD *)a2 + 5);
  v28 = *((_QWORD *)this + 7);
  if ((v4 & 0xFFFE000000000002) != 0)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "CanvasRenderingContext2D", "getTransform");
  v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  v6 = *(unsigned int *)(v5 + 0x4C);
  v7 = *(_DWORD *)(v5 + 0x4C) != 0;
  v8 = (char **)(16 * v6);
  if ((_DWORD)v6)
    v9 = v8 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v9 = 1;
  if (!v9)
  {
    do
    {
      v8 = (char **)v8[2];
      v7 = v8 != 0;
    }
    while (v8 != &WebCore::JSCanvasRenderingContext2D::s_info && v8 != 0);
  }
  if (!v7)
    return WebCore::throwThisTypeError((int)this, (int)&v28, "CanvasRenderingContext2D", "getTransform");
  v11 = *(_QWORD *)(v4 + 24);
  if (*(_BYTE *)(v11 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v29[0] = 0;
    v29[1] = 0;
    v24 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 32) + 144))(*(_QWORD *)(v11 + 32));
    if (v24)
    {
      v26 = WebCore::InspectorInstrumentation::instrumentingAgents(v24, v25);
      if (v26)
      {
        v27 = *(_QWORD *)(v26 + 96);
        if (v27)
          WebCore::InspectorCanvasAgent::recordAction(v27, (WebCore::CanvasRenderingContext *)v11, (const WTF::StringImpl *)&v30, v29);
      }
    }
    this = v30;
    v30 = 0;
    if (this)
    {
      if (*(_DWORD *)this == 2)
        this = (_BYTE *)WTF::StringImpl::destroy((WTF::StringImpl *)this, v25);
      else
        *(_DWORD *)this -= 2;
    }
    v5 = 16 * (*(_DWORD *)v4 & 0xFFFFFFFE);
  }
  v12 = *(_DWORD *)(v11 + 132);
  if (v12)
  {
    v13 = *(JSC::VM **)(v5 + 40);
    v14 = *(_QWORD *)(*(_QWORD *)(v11 + 120) + 560 * v12 - 448);
    v15 = *(_QWORD *)(*(_QWORD *)(v11 + 120) + 560 * v12 - 440);
    v16 = *(_QWORD *)(*(_QWORD *)(v11 + 120) + 560 * v12 - 432);
    v17 = *(_QWORD *)(*(_QWORD *)(v11 + 120) + 560 * v12 - 424);
    v18 = *(_QWORD *)(*(_QWORD *)(v11 + 120) + 560 * v12 - 416);
    v19 = *(_QWORD *)(*(_QWORD *)(v11 + 120) + 560 * v12 - 408);
    v20 = bmalloc::api::isoAllocate();
    *(_QWORD *)v20 = 0;
    *(_DWORD *)(v20 + 8) = 1;
    *(_QWORD *)(v20 + 16) = v14;
    *(_QWORD *)(v20 + 24) = v15;
    *(_QWORD *)(v20 + 32) = 0;
    *(_QWORD *)(v20 + 40) = 0;
    *(_QWORD *)(v20 + 48) = v16;
    *(_QWORD *)(v20 + 56) = v17;
    *(_QWORD *)(v20 + 64) = 0;
    *(_QWORD *)(v20 + 72) = 0;
    *(_OWORD *)(v20 + 80) = constinit_13;
    *(_OWORD *)(v20 + 96) = unk_1969F8D70;
    *(_QWORD *)(v20 + 112) = v18;
    *(_QWORD *)(v20 + 120) = v19;
    *(_OWORD *)(v20 + 128) = xmmword_1968A14C0;
    *(_BYTE *)(v20 + 144) = 1;
    v29[0] = (bmalloc::api *)v20;
    v22 = WebCore::toJSNewlyCreated(v3, v13, (WebCore::JSDOMGlobalObject *)v29);
    v23 = v29[0];
    v29[0] = 0;
    if (v23)
    {
      if (*((_DWORD *)v23 + 2) == 1)
      {
        if (*(_QWORD *)v23)
        {
          *(_QWORD *)(*(_QWORD *)v23 + 8) = 3;
          *(_QWORD *)v23 = 0;
        }
        bmalloc::api::isoDeallocate(v23, v21);
      }
      else
      {
        --*((_DWORD *)v23 + 2);
      }
    }
    return (_BYTE *)v22;
  }
  __break(0xC471u);
  return this;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_setTransform(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4)
{
  JSC::VM *v5;
  uint64_t v6;
  uint64_t v8;
  BOOL v9;
  char **v10;
  BOOL v11;
  unint64_t v12;
  WebCore::InspectorCanvasCallTracer *v13;
  unint64_t v14;
  double v15;
  unint64_t v16;
  JSC::VM *v17;
  double v18;
  unint64_t v19;
  JSC::VM *v20;
  double v21;
  unint64_t v22;
  JSC::VM *v23;
  double v24;
  unint64_t v25;
  JSC::VM *v26;
  double v27;
  unint64_t v28;
  JSC::VM *v29;
  double v30;
  WebCore::CanvasRenderingContext *v33;
  WebCore::CanvasRenderingContext *v34;
  WebCore::CanvasRenderingContext *v35;
  WebCore::CanvasRenderingContext *v36;
  WebCore::CanvasRenderingContext *v37;
  WebCore::CanvasRenderingContext *v38;
  WTF::StringImpl *v39;
  WTF::StringImpl *v40;
  JSC::VM *v41;
  double v42;
  JSC::VM *v43;
  double v44;
  JSC::VM *v45;
  double v46;
  JSC::VM *v47;
  double v48;
  JSC::VM *v49;
  double v50;
  double v51;
  _QWORD v52[2];
  _QWORD v53[2];
  WTF::StringImpl *v54;
  _QWORD v55[3];
  _BYTE v56[24];
  _BYTE v57[24];
  _BYTE v58[24];
  _BYTE v59[24];
  _BYTE v60[24];
  uint64_t v61;

  v61 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v52[0] = v5;
  v6 = *((_QWORD *)a2 + 5);
  if ((v6 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v52, "CanvasRenderingContext2D", "setTransform");
  v8 = *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C);
  v9 = *(_DWORD *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) != 0;
  v10 = (char **)(16 * v8);
  if ((_DWORD)v8)
    v11 = v10 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v11 = 1;
  if (!v11)
  {
    do
    {
      v10 = (char **)v10[2];
      v9 = v10 != 0;
    }
    while (v10 != &WebCore::JSCanvasRenderingContext2D::s_info && v10 != 0);
  }
  if (!v9)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v52, "CanvasRenderingContext2D", "setTransform");
  v52[1] = v5;
  v12 = *((int *)a2 + 8) - 1;
  if (v12 >= 6)
    v12 = 6;
  if (v12 == 6)
  {
    v13 = *(WebCore::InspectorCanvasCallTracer **)(v6 + 24);
    v14 = *((_QWORD *)a2 + 6);
    v55[0] = v14;
    if (v14 >= 0xFFFE000000000000)
    {
      v15 = (double)(int)v14;
    }
    else if (v14 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v41 = v5;
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v55, this);
      v5 = v41;
      v15 = v42;
    }
    else
    {
      *(_QWORD *)&v15 = v14 - 0x2000000000000;
    }
    if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
    {
      return 0;
    }
    else
    {
      v16 = *((_QWORD *)a2 + 7);
      v55[0] = v16;
      v17 = (JSC::VM *)*((_QWORD *)this + 7);
      if (v16 >= 0xFFFE000000000000)
      {
        v18 = (double)(int)v16;
      }
      else if (v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        v43 = (JSC::VM *)*((_QWORD *)this + 7);
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v55, this);
        v17 = v43;
        v18 = v44;
      }
      else
      {
        *(_QWORD *)&v18 = v16 - 0x2000000000000;
      }
      if (*((_DWORD *)v17 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v17))
      {
        return 0;
      }
      else
      {
        v19 = *((_QWORD *)a2 + 8);
        v55[0] = v19;
        v20 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v19 >= 0xFFFE000000000000)
        {
          v21 = (double)(int)v19;
        }
        else if (v19 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          v45 = (JSC::VM *)*((_QWORD *)this + 7);
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v55, this);
          v20 = v45;
          v21 = v46;
        }
        else
        {
          *(_QWORD *)&v21 = v19 - 0x2000000000000;
        }
        if (*((_DWORD *)v20 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v20))
        {
          return 0;
        }
        else
        {
          v22 = *((_QWORD *)a2 + 9);
          v55[0] = v22;
          v23 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v22 >= 0xFFFE000000000000)
          {
            v24 = (double)(int)v22;
          }
          else if (v22 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            v47 = (JSC::VM *)*((_QWORD *)this + 7);
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v55, this);
            v23 = v47;
            v24 = v48;
          }
          else
          {
            *(_QWORD *)&v24 = v22 - 0x2000000000000;
          }
          if (*((_DWORD *)v23 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v23))
          {
            return 0;
          }
          else
          {
            v25 = *((_QWORD *)a2 + 10);
            v55[0] = v25;
            v26 = (JSC::VM *)*((_QWORD *)this + 7);
            if (v25 >= 0xFFFE000000000000)
            {
              v27 = (double)(int)v25;
            }
            else if (v25 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              v49 = (JSC::VM *)*((_QWORD *)this + 7);
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v55, this);
              v26 = v49;
              v27 = v50;
            }
            else
            {
              *(_QWORD *)&v27 = v25 - 0x2000000000000;
            }
            if (*((_DWORD *)v26 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v26))
            {
              return 0;
            }
            else
            {
              v28 = *((_QWORD *)a2 + 11);
              v55[0] = v28;
              v29 = (JSC::VM *)*((_QWORD *)this + 7);
              if (v28 >= 0xFFFE000000000000)
              {
                v30 = (double)(int)v28;
              }
              else if (v28 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
              {
                JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v55, this);
                v30 = v51;
              }
              else
              {
                *(_QWORD *)&v30 = v28 - 0x2000000000000;
              }
              if (*((_DWORD *)v29 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v29))
              {
                return 0;
              }
              else
              {
                if (*((_BYTE *)v13 + 25))
                {
                  WTF::StringImpl::createWithoutCopyingNonEmpty();
                  WebCore::InspectorCanvasCallTracer::processArgument(v13, v33, v15, v55);
                  WebCore::InspectorCanvasCallTracer::processArgument(v13, v34, v18, v56);
                  WebCore::InspectorCanvasCallTracer::processArgument(v13, v35, v21, v57);
                  WebCore::InspectorCanvasCallTracer::processArgument(v13, v36, v24, v58);
                  WebCore::InspectorCanvasCallTracer::processArgument(v13, v37, v27, v59);
                  WebCore::InspectorCanvasCallTracer::processArgument(v13, v38, v30, v60);
                  v53[0] = v55;
                  v53[1] = 6;
                  WebCore::InspectorCanvasCallTracer::recordAction(v13, (const WTF::StringImpl *)&v54, v53);
                  std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v60);
                  std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v59);
                  std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v58);
                  std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v57);
                  std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v56);
                  std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v55);
                  v40 = v54;
                  v54 = 0;
                  if (v40)
                  {
                    if (*(_DWORD *)v40 == 2)
                      WTF::StringImpl::destroy(v40, v39);
                    else
                      *(_DWORD *)v40 -= 2;
                  }
                }
                if ((*(uint64_t (**)(WebCore::InspectorCanvasCallTracer *))(*(_QWORD *)v13 + 240))(v13)
                  && (*(_QWORD *)&v15 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
                  && (*(_QWORD *)&v21 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
                  && (*(_QWORD *)&v27 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
                  && (*(_QWORD *)&v18 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
                  && (*(_QWORD *)&v24 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
                  && (*(_QWORD *)&v30 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
                {
                  WebCore::CanvasRenderingContext2DBase::resetTransform(v13);
                  WebCore::CanvasRenderingContext2DBase::transform(v13, v15, v18, v21, v24, v27, v30);
                }
                return 10;
              }
            }
          }
        }
      }
    }
  }
  else if (v12 > 1)
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::jsCanvasRenderingContext2DPrototypeFunction_setTransform2Body(this, a2, *(JSC::CallFrame **)(v6 + 24), a4);
  }
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_resetTransform(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  char **v6;
  BOOL v7;
  WebCore::CanvasRenderingContext *v8;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  _QWORD v14[2];
  WTF::StringImpl *v15;

  v3 = *((_QWORD *)a2 + 5);
  v13 = *((_QWORD *)this + 7);
  if ((v3 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v13, "CanvasRenderingContext2D", "resetTransform");
  v4 = *(unsigned int *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCanvasRenderingContext2D::s_info && v6 != 0);
  }
  if (!v5)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)&v13, "CanvasRenderingContext2D", "resetTransform");
  v8 = *(WebCore::CanvasRenderingContext **)(v3 + 24);
  if (*((_BYTE *)v8 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v14[0] = 0;
    v14[1] = 0;
    WebCore::InspectorCanvasCallTracer::recordAction(v8, (const WTF::StringImpl *)&v15, v14);
    v12 = v15;
    v15 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 2)
        WTF::StringImpl::destroy(v12, v11);
      else
        *(_DWORD *)v12 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::resetTransform(v8);
  return 10;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_drawFocusIfNeeded(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char **v13;
  BOOL v14;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  WebCore::Element *v19;
  JSValue v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BOOL4 v25;
  char **v26;
  BOOL v27;
  WebCore::Path2D *v29;
  uint64_t v30;
  WebCore::Element *v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  WebCore::InspectorCanvasAgent *v35;
  WebCore::InspectorInstrumentation *v36;
  WebCore::ScriptExecutionContext *v37;
  uint64_t v38;
  uint64_t v39;
  _DWORD *v40;
  WTF::StringImpl *v41;
  WebCore::Path2D *v42;
  WebCore::InspectorInstrumentation *v43;
  WebCore::ScriptExecutionContext *v44;
  uint64_t v45;
  WebCore::InspectorCanvasAgent *v46;
  WebCore::InspectorInstrumentation *v47;
  WebCore::ScriptExecutionContext *v48;
  uint64_t v49;
  WebCore::InspectorCanvasAgent *v50;
  WebCore::InspectorInstrumentation *v51;
  WebCore::ScriptExecutionContext *v52;
  uint64_t v53;
  uint64_t v54;
  _DWORD *v55;
  _DWORD *v56;
  WTF::StringImpl *v57;
  WebCore::Element *v58;
  _QWORD v59[2];
  _QWORD *v60;
  uint64_t v61;
  WTF::StringImpl *v62;
  _QWORD v63[2];
  char v64;
  _DWORD *v65;
  char v66;
  uint64_t v67;

  v67 = *MEMORY[0x1E0C80C00];
  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v59[0] = v9;
  v10 = *((_QWORD *)a2 + 5);
  if ((v10 & 0xFFFE000000000002) != 0)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v59, "CanvasRenderingContext2D", "drawFocusIfNeeded");
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSCanvasRenderingContext2D::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSCanvasRenderingContext2D::s_info && v13 != 0);
  }
  if (!v12)
    return (uint64_t)WebCore::throwThisTypeError((int)this, (int)v59, "CanvasRenderingContext2D", "drawFocusIfNeeded");
  v59[1] = v9;
  v16 = *((int *)a2 + 8) - 1;
  if (v16 >= 2)
    v16 = 2;
  if (v16)
  {
    if (v16 == 2)
    {
      v22 = *(_QWORD *)(v10 + 24);
      v23 = *((_QWORD *)a2 + 6);
      v63[0] = v9;
      if ((v23 & 0xFFFE000000000002) != 0)
        goto LABEL_33;
      v24 = *(unsigned int *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0x4C);
      v25 = *(_DWORD *)(16 * (*(_DWORD *)v23 & 0xFFFFFFFE) + 0x4C) != 0;
      v26 = (char **)(16 * v24);
      if ((_DWORD)v24)
        v27 = v26 == &WebCore::JSPath2D::s_info;
      else
        v27 = 1;
      if (!v27)
      {
        do
        {
          v26 = (char **)v26[2];
          v25 = v26 != 0;
        }
        while (v26 != &WebCore::JSPath2D::s_info && v26 != 0);
      }
      if (v25 && (v29 = *(WebCore::Path2D **)(v23 + 24)) != 0)
      {
        v30 = *((_QWORD *)a2 + 7);
        v63[0] = v9;
        if ((v30 & 0xFFFE000000000002) == 0
          && *(unsigned __int8 *)(v30 + 5) == 241
          && (v31 = *(WebCore::Element **)(v30 + 24)) != 0)
        {
          if (*(_BYTE *)(v22 + 25))
          {
            v58 = *(WebCore::Element **)(v30 + 24);
            v42 = v29;
            WTF::StringImpl::createWithoutCopyingNonEmpty();
            v43 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v22 + 32)
                                                                                         + 144))(*(_QWORD *)(v22 + 32));
            if (v43
              && (v45 = WebCore::InspectorInstrumentation::instrumentingAgents(v43, v44)) != 0
              && (v46 = *(WebCore::InspectorCanvasAgent **)(v45 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v46, (WebCore::CanvasRenderingContext *)v22, v42, (uint64_t)v63);
            }
            else
            {
              LOBYTE(v63[0]) = 0;
              v64 = 0;
            }
            v47 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v22 + 32)
                                                                                         + 144))(*(_QWORD *)(v22 + 32));
            if (v47
              && (v49 = WebCore::InspectorInstrumentation::instrumentingAgents(v47, v48)) != 0
              && (v50 = *(WebCore::InspectorCanvasAgent **)(v49 + 96)) != 0)
            {
              WebCore::InspectorCanvasAgent::processArgument(v50, (WebCore::CanvasRenderingContext *)v22, v58, (uint64_t)&v65);
            }
            else
            {
              LOBYTE(v65) = 0;
              v66 = 0;
            }
            v60 = v63;
            v61 = 2;
            v51 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v22 + 32)
                                                                                         + 144))(*(_QWORD *)(v22 + 32));
            if (v51)
            {
              v53 = WebCore::InspectorInstrumentation::instrumentingAgents(v51, v52);
              if (v53)
              {
                v54 = *(_QWORD *)(v53 + 96);
                if (v54)
                  WebCore::InspectorCanvasAgent::recordAction(v54, (WebCore::CanvasRenderingContext *)v22, (const WTF::StringImpl *)&v62, &v60);
              }
            }
            if (v66)
            {
              v55 = v65;
              v65 = 0;
              if (v55)
              {
                if (*v55 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v55;
              }
            }
            if (v64)
            {
              v56 = (_DWORD *)v63[0];
              v63[0] = 0;
              if (v56)
              {
                if (*v56 == 1)
                  WTF::JSONImpl::Value::operator delete();
                else
                  --*v56;
              }
            }
            v57 = v62;
            v62 = 0;
            if (v57)
            {
              if (*(_DWORD *)v57 == 2)
                WTF::StringImpl::destroy(v57, v52);
              else
                *(_DWORD *)v57 -= 2;
            }
            v29 = v42;
            v31 = v58;
          }
          WebCore::CanvasRenderingContext2D::drawFocusIfNeededInternal((WebCore::CanvasRenderingContext2D *)v22, (WebCore::Path2D *)((char *)v29 + 8), v31);
          return 10;
        }
        else
        {
          WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v63, 1, "element", 8, "CanvasRenderingContext2D", 25, a8, "drawFocusIfNeeded", 18, "Element", 8);
          return 0;
        }
      }
      else
      {
LABEL_33:
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v63, 0, "path", 5, "CanvasRenderingContext2D", 25, a8, "drawFocusIfNeeded", 18, "Path2D", 7);
        return 0;
      }
    }
    else
    {
      v17 = *((_QWORD *)a2 + 6);
      v18 = *(_QWORD *)(v10 + 24);
      v63[0] = v9;
      if ((v17 & 0xFFFE000000000002) == 0
        && *(unsigned __int8 *)(v17 + 5) == 241
        && (v19 = *(WebCore::Element **)(v17 + 24)) != 0)
      {
        if (*(_BYTE *)(v18 + 25))
        {
          WTF::StringImpl::createWithoutCopyingNonEmpty();
          v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v18 + 32) + 144))(*(_QWORD *)(v18 + 32));
          if (v32
            && (v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33)) != 0
            && (v35 = *(WebCore::InspectorCanvasAgent **)(v34 + 96)) != 0)
          {
            WebCore::InspectorCanvasAgent::processArgument(v35, (WebCore::CanvasRenderingContext *)v18, v19, (uint64_t)v63);
          }
          else
          {
            LOBYTE(v63[0]) = 0;
            v64 = 0;
          }
          v60 = v63;
          v61 = 1;
          v36 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v18 + 32) + 144))(*(_QWORD *)(v18 + 32));
          if (v36)
          {
            v38 = WebCore::InspectorInstrumentation::instrumentingAgents(v36, v37);
            if (v38)
            {
              v39 = *(_QWORD *)(v38 + 96);
              if (v39)
                WebCore::InspectorCanvasAgent::recordAction(v39, (WebCore::CanvasRenderingContext *)v18, (const WTF::StringImpl *)&v62, &v60);
            }
          }
          if (v64)
          {
            v40 = (_DWORD *)v63[0];
            v63[0] = 0;
            if (v40)
            {
              if (*v40 == 1)
                WTF::JSONImpl::Value::operator delete();
              else
                --*v40;
            }
          }
          v41 = v62;
          v62 = 0;
          if (v41)
          {
            if (*(_DWORD *)v41 == 2)
              WTF::StringImpl::destroy(v41, v37);
            else
              *(_DWORD *)v41 -= 2;
          }
        }
        WebCore::CanvasRenderingContext2D::drawFocusIfNeededInternal((WebCore::CanvasRenderingContext2D *)v18, (const WebCore::Path *)(v18 + 48), v19);
        return 10;
      }
      else
      {
        WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v63, 0, "element", 8, "CanvasRenderingContext2D", 25, a8, "drawFocusIfNeeded", 18, "Element", 8);
        return 0;
      }
    }
  }
  else
  {
    v21.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v9, this, v21);
  }
}

uint64_t std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional(uint64_t a1)
{
  _DWORD *v2;

  if (*(_BYTE *)(a1 + 16))
  {
    v2 = *(_DWORD **)a1;
    *(_QWORD *)a1 = 0;
    if (v2)
    {
      if (*v2 == 1)
        WTF::JSONImpl::Value::operator delete();
      else
        --*v2;
    }
  }
  return a1;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_setStrokeColor2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4)
{
  unint64_t v7;
  JSC::VM *v8;
  double v9;
  float v10;
  float v11;
  unint64_t v12;
  JSC::VM *v13;
  double v14;
  int v16;
  WebCore::InspectorInstrumentation *v17;
  WebCore::ScriptExecutionContext *v18;
  uint64_t v19;
  WebCore::InspectorCanvasAgent *v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  WebCore::InspectorCanvasAgent *v24;
  WebCore::InspectorInstrumentation *v25;
  WebCore::ScriptExecutionContext *v26;
  uint64_t v27;
  uint64_t v28;
  _DWORD *v29;
  _DWORD *v30;
  WTF::StringImpl *v31;
  int v32;
  JSC::VM *v33;
  double v34;
  double v35;
  _QWORD v36[2];
  WTF::StringImpl *v37;
  _QWORD v38[2];
  char v39;
  _DWORD *v40;
  char v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v7 = *((_QWORD *)a2 + 6);
  v38[0] = v7;
  v8 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v7 >= 0xFFFE000000000000)
  {
    v9 = (double)(int)v7;
  }
  else if (v7 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v33 = v8;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v38, this);
    v8 = v33;
    v9 = v34;
  }
  else
  {
    *(_QWORD *)&v9 = v7 - 0x2000000000000;
  }
  if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
    return 0;
  if (v9 < -3.40282347e38)
  {
    *(float *)&v16 = -INFINITY;
LABEL_29:
    v10 = *(float *)&v16;
    goto LABEL_8;
  }
  if (v9 > 3.40282347e38)
  {
    *(float *)&v16 = INFINITY;
    goto LABEL_29;
  }
  v10 = v9;
LABEL_8:
  v11 = 1.0;
  if ((unint64_t)(*((int *)a2 + 8) - 3) > 0xFFFFFFFFFFFFFFFDLL)
    goto LABEL_17;
  v12 = *((_QWORD *)a2 + 7);
  if (v12 == 10)
    goto LABEL_17;
  v38[0] = *((_QWORD *)a2 + 7);
  v13 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v12 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v12;
  }
  else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v38, this);
    v14 = v35;
  }
  else
  {
    *(_QWORD *)&v14 = v12 - 0x2000000000000;
  }
  if (*((_DWORD *)v13 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v13) & 1) != 0)
    return 0;
  if (v14 < -3.40282347e38)
  {
    *(float *)&v32 = -INFINITY;
LABEL_55:
    v11 = *(float *)&v32;
    goto LABEL_17;
  }
  if (v14 > 3.40282347e38)
  {
    *(float *)&v32 = INFINITY;
    goto LABEL_55;
  }
  v11 = v14;
LABEL_17:
  if (*((_BYTE *)a3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v17 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v17
      && (v19 = WebCore::InspectorInstrumentation::instrumentingAgents(v17, v18)) != 0
      && (v20 = *(WebCore::InspectorCanvasAgent **)(v19 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v20, a3, v10, (uint64_t)v38);
    }
    else
    {
      LOBYTE(v38[0]) = 0;
      v39 = 0;
    }
    v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v21
      && (v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22)) != 0
      && (v24 = *(WebCore::InspectorCanvasAgent **)(v23 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v24, a3, v11, (uint64_t)&v40);
    }
    else
    {
      LOBYTE(v40) = 0;
      v41 = 0;
    }
    v36[0] = v38;
    v36[1] = 2;
    v25 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v25)
    {
      v27 = WebCore::InspectorInstrumentation::instrumentingAgents(v25, v26);
      if (v27)
      {
        v28 = *(_QWORD *)(v27 + 96);
        if (v28)
          WebCore::InspectorCanvasAgent::recordAction(v28, a3, (const WTF::StringImpl *)&v37, v36);
      }
    }
    if (v41)
    {
      v29 = v40;
      v40 = 0;
      if (v29)
      {
        if (*v29 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v29;
      }
    }
    if (v39)
    {
      v30 = (_DWORD *)v38[0];
      v38[0] = 0;
      if (v30)
      {
        if (*v30 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v30;
      }
    }
    v31 = v37;
    v37 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 2)
        WTF::StringImpl::destroy(v31, v26);
      else
        *(_DWORD *)v31 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::setStrokeColor((uint64_t)a3, v10, v11);
  return 10;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_setStrokeColor1Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4)
{
  uint64_t v7;
  JSC::VM *v8;
  _DWORD *v9;
  int *v10;
  unint64_t v11;
  JSC::VM *v12;
  double v13;
  float v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  int v19;
  WTF::StringImpl *v21;
  char v22;
  WebCore::InspectorInstrumentation *v23;
  WebCore::ScriptExecutionContext *v24;
  uint64_t v25;
  WebCore::InspectorCanvasAgent *v26;
  WebCore::InspectorInstrumentation *v27;
  WebCore::ScriptExecutionContext *v28;
  uint64_t v29;
  uint64_t v30;
  WebCore::InspectorInstrumentation *v31;
  WebCore::ScriptExecutionContext *v32;
  uint64_t v33;
  uint64_t v34;
  _DWORD *v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  char hasExceptionsAfterHandlingTraps;
  int v39;
  double v40;
  _QWORD v41[2];
  WTF::StringImpl *v42;
  _BYTE v43[12];
  int v44;
  int *v45;
  int v46;
  WTF::StringImpl *v47[2];
  char v48;
  _DWORD *v49;
  char v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v7 = *((_QWORD *)a2 + 6);
  v47[0] = (WTF::StringImpl *)v7;
  v8 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v7 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v7 + 5) == 2)
  {
    v9 = *(_DWORD **)(v7 + 8);
    if ((v9 & 1) != 0)
    {
      v9 = *(_DWORD **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v7, this);
      if (!v9)
        goto LABEL_6;
    }
    else if (!v9)
    {
LABEL_6:
      *(_QWORD *)v43 = v9;
      goto LABEL_7;
    }
    *v9 += 2;
    goto LABEL_6;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v47, this);
LABEL_7:
  if (!*((_DWORD *)v8 + 20))
  {
    v10 = *(int **)v43;
LABEL_9:
    v45 = v10;
    v46 = 0;
    if ((unint64_t)(*((int *)a2 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL || (v11 = *((_QWORD *)a2 + 7), v11 == 10))
    {
      *(_QWORD *)&v43[4] = 0;
LABEL_20:
      v44 = 0;
      if (*((_BYTE *)a3 + 25))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v23 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
        if (v23
          && (v25 = WebCore::InspectorInstrumentation::instrumentingAgents(v23, v24)) != 0
          && (v26 = *(WebCore::InspectorCanvasAgent **)(v25 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v26, a3, &v45, (uint64_t)v47);
        }
        else
        {
          LOBYTE(v47[0]) = 0;
          v48 = 0;
        }
        v27 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
        if (v27
          && (v29 = WebCore::InspectorInstrumentation::instrumentingAgents(v27, v28)) != 0
          && (v30 = *(_QWORD *)(v29 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v30, a3, (uint64_t)&v43[4], (uint64_t)&v49);
        }
        else
        {
          LOBYTE(v49) = 0;
          v50 = 0;
        }
        v41[0] = v47;
        v41[1] = 2;
        v31 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
        if (v31)
        {
          v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v31, v32);
          if (v33)
          {
            v34 = *(_QWORD *)(v33 + 96);
            if (v34)
              WebCore::InspectorCanvasAgent::recordAction(v34, a3, (const WTF::StringImpl *)&v42, v41);
          }
        }
        if (v50)
        {
          v35 = v49;
          v49 = 0;
          if (v35)
          {
            if (*v35 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v35;
          }
        }
        if (v48)
        {
          v36 = v47[0];
          v47[0] = 0;
          if (v36)
          {
            if (*(_DWORD *)v36 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*(_DWORD *)v36;
          }
        }
        v37 = v42;
        v42 = 0;
        if (v37)
        {
          if (*(_DWORD *)v37 == 2)
            WTF::StringImpl::destroy(v37, v32);
          else
            *(_DWORD *)v37 -= 2;
        }
      }
      if (v46 || (v15 = (WTF::StringImpl *)v45, v45 = 0, v47[0] = v15, v44))
        std::__throw_bad_variant_access[abi:sn180100]();
      WebCore::CanvasRenderingContext2DBase::setStrokeColor((uint64_t)a3, (unsigned int **)v47, *(const WTF::StringImpl **)&v43[4]);
      v17 = v47[0];
      v47[0] = 0;
      if (v17)
      {
        if (*(_DWORD *)v17 == 2)
          WTF::StringImpl::destroy(v17, v16);
        else
          *(_DWORD *)v17 -= 2;
      }
      v18 = 10;
      goto LABEL_27;
    }
    v47[0] = *((WTF::StringImpl **)a2 + 7);
    v12 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v11 >= 0xFFFE000000000000)
    {
      v13 = (double)(int)v11;
    }
    else if (v11 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v47, this);
    }
    else
    {
      *(_QWORD *)&v13 = v11 - 0x2000000000000;
    }
    if (*((_DWORD *)v12 + 20))
    {
      v40 = v13;
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v12);
      v13 = v40;
      if ((hasExceptionsAfterHandlingTraps & 1) != 0)
      {
        v18 = 0;
LABEL_27:
        v19 = v46;
        goto LABEL_28;
      }
    }
    if (v13 < -3.40282347e38)
    {
      *(float *)&v39 = -INFINITY;
    }
    else
    {
      if (v13 <= 3.40282347e38)
      {
        v14 = v13;
LABEL_19:
        *(float *)&v43[4] = v14;
        v43[8] = 1;
        goto LABEL_20;
      }
      *(float *)&v39 = INFINITY;
    }
    v14 = *(float *)&v39;
    goto LABEL_19;
  }
  v22 = JSC::VM::hasExceptionsAfterHandlingTraps(v8);
  v10 = *(int **)v43;
  if ((v22 & 1) == 0)
    goto LABEL_9;
  v46 = 1;
  *(_QWORD *)v43 = 0;
  if (!v10)
  {
LABEL_40:
    v18 = 0;
    v19 = 1;
    goto LABEL_29;
  }
  if (*v10 != 2)
  {
    *v10 -= 2;
    goto LABEL_40;
  }
  WTF::StringImpl::destroy((WTF::StringImpl *)v10, v21);
  v19 = v46;
  v18 = 0;
LABEL_28:
  if (v19 != -1)
LABEL_29:
    ((void (*)(WTF::StringImpl **, int **))off_1E3238AF8[v19])(v47, &v45);
  return v18;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_setFillColor2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4)
{
  unint64_t v7;
  JSC::VM *v8;
  double v9;
  float v10;
  float v11;
  unint64_t v12;
  JSC::VM *v13;
  double v14;
  int v16;
  WebCore::InspectorInstrumentation *v17;
  WebCore::ScriptExecutionContext *v18;
  uint64_t v19;
  WebCore::InspectorCanvasAgent *v20;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  WebCore::InspectorCanvasAgent *v24;
  WebCore::InspectorInstrumentation *v25;
  WebCore::ScriptExecutionContext *v26;
  uint64_t v27;
  uint64_t v28;
  _DWORD *v29;
  _DWORD *v30;
  WTF::StringImpl *v31;
  int v32;
  JSC::VM *v33;
  double v34;
  double v35;
  _QWORD v36[2];
  WTF::StringImpl *v37;
  _QWORD v38[2];
  char v39;
  _DWORD *v40;
  char v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v7 = *((_QWORD *)a2 + 6);
  v38[0] = v7;
  v8 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v7 >= 0xFFFE000000000000)
  {
    v9 = (double)(int)v7;
  }
  else if (v7 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v33 = v8;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v38, this);
    v8 = v33;
    v9 = v34;
  }
  else
  {
    *(_QWORD *)&v9 = v7 - 0x2000000000000;
  }
  if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
    return 0;
  if (v9 < -3.40282347e38)
  {
    *(float *)&v16 = -INFINITY;
LABEL_29:
    v10 = *(float *)&v16;
    goto LABEL_8;
  }
  if (v9 > 3.40282347e38)
  {
    *(float *)&v16 = INFINITY;
    goto LABEL_29;
  }
  v10 = v9;
LABEL_8:
  v11 = 1.0;
  if ((unint64_t)(*((int *)a2 + 8) - 3) > 0xFFFFFFFFFFFFFFFDLL)
    goto LABEL_17;
  v12 = *((_QWORD *)a2 + 7);
  if (v12 == 10)
    goto LABEL_17;
  v38[0] = *((_QWORD *)a2 + 7);
  v13 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v12 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v12;
  }
  else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v38, this);
    v14 = v35;
  }
  else
  {
    *(_QWORD *)&v14 = v12 - 0x2000000000000;
  }
  if (*((_DWORD *)v13 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v13) & 1) != 0)
    return 0;
  if (v14 < -3.40282347e38)
  {
    *(float *)&v32 = -INFINITY;
LABEL_55:
    v11 = *(float *)&v32;
    goto LABEL_17;
  }
  if (v14 > 3.40282347e38)
  {
    *(float *)&v32 = INFINITY;
    goto LABEL_55;
  }
  v11 = v14;
LABEL_17:
  if (*((_BYTE *)a3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v17 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v17
      && (v19 = WebCore::InspectorInstrumentation::instrumentingAgents(v17, v18)) != 0
      && (v20 = *(WebCore::InspectorCanvasAgent **)(v19 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v20, a3, v10, (uint64_t)v38);
    }
    else
    {
      LOBYTE(v38[0]) = 0;
      v39 = 0;
    }
    v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v21
      && (v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22)) != 0
      && (v24 = *(WebCore::InspectorCanvasAgent **)(v23 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v24, a3, v11, (uint64_t)&v40);
    }
    else
    {
      LOBYTE(v40) = 0;
      v41 = 0;
    }
    v36[0] = v38;
    v36[1] = 2;
    v25 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v25)
    {
      v27 = WebCore::InspectorInstrumentation::instrumentingAgents(v25, v26);
      if (v27)
      {
        v28 = *(_QWORD *)(v27 + 96);
        if (v28)
          WebCore::InspectorCanvasAgent::recordAction(v28, a3, (const WTF::StringImpl *)&v37, v36);
      }
    }
    if (v41)
    {
      v29 = v40;
      v40 = 0;
      if (v29)
      {
        if (*v29 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v29;
      }
    }
    if (v39)
    {
      v30 = (_DWORD *)v38[0];
      v38[0] = 0;
      if (v30)
      {
        if (*v30 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v30;
      }
    }
    v31 = v37;
    v37 = 0;
    if (v31)
    {
      if (*(_DWORD *)v31 == 2)
        WTF::StringImpl::destroy(v31, v26);
      else
        *(_DWORD *)v31 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::setFillColor((uint64_t)a3, v10, v11);
  return 10;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_setFillColor1Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4)
{
  uint64_t v7;
  JSC::VM *v8;
  _DWORD *v9;
  int *v10;
  unint64_t v11;
  JSC::VM *v12;
  double v13;
  float v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  int v19;
  WTF::StringImpl *v21;
  char v22;
  WebCore::InspectorInstrumentation *v23;
  WebCore::ScriptExecutionContext *v24;
  uint64_t v25;
  WebCore::InspectorCanvasAgent *v26;
  WebCore::InspectorInstrumentation *v27;
  WebCore::ScriptExecutionContext *v28;
  uint64_t v29;
  uint64_t v30;
  WebCore::InspectorInstrumentation *v31;
  WebCore::ScriptExecutionContext *v32;
  uint64_t v33;
  uint64_t v34;
  _DWORD *v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  char hasExceptionsAfterHandlingTraps;
  int v39;
  double v40;
  _QWORD v41[2];
  WTF::StringImpl *v42;
  _BYTE v43[12];
  int v44;
  int *v45;
  int v46;
  WTF::StringImpl *v47[2];
  char v48;
  _DWORD *v49;
  char v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v7 = *((_QWORD *)a2 + 6);
  v47[0] = (WTF::StringImpl *)v7;
  v8 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v7 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v7 + 5) == 2)
  {
    v9 = *(_DWORD **)(v7 + 8);
    if ((v9 & 1) != 0)
    {
      v9 = *(_DWORD **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v7, this);
      if (!v9)
        goto LABEL_6;
    }
    else if (!v9)
    {
LABEL_6:
      *(_QWORD *)v43 = v9;
      goto LABEL_7;
    }
    *v9 += 2;
    goto LABEL_6;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v47, this);
LABEL_7:
  if (!*((_DWORD *)v8 + 20))
  {
    v10 = *(int **)v43;
LABEL_9:
    v45 = v10;
    v46 = 0;
    if ((unint64_t)(*((int *)a2 + 8) - 3) >= 0xFFFFFFFFFFFFFFFELL || (v11 = *((_QWORD *)a2 + 7), v11 == 10))
    {
      *(_QWORD *)&v43[4] = 0;
LABEL_20:
      v44 = 0;
      if (*((_BYTE *)a3 + 25))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v23 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
        if (v23
          && (v25 = WebCore::InspectorInstrumentation::instrumentingAgents(v23, v24)) != 0
          && (v26 = *(WebCore::InspectorCanvasAgent **)(v25 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v26, a3, &v45, (uint64_t)v47);
        }
        else
        {
          LOBYTE(v47[0]) = 0;
          v48 = 0;
        }
        v27 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
        if (v27
          && (v29 = WebCore::InspectorInstrumentation::instrumentingAgents(v27, v28)) != 0
          && (v30 = *(_QWORD *)(v29 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v30, a3, (uint64_t)&v43[4], (uint64_t)&v49);
        }
        else
        {
          LOBYTE(v49) = 0;
          v50 = 0;
        }
        v41[0] = v47;
        v41[1] = 2;
        v31 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
        if (v31)
        {
          v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v31, v32);
          if (v33)
          {
            v34 = *(_QWORD *)(v33 + 96);
            if (v34)
              WebCore::InspectorCanvasAgent::recordAction(v34, a3, (const WTF::StringImpl *)&v42, v41);
          }
        }
        if (v50)
        {
          v35 = v49;
          v49 = 0;
          if (v35)
          {
            if (*v35 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v35;
          }
        }
        if (v48)
        {
          v36 = v47[0];
          v47[0] = 0;
          if (v36)
          {
            if (*(_DWORD *)v36 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*(_DWORD *)v36;
          }
        }
        v37 = v42;
        v42 = 0;
        if (v37)
        {
          if (*(_DWORD *)v37 == 2)
            WTF::StringImpl::destroy(v37, v32);
          else
            *(_DWORD *)v37 -= 2;
        }
      }
      if (v46 || (v15 = (WTF::StringImpl *)v45, v45 = 0, v47[0] = v15, v44))
        std::__throw_bad_variant_access[abi:sn180100]();
      WebCore::CanvasRenderingContext2DBase::setFillColor((uint64_t)a3, (unsigned int **)v47, *(const WTF::StringImpl **)&v43[4]);
      v17 = v47[0];
      v47[0] = 0;
      if (v17)
      {
        if (*(_DWORD *)v17 == 2)
          WTF::StringImpl::destroy(v17, v16);
        else
          *(_DWORD *)v17 -= 2;
      }
      v18 = 10;
      goto LABEL_27;
    }
    v47[0] = *((WTF::StringImpl **)a2 + 7);
    v12 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v11 >= 0xFFFE000000000000)
    {
      v13 = (double)(int)v11;
    }
    else if (v11 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v47, this);
    }
    else
    {
      *(_QWORD *)&v13 = v11 - 0x2000000000000;
    }
    if (*((_DWORD *)v12 + 20))
    {
      v40 = v13;
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v12);
      v13 = v40;
      if ((hasExceptionsAfterHandlingTraps & 1) != 0)
      {
        v18 = 0;
LABEL_27:
        v19 = v46;
        goto LABEL_28;
      }
    }
    if (v13 < -3.40282347e38)
    {
      *(float *)&v39 = -INFINITY;
    }
    else
    {
      if (v13 <= 3.40282347e38)
      {
        v14 = v13;
LABEL_19:
        *(float *)&v43[4] = v14;
        v43[8] = 1;
        goto LABEL_20;
      }
      *(float *)&v39 = INFINITY;
    }
    v14 = *(float *)&v39;
    goto LABEL_19;
  }
  v22 = JSC::VM::hasExceptionsAfterHandlingTraps(v8);
  v10 = *(int **)v43;
  if ((v22 & 1) == 0)
    goto LABEL_9;
  v46 = 1;
  *(_QWORD *)v43 = 0;
  if (!v10)
  {
LABEL_40:
    v18 = 0;
    v19 = 1;
    goto LABEL_29;
  }
  if (*v10 != 2)
  {
    *v10 -= 2;
    goto LABEL_40;
  }
  WTF::StringImpl::destroy((WTF::StringImpl *)v10, v21);
  v19 = v46;
  v18 = 0;
LABEL_28:
  if (v19 != -1)
LABEL_29:
    ((void (*)(WTF::StringImpl **, int **))off_1E3238AF8[v19])(v47, &v45);
  return v18;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_setShadow1Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4)
{
  WTF::StringImpl *v7;
  JSC::VM *v8;
  double v9;
  float v10;
  WTF::StringImpl *v11;
  JSC::VM *v12;
  double v13;
  float v14;
  WTF::StringImpl *v15;
  JSC::VM *v16;
  double v17;
  float v18;
  uint64_t v19;
  JSC::VM *v20;
  _DWORD *v21;
  int *v22;
  unint64_t v23;
  JSC::VM *v24;
  double v25;
  float v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  int v31;
  int v33;
  int v34;
  int v35;
  WebCore::InspectorInstrumentation *v36;
  WebCore::ScriptExecutionContext *v37;
  uint64_t v38;
  WebCore::InspectorCanvasAgent *v39;
  WebCore::InspectorInstrumentation *v40;
  WebCore::ScriptExecutionContext *v41;
  uint64_t v42;
  WebCore::InspectorCanvasAgent *v43;
  WebCore::InspectorInstrumentation *v44;
  WebCore::ScriptExecutionContext *v45;
  uint64_t v46;
  WebCore::InspectorCanvasAgent *v47;
  WebCore::InspectorInstrumentation *v48;
  WebCore::ScriptExecutionContext *v49;
  uint64_t v50;
  WebCore::InspectorCanvasAgent *v51;
  WebCore::InspectorInstrumentation *v52;
  WebCore::ScriptExecutionContext *v53;
  uint64_t v54;
  uint64_t v55;
  WebCore::InspectorInstrumentation *v56;
  WebCore::ScriptExecutionContext *v57;
  uint64_t v58;
  uint64_t v59;
  _DWORD *v60;
  _DWORD *v61;
  _DWORD *v62;
  _DWORD *v63;
  WTF::StringImpl *v64;
  WTF::StringImpl *v65;
  WTF::StringImpl *v66;
  char v67;
  char hasExceptionsAfterHandlingTraps;
  int v69;
  double v70;
  double v71;
  double v72;
  double v73;
  _QWORD v74[2];
  WTF::StringImpl *v75;
  _BYTE v76[12];
  int v77;
  int *v78;
  int v79;
  WTF::StringImpl *v80[2];
  char v81;
  _DWORD *v82;
  char v83;
  _DWORD *v84;
  char v85;
  _DWORD *v86;
  char v87;
  _DWORD *v88;
  char v89;
  uint64_t v90;

  v90 = *MEMORY[0x1E0C80C00];
  v7 = (WTF::StringImpl *)*((_QWORD *)a2 + 6);
  v80[0] = v7;
  v8 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((unint64_t)v7 >= 0xFFFE000000000000)
  {
    v9 = (double)(int)v7;
  }
  else if ((unint64_t)v7 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v80, this);
    v9 = v70;
  }
  else
  {
    *(_QWORD *)&v9 = (char *)v7 - 0x2000000000000;
  }
  if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
    return 0;
  if (v9 < -3.40282347e38)
  {
    *(float *)&v33 = -INFINITY;
  }
  else
  {
    if (v9 <= 3.40282347e38)
    {
      v10 = v9;
      goto LABEL_8;
    }
    *(float *)&v33 = INFINITY;
  }
  v10 = *(float *)&v33;
LABEL_8:
  v11 = (WTF::StringImpl *)*((_QWORD *)a2 + 7);
  v80[0] = v11;
  v12 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((unint64_t)v11 >= 0xFFFE000000000000)
  {
    v13 = (double)(int)v11;
  }
  else if ((unint64_t)v11 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v80, this);
    v13 = v71;
  }
  else
  {
    *(_QWORD *)&v13 = (char *)v11 - 0x2000000000000;
  }
  if (*((_DWORD *)v12 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v12) & 1) != 0)
    return 0;
  if (v13 < -3.40282347e38)
  {
    *(float *)&v34 = -INFINITY;
  }
  else
  {
    if (v13 <= 3.40282347e38)
    {
      v14 = v13;
      goto LABEL_15;
    }
    *(float *)&v34 = INFINITY;
  }
  v14 = *(float *)&v34;
LABEL_15:
  v15 = (WTF::StringImpl *)*((_QWORD *)a2 + 8);
  v80[0] = v15;
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((unint64_t)v15 >= 0xFFFE000000000000)
  {
    v17 = (double)(int)v15;
  }
  else if ((unint64_t)v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v80, this);
    v17 = v72;
  }
  else
  {
    *(_QWORD *)&v17 = (char *)v15 - 0x2000000000000;
  }
  if (*((_DWORD *)v16 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v16) & 1) != 0)
    return 0;
  if (v17 < -3.40282347e38)
  {
    *(float *)&v35 = -INFINITY;
LABEL_82:
    v18 = *(float *)&v35;
    goto LABEL_22;
  }
  if (v17 > 3.40282347e38)
  {
    *(float *)&v35 = INFINITY;
    goto LABEL_82;
  }
  v18 = v17;
LABEL_22:
  if ((unint64_t)(*((int *)a2 + 8) - 5) >= 0xFFFFFFFFFFFFFFFCLL || (v19 = *((_QWORD *)a2 + 9), v19 == 10))
  {
    v78 = 0;
    v79 = 0;
LABEL_34:
    if ((unint64_t)(*((int *)a2 + 8) - 6) >= 0xFFFFFFFFFFFFFFFBLL || (v23 = *((_QWORD *)a2 + 10), v23 == 10))
    {
      *(_QWORD *)&v76[4] = 0;
LABEL_45:
      v77 = 0;
      if (*((_BYTE *)a3 + 25))
      {
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v75 = v80[0];
        v36 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
        if (v36
          && (v38 = WebCore::InspectorInstrumentation::instrumentingAgents(v36, v37)) != 0
          && (v39 = *(WebCore::InspectorCanvasAgent **)(v38 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v39, a3, v10, (uint64_t)v80);
        }
        else
        {
          LOBYTE(v80[0]) = 0;
          v81 = 0;
        }
        v40 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
        if (v40
          && (v42 = WebCore::InspectorInstrumentation::instrumentingAgents(v40, v41)) != 0
          && (v43 = *(WebCore::InspectorCanvasAgent **)(v42 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v43, a3, v14, (uint64_t)&v82);
        }
        else
        {
          LOBYTE(v82) = 0;
          v83 = 0;
        }
        v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
        if (v44
          && (v46 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, v45)) != 0
          && (v47 = *(WebCore::InspectorCanvasAgent **)(v46 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v47, a3, v18, (uint64_t)&v84);
        }
        else
        {
          LOBYTE(v84) = 0;
          v85 = 0;
        }
        v48 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
        if (v48
          && (v50 = WebCore::InspectorInstrumentation::instrumentingAgents(v48, v49)) != 0
          && (v51 = *(WebCore::InspectorCanvasAgent **)(v50 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v51, a3, &v78, (uint64_t)&v86);
        }
        else
        {
          LOBYTE(v86) = 0;
          v87 = 0;
        }
        v52 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
        if (v52
          && (v54 = WebCore::InspectorInstrumentation::instrumentingAgents(v52, v53)) != 0
          && (v55 = *(_QWORD *)(v54 + 96)) != 0)
        {
          WebCore::InspectorCanvasAgent::processArgument(v55, a3, (uint64_t)&v76[4], (uint64_t)&v88);
        }
        else
        {
          LOBYTE(v88) = 0;
          v89 = 0;
        }
        v74[0] = v80;
        v74[1] = 5;
        v56 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
        if (v56)
        {
          v58 = WebCore::InspectorInstrumentation::instrumentingAgents(v56, v57);
          if (v58)
          {
            v59 = *(_QWORD *)(v58 + 96);
            if (v59)
              WebCore::InspectorCanvasAgent::recordAction(v59, a3, (const WTF::StringImpl *)&v75, v74);
          }
        }
        if (v89)
        {
          v60 = v88;
          v88 = 0;
          if (v60)
          {
            if (*v60 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v60;
          }
        }
        if (v87)
        {
          v61 = v86;
          v86 = 0;
          if (v61)
          {
            if (*v61 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v61;
          }
        }
        if (v85)
        {
          v62 = v84;
          v84 = 0;
          if (v62)
          {
            if (*v62 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v62;
          }
        }
        if (v83)
        {
          v63 = v82;
          v82 = 0;
          if (v63)
          {
            if (*v63 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*v63;
          }
        }
        if (v81)
        {
          v64 = v80[0];
          v80[0] = 0;
          if (v64)
          {
            if (*(_DWORD *)v64 == 1)
              WTF::JSONImpl::Value::operator delete();
            else
              --*(_DWORD *)v64;
          }
        }
        v65 = v75;
        v75 = 0;
        if (v65)
        {
          if (*(_DWORD *)v65 == 2)
            WTF::StringImpl::destroy(v65, v57);
          else
            *(_DWORD *)v65 -= 2;
        }
      }
      if (v79 || (v27 = (WTF::StringImpl *)v78, v78 = 0, v80[0] = v27, v77))
        std::__throw_bad_variant_access[abi:sn180100]();
      WebCore::CanvasRenderingContext2DBase::setShadow((uint64_t)a3, (unsigned int **)v80, *(uint64_t *)&v76[4], v10, v14, v18);
      v29 = v80[0];
      v80[0] = 0;
      if (v29)
      {
        if (*(_DWORD *)v29 == 2)
          WTF::StringImpl::destroy(v29, v28);
        else
          *(_DWORD *)v29 -= 2;
      }
      v30 = 10;
      goto LABEL_52;
    }
    v80[0] = *((WTF::StringImpl **)a2 + 10);
    v24 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v23 >= 0xFFFE000000000000)
    {
      v25 = (double)(int)v23;
    }
    else if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v80, this);
    }
    else
    {
      *(_QWORD *)&v25 = v23 - 0x2000000000000;
    }
    if (*((_DWORD *)v24 + 20))
    {
      v73 = v25;
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v24);
      v25 = v73;
      if ((hasExceptionsAfterHandlingTraps & 1) != 0)
      {
        v30 = 0;
LABEL_52:
        v31 = v79;
        goto LABEL_53;
      }
    }
    if (v25 < -3.40282347e38)
    {
      *(float *)&v69 = -INFINITY;
    }
    else
    {
      if (v25 <= 3.40282347e38)
      {
        v26 = v25;
LABEL_44:
        *(float *)&v76[4] = v26;
        v76[8] = 1;
        goto LABEL_45;
      }
      *(float *)&v69 = INFINITY;
    }
    v26 = *(float *)&v69;
    goto LABEL_44;
  }
  v80[0] = *((WTF::StringImpl **)a2 + 9);
  v20 = (JSC::VM *)*((_QWORD *)this + 7);
  if ((v19 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v19 + 5) == 2)
  {
    v21 = *(_DWORD **)(v19 + 8);
    if ((v21 & 1) != 0)
    {
      v21 = *(_DWORD **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v19, this);
      if (!v21)
        goto LABEL_30;
    }
    else if (!v21)
    {
LABEL_30:
      *(_QWORD *)v76 = v21;
      goto LABEL_31;
    }
    *v21 += 2;
    goto LABEL_30;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v80, this);
LABEL_31:
  if (!*((_DWORD *)v20 + 20))
  {
    v22 = *(int **)v76;
LABEL_33:
    v78 = v22;
    v79 = 0;
    goto LABEL_34;
  }
  v67 = JSC::VM::hasExceptionsAfterHandlingTraps(v20);
  v22 = *(int **)v76;
  if ((v67 & 1) == 0)
    goto LABEL_33;
  v79 = 1;
  *(_QWORD *)v76 = 0;
  if (!v22)
  {
LABEL_135:
    v30 = 0;
    v31 = 1;
    goto LABEL_54;
  }
  if (*v22 != 2)
  {
    *v22 -= 2;
    goto LABEL_135;
  }
  WTF::StringImpl::destroy((WTF::StringImpl *)v22, v66);
  v31 = v79;
  v30 = 0;
LABEL_53:
  if (v31 != -1)
LABEL_54:
    ((void (*)(WTF::StringImpl **, int **))off_1E3238AF8[v31])(v80, &v78);
  return v30;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_setShadow2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4)
{
  unint64_t v7;
  JSC::VM *v8;
  double v9;
  float v10;
  unint64_t v11;
  JSC::VM *v12;
  double v13;
  float v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  float v18;
  unint64_t v19;
  JSC::VM *v20;
  double v21;
  float v22;
  float v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  int v28;
  int v29;
  int v30;
  int v31;
  WebCore::InspectorInstrumentation *v32;
  WebCore::ScriptExecutionContext *v33;
  uint64_t v34;
  WebCore::InspectorCanvasAgent *v35;
  WebCore::InspectorInstrumentation *v36;
  WebCore::ScriptExecutionContext *v37;
  uint64_t v38;
  WebCore::InspectorCanvasAgent *v39;
  WebCore::InspectorInstrumentation *v40;
  WebCore::ScriptExecutionContext *v41;
  uint64_t v42;
  WebCore::InspectorCanvasAgent *v43;
  WebCore::InspectorInstrumentation *v44;
  WebCore::ScriptExecutionContext *v45;
  uint64_t v46;
  WebCore::InspectorCanvasAgent *v47;
  WebCore::InspectorInstrumentation *v48;
  WebCore::ScriptExecutionContext *v49;
  uint64_t v50;
  WebCore::InspectorCanvasAgent *v51;
  WebCore::InspectorInstrumentation *v52;
  WebCore::ScriptExecutionContext *v53;
  uint64_t v54;
  uint64_t v55;
  _DWORD *v56;
  _DWORD *v57;
  _DWORD *v58;
  _DWORD *v59;
  _DWORD *v60;
  WTF::StringImpl *v61;
  int v62;
  JSC::VM *v63;
  double v64;
  JSC::VM *v65;
  double v66;
  JSC::VM *v67;
  double v68;
  JSC::VM *v69;
  double v70;
  double v71;
  _QWORD v72[2];
  WTF::StringImpl *v73;
  _QWORD v74[2];
  char v75;
  _DWORD *v76;
  char v77;
  _DWORD *v78;
  char v79;
  _DWORD *v80;
  char v81;
  _DWORD *v82;
  char v83;
  uint64_t v84;

  v84 = *MEMORY[0x1E0C80C00];
  v7 = *((_QWORD *)a2 + 6);
  v74[0] = v7;
  v8 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v7 >= 0xFFFE000000000000)
  {
    v9 = (double)(int)v7;
  }
  else if (v7 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v63 = v8;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v74, this);
    v8 = v63;
    v9 = v64;
  }
  else
  {
    *(_QWORD *)&v9 = v7 - 0x2000000000000;
  }
  if (*((_DWORD *)v8 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v8) & 1) != 0)
    return 0;
  if (v9 < -3.40282347e38)
  {
    *(float *)&v28 = -INFINITY;
  }
  else
  {
    if (v9 <= 3.40282347e38)
    {
      v10 = v9;
      goto LABEL_8;
    }
    *(float *)&v28 = INFINITY;
  }
  v10 = *(float *)&v28;
LABEL_8:
  v11 = *((_QWORD *)a2 + 7);
  v74[0] = v11;
  v12 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v11 >= 0xFFFE000000000000)
  {
    v13 = (double)(int)v11;
  }
  else if (v11 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v65 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v74, this);
    v12 = v65;
    v13 = v66;
  }
  else
  {
    *(_QWORD *)&v13 = v11 - 0x2000000000000;
  }
  if (*((_DWORD *)v12 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v12) & 1) != 0)
    return 0;
  if (v13 < -3.40282347e38)
  {
    *(float *)&v29 = -INFINITY;
  }
  else
  {
    if (v13 <= 3.40282347e38)
    {
      v14 = v13;
      goto LABEL_15;
    }
    *(float *)&v29 = INFINITY;
  }
  v14 = *(float *)&v29;
LABEL_15:
  v15 = *((_QWORD *)a2 + 8);
  v74[0] = v15;
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v15 >= 0xFFFE000000000000)
  {
    v17 = (double)(int)v15;
  }
  else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v67 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v74, this);
    v16 = v67;
    v17 = v68;
  }
  else
  {
    *(_QWORD *)&v17 = v15 - 0x2000000000000;
  }
  if (*((_DWORD *)v16 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v16) & 1) != 0)
    return 0;
  if (v17 < -3.40282347e38)
  {
    *(float *)&v30 = -INFINITY;
  }
  else
  {
    if (v17 <= 3.40282347e38)
    {
      v18 = v17;
      goto LABEL_22;
    }
    *(float *)&v30 = INFINITY;
  }
  v18 = *(float *)&v30;
LABEL_22:
  v19 = *((_QWORD *)a2 + 9);
  v74[0] = v19;
  v20 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v19 >= 0xFFFE000000000000)
  {
    v21 = (double)(int)v19;
  }
  else if (v19 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v69 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v74, this);
    v20 = v69;
    v21 = v70;
  }
  else
  {
    *(_QWORD *)&v21 = v19 - 0x2000000000000;
  }
  if (*((_DWORD *)v20 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v20) & 1) != 0)
    return 0;
  if (v21 < -3.40282347e38)
  {
    *(float *)&v31 = -INFINITY;
LABEL_68:
    v22 = *(float *)&v31;
    goto LABEL_29;
  }
  if (v21 > 3.40282347e38)
  {
    *(float *)&v31 = INFINITY;
    goto LABEL_68;
  }
  v22 = v21;
LABEL_29:
  v23 = 1.0;
  if ((unint64_t)(*((int *)a2 + 8) - 6) > 0xFFFFFFFFFFFFFFFALL)
    goto LABEL_38;
  v24 = *((_QWORD *)a2 + 10);
  if (v24 == 10)
    goto LABEL_38;
  v74[0] = *((_QWORD *)a2 + 10);
  v25 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v24 >= 0xFFFE000000000000)
  {
    v26 = (double)(int)v24;
  }
  else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v74, this);
    v26 = v71;
  }
  else
  {
    *(_QWORD *)&v26 = v24 - 0x2000000000000;
  }
  if (*((_DWORD *)v25 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v25) & 1) != 0)
    return 0;
  if (v26 < -3.40282347e38)
  {
    *(float *)&v62 = -INFINITY;
LABEL_121:
    v23 = *(float *)&v62;
    goto LABEL_38;
  }
  if (v26 > 3.40282347e38)
  {
    *(float *)&v62 = INFINITY;
    goto LABEL_121;
  }
  v23 = v26;
LABEL_38:
  if (*((_BYTE *)a3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v73 = (WTF::StringImpl *)v74[0];
    v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v32
      && (v34 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v33)) != 0
      && (v35 = *(WebCore::InspectorCanvasAgent **)(v34 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v35, a3, v10, (uint64_t)v74);
    }
    else
    {
      LOBYTE(v74[0]) = 0;
      v75 = 0;
    }
    v36 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v36
      && (v38 = WebCore::InspectorInstrumentation::instrumentingAgents(v36, v37)) != 0
      && (v39 = *(WebCore::InspectorCanvasAgent **)(v38 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v39, a3, v14, (uint64_t)&v76);
    }
    else
    {
      LOBYTE(v76) = 0;
      v77 = 0;
    }
    v40 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v40
      && (v42 = WebCore::InspectorInstrumentation::instrumentingAgents(v40, v41)) != 0
      && (v43 = *(WebCore::InspectorCanvasAgent **)(v42 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v43, a3, v18, (uint64_t)&v78);
    }
    else
    {
      LOBYTE(v78) = 0;
      v79 = 0;
    }
    v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v44
      && (v46 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, v45)) != 0
      && (v47 = *(WebCore::InspectorCanvasAgent **)(v46 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v47, a3, v22, (uint64_t)&v80);
    }
    else
    {
      LOBYTE(v80) = 0;
      v81 = 0;
    }
    v48 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v48
      && (v50 = WebCore::InspectorInstrumentation::instrumentingAgents(v48, v49)) != 0
      && (v51 = *(WebCore::InspectorCanvasAgent **)(v50 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v51, a3, v23, (uint64_t)&v82);
    }
    else
    {
      LOBYTE(v82) = 0;
      v83 = 0;
    }
    v72[0] = v74;
    v72[1] = 5;
    v52 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v52)
    {
      v54 = WebCore::InspectorInstrumentation::instrumentingAgents(v52, v53);
      if (v54)
      {
        v55 = *(_QWORD *)(v54 + 96);
        if (v55)
          WebCore::InspectorCanvasAgent::recordAction(v55, a3, (const WTF::StringImpl *)&v73, v72);
      }
    }
    if (v83)
    {
      v56 = v82;
      v82 = 0;
      if (v56)
      {
        if (*v56 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v56;
      }
    }
    if (v81)
    {
      v57 = v80;
      v80 = 0;
      if (v57)
      {
        if (*v57 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v57;
      }
    }
    if (v79)
    {
      v58 = v78;
      v78 = 0;
      if (v58)
      {
        if (*v58 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v58;
      }
    }
    if (v77)
    {
      v59 = v76;
      v76 = 0;
      if (v59)
      {
        if (*v59 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v59;
      }
    }
    if (v75)
    {
      v60 = (_DWORD *)v74[0];
      v74[0] = 0;
      if (v60)
      {
        if (*v60 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v60;
      }
    }
    v61 = v73;
    v73 = 0;
    if (v61)
    {
      if (*(_DWORD *)v61 == 2)
        WTF::StringImpl::destroy(v61, v53);
      else
        *(_DWORD *)v61 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::setShadow(a3, v10, v14, v18, v22, v23);
  return 10;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_drawImage1Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4)
{
  JSC::VM *v7;
  int v8;
  unint64_t v9;
  JSC::VM *v10;
  double v11;
  unint64_t v12;
  JSC::VM *v13;
  double v14;
  uint64_t v15;
  float v16;
  float v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  WebCore::InspectorInstrumentation *v21;
  WebCore::ScriptExecutionContext *v22;
  uint64_t v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  WebCore::InspectorInstrumentation *v27;
  WebCore::ScriptExecutionContext *v28;
  uint64_t v29;
  WebCore::InspectorCanvasAgent *v30;
  WebCore::InspectorInstrumentation *v31;
  WebCore::ScriptExecutionContext *v32;
  uint64_t v33;
  WebCore::InspectorCanvasAgent *v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  uint64_t v38;
  _DWORD *v39;
  _DWORD *v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  JSC::VM *v43;
  double v44;
  double v45;
  JSC::VM *v46;
  WTF::StringImpl **v47;
  WTF::StringImpl *v48;
  char v49;
  WTF::StringImpl *v50;
  int v51;
  float v52;
  float v53;
  WTF::StringImpl **v54;
  char v55[8];
  uint64_t v56;
  unsigned int v57;
  int v58;
  WTF::StringImpl *v59;
  WTF::StringImpl *v60;
  float *v61;
  _QWORD v62[2];
  float *v63;
  _QWORD v64[2];
  float *v65;
  uint64_t v66;

  v66 = *MEMORY[0x1E0C80C00];
  v7 = (JSC::VM *)*((_QWORD *)this + 7);
  v46 = v7;
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLImageElement>,WebCore::IDLInterface<WebCore::SVGImageElement>,WebCore::IDLInterface<WebCore::HTMLCanvasElement>,WebCore::IDLInterface<WebCore::ImageBitmap>,WebCore::IDLInterface<WebCore::CSSStyleImageValue>,WebCore::IDLInterface<WebCore::OffscreenCanvas>,WebCore::IDLInterface<WebCore::HTMLVideoElement>,WebCore::IDLInterface<WebCore::WebCodecsVideoFrame>>>::convert((uint64_t)this, *((_QWORD *)a2 + 6), (uint64_t)v55);
  v8 = v58;
  if (!v58)
  {
    v9 = *((_QWORD *)a2 + 7);
    v59 = (WTF::StringImpl *)v9;
    v10 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v9 >= 0xFFFE000000000000)
    {
      v11 = (double)(int)v9;
    }
    else if (v9 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v43 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v59, this);
      v10 = v43;
      v11 = v44;
    }
    else
    {
      *(_QWORD *)&v11 = v9 - 0x2000000000000;
    }
    if (*((_DWORD *)v10 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v10))
    {
      v19 = 0;
      goto LABEL_19;
    }
    v12 = *((_QWORD *)a2 + 8);
    v59 = (WTF::StringImpl *)v12;
    v13 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v12 >= 0xFFFE000000000000)
    {
      v14 = (double)(int)v12;
    }
    else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v59, this);
      v14 = v45;
    }
    else
    {
      *(_QWORD *)&v14 = v12 - 0x2000000000000;
    }
    if (*((_DWORD *)v13 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v13))
    {
LABEL_79:
      v19 = 0;
      goto LABEL_19;
    }
    if (*((_BYTE *)a3 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v50 = v59;
      if (v58)
        goto LABEL_83;
      v21 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
      if (v21
        && (v23 = WebCore::InspectorInstrumentation::instrumentingAgents(v21, v22)) != 0
        && (v24 = *(_QWORD *)(v23 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v24, (uint64_t)a3, (uint64_t)&v56);
      }
      else
      {
        LOBYTE(v59) = 0;
        LOBYTE(v61) = 0;
      }
      v27 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
      if (v27
        && (v29 = WebCore::InspectorInstrumentation::instrumentingAgents(v27, v28)) != 0
        && (v30 = *(WebCore::InspectorCanvasAgent **)(v29 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v30, a3, v11, (uint64_t)v62);
      }
      else
      {
        LOBYTE(v62[0]) = 0;
        LOBYTE(v63) = 0;
      }
      v31 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
      if (v31
        && (v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v31, v32)) != 0
        && (v34 = *(WebCore::InspectorCanvasAgent **)(v33 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v34, a3, v14, (uint64_t)v64);
      }
      else
      {
        LOBYTE(v64[0]) = 0;
        LOBYTE(v65) = 0;
      }
      v47 = &v59;
      v48 = (WTF::StringImpl *)3;
      v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
      if (v35)
      {
        v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36);
        if (v37)
        {
          v38 = *(_QWORD *)(v37 + 96);
          if (v38)
            WebCore::InspectorCanvasAgent::recordAction(v38, a3, (const WTF::StringImpl *)&v50, &v47);
        }
      }
      if ((_BYTE)v65)
      {
        v39 = (_DWORD *)v64[0];
        v64[0] = 0;
        if (v39)
        {
          if (*v39 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v39;
        }
      }
      if ((_BYTE)v63)
      {
        v40 = (_DWORD *)v62[0];
        v62[0] = 0;
        if (v40)
        {
          if (*v40 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v40;
        }
      }
      if ((_BYTE)v61)
      {
        v41 = v59;
        v59 = 0;
        if (v41)
        {
          if (*(_DWORD *)v41 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*(_DWORD *)v41;
        }
      }
      v42 = v50;
      v50 = 0;
      if (v42)
      {
        if (*(_DWORD *)v42 == 2)
          WTF::StringImpl::destroy(v42, v36);
        else
          *(_DWORD *)v42 -= 2;
      }
    }
    if (!v58)
    {
      LOBYTE(v50) = 0;
      v51 = -1;
      v15 = v57;
      if (v57 != -1)
      {
        ((void (*)(WTF::StringImpl **, WTF::StringImpl **, uint64_t *))off_1E32496B8[v57])(&v59, &v50, &v56);
        v51 = v15;
      }
      v16 = v11;
      v17 = v14;
      v52 = v17;
      v53 = v16;
      v59 = a3;
      v60 = (WTF::StringImpl *)&v53;
      v61 = &v52;
      v62[0] = a3;
      v62[1] = &v53;
      v63 = &v52;
      v64[0] = a3;
      v64[1] = &v53;
      v65 = &v52;
      if ((_DWORD)v15 != -1)
      {
        v54 = &v59;
        ((void (*)(WTF::StringImpl ***__return_ptr, WTF::StringImpl ***, WTF::StringImpl **))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore28CanvasRenderingContext2DBase9drawImageEONS_7variantIJNS6_6RefPtrINS8_16HTMLImageElementENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15SVGImageElementENSD_ISI_EENSF_ISI_EEEENSB_INS8_17HTMLCanvasElementENSD_ISM_EENSF_ISM_EEEENSB_INS8_11ImageBitmapENSD_ISQ_EENSF_ISQ_EEEENSB_INS8_18CSSStyleImageValueENSD_ISU_EENSF_ISU_EEEENSB_INS8_15OffscreenCanvasENSD_ISY_EENSF_ISY_EEEENSB_INS8_16HTMLVideoElementENSD_IS12_EENSF_IS12_EEEENSB_INS8_19WebCodecsVideoFrameENSD_IS16_EENSF_IS16_EEEEEEEffE3__0JZNS9_9drawImageES1B_ffE3__1ZNS9_9drawImageES1B_ffE3__2EEEEEJRNS0_6__implIJSH_SL_SP_ST_SX_S11_S15_S19_EEEEEEDcOT_DpOT0____fmatrix[v15])(&v47, &v54, &v50);
        if (v51 != -1)
          ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3249638[v51])(&v59, &v50);
        if (!v49)
        {
          v19 = 10;
LABEL_19:
          v8 = v58;
          goto LABEL_20;
        }
        LOBYTE(v59) = (_BYTE)v47;
        v25 = v48;
        v48 = 0;
        v60 = v25;
        if (!*((_QWORD *)v7 + 2))
        {
          WebCore::propagateExceptionSlowPath(this, &v46, (unsigned __int8 *)&v59);
          v25 = v60;
        }
        v60 = 0;
        if (v25)
        {
          if (*(_DWORD *)v25 == 2)
            WTF::StringImpl::destroy(v25, v18);
          else
            *(_DWORD *)v25 -= 2;
        }
        if (v49)
        {
          v26 = v48;
          v48 = 0;
          if (v26)
          {
            if (*(_DWORD *)v26 != 2)
            {
              v19 = 0;
              *(_DWORD *)v26 -= 2;
              goto LABEL_19;
            }
            WTF::StringImpl::destroy(v26, v18);
          }
        }
        goto LABEL_79;
      }
    }
LABEL_83:
    std::__throw_bad_variant_access[abi:sn180100]();
  }
  v19 = 0;
LABEL_20:
  if (v8 != -1)
    ((void (*)(WTF::StringImpl **, uint64_t *))off_1E32496F8[v8])(&v59, &v56);
  return v19;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_drawImage3Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4)
{
  JSC::VM *v7;
  int v8;
  unint64_t v9;
  JSC::VM *v10;
  double v11;
  unint64_t v12;
  JSC::VM *v13;
  double v14;
  unint64_t v15;
  JSC::VM *v16;
  double v17;
  unint64_t v18;
  JSC::VM *v19;
  double v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  unint64_t v27;
  JSC::VM *v28;
  double v29;
  unint64_t v30;
  JSC::VM *v31;
  double v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  WTF::StringImpl *v41;
  uint64_t v42;
  WebCore::InspectorInstrumentation *v44;
  WebCore::ScriptExecutionContext *v45;
  uint64_t v46;
  uint64_t v47;
  WTF::StringImpl *v48;
  WTF::StringImpl *v49;
  WebCore::InspectorInstrumentation *v50;
  WebCore::ScriptExecutionContext *v51;
  uint64_t v52;
  WebCore::InspectorCanvasAgent *v53;
  WebCore::InspectorInstrumentation *v54;
  WebCore::ScriptExecutionContext *v55;
  uint64_t v56;
  WebCore::InspectorCanvasAgent *v57;
  WebCore::InspectorInstrumentation *v58;
  WebCore::ScriptExecutionContext *v59;
  uint64_t v60;
  WebCore::InspectorCanvasAgent *v61;
  WebCore::InspectorInstrumentation *v62;
  WebCore::ScriptExecutionContext *v63;
  uint64_t v64;
  WebCore::InspectorCanvasAgent *v65;
  WebCore::InspectorInstrumentation *v66;
  WebCore::ScriptExecutionContext *v67;
  uint64_t v68;
  WebCore::InspectorCanvasAgent *v69;
  WebCore::InspectorInstrumentation *v70;
  WebCore::ScriptExecutionContext *v71;
  uint64_t v72;
  WebCore::InspectorCanvasAgent *v73;
  WebCore::InspectorInstrumentation *v74;
  WebCore::ScriptExecutionContext *v75;
  uint64_t v76;
  WebCore::InspectorCanvasAgent *v77;
  WebCore::InspectorInstrumentation *v78;
  WebCore::ScriptExecutionContext *v79;
  uint64_t v80;
  WebCore::InspectorCanvasAgent *v81;
  WebCore::InspectorInstrumentation *v82;
  WebCore::ScriptExecutionContext *v83;
  uint64_t v84;
  uint64_t v85;
  _DWORD *v86;
  _DWORD *v87;
  _DWORD *v88;
  _DWORD *v89;
  _DWORD *v90;
  _DWORD *v91;
  _DWORD *v92;
  _DWORD *v93;
  WTF::StringImpl *v94;
  WTF::StringImpl *v95;
  JSC::VM *v96;
  double v97;
  JSC::VM *v98;
  double v99;
  JSC::VM *v100;
  double v101;
  JSC::VM *v102;
  double v103;
  JSC::VM *v104;
  double v105;
  JSC::VM *v106;
  double v107;
  JSC::VM *v108;
  double v109;
  double v110;
  uint64_t v111;
  JSC::JSGlobalObject *v112;
  unint64_t v113;
  JSC::VM *v114;
  JSC::VM *v115;
  WTF::StringImpl **v116;
  WTF::StringImpl *v117;
  char v118;
  WTF::StringImpl *v119;
  int v120;
  float v121;
  float v122;
  float v123;
  float v124;
  float v125;
  float v126;
  float v127;
  float v128;
  WTF::StringImpl **v129;
  WTF::StringImpl *v130;
  WTF::StringImpl *v131;
  float *v132;
  _QWORD v133[2];
  float *v134;
  _QWORD v135[2];
  float *v136;
  _DWORD *v137;
  char v138;
  _DWORD *v139;
  char v140;
  _DWORD *v141;
  char v142;
  _DWORD *v143;
  char v144;
  _DWORD *v145;
  char v146;
  _DWORD *v147;
  char v148;
  char v149[8];
  _BYTE v150[16];
  int v151;
  uint64_t v152;

  v152 = *MEMORY[0x1E0C80C00];
  v7 = (JSC::VM *)*((_QWORD *)this + 7);
  v115 = v7;
  WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLImageElement>,WebCore::IDLInterface<WebCore::SVGImageElement>,WebCore::IDLInterface<WebCore::HTMLCanvasElement>,WebCore::IDLInterface<WebCore::ImageBitmap>,WebCore::IDLInterface<WebCore::CSSStyleImageValue>,WebCore::IDLInterface<WebCore::OffscreenCanvas>,WebCore::IDLInterface<WebCore::HTMLVideoElement>,WebCore::IDLInterface<WebCore::WebCodecsVideoFrame>>>::convert((uint64_t)this, *((_QWORD *)a2 + 6), (uint64_t)v149);
  v8 = v151;
  if (v151)
  {
    v42 = 0;
    goto LABEL_41;
  }
  v9 = *((_QWORD *)a2 + 7);
  v130 = (WTF::StringImpl *)v9;
  v10 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v9 >= 0xFFFE000000000000)
  {
    v11 = (double)(int)v9;
  }
  else if (v9 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v96 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v130, this);
    v10 = v96;
    v11 = v97;
  }
  else
  {
    *(_QWORD *)&v11 = v9 - 0x2000000000000;
  }
  if (*((_DWORD *)v10 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v10))
  {
    v42 = 0;
    goto LABEL_40;
  }
  v12 = *((_QWORD *)a2 + 8);
  v130 = (WTF::StringImpl *)v12;
  v13 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v12 >= 0xFFFE000000000000)
  {
    v14 = (double)(int)v12;
  }
  else if (v12 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v98 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v130, this);
    v13 = v98;
    v14 = v99;
  }
  else
  {
    *(_QWORD *)&v14 = v12 - 0x2000000000000;
  }
  if (*((_DWORD *)v13 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v13))
  {
    v42 = 0;
    goto LABEL_40;
  }
  v15 = *((_QWORD *)a2 + 9);
  v130 = (WTF::StringImpl *)v15;
  v16 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v15 >= 0xFFFE000000000000)
  {
    v17 = (double)(int)v15;
  }
  else if (v15 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v100 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v130, this);
    v16 = v100;
    v17 = v101;
  }
  else
  {
    *(_QWORD *)&v17 = v15 - 0x2000000000000;
  }
  if (*((_DWORD *)v16 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v16))
  {
    v42 = 0;
    goto LABEL_40;
  }
  v18 = *((_QWORD *)a2 + 10);
  v130 = (WTF::StringImpl *)v18;
  v19 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v18 >= 0xFFFE000000000000)
  {
    v20 = (double)(int)v18;
  }
  else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v102 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v130, this);
    v19 = v102;
    v20 = v103;
  }
  else
  {
    *(_QWORD *)&v20 = v18 - 0x2000000000000;
  }
  if (*((_DWORD *)v19 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v19))
  {
    v42 = 0;
    goto LABEL_40;
  }
  v21 = *((_QWORD *)a2 + 11);
  v130 = (WTF::StringImpl *)v21;
  v22 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v21 >= 0xFFFE000000000000)
  {
    v23 = (double)(int)v21;
  }
  else if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v104 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v130, this);
    v22 = v104;
    v23 = v105;
  }
  else
  {
    *(_QWORD *)&v23 = v21 - 0x2000000000000;
  }
  if (*((_DWORD *)v22 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v22))
  {
    v42 = 0;
    goto LABEL_40;
  }
  v114 = v7;
  v24 = *((_QWORD *)a2 + 12);
  v130 = (WTF::StringImpl *)v24;
  v25 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v24 >= 0xFFFE000000000000)
  {
    v26 = (double)(int)v24;
  }
  else if (v24 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v106 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v130, this);
    v25 = v106;
    v26 = v107;
  }
  else
  {
    *(_QWORD *)&v26 = v24 - 0x2000000000000;
  }
  if (*((_DWORD *)v25 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v25))
  {
    v42 = 0;
    goto LABEL_40;
  }
  v27 = *((_QWORD *)a2 + 13);
  v130 = (WTF::StringImpl *)v27;
  v28 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v27 >= 0xFFFE000000000000)
  {
    v29 = (double)(int)v27;
  }
  else if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v108 = (JSC::VM *)*((_QWORD *)this + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v130, this);
    v28 = v108;
    v29 = v109;
  }
  else
  {
    *(_QWORD *)&v29 = v27 - 0x2000000000000;
  }
  if (*((_DWORD *)v28 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v28))
  {
    v42 = 0;
    goto LABEL_40;
  }
  v30 = *((_QWORD *)a2 + 14);
  v130 = (WTF::StringImpl *)v30;
  v31 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v30 >= 0xFFFE000000000000)
  {
    v32 = (double)(int)v30;
  }
  else if (v30 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v130, this);
    v32 = v110;
  }
  else
  {
    *(_QWORD *)&v32 = v30 - 0x2000000000000;
  }
  if (*((_DWORD *)v31 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v31))
  {
LABEL_178:
    v42 = 0;
    goto LABEL_40;
  }
  if (*((_BYTE *)a3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v119 = v130;
    if (v151)
      goto LABEL_188;
    v44 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v44
      && (v46 = WebCore::InspectorInstrumentation::instrumentingAgents(v44, v45)) != 0
      && (v47 = *(_QWORD *)(v46 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v47, (uint64_t)a3, (uint64_t)v150);
    }
    else
    {
      LOBYTE(v130) = 0;
      LOBYTE(v132) = 0;
    }
    v50 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v50
      && (v52 = WebCore::InspectorInstrumentation::instrumentingAgents(v50, v51)) != 0
      && (v53 = *(WebCore::InspectorCanvasAgent **)(v52 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v53, a3, v11, (uint64_t)v133);
    }
    else
    {
      LOBYTE(v133[0]) = 0;
      LOBYTE(v134) = 0;
    }
    v54 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v54
      && (v56 = WebCore::InspectorInstrumentation::instrumentingAgents(v54, v55)) != 0
      && (v57 = *(WebCore::InspectorCanvasAgent **)(v56 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v57, a3, v14, (uint64_t)v135);
    }
    else
    {
      LOBYTE(v135[0]) = 0;
      LOBYTE(v136) = 0;
    }
    v58 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v58
      && (v60 = WebCore::InspectorInstrumentation::instrumentingAgents(v58, v59)) != 0
      && (v61 = *(WebCore::InspectorCanvasAgent **)(v60 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v61, a3, v17, (uint64_t)&v137);
    }
    else
    {
      LOBYTE(v137) = 0;
      v138 = 0;
    }
    v62 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v62
      && (v64 = WebCore::InspectorInstrumentation::instrumentingAgents(v62, v63)) != 0
      && (v65 = *(WebCore::InspectorCanvasAgent **)(v64 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v65, a3, v20, (uint64_t)&v139);
    }
    else
    {
      LOBYTE(v139) = 0;
      v140 = 0;
    }
    v66 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v66
      && (v68 = WebCore::InspectorInstrumentation::instrumentingAgents(v66, v67)) != 0
      && (v69 = *(WebCore::InspectorCanvasAgent **)(v68 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v69, a3, v23, (uint64_t)&v141);
    }
    else
    {
      LOBYTE(v141) = 0;
      v142 = 0;
    }
    v70 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v70
      && (v72 = WebCore::InspectorInstrumentation::instrumentingAgents(v70, v71)) != 0
      && (v73 = *(WebCore::InspectorCanvasAgent **)(v72 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v73, a3, v26, (uint64_t)&v143);
    }
    else
    {
      LOBYTE(v143) = 0;
      v144 = 0;
    }
    v74 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v74
      && (v76 = WebCore::InspectorInstrumentation::instrumentingAgents(v74, v75)) != 0
      && (v77 = *(WebCore::InspectorCanvasAgent **)(v76 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v77, a3, v29, (uint64_t)&v145);
    }
    else
    {
      LOBYTE(v145) = 0;
      v146 = 0;
    }
    v78 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v78
      && (v80 = WebCore::InspectorInstrumentation::instrumentingAgents(v78, v79)) != 0
      && (v81 = *(WebCore::InspectorCanvasAgent **)(v80 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v81, a3, v32, (uint64_t)&v147);
    }
    else
    {
      LOBYTE(v147) = 0;
      v148 = 0;
    }
    v116 = &v130;
    v117 = (WTF::StringImpl *)9;
    v82 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v82)
    {
      v84 = WebCore::InspectorInstrumentation::instrumentingAgents(v82, v83);
      if (v84)
      {
        v85 = *(_QWORD *)(v84 + 96);
        if (v85)
          WebCore::InspectorCanvasAgent::recordAction(v85, a3, (const WTF::StringImpl *)&v119, &v116);
      }
    }
    if (v148)
    {
      v86 = v147;
      v147 = 0;
      if (v86)
      {
        if (*v86 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v86;
      }
    }
    if (v146)
    {
      v87 = v145;
      v145 = 0;
      if (v87)
      {
        if (*v87 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v87;
      }
    }
    if (v144)
    {
      v88 = v143;
      v143 = 0;
      if (v88)
      {
        if (*v88 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v88;
      }
    }
    if (v142)
    {
      v89 = v141;
      v141 = 0;
      if (v89)
      {
        if (*v89 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v89;
      }
    }
    if (v140)
    {
      v90 = v139;
      v139 = 0;
      if (v90)
      {
        if (*v90 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v90;
      }
    }
    if (v138)
    {
      v91 = v137;
      v137 = 0;
      if (v91)
      {
        if (*v91 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v91;
      }
    }
    if ((_BYTE)v136)
    {
      v92 = (_DWORD *)v135[0];
      v135[0] = 0;
      if (v92)
      {
        if (*v92 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v92;
      }
    }
    if ((_BYTE)v134)
    {
      v93 = (_DWORD *)v133[0];
      v133[0] = 0;
      if (v93)
      {
        if (*v93 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v93;
      }
    }
    if ((_BYTE)v132)
    {
      v94 = v130;
      v130 = 0;
      if (v94)
      {
        if (*(_DWORD *)v94 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*(_DWORD *)v94;
      }
    }
    v95 = v119;
    v119 = 0;
    if (v95)
    {
      if (*(_DWORD *)v95 == 2)
        WTF::StringImpl::destroy(v95, v83);
      else
        *(_DWORD *)v95 -= 2;
    }
  }
  WebCore::ConversionResult<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLImageElement>,WebCore::IDLInterface<WebCore::SVGImageElement>,WebCore::IDLInterface<WebCore::HTMLCanvasElement>,WebCore::IDLInterface<WebCore::ImageBitmap>,WebCore::IDLInterface<WebCore::CSSStyleImageValue>,WebCore::IDLInterface<WebCore::OffscreenCanvas>,WebCore::IDLInterface<WebCore::HTMLVideoElement>,WebCore::IDLInterface<WebCore::WebCodecsVideoFrame>>>::releaseReturnValue((uint64_t)&v119, (uint64_t)v149);
  v33 = v11;
  v34 = v14;
  v35 = v17;
  v127 = v34;
  v128 = v33;
  v36 = v20;
  v125 = v36;
  v126 = v35;
  v37 = v23;
  v38 = v26;
  v39 = v29;
  v123 = v38;
  v124 = v37;
  v40 = v32;
  v121 = v40;
  v122 = v39;
  v130 = a3;
  v131 = (WTF::StringImpl *)&v128;
  v132 = &v127;
  v133[0] = &v126;
  v133[1] = &v125;
  v134 = &v124;
  v135[0] = &v123;
  v135[1] = &v122;
  v136 = &v121;
  if (v120 == -1)
  {
LABEL_188:
    v111 = std::__throw_bad_variant_access[abi:sn180100]();
    return WebCore::convert<WebCore::IDLUnrestrictedDouble>(v111, v112, v113);
  }
  v129 = &v130;
  ((void (*)(WTF::StringImpl ***__return_ptr, WTF::StringImpl ***, WTF::StringImpl **))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100INS1_9__variant15__value_visitorIN3WTF7VisitorIZN7WebCore28CanvasRenderingContext2DBase9drawImageEONS_7variantIJNS6_6RefPtrINS8_16HTMLImageElementENS6_12RawPtrTraitsISC_EENS6_21DefaultRefDerefTraitsISC_EEEENSB_INS8_15SVGImageElementENSD_ISI_EENSF_ISI_EEEENSB_INS8_17HTMLCanvasElementENSD_ISM_EENSF_ISM_EEEENSB_INS8_11ImageBitmapENSD_ISQ_EENSF_ISQ_EEEENSB_INS8_18CSSStyleImageValueENSD_ISU_EENSF_ISU_EEEENSB_INS8_15OffscreenCanvasENSD_ISY_EENSF_ISY_EEEENSB_INS8_16HTMLVideoElementENSD_IS12_EENSF_IS12_EEEENSB_INS8_19WebCodecsVideoFrameENSD_IS16_EENSF_IS16_EEEEEEEffffffffE3__0JEEEEEJRNS0_6__implIJSH_SL_SP_ST_SX_S11_S15_S19_EEEEEEDcOT_DpOT0____fmatrix[v120])(&v116, &v129, &v119);
  if (v120 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3249638[v120])(&v130, &v119);
  if (v118)
  {
    LOBYTE(v130) = (_BYTE)v116;
    v48 = v117;
    v117 = 0;
    v131 = v48;
    if (!*((_QWORD *)v114 + 2))
    {
      WebCore::propagateExceptionSlowPath(this, &v115, (unsigned __int8 *)&v130);
      v48 = v131;
    }
    v131 = 0;
    if (v48)
    {
      if (*(_DWORD *)v48 == 2)
        WTF::StringImpl::destroy(v48, v41);
      else
        *(_DWORD *)v48 -= 2;
    }
    if (v118)
    {
      v49 = v117;
      v117 = 0;
      if (v49)
      {
        if (*(_DWORD *)v49 != 2)
        {
          v42 = 0;
          *(_DWORD *)v49 -= 2;
          goto LABEL_40;
        }
        WTF::StringImpl::destroy(v49, v41);
      }
    }
    goto LABEL_178;
  }
  v42 = 10;
LABEL_40:
  v8 = v151;
LABEL_41:
  if (v8 != -1)
    ((void (*)(WTF::StringImpl **, _BYTE *))off_1E32496F8[v8])(&v130, v150);
  return v42;
}

uint64_t WebCore::convert<WebCore::IDLUnrestrictedDouble>(uint64_t a1, JSC::JSGlobalObject *a2, unint64_t a3)
{
  uint64_t result;
  double v5;
  int v6;
  double v7;
  uint64_t v8;
  unint64_t v9;

  v9 = a3;
  result = *((_QWORD *)a2 + 7);
  if (a3 >= 0xFFFE000000000000)
  {
    v5 = (double)(int)a3;
  }
  else if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v8 = *((_QWORD *)a2 + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v9, a2);
    result = v8;
    v5 = v7;
  }
  else
  {
    *(_QWORD *)&v5 = a3 - 0x2000000000000;
  }
  if (*(_DWORD *)(result + 80)
    && (result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)result), (result & 1) != 0))
  {
    v6 = 1;
  }
  else
  {
    v6 = 0;
    *(double *)a1 = v5;
  }
  *(_DWORD *)(a1 + 8) = v6;
  return result;
}

void WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLImageElement>,WebCore::IDLInterface<WebCore::SVGImageElement>,WebCore::IDLInterface<WebCore::HTMLCanvasElement>,WebCore::IDLInterface<WebCore::ImageBitmap>,WebCore::IDLInterface<WebCore::CSSStyleImageValue>,WebCore::IDLInterface<WebCore::OffscreenCanvas>,WebCore::IDLInterface<WebCore::HTMLVideoElement>,WebCore::IDLInterface<WebCore::WebCodecsVideoFrame>>>::convert(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __n128 v4;
  int v5;
  int v6;
  _BYTE v7[24];
  _BYTE v8[8];
  int v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13[3];

  v11 = *(_QWORD *)(a1 + 56);
  v8[0] = 0;
  v10 = 0;
  v12 = a2;
  v13[0] = (uint64_t)v8;
  v13[1] = a1;
  v13[2] = (uint64_t)&v12;
  v4 = _ZN7WebCore6Detail11forEachArgsIZNS_9ConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_16HTMLImageElementEEENS4_INS_15SVGImageElementEEENS4_INS_17HTMLCanvasElementEEENS4_INS_11ImageBitmapEEENS4_INS_18CSSStyleImageValueEEENS4_INS_15OffscreenCanvasEEENS4_INS_16HTMLVideoElementEEENS4_INS_19WebCodecsVideoFrameEEEEEEE7convertERN3JSC14JSGlobalObjectENSN_7JSValueEEUlTyvE_JS6_S8_SA_SC_SE_SG_SI_SK_EEET_SS_(v13, (uint64_t)v7);
  if (v10)
  {
    *(_BYTE *)(a3 + 8) = 0;
    *(_DWORD *)(a3 + 16) = -1;
    v5 = v9;
    if (v9 == -1)
    {
      *(_DWORD *)(a3 + 24) = 0;
    }
    else
    {
      ((void (*)(uint64_t *, __n128))off_1E32496B8[v9])(v13, v4);
      *(_DWORD *)(a3 + 16) = v5;
      v6 = v10;
      *(_DWORD *)(a3 + 24) = 0;
      if (v6)
      {
        if (v9 != -1)
          ((void (*)(uint64_t *, _BYTE *))off_1E3249638[v9])(v13, v8);
      }
    }
  }
  else
  {
    JSC::throwTypeError();
    *(_DWORD *)(a3 + 24) = 1;
  }
}

__n128 _ZN7WebCore6Detail11forEachArgsIZNS_9ConverterINS_8IDLUnionIJNS_12IDLInterfaceINS_16HTMLImageElementEEENS4_INS_15SVGImageElementEEENS4_INS_17HTMLCanvasElementEEENS4_INS_11ImageBitmapEEENS4_INS_18CSSStyleImageValueEEENS4_INS_15OffscreenCanvasEEENS4_INS_16HTMLVideoElementEEENS4_INS_19WebCodecsVideoFrameEEEEEEE7convertERN3JSC14JSGlobalObjectENSN_7JSValueEEUlTyvE_JS6_S8_SA_SC_SE_SG_SI_SK_EEET_SS_@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL4 v7;
  char **v8;
  BOOL v9;
  uint64_t v10;
  __n128 result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  char v22;

  v4 = *a1;
  if (!*(_BYTE *)(*a1 + 16))
  {
    v5 = *(_QWORD *)a1[2];
    if ((v5 & 0xFFFE000000000002) != 0)
      goto LABEL_22;
    v6 = *(unsigned int *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C);
    v7 = *(_DWORD *)(16 * (*(_DWORD *)v5 & 0xFFFFFFFE) + 0x4C) != 0;
    v8 = (char **)(16 * v6);
    if ((_DWORD)v6)
      v9 = v8 == &WebCore::JSHTMLImageElement::s_info;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSHTMLImageElement::s_info && v8 != 0);
    }
    if (v7 && (v10 = *(_QWORD *)(v5 + 24)) != 0)
    {
      *(_DWORD *)(v10 + 24) += 2;
      *(_QWORD *)v4 = v10;
      *(_DWORD *)(v4 + 8) = 0;
      *(_BYTE *)(v4 + 16) = 1;
    }
    else
    {
LABEL_22:
      v13 = WebCore::JSSVGImageElement::toWrapped(*(_QWORD *)(a1[1] + 56), *(_QWORD *)a1[2]);
      v4 = *a1;
      if (v13)
      {
        *(_DWORD *)(v13 + 24) += 2;
        v20 = v13;
        v21 = 1;
        std::optional<std::variant<WTF::RefPtr<WebCore::HTMLImageElement,WTF::RawPtrTraits<WebCore::HTMLImageElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLImageElement>>,WTF::RefPtr<WebCore::SVGImageElement,WTF::RawPtrTraits<WebCore::SVGImageElement>,WTF::DefaultRefDerefTraits<WebCore::SVGImageElement>>,WTF::RefPtr<WebCore::HTMLCanvasElement,WTF::RawPtrTraits<WebCore::HTMLCanvasElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLCanvasElement>>,WTF::RefPtr<WebCore::ImageBitmap,WTF::RawPtrTraits<WebCore::ImageBitmap>,WTF::DefaultRefDerefTraits<WebCore::ImageBitmap>>,WTF::RefPtr<WebCore::CSSStyleImageValue,WTF::RawPtrTraits<WebCore::CSSStyleImageValue>,WTF::DefaultRefDerefTraits<WebCore::CSSStyleImageValue>>,WTF::RefPtr<WebCore::OffscreenCanvas,WTF::RawPtrTraits<WebCore::OffscreenCanvas>,WTF::DefaultRefDerefTraits<WebCore::OffscreenCanvas>>,WTF::RefPtr<WebCore::HTMLVideoElement,WTF::RawPtrTraits<WebCore::HTMLVideoElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLVideoElement>>,WTF::RefPtr<WebCore::WebCodecsVideoFrame,WTF::RawPtrTraits<WebCore::WebCodecsVideoFrame>,WTF::DefaultRefDerefTraits<WebCore::WebCodecsVideoFrame>>>>::operator=[abi:sn180100]<std::variant<WTF::RefPtr<WebCore::HTMLImageElement,WTF::RawPtrTraits<WebCore::HTMLImageElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLImageElement>>,WTF::RefPtr<WebCore::SVGImageElement,WTF::RawPtrTraits<WebCore::SVGImageElement>,WTF::DefaultRefDerefTraits<WebCore::SVGImageElement>>,WTF::RefPtr<WebCore::HTMLCanvasElement,WTF::RawPtrTraits<WebCore::HTMLCanvasElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLCanvasElement>>,WTF::RefPtr<WebCore::ImageBitmap,WTF::RawPtrTraits<WebCore::ImageBitmap>,WTF::DefaultRefDerefTraits<WebCore::ImageBitmap>>,WTF::RefPtr<WebCore::CSSStyleImageValue,WTF::RawPtrTraits<WebCore::CSSStyleImageValue>,WTF::DefaultRefDerefTraits<WebCore::CSSStyleImageValue>>,WTF::RefPtr<WebCore::OffscreenCanvas,WTF::RawPtrTraits<WebCore::OffscreenCanvas>,WTF::DefaultRefDerefTraits<WebCore::OffscreenCanvas>>,WTF::RefPtr<WebCore::HTMLVideoElement,WTF::RawPtrTraits<WebCore::HTMLVideoElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLVideoElement>>,WTF::RefPtr<WebCore::WebCodecsVideoFrame,WTF::RawPtrTraits<WebCore::WebCodecsVideoFrame>,WTF::DefaultRefDerefTraits<WebCore::WebCodecsVideoFrame>>>,void>(v4, (uint64_t)&v20);
        if (v21 != -1)
          ((void (*)(char *, unint64_t *))off_1E3249638[v21])(&v22, &v20);
        v4 = *a1;
      }
    }
  }
  if (!*(_BYTE *)(v4 + 16))
  {
    v14 = WebCore::JSHTMLCanvasElement::toWrapped(*(_QWORD *)(a1[1] + 56), *(_QWORD *)a1[2]);
    v4 = *a1;
    if (v14)
    {
      *(_DWORD *)(v14 + 24) += 2;
      v20 = v14;
      v21 = 2;
      std::optional<std::variant<WTF::RefPtr<WebCore::HTMLImageElement,WTF::RawPtrTraits<WebCore::HTMLImageElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLImageElement>>,WTF::RefPtr<WebCore::SVGImageElement,WTF::RawPtrTraits<WebCore::SVGImageElement>,WTF::DefaultRefDerefTraits<WebCore::SVGImageElement>>,WTF::RefPtr<WebCore::HTMLCanvasElement,WTF::RawPtrTraits<WebCore::HTMLCanvasElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLCanvasElement>>,WTF::RefPtr<WebCore::ImageBitmap,WTF::RawPtrTraits<WebCore::ImageBitmap>,WTF::DefaultRefDerefTraits<WebCore::ImageBitmap>>,WTF::RefPtr<WebCore::CSSStyleImageValue,WTF::RawPtrTraits<WebCore::CSSStyleImageValue>,WTF::DefaultRefDerefTraits<WebCore::CSSStyleImageValue>>,WTF::RefPtr<WebCore::OffscreenCanvas,WTF::RawPtrTraits<WebCore::OffscreenCanvas>,WTF::DefaultRefDerefTraits<WebCore::OffscreenCanvas>>,WTF::RefPtr<WebCore::HTMLVideoElement,WTF::RawPtrTraits<WebCore::HTMLVideoElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLVideoElement>>,WTF::RefPtr<WebCore::WebCodecsVideoFrame,WTF::RawPtrTraits<WebCore::WebCodecsVideoFrame>,WTF::DefaultRefDerefTraits<WebCore::WebCodecsVideoFrame>>>>::operator=[abi:sn180100]<std::variant<WTF::RefPtr<WebCore::HTMLImageElement,WTF::RawPtrTraits<WebCore::HTMLImageElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLImageElement>>,WTF::RefPtr<WebCore::SVGImageElement,WTF::RawPtrTraits<WebCore::SVGImageElement>,WTF::DefaultRefDerefTraits<WebCore::SVGImageElement>>,WTF::RefPtr<WebCore::HTMLCanvasElement,WTF::RawPtrTraits<WebCore::HTMLCanvasElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLCanvasElement>>,WTF::RefPtr<WebCore::ImageBitmap,WTF::RawPtrTraits<WebCore::ImageBitmap>,WTF::DefaultRefDerefTraits<WebCore::ImageBitmap>>,WTF::RefPtr<WebCore::CSSStyleImageValue,WTF::RawPtrTraits<WebCore::CSSStyleImageValue>,WTF::DefaultRefDerefTraits<WebCore::CSSStyleImageValue>>,WTF::RefPtr<WebCore::OffscreenCanvas,WTF::RawPtrTraits<WebCore::OffscreenCanvas>,WTF::DefaultRefDerefTraits<WebCore::OffscreenCanvas>>,WTF::RefPtr<WebCore::HTMLVideoElement,WTF::RawPtrTraits<WebCore::HTMLVideoElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLVideoElement>>,WTF::RefPtr<WebCore::WebCodecsVideoFrame,WTF::RawPtrTraits<WebCore::WebCodecsVideoFrame>,WTF::DefaultRefDerefTraits<WebCore::WebCodecsVideoFrame>>>,void>(v4, (uint64_t)&v20);
      if (v21 != -1)
        ((void (*)(char *, unint64_t *))off_1E3249638[v21])(&v22, &v20);
      v4 = *a1;
    }
  }
  if (!*(_BYTE *)(v4 + 16))
  {
    v15 = WebCore::JSImageBitmap::toWrapped(*(_QWORD *)(a1[1] + 56), *(_QWORD *)a1[2]);
    v4 = *a1;
    if (v15)
    {
      ++*(_DWORD *)(v15 + 8);
      v20 = v15;
      v21 = 3;
      std::optional<std::variant<WTF::RefPtr<WebCore::HTMLImageElement,WTF::RawPtrTraits<WebCore::HTMLImageElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLImageElement>>,WTF::RefPtr<WebCore::SVGImageElement,WTF::RawPtrTraits<WebCore::SVGImageElement>,WTF::DefaultRefDerefTraits<WebCore::SVGImageElement>>,WTF::RefPtr<WebCore::HTMLCanvasElement,WTF::RawPtrTraits<WebCore::HTMLCanvasElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLCanvasElement>>,WTF::RefPtr<WebCore::ImageBitmap,WTF::RawPtrTraits<WebCore::ImageBitmap>,WTF::DefaultRefDerefTraits<WebCore::ImageBitmap>>,WTF::RefPtr<WebCore::CSSStyleImageValue,WTF::RawPtrTraits<WebCore::CSSStyleImageValue>,WTF::DefaultRefDerefTraits<WebCore::CSSStyleImageValue>>,WTF::RefPtr<WebCore::OffscreenCanvas,WTF::RawPtrTraits<WebCore::OffscreenCanvas>,WTF::DefaultRefDerefTraits<WebCore::OffscreenCanvas>>,WTF::RefPtr<WebCore::HTMLVideoElement,WTF::RawPtrTraits<WebCore::HTMLVideoElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLVideoElement>>,WTF::RefPtr<WebCore::WebCodecsVideoFrame,WTF::RawPtrTraits<WebCore::WebCodecsVideoFrame>,WTF::DefaultRefDerefTraits<WebCore::WebCodecsVideoFrame>>>>::operator=[abi:sn180100]<std::variant<WTF::RefPtr<WebCore::HTMLImageElement,WTF::RawPtrTraits<WebCore::HTMLImageElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLImageElement>>,WTF::RefPtr<WebCore::SVGImageElement,WTF::RawPtrTraits<WebCore::SVGImageElement>,WTF::DefaultRefDerefTraits<WebCore::SVGImageElement>>,WTF::RefPtr<WebCore::HTMLCanvasElement,WTF::RawPtrTraits<WebCore::HTMLCanvasElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLCanvasElement>>,WTF::RefPtr<WebCore::ImageBitmap,WTF::RawPtrTraits<WebCore::ImageBitmap>,WTF::DefaultRefDerefTraits<WebCore::ImageBitmap>>,WTF::RefPtr<WebCore::CSSStyleImageValue,WTF::RawPtrTraits<WebCore::CSSStyleImageValue>,WTF::DefaultRefDerefTraits<WebCore::CSSStyleImageValue>>,WTF::RefPtr<WebCore::OffscreenCanvas,WTF::RawPtrTraits<WebCore::OffscreenCanvas>,WTF::DefaultRefDerefTraits<WebCore::OffscreenCanvas>>,WTF::RefPtr<WebCore::HTMLVideoElement,WTF::RawPtrTraits<WebCore::HTMLVideoElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLVideoElement>>,WTF::RefPtr<WebCore::WebCodecsVideoFrame,WTF::RawPtrTraits<WebCore::WebCodecsVideoFrame>,WTF::DefaultRefDerefTraits<WebCore::WebCodecsVideoFrame>>>,void>(v4, (uint64_t)&v20);
      if (v21 != -1)
        ((void (*)(char *, unint64_t *))off_1E3249638[v21])(&v22, &v20);
      v4 = *a1;
    }
  }
  if (!*(_BYTE *)(v4 + 16))
  {
    v16 = WebCore::JSToWrappedOverloader<WebCore::CSSStyleImageValue,void>::toWrapped(*(_QWORD *)a1[2]);
    if (!v16)
      goto LABEL_38;
    ++*(_DWORD *)(v16 + 8);
    v20 = v16;
    v21 = 4;
    std::optional<std::variant<WTF::RefPtr<WebCore::HTMLImageElement,WTF::RawPtrTraits<WebCore::HTMLImageElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLImageElement>>,WTF::RefPtr<WebCore::SVGImageElement,WTF::RawPtrTraits<WebCore::SVGImageElement>,WTF::DefaultRefDerefTraits<WebCore::SVGImageElement>>,WTF::RefPtr<WebCore::HTMLCanvasElement,WTF::RawPtrTraits<WebCore::HTMLCanvasElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLCanvasElement>>,WTF::RefPtr<WebCore::ImageBitmap,WTF::RawPtrTraits<WebCore::ImageBitmap>,WTF::DefaultRefDerefTraits<WebCore::ImageBitmap>>,WTF::RefPtr<WebCore::CSSStyleImageValue,WTF::RawPtrTraits<WebCore::CSSStyleImageValue>,WTF::DefaultRefDerefTraits<WebCore::CSSStyleImageValue>>,WTF::RefPtr<WebCore::OffscreenCanvas,WTF::RawPtrTraits<WebCore::OffscreenCanvas>,WTF::DefaultRefDerefTraits<WebCore::OffscreenCanvas>>,WTF::RefPtr<WebCore::HTMLVideoElement,WTF::RawPtrTraits<WebCore::HTMLVideoElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLVideoElement>>,WTF::RefPtr<WebCore::WebCodecsVideoFrame,WTF::RawPtrTraits<WebCore::WebCodecsVideoFrame>,WTF::DefaultRefDerefTraits<WebCore::WebCodecsVideoFrame>>>>::operator=[abi:sn180100]<std::variant<WTF::RefPtr<WebCore::HTMLImageElement,WTF::RawPtrTraits<WebCore::HTMLImageElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLImageElement>>,WTF::RefPtr<WebCore::SVGImageElement,WTF::RawPtrTraits<WebCore::SVGImageElement>,WTF::DefaultRefDerefTraits<WebCore::SVGImageElement>>,WTF::RefPtr<WebCore::HTMLCanvasElement,WTF::RawPtrTraits<WebCore::HTMLCanvasElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLCanvasElement>>,WTF::RefPtr<WebCore::ImageBitmap,WTF::RawPtrTraits<WebCore::ImageBitmap>,WTF::DefaultRefDerefTraits<WebCore::ImageBitmap>>,WTF::RefPtr<WebCore::CSSStyleImageValue,WTF::RawPtrTraits<WebCore::CSSStyleImageValue>,WTF::DefaultRefDerefTraits<WebCore::CSSStyleImageValue>>,WTF::RefPtr<WebCore::OffscreenCanvas,WTF::RawPtrTraits<WebCore::OffscreenCanvas>,WTF::DefaultRefDerefTraits<WebCore::OffscreenCanvas>>,WTF::RefPtr<WebCore::HTMLVideoElement,WTF::RawPtrTraits<WebCore::HTMLVideoElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLVideoElement>>,WTF::RefPtr<WebCore::WebCodecsVideoFrame,WTF::RawPtrTraits<WebCore::WebCodecsVideoFrame>,WTF::DefaultRefDerefTraits<WebCore::WebCodecsVideoFrame>>>,void>(v4, (uint64_t)&v20);
    if (v21 != -1)
      ((void (*)(char *, unint64_t *))off_1E3249638[v21])(&v22, &v20);
    v4 = *a1;
    if (!*(_BYTE *)(*a1 + 16))
    {
LABEL_38:
      v17 = WebCore::JSOffscreenCanvas::toWrapped(*(_QWORD *)(a1[1] + 56), *(_QWORD *)a1[2]);
      v4 = *a1;
      if (v17)
      {
        ++*(_DWORD *)(v17 + 24);
        v20 = v17;
        v21 = 5;
        std::optional<std::variant<WTF::RefPtr<WebCore::HTMLImageElement,WTF::RawPtrTraits<WebCore::HTMLImageElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLImageElement>>,WTF::RefPtr<WebCore::SVGImageElement,WTF::RawPtrTraits<WebCore::SVGImageElement>,WTF::DefaultRefDerefTraits<WebCore::SVGImageElement>>,WTF::RefPtr<WebCore::HTMLCanvasElement,WTF::RawPtrTraits<WebCore::HTMLCanvasElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLCanvasElement>>,WTF::RefPtr<WebCore::ImageBitmap,WTF::RawPtrTraits<WebCore::ImageBitmap>,WTF::DefaultRefDerefTraits<WebCore::ImageBitmap>>,WTF::RefPtr<WebCore::CSSStyleImageValue,WTF::RawPtrTraits<WebCore::CSSStyleImageValue>,WTF::DefaultRefDerefTraits<WebCore::CSSStyleImageValue>>,WTF::RefPtr<WebCore::OffscreenCanvas,WTF::RawPtrTraits<WebCore::OffscreenCanvas>,WTF::DefaultRefDerefTraits<WebCore::OffscreenCanvas>>,WTF::RefPtr<WebCore::HTMLVideoElement,WTF::RawPtrTraits<WebCore::HTMLVideoElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLVideoElement>>,WTF::RefPtr<WebCore::WebCodecsVideoFrame,WTF::RawPtrTraits<WebCore::WebCodecsVideoFrame>,WTF::DefaultRefDerefTraits<WebCore::WebCodecsVideoFrame>>>>::operator=[abi:sn180100]<std::variant<WTF::RefPtr<WebCore::HTMLImageElement,WTF::RawPtrTraits<WebCore::HTMLImageElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLImageElement>>,WTF::RefPtr<WebCore::SVGImageElement,WTF::RawPtrTraits<WebCore::SVGImageElement>,WTF::DefaultRefDerefTraits<WebCore::SVGImageElement>>,WTF::RefPtr<WebCore::HTMLCanvasElement,WTF::RawPtrTraits<WebCore::HTMLCanvasElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLCanvasElement>>,WTF::RefPtr<WebCore::ImageBitmap,WTF::RawPtrTraits<WebCore::ImageBitmap>,WTF::DefaultRefDerefTraits<WebCore::ImageBitmap>>,WTF::RefPtr<WebCore::CSSStyleImageValue,WTF::RawPtrTraits<WebCore::CSSStyleImageValue>,WTF::DefaultRefDerefTraits<WebCore::CSSStyleImageValue>>,WTF::RefPtr<WebCore::OffscreenCanvas,WTF::RawPtrTraits<WebCore::OffscreenCanvas>,WTF::DefaultRefDerefTraits<WebCore::OffscreenCanvas>>,WTF::RefPtr<WebCore::HTMLVideoElement,WTF::RawPtrTraits<WebCore::HTMLVideoElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLVideoElement>>,WTF::RefPtr<WebCore::WebCodecsVideoFrame,WTF::RawPtrTraits<WebCore::WebCodecsVideoFrame>,WTF::DefaultRefDerefTraits<WebCore::WebCodecsVideoFrame>>>,void>(v4, (uint64_t)&v20);
        if (v21 != -1)
          ((void (*)(char *, unint64_t *))off_1E3249638[v21])(&v22, &v20);
        v4 = *a1;
      }
    }
  }
  if (!*(_BYTE *)(v4 + 16))
  {
    v18 = WebCore::JSHTMLVideoElement::toWrapped(*(_QWORD *)(a1[1] + 56), *(_QWORD *)a1[2]);
    v4 = *a1;
    if (v18)
    {
      *(_DWORD *)(v18 + 24) += 2;
      v20 = v18;
      v21 = 6;
      std::optional<std::variant<WTF::RefPtr<WebCore::HTMLImageElement,WTF::RawPtrTraits<WebCore::HTMLImageElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLImageElement>>,WTF::RefPtr<WebCore::SVGImageElement,WTF::RawPtrTraits<WebCore::SVGImageElement>,WTF::DefaultRefDerefTraits<WebCore::SVGImageElement>>,WTF::RefPtr<WebCore::HTMLCanvasElement,WTF::RawPtrTraits<WebCore::HTMLCanvasElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLCanvasElement>>,WTF::RefPtr<WebCore::ImageBitmap,WTF::RawPtrTraits<WebCore::ImageBitmap>,WTF::DefaultRefDerefTraits<WebCore::ImageBitmap>>,WTF::RefPtr<WebCore::CSSStyleImageValue,WTF::RawPtrTraits<WebCore::CSSStyleImageValue>,WTF::DefaultRefDerefTraits<WebCore::CSSStyleImageValue>>,WTF::RefPtr<WebCore::OffscreenCanvas,WTF::RawPtrTraits<WebCore::OffscreenCanvas>,WTF::DefaultRefDerefTraits<WebCore::OffscreenCanvas>>,WTF::RefPtr<WebCore::HTMLVideoElement,WTF::RawPtrTraits<WebCore::HTMLVideoElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLVideoElement>>,WTF::RefPtr<WebCore::WebCodecsVideoFrame,WTF::RawPtrTraits<WebCore::WebCodecsVideoFrame>,WTF::DefaultRefDerefTraits<WebCore::WebCodecsVideoFrame>>>>::operator=[abi:sn180100]<std::variant<WTF::RefPtr<WebCore::HTMLImageElement,WTF::RawPtrTraits<WebCore::HTMLImageElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLImageElement>>,WTF::RefPtr<WebCore::SVGImageElement,WTF::RawPtrTraits<WebCore::SVGImageElement>,WTF::DefaultRefDerefTraits<WebCore::SVGImageElement>>,WTF::RefPtr<WebCore::HTMLCanvasElement,WTF::RawPtrTraits<WebCore::HTMLCanvasElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLCanvasElement>>,WTF::RefPtr<WebCore::ImageBitmap,WTF::RawPtrTraits<WebCore::ImageBitmap>,WTF::DefaultRefDerefTraits<WebCore::ImageBitmap>>,WTF::RefPtr<WebCore::CSSStyleImageValue,WTF::RawPtrTraits<WebCore::CSSStyleImageValue>,WTF::DefaultRefDerefTraits<WebCore::CSSStyleImageValue>>,WTF::RefPtr<WebCore::OffscreenCanvas,WTF::RawPtrTraits<WebCore::OffscreenCanvas>,WTF::DefaultRefDerefTraits<WebCore::OffscreenCanvas>>,WTF::RefPtr<WebCore::HTMLVideoElement,WTF::RawPtrTraits<WebCore::HTMLVideoElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLVideoElement>>,WTF::RefPtr<WebCore::WebCodecsVideoFrame,WTF::RawPtrTraits<WebCore::WebCodecsVideoFrame>,WTF::DefaultRefDerefTraits<WebCore::WebCodecsVideoFrame>>>,void>(v4, (uint64_t)&v20);
      if (v21 != -1)
        ((void (*)(char *, unint64_t *))off_1E3249638[v21])(&v22, &v20);
      v4 = *a1;
    }
  }
  if (!*(_BYTE *)(v4 + 16))
  {
    v19 = WebCore::JSWebCodecsVideoFrame::toWrapped(*(_QWORD *)(a1[1] + 56), *(_QWORD *)a1[2]);
    if (v19)
    {
      ++*(_DWORD *)(v19 + 16);
      v20 = v19;
      v21 = 7;
      std::optional<std::variant<WTF::RefPtr<WebCore::HTMLImageElement,WTF::RawPtrTraits<WebCore::HTMLImageElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLImageElement>>,WTF::RefPtr<WebCore::SVGImageElement,WTF::RawPtrTraits<WebCore::SVGImageElement>,WTF::DefaultRefDerefTraits<WebCore::SVGImageElement>>,WTF::RefPtr<WebCore::HTMLCanvasElement,WTF::RawPtrTraits<WebCore::HTMLCanvasElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLCanvasElement>>,WTF::RefPtr<WebCore::ImageBitmap,WTF::RawPtrTraits<WebCore::ImageBitmap>,WTF::DefaultRefDerefTraits<WebCore::ImageBitmap>>,WTF::RefPtr<WebCore::CSSStyleImageValue,WTF::RawPtrTraits<WebCore::CSSStyleImageValue>,WTF::DefaultRefDerefTraits<WebCore::CSSStyleImageValue>>,WTF::RefPtr<WebCore::OffscreenCanvas,WTF::RawPtrTraits<WebCore::OffscreenCanvas>,WTF::DefaultRefDerefTraits<WebCore::OffscreenCanvas>>,WTF::RefPtr<WebCore::HTMLVideoElement,WTF::RawPtrTraits<WebCore::HTMLVideoElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLVideoElement>>,WTF::RefPtr<WebCore::WebCodecsVideoFrame,WTF::RawPtrTraits<WebCore::WebCodecsVideoFrame>,WTF::DefaultRefDerefTraits<WebCore::WebCodecsVideoFrame>>>>::operator=[abi:sn180100]<std::variant<WTF::RefPtr<WebCore::HTMLImageElement,WTF::RawPtrTraits<WebCore::HTMLImageElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLImageElement>>,WTF::RefPtr<WebCore::SVGImageElement,WTF::RawPtrTraits<WebCore::SVGImageElement>,WTF::DefaultRefDerefTraits<WebCore::SVGImageElement>>,WTF::RefPtr<WebCore::HTMLCanvasElement,WTF::RawPtrTraits<WebCore::HTMLCanvasElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLCanvasElement>>,WTF::RefPtr<WebCore::ImageBitmap,WTF::RawPtrTraits<WebCore::ImageBitmap>,WTF::DefaultRefDerefTraits<WebCore::ImageBitmap>>,WTF::RefPtr<WebCore::CSSStyleImageValue,WTF::RawPtrTraits<WebCore::CSSStyleImageValue>,WTF::DefaultRefDerefTraits<WebCore::CSSStyleImageValue>>,WTF::RefPtr<WebCore::OffscreenCanvas,WTF::RawPtrTraits<WebCore::OffscreenCanvas>,WTF::DefaultRefDerefTraits<WebCore::OffscreenCanvas>>,WTF::RefPtr<WebCore::HTMLVideoElement,WTF::RawPtrTraits<WebCore::HTMLVideoElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLVideoElement>>,WTF::RefPtr<WebCore::WebCodecsVideoFrame,WTF::RawPtrTraits<WebCore::WebCodecsVideoFrame>,WTF::DefaultRefDerefTraits<WebCore::WebCodecsVideoFrame>>>,void>(*a1, (uint64_t)&v20);
      if (v21 != -1)
        ((void (*)(char *, unint64_t *))off_1E3249638[v21])(&v22, &v20);
    }
  }
  result = *(__n128 *)a1;
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_QWORD *)(a2 + 16) = a1[2];
  return result;
}

uint64_t std::optional<std::variant<WTF::RefPtr<WebCore::HTMLImageElement,WTF::RawPtrTraits<WebCore::HTMLImageElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLImageElement>>,WTF::RefPtr<WebCore::SVGImageElement,WTF::RawPtrTraits<WebCore::SVGImageElement>,WTF::DefaultRefDerefTraits<WebCore::SVGImageElement>>,WTF::RefPtr<WebCore::HTMLCanvasElement,WTF::RawPtrTraits<WebCore::HTMLCanvasElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLCanvasElement>>,WTF::RefPtr<WebCore::ImageBitmap,WTF::RawPtrTraits<WebCore::ImageBitmap>,WTF::DefaultRefDerefTraits<WebCore::ImageBitmap>>,WTF::RefPtr<WebCore::CSSStyleImageValue,WTF::RawPtrTraits<WebCore::CSSStyleImageValue>,WTF::DefaultRefDerefTraits<WebCore::CSSStyleImageValue>>,WTF::RefPtr<WebCore::OffscreenCanvas,WTF::RawPtrTraits<WebCore::OffscreenCanvas>,WTF::DefaultRefDerefTraits<WebCore::OffscreenCanvas>>,WTF::RefPtr<WebCore::HTMLVideoElement,WTF::RawPtrTraits<WebCore::HTMLVideoElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLVideoElement>>,WTF::RefPtr<WebCore::WebCodecsVideoFrame,WTF::RawPtrTraits<WebCore::WebCodecsVideoFrame>,WTF::DefaultRefDerefTraits<WebCore::WebCodecsVideoFrame>>>>::operator=[abi:sn180100]<std::variant<WTF::RefPtr<WebCore::HTMLImageElement,WTF::RawPtrTraits<WebCore::HTMLImageElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLImageElement>>,WTF::RefPtr<WebCore::SVGImageElement,WTF::RawPtrTraits<WebCore::SVGImageElement>,WTF::DefaultRefDerefTraits<WebCore::SVGImageElement>>,WTF::RefPtr<WebCore::HTMLCanvasElement,WTF::RawPtrTraits<WebCore::HTMLCanvasElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLCanvasElement>>,WTF::RefPtr<WebCore::ImageBitmap,WTF::RawPtrTraits<WebCore::ImageBitmap>,WTF::DefaultRefDerefTraits<WebCore::ImageBitmap>>,WTF::RefPtr<WebCore::CSSStyleImageValue,WTF::RawPtrTraits<WebCore::CSSStyleImageValue>,WTF::DefaultRefDerefTraits<WebCore::CSSStyleImageValue>>,WTF::RefPtr<WebCore::OffscreenCanvas,WTF::RawPtrTraits<WebCore::OffscreenCanvas>,WTF::DefaultRefDerefTraits<WebCore::OffscreenCanvas>>,WTF::RefPtr<WebCore::HTMLVideoElement,WTF::RawPtrTraits<WebCore::HTMLVideoElement>,WTF::DefaultRefDerefTraits<WebCore::HTMLVideoElement>>,WTF::RefPtr<WebCore::WebCodecsVideoFrame,WTF::RawPtrTraits<WebCore::WebCodecsVideoFrame>,WTF::DefaultRefDerefTraits<WebCore::WebCodecsVideoFrame>>>,void>(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  char v9;

  if (*(_BYTE *)(a1 + 16))
  {
    v3 = *(unsigned int *)(a1 + 8);
    v4 = *(unsigned int *)(a2 + 8);
    if ((_DWORD)v3 == -1)
    {
      if ((_DWORD)v4 == -1)
        return a1;
    }
    else if ((_DWORD)v4 == -1)
    {
      ((void (*)(char *, uint64_t, uint64_t))off_1E3249638[v3])(&v8, a1, a2);
      *(_DWORD *)(a1 + 8) = -1;
      return a1;
    }
    v7 = a1;
    ((void (*)(uint64_t *, uint64_t, uint64_t))off_1E3249678[v4])(&v7, a1, a2);
    return a1;
  }
  *(_BYTE *)a1 = 0;
  *(_DWORD *)(a1 + 8) = -1;
  v5 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v5 != -1)
  {
    ((void (*)(char *, uint64_t, uint64_t))off_1E32496B8[v5])(&v9, a1, a2);
    *(_DWORD *)(a1 + 8) = v5;
  }
  *(_BYTE *)(a1 + 16) = 1;
  return a1;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS1A_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEEEEDcS1C_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS1A_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEEEEDcS1C_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS1A_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEEEEDcS1C_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm3EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS1A_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEEEEDcS1C_DpT0_(uint64_t a1, bmalloc::api **a2)
{
  bmalloc::api *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  int v10;
  uint64_t result;
  uint64_t v12;

  v2 = *a2;
  *a2 = 0;
  if (!v2)
    return result;
  if (*((_DWORD *)v2 + 2) != 1)
  {
    --*((_DWORD *)v2 + 2);
    return result;
  }
  v3 = *((_QWORD *)v2 + 2);
  *((_QWORD *)v2 + 2) = 0;
  if (v3)
  {
    v4 = *(_QWORD *)(v3 + 8);
    if (__ldaxr((unsigned __int8 *)v4))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v4))
    {
      goto LABEL_10;
    }
    MEMORY[0x19AEA534C](v4);
LABEL_10:
    v6 = *(_QWORD *)(v4 + 8);
    v7 = v6 - 1;
    *(_QWORD *)(v4 + 8) = v6 - 1;
    if (v6 == 1)
    {
      v12 = *(_QWORD *)(v4 + 16);
      v8 = *(_QWORD *)(v4 + 24);
      *(_QWORD *)(v4 + 24) = 0;
      v9 = v12 != 0;
    }
    else
    {
      v8 = 0;
      v9 = 1;
    }
    v10 = __ldxr((unsigned __int8 *)v4);
    if (v10 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v4))
      {
LABEL_17:
        if (!v7)
        {
          if (v8)
            (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
          if (!v9)
            WTF::fastFree((WTF *)v4, a2);
        }
        goto LABEL_22;
      }
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v4);
    goto LABEL_17;
  }
LABEL_22:
  if (*(_QWORD *)v2)
  {
    *(_QWORD *)(*(_QWORD *)v2 + 8) = 3;
    *(_QWORD *)v2 = 0;
  }
  return bmalloc::api::isoDeallocate(v2, a2);
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm4EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS1A_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEEEEDcS1C_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

WebCore::OffscreenCanvas *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm5EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS1A_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEEEEDcS1C_DpT0_(uint64_t a1, WebCore::OffscreenCanvas **a2)
{
  WebCore::OffscreenCanvas *result;
  bmalloc::api *v3;
  void *v4;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*((_DWORD *)result + 6) == 1)
    {
      WebCore::OffscreenCanvas::~OffscreenCanvas(result);
      return (WebCore::OffscreenCanvas *)bmalloc::api::isoDeallocate(v3, v4);
    }
    else
    {
      --*((_DWORD *)result + 6);
    }
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm6EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS1A_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEEEEDcS1C_DpT0_(uint64_t a1, unsigned int **a2)
{
  unsigned int *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm7EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS1A_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEEEEDcS1C_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentIS19_LNS0_6_TraitE1EEEEEvOT_EUlRS1F_OT0_E_JRNS0_6__baseILS1D_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEOS1N_EEEDcS1F_DpT0_(unsigned int *result, unsigned int **a2, unsigned int **a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int *v7;
  char v8;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5)
  {
    result = (unsigned int *)((uint64_t (*)(char *, uint64_t))off_1E3249638[v5])(&v8, v4);
LABEL_7:
    v7 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v7;
    *(_DWORD *)(v4 + 8) = 0;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  result = *a2;
  *a2 = v6;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentIS19_LNS0_6_TraitE1EEEEEvOT_EUlRS1F_OT0_E_JRNS0_6__baseILS1D_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEOS1N_EEEDcS1F_DpT0_(unsigned int *result, unsigned int **a2, unsigned int **a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int *v7;
  char v8;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5 != 1)
  {
    result = (unsigned int *)((uint64_t (*)(char *, uint64_t))off_1E3249638[v5])(&v8, v4);
LABEL_7:
    v7 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v7;
    *(_DWORD *)(v4 + 8) = 1;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  result = *a2;
  *a2 = v6;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentIS19_LNS0_6_TraitE1EEEEEvOT_EUlRS1F_OT0_E_JRNS0_6__baseILS1D_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEOS1N_EEEDcS1F_DpT0_(unsigned int *result, unsigned int **a2, unsigned int **a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int *v7;
  char v8;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5 != 2)
  {
    result = (unsigned int *)((uint64_t (*)(char *, uint64_t))off_1E3249638[v5])(&v8, v4);
LABEL_7:
    v7 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v7;
    *(_DWORD *)(v4 + 8) = 2;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  result = *a2;
  *a2 = v6;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm3ELm3EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentIS19_LNS0_6_TraitE1EEEEEvOT_EUlRS1F_OT0_E_JRNS0_6__baseILS1D_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEOS1N_EEEDcS1F_DpT0_(uint64_t result, bmalloc::api **a2, bmalloc::api **a3)
{
  uint64_t v4;
  uint64_t v5;
  bmalloc::api *v6;
  bmalloc::api *v7;
  bmalloc::api *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  int v16;
  uint64_t v17;
  char v18;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5 != 3)
  {
    result = ((uint64_t (*)(char *, uint64_t))off_1E3249638[v5])(&v18, v4);
LABEL_7:
    v8 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v8;
    *(_DWORD *)(v4 + 8) = 3;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  v7 = *a2;
  *a2 = v6;
  if (!v7)
    return result;
  if (*((_DWORD *)v7 + 2) != 1)
  {
    --*((_DWORD *)v7 + 2);
    return result;
  }
  v9 = *((_QWORD *)v7 + 2);
  *((_QWORD *)v7 + 2) = 0;
  if (!v9)
    goto LABEL_26;
  v10 = *(_QWORD *)(v9 + 8);
  if (__ldaxr((unsigned __int8 *)v10))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v10))
  {
    goto LABEL_14;
  }
  MEMORY[0x19AEA534C](v10);
LABEL_14:
  v12 = *(_QWORD *)(v10 + 8);
  v13 = v12 - 1;
  *(_QWORD *)(v10 + 8) = v12 - 1;
  if (v12 == 1)
  {
    v17 = *(_QWORD *)(v10 + 16);
    v14 = *(_QWORD *)(v10 + 24);
    *(_QWORD *)(v10 + 24) = 0;
    v15 = v17 != 0;
  }
  else
  {
    v14 = 0;
    v15 = 1;
  }
  v16 = __ldxr((unsigned __int8 *)v10);
  if (v16 != 1)
  {
    __clrex();
    goto LABEL_20;
  }
  if (__stlxr(0, (unsigned __int8 *)v10))
LABEL_20:
    WTF::Lock::unlockSlow((WTF::Lock *)v10);
  if (!v13)
  {
    if (v14)
      (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
    if (!v15)
      WTF::fastFree((WTF *)v10, a2);
  }
LABEL_26:
  if (*(_QWORD *)v7)
  {
    *(_QWORD *)(*(_QWORD *)v7 + 8) = 3;
    *(_QWORD *)v7 = 0;
  }
  return bmalloc::api::isoDeallocate(v7, a2);
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm4ELm4EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentIS19_LNS0_6_TraitE1EEEEEvOT_EUlRS1F_OT0_E_JRNS0_6__baseILS1D_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEOS1N_EEEDcS1F_DpT0_(_DWORD *result, _DWORD **a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  _DWORD *v7;
  char v8;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5 != 4)
  {
    result = (_DWORD *)((uint64_t (*)(char *, uint64_t))off_1E3249638[v5])(&v8, v4);
LABEL_7:
    v7 = (_DWORD *)*a3;
    *a3 = 0;
    *(_QWORD *)v4 = v7;
    *(_DWORD *)(v4 + 8) = 4;
    return result;
  }
  v6 = (_DWORD *)*a3;
  *a3 = 0;
  result = *a2;
  *a2 = v6;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[2];
  }
  return result;
}

WebCore::OffscreenCanvas *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm5ELm5EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentIS19_LNS0_6_TraitE1EEEEEvOT_EUlRS1F_OT0_E_JRNS0_6__baseILS1D_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEOS1N_EEEDcS1F_DpT0_(WebCore::OffscreenCanvas *result, WebCore::OffscreenCanvas **a2, WebCore::OffscreenCanvas **a3)
{
  uint64_t v4;
  uint64_t v5;
  WebCore::OffscreenCanvas *v6;
  WebCore::OffscreenCanvas *v7;
  bmalloc::api *v8;
  void *v9;
  char v10;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5 != 5)
  {
    result = (WebCore::OffscreenCanvas *)((uint64_t (*)(char *, uint64_t))off_1E3249638[v5])(&v10, v4);
LABEL_7:
    v7 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v7;
    *(_DWORD *)(v4 + 8) = 5;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  result = *a2;
  *a2 = v6;
  if (result)
  {
    if (*((_DWORD *)result + 6) == 1)
    {
      WebCore::OffscreenCanvas::~OffscreenCanvas(result);
      return (WebCore::OffscreenCanvas *)bmalloc::api::isoDeallocate(v8, v9);
    }
    else
    {
      --*((_DWORD *)result + 6);
    }
  }
  return result;
}

unsigned int *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm6ELm6EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentIS19_LNS0_6_TraitE1EEEEEvOT_EUlRS1F_OT0_E_JRNS0_6__baseILS1D_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEOS1N_EEEDcS1F_DpT0_(unsigned int *result, unsigned int **a2, unsigned int **a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int *v7;
  char v8;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5 != 6)
  {
    result = (unsigned int *)((uint64_t (*)(char *, uint64_t))off_1E3249638[v5])(&v8, v4);
LABEL_7:
    v7 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v7;
    *(_DWORD *)(v4 + 8) = 6;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  result = *a2;
  *a2 = v6;
  if (result)
  {
    if (result[6] == 2)
    {
      if ((*((_WORD *)result + 15) & 0x400) == 0)
        return WebCore::Node::removedLastRef((WebCore::Node *)result, a2);
    }
    else
    {
      result[6] -= 2;
    }
  }
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm7ELm7EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentIS19_LNS0_6_TraitE1EEEEEvOT_EUlRS1F_OT0_E_JRNS0_6__baseILS1D_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEOS1N_EEEDcS1F_DpT0_(_DWORD *result, _DWORD **a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  _DWORD *v7;
  char v8;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5 != 7)
  {
    result = (_DWORD *)((uint64_t (*)(char *, uint64_t))off_1E3249638[v5])(&v8, v4);
LABEL_7:
    v7 = (_DWORD *)*a3;
    *a3 = 0;
    *(_QWORD *)v4 = v7;
    *(_DWORD *)(v4 + 8) = 7;
    return result;
  }
  v6 = (_DWORD *)*a3;
  *a3 = 0;
  result = *a2;
  *a2 = v6;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS19_LNS0_6_TraitE1EEEEEvRS1A_OT_EUlRS1G_OT0_E_JRNS0_6__baseILS1D_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEOS1O_EEEDcS1G_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS19_LNS0_6_TraitE1EEEEEvRS1A_OT_EUlRS1G_OT0_E_JRNS0_6__baseILS1D_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEOS1O_EEEDcS1G_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS19_LNS0_6_TraitE1EEEEEvRS1A_OT_EUlRS1G_OT0_E_JRNS0_6__baseILS1D_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEOS1O_EEEDcS1G_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm3ELm3EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS19_LNS0_6_TraitE1EEEEEvRS1A_OT_EUlRS1G_OT0_E_JRNS0_6__baseILS1D_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEOS1O_EEEDcS1G_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm4ELm4EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS19_LNS0_6_TraitE1EEEEEvRS1A_OT_EUlRS1G_OT0_E_JRNS0_6__baseILS1D_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEOS1O_EEEDcS1G_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm5ELm5EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS19_LNS0_6_TraitE1EEEEEvRS1A_OT_EUlRS1G_OT0_E_JRNS0_6__baseILS1D_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEOS1O_EEEDcS1G_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm6ELm6EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS19_LNS0_6_TraitE1EEEEEvRS1A_OT_EUlRS1G_OT0_E_JRNS0_6__baseILS1D_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEOS1O_EEEDcS1G_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm7ELm7EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_15SVGImageElementENSC_ISH_EENSE_ISH_EEEENS9_INSA_17HTMLCanvasElementENSC_ISL_EENSE_ISL_EEEENS9_INSA_11ImageBitmapENSC_ISP_EENSE_ISP_EEEENS9_INSA_18CSSStyleImageValueENSC_IST_EENSE_IST_EEEENS9_INSA_15OffscreenCanvasENSC_ISX_EENSE_ISX_EEEENS9_INSA_16HTMLVideoElementENSC_IS11_EENSE_IS11_EEEENS9_INSA_19WebCodecsVideoFrameENSC_IS15_EENSE_IS15_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorIS19_LNS0_6_TraitE1EEEEEvRS1A_OT_EUlRS1G_OT0_E_JRNS0_6__baseILS1D_1EJSG_SK_SO_SS_SW_S10_S14_S18_EEEOS1O_EEEDcS1G_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

uint64_t WebCore::JSToWrappedOverloader<WebCore::CSSStyleImageValue,void>::toWrapped(uint64_t a1)
{
  uint64_t v1;
  _BOOL4 v2;
  char **v3;
  BOOL v4;

  if ((a1 & 0xFFFE000000000002) != 0)
    return 0;
  v1 = *(unsigned int *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x4C);
  v2 = *(_DWORD *)(16 * (*(_DWORD *)a1 & 0xFFFFFFFE) + 0x4C) != 0;
  v3 = (char **)(16 * v1);
  if ((_DWORD)v1)
    v4 = v3 == &WebCore::JSCSSStyleImageValue::s_info;
  else
    v4 = 1;
  if (!v4)
  {
    do
    {
      v3 = (char **)v3[2];
      v2 = v3 != 0;
    }
    while (v3 != &WebCore::JSCSSStyleImageValue::s_info && v3 != 0);
  }
  if (v2)
    return *(_QWORD *)(a1 + 24);
  else
    return 0;
}

uint64_t WebCore::Converter<WebCore::IDLUnrestrictedDouble>::convert@<X0>(JSC::JSGlobalObject *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  double v6;
  int v7;
  double v8;
  uint64_t v9;
  unint64_t v10;

  v10 = a2;
  result = *((_QWORD *)a1 + 7);
  if (a2 >= 0xFFFE000000000000)
  {
    v6 = (double)(int)a2;
  }
  else if (a2 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v9 = result;
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v10, a1);
    result = v9;
    v6 = v8;
  }
  else
  {
    *(_QWORD *)&v6 = a2 - 0x2000000000000;
  }
  if (*(_DWORD *)(result + 80)
    && (result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)result), (result & 1) != 0))
  {
    v7 = 1;
  }
  else
  {
    v7 = 0;
    *(double *)a3 = v6;
  }
  *(_DWORD *)(a3 + 8) = v7;
  return result;
}

uint64_t WebCore::ConversionResult<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::HTMLImageElement>,WebCore::IDLInterface<WebCore::SVGImageElement>,WebCore::IDLInterface<WebCore::HTMLCanvasElement>,WebCore::IDLInterface<WebCore::ImageBitmap>,WebCore::IDLInterface<WebCore::CSSStyleImageValue>,WebCore::IDLInterface<WebCore::OffscreenCanvas>,WebCore::IDLInterface<WebCore::HTMLVideoElement>,WebCore::IDLInterface<WebCore::WebCodecsVideoFrame>>>::releaseReturnValue(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  if (*(_DWORD *)(a2 + 24))
  {
    v4 = std::__throw_bad_variant_access[abi:sn180100]();
    return _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS9_12RawPtrTraitsISC_EENS9_21DefaultRefDerefTraitsISC_EEEENSA_INSB_15SVGImageElementENSD_ISI_EENSF_ISI_EEEENSA_INSB_17HTMLCanvasElementENSD_ISM_EENSF_ISM_EEEENSA_INSB_11ImageBitmapENSD_ISQ_EENSF_ISQ_EEEENSA_INSB_18CSSStyleImageValueENSD_ISU_EENSF_ISU_EEEENSA_INSB_15OffscreenCanvasENSD_ISY_EENSF_ISY_EEEENSA_INSB_16HTMLVideoElementENSD_IS12_EENSF_IS12_EEEENSA_INSB_19WebCodecsVideoFrameENSD_IS16_EENSF_IS16_EEEEEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS1D_1EJS1A_S1B_EEEEEEDcS1F_DpT0_(v4, v5);
  }
  else
  {
    v2 = result;
    *(_BYTE *)result = 0;
    *(_DWORD *)(result + 8) = -1;
    v3 = *(unsigned int *)(a2 + 16);
    if ((_DWORD)v3 != -1)
    {
      result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_1E32496B8[v3])(&v6, result, a2 + 8);
      *(_DWORD *)(v2 + 8) = v3;
    }
  }
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6RefPtrIN7WebCore16HTMLImageElementENS9_12RawPtrTraitsISC_EENS9_21DefaultRefDerefTraitsISC_EEEENSA_INSB_15SVGImageElementENSD_ISI_EENSF_ISI_EEEENSA_INSB_17HTMLCanvasElementENSD_ISM_EENSF_ISM_EEEENSA_INSB_11ImageBitmapENSD_ISQ_EENSF_ISQ_EEEENSA_INSB_18CSSStyleImageValueENSD_ISU_EENSF_ISU_EEEENSA_INSB_15OffscreenCanvasENSD_ISY_EENSF_ISY_EEEENSA_INSB_16HTMLVideoElementENSD_IS12_EENSF_IS12_EEEENSA_INSB_19WebCodecsVideoFrameENSD_IS16_EENSF_IS16_EEEEEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILS1D_1EJS1A_S1B_EEEEEEDcS1F_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E3249638[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_fill1Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4)
{
  JSC::JSRopeString *v5;
  uint64_t v6;
  WTF::StringImpl *v8;
  _DWORD *v9;
  WTF::StringImpl *v10;
  _QWORD v11[2];
  WTF::StringImpl *v12;
  int v13[2];
  _QWORD v14[2];
  char v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  if (*((_DWORD *)a2 + 8) == 1 || (v5 = (JSC::JSRopeString *)*((_QWORD *)a2 + 6), v5 == (JSC::JSRopeString *)10))
  {
    v13[0] = 0;
  }
  else
  {
    WebCore::convert<WebCore::IDLEnumeration<WebCore::CanvasFillRule>,WebCore::jsCanvasRenderingContext2DPrototypeFunction_fill1Body(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSCanvasRenderingContext2D *)::{lambda(JSC::JSGlobalObject&,JSC::ThrowScope &)#1}>(v13, this, v5);
    if (v13[1])
      return 0;
  }
  if (*((_BYTE *)a3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v6 = v13[0];
    WebCore::InspectorCanvasCallTracer::processArgument((uint64_t)a3, v13[0], v14);
    v11[0] = v14;
    v11[1] = 1;
    WebCore::InspectorCanvasCallTracer::recordAction(a3, (const WTF::StringImpl *)&v12, v11);
    if (v15)
    {
      v9 = (_DWORD *)v14[0];
      v14[0] = 0;
      if (v9)
      {
        if (*v9 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v9;
      }
    }
    v10 = v12;
    v12 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
        WTF::StringImpl::destroy(v10, v8);
      else
        *(_DWORD *)v10 -= 2;
    }
  }
  else
  {
    v6 = v13[0];
  }
  WebCore::CanvasRenderingContext2DBase::fill((uint64_t)a3, v6);
  return 10;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_fill2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  JSC::VM *v10;
  uint64_t v12;
  _BOOL4 v13;
  char **v14;
  BOOL v15;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  WebCore::InspectorInstrumentation *v22;
  WebCore::ScriptExecutionContext *v23;
  uint64_t v24;
  WebCore::InspectorCanvasAgent *v25;
  WebCore::InspectorInstrumentation *v26;
  WebCore::ScriptExecutionContext *v27;
  uint64_t v28;
  uint64_t v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  _DWORD *v35;
  WTF::StringImpl *v36;
  _QWORD v37[2];
  WTF::StringImpl *v38;
  _QWORD v39[2];
  char v40;
  _DWORD *v41;
  char v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v9 = *((_QWORD *)a2 + 6);
  v10 = (JSC::VM *)*((_QWORD *)this + 7);
  v39[0] = v10;
  if ((v9 & 0xFFFE000000000002) != 0)
    goto LABEL_12;
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSPath2D::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSPath2D::s_info && v14 != 0);
  }
  if (!v13 || (v18 = *(_QWORD *)(v9 + 24)) == 0)
  {
LABEL_12:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v39, 0, "path", 5, "CanvasRenderingContext2D", 25, a8, "fill", 5, "Path2D", 7);
    return 0;
  }
  if ((unint64_t)(*((int *)a2 + 8) - 3) > 0xFFFFFFFFFFFFFFFDLL)
  {
    LODWORD(v20) = 0;
  }
  else
  {
    v19 = *((_QWORD *)a2 + 7);
    if (v19 != 10)
    {
      v39[0] = v10;
      v20 = WebCore::parseEnumeration<WebCore::CanvasFillRule>(this, v19);
      if (!*((_DWORD *)v10 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) == 0)
      {
        if (HIDWORD(v20))
          goto LABEL_20;
        WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)v39, 1, "fillRule", 9, "CanvasRenderingContext2D", 25, v21, "fill", 5, "\"nonzero\", \"evenodd\"", 21);
      }
      return 0;
    }
    LODWORD(v20) = 0;
  }
LABEL_20:
  if (*((_BYTE *)a3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v22 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v22
      && (v24 = WebCore::InspectorInstrumentation::instrumentingAgents(v22, v23)) != 0
      && (v25 = *(WebCore::InspectorCanvasAgent **)(v24 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v25, a3, (WebCore::Path2D *)v18, (uint64_t)v39);
    }
    else
    {
      LOBYTE(v39[0]) = 0;
      v40 = 0;
    }
    v26 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v26
      && (v28 = WebCore::InspectorInstrumentation::instrumentingAgents(v26, v27)) != 0
      && (v29 = *(_QWORD *)(v28 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v29, (uint64_t)a3, v20, (uint64_t)&v41);
    }
    else
    {
      LOBYTE(v41) = 0;
      v42 = 0;
    }
    v37[0] = v39;
    v37[1] = 2;
    v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v30)
    {
      v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31);
      if (v32)
      {
        v33 = *(_QWORD *)(v32 + 96);
        if (v33)
          WebCore::InspectorCanvasAgent::recordAction(v33, a3, (const WTF::StringImpl *)&v38, v37);
      }
    }
    if (v42)
    {
      v34 = v41;
      v41 = 0;
      if (v34)
      {
        if (*v34 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v34;
      }
    }
    if (v40)
    {
      v35 = (_DWORD *)v39[0];
      v39[0] = 0;
      if (v35)
      {
        if (*v35 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v35;
      }
    }
    v36 = v38;
    v38 = 0;
    if (v36)
    {
      if (*(_DWORD *)v36 == 2)
        WTF::StringImpl::destroy(v36, v31);
      else
        *(_DWORD *)v36 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::fillInternal((uint64_t)a3, (WebCore::Path *)(v18 + 8), v20);
  return 10;
}

unint64_t WebCore::convert<WebCore::IDLEnumeration<WebCore::CanvasFillRule>,WebCore::jsCanvasRenderingContext2DPrototypeFunction_fill1Body(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSCanvasRenderingContext2D *)::{lambda(JSC::JSGlobalObject&,JSC::ThrowScope &)#1}>(_DWORD *a1, JSC::JSGlobalObject *a2, JSC::JSRopeString *this)
{
  unint64_t result;
  uint64_t v6;
  unint64_t v7;
  JSC::VM *v8;

  v8 = (JSC::VM *)*((_QWORD *)a2 + 7);
  result = WebCore::parseEnumeration<WebCore::CanvasFillRule>(a2, (unint64_t)this);
  v7 = result;
  if (*((_DWORD *)v8 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v8);
    if ((_DWORD)result)
      goto LABEL_8;
  }
  if (!HIDWORD(v7))
  {
    result = (unint64_t)WebCore::throwArgumentMustBeEnumError((uint64_t)a2, (uint64_t)&v8, 0, "fillRule", 9, "CanvasRenderingContext2D", 25, v6, "fill", 5, "\"nonzero\", \"evenodd\"", 21);
LABEL_8:
    a1[1] = 1;
    return result;
  }
  *a1 = v7;
  a1[1] = 0;
  return result;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_stroke2Body(WebCore *this, unint64_t a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  _BOOL4 v10;
  char **v11;
  BOOL v12;
  uint64_t v15;
  WebCore::InspectorInstrumentation *v16;
  WebCore::ScriptExecutionContext *v17;
  uint64_t v18;
  WebCore::InspectorCanvasAgent *v19;
  WebCore::InspectorInstrumentation *v20;
  WebCore::ScriptExecutionContext *v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  WTF::StringImpl *v25;
  _QWORD v26[2];
  WTF::StringImpl *v27;
  _QWORD v28[2];
  char v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v28[0] = *((_QWORD *)this + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    goto LABEL_12;
  v9 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSPath2D::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSPath2D::s_info && v11 != 0);
  }
  if (v10 && (v15 = *(_QWORD *)(a2 + 24)) != 0)
  {
    if (*((_BYTE *)a3 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      v16 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
      if (v16
        && (v18 = WebCore::InspectorInstrumentation::instrumentingAgents(v16, v17)) != 0
        && (v19 = *(WebCore::InspectorCanvasAgent **)(v18 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v19, a3, (WebCore::Path2D *)v15, (uint64_t)v28);
      }
      else
      {
        LOBYTE(v28[0]) = 0;
        v29 = 0;
      }
      v26[0] = v28;
      v26[1] = 1;
      v20 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
      if (v20)
      {
        v22 = WebCore::InspectorInstrumentation::instrumentingAgents(v20, v21);
        if (v22)
        {
          v23 = *(_QWORD *)(v22 + 96);
          if (v23)
            WebCore::InspectorCanvasAgent::recordAction(v23, a3, (const WTF::StringImpl *)&v27, v26);
        }
      }
      if (v29)
      {
        v24 = (_DWORD *)v28[0];
        v28[0] = 0;
        if (v24)
        {
          if (*v24 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v24;
        }
      }
      v25 = v27;
      v27 = 0;
      if (v25)
      {
        if (*(_DWORD *)v25 == 2)
          WTF::StringImpl::destroy(v25, v21);
        else
          *(_DWORD *)v25 -= 2;
      }
    }
    WebCore::CanvasRenderingContext2DBase::strokeInternal((float32x2_t *)a3, (const WebCore::Path *)(v15 + 8));
    return 10;
  }
  else
  {
LABEL_12:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v28, 0, "path", 5, "CanvasRenderingContext2D", 25, a8, "stroke", 7, "Path2D", 7);
    return 0;
  }
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_clip1Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4)
{
  JSC::JSRopeString *v5;
  int v6;
  uint64_t result;
  unsigned int v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  _QWORD v12[2];
  WTF::StringImpl *v13;
  uint64_t v14;
  _BYTE v15[24];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  if (*((_DWORD *)a2 + 8) == 1 || (v5 = (JSC::JSRopeString *)*((_QWORD *)a2 + 6), v5 == (JSC::JSRopeString *)10))
  {
    v14 = 0;
  }
  else
  {
    WebCore::convert<WebCore::IDLEnumeration<WebCore::CanvasFillRule>,WebCore::jsCanvasRenderingContext2DPrototypeFunction_clip1Body(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSCanvasRenderingContext2D *)::{lambda(JSC::JSGlobalObject&,JSC::ThrowScope &)#1}>(&v14, this, v5);
    if (HIDWORD(v14))
      return 0;
  }
  if (*((_BYTE *)a3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    WebCore::InspectorCanvasCallTracer::processArgument((uint64_t)a3, v14, v15);
    v12[0] = v15;
    v12[1] = 1;
    WebCore::InspectorCanvasCallTracer::recordAction(a3, (const WTF::StringImpl *)&v13, v12);
    std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v15);
    v11 = v13;
    v13 = 0;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        goto LABEL_17;
      *(_DWORD *)v11 -= 2;
    }
    while (HIDWORD(v14))
    {
      v11 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_17:
      WTF::StringImpl::destroy(v11, v10);
    }
  }
  v6 = v14;
  result = (*(uint64_t (**)(JSC::CallFrame *))(*(_QWORD *)a3 + 240))(a3);
  if (!result)
    return 10;
  v8 = *((_DWORD *)a3 + 33);
  if (v8)
  {
    if (*(_BYTE *)(*((_QWORD *)a3 + 15) + 560 * v8 - 400))
    {
      v9 = result;
      WebCore::CanvasRenderingContext2DBase::realizeSaves(a3);
      (*(void (**)(uint64_t, char *, BOOL))(*(_QWORD *)v9 + 496))(v9, (char *)a3 + 48, v6 != 0);
    }
    return 10;
  }
  __break(0xC471u);
  return result;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_clip2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  JSC::VM *v10;
  uint64_t v12;
  _BOOL4 v13;
  char **v14;
  BOOL v15;
  WebCore::Path2D *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  WebCore::InspectorInstrumentation *v22;
  WebCore::ScriptExecutionContext *v23;
  uint64_t v24;
  WebCore::InspectorCanvasAgent *v25;
  WebCore::InspectorInstrumentation *v26;
  WebCore::ScriptExecutionContext *v27;
  uint64_t v28;
  uint64_t v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  _DWORD *v35;
  WTF::StringImpl *v36;
  _QWORD v37[2];
  WTF::StringImpl *v38;
  _QWORD v39[2];
  char v40;
  _DWORD *v41;
  char v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v9 = *((_QWORD *)a2 + 6);
  v10 = (JSC::VM *)*((_QWORD *)this + 7);
  v39[0] = v10;
  if ((v9 & 0xFFFE000000000002) != 0)
    goto LABEL_12;
  v12 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
  v13 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
  v14 = (char **)(16 * v12);
  if ((_DWORD)v12)
    v15 = v14 == &WebCore::JSPath2D::s_info;
  else
    v15 = 1;
  if (!v15)
  {
    do
    {
      v14 = (char **)v14[2];
      v13 = v14 != 0;
    }
    while (v14 != &WebCore::JSPath2D::s_info && v14 != 0);
  }
  if (!v13 || (v18 = *(WebCore::Path2D **)(v9 + 24)) == 0)
  {
LABEL_12:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v39, 0, "path", 5, "CanvasRenderingContext2D", 25, a8, "clip", 5, "Path2D", 7);
    return 0;
  }
  if ((unint64_t)(*((int *)a2 + 8) - 3) > 0xFFFFFFFFFFFFFFFDLL)
  {
    LODWORD(v20) = 0;
  }
  else
  {
    v19 = *((_QWORD *)a2 + 7);
    if (v19 != 10)
    {
      v39[0] = v10;
      v20 = WebCore::parseEnumeration<WebCore::CanvasFillRule>(this, v19);
      if (!*((_DWORD *)v10 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) == 0)
      {
        if (HIDWORD(v20))
          goto LABEL_20;
        WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)v39, 1, "fillRule", 9, "CanvasRenderingContext2D", 25, v21, "clip", 5, "\"nonzero\", \"evenodd\"", 21);
      }
      return 0;
    }
    LODWORD(v20) = 0;
  }
LABEL_20:
  if (*((_BYTE *)a3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v22 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v22
      && (v24 = WebCore::InspectorInstrumentation::instrumentingAgents(v22, v23)) != 0
      && (v25 = *(WebCore::InspectorCanvasAgent **)(v24 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v25, a3, v18, (uint64_t)v39);
    }
    else
    {
      LOBYTE(v39[0]) = 0;
      v40 = 0;
    }
    v26 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v26
      && (v28 = WebCore::InspectorInstrumentation::instrumentingAgents(v26, v27)) != 0
      && (v29 = *(_QWORD *)(v28 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v29, (uint64_t)a3, v20, (uint64_t)&v41);
    }
    else
    {
      LOBYTE(v41) = 0;
      v42 = 0;
    }
    v37[0] = v39;
    v37[1] = 2;
    v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v30)
    {
      v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31);
      if (v32)
      {
        v33 = *(_QWORD *)(v32 + 96);
        if (v33)
          WebCore::InspectorCanvasAgent::recordAction(v33, a3, (const WTF::StringImpl *)&v38, v37);
      }
    }
    if (v42)
    {
      v34 = v41;
      v41 = 0;
      if (v34)
      {
        if (*v34 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v34;
      }
    }
    if (v40)
    {
      v35 = (_DWORD *)v39[0];
      v39[0] = 0;
      if (v35)
      {
        if (*v35 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v35;
      }
    }
    v36 = v38;
    v38 = 0;
    if (v36)
    {
      if (*(_DWORD *)v36 == 2)
        WTF::StringImpl::destroy(v36, v31);
      else
        *(_DWORD *)v36 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::clipInternal((unsigned int *)a3, (uint64_t)v18 + 8, v20);
  return 10;
}

unint64_t WebCore::convert<WebCore::IDLEnumeration<WebCore::CanvasFillRule>,WebCore::jsCanvasRenderingContext2DPrototypeFunction_clip1Body(JSC::JSGlobalObject *,JSC::CallFrame *,WebCore::JSCanvasRenderingContext2D *)::{lambda(JSC::JSGlobalObject&,JSC::ThrowScope &)#1}>(_DWORD *a1, JSC::JSGlobalObject *a2, JSC::JSRopeString *this)
{
  unint64_t result;
  uint64_t v6;
  unint64_t v7;
  JSC::VM *v8;

  v8 = (JSC::VM *)*((_QWORD *)a2 + 7);
  result = WebCore::parseEnumeration<WebCore::CanvasFillRule>(a2, (unint64_t)this);
  v7 = result;
  if (*((_DWORD *)v8 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v8);
    if ((_DWORD)result)
      goto LABEL_8;
  }
  if (!HIDWORD(v7))
  {
    result = (unint64_t)WebCore::throwArgumentMustBeEnumError((uint64_t)a2, (uint64_t)&v8, 0, "fillRule", 9, "CanvasRenderingContext2D", 25, v6, "clip", 5, "\"nonzero\", \"evenodd\"", 21);
LABEL_8:
    a1[1] = 1;
    return result;
  }
  *a1 = v7;
  a1[1] = 0;
  return result;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_isPointInPath1Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4)
{
  unint64_t v7;
  JSC::VM *v8;
  double v9;
  unint64_t v10;
  JSC::VM *v11;
  double v12;
  unint64_t v13;
  unint64_t v14;
  JSC::VM *v15;
  uint64_t v16;
  WebCore::InspectorInstrumentation *v18;
  WebCore::ScriptExecutionContext *v19;
  uint64_t v20;
  WebCore::InspectorCanvasAgent *v21;
  WebCore::InspectorInstrumentation *v22;
  WebCore::ScriptExecutionContext *v23;
  uint64_t v24;
  WebCore::InspectorCanvasAgent *v25;
  WebCore::InspectorInstrumentation *v26;
  WebCore::ScriptExecutionContext *v27;
  uint64_t v28;
  uint64_t v29;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  _DWORD *v35;
  _DWORD *v36;
  WTF::StringImpl *v37;
  double v38;
  double v39;
  _QWORD v40[2];
  WTF::StringImpl *v41;
  _QWORD v42[2];
  char v43;
  _DWORD *v44;
  char v45;
  _DWORD *v46;
  char v47;
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v7 = *((_QWORD *)a2 + 6);
  v42[0] = v7;
  v8 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v7 >= 0xFFFE000000000000)
  {
    v9 = (double)(int)v7;
  }
  else if (v7 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v42, this);
    v9 = v38;
  }
  else
  {
    *(_QWORD *)&v9 = v7 - 0x2000000000000;
  }
  if (*((_DWORD *)v8 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v8))
    return 0;
  v10 = *((_QWORD *)a2 + 7);
  v42[0] = v10;
  v11 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v10 >= 0xFFFE000000000000)
  {
    v12 = (double)(int)v10;
  }
  else if (v10 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v42, this);
    v12 = v39;
  }
  else
  {
    *(_QWORD *)&v12 = v10 - 0x2000000000000;
  }
  if (*((_DWORD *)v11 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v11))
    return 0;
  if ((unint64_t)(*((int *)a2 + 8) - 4) > 0xFFFFFFFFFFFFFFFCLL)
  {
    LODWORD(v14) = 0;
  }
  else
  {
    v13 = *((_QWORD *)a2 + 8);
    if (v13 != 10)
    {
      v42[0] = *((_QWORD *)this + 7);
      v15 = (JSC::VM *)v42[0];
      v14 = WebCore::parseEnumeration<WebCore::CanvasFillRule>(this, v13);
      if (!*((_DWORD *)v15 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) == 0)
      {
        if (HIDWORD(v14))
          goto LABEL_15;
        WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)v42, 2, "fillRule", 9, "CanvasRenderingContext2D", 25, v16, "isPointInPath", 14, "\"nonzero\", \"evenodd\"", 21);
      }
      return 0;
    }
    LODWORD(v14) = 0;
  }
LABEL_15:
  if (*((_BYTE *)a3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v18 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v18
      && (v20 = WebCore::InspectorInstrumentation::instrumentingAgents(v18, v19)) != 0
      && (v21 = *(WebCore::InspectorCanvasAgent **)(v20 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v21, a3, v9, (uint64_t)v42);
    }
    else
    {
      LOBYTE(v42[0]) = 0;
      v43 = 0;
    }
    v22 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v22
      && (v24 = WebCore::InspectorInstrumentation::instrumentingAgents(v22, v23)) != 0
      && (v25 = *(WebCore::InspectorCanvasAgent **)(v24 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v25, a3, v12, (uint64_t)&v44);
    }
    else
    {
      LOBYTE(v44) = 0;
      v45 = 0;
    }
    v26 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v26
      && (v28 = WebCore::InspectorInstrumentation::instrumentingAgents(v26, v27)) != 0
      && (v29 = *(_QWORD *)(v28 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v29, (uint64_t)a3, v14, (uint64_t)&v46);
    }
    else
    {
      LOBYTE(v46) = 0;
      v47 = 0;
    }
    v40[0] = v42;
    v40[1] = 3;
    v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v30)
    {
      v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31);
      if (v32)
      {
        v33 = *(_QWORD *)(v32 + 96);
        if (v33)
          WebCore::InspectorCanvasAgent::recordAction(v33, a3, (const WTF::StringImpl *)&v41, v40);
      }
    }
    if (v47)
    {
      v34 = v46;
      v46 = 0;
      if (v34)
      {
        if (*v34 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v34;
      }
    }
    if (v45)
    {
      v35 = v44;
      v44 = 0;
      if (v35)
      {
        if (*v35 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v35;
      }
    }
    if (v43)
    {
      v36 = (_DWORD *)v42[0];
      v42[0] = 0;
      if (v36)
      {
        if (*v36 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v36;
      }
    }
    v37 = v41;
    v41 = 0;
    if (v37)
    {
      if (*(_DWORD *)v37 == 2)
        WTF::StringImpl::destroy(v37, v31);
      else
        *(_DWORD *)v37 -= 2;
    }
  }
  if (WebCore::CanvasRenderingContext2DBase::isPointInPathInternal((uint64_t)a3, (uint64_t)a3 + 48, v14, v9, v12))return 7;
  else
    return 6;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_isPointInPath2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  JSC::VM *v10;
  uint64_t v13;
  _BOOL4 v14;
  char **v15;
  BOOL v16;
  WebCore::Path2D *v19;
  unint64_t v20;
  double v21;
  unint64_t v22;
  JSC::VM *v23;
  double v24;
  unint64_t v25;
  unint64_t v26;
  JSC::VM *v27;
  uint64_t v28;
  WebCore::InspectorInstrumentation *v29;
  WebCore::ScriptExecutionContext *v30;
  uint64_t v31;
  WebCore::InspectorCanvasAgent *v32;
  WebCore::InspectorInstrumentation *v33;
  WebCore::ScriptExecutionContext *v34;
  uint64_t v35;
  WebCore::InspectorCanvasAgent *v36;
  WebCore::InspectorInstrumentation *v37;
  WebCore::ScriptExecutionContext *v38;
  uint64_t v39;
  WebCore::InspectorCanvasAgent *v40;
  WebCore::InspectorInstrumentation *v41;
  WebCore::ScriptExecutionContext *v42;
  uint64_t v43;
  uint64_t v44;
  WebCore::InspectorInstrumentation *v45;
  WebCore::ScriptExecutionContext *v46;
  uint64_t v47;
  uint64_t v48;
  _DWORD *v49;
  _DWORD *v50;
  _DWORD *v51;
  _DWORD *v52;
  WTF::StringImpl *v53;
  double v54;
  double v55;
  _QWORD v56[2];
  WTF::StringImpl *v57;
  _QWORD v58[2];
  char v59;
  _DWORD *v60;
  char v61;
  _DWORD *v62;
  char v63;
  _DWORD *v64;
  char v65;
  uint64_t v66;

  v66 = *MEMORY[0x1E0C80C00];
  v9 = *((_QWORD *)a2 + 6);
  v10 = (JSC::VM *)*((_QWORD *)this + 7);
  v58[0] = v10;
  if ((v9 & 0xFFFE000000000002) != 0)
    goto LABEL_12;
  v13 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
  v14 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
  v15 = (char **)(16 * v13);
  if ((_DWORD)v13)
    v16 = v15 == &WebCore::JSPath2D::s_info;
  else
    v16 = 1;
  if (!v16)
  {
    do
    {
      v15 = (char **)v15[2];
      v14 = v15 != 0;
    }
    while (v15 != &WebCore::JSPath2D::s_info && v15 != 0);
  }
  if (!v14 || (v19 = *(WebCore::Path2D **)(v9 + 24)) == 0)
  {
LABEL_12:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v58, 0, "path", 5, "CanvasRenderingContext2D", 25, a8, "isPointInPath", 14, "Path2D", 7);
    return 0;
  }
  v20 = *((_QWORD *)a2 + 7);
  v58[0] = v20;
  if (v20 >= 0xFFFE000000000000)
  {
    v21 = (double)(int)v20;
  }
  else if (v20 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v58, this);
    v21 = v54;
  }
  else
  {
    *(_QWORD *)&v21 = v20 - 0x2000000000000;
  }
  if (*((_DWORD *)v10 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v10))
    return 0;
  v22 = *((_QWORD *)a2 + 8);
  v58[0] = v22;
  v23 = (JSC::VM *)*((_QWORD *)this + 7);
  if (v22 >= 0xFFFE000000000000)
  {
    v24 = (double)(int)v22;
  }
  else if (v22 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v58, this);
    v24 = v55;
  }
  else
  {
    *(_QWORD *)&v24 = v22 - 0x2000000000000;
  }
  if (*((_DWORD *)v23 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v23))
    return 0;
  if ((unint64_t)(*((int *)a2 + 8) - 5) > 0xFFFFFFFFFFFFFFFBLL)
  {
    LODWORD(v26) = 0;
  }
  else
  {
    v25 = *((_QWORD *)a2 + 9);
    if (v25 != 10)
    {
      v58[0] = *((_QWORD *)this + 7);
      v27 = (JSC::VM *)v58[0];
      v26 = WebCore::parseEnumeration<WebCore::CanvasFillRule>(this, v25);
      if (!*((_DWORD *)v27 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v27) & 1) == 0)
      {
        if (HIDWORD(v26))
          goto LABEL_28;
        WebCore::throwArgumentMustBeEnumError((uint64_t)this, (uint64_t)v58, 3, "fillRule", 9, "CanvasRenderingContext2D", 25, v28, "isPointInPath", 14, "\"nonzero\", \"evenodd\"", 21);
      }
      return 0;
    }
    LODWORD(v26) = 0;
  }
LABEL_28:
  if (*((_BYTE *)a3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v29 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v29
      && (v31 = WebCore::InspectorInstrumentation::instrumentingAgents(v29, v30)) != 0
      && (v32 = *(WebCore::InspectorCanvasAgent **)(v31 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v32, a3, v19, (uint64_t)v58);
    }
    else
    {
      LOBYTE(v58[0]) = 0;
      v59 = 0;
    }
    v33 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v33
      && (v35 = WebCore::InspectorInstrumentation::instrumentingAgents(v33, v34)) != 0
      && (v36 = *(WebCore::InspectorCanvasAgent **)(v35 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v36, a3, v21, (uint64_t)&v60);
    }
    else
    {
      LOBYTE(v60) = 0;
      v61 = 0;
    }
    v37 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v37
      && (v39 = WebCore::InspectorInstrumentation::instrumentingAgents(v37, v38)) != 0
      && (v40 = *(WebCore::InspectorCanvasAgent **)(v39 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v40, a3, v24, (uint64_t)&v62);
    }
    else
    {
      LOBYTE(v62) = 0;
      v63 = 0;
    }
    v41 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v41
      && (v43 = WebCore::InspectorInstrumentation::instrumentingAgents(v41, v42)) != 0
      && (v44 = *(_QWORD *)(v43 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v44, (uint64_t)a3, v26, (uint64_t)&v64);
    }
    else
    {
      LOBYTE(v64) = 0;
      v65 = 0;
    }
    v56[0] = v58;
    v56[1] = 4;
    v45 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v45)
    {
      v47 = WebCore::InspectorInstrumentation::instrumentingAgents(v45, v46);
      if (v47)
      {
        v48 = *(_QWORD *)(v47 + 96);
        if (v48)
          WebCore::InspectorCanvasAgent::recordAction(v48, a3, (const WTF::StringImpl *)&v57, v56);
      }
    }
    if (v65)
    {
      v49 = v64;
      v64 = 0;
      if (v49)
      {
        if (*v49 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v49;
      }
    }
    if (v63)
    {
      v50 = v62;
      v62 = 0;
      if (v50)
      {
        if (*v50 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v50;
      }
    }
    if (v61)
    {
      v51 = v60;
      v60 = 0;
      if (v51)
      {
        if (*v51 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v51;
      }
    }
    if (v59)
    {
      v52 = (_DWORD *)v58[0];
      v58[0] = 0;
      if (v52)
      {
        if (*v52 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v52;
      }
    }
    v53 = v57;
    v57 = 0;
    if (v53)
    {
      if (*(_DWORD *)v53 == 2)
        WTF::StringImpl::destroy(v53, v46);
      else
        *(_DWORD *)v53 -= 2;
    }
  }
  if (WebCore::CanvasRenderingContext2DBase::isPointInPathInternal((uint64_t)a3, (uint64_t)v19 + 8, v26, v21, v24))return 7;
  else
    return 6;
}

uint64_t WebCore::toJS<WebCore::IDLInterface<WebCore::CanvasGradient>,WebCore::ExceptionOr<WTF::Ref<WebCore::CanvasGradient,WTF::RawPtrTraits<WebCore::CanvasGradient>,WTF::DefaultRefDerefTraits<WebCore::CanvasGradient>>>>(JSC *a1, WTF::StringImpl *a2, JSC::VM **a3, uint64_t a4)
{
  int v4;
  WebCore::CanvasGradient *v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  WTF *v12;
  void *v13;
  WTF *v14;
  void *v15;
  WTF::StringImpl *v17;
  uint64_t v18;
  WebCore::CanvasGradient *v19;
  WTF::StringImpl *v20;

  v4 = *(_DWORD *)(a4 + 16);
  if (!v4)
  {
    v6 = *(WebCore::CanvasGradient **)a4;
    *(_QWORD *)a4 = 0;
    v7 = (uint64_t *)(*((_QWORD *)a2 + 415) + 32);
    v19 = v6;
    v8 = WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::get(v7, &v19);
    if (v8)
    {
      v10 = v8;
      if (!v6)
        return v10;
    }
    else
    {
      ++*(_DWORD *)v6;
      v19 = v6;
      v10 = WebCore::toJSNewlyCreated(0, (uint64_t)a2, (WebCore::JSDOMGlobalObject *)&v19);
      if (v19)
      {
        if (*(_DWORD *)v19 == 1)
        {
          WebCore::CanvasGradient::~CanvasGradient(v19, v9);
          WTF::fastFree(v14, v15);
        }
        else
        {
          --*(_DWORD *)v19;
        }
      }
    }
    if (*(_DWORD *)v6 == 1)
    {
      WebCore::CanvasGradient::~CanvasGradient(v6, v9);
      WTF::fastFree(v12, v13);
    }
    else
    {
      --*(_DWORD *)v6;
    }
    return v10;
  }
  if (v4 == 1)
  {
    LOBYTE(v19) = *(_BYTE *)a4;
    v17 = *(WTF::StringImpl **)(a4 + 8);
    *(_QWORD *)(a4 + 8) = 0;
    v20 = v17;
    if (!*((_QWORD *)*a3 + 2))
    {
      WebCore::propagateExceptionSlowPath(a1, a3, (unsigned __int8 *)&v19);
      v17 = v20;
    }
    v20 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, a2);
      else
        *(_DWORD *)v17 -= 2;
    }
    return 0;
  }
  v18 = std::__throw_bad_variant_access[abi:sn180100]();
  return _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore14CanvasGradientENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(v18);
}

WebCore::CanvasGradient *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore14CanvasGradientENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WebCore::CanvasGradient **a2)
{
  WebCore::CanvasGradient *result;
  WTF *v3;
  void *v4;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
    {
      WebCore::CanvasGradient::~CanvasGradient(result, a2);
      return (WebCore::CanvasGradient *)WTF::fastFree(v3, v4);
    }
    else
    {
      --*(_DWORD *)result;
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore14CanvasGradientENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

JSC::JSGlobalObject *WebCore::Converter<WebCore::IDLLegacyNullToEmptyStringAdaptor<WebCore::IDLDOMString>>::convert@<X0>(JSC::JSGlobalObject *result@<X0>, unint64_t this@<X1>, uint64_t a3@<X8>)
{
  JSC::VM *v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;
  int v7;
  WTF::StringImpl *v8;
  char hasExceptionsAfterHandlingTraps;
  _DWORD *v10;
  WTF::StringImpl *v11;
  int v12;
  WTF::StringImpl *v13;
  unint64_t v14;

  if (this != 2)
  {
    v14 = this;
    v4 = (JSC::VM *)*((_QWORD *)result + 7);
    if ((this & 0xFFFE000000000002) != 0 || *(_BYTE *)(this + 5) != 2)
    {
      JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v14, result);
    }
    else
    {
      v5 = *(WTF::StringImpl **)(this + 8);
      if ((v5 & 1) != 0)
        v5 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, result);
      if (v5)
        *(_DWORD *)v5 += 2;
      v13 = v5;
    }
    if (*((_DWORD *)v4 + 20))
    {
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
      v6 = v13;
      if ((hasExceptionsAfterHandlingTraps & 1) != 0)
      {
        v7 = 1;
        v12 = 1;
        v13 = 0;
        if (v6)
        {
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy(v6, v8);
          else
            *(_DWORD *)v6 -= 2;
        }
        goto LABEL_12;
      }
    }
    else
    {
      v6 = v13;
    }
    v7 = 0;
    v11 = v6;
    v12 = 0;
LABEL_12:
    *(_BYTE *)a3 = 0;
    *(_DWORD *)(a3 + 8) = -1;
    result = (JSC::JSGlobalObject *)((uint64_t (*)(unint64_t *, uint64_t, WTF::StringImpl **))off_1E3247F70[v7])(&v14, a3, &v11);
    *(_DWORD *)(a3 + 8) = v7;
    if (v12 != -1)
      return (JSC::JSGlobalObject *)((uint64_t (*)(unint64_t *, WTF::StringImpl **))off_1E3238AF8[v12])(&v14, &v11);
    return result;
  }
  v10 = (_DWORD *)*MEMORY[0x1E0CBF738];
  if (*MEMORY[0x1E0CBF738])
    *v10 += 2;
  *(_QWORD *)a3 = v10;
  *(_DWORD *)(a3 + 8) = 0;
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore13CanvasPatternENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF **a2)
{
  WTF *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  v2 = *a2;
  *a2 = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = *((_QWORD *)v2 + 1);
      *((_QWORD *)v2 + 1) = 0;
      if (v3)
      {
        if (*(_DWORD *)v3 == 1)
        {
          if (*(_BYTE *)(v3 + 40))
          {
            v5 = *(unsigned int *)(v3 + 32);
            if ((_DWORD)v5 != -1)
              ((void (*)(char *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11NativeImageENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS7_INS8_11ImageBufferENSA_ISF_EENSC_ISF_EEEENS6_23ObjectIdentifierGenericINS8_31RenderingResourceIdentifierTypeENS6_38ObjectIdentifierThreadSafeAccessTraitsIyEEyEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSQ_EEEDcOSR_DpOT0____fmatrix[v5])(&v7, v3 + 24);
            *(_DWORD *)(v3 + 32) = -1;
          }
          v6 = *(unsigned int *)(v3 + 16);
          if ((_DWORD)v6 != -1)
            ((void (*)(char *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11NativeImageENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS7_INS8_11ImageBufferENSA_ISF_EENSC_ISF_EEEENS6_23ObjectIdentifierGenericINS8_31RenderingResourceIdentifierTypeENS6_38ObjectIdentifierThreadSafeAccessTraitsIyEEyEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSQ_EEEDcOSR_DpOT0____fmatrix[v6])(&v8, v3 + 8);
          *(_DWORD *)(v3 + 16) = -1;
          WTF::fastFree((WTF *)v3, a2);
        }
        else
        {
          --*(_DWORD *)v3;
        }
      }
      return WTF::fastFree(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN7WebCore13CanvasPatternENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

unint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_createImageData1Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4)
{
  JSC::CallFrame *v4;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  WebCore::ScriptExecutionContext *v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  WTF *v18;
  void *v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  _DWORD *v23;
  WebCore::InspectorInstrumentation *v24;
  WebCore::ScriptExecutionContext *v25;
  uint64_t v26;
  WebCore::InspectorCanvasAgent *v27;
  WebCore::InspectorInstrumentation *v28;
  WebCore::ScriptExecutionContext *v29;
  uint64_t v30;
  WebCore::InspectorCanvasAgent *v31;
  WebCore::InspectorInstrumentation *v32;
  uint64_t v33;
  uint64_t v34;
  _DWORD *v35;
  _DWORD *v36;
  _DWORD *v37;
  WTF::StringImpl *v38;
  double v39;
  JSC::VM *v40;
  double v41;
  double v42;
  double v43;
  WTF::StringImpl *v44;
  _BYTE v45[4];
  unsigned __int16 v46;
  int v47;
  JSC::VM *v48;
  unint64_t v49;
  WTF::StringImpl *v50;
  unint64_t v51;
  WTF::StringImpl *v52;
  int v53;
  _DWORD *v54;
  char v55;
  _DWORD *v56;
  char v57;
  uint64_t v58;

  v4 = a3;
  v58 = *MEMORY[0x1E0C80C00];
  v7 = *((_QWORD *)this + 7);
  v48 = (JSC::VM *)v7;
  v8 = *((_QWORD *)a3 + 3);
  v9 = *((_QWORD *)a2 + 6);
  v51 = v9;
  if (v9 < 0xFFFE000000000000)
  {
    if (v9 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v51, this);
      v39 = v42;
    }
    else
    {
      *(_QWORD *)&v39 = v9 - 0x2000000000000;
    }
    if (*(_DWORD *)(v7 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v7))
      HIDWORD(v49) = 1;
    else
      WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)&v49, (uint64_t)this, v39);
  }
  else
  {
    v49 = v9;
  }
  v10 = v49;
  if (HIDWORD(v49))
    return 0;
  v11 = *((_QWORD *)a2 + 7);
  v51 = v11;
  if (v11 < 0xFFFE000000000000)
  {
    v40 = (JSC::VM *)*((_QWORD *)this + 7);
    if (v11 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v51, this);
      v41 = v43;
    }
    else
    {
      *(_QWORD *)&v41 = v11 - 0x2000000000000;
    }
    if (*((_DWORD *)v40 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v40))
      HIDWORD(v49) = 1;
    else
      WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)&v49, (uint64_t)this, v41);
  }
  else
  {
    v49 = v11;
  }
  v12 = v49;
  if (HIDWORD(v49))
    return 0;
  if ((unint64_t)(*((int *)a2 + 8) - 4) > 0xFFFFFFFFFFFFFFFCLL)
    v13 = 10;
  else
    v13 = *((_QWORD *)a2 + 8);
  WebCore::convertDictionary<WebCore::ImageDataSettings>(this, (JSC::JSCell *)v13, (uint64_t)v45);
  if (v47)
    return 0;
  if (*(_BYTE *)(v8 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v44 = (WTF::StringImpl *)v51;
    v24 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v8 + 32) + 144))(*(_QWORD *)(v8 + 32));
    if (v24
      && (v26 = WebCore::InspectorInstrumentation::instrumentingAgents(v24, v25)) != 0
      && (v27 = *(WebCore::InspectorCanvasAgent **)(v26 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v27, (WebCore::CanvasRenderingContext *)v8, v10, (uint64_t)&v51);
    }
    else
    {
      LOBYTE(v51) = 0;
      LOBYTE(v53) = 0;
    }
    v28 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v8 + 32) + 144))(*(_QWORD *)(v8 + 32));
    if (v28
      && (v30 = WebCore::InspectorInstrumentation::instrumentingAgents(v28, v29)) != 0
      && (v31 = *(WebCore::InspectorCanvasAgent **)(v30 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v31, (WebCore::CanvasRenderingContext *)v8, v12, (uint64_t)&v54);
    }
    else
    {
      LOBYTE(v54) = 0;
      v55 = 0;
    }
    if (!v47)
    {
      WebCore::InspectorCanvasCallTracer::processArgument(v8, &v56);
      v49 = (unint64_t)&v51;
      v50 = (WTF::StringImpl *)3;
      v32 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v8 + 32) + 144))(*(_QWORD *)(v8 + 32));
      if (v32)
      {
        v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v32, v14);
        if (v33)
        {
          v34 = *(_QWORD *)(v33 + 96);
          if (v34)
            WebCore::InspectorCanvasAgent::recordAction(v34, (WebCore::CanvasRenderingContext *)v8, (const WTF::StringImpl *)&v44, &v49);
        }
      }
      if (v57)
      {
        v35 = v56;
        v56 = 0;
        if (v35)
        {
          if (*v35 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v35;
        }
      }
      if (v55)
      {
        v36 = v54;
        v54 = 0;
        if (v36)
        {
          if (*v36 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v36;
        }
      }
      if ((_BYTE)v53)
      {
        v37 = (_DWORD *)v51;
        v51 = 0;
        if (v37)
        {
          if (*v37 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v37;
        }
      }
      v38 = v44;
      v44 = 0;
      if (v38)
      {
        if (*(_DWORD *)v38 == 2)
          goto LABEL_76;
        *(_DWORD *)v38 -= 2;
      }
      goto LABEL_74;
    }
    goto LABEL_75;
  }
  while (1)
  {
    v4 = *(JSC::CallFrame **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
    if (v10 && v12)
    {
      if (v10 >= 0)
        v15 = v10;
      else
        v15 = -v10;
      if (v12 >= 0)
        v16 = v12;
      else
        v16 = -v12;
      WebCore::ImageData::createUninitialized(v15, v16, *(_BYTE *)(v8 + 802), v46 | 0x10000, (uint64_t)&v51);
      v17 = v53;
      if (!v53)
      {
        JSC::GenericTypedArrayView<JSC::Uint8ClampedAdaptor>::zeroFill(*(_QWORD *)(v51 + 16));
        v17 = v53;
        if (!v53)
        {
          v18 = (WTF *)v51;
          v51 = 0;
          v20 = WebCore::wrap<WebCore::ImageData>(this, (uint64_t)v4, v18);
          if (*(_DWORD *)v18 == 1)
          {
            v23 = (_DWORD *)*((_QWORD *)v18 + 2);
            *((_QWORD *)v18 + 2) = 0;
            if (v23)
            {
              if (*v23 == 1)
                JSC::ArrayBufferView::operator delete();
              else
                --*v23;
            }
            WTF::fastFree(v18, v19);
          }
          else
          {
            --*(_DWORD *)v18;
          }
          goto LABEL_32;
        }
      }
    }
    else
    {
      LOBYTE(v51) = 0;
      v52 = 0;
      v17 = 1;
      v53 = 1;
    }
    if (v17 == 1)
      break;
    do
    {
LABEL_75:
      v38 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_76:
      WTF::StringImpl::destroy(v38, v14);
LABEL_74:
      ;
    }
    while (v47);
  }
  LOBYTE(v49) = v51;
  v21 = v52;
  v52 = 0;
  v50 = v21;
  if (!*(_QWORD *)(v7 + 16))
  {
    WebCore::propagateExceptionSlowPath(this, &v48, (unsigned __int8 *)&v49);
    v21 = v50;
  }
  v50 = 0;
  if (v21)
  {
    if (*(_DWORD *)v21 == 2)
      WTF::StringImpl::destroy(v21, v14);
    else
      *(_DWORD *)v21 -= 2;
  }
  v20 = 0;
LABEL_32:
  if (v53 != -1)
    ((void (*)(unint64_t *, unint64_t *))off_1E3249728[v53])(&v49, &v51);
  return v20;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore9ImageDataENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF **a2)
{
  WTF *v2;
  _DWORD *v3;

  v2 = *a2;
  *a2 = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = (_DWORD *)*((_QWORD *)v2 + 2);
      *((_QWORD *)v2 + 2) = 0;
      if (v3)
      {
        if (*v3 == 1)
          JSC::ArrayBufferView::operator delete();
        else
          --*v3;
      }
      WTF::fastFree(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore9ImageDataENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_putImageData2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  JSC::VM *v10;
  uint64_t v11;
  _BOOL4 v12;
  char **v13;
  BOOL v14;
  WebCore::ImageData *v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  int v20;
  unint64_t v21;
  int v22;
  unint64_t v23;
  int v24;
  unint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  WebCore::InspectorInstrumentation *v30;
  WebCore::ScriptExecutionContext *v31;
  uint64_t v32;
  WebCore::InspectorCanvasAgent *v33;
  WebCore::InspectorInstrumentation *v34;
  WebCore::ScriptExecutionContext *v35;
  uint64_t v36;
  WebCore::InspectorCanvasAgent *v37;
  WebCore::InspectorInstrumentation *v38;
  WebCore::ScriptExecutionContext *v39;
  uint64_t v40;
  WebCore::InspectorCanvasAgent *v41;
  WebCore::InspectorInstrumentation *v42;
  WebCore::ScriptExecutionContext *v43;
  uint64_t v44;
  WebCore::InspectorCanvasAgent *v45;
  WebCore::InspectorInstrumentation *v46;
  WebCore::ScriptExecutionContext *v47;
  uint64_t v48;
  WebCore::InspectorCanvasAgent *v49;
  WebCore::InspectorInstrumentation *v50;
  WebCore::ScriptExecutionContext *v51;
  uint64_t v52;
  WebCore::InspectorCanvasAgent *v53;
  WebCore::InspectorInstrumentation *v54;
  WebCore::ScriptExecutionContext *v55;
  uint64_t v56;
  WebCore::InspectorCanvasAgent *v57;
  WebCore::InspectorInstrumentation *v58;
  WebCore::ScriptExecutionContext *v59;
  uint64_t v60;
  uint64_t v61;
  _DWORD *v62;
  _DWORD *v63;
  _DWORD *v64;
  _DWORD *v65;
  _DWORD *v66;
  _DWORD *v67;
  _DWORD *v68;
  WTF::StringImpl *v69;
  WebCore::ImageData *v70;
  JSC::CallFrame *v71;
  JSC::JSGlobalObject *v72;
  double v73;
  int v74;
  WebCore::ImageData *v75;
  JSC::CallFrame *v76;
  JSC::JSGlobalObject *v77;
  JSC::VM *v78;
  double v79;
  WebCore::ImageData *v80;
  JSC::CallFrame *v81;
  JSC::JSGlobalObject *v82;
  JSC::VM *v83;
  double v84;
  WebCore::ImageData *v85;
  JSC::CallFrame *v86;
  JSC::JSGlobalObject *v87;
  JSC::VM *v88;
  double v89;
  JSC::JSGlobalObject *v90;
  JSC::VM *v91;
  double v92;
  JSC::VM *v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  WebCore::ImageData *v101;
  WebCore::ImageData *v102;
  WebCore::ImageData *v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  WebCore::CanvasRenderingContext *v118;
  WebCore::CanvasRenderingContext *v119;
  WebCore::CanvasRenderingContext *v120;
  int v121[2];
  uint64_t v122;
  WTF::StringImpl *v123;
  _QWORD v124[2];
  char v125;
  _DWORD *v126;
  char v127;
  _DWORD *v128;
  char v129;
  _DWORD *v130;
  char v131;
  _DWORD *v132;
  char v133;
  _DWORD *v134;
  char v135;
  _DWORD *v136;
  char v137;
  uint64_t v138;

  v138 = *MEMORY[0x1E0C80C00];
  v9 = *((_QWORD *)a2 + 6);
  v10 = (JSC::VM *)*((_QWORD *)this + 7);
  v124[0] = v10;
  if ((v9 & 0xFFFE000000000002) != 0)
    goto LABEL_33;
  v11 = *(unsigned int *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C);
  v12 = *(_DWORD *)(16 * (*(_DWORD *)v9 & 0xFFFFFFFE) + 0x4C) != 0;
  v13 = (char **)(16 * v11);
  if ((_DWORD)v11)
    v14 = v13 == &WebCore::JSImageData::s_info;
  else
    v14 = 1;
  if (!v14)
  {
    do
    {
      v13 = (char **)v13[2];
      v12 = v13 != 0;
    }
    while (v13 != &WebCore::JSImageData::s_info && v13 != 0);
  }
  if (v12 && (v16 = *(WebCore::ImageData **)(v9 + 24)) != 0)
  {
    v17 = *((_QWORD *)a2 + 7);
    v124[0] = v17;
    if (v17 < 0xFFFE000000000000)
    {
      v70 = v16;
      v71 = a3;
      v72 = a2;
      if (v17 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v124, this);
        v73 = v95;
      }
      else
      {
        *(_QWORD *)&v73 = v17 - 0x2000000000000;
      }
      if (*((_DWORD *)v10 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v10))
        v121[1] = 1;
      else
        WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)v121, (uint64_t)this, v73);
      a2 = v72;
      a3 = v71;
      v16 = v70;
    }
    else
    {
      v121[0] = v17;
      v121[1] = 0;
    }
    v18 = v121[0];
    if (v121[1])
    {
      return 0;
    }
    else
    {
      v19 = *((_QWORD *)a2 + 8);
      v124[0] = v19;
      if (v19 < 0xFFFE000000000000)
      {
        v74 = v121[0];
        v75 = v16;
        v76 = a3;
        v77 = a2;
        v78 = (JSC::VM *)*((_QWORD *)this + 7);
        if (v19 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v124, this);
          v79 = v96;
        }
        else
        {
          *(_QWORD *)&v79 = v19 - 0x2000000000000;
        }
        if (*((_DWORD *)v78 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v78))
          v121[1] = 1;
        else
          WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)v121, (uint64_t)this, v79);
        a2 = v77;
        a3 = v76;
        v16 = v75;
        v18 = v74;
      }
      else
      {
        v121[0] = v19;
        v121[1] = 0;
      }
      v20 = v121[0];
      if (v121[1])
      {
        return 0;
      }
      else
      {
        v21 = *((_QWORD *)a2 + 9);
        v124[0] = v21;
        if (v21 < 0xFFFE000000000000)
        {
          v109 = v121[0];
          v114 = v18;
          v80 = v16;
          v81 = a3;
          v82 = a2;
          v83 = (JSC::VM *)*((_QWORD *)this + 7);
          if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
          {
            JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v124, this);
            v84 = v97;
          }
          else
          {
            *(_QWORD *)&v84 = v21 - 0x2000000000000;
          }
          if (*((_DWORD *)v83 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v83))
            v121[1] = 1;
          else
            WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)v121, (uint64_t)this, v84);
          a2 = v82;
          a3 = v81;
          v16 = v80;
          v20 = v109;
          v18 = v114;
        }
        else
        {
          v121[0] = v21;
          v121[1] = 0;
        }
        v22 = v121[0];
        if (v121[1])
        {
          return 0;
        }
        else
        {
          v23 = *((_QWORD *)a2 + 10);
          v124[0] = v23;
          if (v23 < 0xFFFE000000000000)
          {
            v105 = v121[0];
            v110 = v20;
            v115 = v18;
            v85 = v16;
            v86 = a3;
            v87 = a2;
            v88 = (JSC::VM *)*((_QWORD *)this + 7);
            if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v124, this);
              v89 = v98;
            }
            else
            {
              *(_QWORD *)&v89 = v23 - 0x2000000000000;
            }
            if (*((_DWORD *)v88 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v88))
              v121[1] = 1;
            else
              WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)v121, (uint64_t)this, v89);
            a2 = v87;
            a3 = v86;
            v16 = v85;
            v20 = v110;
            v18 = v115;
            v22 = v105;
          }
          else
          {
            v121[0] = v23;
            v121[1] = 0;
          }
          v24 = v121[0];
          if (v121[1])
          {
            return 0;
          }
          else
          {
            v25 = *((_QWORD *)a2 + 11);
            v124[0] = v25;
            if (v25 < 0xFFFE000000000000)
            {
              v106 = v22;
              v111 = v20;
              v116 = v18;
              v119 = a3;
              v102 = v16;
              v90 = a2;
              v91 = (JSC::VM *)*((_QWORD *)this + 7);
              if (v25 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
              {
                JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v124, this);
                v92 = v99;
              }
              else
              {
                *(_QWORD *)&v92 = v25 - 0x2000000000000;
              }
              if (*((_DWORD *)v91 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v91))
                v121[1] = 1;
              else
                WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)v121, (uint64_t)this, v92);
              a2 = v90;
              v18 = v116;
              a3 = v119;
              v16 = v102;
              v22 = v106;
              v20 = v111;
            }
            else
            {
              v121[0] = v25;
              v121[1] = 0;
            }
            v26 = v121[0];
            if (v121[1])
            {
              return 0;
            }
            else
            {
              v27 = *((_QWORD *)a2 + 12);
              v124[0] = v27;
              if (v27 < 0xFFFE000000000000)
              {
                v107 = v22;
                v112 = v20;
                v117 = v18;
                v120 = a3;
                v103 = v16;
                v93 = (JSC::VM *)*((_QWORD *)this + 7);
                if (v27 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
                {
                  JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v124, this);
                  v94 = v100;
                }
                else
                {
                  *(_QWORD *)&v94 = v27 - 0x2000000000000;
                }
                if (*((_DWORD *)v93 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v93))
                  v121[1] = 1;
                else
                  WebCore::enforceRange<WebCore::IDLLong>((WTF::StringImpl *)v121, (uint64_t)this, v94);
                v16 = v103;
                v18 = v117;
                a3 = v120;
                v22 = v107;
                v20 = v112;
              }
              else
              {
                v121[0] = v27;
                v121[1] = 0;
              }
              v28 = v121[0];
              if (v121[1])
              {
                return 0;
              }
              else
              {
                if (*((_BYTE *)a3 + 25))
                {
                  v104 = v22;
                  v108 = v20;
                  v113 = v18;
                  v118 = a3;
                  v101 = v16;
                  WTF::StringImpl::createWithoutCopyingNonEmpty();
                  v123 = (WTF::StringImpl *)v124[0];
                  v30 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v118 + 4)
                                                                                               + 144))(*((_QWORD *)v118 + 4));
                  if (v30
                    && (v32 = WebCore::InspectorInstrumentation::instrumentingAgents(v30, v31)) != 0
                    && (v33 = *(WebCore::InspectorCanvasAgent **)(v32 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v33, v118, v101, (uint64_t)v124);
                  }
                  else
                  {
                    LOBYTE(v124[0]) = 0;
                    v125 = 0;
                  }
                  v34 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v118 + 4)
                                                                                               + 144))(*((_QWORD *)v118 + 4));
                  if (v34
                    && (v36 = WebCore::InspectorInstrumentation::instrumentingAgents(v34, v35)) != 0
                    && (v37 = *(WebCore::InspectorCanvasAgent **)(v36 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v37, v118, v113, (uint64_t)&v126);
                  }
                  else
                  {
                    LOBYTE(v126) = 0;
                    v127 = 0;
                  }
                  v38 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v118 + 4)
                                                                                               + 144))(*((_QWORD *)v118 + 4));
                  if (v38
                    && (v40 = WebCore::InspectorInstrumentation::instrumentingAgents(v38, v39)) != 0
                    && (v41 = *(WebCore::InspectorCanvasAgent **)(v40 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v41, v118, v108, (uint64_t)&v128);
                  }
                  else
                  {
                    LOBYTE(v128) = 0;
                    v129 = 0;
                  }
                  v42 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v118 + 4)
                                                                                               + 144))(*((_QWORD *)v118 + 4));
                  if (v42
                    && (v44 = WebCore::InspectorInstrumentation::instrumentingAgents(v42, v43)) != 0
                    && (v45 = *(WebCore::InspectorCanvasAgent **)(v44 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v45, v118, v104, (uint64_t)&v130);
                  }
                  else
                  {
                    LOBYTE(v130) = 0;
                    v131 = 0;
                  }
                  v46 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v118 + 4)
                                                                                               + 144))(*((_QWORD *)v118 + 4));
                  if (v46
                    && (v48 = WebCore::InspectorInstrumentation::instrumentingAgents(v46, v47)) != 0
                    && (v49 = *(WebCore::InspectorCanvasAgent **)(v48 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v49, v118, v24, (uint64_t)&v132);
                  }
                  else
                  {
                    LOBYTE(v132) = 0;
                    v133 = 0;
                  }
                  v50 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v118 + 4)
                                                                                               + 144))(*((_QWORD *)v118 + 4));
                  if (v50
                    && (v52 = WebCore::InspectorInstrumentation::instrumentingAgents(v50, v51)) != 0
                    && (v53 = *(WebCore::InspectorCanvasAgent **)(v52 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v53, v118, v26, (uint64_t)&v134);
                  }
                  else
                  {
                    LOBYTE(v134) = 0;
                    v135 = 0;
                  }
                  v54 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v118 + 4)
                                                                                               + 144))(*((_QWORD *)v118 + 4));
                  if (v54
                    && (v56 = WebCore::InspectorInstrumentation::instrumentingAgents(v54, v55)) != 0
                    && (v57 = *(WebCore::InspectorCanvasAgent **)(v56 + 96)) != 0)
                  {
                    WebCore::InspectorCanvasAgent::processArgument(v57, v118, v28, (uint64_t)&v136);
                  }
                  else
                  {
                    LOBYTE(v136) = 0;
                    v137 = 0;
                  }
                  *(_QWORD *)v121 = v124;
                  v122 = 7;
                  v58 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v118 + 4)
                                                                                               + 144))(*((_QWORD *)v118 + 4));
                  if (v58)
                  {
                    v60 = WebCore::InspectorInstrumentation::instrumentingAgents(v58, v59);
                    if (v60)
                    {
                      v61 = *(_QWORD *)(v60 + 96);
                      if (v61)
                        WebCore::InspectorCanvasAgent::recordAction(v61, v118, (const WTF::StringImpl *)&v123, v121);
                    }
                  }
                  v18 = v113;
                  a3 = v118;
                  v16 = v101;
                  v22 = v104;
                  v20 = v108;
                  if (v137)
                  {
                    v62 = v136;
                    v136 = 0;
                    if (v62)
                    {
                      if (*v62 == 1)
                      {
                        WTF::JSONImpl::Value::operator delete();
                        v22 = v104;
                        v20 = v108;
                        v18 = v113;
                        a3 = v118;
                        v16 = v101;
                      }
                      else
                      {
                        --*v62;
                      }
                    }
                  }
                  if (v135)
                  {
                    v63 = v134;
                    v134 = 0;
                    if (v63)
                    {
                      if (*v63 == 1)
                      {
                        WTF::JSONImpl::Value::operator delete();
                        v22 = v104;
                        v20 = v108;
                        v18 = v113;
                        a3 = v118;
                        v16 = v101;
                      }
                      else
                      {
                        --*v63;
                      }
                    }
                  }
                  if (v133)
                  {
                    v64 = v132;
                    v132 = 0;
                    if (v64)
                    {
                      if (*v64 == 1)
                      {
                        WTF::JSONImpl::Value::operator delete();
                        v22 = v104;
                        v20 = v108;
                        v18 = v113;
                        a3 = v118;
                        v16 = v101;
                      }
                      else
                      {
                        --*v64;
                      }
                    }
                  }
                  if (v131)
                  {
                    v65 = v130;
                    v130 = 0;
                    if (v65)
                    {
                      if (*v65 == 1)
                      {
                        WTF::JSONImpl::Value::operator delete();
                        v22 = v104;
                        v20 = v108;
                        v18 = v113;
                        a3 = v118;
                        v16 = v101;
                      }
                      else
                      {
                        --*v65;
                      }
                    }
                  }
                  if (v129)
                  {
                    v66 = v128;
                    v128 = 0;
                    if (v66)
                    {
                      if (*v66 == 1)
                      {
                        WTF::JSONImpl::Value::operator delete();
                        v22 = v104;
                        v20 = v108;
                        v18 = v113;
                        a3 = v118;
                        v16 = v101;
                      }
                      else
                      {
                        --*v66;
                      }
                    }
                  }
                  if (v127)
                  {
                    v67 = v126;
                    v126 = 0;
                    if (v67)
                    {
                      if (*v67 == 1)
                      {
                        WTF::JSONImpl::Value::operator delete();
                        v22 = v104;
                        v20 = v108;
                        v18 = v113;
                        a3 = v118;
                        v16 = v101;
                      }
                      else
                      {
                        --*v67;
                      }
                    }
                  }
                  if (v125)
                  {
                    v68 = (_DWORD *)v124[0];
                    v124[0] = 0;
                    if (v68)
                    {
                      if (*v68 == 1)
                      {
                        WTF::JSONImpl::Value::operator delete();
                        v22 = v104;
                        v20 = v108;
                        v18 = v113;
                        a3 = v118;
                        v16 = v101;
                      }
                      else
                      {
                        --*v68;
                      }
                    }
                  }
                  v69 = v123;
                  v123 = 0;
                  if (v69)
                  {
                    if (*(_DWORD *)v69 == 2)
                    {
                      WTF::StringImpl::destroy(v69, v59);
                      v22 = v104;
                      v20 = v108;
                      v18 = v113;
                      a3 = v118;
                      v16 = v101;
                    }
                    else
                    {
                      *(_DWORD *)v69 -= 2;
                    }
                  }
                }
                WebCore::CanvasRenderingContext2DBase::putImageData(a3, v16, v18, v20, v22, v24, v26, v28);
                return 10;
              }
            }
          }
        }
      }
    }
  }
  else
  {
LABEL_33:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)v124, 0, "imagedata", 10, "CanvasRenderingContext2D", 25, a8, "putImageData", 13, "ImageData", 10);
    return 0;
  }
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_roundRect2Body(WebCore *this, WTF::StringImpl **a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4)
{
  JSC::JSGlobalObject *v5;
  uint64_t v7;
  WTF::StringImpl *v8;
  double v9;
  WTF::StringImpl *v10;
  JSC::VM *v11;
  double v12;
  WTF::StringImpl *v13;
  JSC::VM *v14;
  double v15;
  WTF::StringImpl *v16;
  JSC::VM *v17;
  double v18;
  float v19;
  float v20;
  float v21;
  float v22;
  WTF::StringImpl *v23;
  uint64_t result;
  WebCore::InspectorInstrumentation *v25;
  WebCore::ScriptExecutionContext *v26;
  uint64_t v27;
  WebCore::InspectorCanvasAgent *v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  WebCore::InspectorInstrumentation *v31;
  WebCore::ScriptExecutionContext *v32;
  uint64_t v33;
  WebCore::InspectorCanvasAgent *v34;
  WebCore::InspectorInstrumentation *v35;
  WebCore::ScriptExecutionContext *v36;
  uint64_t v37;
  WebCore::InspectorCanvasAgent *v38;
  WebCore::InspectorInstrumentation *v39;
  WebCore::ScriptExecutionContext *v40;
  uint64_t v41;
  WebCore::InspectorCanvasAgent *v42;
  WebCore::InspectorInstrumentation *v43;
  WebCore::ScriptExecutionContext *v44;
  uint64_t v45;
  uint64_t v46;
  WebCore::InspectorInstrumentation *v47;
  WebCore::ScriptExecutionContext *v48;
  uint64_t v49;
  uint64_t v50;
  _DWORD *v51;
  _DWORD *v52;
  _DWORD *v53;
  _DWORD *v54;
  WTF::StringImpl *v55;
  WTF::StringImpl *v56;
  double v57;
  JSC::VM *v58;
  double v59;
  JSC::VM *v60;
  double v61;
  double v62;
  JSC::VM *v63;
  WTF::StringImpl *v64;
  JSC::VM *v65;
  WTF::StringImpl **v66;
  WTF::StringImpl *v67;
  char v68;
  WTF::StringImpl *v69[2];
  __int128 v70;
  uint64_t v71;
  char v72;
  _DWORD *v73;
  char v74;
  _DWORD *v75;
  char v76;
  _DWORD *v77;
  char v78;
  char v79[8];
  _OWORD v80[2];
  uint64_t v81;
  int v82;
  uint64_t v83;

  v5 = (JSC::JSGlobalObject *)a2;
  v83 = *MEMORY[0x1E0C80C00];
  v7 = *((_QWORD *)this + 7);
  v65 = (JSC::VM *)v7;
  v8 = a2[6];
  v69[0] = v8;
  if ((unint64_t)v8 >= 0xFFFE000000000000)
  {
    v9 = (double)(int)v8;
  }
  else
  {
    if ((unint64_t)v8 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      goto LABEL_97;
    *(_QWORD *)&v9 = (char *)v8 - 0x2000000000000;
  }
  while (1)
  {
    if (*(_DWORD *)(v7 + 80) && JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v7))
      return 0;
    v10 = (WTF::StringImpl *)*((_QWORD *)v5 + 7);
    v69[0] = v10;
    v11 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((unint64_t)v10 >= 0xFFFE000000000000)
    {
      v12 = (double)(int)v10;
    }
    else if ((unint64_t)v10 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v58 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v69, this);
      v11 = v58;
      v12 = v59;
    }
    else
    {
      *(_QWORD *)&v12 = (char *)v10 - 0x2000000000000;
    }
    if (*((_DWORD *)v11 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v11))
      return 0;
    v13 = (WTF::StringImpl *)*((_QWORD *)v5 + 8);
    v69[0] = v13;
    v14 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((unint64_t)v13 >= 0xFFFE000000000000)
    {
      v15 = (double)(int)v13;
    }
    else if ((unint64_t)v13 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v60 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v69, this);
      v14 = v60;
      v15 = v61;
    }
    else
    {
      *(_QWORD *)&v15 = (char *)v13 - 0x2000000000000;
    }
    if (*((_DWORD *)v14 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v14))
      return 0;
    v16 = (WTF::StringImpl *)*((_QWORD *)v5 + 9);
    v69[0] = v16;
    v17 = (JSC::VM *)*((_QWORD *)this + 7);
    if ((unint64_t)v16 >= 0xFFFE000000000000)
    {
      v18 = (double)(int)v16;
    }
    else if ((unint64_t)v16 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v63 = (JSC::VM *)*((_QWORD *)this + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v69, this);
      v17 = v63;
      v18 = v62;
    }
    else
    {
      *(_QWORD *)&v18 = (char *)v16 - 0x2000000000000;
    }
    if (*((_DWORD *)v17 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v17))
      return 0;
    v5 = (JSC::JSGlobalObject *)*((_QWORD *)v5 + 10);
    WebCore::Converter<WebCore::IDLUnion<WebCore::IDLUnrestrictedDouble,WebCore::IDLDictionary<WebCore::DOMPointInit>>>::convert(this, v5, (uint64_t)v79);
    if (v82)
      return 0;
    if (!*((_BYTE *)a3 + 25))
      goto LABEL_19;
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    v64 = v69[0];
    v25 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v25
      && (v27 = WebCore::InspectorInstrumentation::instrumentingAgents(v25, v26)) != 0
      && (v28 = *(WebCore::InspectorCanvasAgent **)(v27 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v28, a3, v9, (uint64_t)v69);
    }
    else
    {
      LOBYTE(v69[0]) = 0;
      LOBYTE(v70) = 0;
    }
    v31 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v31
      && (v33 = WebCore::InspectorInstrumentation::instrumentingAgents(v31, v32)) != 0
      && (v34 = *(WebCore::InspectorCanvasAgent **)(v33 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v34, a3, v12, (uint64_t)&v70 + 8);
    }
    else
    {
      BYTE8(v70) = 0;
      v72 = 0;
    }
    v35 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v35
      && (v37 = WebCore::InspectorInstrumentation::instrumentingAgents(v35, v36)) != 0
      && (v38 = *(WebCore::InspectorCanvasAgent **)(v37 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v38, a3, v15, (uint64_t)&v73);
    }
    else
    {
      LOBYTE(v73) = 0;
      v74 = 0;
    }
    v39 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v39
      && (v41 = WebCore::InspectorInstrumentation::instrumentingAgents(v39, v40)) != 0
      && (v42 = *(WebCore::InspectorCanvasAgent **)(v41 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v42, a3, v18, (uint64_t)&v75);
    }
    else
    {
      LOBYTE(v75) = 0;
      v76 = 0;
    }
    if (!v82)
    {
      v43 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
      if (v43
        && (v45 = WebCore::InspectorInstrumentation::instrumentingAgents(v43, v44)) != 0
        && (v46 = *(_QWORD *)(v45 + 96)) != 0)
      {
        WebCore::InspectorCanvasAgent::processArgument(v46, (uint64_t)a3, (uint64_t)v80);
      }
      else
      {
        LOBYTE(v77) = 0;
        v78 = 0;
      }
      v66 = v69;
      v67 = (WTF::StringImpl *)5;
      v47 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
      if (v47)
      {
        v49 = WebCore::InspectorInstrumentation::instrumentingAgents(v47, v48);
        if (v49)
        {
          v50 = *(_QWORD *)(v49 + 96);
          if (v50)
            WebCore::InspectorCanvasAgent::recordAction(v50, a3, (const WTF::StringImpl *)&v64, &v66);
        }
      }
      if (v78)
      {
        v51 = v77;
        v77 = 0;
        if (v51)
        {
          if (*v51 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v51;
        }
      }
      if (v76)
      {
        v52 = v75;
        v75 = 0;
        if (v52)
        {
          if (*v52 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v52;
        }
      }
      if (v74)
      {
        v53 = v73;
        v73 = 0;
        if (v53)
        {
          if (*v53 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v53;
        }
      }
      if (v72)
      {
        v54 = (_DWORD *)*((_QWORD *)&v70 + 1);
        *((_QWORD *)&v70 + 1) = 0;
        if (v54)
        {
          if (*v54 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*v54;
        }
      }
      if ((_BYTE)v70)
      {
        v55 = v69[0];
        v69[0] = 0;
        if (v55)
        {
          if (*(_DWORD *)v55 == 1)
            WTF::JSONImpl::Value::operator delete();
          else
            --*(_DWORD *)v55;
        }
      }
      v56 = v64;
      v64 = 0;
      if (v56)
      {
        if (*(_DWORD *)v56 == 2)
          WTF::StringImpl::destroy(v56, v48);
        else
          *(_DWORD *)v56 -= 2;
      }
      if (!v82)
      {
LABEL_19:
        v19 = v18;
        v20 = v15;
        v21 = v12;
        v22 = v9;
        *(_OWORD *)v69 = v80[0];
        v70 = v80[1];
        v71 = v81;
        WebCore::CanvasPath::roundRect((JSC::CallFrame *)((char *)a3 + 40), (uint64_t)v69, 1uLL, &v66, v22, v21, v20, v19);
        if (!v68)
          return 10;
        LOBYTE(v69[0]) = (_BYTE)v66;
        v29 = v67;
        v67 = 0;
        v69[1] = v29;
        if (!*(_QWORD *)(v7 + 16))
        {
          WebCore::propagateExceptionSlowPath(this, &v65, (unsigned __int8 *)v69);
          v29 = v69[1];
        }
        v69[1] = 0;
        if (v29)
        {
          if (*(_DWORD *)v29 == 2)
            WTF::StringImpl::destroy(v29, v23);
          else
            *(_DWORD *)v29 -= 2;
        }
        if (v68)
        {
          v30 = v67;
          v67 = 0;
          if (v30)
          {
            if (*(_DWORD *)v30 != 2)
            {
              result = 0;
              *(_DWORD *)v30 -= 2;
              return result;
            }
            WTF::StringImpl::destroy(v30, v23);
          }
        }
        return 0;
      }
    }
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_97:
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)v69, this);
    v9 = v57;
  }
}

uint64_t WebCore::Converter<WebCore::IDLUnion<WebCore::IDLUnrestrictedDouble,WebCore::IDLDictionary<WebCore::DOMPointInit>>>::convert@<X0>(JSC::JSGlobalObject *a1@<X0>, JSC::JSCell *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  int v5;
  __int128 v6;
  _OWORD v7[2];
  int v8;

  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) == 2
    || ((unint64_t)a2 & 0xFFFE000000000002) == 0 && *((unsigned __int8 *)a2 + 5) >= 0x17u)
  {
    result = WebCore::convertDictionary<WebCore::DOMPointInit>(a2, (uint64_t)a1, (uint64_t)v7);
    v5 = 1;
    if (!v8)
    {
      v6 = v7[1];
      *(_OWORD *)(a3 + 8) = v7[0];
      *(_OWORD *)(a3 + 24) = v6;
      *(_DWORD *)(a3 + 40) = 1;
      v5 = 0;
    }
  }
  else
  {
    result = WebCore::Converter<WebCore::IDLUnrestrictedDouble>::convert(a1, (unint64_t)a2, (uint64_t)v7);
    v5 = DWORD2(v7[0]);
    if (DWORD2(v7[0]))
    {
      v5 = 1;
    }
    else
    {
      *(_QWORD *)(a3 + 8) = *(_QWORD *)&v7[0];
      *(_DWORD *)(a3 + 40) = 0;
    }
  }
  *(_DWORD *)(a3 + 48) = v5;
  return result;
}

uint64_t JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLUnion<WebCore::IDLUnrestrictedDouble,WebCore::IDLDictionary<WebCore::DOMPointInit>>>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<std::variant<double,WebCore::DOMPointInit>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t result;
  JSValue v8;
  int i;
  unsigned int v10;
  JSC::JSCell *IndexQuickly;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  JSC::JSCell *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _BYTE v36[8];
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  int v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v6 = *((_QWORD *)a1 + 7);
  result = JSC::getIterationMode();
  if ((_DWORD)result == 2)
  {
    for (i = 1; ; ++i)
    {
      v10 = (*(_BYTE *)(a2 + 4) & 0xE) != 0 ? *(_DWORD *)(*(_QWORD *)(a2 + 8) - 8) : 0;
      if (i - 1 >= v10)
        break;
      IndexQuickly = (JSC::JSCell *)JSC::JSObject::tryGetIndexQuickly((JSC::JSObject *)a2, i - 1, 0);
      if (!IndexQuickly)
        IndexQuickly = (JSC::JSCell *)JSC::JSObject::get((JSC::JSObject *)a2, a1, (i - 1));
      if (*(_DWORD *)(v6 + 80))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6);
        if ((result & 1) != 0)
          break;
      }
      v12 = *a3;
      result = WebCore::Converter<WebCore::IDLUnion<WebCore::IDLUnrestrictedDouble,WebCore::IDLDictionary<WebCore::DOMPointInit>>>::convert(a1, IndexQuickly, (uint64_t)v36);
      if (!v40)
      {
        v33 = v37;
        v34 = v38;
        v35 = v39;
        v13 = *(unsigned int *)(v12 + 12);
        if ((_DWORD)v13 == *(_DWORD *)(v12 + 8))
        {
          result = (uint64_t)WTF::Vector<std::variant<double,WebCore::DOMPointInit>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v12, v13 + 1, (unint64_t)&v33);
          v14 = *(_QWORD *)v12 + 40 * *(unsigned int *)(v12 + 12);
          v15 = *(_QWORD *)(result + 32);
          v16 = *(_OWORD *)(result + 16);
          *(_OWORD *)v14 = *(_OWORD *)result;
          *(_OWORD *)(v14 + 16) = v16;
          *(_QWORD *)(v14 + 32) = v15;
        }
        else
        {
          v17 = *(_QWORD *)v12 + 40 * v13;
          v18 = v37;
          v19 = v38;
          *(_QWORD *)(v17 + 32) = v39;
          *(_OWORD *)v17 = v18;
          *(_OWORD *)(v17 + 16) = v19;
        }
        ++*(_DWORD *)(v12 + 12);
      }
      if (*(_QWORD *)(v6 + 16))
      {
        v31 = JSC::JSArrayIterator::create();
        v32 = i | 0xFFFE000000000000;
        if (i < 0)
          v32 = COERCE__INT64((double)i) + 0x2000000000000;
        *(_QWORD *)(v31 + 16) = v32;
        return JSC::iteratorClose();
      }
    }
  }
  else
  {
    JSC::iteratorForIterable(a1, (JSC::JSGlobalObject *)a2, v8);
    if (!*(_DWORD *)(v6 + 80) || (result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6), (result & 1) == 0))
    {
      while (1)
      {
        result = JSC::iteratorStep();
        if (*(_QWORD *)(v6 + 16) || result == 6)
          break;
        v21 = (JSC::JSCell *)JSC::iteratorValue();
        if (*(_DWORD *)(v6 + 80))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6);
          if ((result & 1) != 0)
            break;
        }
        v22 = *a3;
        WebCore::Converter<WebCore::IDLUnion<WebCore::IDLUnrestrictedDouble,WebCore::IDLDictionary<WebCore::DOMPointInit>>>::convert(a1, v21, (uint64_t)v36);
        if (!v40)
        {
          v33 = v37;
          v34 = v38;
          v35 = v39;
          v23 = *(unsigned int *)(v22 + 12);
          if ((_DWORD)v23 == *(_DWORD *)(v22 + 8))
          {
            v24 = WTF::Vector<std::variant<double,WebCore::DOMPointInit>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v22, v23 + 1, (unint64_t)&v33);
            v25 = *(_QWORD *)v22 + 40 * *(unsigned int *)(v22 + 12);
            v26 = *((_QWORD *)v24 + 4);
            v27 = *((_OWORD *)v24 + 1);
            *(_OWORD *)v25 = *(_OWORD *)v24;
            *(_OWORD *)(v25 + 16) = v27;
            *(_QWORD *)(v25 + 32) = v26;
          }
          else
          {
            v28 = *(_QWORD *)v22 + 40 * v23;
            v29 = v37;
            v30 = v38;
            *(_QWORD *)(v28 + 32) = v39;
            *(_OWORD *)v28 = v29;
            *(_OWORD *)(v28 + 16) = v30;
          }
          ++*(_DWORD *)(v22 + 12);
        }
        if (*(_QWORD *)(v6 + 16))
          return JSC::iteratorClose();
      }
    }
  }
  return result;
}

char *WTF::Vector<std::variant<double,WebCore::DOMPointInit>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3;
  WTF *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  WTF *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  WTF *v26;
  __int128 v27;
  __int128 v28;

  v3 = a3;
  v5 = *(WTF **)a1;
  if (*(_QWORD *)a1 <= a3)
  {
    v6 = *(unsigned int *)(a1 + 12);
    if ((unint64_t)v5 + 40 * v6 > a3)
    {
      v7 = *(unsigned int *)(a1 + 8);
      v8 = v7 + (v7 >> 2);
      if (v8 >= 0x10)
        v9 = v8 + 1;
      else
        v9 = 16;
      if (v9 <= a2)
        v9 = a2;
      if (v9 <= v7)
      {
        v17 = *(WTF **)a1;
        return (char *)v17 + 8 * ((uint64_t)(v3 - (_QWORD)v5) >> 3);
      }
      if (v9 < 0x6666667)
      {
        v10 = 40 * v9;
        v11 = WTF::fastMalloc((WTF *)(40 * v9));
        v13 = 0;
        *(_DWORD *)(a1 + 8) = (v10 & 0xFFFFFFF8) / 0x28;
        *(_QWORD *)a1 = v11;
        do
        {
          v14 = v11 + v13;
          v15 = *(_OWORD *)((char *)v5 + v13);
          v16 = *(_OWORD *)((char *)v5 + v13 + 16);
          *(_QWORD *)(v14 + 32) = *(_QWORD *)((char *)v5 + v13 + 32);
          *(_OWORD *)v14 = v15;
          *(_OWORD *)(v14 + 16) = v16;
          v13 += 40;
        }
        while (40 * v6 != v13);
        v17 = *(WTF **)a1;
        if (v5)
        {
          if (v17 == v5)
          {
            *(_QWORD *)a1 = 0;
            *(_DWORD *)(a1 + 8) = 0;
          }
          WTF::fastFree(v5, v12);
          v17 = *(WTF **)a1;
        }
        return (char *)v17 + 8 * ((uint64_t)(v3 - (_QWORD)v5) >> 3);
      }
LABEL_33:
      __break(0xC471u);
      JUMPOUT(0x194928EE8);
    }
  }
  v18 = *(unsigned int *)(a1 + 8);
  v19 = v18 + (v18 >> 2);
  if (v19 >= 0x10)
    v20 = v19 + 1;
  else
    v20 = 16;
  if (v20 <= a2)
    v20 = a2;
  if (v20 > v18)
  {
    if (v20 >= 0x6666667)
      goto LABEL_33;
    v21 = *(unsigned int *)(a1 + 12);
    v22 = 40 * v20;
    v23 = WTF::fastMalloc((WTF *)(40 * v20));
    *(_DWORD *)(a1 + 8) = (v22 & 0xFFFFFFF8) / 0x28;
    *(_QWORD *)a1 = v23;
    if ((_DWORD)v21)
    {
      v25 = 40 * v21;
      v26 = v5;
      do
      {
        v27 = *(_OWORD *)v26;
        v28 = *((_OWORD *)v26 + 1);
        *(_QWORD *)(v23 + 32) = *((_QWORD *)v26 + 4);
        *(_OWORD *)v23 = v27;
        *(_OWORD *)(v23 + 16) = v28;
        v23 += 40;
        v26 = (WTF *)((char *)v26 + 40);
        v25 -= 40;
      }
      while (v25);
    }
    if (v5)
    {
      if (*(WTF **)a1 == v5)
      {
        *(_QWORD *)a1 = 0;
        *(_DWORD *)(a1 + 8) = 0;
      }
      WTF::fastFree(v5, v24);
    }
  }
  return (char *)v3;
}

WTF *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6VectorINS_7variantIJdN7WebCore12DOMPointInitEEEELm0ENS8_15CrashOnOverflowELm16ENS8_10FastMallocEEENSB_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF **a2)
{
  WTF *result;

  result = *a2;
  if (*a2)
  {
    *a2 = 0;
    *((_DWORD *)a2 + 2) = 0;
    return (WTF *)WTF::fastFree(result, a2);
  }
  return result;
}

WTF *WebCore::Detail::NumericSequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLUnrestrictedDouble>>::convert@<X0>(uint64_t this@<X1>, JSC::JSGlobalObject *a2@<X0>, uint64_t a3@<X8>)
{
  unsigned int v6;
  char v7;
  uint64_t v8;
  JSC::VM *v9;
  void *v10;
  int v11;
  int v12;
  int v13;
  WTF *result;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  uint64_t v18;
  WTF::StringImpl **v19;

  v18 = *((_QWORD *)a2 + 7);
  if ((this & 0xFFFE000000000002) == 0)
  {
    v6 = *(unsigned __int8 *)(this + 5);
    if (v6 > 0x16)
    {
      if (v6 != 36 || (JSC::JSArray::isIteratorProtocolFastAndNonObservable((JSC::JSArray *)this) & 1) == 0)
        return (WTF *)WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLUnrestrictedDouble>>::convert(a2, this, a3);
      v7 = *(_BYTE *)(this + 4);
      if ((v7 & 0xE) != 0)
      {
        v8 = *(unsigned int *)(*(_QWORD *)(this + 8) - 8);
        v16 = 0;
        v17 = 0;
        if ((_DWORD)v8)
        {
          if (v8 >> 29 || (WTF::tryFastMalloc((WTF *)(8 * v8)), !v19))
          {
            JSC::throwTypeError();
            goto LABEL_22;
          }
          LODWORD(v17) = v8;
          v16 = (WTF::StringImpl *)v19;
          v7 = *(_BYTE *)(this + 4);
        }
      }
      else
      {
        LODWORD(v8) = 0;
        v16 = 0;
        v17 = 0;
      }
      if ((v7 & 0xC) == 4)
      {
        WebCore::Detail::NumericSequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLUnrestrictedDouble>>::convertArray(this, v8, v7 & 0xE, (uint64_t)&v16, a3);
LABEL_14:
        result = v16;
        if (v16)
        {
          v16 = 0;
          LODWORD(v17) = 0;
          return (WTF *)WTF::fastFree(result, v10);
        }
        return result;
      }
      v9 = (JSC::VM *)*((_QWORD *)a2 + 7);
      v19 = &v16;
      JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLUnrestrictedDouble>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<double,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(a2, this, (uint64_t *)&v19);
      if (!*((_DWORD *)v9 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) == 0)
      {
        v11 = 0;
        *(_QWORD *)a3 = v16;
        v12 = v17;
        v13 = HIDWORD(v17);
        v16 = 0;
        v17 = 0;
        *(_DWORD *)(a3 + 8) = v12;
        *(_DWORD *)(a3 + 12) = v13;
LABEL_13:
        *(_DWORD *)(a3 + 16) = v11;
        goto LABEL_14;
      }
LABEL_22:
      v11 = 1;
      goto LABEL_13;
    }
  }
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  JSC::throwTypeError();
  result = v16;
  v16 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      result = (WTF *)WTF::StringImpl::destroy(result, v15);
    else
      *(_DWORD *)result -= 2;
  }
  *(_DWORD *)(a3 + 16) = 1;
  return result;
}

uint64_t WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLUnrestrictedDouble>>::convert@<X0>(JSC::JSGlobalObject *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  JSC::VM *v4;
  uint64_t result;
  void *v6;
  WTF *v7;
  uint64_t v8;
  WTF **v9;

  v7 = 0;
  v8 = 0;
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v9 = &v7;
  result = JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLUnrestrictedDouble>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<double,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(a1, a2, (uint64_t *)&v9);
  if (*((_DWORD *)v4 + 20) && (result = JSC::VM::hasExceptionsAfterHandlingTraps(v4), (result & 1) != 0))
  {
    result = (uint64_t)v7;
    *(_DWORD *)(a3 + 16) = 1;
    if (result)
    {
      v7 = 0;
      LODWORD(v8) = 0;
      return WTF::fastFree((WTF *)result, v6);
    }
  }
  else
  {
    *(_QWORD *)a3 = v7;
    *(_QWORD *)(a3 + 8) = v8;
    *(_DWORD *)(a3 + 16) = 0;
  }
  return result;
}

void WebCore::Detail::NumericSequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLUnrestrictedDouble>>::convertArray(uint64_t a1@<X2>, unsigned int a2@<W3>, int a3@<W4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  int v31;
  uint64_t v32;

  if (a3 != 4)
  {
    if (a2)
    {
      v26 = 0;
      v27 = 8 * a2;
      do
      {
        v28 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + v26);
        v32 = v28;
        v29 = *(unsigned int *)(a4 + 12);
        if ((_DWORD)v29 == *(_DWORD *)(a4 + 8))
        {
          v30 = (_QWORD *)WTF::Vector<double,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(a4, v29 + 1, (unint64_t)&v32);
          v29 = *(unsigned int *)(a4 + 12);
          *(_QWORD *)(*(_QWORD *)a4 + 8 * v29) = *v30;
        }
        else
        {
          *(_QWORD *)(*(_QWORD *)a4 + 8 * v29) = v28;
        }
        v25 = v29 + 1;
        *(_DWORD *)(a4 + 12) = v25;
        v26 += 8;
      }
      while (v27 != v26);
      goto LABEL_43;
    }
LABEL_42:
    v25 = *(_DWORD *)(a4 + 12);
    goto LABEL_43;
  }
  if (!a2)
    goto LABEL_42;
  v8 = 0;
  v9 = 8 * a2;
  do
  {
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + v8);
    if (v10)
    {
      v11 = *(unsigned int *)(a4 + 12);
      if ((_DWORD)v11 == *(_DWORD *)(a4 + 8))
      {
        v12 = v11 + (v11 >> 2);
        if (v12 >= 0x10)
          v13 = v12 + 1;
        else
          v13 = 16;
        if (v13 <= v11 + 1)
          v14 = v11 + 1;
        else
          v14 = v13;
        if (v14 >> 29)
        {
          __break(0xC471u);
          JUMPOUT(0x194929420);
        }
        v15 = *(void **)a4;
        v16 = (void *)WTF::fastMalloc((WTF *)(8 * v14));
        *(_DWORD *)(a4 + 8) = v14;
        *(_QWORD *)a4 = v16;
        memcpy(v16, v15, 8 * v11);
        if (v15)
        {
          if (*(void **)a4 == v15)
          {
            *(_QWORD *)a4 = 0;
            *(_DWORD *)(a4 + 8) = 0;
          }
          WTF::fastFree((WTF *)v15, v17);
        }
        v11 = *(unsigned int *)(a4 + 12);
      }
      *(double *)(*(_QWORD *)a4 + 8 * v11) = (double)(int)v10;
    }
    else
    {
      v18 = *(unsigned int *)(a4 + 12);
      if ((_DWORD)v18 == *(_DWORD *)(a4 + 8))
      {
        v19 = v18 + (v18 >> 2);
        if (v19 >= 0x10)
          v20 = v19 + 1;
        else
          v20 = 16;
        if (v20 <= v18 + 1)
          v21 = v18 + 1;
        else
          v21 = v20;
        if (v21 >> 29)
        {
          __break(0xC471u);
          JUMPOUT(0x194929428);
        }
        v22 = *(void **)a4;
        v23 = (void *)WTF::fastMalloc((WTF *)(8 * v21));
        *(_DWORD *)(a4 + 8) = v21;
        *(_QWORD *)a4 = v23;
        memcpy(v23, v22, 8 * v18);
        if (v22)
        {
          if (*(void **)a4 == v22)
          {
            *(_QWORD *)a4 = 0;
            *(_DWORD *)(a4 + 8) = 0;
          }
          WTF::fastFree((WTF *)v22, v24);
        }
        v11 = *(unsigned int *)(a4 + 12);
        *(_QWORD *)(*(_QWORD *)a4 + 8 * v11) = 0;
      }
      else
      {
        *(_QWORD *)(*(_QWORD *)a4 + 8 * v18) = 0;
        LODWORD(v11) = v18;
      }
    }
    v25 = v11 + 1;
    *(_DWORD *)(a4 + 12) = v11 + 1;
    v8 += 8;
  }
  while (v9 != v8);
LABEL_43:
  *(_QWORD *)a5 = *(_QWORD *)a4;
  v31 = *(_DWORD *)(a4 + 8);
  *(_QWORD *)a4 = 0;
  *(_QWORD *)(a4 + 8) = 0;
  *(_DWORD *)(a5 + 8) = v31;
  *(_DWORD *)(a5 + 12) = v25;
  *(_DWORD *)(a5 + 16) = 0;
}

uint64_t JSC::forEachInIterable<WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLUnrestrictedDouble>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<double,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}>(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t result;
  JSValue v8;
  unint64_t i;
  unint64_t v10;
  unint64_t v12;
  unint64_t Index;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;

  v6 = *((_QWORD *)a1 + 7);
  result = JSC::getIterationMode();
  if ((_DWORD)result == 2)
  {
    for (i = 0; ; ++i)
    {
      v10 = (*(_BYTE *)(a2 + 4) & 0xE) != 0 ? *(unsigned int *)(*(_QWORD *)(a2 + 8) - 8) : 0;
      if (i >= v10)
        break;
      Index = JSC::JSObject::getIndex((JSC::JSObject *)a2, a1, i);
      if (*(_DWORD *)(v6 + 80))
      {
        v17 = Index;
        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6);
        Index = v17;
        if ((result & 1) != 0)
          break;
      }
      result = (uint64_t)WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLUnrestrictedDouble>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<double,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}::operator()(a3, v6, a1, Index);
      if (*(_QWORD *)(v6 + 16))
      {
        v14 = JSC::JSArrayIterator::create();
        if ((int)i + 1 < 0)
          v15 = COERCE__INT64((double)(i + 1)) + 0x2000000000000;
        else
          v15 = (i + 1) | 0xFFFE000000000000;
        *(_QWORD *)(v14 + 16) = v15;
        return JSC::iteratorClose();
      }
    }
  }
  else
  {
    JSC::iteratorForIterable(a1, (JSC::JSGlobalObject *)a2, v8);
    if (!*(_DWORD *)(v6 + 80) || (result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6), (result & 1) == 0))
    {
      while (1)
      {
        result = JSC::iteratorStep();
        if (*(_QWORD *)(v6 + 16) || result == 6)
          break;
        v12 = JSC::iteratorValue();
        if (*(_DWORD *)(v6 + 80))
        {
          v16 = v12;
          result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6);
          v12 = v16;
          if ((result & 1) != 0)
            break;
        }
        WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLUnrestrictedDouble>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<double,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}::operator()(a3, v6, a1, v12);
        if (*(_QWORD *)(v6 + 16))
          return JSC::iteratorClose();
      }
    }
  }
  return result;
}

JSC::VM *WebCore::Detail::GenericSequenceConverter<WebCore::IDLSequence<WebCore::IDLUnrestrictedDouble>>::convert(JSC::JSGlobalObject &,JSC::JSObject *,WTF::Vector<double,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> &&)::{lambda(JSC::VM &,JSC::JSGlobalObject*,JSC::JSValue)#1}::operator()(uint64_t *a1, int a2, JSC::JSGlobalObject *a3, unint64_t a4)
{
  uint64_t v4;
  JSC::VM *result;
  double v6;
  uint64_t v7;
  double v8;
  JSC::VM *v9;
  double v10;

  v4 = *a1;
  v10 = *(double *)&a4;
  result = (JSC::VM *)*((_QWORD *)a3 + 7);
  if (a4 >= 0xFFFE000000000000)
  {
    v6 = (double)(int)a4;
  }
  else if (a4 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    v9 = (JSC::VM *)*((_QWORD *)a3 + 7);
    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v10, a3);
    result = v9;
    v6 = v8;
  }
  else
  {
    *(_QWORD *)&v6 = a4 - 0x2000000000000;
  }
  if (!*((_DWORD *)result + 20)
    || (result = (JSC::VM *)JSC::VM::hasExceptionsAfterHandlingTraps(result), !(_DWORD)result))
  {
    v10 = v6;
    v7 = *(unsigned int *)(v4 + 12);
    if ((_DWORD)v7 == *(_DWORD *)(v4 + 8))
    {
      result = (JSC::VM *)WTF::Vector<double,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v4, v7 + 1, (unint64_t)&v10);
      v7 = *(unsigned int *)(v4 + 12);
      *(_QWORD *)(*(_QWORD *)v4 + 8 * v7) = *(_QWORD *)result;
    }
    else
    {
      *(double *)(*(_QWORD *)v4 + 8 * v7) = v6;
    }
    *(_DWORD *)(v4 + 12) = v7 + 1;
  }
  return result;
}

uint64_t WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLUnrestrictedDouble>>::convert<double,0ul>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  JSC::VM *v5;
  unsigned int v6;
  double *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  objc_class *v11;
  int v12;
  JSValue v13;
  void *v14;
  JSC::VM *v15;
  uint64_t v16;
  uint64_t *v17;
  _QWORD *v19;
  WTF *v20;
  int v21;
  BOOL v22;
  uint64_t v23;
  WTF *v24;
  _OWORD v25[4];
  uint64_t v26;
  JSC::VM *v27;

  v5 = *(JSC::VM **)(a1 + 56);
  v27 = v5;
  v22 = 0;
  v23 = 0x800000000;
  v24 = (WTF *)((char *)v25 + 8);
  memset(v25, 0, sizeof(v25));
  v26 = 0;
  v6 = *(_DWORD *)(a3 + 12);
  if (v6 >= 9)
  {
    v22 = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v23) == 1;
    v6 = *(_DWORD *)(a3 + 12);
    if (v6)
    {
LABEL_3:
      v7 = *(double **)a3;
      v8 = 8 * v6;
      do
      {
        v9 = *v7;
        if ((*(_QWORD *)v7 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
          && (v10 = (int)v9, v9 == (double)(int)v10)
          && ((_DWORD)v10 || (*(_QWORD *)&v9 & 0x8000000000000000) == 0))
        {
          v11 = (objc_class *)(v10 | 0xFFFE000000000000);
        }
        else
        {
          v11 = (objc_class *)(*(_QWORD *)&v9 + 0x2000000000000);
        }
        if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
          goto LABEL_33;
        v12 = v23;
        if ((_DWORD)v23 == HIDWORD(v23) || v24 != (WTF *)((char *)v25 + 8) && v24)
        {
          v13.super.isa = v11;
          if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v23, v13) == 1)
            v22 = 1;
        }
        else
        {
          *((_QWORD *)v24 + v23) = v11;
          LODWORD(v23) = v12 + 1;
        }
        ++v7;
        v8 -= 8;
      }
      while (v8);
    }
  }
  else if (v6)
  {
    goto LABEL_3;
  }
  if (v22)
  {
    JSC::throwOutOfMemoryError();
  }
  else
  {
    v20 = v24;
    v21 = v23;
    v15 = *(JSC::VM **)(a2 + 56);
    if (!*((_DWORD *)v15 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) == 0)
    {
      v16 = JSC::constructArray();
      goto LABEL_25;
    }
  }
LABEL_33:
  v16 = 0;
LABEL_25:
  v17 = *(uint64_t **)&v25[0];
  if (*(_QWORD *)&v25[0])
  {
    v20 = (WTF *)&v23;
    v19 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v25[0], (uint64_t *)&v20);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v17, v19);
  }
  if (v24 != (WTF *)((char *)v25 + 8) && v24)
    WTF::fastFree(v24, v14);
  return v16;
}

uint64_t WebCore::jsCanvasRenderingContext2DPrototypeFunction_setTransform2Body(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3, WebCore::JSCanvasRenderingContext2D *a4)
{
  JSC::VM *v6;
  uint64_t v7;
  WTF::StringImpl *v8;
  uint64_t result;
  WebCore::InspectorInstrumentation *v10;
  WebCore::ScriptExecutionContext *v11;
  uint64_t v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  WebCore::InspectorInstrumentation *v16;
  WebCore::ScriptExecutionContext *v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  JSC::VM *v23;
  __int128 *v24;
  WTF::StringImpl *v25;
  char v26;
  _BYTE v27[8];
  _OWORD v28[12];
  int v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v6 = (JSC::VM *)*((_QWORD *)this + 7);
  v23 = v6;
  if (*((_DWORD *)a2 + 8) == 1)
    v7 = 10;
  else
    v7 = *((_QWORD *)a2 + 6);
  WebCore::convertDictionary<WebCore::DOMMatrix2DInit>((JSC::JSCell *)v7, (uint64_t)this, (uint64_t)v27);
  if (v29)
    return 0;
  if (*((_BYTE *)a3 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    if (v29)
      goto LABEL_35;
    v10 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v10
      && (v12 = WebCore::InspectorInstrumentation::instrumentingAgents(v10, v11)) != 0
      && (v13 = *(_QWORD *)(v12 + 96)) != 0)
    {
      WebCore::InspectorCanvasAgent::processArgument(v13, (uint64_t)a3, (uint64_t)v28, (uint64_t)&v30);
    }
    else
    {
      LOBYTE(v30) = 0;
      LOBYTE(v31) = 0;
    }
    v24 = &v30;
    v25 = (WTF::StringImpl *)1;
    v16 = (WebCore::InspectorInstrumentation *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)a3 + 4) + 144))(*((_QWORD *)a3 + 4));
    if (v16)
    {
      v18 = WebCore::InspectorInstrumentation::instrumentingAgents(v16, v17);
      if (v18)
      {
        v19 = *(_QWORD *)(v18 + 96);
        if (v19)
          WebCore::InspectorCanvasAgent::recordAction(v19, a3, (const WTF::StringImpl *)&v22, &v24);
      }
    }
    if ((_BYTE)v31)
    {
      v20 = (_DWORD *)v30;
      *(_QWORD *)&v30 = 0;
      if (v20)
      {
        if (*v20 == 1)
          WTF::JSONImpl::Value::operator delete();
        else
          --*v20;
      }
    }
    v21 = v22;
    v22 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v17);
      else
        *(_DWORD *)v21 -= 2;
    }
    if (v29)
    {
LABEL_35:
      v14 = (WTF::StringImpl *)std::__throw_bad_variant_access[abi:sn180100]();
      goto LABEL_36;
    }
  }
  v38 = v28[8];
  v39 = v28[9];
  v40 = v28[10];
  v41 = v28[11];
  v34 = v28[4];
  v35 = v28[5];
  v36 = v28[6];
  v37 = v28[7];
  v30 = v28[0];
  v31 = v28[1];
  v32 = v28[2];
  v33 = v28[3];
  WebCore::CanvasRenderingContext2DBase::setTransform(a3, (uint64_t)&v30, (uint64_t)&v24);
  if (!v26)
    return 10;
  LOBYTE(v30) = (_BYTE)v24;
  v14 = v25;
  v25 = 0;
  *((_QWORD *)&v30 + 1) = v14;
  if (!*((_QWORD *)v6 + 2))
  {
    WebCore::propagateExceptionSlowPath(this, &v23, (unsigned __int8 *)&v30);
    v14 = (WTF::StringImpl *)*((_QWORD *)&v30 + 1);
  }
  *((_QWORD *)&v30 + 1) = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
    {
LABEL_36:
      WTF::StringImpl::destroy(v14, v8);
      goto LABEL_18;
    }
    *(_DWORD *)v14 -= 2;
  }
LABEL_18:
  if (v26)
  {
    v15 = v25;
    v25 = 0;
    if (v15)
    {
      if (*(_DWORD *)v15 != 2)
      {
        result = 0;
        *(_DWORD *)v15 -= 2;
        return result;
      }
      WTF::StringImpl::destroy(v15, v8);
    }
  }
  return 0;
}

uint64_t WebCore::JSCSSNumericArray::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSNumericValue::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSOKLCH::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSOKLab::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSOMVariableReferenceValue::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSPageRule::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

JSC::JSGlobalObject *WebCore::Converter<WebCore::IDLNullable<WebCore::IDLDOMString>>::convert@<X0>(JSC::JSGlobalObject *result@<X0>, unint64_t this@<X1>, uint64_t a3@<X8>)
{
  JSC::VM *v4;
  WTF::StringImpl *v5;
  WTF::StringImpl *v6;
  int v7;
  WTF::StringImpl *v8;
  char hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v10;
  int v11;
  WTF::StringImpl *v12;
  unint64_t v13;

  if ((this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    *(_QWORD *)a3 = 0;
    *(_DWORD *)(a3 + 8) = 0;
    return result;
  }
  v13 = this;
  v4 = (JSC::VM *)*((_QWORD *)result + 7);
  if ((this & 0xFFFE000000000002) != 0 || *(_BYTE *)(this + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v13, result);
  }
  else
  {
    v5 = *(WTF::StringImpl **)(this + 8);
    if ((v5 & 1) != 0)
      v5 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, result);
    if (v5)
      *(_DWORD *)v5 += 2;
    v12 = v5;
  }
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    v6 = v12;
    if ((hasExceptionsAfterHandlingTraps & 1) != 0)
    {
      v7 = 1;
      v11 = 1;
      v12 = 0;
      if (v6)
      {
        if (*(_DWORD *)v6 == 2)
          WTF::StringImpl::destroy(v6, v8);
        else
          *(_DWORD *)v6 -= 2;
      }
      goto LABEL_12;
    }
  }
  else
  {
    v6 = v12;
  }
  v7 = 0;
  v10 = v6;
  v11 = 0;
LABEL_12:
  *(_BYTE *)a3 = 0;
  *(_DWORD *)(a3 + 8) = -1;
  result = (JSC::JSGlobalObject *)((uint64_t (*)(unint64_t *, uint64_t, WTF::StringImpl **))off_1E3247F70[v7])(&v13, a3, &v10);
  *(_DWORD *)(a3 + 8) = v7;
  if (v11 != -1)
    return (JSC::JSGlobalObject *)((uint64_t (*)(unint64_t *, WTF::StringImpl **))off_1E3238AF8[v11])(&v13, &v10);
  return result;
}

unint64_t WebCore::toJS<WebCore::IDLInterface<WebCore::CSSStyleDeclaration>,WebCore::CSSStyleDeclaration&>(uint64_t a1, WTF *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  WTF *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char **v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char **v33;
  int v34;
  unint64_t *v35;
  JSC::JSCell *v36;
  JSC::JSObject *Object;
  uint64_t *v38;
  unint64_t SlowCase;
  uint64_t v40;
  int v41;
  JSC::JSObject *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  WTF *v49;
  void *v50;
  int v51;
  uint64_t v52;
  void *v53;
  char **v54;
  WTF *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  unint64_t v59;
  uint64_t v60;
  char **Allocator;
  unsigned __int8 *v62;
  uint64_t v64;
  int v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  WTF *v72[3];
  char **v73;

  v4 = *(_QWORD *)(a1 + 3320);
  if (*(_DWORD *)(v4 + 48))
  {
    v8 = *(_QWORD *)(v4 + 32);
    if (!v8)
      goto LABEL_12;
    v9 = *(_DWORD *)(v8 - 8);
    v10 = ((unint64_t)a2 + ~((_QWORD)a2 << 32)) ^ (((unint64_t)a2 + ~((_QWORD)a2 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = *(WTF **)(v8 + 16 * v13);
    if (v14 != a2)
    {
      v15 = 1;
      while (v14)
      {
        v13 = ((_DWORD)v13 + v15) & v9;
        v14 = *(WTF **)(v8 + 16 * v13);
        ++v15;
        if (v14 == a2)
          goto LABEL_11;
      }
      goto LABEL_12;
    }
LABEL_11:
    v5 = *(_QWORD *)(v8 + 16 * v13 + 8);
    if (!v5)
      goto LABEL_12;
  }
  else
  {
    v5 = *((_QWORD *)a2 + 1);
    if (!v5)
      goto LABEL_12;
  }
  if ((*(_BYTE *)(v5 + 8) & 3) == 0)
  {
    v6 = *(_QWORD *)v5;
    if (*(_QWORD *)v5)
      return v6;
  }
LABEL_12:
  (*(void (**)(WTF *))(*(_QWORD *)a2 + 16))(a2);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(_QWORD *)(a1 + 3296);
  if (v17)
  {
    v18 = *(_DWORD *)(v17 - 8);
    v19 = ((unint64_t)&WebCore::JSCSSStyleDeclaration::s_info
         + ~((_QWORD)&WebCore::JSCSSStyleDeclaration::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSStyleDeclaration::s_info
                                                                       + ~((_QWORD)&WebCore::JSCSSStyleDeclaration::s_info << 32)) >> 22);
    v20 = 9 * ((v19 + ~(v19 << 13)) ^ ((v19 + ~(v19 << 13)) >> 8));
    v21 = (v20 ^ (v20 >> 15)) + ~((v20 ^ (v20 >> 15)) << 27);
    v22 = v18 & ((v21 >> 31) ^ v21);
    v23 = *(char ***)(v17 + 16 * v22);
    if (v23 == &WebCore::JSCSSStyleDeclaration::s_info)
    {
LABEL_14:
      v24 = *(_QWORD *)(v17 + 16 * v22 + 8);
      if (v24)
        goto LABEL_15;
    }
    else
    {
      v34 = 1;
      while (v23)
      {
        v22 = ((_DWORD)v22 + v34) & v18;
        v23 = *(char ***)(v17 + 16 * v22);
        ++v34;
        if (v23 == &WebCore::JSCSSStyleDeclaration::s_info)
          goto LABEL_14;
      }
    }
  }
  v35 = (unint64_t *)(v16 + 40136);
  v36 = *(JSC::JSCell **)(a1 + 656);
  LODWORD(v72[0]) = 23;
  if (((unint64_t)v36 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v36);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)v16);
  }
  v38 = (uint64_t *)(v16 + 38904);
  SlowCase = *v35;
  if (*v35 < *(_QWORD *)(v16 + 40144))
    goto LABEL_40;
  SlowCase = *(_QWORD *)(v16 + 40152);
  if ((SlowCase & 1) == 0)
  {
    v67 = *(_QWORD *)(SlowCase + 8) ^ *(_QWORD *)(v16 + 40160);
    *(_QWORD *)(v16 + 40144) = SlowCase + HIDWORD(v67);
    *(_QWORD *)(v16 + 40152) = SlowCase + (int)v67;
LABEL_40:
    *v35 = SlowCase + 128;
    goto LABEL_41;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_41:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, v16, a1, v36, v72, &WebCore::JSCSSStyleDeclarationPrototype::s_info, 0, 0);
  if (*(_BYTE *)(v16 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v40 = *v38;
  if (*(_QWORD *)(v16 + 38904) >= *(_QWORD *)(v16 + 38912))
  {
    v40 = *(_QWORD *)(v16 + 38920);
    if ((v40 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v40 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_45;
    }
    v68 = *(_QWORD *)(v40 + 8) ^ *(_QWORD *)(v16 + 38928);
    *(_QWORD *)(v16 + 38912) = v40 + HIDWORD(v68);
    *(_QWORD *)(v16 + 38920) = v40 + (int)v68;
  }
  *v38 = v40 + 16;
LABEL_45:
  *(_DWORD *)v40 = 0;
  v41 = *(_DWORD *)(SlowCase + 8);
  *(_DWORD *)v40 = SlowCase >> 4;
  *(_DWORD *)(v40 + 4) = v41;
  v70 = SlowCase;
  *(_QWORD *)(v40 + 8) = 0;
  WebCore::JSCSSStyleDeclarationPrototype::finishCreation((uint64_t *)&v70, (WebCore::JSCSSStyleDeclarationPrototype *)v40, (JSC::VM *)v16);
  LODWORD(v72[0]) = 84019223;
  if ((v40 & 0xFFFE000000000002) == 0)
  {
    v42 = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v40);
    if (v42)
      JSC::JSObject::didBecomePrototype(v42, (JSC::VM *)v16);
  }
  v43 = *v35;
  if (*v35 < *(_QWORD *)(v16 + 40144))
    goto LABEL_49;
  v43 = *(_QWORD *)(v16 + 40152);
  if ((v43 & 1) == 0)
  {
    v69 = *(_QWORD *)(v43 + 8) ^ *(_QWORD *)(v16 + 40160);
    *(_QWORD *)(v16 + 40144) = v43 + HIDWORD(v69);
    *(_QWORD *)(v16 + 40152) = v43 + (int)v69;
LABEL_49:
    *v35 = v43 + 128;
    goto LABEL_50;
  }
  JSC::sanitizeStackForVM();
  v43 = JSC::LocalAllocator::allocateSlowCase();
LABEL_50:
  *(_DWORD *)v43 = 0;
  MEMORY[0x19AEA4278](v43, v16, a1, v40, v72, &WebCore::JSCSSStyleDeclaration::s_info, 32, 0);
  if (*(_BYTE *)(v16 + 755))
    __dmb(0xAu);
  v44 = *(_QWORD *)(a1 + 56);
  if (*(_BYTE *)(v44 + 755))
  {
    v62 = (unsigned __int8 *)(a1 + 3329);
    if (__ldaxr((unsigned __int8 *)(a1 + 3329)))
    {
      __clrex();
    }
    else if (!__stxr(1u, v62))
    {
LABEL_93:
      v73 = &WebCore::JSCSSStyleDeclaration::s_info;
      v64 = *(_QWORD *)(a1 + 56);
      v71 = v43;
      if (*(_DWORD *)(v64 + 760) >= *(unsigned __int8 *)(a1 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v64 + 192), (const JSCell *)a1);
      WTF::HashMap<JSC::ClassInfo const*,JSC::WriteBarrier<JSC::Structure,WTF::RawPtrTraits<JSC::Structure>>,WTF::DefaultHash<JSC::ClassInfo const*>,WTF::HashTraits<JSC::ClassInfo const*>,WTF::HashTraits<JSC::WriteBarrier<JSC::Structure,WTF::RawPtrTraits<JSC::Structure>>>,WTF::HashTableTraits>::inlineSet<JSC::ClassInfo const* const&,JSC::WriteBarrier<JSC::Structure,WTF::RawPtrTraits<JSC::Structure>>>((uint64_t *)(a1 + 3296), (uint64_t *)&v73, &v71, (uint64_t)v72);
      v24 = *((_QWORD *)v72[0] + 1);
      v65 = __ldxr(v62);
      if (v65 == 1)
      {
        if (!__stlxr(0, v62))
          goto LABEL_15;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)(a1 + 3329));
      goto LABEL_15;
    }
    MEMORY[0x19AEA534C](a1 + 3329);
    goto LABEL_93;
  }
  v73 = &WebCore::JSCSSStyleDeclaration::s_info;
  v71 = v43;
  if (*(_DWORD *)(v44 + 760) >= *(unsigned __int8 *)(a1 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v44 + 192), (const JSCell *)a1);
  WTF::HashMap<JSC::ClassInfo const*,JSC::WriteBarrier<JSC::Structure,WTF::RawPtrTraits<JSC::Structure>>,WTF::DefaultHash<JSC::ClassInfo const*>,WTF::HashTraits<JSC::ClassInfo const*>,WTF::HashTraits<JSC::WriteBarrier<JSC::Structure,WTF::RawPtrTraits<JSC::Structure>>>,WTF::HashTableTraits>::inlineSet<JSC::ClassInfo const* const&,JSC::WriteBarrier<JSC::Structure,WTF::RawPtrTraits<JSC::Structure>>>((uint64_t *)(a1 + 3296), (uint64_t *)&v73, &v71, (uint64_t)v72);
  v24 = *((_QWORD *)v72[0] + 1);
LABEL_15:
  v25 = *(_QWORD *)(a1 + 56);
  v26 = *(_QWORD *)(v25 + 41456);
  v27 = *(_QWORD *)(v26 + 23536);
  v28 = *(_QWORD **)(v27 + 2856);
  if (v28)
    goto LABEL_16;
  v45 = *(_QWORD *)(v26 + 22648);
  if (__ldaxr((unsigned __int8 *)v45))
  {
    __clrex();
LABEL_58:
    MEMORY[0x19AEA534C](v45);
    goto LABEL_59;
  }
  if (__stxr(1u, (unsigned __int8 *)v45))
    goto LABEL_58;
LABEL_59:
  v47 = *(_QWORD *)(v45 + 2824);
  v71 = *(_QWORD *)(v47 + 2856);
  if (!v71)
  {
    v52 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)v72, "IsoSpace T");
    v73 = 0;
    MEMORY[0x19AEA3204](v52, v72, v25 + 192, v25 + 1872, 32, 8, &v73);
    v54 = v73;
    v73 = 0;
    if (v54)
      (*((void (**)(char **))*v54 + 1))(v54);
    v55 = v72[0];
    v72[0] = 0;
    if (v55)
    {
      if (*(_DWORD *)v55 == 1)
        WTF::fastFree(v55, v53);
      else
        --*(_DWORD *)v55;
    }
    v71 = v52;
    v56 = *(_QWORD *)(v47 + 2856);
    *(_QWORD *)(v47 + 2856) = v52;
    if (v56)
      (*(void (**)(uint64_t))(*(_QWORD *)v56 + 8))(v56);
    v57 = *(unsigned int *)(v45 + 2844);
    if ((_DWORD)v57 == *(_DWORD *)(v45 + 2840))
    {
      v58 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v45 + 2832, v57 + 1, (unint64_t)&v71);
      v57 = *(unsigned int *)(v45 + 2844);
      *(_QWORD *)(*(_QWORD *)(v45 + 2832) + 8 * v57) = *v58;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v45 + 2832) + 8 * v57) = v52;
    }
    *(_DWORD *)(v45 + 2844) = v57 + 1;
  }
  v28 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v48 = *(_QWORD *)(v27 + 2856);
  *(_QWORD *)(v27 + 2856) = v28;
  if (v48)
  {
    v49 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v49, v50);
  }
  v51 = __ldxr((unsigned __int8 *)v45);
  if (v51 != 1)
  {
    __clrex();
    goto LABEL_66;
  }
  if (__stlxr(0, (unsigned __int8 *)v45))
LABEL_66:
    WTF::Lock::unlockSlow((WTF::Lock *)v45);
LABEL_16:
  v6 = v28[3];
  if (v6 < v28[4])
  {
LABEL_17:
    v28[3] = v6 + 32;
    goto LABEL_18;
  }
  v6 = v28[5];
  if ((v6 & 1) == 0)
  {
    v66 = *(_QWORD *)(v6 + 8) ^ v28[6];
    v28[4] = v6 + HIDWORD(v66);
    v28[5] = v6 + (int)v66;
    goto LABEL_17;
  }
  JSC::sanitizeStackForVM();
  v6 = JSC::LocalAllocator::allocateSlowCase();
LABEL_18:
  *(_DWORD *)v6 = 0;
  WebCore::JSDOMObject::JSDOMObject(v6, v24);
  *(_QWORD *)(v6 + 24) = a2;
  if (*(_BYTE *)(v25 + 755))
    __dmb(0xAu);
  v29 = *(_QWORD *)(a1 + 3320);
  if ((byte_1EE334E58 & 1) == 0)
  {
    qword_1EE334E50 = (uint64_t)&off_1E32385F8;
    byte_1EE334E58 = 1;
  }
  if (*(_DWORD *)(v29 + 48))
  {
    v72[0] = a2;
    if ((v6 & 8) != 0)
      v59 = (v6 - 112) | 1;
    else
      v59 = v6 & 0xFFFFFFFFFFFFC000;
    if ((v59 & 1) != 0)
      v60 = v59 + 47;
    else
      v60 = *(_QWORD *)v59 + 32;
    Allocator = *(char ***)(v60 + 16);
    if (!Allocator)
      Allocator = (char **)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v60 + 16) = *Allocator;
    *Allocator = (char *)v6;
    Allocator[1] = (char *)&qword_1EE334E50;
    Allocator[2] = (char *)v29;
    v73 = Allocator;
    JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v29 + 32), (uint64_t *)v72, (uint64_t *)&v73);
    v33 = v73;
    if (v73)
      goto LABEL_31;
  }
  else
  {
    if ((v6 & 8) != 0)
      v30 = (v6 - 112) | 1;
    else
      v30 = v6 & 0xFFFFFFFFFFFFC000;
    if ((v30 & 1) != 0)
      v31 = v30 + 47;
    else
      v31 = *(_QWORD *)v30 + 32;
    v32 = *(_QWORD **)(v31 + 16);
    if (!v32)
      v32 = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v31 + 16) = *v32;
    *v32 = v6;
    v32[1] = &qword_1EE334E50;
    v32[2] = v29;
    v33 = (char **)*((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v32;
    if (v33)
LABEL_31:
      v33[1] = (char *)3;
  }
  return v6;
}

uint64_t WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLUSVString>>::convert<WTF::String,0ul>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  JSC::VM *v6;
  unsigned int v7;
  uint64_t *v8;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  int v12;
  objc_class *v13;
  int v14;
  unsigned __int8 *v15;
  unsigned int v16;
  unsigned int v17;
  JSValue v18;
  void *v19;
  JSC::VM *v20;
  uint64_t v21;
  uint64_t *v22;
  _QWORD *v24;
  WTF *v25;
  int v26;
  BOOL v27;
  uint64_t v28;
  WTF *v29;
  _OWORD v30[4];
  uint64_t v31;
  JSC::VM *v32;

  v6 = *(JSC::VM **)(a1 + 56);
  v32 = v6;
  v27 = 0;
  v28 = 0x800000000;
  v29 = (WTF *)((char *)v30 + 8);
  memset(v30, 0, sizeof(v30));
  v31 = 0;
  v7 = *(_DWORD *)(a3 + 12);
  if (v7 >= 9)
  {
    v27 = JSC::MarkedVectorBase::slowEnsureCapacity((JSC::MarkedVectorBase *)&v28) == 1;
    v7 = *(_DWORD *)(a3 + 12);
    if (v7)
      goto LABEL_3;
  }
  else if (v7)
  {
LABEL_3:
    v8 = *(uint64_t **)a3;
    for (i = 8 * v7; i; i -= 8)
    {
      v10 = *(_QWORD *)(a1 + 56);
      v11 = *v8;
      if (*v8 && (v12 = *(_DWORD *)(v11 + 4)) != 0)
      {
        if (v12 != 1)
          goto LABEL_7;
        v15 = *(unsigned __int8 **)(v11 + 8);
        if ((*(_BYTE *)(v11 + 16) & 4) != 0)
        {
          v16 = *v15;
        }
        else
        {
          v17 = *(unsigned __int16 *)v15;
          if (v17 > 0xFF)
          {
LABEL_7:
            v13 = *(objc_class **)(v10 + 64760);
            if (!v13 || v11 != *((_QWORD *)v13 + 1))
              v13 = (objc_class *)JSC::jsStringWithCacheSlowCase();
            goto LABEL_10;
          }
          v16 = v17;
        }
        v13 = *(objc_class **)(v10 + 8 * v16 + 42216);
      }
      else
      {
        v13 = *(objc_class **)(v10 + 41968);
      }
LABEL_10:
      if (*((_DWORD *)v6 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v6) & 1) != 0)
        goto LABEL_39;
      v14 = v28;
      if ((_DWORD)v28 == HIDWORD(v28) || v29 != (WTF *)((char *)v30 + 8) && v29)
      {
        v18.super.isa = v13;
        if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v28, v18) == 1)
          v27 = 1;
      }
      else
      {
        *((_QWORD *)v29 + v28) = v13;
        LODWORD(v28) = v14 + 1;
      }
      ++v8;
    }
  }
  if (v27)
  {
    JSC::throwOutOfMemoryError();
  }
  else
  {
    v25 = v29;
    v26 = v28;
    v20 = *(JSC::VM **)(a2 + 56);
    if (!*((_DWORD *)v20 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v20) & 1) == 0)
    {
      v21 = JSC::constructArray();
      goto LABEL_31;
    }
  }
LABEL_39:
  v21 = 0;
LABEL_31:
  v22 = *(uint64_t **)&v30[0];
  if (*(_QWORD *)&v30[0])
  {
    v25 = (WTF *)&v28;
    v24 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v30[0], (uint64_t *)&v25);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v22, v24);
  }
  if (v29 != (WTF *)((char *)v30 + 8) && v29)
    WTF::fastFree(v29, v19);
  return v21;
}

uint64_t WebCore::JSCSSPaintSize::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::CSSNumericValue>,WebCore::IDLDOMString,WebCore::IDLInterface<WebCore::CSSKeywordValue>>>::convert(uint64_t a1, JSC::JSGlobalObject *a2, unint64_t this)
{
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v11;
  int v12;
  uint64_t v14;
  uint64_t result;
  int v16;
  JSC::VM *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  int v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v24;
  int v25;
  unsigned __int8 v26;
  WTF::StringImpl *v27;
  unint64_t v28;

  if ((this & 0xFFFE000000000002) != 0)
  {
    v28 = this;
    v17 = (JSC::VM *)*((_QWORD *)a2 + 7);
    goto LABEL_41;
  }
  v4 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCSSNumericValue::s_info;
  else
    v7 = 1;
  v8 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
  if (!v7)
  {
    v9 = 16 * v4;
    do
    {
      v9 = *(_QWORD *)(v9 + 16);
      v8 = v9 != 0;
    }
    while ((char **)v9 != &WebCore::JSCSSNumericValue::s_info && v9 != 0);
  }
  if (v8)
  {
    v11 = *(_QWORD *)(this + 24);
    if (v11)
    {
      v12 = 0;
      goto LABEL_25;
    }
  }
  if ((_DWORD)v4 && v6 != &WebCore::JSCSSKeywordValue::s_info)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCSSKeywordValue::s_info && v6 != 0);
  }
  if (!v5 || (v11 = *(_QWORD *)(this + 24)) == 0)
  {
    v28 = this;
    v17 = (JSC::VM *)*((_QWORD *)a2 + 7);
    if (*(_BYTE *)(this + 5) == 2)
    {
      v18 = *(WTF::StringImpl **)(this + 8);
      if ((v18 & 1) != 0)
      {
        v18 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, a2);
        if (!v18)
          goto LABEL_32;
      }
      else if (!v18)
      {
LABEL_32:
        v27 = v18;
        goto LABEL_33;
      }
      *(_DWORD *)v18 += 2;
      goto LABEL_32;
    }
LABEL_41:
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v28, a2);
LABEL_33:
    if (*((_DWORD *)v17 + 20))
    {
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v17);
      v19 = v27;
      if (hasExceptionsAfterHandlingTraps)
      {
        v25 = 1;
        v27 = 0;
        if (v19)
        {
          if (*(_DWORD *)v19 == 2)
            WTF::StringImpl::destroy(v19, v22);
          else
            *(_DWORD *)v19 -= 2;
        }
        v20 = 1;
        v21 = 1;
        goto LABEL_36;
      }
    }
    else
    {
      v19 = v27;
    }
    v20 = 0;
    v21 = 0;
    v25 = 0;
    v24 = 0;
    *(_QWORD *)(a1 + 8) = v19;
    *(_DWORD *)(a1 + 16) = 1;
LABEL_36:
    *(_DWORD *)(a1 + 24) = v20;
    return ((uint64_t (*)(unint64_t *, uint64_t *))off_1E3238AF8[v21])(&v28, &v24);
  }
  v12 = 2;
LABEL_25:
  ++*(_DWORD *)(v11 + 8);
  v24 = v11;
  v25 = v12;
  v26 = 1;
  *(_BYTE *)(a1 + 8) = 0;
  v14 = a1 + 8;
  *(_DWORD *)(a1 + 16) = -1;
  result = ((uint64_t (*)(unint64_t *, uint64_t, uint64_t *))off_1E3238C88[v12])(&v28, a1 + 8, &v24);
  *(_DWORD *)(v14 + 8) = v12;
  v16 = v26;
  *(_DWORD *)(v14 + 16) = 0;
  if (v16)
  {
    if (v25 != -1)
      return ((uint64_t (*)(unint64_t *, uint64_t *))off_1E3238C70[v25])(&v28, &v24);
  }
  return result;
}

uint64_t WebCore::JSCSSPerspective::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSPerspective::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCSSPerspective *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSCSSPerspective *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCSSPerspective::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSPropertyRule::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSRGB::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSRotate::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCSSRotate *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSCSSRotate *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCSSRotate::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSRule::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::root(uint64_t a1, WebCore::CSSRule *a2)
{
  uint64_t v2;
  uint64_t v3;
  WebCore *v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;

  v2 = a1;
  v3 = a1;
  if ((*(_BYTE *)(a1 + 12) & 2) != 0)
  {
    v4 = *(WebCore **)(a1 + 16);
    v3 = v2;
    if (v4)
      return WebCore::root(v4, a2);
  }
  while (1)
  {
    v5 = *(_BYTE *)(v3 + 12);
    v3 = *(_QWORD *)(v3 + 16);
    if ((v5 & 2) == 0)
      break;
    if (!v3)
      return v2;
  }
  if (v3)
  {
    do
    {
      v6 = *(_BYTE *)(v2 + 12);
      v2 = *(_QWORD *)(v2 + 16);
    }
    while ((v6 & 2) != 0 && v2);
    v4 = (WebCore *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 80))(v2);
    if (v4)
      return WebCore::root(v4, a2);
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 32))(v2);
    if (v7)
    {
      if ((*(_BYTE *)(v7 + 22) & 8) == 0)
      {
        while (1)
        {
          v2 = v7;
          if ((*(_WORD *)(v7 + 28) & 0x80) != 0)
          {
            v10 = *(_QWORD *)(v7 + 200);
            if (!v10)
              return v2;
            v9 = (uint64_t *)(v10 + 8);
          }
          else
          {
            v9 = (uint64_t *)(v7 + 32);
          }
          v7 = *v9;
          if (!*v9)
            return v2;
        }
      }
      return *(_QWORD *)(*(_QWORD *)(v7 + 40) + 8);
    }
  }
  return v2;
}

uint64_t WebCore::getDOMStructure<WebCore::JSCSSRuleList>(WebCore::JSCSSRuleList *a1, JSC::JSCell **a2)
{
  uint64_t result;
  WebCore::JSDOMGlobalObject *v5;
  JSC::JSCell *Prototype;
  uint64_t v7;

  result = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSCSSRuleList::s_info);
  if (!result)
  {
    Prototype = (JSC::JSCell *)WebCore::JSCSSRuleList::createPrototype(a1, a2, v5);
    v7 = JSC::Structure::create((uint64_t *)a1, (int)a2, Prototype);
    return WebCore::cacheDOMStructure((JSCell *)a2, v7, (uint64_t)&WebCore::JSCSSRuleList::s_info);
  }
  return result;
}

unint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRuleList>::create(uint64_t a1, uint64_t a2, JSC::JSCell **a3)
{
  unint64_t v5;

  v5 = JSC::allocateCell<WebCore::JSDOMConstructor<WebCore::JSBlob>>(a1);
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRuleList>::initializeProperties(v5, a1, a3);
  return v5;
}

uint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSRuleList>::createStructure(uint64_t *a1, int a2, JSC::JSCell *a3)
{
  uint64_t result;

  result = JSC::Structure::create(a1, a2, a3);
  *(_DWORD *)(result + 16) |= 0x80000u;
  return result;
}

uint64_t WebCore::Detail::ConversionResultStorage<std::optional<std::variant<double,WTF::RefPtr<WebCore::CSSNumericValue,WTF::RawPtrTraits<WebCore::CSSNumericValue>,WTF::DefaultRefDerefTraits<WebCore::CSSNumericValue>>>>>::ConversionResultStorage<std::variant<double,WTF::RefPtr<WebCore::CSSNumericValue,WTF::RawPtrTraits<WebCore::CSSNumericValue>,WTF::DefaultRefDerefTraits<WebCore::CSSNumericValue>>>>(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)();
  int v5;
  _BYTE v7[8];
  int v8;
  _BYTE v9[8];
  int v10;
  unsigned __int8 v11;
  char v12;

  if (*(_DWORD *)(a2 + 24))
  {
    *(_DWORD *)(a1 + 32) = 1;
    return a1;
  }
  v7[0] = 0;
  v8 = -1;
  v3 = *(unsigned int *)(a2 + 16);
  if ((_DWORD)v3 == -1)
  {
    v9[0] = 0;
    v11 = 1;
    *(_BYTE *)(a1 + 8) = 0;
    *(_DWORD *)(a1 + 16) = -1;
    *(_BYTE *)(a1 + 24) = 1;
    *(_DWORD *)(a1 + 32) = 0;
  }
  else
  {
    v4 = off_1E32388C8[v3];
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v4)(v9, v7, a2 + 8);
    v8 = v3;
    v9[0] = 0;
    v10 = -1;
    ((void (*)(char *, _BYTE *, _BYTE *))v4)(&v12, v9, v7);
    v10 = v3;
    v11 = 1;
    *(_BYTE *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 16) = -1;
    ((void (*)(char *, uint64_t, _BYTE *))v4)(&v12, a1 + 8, v9);
    *(_DWORD *)(a1 + 16) = v3;
    v5 = v11;
    *(_BYTE *)(a1 + 24) = 1;
    *(_DWORD *)(a1 + 32) = 0;
    if (!v5)
      goto LABEL_9;
    if (v10 != -1)
      ((void (*)(char *, _BYTE *))off_1E32388B8[v10])(&v12, v9);
  }
  v10 = -1;
LABEL_9:
  if (v8 != -1)
    ((void (*)(char *, _BYTE *))off_1E32388B8[v8])(&v12, v7);
  return a1;
}

uint64_t WebCore::JSCSSScale::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSScale::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCSSScale *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSCSSScale *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCSSScale::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSScopeRule::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSSkew::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSSkew::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCSSSkew *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSCSSSkew *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCSSSkew::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSSkewX::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSSkewX::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCSSSkewX *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSCSSSkewX *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCSSSkewX::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSSkewY::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSSkewY::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCSSSkewY *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSCSSSkewY *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCSSSkewY::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSStartingStyleRule::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSCSSStyleDeclaration>(uint64_t *a1, JSC::JSCell **a2)
{
  uint64_t result;
  unint64_t Structure;
  JSC::Structure *v6;
  JSC::JSCell *v7;
  uint64_t v8;

  result = WebCore::getCachedDOMStructure((uint64_t)a2, (uint64_t)&WebCore::JSCSSStyleDeclaration::s_info);
  if (!result)
  {
    Structure = WebCore::JSCSSStyleDeclarationPrototype::createStructure(a1, (uint64_t)a2, a2[82]);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v7 = (JSC::JSCell *)WebCore::JSCSSStyleDeclarationPrototype::create((WebCore::JSCSSStyleDeclarationPrototype *)a1, (JSC::VM *)a2, Structure, v6);
    v8 = WebCore::JSCSSStyleDeclaration::createStructure(a1, (uint64_t)a2, v7);
    return WebCore::cacheDOMStructure((JSCell *)a2, v8, (uint64_t)&WebCore::JSCSSStyleDeclaration::s_info);
  }
  return result;
}

uint64_t WebCore::JSCSSStyleDeclaration::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleDeclaration>::create(uint64_t a1, uint64_t a2, JSC::JSCell **a3)
{
  unint64_t v5;

  v5 = JSC::allocateCell<WebCore::JSDOMConstructor<WebCore::JSBlob>>(a1);
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleDeclaration>::initializeProperties(v5, a1, a3);
  return v5;
}

uint64_t WebCore::JSDOMConstructorNotConstructable<WebCore::JSCSSStyleDeclaration>::createStructure(uint64_t *a1, int a2, JSC::JSCell *a3)
{
  uint64_t result;

  result = JSC::Structure::create(a1, a2, a3);
  *(_DWORD *)(result + 16) |= 0x80000u;
  return result;
}

uint64_t WebCore::jsCSSStyleDeclaration_cssTextGetter(WebCore *this, JSC::JSGlobalObject *a2, WebCore::JSCSSStyleDeclaration *a3)
{
  WTF::StringImpl *v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v8;
  uint64_t v9;

  v9 = *((_QWORD *)this + 7);
  (*(void (**)(WTF::StringImpl **__return_ptr, JSC::JSGlobalObject *))(*(_QWORD *)a2 + 56))(&v8, a2);
  v5 = WebCore::toJS<WebCore::IDLUSVString,WTF::String>((uint64_t)this, (uint64_t)&v9, (uint64_t *)&v8);
  v6 = v8;
  v8 = 0;
  if (v6)
  {
    if (*(_DWORD *)v6 == 2)
      WTF::StringImpl::destroy(v6, v4);
    else
      *(_DWORD *)v6 -= 2;
  }
  return v5;
}

uint64_t WebCore::JSCSSStyleDeclaration::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCSSStyleDeclaration *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;

  v5 = (WebCore::JSCSSStyleDeclaration *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCSSStyleDeclaration::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  v9 = *a3;
  *a3 = 0;
  *(_QWORD *)(result + 24) = v9;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSStyleImageValue::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSStyleRule::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::Converter<WebCore::IDLUnion<WebCore::IDLInterface<WebCore::MediaList>,WebCore::IDLDOMString>>::convert(uint64_t result, JSC::JSGlobalObject *a2, unint64_t this)
{
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  _DWORD *v9;
  JSC::VM *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  int v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  int hasExceptionsAfterHandlingTraps;
  uint64_t v17;
  int v18;
  WTF::StringImpl *v19;
  unint64_t v20;

  v3 = result;
  if ((this & 0xFFFE000000000002) != 0)
  {
    v20 = this;
    v10 = (JSC::VM *)*((_QWORD *)a2 + 7);
  }
  else
  {
    v4 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
    v5 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
    v6 = (char **)(16 * v4);
    if ((_DWORD)v4)
      v7 = v6 == &WebCore::JSMediaList::s_info;
    else
      v7 = 1;
    if (!v7)
    {
      do
      {
        v6 = (char **)v6[2];
        v5 = v6 != 0;
      }
      while (v6 != &WebCore::JSMediaList::s_info && v6 != 0);
    }
    if (v5)
    {
      v9 = *(_DWORD **)(this + 24);
      if (v9)
      {
        ++*v9;
        *(_QWORD *)(result + 8) = v9;
        *(_DWORD *)(result + 16) = 0;
        *(_DWORD *)(result + 24) = 0;
        return result;
      }
    }
    v20 = this;
    v10 = (JSC::VM *)*((_QWORD *)a2 + 7);
    if (*(_BYTE *)(this + 5) == 2)
    {
      v11 = *(WTF::StringImpl **)(this + 8);
      if ((v11 & 1) != 0)
      {
        v11 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, a2);
        if (!v11)
          goto LABEL_18;
      }
      else if (!v11)
      {
LABEL_18:
        v19 = v11;
        goto LABEL_19;
      }
      *(_DWORD *)v11 += 2;
      goto LABEL_18;
    }
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v20, a2);
LABEL_19:
  if (*((_DWORD *)v10 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v10);
    v12 = v19;
    if (hasExceptionsAfterHandlingTraps)
    {
      v18 = 1;
      v19 = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, v15);
        else
          *(_DWORD *)v12 -= 2;
      }
      v13 = 1;
      v14 = 1;
      goto LABEL_22;
    }
  }
  else
  {
    v12 = v19;
  }
  v13 = 0;
  v14 = 0;
  v18 = 0;
  v17 = 0;
  *(_QWORD *)(v3 + 8) = v12;
  *(_DWORD *)(v3 + 16) = 1;
LABEL_22:
  *(_DWORD *)(v3 + 24) = v13;
  return ((uint64_t (*)(unint64_t *, uint64_t *))off_1E3238AF8[v14])(&v20, &v17);
}

uint64_t WebCore::getDOMStructure<WebCore::JSCSSStyleSheet>(WebCore::JSCSSStyleSheet *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  uint64_t result;
  int v13;
  uint64_t *v14;
  unint64_t Prototype;
  unint64_t v16;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  unint64_t v19;
  int v20;

  v5 = *((_QWORD *)a2 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSCSSStyleSheet::s_info + ~((_QWORD)&WebCore::JSCSSStyleSheet::s_info << 32)) ^ (((unint64_t)&WebCore::JSCSSStyleSheet::s_info + ~((_QWORD)&WebCore::JSCSSStyleSheet::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSCSSStyleSheet::s_info)
    {
LABEL_3:
      result = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (result)
        return result;
    }
    else
    {
      v13 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v13) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v13;
        if (v11 == &WebCore::JSCSSStyleSheet::s_info)
          goto LABEL_3;
      }
    }
  }
  v14 = (uint64_t *)((char *)this + 40136);
  Prototype = WebCore::JSCSSStyleSheet::createPrototype(this, a2, a3);
  v16 = Prototype;
  v20 = 23;
  if ((Prototype & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)Prototype);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, this);
  }
  SlowCase = *v14;
  if ((unint64_t)*v14 >= *((_QWORD *)this + 5018))
  {
    SlowCase = *((_QWORD *)this + 5019);
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_14;
    }
    v19 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 5020);
    *((_QWORD *)this + 5018) = SlowCase + HIDWORD(v19);
    *((_QWORD *)this + 5019) = SlowCase + (int)v19;
  }
  *v14 = SlowCase + 128;
LABEL_14:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, this, a2, v16, &v20, &WebCore::JSCSSStyleSheet::s_info, 0, 0);
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  return WebCore::cacheDOMStructure((JSCell *)a2, SlowCase, (uint64_t)&WebCore::JSCSSStyleSheet::s_info);
}

unint64_t WebCore::JSDOMConstructor<WebCore::JSCSSStyleSheet>::create(uint64_t a1, uint64_t a2, JSC::VM *a3)
{
  unint64_t v5;

  v5 = JSC::allocateCell<WebCore::JSDOMConstructor<WebCore::JSBlob>>(a1);
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  WebCore::JSDOMConstructor<WebCore::JSCSSStyleSheet>::initializeProperties(v5, a1, a3);
  return v5;
}

uint64_t WebCore::JSDOMConstructor<WebCore::JSCSSStyleSheet>::createStructure(uint64_t *a1, int a2, JSC::JSCell *a3)
{
  uint64_t result;

  result = JSC::Structure::create(a1, a2, a3);
  *(_DWORD *)(result + 16) |= 0x80000u;
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11CSSRuleListENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  *a2 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 24))(result);
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11CSSRuleListENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSCSSStyleSheet::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCSSStyleSheet *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSCSSStyleSheet *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCSSStyleSheet::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSStyleValue::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSSupportsRule::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSTransformComponent::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLInterface<WebCore::CSSTransformComponent>>::convert(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *(_QWORD *)(result + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwTypeError();
  v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v6 = (char **)(16 * v4);
  if ((_DWORD)v4)
    v7 = v6 == &WebCore::JSCSSTransformComponent::s_info;
  else
    v7 = 1;
  if (!v7)
  {
    do
    {
      v6 = (char **)v6[2];
      v5 = v6 != 0;
    }
    while (v6 != &WebCore::JSCSSTransformComponent::s_info && v6 != 0);
  }
  if (!v5)
    return JSC::throwTypeError();
  v9 = *(_QWORD *)(a2 + 24);
  if (!v9)
    return JSC::throwTypeError();
  ++*(_DWORD *)(v9 + 8);
  v15 = v9;
  v10 = *(unsigned int *)(a3 + 12);
  if ((_DWORD)v10 == *(_DWORD *)(a3 + 8))
  {
    v11 = WTF::Vector<WTF::Ref<WebCore::AcceleratedEffect,WTF::RawPtrTraits<WebCore::AcceleratedEffect>,WTF::DefaultRefDerefTraits<WebCore::AcceleratedEffect>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((char **)a3, v10 + 1, (unint64_t)&v15);
    v12 = *(unsigned int *)(a3 + 12);
    v13 = *(char **)a3;
    v14 = *(_QWORD *)v11;
    *(_QWORD *)v11 = 0;
    *(_QWORD *)&v13[8 * v12] = v14;
    result = v15;
    *(_DWORD *)(a3 + 12) = v12 + 1;
    v15 = 0;
    if (result)
    {
      if (*(_DWORD *)(result + 8) == 1)
        return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 32))(result);
      else
        --*(_DWORD *)(result + 8);
    }
  }
  else
  {
    *(_QWORD *)(*(_QWORD *)a3 + 8 * v10) = v9;
    *(_DWORD *)(a3 + 12) = v10 + 1;
  }
  return result;
}

uint64_t WebCore::JSCSSTransformValue::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

_DWORD *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore21CSSTransformComponentENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, _DWORD **a2)
{
  _DWORD *result;

  result = *a2;
  *a2 = 0;
  if (result)
  {
    if (result[2] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 32))(result);
    else
      --result[2];
  }
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore21CSSTransformComponentENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENSA_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSJ_1EJSG_SH_EEEEEEDcSL_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSCSSTransformValue::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCSSTransformValue *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSCSSTransformValue *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCSSTransformValue::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSTransition::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSTransitionEvent::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t result;
  WTF *v5;
  void *v6;

  v3 = *a2;
  *a2 = 0;
  result = *(_QWORD *)(a1 + 2616);
  *(_QWORD *)(a1 + 2616) = v3;
  if (result)
  {
    v5 = (WTF *)MEMORY[0x19AEA3528]();
    return WTF::fastFree(v5, v6);
  }
  return result;
}

uint64_t WebCore::JSCSSTranslate::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSTranslate::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCSSTranslate *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSCSSTranslate *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCSSTranslate::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSUnitValue::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCSSUnitValue::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCSSUnitValue *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSCSSUnitValue *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCSSUnitValue::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::Detail::GenericSequenceInnerConverter<WebCore::IDLUnion<WebCore::IDLUSVString,WebCore::IDLInterface<WebCore::CSSOMVariableReferenceValue>>>::convert(JSC::JSGlobalObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _BOOL4 v5;
  char **v6;
  BOOL v7;
  _DWORD *v9;
  int v10;
  int v11;
  _DWORD *v12;
  unint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v18;
  unsigned int v19;
  char v20;
  _DWORD *v21;
  int v22;
  int v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v4 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v5 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v6 = (char **)(16 * v4);
    if ((_DWORD)v4)
      v7 = v6 == &WebCore::JSCSSOMVariableReferenceValue::s_info;
    else
      v7 = 1;
    if (!v7)
    {
      do
      {
        v6 = (char **)v6[2];
        v5 = v6 != 0;
      }
      while (v6 != &WebCore::JSCSSOMVariableReferenceValue::s_info && v6 != 0);
    }
    if (v5)
    {
      v9 = *(_DWORD **)(a2 + 24);
      if (v9)
      {
        ++*v9;
        v21 = v9;
        v10 = 1;
        v22 = 1;
        v23 = 0;
        goto LABEL_19;
      }
    }
  }
  WebCore::valueToUSVString(a1, a2, (uint64_t)&v18);
  if (!v19)
  {
    v12 = v18;
    v18 = 0;
    v21 = v12;
    v22 = 0;
    v23 = 0;
    _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJS9_SB_EEEEEEDcSF_DpT0_((uint64_t)&v20, (WTF::StringImpl *)&v18);
    v10 = 0;
LABEL_19:
    LOBYTE(v18) = 0;
    v19 = -1;
    result = ((uint64_t (*)(char *, _DWORD **, _DWORD **))off_1E3249778[v10])(&v20, &v18, &v21);
    v19 = v10;
    v14 = *(unsigned int *)(a3 + 12);
    if ((_DWORD)v14 == *(_DWORD *)(a3 + 8))
    {
      result = WTF::Vector<std::variant<WTF::String,WTF::RefPtr<WebCore::CSSOMVariableReferenceValue,WTF::RawPtrTraits<WebCore::CSSOMVariableReferenceValue>,WTF::DefaultRefDerefTraits<WebCore::CSSOMVariableReferenceValue>>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(a3, v14 + 1, (unint64_t)&v18);
      v15 = *(_QWORD *)a3 + 16 * *(unsigned int *)(a3 + 12);
      *(_BYTE *)v15 = 0;
      *(_DWORD *)(v15 + 8) = -1;
      v16 = *(unsigned int *)(result + 8);
      if ((_DWORD)v16 == -1)
        goto LABEL_25;
      result = ((uint64_t (*)(char *, uint64_t, unint64_t))off_1E3249778[v16])(&v20, v15, result);
    }
    else
    {
      v15 = *(_QWORD *)a3 + 16 * v14;
      *(_BYTE *)v15 = 0;
      *(_DWORD *)(v15 + 8) = -1;
      LODWORD(v16) = v19;
      if (v19 == -1)
      {
        ++*(_DWORD *)(a3 + 12);
        goto LABEL_28;
      }
      result = ((uint64_t (*)(char *, uint64_t, _DWORD **))off_1E3249778[v19])(&v20, v15, &v18);
    }
    *(_DWORD *)(v15 + 8) = v16;
LABEL_25:
    v17 = v19;
    ++*(_DWORD *)(a3 + 12);
    if ((_DWORD)v17 != -1)
      result = ((uint64_t (*)(char *, _DWORD **))off_1E32487E0[v17])(&v20, &v18);
LABEL_28:
    v11 = v23;
    if (v23 == -1)
      return result;
    return ((uint64_t (*)(_DWORD **, _DWORD **))off_1E32487F0[v11])(&v18, &v21);
  }
  v23 = 1;
  if (v19 != -1)
    ((void (*)(char *, _DWORD **))off_1E3238AF8[v19])(&v20, &v18);
  v11 = 1;
  return ((uint64_t (*)(_DWORD **, _DWORD **))off_1E32487F0[v11])(&v18, &v21);
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore27CSSOMVariableReferenceValueENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISI_LNS0_6_TraitE1EEEEEvRSJ_OT_EUlRSP_OT0_E_JRNS0_6__baseILSM_1EJS9_SH_EEEOSX_EEEDcSP_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore27CSSOMVariableReferenceValueENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISI_LNS0_6_TraitE1EEEEEvRSJ_OT_EUlRSP_OT0_E_JRNS0_6__baseILSM_1EJS9_SH_EEEOSX_EEEDcSP_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

unint64_t WTF::Vector<std::variant<WTF::String,WTF::RefPtr<WebCore::CSSOMVariableReferenceValue,WTF::RawPtrTraits<WebCore::CSSOMVariableReferenceValue>,WTF::DefaultRefDerefTraits<WebCore::CSSOMVariableReferenceValue>>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v3 = a3;
  v5 = *(_QWORD *)a1;
  if (*(_QWORD *)a1 > a3 || v5 + 16 * (unint64_t)*(unsigned int *)(a1 + 12) <= a3)
  {
    v9 = *(unsigned int *)(a1 + 8) + ((unint64_t)*(unsigned int *)(a1 + 8) >> 2);
    if (v9 >= 0x10)
      v10 = v9 + 1;
    else
      v10 = 16;
    if (v10 > a2)
      a2 = v10;
    WTF::Vector<std::variant<WTF::String,WTF::RefPtr<WebCore::CSSOMVariableReferenceValue,WTF::RawPtrTraits<WebCore::CSSOMVariableReferenceValue>,WTF::DefaultRefDerefTraits<WebCore::CSSOMVariableReferenceValue>>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
  }
  else
  {
    v6 = a3 - v5;
    v7 = *(unsigned int *)(a1 + 8) + ((unint64_t)*(unsigned int *)(a1 + 8) >> 2);
    if (v7 >= 0x10)
      v8 = v7 + 1;
    else
      v8 = 16;
    if (v8 > a2)
      a2 = v8;
    WTF::Vector<std::variant<WTF::String,WTF::RefPtr<WebCore::CSSOMVariableReferenceValue,WTF::RawPtrTraits<WebCore::CSSOMVariableReferenceValue>,WTF::DefaultRefDerefTraits<WebCore::CSSOMVariableReferenceValue>>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(a1, a2);
    return *(_QWORD *)a1 + v6;
  }
  return v3;
}

uint64_t WTF::Vector<std::variant<WTF::String,WTF::RefPtr<WebCore::CSSOMVariableReferenceValue,WTF::RawPtrTraits<WebCore::CSSOMVariableReferenceValue>,WTF::DefaultRefDerefTraits<WebCore::CSSOMVariableReferenceValue>>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::reserveCapacity<(WTF::FailureAction)0>(uint64_t result, unint64_t a2)
{
  int v2;
  uint64_t v3;
  WTF *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  WTF *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;

  if (*(unsigned int *)(result + 8) >= a2)
    return 1;
  v2 = a2;
  if (!(a2 >> 28))
  {
    v3 = result;
    v4 = *(WTF **)result;
    v5 = *(unsigned int *)(result + 12);
    v6 = WTF::fastMalloc((WTF *)(16 * a2));
    *(_DWORD *)(v3 + 8) = v2;
    *(_QWORD *)v3 = v6;
    if ((_DWORD)v5)
    {
      v8 = v6;
      v9 = 16 * v5;
      v10 = v4;
      do
      {
        *(_BYTE *)v8 = 0;
        *(_DWORD *)(v8 + 8) = -1;
        v11 = *((unsigned int *)v10 + 2);
        if ((_DWORD)v11 != -1)
        {
          ((void (*)(char *, uint64_t, WTF *))off_1E3249778[v11])(&v13, v8, v10);
          *(_DWORD *)(v8 + 8) = v11;
          v12 = *((unsigned int *)v10 + 2);
          if ((_DWORD)v12 != -1)
            ((void (*)(char *, WTF *))off_1E32487E0[v12])(&v14, v10);
        }
        *((_DWORD *)v10 + 2) = -1;
        v8 += 16;
        v10 = (WTF *)((char *)v10 + 16);
        v9 -= 16;
      }
      while (v9);
    }
    if (v4)
    {
      if (*(WTF **)v3 == v4)
      {
        *(_QWORD *)v3 = 0;
        *(_DWORD *)(v3 + 8) = 0;
      }
      WTF::fastFree(v4, v7);
    }
    return 1;
  }
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCSSUnparsedValue::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

void _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLUSVStringENS_12IDLInterfaceINS_27CSSOMVariableReferenceValueEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6StringENSH_6RefPtrIS6_NSH_12RawPtrTraitsIS6_EENSH_21DefaultRefDerefTraitsIS6_EEEEEEEEUlTyvE_JNSF_17integral_constantIlLl0EEENST_IlLl1EEEEEET_SW_(uint64_t a1, uint64_t **a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  bmalloc::api *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  bmalloc::api *v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  WTF::StringImpl *v24;
  bmalloc::api *v25;
  uint64_t *v26;
  __int128 v27;
  _DWORD *v28;
  WTF::StringImpl *v29;
  unsigned __int8 *v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  _QWORD *v34;
  _DWORD **v35;
  bmalloc::api *v36;

  v4 = **a2;
  if (v4)
    goto LABEL_12;
  v5 = a2[4];
  if (*((_DWORD *)v5 + 2))
    goto LABEL_46;
  v6 = a2[2][7];
  v7 = *v5;
  if (*v5 && (v8 = *(_DWORD *)(v7 + 4)) != 0)
  {
    if (v8 != 1)
    {
LABEL_6:
      v9 = *(_QWORD *)(v6 + 64760);
      if (!v9 || v7 != *(_QWORD *)(v9 + 8))
        v9 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_9;
    }
    v30 = *(unsigned __int8 **)(v7 + 8);
    if ((*(_BYTE *)(v7 + 16) & 4) != 0)
    {
      v31 = *v30;
    }
    else
    {
      v32 = *(unsigned __int16 *)v30;
      if (v32 > 0xFF)
        goto LABEL_6;
      v31 = v32;
    }
    v9 = *(_QWORD *)(v6 + 8 * v31 + 42216);
  }
  else
  {
    v9 = *(_QWORD *)(v6 + 41968);
  }
LABEL_9:
  v10 = a2[1];
  if (!*((_BYTE *)v10 + 8))
    *((_BYTE *)v10 + 8) = 1;
  *v10 = v9;
  v4 = **a2;
LABEL_12:
  if (v4 != 1)
  {
LABEL_30:
    v27 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v27;
    *(_QWORD *)(a1 + 32) = a2[4];
    return;
  }
  v11 = a2[4];
  if (*((_DWORD *)v11 + 2) == 1)
  {
    v12 = (bmalloc::api *)*v11;
    if (v12)
    {
      v13 = (uint64_t)a2[3];
      v14 = *(_QWORD *)(*(_QWORD *)(v13 + 3320) + 32);
      if (!v14)
        goto LABEL_23;
      v15 = *(_DWORD *)(v14 - 8);
      v16 = ((unint64_t)v12 + ~((_QWORD)v12 << 32)) ^ (((unint64_t)v12 + ~((_QWORD)v12 << 32)) >> 22);
      v17 = 9 * ((v16 + ~(v16 << 13)) ^ ((v16 + ~(v16 << 13)) >> 8));
      v18 = (v17 ^ (v17 >> 15)) + ~((v17 ^ (v17 >> 15)) << 27);
      v19 = v15 & ((v18 >> 31) ^ v18);
      v20 = *(bmalloc::api **)(v14 + 16 * v19);
      if (v20 != v12)
      {
        v21 = 1;
        while (v20)
        {
          v19 = ((_DWORD)v19 + v21) & v15;
          v20 = *(bmalloc::api **)(v14 + 16 * v19);
          ++v21;
          if (v20 == v12)
            goto LABEL_20;
        }
        goto LABEL_23;
      }
LABEL_20:
      v22 = *(_QWORD *)(v14 + 16 * v19 + 8);
      if (!v22 || (*(_BYTE *)(v22 + 8) & 3) != 0 || (v23 = *(_QWORD *)v22) == 0)
      {
LABEL_23:
        ++*(_DWORD *)v12;
        v36 = v12;
        v23 = WebCore::createWrapper<WebCore::CSSOMVariableReferenceValue,WebCore::CSSOMVariableReferenceValue>(v13, &v36);
        v25 = v36;
        if (v36)
        {
          if (*(_DWORD *)v36 == 1)
          {
            v28 = (_DWORD *)*((_QWORD *)v36 + 2);
            *((_QWORD *)v36 + 2) = 0;
            if (v28)
            {
              if (v28[2] == 1)
                (*(void (**)(_DWORD *))(*(_QWORD *)v28 + 16))(v28);
              else
                --v28[2];
            }
            v29 = (WTF::StringImpl *)*((_QWORD *)v25 + 1);
            *((_QWORD *)v25 + 1) = 0;
            if (v29)
            {
              if (*(_DWORD *)v29 == 2)
                WTF::StringImpl::destroy(v29, v24);
              else
                *(_DWORD *)v29 -= 2;
            }
            bmalloc::api::isoDeallocate(v25, v24);
          }
          else
          {
            --*(_DWORD *)v36;
          }
        }
      }
    }
    else
    {
      v23 = 2;
    }
    v26 = a2[1];
    if (!*((_BYTE *)v26 + 8))
      *((_BYTE *)v26 + 8) = 1;
    *v26 = v23;
    goto LABEL_30;
  }
LABEL_46:
  v33 = std::__throw_bad_variant_access[abi:sn180100]();
  _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore27CSSOMVariableReferenceValueENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISI_LNS0_6_TraitE1EEEEEvRSJ_OT_EUlRSR_OT0_E_JRNS0_6__baseILSM_1EJS9_SH_EEERKSZ_EEEDcSR_DpT0_(v33, v34, v35);
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore27CSSOMVariableReferenceValueENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISI_LNS0_6_TraitE1EEEEEvRSJ_OT_EUlRSR_OT0_E_JRNS0_6__baseILSM_1EJS9_SH_EEERKSZ_EEEDcSR_DpT0_(uint64_t a1, _QWORD *a2, _DWORD **a3)
{
  _DWORD *v3;

  v3 = *a3;
  if (*a3)
    *v3 += 2;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore27CSSOMVariableReferenceValueENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEEEEEE19__generic_constructB8sn180100IRKNS0_18__copy_constructorISI_LNS0_6_TraitE1EEEEEvRSJ_OT_EUlRSR_OT0_E_JRNS0_6__baseILSM_1EJS9_SH_EEERKSZ_EEEDcSR_DpT0_(uint64_t a1, _QWORD *a2, _DWORD **a3)
{
  _DWORD *v3;

  v3 = *a3;
  if (*a3)
    ++*v3;
  *a2 = v3;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6StringENS9_6RefPtrIN7WebCore27CSSOMVariableReferenceValueENS9_12RawPtrTraitsISD_EENS9_21DefaultRefDerefTraitsISD_EEEEEEENSC_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSJ_SK_EEEEEEDcSO_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E32487E0[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6StringENS9_6RefPtrIN7WebCore27CSSOMVariableReferenceValueENS9_12RawPtrTraitsISD_EENS9_21DefaultRefDerefTraitsISD_EEEEEEENSC_9ExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSJ_SK_EEEEEEDcSO_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = (WTF::StringImpl *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

uint64_t WebCore::JSCSSUnparsedValue::create(unint64_t a1, JSC::VM *a2, uint64_t *a3)
{
  WebCore::JSCSSUnparsedValue *v5;
  _QWORD *v6;
  unint64_t SlowCase;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;

  v5 = (WebCore::JSCSSUnparsedValue *)*((_QWORD *)a2 + 7);
  v6 = (_QWORD *)WebCore::JSCSSUnparsedValue::subspaceForImpl(v5, a2);
  SlowCase = v6[3];
  if (SlowCase < v6[4])
    goto LABEL_2;
  SlowCase = v6[5];
  if ((SlowCase & 1) == 0)
  {
    v10 = *(_QWORD *)(SlowCase + 8) ^ v6[6];
    v6[4] = SlowCase + HIDWORD(v10);
    v6[5] = SlowCase + (int)v10;
LABEL_2:
    v6[3] = SlowCase + 32;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *a3;
  *a3 = 0;
  result = WebCore::JSDOMObject::JSDOMObject(SlowCase, a1);
  *(_QWORD *)(result + 24) = v8;
  if (*((_BYTE *)v5 + 755))
    __dmb(0xAu);
  return result;
}

WebCore::CanvasGradient *WTF::RefCounted<WebCore::CanvasGradient>::deref(WebCore::CanvasGradient *result, void *a2)
{
  WTF *v2;
  void *v3;

  if (*(_DWORD *)result == 1)
  {
    WebCore::CanvasGradient::~CanvasGradient(result, a2);
    return (WebCore::CanvasGradient *)WTF::fastFree(v2, v3);
  }
  else
  {
    --*(_DWORD *)result;
  }
  return result;
}

uint64_t WebCore::getDOMStructure<WebCore::JSCanvasGradient>(WebCore::JSCanvasGradient *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  uint64_t result;
  int v13;
  uint64_t *v14;
  unint64_t Prototype;
  unint64_t v16;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  unint64_t v19;
  int v20;

  v5 = *((_QWORD *)a2 + 412);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSCanvasGradient::s_info + ~((_QWORD)&WebCore::JSCanvasGradient::s_info << 32)) ^ (((unint64_t)&WebCore::JSCanvasGradient::s_info + ~((_QWORD)&WebCore::JSCanvasGradient::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSCanvasGradient::s_info)
    {
LABEL_3:
      result = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (result)
        return result;
    }
    else
    {
      v13 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v13) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v13;
        if (v11 == &WebCore::JSCanvasGradient::s_info)
          goto LABEL_3;
      }
    }
  }
  v14 = (uint64_t *)((char *)this + 40136);
  Prototype = WebCore::JSCanvasGradient::createPrototype(this, (JSC::JSCell **)a2, a3);
  v16 = Prototype;
  v20 = 23;
  if ((Prototype & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)Prototype);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, this);
  }
  SlowCase = *v14;
  if ((unint64_t)*v14 >= *((_QWORD *)this + 5018))
  {
    SlowCase = *((_QWORD *)this + 5019);
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_14;
    }
    v19 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 5020);
    *((_QWORD *)this + 5018) = SlowCase + HIDWORD(v19);
    *((_QWORD *)this + 5019) = SlowCase + (int)v19;
  }
  *v14 = SlowCase + 128;
LABEL_14:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, this, a2, v16, &v20, &WebCore::JSCanvasGradient::s_info, 0, 0);
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  return WebCore::cacheDOMStructure((JSCell *)a2, SlowCase, (uint64_t)&WebCore::JSCanvasGradient::s_info);
}

uint64_t WTF::SortedArrayMap<std::pair<WTF::ComparableASCIISubsetLiteral<(WTF::ASCIISubset)0>,WebCore::CanvasLineCap> [3]>::tryGet<WTF::String>(WTF::String const&)const::{lambda(WTF::String&)#1}::operator()<std::pair<WTF::ComparableASCIISubsetLiteral<(WTF::ASCIISubset)0>,WebCore::CanvasLineCap> const>(uint64_t result, unsigned __int8 *a2, uint64_t a3)
{
  if (*(_BYTE *)(result + 16))
    return WTF::operator==(*(unsigned __int8 **)result, *(_QWORD *)(result + 8), a2, a3);
  __break(1u);
  return result;
}

uint64_t WebCore::JSCanvasPattern::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

uint64_t WebCore::JSCanvasRenderingContext2D::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

BOOL WebCore::setJSCanvasRenderingContext2D_globalAlphaSetter(JSC::JSGlobalObject *a1, WebCore::InspectorCanvasCallTracer *a2, unint64_t a3)
{
  int v4;
  WebCore::CanvasRenderingContext *v6;
  WTF::StringImpl *v7;
  WTF::StringImpl *v8;
  _QWORD v9[2];
  WTF::StringImpl *v10;
  double v11;
  int v12;
  _BYTE v13[24];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  WebCore::convert<WebCore::IDLUnrestrictedDouble>((uint64_t)&v11, a1, a3);
  v4 = v12;
  if (!v12)
  {
    if (*((_BYTE *)a2 + 25))
    {
      WTF::StringImpl::createWithoutCopyingNonEmpty();
      WebCore::InspectorCanvasCallTracer::processArgument(a2, v6, v11, v13);
      v9[0] = v13;
      v9[1] = 1;
      WebCore::InspectorCanvasCallTracer::recordAction(a2, (const WTF::StringImpl *)&v10, v9);
      std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v13);
      v8 = v10;
      v10 = 0;
      if (v8)
      {
        if (*(_DWORD *)v8 == 2)
          WTF::StringImpl::destroy(v8, v7);
        else
          *(_DWORD *)v8 -= 2;
      }
    }
    WebCore::CanvasRenderingContext2DBase::setGlobalAlpha((uint64_t)a2, v11);
  }
  return v4 == 0;
}

uint64_t _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_12IDLDOMStringENS_12IDLInterfaceINS_14CanvasGradientEEENS5_INS_13CanvasPatternEEEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJN3WTF6StringENSJ_6RefPtrIS6_NSJ_12RawPtrTraitsIS6_EENSJ_21DefaultRefDerefTraitsIS6_EEEENSL_IS8_NSM_IS8_EENSO_IS8_EEEEEEEEUlTyvE_JNSH_17integral_constantIlLl0EEENSY_IlLl1EEENSY_IlLl2EEEEEET_S12_@<X0>(uint64_t result@<X0>, WebCore::CanvasGradient *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  WTF *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  void *v18;
  WTF *v19;
  uint64_t v20;
  __int128 v21;
  unsigned __int8 *v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  WTF *v29;
  char v30;

  v3 = result;
  v5 = **(_QWORD **)result;
  if (!v5)
  {
    v6 = *(uint64_t **)(result + 32);
    if (*((_DWORD *)v6 + 2))
      goto LABEL_49;
    result = *(_QWORD *)(*(_QWORD *)(result + 16) + 56);
    v7 = *v6;
    if (*v6 && (v8 = *(_DWORD *)(v7 + 4)) != 0)
    {
      if (v8 != 1)
      {
LABEL_6:
        v9 = *(_QWORD *)(result + 64760);
        if (!v9 || v7 != *(_QWORD *)(v9 + 8))
        {
          result = JSC::jsStringWithCacheSlowCase();
          v9 = result;
        }
        goto LABEL_9;
      }
      v22 = *(unsigned __int8 **)(v7 + 8);
      if ((*(_BYTE *)(v7 + 16) & 4) != 0)
      {
        v23 = *v22;
      }
      else
      {
        v25 = *(unsigned __int16 *)v22;
        if (v25 > 0xFF)
          goto LABEL_6;
        v23 = v25;
      }
      v9 = *(_QWORD *)(result + 8 * v23 + 42216);
    }
    else
    {
      v9 = *(_QWORD *)(result + 41968);
    }
LABEL_9:
    v10 = *(_QWORD *)(v3 + 8);
    if (!*(_BYTE *)(v10 + 8))
      *(_BYTE *)(v10 + 8) = 1;
    *(_QWORD *)v10 = v9;
    v5 = **(_QWORD **)v3;
  }
  if (v5 == 1)
  {
    v11 = *(_QWORD *)(v3 + 32);
    if (*(_DWORD *)(v11 + 8) != 1)
      goto LABEL_49;
    if (*(_QWORD *)v11)
      result = WebCore::toJS((WebCore *)result, *(JSC::JSGlobalObject **)(v3 + 24), *(WebCore::JSDOMGlobalObject **)v11, a2);
    else
      result = 2;
    v12 = *(_QWORD *)(v3 + 8);
    if (!*(_BYTE *)(v12 + 8))
      *(_BYTE *)(v12 + 8) = 1;
    *(_QWORD *)v12 = result;
    v5 = **(_QWORD **)v3;
  }
  if (v5 != 2)
  {
LABEL_31:
    v21 = *(_OWORD *)(v3 + 16);
    *(_OWORD *)a3 = *(_OWORD *)v3;
    *(_OWORD *)(a3 + 16) = v21;
    *(_QWORD *)(a3 + 32) = *(_QWORD *)(v3 + 32);
    return result;
  }
  v13 = *(_QWORD *)(v3 + 32);
  if (*(_DWORD *)(v13 + 8) == 2)
  {
    v14 = *(WTF **)v13;
    if (*(_QWORD *)v13)
    {
      v15 = *(_QWORD *)(v3 + 24);
      v16 = (uint64_t *)(*(_QWORD *)(v15 + 3320) + 32);
      v29 = *(WTF **)v13;
      result = WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::get(v16, &v29);
      v17 = result;
      if (!result)
      {
        ++*(_DWORD *)v14;
        v29 = v14;
        result = WebCore::createWrapper<WebCore::CanvasPattern,WebCore::CanvasPattern>(v15, &v29);
        v17 = result;
        v19 = v29;
        v29 = 0;
        if (v19)
        {
          if (*(_DWORD *)v19 == 1)
          {
            v24 = *((_QWORD *)v19 + 1);
            *((_QWORD *)v19 + 1) = 0;
            if (v24)
            {
              if (*(_DWORD *)v24 == 1)
              {
                if (*(_BYTE *)(v24 + 40))
                {
                  v26 = *(unsigned int *)(v24 + 32);
                  if ((_DWORD)v26 != -1)
                    ((void (*)(char *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11NativeImageENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS7_INS8_11ImageBufferENSA_ISF_EENSC_ISF_EEEENS6_23ObjectIdentifierGenericINS8_31RenderingResourceIdentifierTypeENS6_38ObjectIdentifierThreadSafeAccessTraitsIyEEyEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSQ_EEEDcOSR_DpOT0____fmatrix[v26])(&v30, v24 + 24);
                  *(_DWORD *)(v24 + 32) = -1;
                }
                v27 = *(unsigned int *)(v24 + 16);
                if ((_DWORD)v27 != -1)
                  ((void (*)(char *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11NativeImageENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS7_INS8_11ImageBufferENSA_ISF_EENSC_ISF_EEEENS6_23ObjectIdentifierGenericINS8_31RenderingResourceIdentifierTypeENS6_38ObjectIdentifierThreadSafeAccessTraitsIyEEyEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSQ_EEEDcOSR_DpOT0____fmatrix[v27])(&v30, v24 + 8);
                *(_DWORD *)(v24 + 16) = -1;
                WTF::fastFree((WTF *)v24, v18);
              }
              else
              {
                --*(_DWORD *)v24;
              }
            }
            result = WTF::fastFree(v19, v18);
          }
          else
          {
            --*(_DWORD *)v19;
          }
        }
      }
    }
    else
    {
      v17 = 2;
    }
    v20 = *(_QWORD *)(v3 + 8);
    if (!*(_BYTE *)(v20 + 8))
      *(_BYTE *)(v20 + 8) = 1;
    *(_QWORD *)v20 = v17;
    goto LABEL_31;
  }
LABEL_49:
  v28 = std::__throw_bad_variant_access[abi:sn180100]();
  return _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore14CanvasGradientENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEENSA_INSB_13CanvasPatternENSD_ISI_EENSF_ISI_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSN_1EJS9_SH_SL_EEEEEEDcSP_DpT0_(v28);
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore14CanvasGradientENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEENSA_INSB_13CanvasPatternENSD_ISI_EENSF_ISI_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSN_1EJS9_SH_SL_EEEEEEDcSP_DpT0_(uint64_t a1, WTF::StringImpl *a2)
{
  WTF::StringImpl *result;

  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WebCore::CanvasGradient *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore14CanvasGradientENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEENSA_INSB_13CanvasPatternENSD_ISI_EENSF_ISI_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSN_1EJS9_SH_SL_EEEEEEDcSP_DpT0_(uint64_t a1, WebCore::CanvasGradient **a2)
{
  WebCore::CanvasGradient *result;

  result = *a2;
  *a2 = 0;
  if (result)
    return WTF::RefCounted<WebCore::CanvasGradient>::deref(result, a2);
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore14CanvasGradientENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEENSA_INSB_13CanvasPatternENSD_ISI_EENSF_ISI_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSN_1EJS9_SH_SL_EEEEEEDcSP_DpT0_(uint64_t a1, WTF **a2)
{
  WTF *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  v2 = *a2;
  *a2 = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      v3 = *((_QWORD *)v2 + 1);
      *((_QWORD *)v2 + 1) = 0;
      if (v3)
      {
        if (*(_DWORD *)v3 == 1)
        {
          if (*(_BYTE *)(v3 + 40))
          {
            v5 = *(unsigned int *)(v3 + 32);
            if ((_DWORD)v5 != -1)
              ((void (*)(char *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11NativeImageENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS7_INS8_11ImageBufferENSA_ISF_EENSC_ISF_EEEENS6_23ObjectIdentifierGenericINS8_31RenderingResourceIdentifierTypeENS6_38ObjectIdentifierThreadSafeAccessTraitsIyEEyEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSQ_EEEDcOSR_DpOT0____fmatrix[v5])(&v7, v3 + 24);
            *(_DWORD *)(v3 + 32) = -1;
          }
          v6 = *(unsigned int *)(v3 + 16);
          if ((_DWORD)v6 != -1)
            ((void (*)(char *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11NativeImageENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS7_INS8_11ImageBufferENSA_ISF_EENSC_ISF_EEEENS6_23ObjectIdentifierGenericINS8_31RenderingResourceIdentifierTypeENS6_38ObjectIdentifierThreadSafeAccessTraitsIyEEyEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSQ_EEEDcOSR_DpOT0____fmatrix[v6])(&v8, v3 + 8);
          *(_DWORD *)(v3 + 16) = -1;
          WTF::fastFree((WTF *)v3, a2);
        }
        else
        {
          --*(_DWORD *)v3;
        }
      }
      return WTF::fastFree(v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
  return result;
}

uint64_t std::optional<std::variant<WTF::String,WTF::RefPtr<WebCore::CanvasGradient,WTF::RawPtrTraits<WebCore::CanvasGradient>,WTF::DefaultRefDerefTraits<WebCore::CanvasGradient>>,WTF::RefPtr<WebCore::CanvasPattern,WTF::RawPtrTraits<WebCore::CanvasPattern>,WTF::DefaultRefDerefTraits<WebCore::CanvasPattern>>>>::operator=[abi:sn180100]<std::variant<WTF::String,WTF::RefPtr<WebCore::CanvasGradient,WTF::RawPtrTraits<WebCore::CanvasGradient>,WTF::DefaultRefDerefTraits<WebCore::CanvasGradient>>,WTF::RefPtr<WebCore::CanvasPattern,WTF::RawPtrTraits<WebCore::CanvasPattern>,WTF::DefaultRefDerefTraits<WebCore::CanvasPattern>>>,void>(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  char v9;

  if (*(_BYTE *)(a1 + 16))
  {
    v3 = *(unsigned int *)(a1 + 8);
    v4 = *(unsigned int *)(a2 + 8);
    if ((_DWORD)v3 == -1)
    {
      if ((_DWORD)v4 == -1)
        return a1;
    }
    else if ((_DWORD)v4 == -1)
    {
      ((void (*)(char *, uint64_t, uint64_t))off_1E32497A8[v3])(&v8, a1, a2);
      *(_DWORD *)(a1 + 8) = -1;
      return a1;
    }
    v7 = a1;
    ((void (*)(uint64_t *, uint64_t, uint64_t))off_1E32497C0[v4])(&v7, a1, a2);
    return a1;
  }
  *(_BYTE *)a1 = 0;
  *(_DWORD *)(a1 + 8) = -1;
  v5 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v5 != -1)
  {
    ((void (*)(char *, uint64_t, uint64_t))off_1E32497D8[v5])(&v9, a1, a2);
    *(_DWORD *)(a1 + 8) = v5;
  }
  *(_BYTE *)(a1 + 16) = 1;
  return a1;
}

WTF::StringImpl *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore14CanvasGradientENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEENSA_INSB_13CanvasPatternENSD_ISI_EENSF_ISI_EEEEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISM_LNS0_6_TraitE1EEEEEvOT_EUlRSS_OT0_E_JRNS0_6__baseILSQ_1EJS9_SH_SL_EEEOS10_EEEDcSS_DpT0_(WTF::StringImpl *result, WTF::StringImpl *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5)
  {
    result = (WTF::StringImpl *)((uint64_t (*)(char *, uint64_t))off_1E32497A8[v5])(&v8, v4);
LABEL_7:
    v7 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v7;
    *(_DWORD *)(v4 + 8) = 0;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  result = *(WTF::StringImpl **)a2;
  *(_QWORD *)a2 = v6;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, a2);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

WebCore::CanvasGradient *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore14CanvasGradientENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEENSA_INSB_13CanvasPatternENSD_ISI_EENSF_ISI_EEEEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISM_LNS0_6_TraitE1EEEEEvOT_EUlRSS_OT0_E_JRNS0_6__baseILSQ_1EJS9_SH_SL_EEEOS10_EEEDcSS_DpT0_(WebCore::CanvasGradient *result, WebCore::CanvasGradient **a2, WebCore::CanvasGradient **a3)
{
  uint64_t v4;
  uint64_t v5;
  WebCore::CanvasGradient *v6;
  WebCore::CanvasGradient *v7;
  char v8;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_6;
  if ((_DWORD)v5 != 1)
  {
    result = (WebCore::CanvasGradient *)((uint64_t (*)(char *, uint64_t))off_1E32497A8[v5])(&v8, v4);
LABEL_6:
    v7 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v7;
    *(_DWORD *)(v4 + 8) = 1;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  result = *a2;
  *a2 = v6;
  if (result)
    return WTF::RefCounted<WebCore::CanvasGradient>::deref(result, a2);
  return result;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_12__assignmentINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore14CanvasGradientENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEENSA_INSB_13CanvasPatternENSD_ISI_EENSF_ISI_EEEEEEEE16__generic_assignB8sn180100INS0_17__move_assignmentISM_LNS0_6_TraitE1EEEEEvOT_EUlRSS_OT0_E_JRNS0_6__baseILSQ_1EJS9_SH_SL_EEEOS10_EEEDcSS_DpT0_(uint64_t result, WTF **a2, WTF **a3)
{
  uint64_t v4;
  uint64_t v5;
  WTF *v6;
  WTF *v7;
  WTF *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  v4 = *(_QWORD *)result;
  v5 = *(unsigned int *)(*(_QWORD *)result + 8);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5 != 2)
  {
    result = ((uint64_t (*)(char *, uint64_t))off_1E32497A8[v5])(&v12, v4);
LABEL_7:
    v8 = *a3;
    *a3 = 0;
    *(_QWORD *)v4 = v8;
    *(_DWORD *)(v4 + 8) = 2;
    return result;
  }
  v6 = *a3;
  *a3 = 0;
  v7 = *a2;
  *a2 = v6;
  if (v7)
  {
    if (*(_DWORD *)v7 == 1)
    {
      v9 = *((_QWORD *)v7 + 1);
      *((_QWORD *)v7 + 1) = 0;
      if (v9)
      {
        if (*(_DWORD *)v9 == 1)
        {
          if (*(_BYTE *)(v9 + 40))
          {
            v10 = *(unsigned int *)(v9 + 32);
            if ((_DWORD)v10 != -1)
              ((void (*)(char *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11NativeImageENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS7_INS8_11ImageBufferENSA_ISF_EENSC_ISF_EEEENS6_23ObjectIdentifierGenericINS8_31RenderingResourceIdentifierTypeENS6_38ObjectIdentifierThreadSafeAccessTraitsIyEEyEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSQ_EEEDcOSR_DpOT0____fmatrix[v10])(&v13, v9 + 24);
            *(_DWORD *)(v9 + 32) = -1;
          }
          v11 = *(unsigned int *)(v9 + 16);
          if ((_DWORD)v11 != -1)
            ((void (*)(char *, uint64_t))__const__ZNSt3__116__variant_detail12__visitation6__base11__visit_altB8sn180100IZNS0_6__dtorINS0_8__traitsIJN3WTF3RefIN7WebCore11NativeImageENS6_12RawPtrTraitsIS9_EENS6_21DefaultRefDerefTraitsIS9_EEEENS7_INS8_11ImageBufferENSA_ISF_EENSC_ISF_EEEENS6_23ObjectIdentifierGenericINS8_31RenderingResourceIdentifierTypeENS6_38ObjectIdentifierThreadSafeAccessTraitsIyEEyEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRSQ_EEEDcOSR_DpOT0____fmatrix[v11])(&v14, v9 + 8);
          *(_DWORD *)(v9 + 16) = -1;
          WTF::fastFree((WTF *)v9, a2);
        }
        else
        {
          --*(_DWORD *)v9;
        }
      }
      return WTF::fastFree(v7, a2);
    }
    else
    {
      --*(_DWORD *)v7;
    }
  }
  return result;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore14CanvasGradientENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEENSA_INSB_13CanvasPatternENSD_ISI_EENSF_ISI_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISM_LNS0_6_TraitE1EEEEEvRSN_OT_EUlRST_OT0_E_JRNS0_6__baseILSQ_1EJS9_SH_SL_EEEOS11_EEEDcST_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore14CanvasGradientENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEENSA_INSB_13CanvasPatternENSD_ISI_EENSF_ISI_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISM_LNS0_6_TraitE1EEEEEvRSN_OT_EUlRST_OT0_E_JRNS0_6__baseILSQ_1EJS9_SH_SL_EEEOS11_EEEDcST_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8sn180100IOZNS0_6__ctorINS0_8__traitsIJN3WTF6StringENS8_6RefPtrIN7WebCore14CanvasGradientENS8_12RawPtrTraitsISC_EENS8_21DefaultRefDerefTraitsISC_EEEENSA_INSB_13CanvasPatternENSD_ISI_EENSF_ISI_EEEEEEEE19__generic_constructB8sn180100INS0_18__move_constructorISM_LNS0_6_TraitE1EEEEEvRSN_OT_EUlRST_OT0_E_JRNS0_6__baseILSQ_1EJS9_SH_SL_EEEOS11_EEEDcST_DpT0_(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = *a3;
  *a3 = 0;
  *a2 = v3;
}

uint64_t _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJNS_7variantIJN3WTF6StringENS9_6RefPtrIN7WebCore14CanvasGradientENS9_12RawPtrTraitsISD_EENS9_21DefaultRefDerefTraitsISD_EEEENSB_INSC_13CanvasPatternENSE_ISJ_EENSG_ISJ_EEEEEEENSC_25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSQ_1EJSN_SO_EEEEEEDcSS_DpT0_(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_1E32497A8[v3])(&v5, a2);
  *(_DWORD *)(a2 + 8) = -1;
  return result;
}

uint64_t WebCore::setJSCanvasRenderingContext2D_lineCapSetter(JSC::JSGlobalObject *a1, WebCore::CanvasRenderingContext *a2, uint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t result;
  char hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  _QWORD v12[2];
  WTF::StringImpl *v13;
  _BYTE v14[24];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v5 = WebCore::parseEnumeration<WebCore::CanvasLineCap>(a1, a3);
  v6 = v5;
  v7 = BYTE4(v5);
  if (*((_DWORD *)v4 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    result = 0;
    if ((hasExceptionsAfterHandlingTraps & 1) != 0 || !v7)
      return result;
  }
  else if (!BYTE4(v5))
  {
    return 0;
  }
  if (*((_BYTE *)a2 + 25))
  {
    WTF::StringImpl::createWithoutCopyingNonEmpty();
    WebCore::InspectorCanvasCallTracer::processArgument((uint64_t)a2, v6, v14);
    v12[0] = v14;
    v12[1] = 1;
    WebCore::InspectorCanvasCallTracer::recordAction(a2, (const WTF::StringImpl *)&v13, v12);
    std::optional<WebCore::InspectorCanvasCallTracer::ProcessedArgument>::~optional((uint64_t)v14);
    v11 = v13;
    v13 = 0;
    if (v11)
    {
      if (*(_DWORD *)v11 == 2)
        WTF::StringImpl::destroy(v11, v10);
      else
        *(_DWORD *)v11 -= 2;
    }
  }
  WebCore::CanvasRenderingContext2DBase::setLineCap((uint64_t)a2, v6);
  return 1;
}

void WebCore::AccessibilityObject::speechHintAttributeValue(WebCore::AccessibilityObject *this)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  WTF::StringImpl *v6;
  WTF::StringImpl *v7;
  void *v8;
  void *v9;
  const __CFString *v10;
  uint64_t v11;
  _BYTE v12[8];
  WTF::StringImpl *v13;
  char v14;

  v2 = (*(uint64_t (**)(WebCore::AccessibilityObject *))(*(_QWORD *)this + 848))(this);
  if (v2)
  {
    if ((*(_BYTE *)(v2 + 45) & 2) != 0)
    {
      v11 = *(_QWORD *)(v2 + 32);
      if (v11)
        v2 = *(_QWORD *)(v11 + 8);
      else
        v2 = 0;
    }
    v3 = v2 + 80;
    goto LABEL_4;
  }
  v5 = (*(uint64_t (**)(WebCore::AccessibilityObject *))(*(_QWORD *)this + 832))(this);
  if (!v5)
  {
LABEL_11:
    v4 = 0;
LABEL_12:
    v8 = (void *)objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v9 = v8;
    if ((v4 & 1) != 0)
      v10 = CFSTR("spell-out");
    else
      v10 = CFSTR("normal");
    objc_msgSend(v8, "addObject:", v10);
    if ((v4 & 2) != 0)
      objc_msgSend(v9, "addObject:", CFSTR("digits"));
    if ((v4 & 4) != 0)
      objc_msgSend(v9, "addObject:", CFSTR("literal-punctuation"));
    if (v4 >= 8)
      objc_msgSend(v9, "addObject:", CFSTR("no-punctuation"));
    objc_msgSend(v9, "componentsJoinedByString:", CFSTR(" "));
    JUMPOUT(0x19AEA5508);
  }
  v12[0] = 0;
  v14 = 0;
  v3 = (*(uint64_t (**)(uint64_t, _BYTE *))(*(_QWORD *)v5 + 264))(v5, v12);
  if (v14)
  {
    v7 = v13;
    v13 = 0;
    if (v7)
    {
      if (*(_DWORD *)v7 == 2)
      {
        WTF::StringImpl::destroy(v7, v6);
        if (!v3)
          goto LABEL_11;
        goto LABEL_4;
      }
      *(_DWORD *)v7 -= 2;
    }
  }
  if (!v3)
    goto LABEL_11;
LABEL_4:
  v4 = (*(_DWORD *)(*(_QWORD *)(v3 + 24) + 228) >> 18) & 0xF;
  goto LABEL_12;
}

uint64_t WebCore::AccessibilityObject::screenRelativePosition(WebCore::AccessibilityObject *this)
{
  uint64_t v2;
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  BOOL v7;
  int v8;
  int v9;
  float v11[2];
  uint64_t v12;

  v2 = (*(uint64_t (**)(WebCore::AccessibilityObject *))(*(_QWORD *)this + 1512))(this);
  v5 = HIDWORD(v2) - (v4 & 0xFFFFFFC0);
  v7 = __OFADD__(v5, v6);
  v8 = v5 + v6;
  v9 = (v5 >> 31) + 0x7FFFFFFF;
  if (!v7)
    v9 = v8;
  v11[0] = (float)(((int)(v2 - (v8 & 0xFFFFFFC0) + 32) >> 6) + (int)v2 / 64);
  v11[1] = (float)(SHIDWORD(v2) / 64 + v9 / 64 + ((int)(v9 - (v3 & 0xFFFFFFC0) + 32) >> 6));
  v12 = 0;
  return (*(uint64_t (**)(WebCore::AccessibilityObject *, float *, _QWORD))(*(_QWORD *)this + 1544))(this, v11, 0);
}

double WebCore::AccessibilityObject::textMarkerRangeForNSRange@<D0>(WebCore::AccessibilityObject *this@<X0>, const _NSRange *a2@<X1>, _OWORD *a3@<X8>)
{
  int v6;
  NSUInteger location;
  NSUInteger length;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  NSUInteger v13;
  NSUInteger v14;
  unsigned int *v15;
  unsigned int *v16;
  __int128 v17;
  WebCore::Node *v18;
  WTF::StringImpl *v19;
  Node *var0;
  Node *v21;
  void *v22;
  __int128 *v23;
  _OWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  __int128 v27;
  __int128 v28;
  Node *v29;
  WTF::StringImpl *v31[2];
  WebCore::Node *v32;
  unsigned int v33;
  char v34;
  VisiblePosition v35;
  CharacterOffset v36;
  unsigned int v37;
  CharacterOffset v38;
  char v39;
  _QWORD *v40;

  if (a2->location == 0x7FFFFFFFFFFFFFFFLL)
    goto LABEL_53;
  v6 = (*(uint64_t (**)(WebCore::AccessibilityObject *))(*(_QWORD *)this + 1456))(this);
  if ((v6 - 101) <= 0x19 && ((1 << (v6 - 101)) & 0x3000001) != 0 || v6 == 19)
  {
    location = a2->location;
    length = a2->length;
    (*(void (**)(WTF::StringImpl **__return_ptr, WebCore::AccessibilityObject *))(*(_QWORD *)this + 1400))(v31, this);
    v12 = v31[0];
    if (v31[0])
    {
      v13 = *((unsigned int *)v31[0] + 1);
      v14 = length + location;
      v31[0] = 0;
      if (*(_DWORD *)v12 == 2)
        WTF::StringImpl::destroy(v12, v11);
      else
        *(_DWORD *)v12 -= 2;
      if (v14 > v13)
        goto LABEL_53;
    }
    else if (location + length)
    {
      goto LABEL_53;
    }
    v15 = (unsigned int *)(*(uint64_t (**)(WebCore::AccessibilityObject *))(*(_QWORD *)this + 1488))(this);
    if (v15)
    {
      v16 = v15;
      WebCore::AXObjectCache::characterOffsetForIndex(v15, this, (WebCore::Node *)LODWORD(a2->location), (WebCore::Node **)&v36);
      WebCore::AXObjectCache::characterOffsetForIndex(v16, this, (WebCore::Node *)(LODWORD(a2->length) + LODWORD(a2->location)), (WebCore::Node **)&v38);
      WebCore::AXObjectCache::rangeForUnorderedCharacterOffsets(&v36, &v38, (uint64_t)v31);
      WebCore::AXTextMarkerRange::AXTextMarkerRange(a3, (const WebCore::SimpleRange *)v31);
      if (v34)
      {
        v18 = v32;
        v32 = 0;
        if (v18)
        {
          if (*((_DWORD *)v18 + 6) == 2)
          {
            if ((*((_WORD *)v18 + 15) & 0x400) == 0)
              WebCore::Node::removedLastRef(v18, v22);
          }
          else
          {
            *((_DWORD *)v18 + 6) -= 2;
          }
        }
        v19 = v31[0];
        v31[0] = 0;
        if (v19)
        {
          if (*((_DWORD *)v19 + 6) == 2)
          {
            if ((*((_WORD *)v19 + 15) & 0x400) == 0)
              WebCore::Node::removedLastRef(v19, v22);
          }
          else
          {
            *((_DWORD *)v19 + 6) -= 2;
          }
        }
      }
      var0 = v38.var0.var0;
      v38.var0.var0 = 0;
      if (var0)
      {
        if (*((_DWORD *)var0 + 6) == 2)
        {
          if ((*((_WORD *)var0 + 15) & 0x400) == 0)
            WebCore::Node::removedLastRef((WebCore::Node *)var0, v22);
        }
        else
        {
          *((_DWORD *)var0 + 6) -= 2;
        }
      }
      v21 = v36.var0.var0;
      v36.var0.var0 = 0;
      if (v21)
        goto LABEL_39;
      return *(double *)&v17;
    }
LABEL_53:
    *(_QWORD *)&v17 = 0;
    a3[2] = 0u;
    a3[3] = 0u;
    *a3 = 0u;
    a3[1] = 0u;
    return *(double *)&v17;
  }
  (*(void (**)(CharacterOffset *__return_ptr, WebCore::AccessibilityObject *, _QWORD))(*(_QWORD *)this
                                                                                                + 2104))(&v38, this, LODWORD(a2->location));
  WebCore::AXTextMarker::AXTextMarker((WebCore::AXTextMarker *)v31, (VisiblePosition *)&v38);
  (*(void (**)(VisiblePosition *__return_ptr, WebCore::AccessibilityObject *, _QWORD))(*(_QWORD *)this
                                                                                                + 2104))(&v35, this, (LODWORD(a2->length) + LODWORD(a2->location)));
  WebCore::AXTextMarker::AXTextMarker((WebCore::AXTextMarker *)&v36, &v35);
  a3[2] = 0u;
  a3[3] = 0u;
  *a3 = 0u;
  a3[1] = 0u;
  if (v31[0] == (WTF::StringImpl *)v36.var0.var0)
  {
    if (v33 < v37 || v33 <= v37)
    {
LABEL_30:
      v23 = (__int128 *)&v36;
      v24 = v31;
      goto LABEL_35;
    }
  }
  else
  {
    v39 = -127;
    v25 = (_QWORD *)WTF::fastMalloc((WTF *)0x20);
    *v25 = off_1E3370C78;
    v25[1] = v31;
    v25[2] = &v36;
    v25[3] = &v39;
    v40 = v25;
    WTF::callOnMainThreadAndWait();
    v26 = v40;
    v40 = 0;
    if (v26)
      (*(void (**)(_QWORD *))(*v26 + 8))(v26);
    if (v39 <= 0)
      goto LABEL_30;
  }
  v23 = (__int128 *)v31;
  v24 = &v36;
LABEL_35:
  v27 = v24[1];
  *a3 = *v24;
  a3[1] = v27;
  v17 = *v23;
  v28 = v23[1];
  a3[2] = *v23;
  a3[3] = v28;
  v29 = v35.var0.var0.var0;
  v35.var0.var0.var0 = 0;
  if (v29)
  {
    if (*((_DWORD *)v29 + 6) == 2)
    {
      if ((*((_WORD *)v29 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v29, v22);
    }
    else
    {
      *((_DWORD *)v29 + 6) -= 2;
    }
  }
  v21 = v38.var0.var0;
  v38.var0.var0 = 0;
  if (v21)
  {
LABEL_39:
    if (*((_DWORD *)v21 + 6) == 2)
    {
      if ((*((_WORD *)v21 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v21, v22);
    }
    else
    {
      *((_DWORD *)v21 + 6) -= 2;
    }
  }
  return *(double *)&v17;
}

void sub_19492F758(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, WebCore::Node *a18)
{
  uint64_t v18;
  uint64_t v20;

  v20 = *(_QWORD *)(v18 - 88);
  *(_QWORD *)(v18 - 88) = 0;
  if (v20)
  {
    if (*(_DWORD *)(v20 + 24) == 2)
    {
      if ((*(_WORD *)(v20 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v20, a2);
    }
    else
    {
      *(_DWORD *)(v20 + 24) -= 2;
    }
  }
  _Unwind_Resume(exception_object);
}

void WebCore::AccessibilityObject::contentForRange(uint64_t a1@<X0>, _DWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  id v6;
  void *v7;
  uint64_t v8;
  WebCore::Node *v9;
  uint64_t v10;
  unsigned int i;
  uint64_t v12;
  WebCore::Node *v13;
  int v14;
  int v15;
  int v16;
  WebCore::Node *v17;
  uint64_t v18;
  unsigned int j;
  uint64_t v20;
  WebCore::Node *v21;
  __int32 v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  WebCore::Node *v26;
  int v27;
  int v28;
  WebCore::Node *v29;
  uint64_t v30;
  unsigned int k;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  WebCore::AXObjectCache *v36;
  uint64_t v37;
  void *v38;
  WebCore::Node *v39;
  int v40;
  int v41;
  WebCore::Node *v42;
  uint64_t v43;
  uint64_t v44;
  WebCore::Node *v45;
  uint64_t v46;
  unsigned int m;
  uint64_t v48;
  WebCore::Node *v49;
  int v50;
  int v51;
  WebCore::Node *v52;
  WebCore::Node *v53;
  __int32 v54;
  char v55;
  int32x2_t v56[12];
  WebCore::Node *v57;
  WebCore::Node *v58;
  int32x2_t v59;
  uint64_t v60;
  uint64_t v61;

  v6 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  WebCore::TextIterator::TextIterator((uint64_t)v56, a2, 0);
  v8 = MEMORY[0x1E0C9AAB0];
  while (v57)
  {
    v9 = v58;
    if (v58)
    {
      v10 = *((_QWORD *)v58 + 6);
      for (i = 0; ; ++i)
      {
        v12 = v10 & 0xFFFFFFFFFFFFLL;
        if (!v12)
          break;
        v10 = *(_QWORD *)(v12 + 48);
      }
      v59 = vadd_s32(v59, vdup_n_s32(i));
      v58 = 0;
      if (*((_DWORD *)v9 + 6) == 2)
      {
        if ((*((_WORD *)v9 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(v9, v7);
      }
      else
      {
        *((_DWORD *)v9 + 6) -= 2;
      }
    }
    v13 = v57;
    v14 = *((_DWORD *)v57 + 6);
    *((_DWORD *)v57 + 6) = v14 + 4;
    v15 = v14 + 2;
    if (v15)
    {
      *((_DWORD *)v13 + 6) = v15;
    }
    else
    {
      if ((*((_WORD *)v13 + 15) & 0x400) != 0)
        goto LABEL_64;
      WebCore::Node::removedLastRef(v13, v7);
      v15 = *((_DWORD *)v13 + 6);
    }
    v16 = v15 - 2;
    if (v16)
    {
      *((_DWORD *)v13 + 6) = v16;
      goto LABEL_13;
    }
LABEL_64:
    if ((*((_WORD *)v13 + 15) & 0x400) == 0)
      WebCore::Node::removedLastRef(v13, v7);
LABEL_13:
    if ((_DWORD)v61)
    {
      v17 = v58;
      if (v58)
      {
        v18 = *((_QWORD *)v58 + 6);
        for (j = 0; ; ++j)
        {
          v20 = v18 & 0xFFFFFFFFFFFFLL;
          if (!v20)
            break;
          v18 = *(_QWORD *)(v20 + 48);
        }
        v59 = vadd_s32(v59, vdup_n_s32(j));
        v58 = 0;
        if (*((_DWORD *)v17 + 6) == 2)
        {
          if ((*((_WORD *)v17 + 15) & 0x400) == 0)
            WebCore::Node::removedLastRef(v17, v7);
        }
        else
        {
          *((_DWORD *)v17 + 6) -= 2;
        }
      }
      v21 = v57;
      v22 = v59.i32[0];
      *((_DWORD *)v57 + 6) += 6;
      v53 = v21;
      v54 = v22;
      v55 &= 0xF0u;
      v24 = WebCore::AccessibilityObject::listMarkerTextForNodeAndPosition((uint64_t)v13, (WebCore::VisiblePosition *)&v53);
      v25 = (uint64_t)v23;
      v26 = v53;
      v53 = 0;
      if (v26)
      {
        if (*((_DWORD *)v26 + 6) == 2)
        {
          if ((*((_WORD *)v26 + 15) & 0x400) == 0)
            WebCore::Node::removedLastRef(v26, v23);
        }
        else
        {
          *((_DWORD *)v26 + 6) -= 2;
        }
      }
      v27 = *((_DWORD *)v21 + 6) - 2;
      if (*((_DWORD *)v21 + 6) != 2)
      {
        *((_DWORD *)v21 + 6) = v27;
        goto LABEL_25;
      }
      if ((*((_WORD *)v21 + 15) & 0x400) != 0)
        goto LABEL_70;
      WebCore::Node::removedLastRef(v21, v23);
      v27 = *((_DWORD *)v21 + 6);
LABEL_25:
      v28 = v27 - 2;
      if (!v28)
      {
LABEL_70:
        if ((*((_WORD *)v21 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(v21, v23);
      }
      else
      {
        *((_DWORD *)v21 + 6) = v28;
      }
      if ((_DWORD)v25)
      {
        v29 = v58;
        if (v58)
        {
          v30 = *((_QWORD *)v58 + 6);
          for (k = 0; ; ++k)
          {
            v32 = v30 & 0xFFFFFFFFFFFFLL;
            if (!v32)
              break;
            v30 = *(_QWORD *)(v32 + 48);
          }
          v59 = vadd_s32(v59, vdup_n_s32(k));
          v58 = 0;
          if (*((_DWORD *)v29 + 6) == 2)
          {
            if ((*((_WORD *)v29 + 15) & 0x400) == 0)
              WebCore::Node::removedLastRef(v29, v23);
          }
          else
          {
            *((_DWORD *)v29 + 6) -= 2;
          }
        }
        v39 = v57;
        *((_DWORD *)v57 + 6) += 4;
        WebCore::attributedStringCreate((unint64_t)&v53, *((_QWORD *)v13 + 8), v24, v25);
        v40 = *((_DWORD *)v39 + 6) - 2;
        if (*((_DWORD *)v39 + 6) != 2)
        {
          *((_DWORD *)v39 + 6) = v40;
          goto LABEL_45;
        }
        if ((*((_WORD *)v39 + 15) & 0x400) != 0)
          goto LABEL_82;
        WebCore::Node::removedLastRef(v39, v23);
        v40 = *((_DWORD *)v39 + 6);
LABEL_45:
        v41 = v40 - 2;
        if (!v41)
        {
LABEL_82:
          if ((*((_WORD *)v39 + 15) & 0x400) == 0)
            WebCore::Node::removedLastRef(v39, v23);
        }
        else
        {
          *((_DWORD *)v39 + 6) = v41;
        }
        v42 = v53;
        if (v53)
        {
          objc_msgSend(v6, "addObject:", v53);
          CFRelease(v42);
        }
      }
      v44 = v60;
      v43 = v61;
      v45 = v58;
      if (v58)
      {
        v46 = *((_QWORD *)v58 + 6);
        for (m = 0; ; ++m)
        {
          v48 = v46 & 0xFFFFFFFFFFFFLL;
          if (!v48)
            break;
          v46 = *(_QWORD *)(v48 + 48);
        }
        v59 = vadd_s32(v59, vdup_n_s32(m));
        v58 = 0;
        if (*((_DWORD *)v45 + 6) == 2)
        {
          if ((*((_WORD *)v45 + 15) & 0x400) == 0)
            WebCore::Node::removedLastRef(v45, v23);
        }
        else
        {
          *((_DWORD *)v45 + 6) -= 2;
        }
      }
      v49 = v57;
      *((_DWORD *)v57 + 6) += 4;
      WebCore::attributedStringCreate((unint64_t)&v53, *((_QWORD *)v13 + 8), v44, v43);
      v50 = *((_DWORD *)v49 + 6) - 2;
      if (*((_DWORD *)v49 + 6) != 2)
      {
        *((_DWORD *)v49 + 6) = v50;
        goto LABEL_57;
      }
      if ((*((_WORD *)v49 + 15) & 0x400) != 0)
        goto LABEL_74;
      WebCore::Node::removedLastRef(v49, v34);
      v50 = *((_DWORD *)v49 + 6);
LABEL_57:
      v51 = v50 - 2;
      if (!v51)
      {
LABEL_74:
        if ((*((_WORD *)v49 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(v49, v34);
      }
      else
      {
        *((_DWORD *)v49 + 6) = v51;
      }
      v52 = v53;
      if (v53)
      {
        objc_msgSend(v6, "addObject:", v53);
        CFRelease(v52);
      }
      goto LABEL_61;
    }
    v33 = WebCore::TextIterator::node(v56);
    if (v33)
    {
      v35 = v33;
      *(_DWORD *)(v33 + 24) += 2;
      v36 = (WebCore::AXObjectCache *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 1488))(a1);
      if (v36)
      {
        v34 = (void *)(*(_QWORD *)(v35 + 64) & 0xFFFFFFFFFFFFLL);
        if (v34)
        {
          v37 = WebCore::AXObjectCache::getOrCreate(v36, (WebCore::RenderObject *)v34);
          if (v37)
          {
            v38 = *(void **)(v37 + 24);
            if (v38)
            {
              if ((objc_msgSend(v6, "containsObject:", v38) & 1) == 0)
              {
                objc_msgSend(v38, "setValue:forKey:", v8, CFSTR("isAccessibilityElement"));
                objc_msgSend(v6, "addObject:", v38);
              }
            }
          }
        }
      }
      if (*(_DWORD *)(v35 + 24) == 2)
      {
        if ((*(_WORD *)(v35 + 30) & 0x400) == 0)
          WebCore::Node::removedLastRef((WebCore::Node *)v35, v34);
      }
      else
      {
        *(_DWORD *)(v35 + 24) -= 2;
      }
    }
LABEL_61:
    WebCore::TextIterator::advance((WebCore::TextIterator *)v56, (WTF::StringImpl *)v34);
  }
  WebCore::TextIterator::~TextIterator((WebCore::TextIterator *)v56, v7);
  *a3 = v6;
}

void sub_19492FC98(_Unwind_Exception *a1, void *a2, uint64_t a3, uint64_t a4, ...)
{
  const void *v4;
  uint64_t v5;
  va_list va;

  va_start(va, a4);
  if (*(_DWORD *)(v5 + 24) == 2)
  {
    if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
      WebCore::Node::removedLastRef((WebCore::Node *)v5, a2);
  }
  else
  {
    *(_DWORD *)(v5 + 24) -= 2;
  }
  WebCore::TextIterator::~TextIterator((WebCore::TextIterator *)va, a2);
  if (v4)
    CFRelease(v4);
  _Unwind_Resume(a1);
}

unint64_t WebCore::attributedStringCreate(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  id v6;
  void *v7;
  CFTypeRef v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  const __CTFont *v12;
  unint64_t v13;
  BOOL v14;
  id v15;
  CFStringRef v16;
  void *v17;
  CGFloat Size;
  void *v19;
  CFStringRef v20;
  char SymbolicTraits;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  WebCore::AXObjectCache *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  WebCore::AXObjectCache *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  int v49;
  WTF::StringImpl *v50;
  __CFString *v51;
  WTF::StringImpl *v52;
  void *v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  int v60;
  uint64_t v61;
  unsigned __int8 v62;
  WebCore::AXObjectCache *v63;
  void *v64;
  _QWORD *v65;
  uint64_t v66;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  __CFString *v73;
  uint64_t v74;
  const __CFString *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  __CFString *v80;
  uint64_t v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v96;
  BOOL v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v108;
  BOOL v109;
  WebCore::AXObjectCache *v110;
  WebCore::AXObjectCache *v111;
  WebCore::AXObjectCache *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  WebCore::AXObjectCache *v127;
  CFTypeRef cf;

  v4 = (_QWORD *)result;
  v125 = a3;
  v126 = a4;
  v5 = a2 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0xFFFFFFFFFFFFLL) == 0)
  {
    *(_QWORD *)result = 0;
    return result;
  }
  ++*(_DWORD *)((a2 & 0xFFFFFFFFFFFFLL) + 0x10);
  v6 = objc_alloc(MEMORY[0x1E0CB3778]);
  WTF::StringView::createNSStringWithoutCopying((WTF::StringView *)&v125);
  v7 = (void *)objc_msgSend(v6, "initWithString:", cf, v125, v126);
  v8 = cf;
  cf = 0;
  if (v8)
    CFRelease(v8);
  v10 = objc_msgSend(v7, "length");
  v11 = v5;
  if ((*(_BYTE *)(v5 + 45) & 2) != 0)
    v11 = *(_QWORD *)(*(_QWORD *)(v5 + 32) + 8);
  v12 = *(const __CTFont **)(WebCore::FontCascade::primaryFont((WebCore::FontCascade *)(*(_QWORD *)(v11 + 112) + 32), v9)+ 88);
  v13 = objc_msgSend(v7, "length");
  if (v12)
    v14 = v10 > v13;
  else
    v14 = 1;
  if (!v14)
  {
    v15 = objc_alloc_init(MEMORY[0x1E0C99E08]);
    v16 = CTFontCopyFamilyName(v12);
    v17 = (void *)MEMORY[0x1E0CB37E8];
    Size = CTFontGetSize(v12);
    *(float *)&Size = Size;
    v19 = (void *)objc_msgSend(v17, "numberWithFloat:", Size);
    v20 = CTFontCopyFullName(v12);
    if (v20)
      objc_msgSend(v15, "setValue:forKey:", v20, _MergedGlobals_212());
    if (v16)
      objc_msgSend(v15, "setValue:forKey:", v16, off_1EE2DE250());
    if (objc_msgSend(v19, "BOOLValue"))
      objc_msgSend(v15, "setValue:forKey:", v19, off_1EE2DE258());
    SymbolicTraits = CTFontGetSymbolicTraits(v12);
    if ((SymbolicTraits & 2) != 0)
      objc_msgSend(v15, "setValue:forKey:", MEMORY[0x1E0C9AAB0], off_1EE2DE260());
    if ((SymbolicTraits & 1) != 0)
      objc_msgSend(v15, "setValue:forKey:", MEMORY[0x1E0C9AAB0], off_1EE2DE268());
    objc_msgSend(v7, "addAttributes:range:", v15, 0, v10);
    if (v20)
      CFRelease(v20);
    if (v16)
      CFRelease(v16);
    if (v15)
      CFRelease(v15);
  }
  if ((*(_BYTE *)(v11 + 121) & 0x80) != 0)
  {
    v22 = off_1EE2DE270();
    if (v10 <= objc_msgSend(v7, "length"))
      objc_msgSend(v7, "addAttribute:value:range:", v22, MEMORY[0x1E0C9AAB0], 0, v10);
  }
  v23 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 24) + 8) + 40) + 8);
  v24 = atomic_load(WebCore::AXObjectCache::gAccessibilityEnabled);
  if ((v24 & 1) != 0)
  {
    if (*(_BYTE *)(v23 + 3362) || *(_BYTE *)(v23 + 3405))
    {
      while (1)
      {
        v113 = *(_QWORD *)(v23 + 528);
        if (!v113)
          break;
        v114 = *(_QWORD *)(v113 + 8);
        if (!v114)
          break;
        v115 = *(_QWORD *)(v114 + 120);
        if (!v115)
          break;
        v116 = *(_QWORD *)(v115 + 8);
        if (!v116)
          break;
        v23 = *(_QWORD *)(*(_QWORD *)(v116 + 40) + 8);
      }
    }
    else
    {
      v92 = *(_QWORD *)(v23 + 528);
      if (v92)
      {
        v93 = *(_QWORD *)(v92 + 8);
        if (v93)
        {
          v94 = *(_QWORD *)(*(_QWORD *)(v93 + 128) + 8);
          if (v94 && *(_BYTE *)(v94 + 144) == 0)
          {
            v96 = *(_QWORD *)(v94 + 296);
            if (v96)
              v23 = v96;
          }
        }
      }
    }
    *(_DWORD *)(v23 + 24) += 2;
    cf = (CFTypeRef)v23;
    if (*(_QWORD *)(v23 + 1944))
      v97 = *(_BYTE *)(v23 + 3405) == 0;
    else
      v97 = 0;
    if (v97)
    {
      v25 = *(WebCore::AXObjectCache **)(v23 + 1488);
      if (!v25)
      {
        v110 = (WebCore::AXObjectCache *)WTF::fastMalloc((WTF *)0x318);
        v127 = WebCore::AXObjectCache::AXObjectCache(v110, (WebCore::Document *)v23);
        std::unique_ptr<WebCore::AXObjectCache>::operator=[abi:sn180100]((WebCore::AXObjectCache **)(v23 + 1488), &v127);
        std::unique_ptr<WebCore::AXObjectCache>::~unique_ptr[abi:sn180100](&v127);
        WebCore::Document::hasEverCreatedAnAXObjectCache = 1;
        v25 = *(WebCore::AXObjectCache **)(v23 + 1488);
      }
    }
    else
    {
      v25 = 0;
    }
    WTF::Ref<WebCore::Document,WTF::RawPtrTraits<WebCore::Document>,WTF::DefaultRefDerefTraits<WebCore::Document>>::~Ref((uint64_t *)&cf);
  }
  else
  {
    v25 = 0;
  }
  v26 = WebCore::AXObjectCache::getOrCreate(v25, (WebCore::RenderObject *)v5);
  v27 = v26;
  if (!v26)
    goto LABEL_41;
  v28 = *(_QWORD *)(v26 + 8);
  if (__ldaxr((unsigned __int8 *)v28))
  {
    __clrex();
LABEL_35:
    MEMORY[0x19AEA534C](v28);
    goto LABEL_36;
  }
  if (__stxr(1u, (unsigned __int8 *)v28))
    goto LABEL_35;
LABEL_36:
  ++*(_QWORD *)(v28 + 8);
  v30 = __ldxr((unsigned __int8 *)v28);
  if (v30 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v28))
      goto LABEL_41;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v28);
LABEL_41:
  v31 = v27;
  while ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v31 + 1456))(v31) != 15)
  {
    v31 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v31 + 1232))(v31);
    if (!v31)
      goto LABEL_46;
  }
  objc_msgSend(v7, "addAttribute:value:range:", CFSTR("UIAccessibilityTextAttributeContext"), CFSTR("UIAccessibilityTextualContextSourceCode"), 0, v10);
LABEL_46:
  if (v27)
  {
    v33 = *(_QWORD *)(v27 + 8);
    if (__ldaxr((unsigned __int8 *)v33))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v33))
    {
      goto LABEL_51;
    }
    MEMORY[0x19AEA534C](v33);
LABEL_51:
    v35 = *(_QWORD *)(v33 + 8);
    v36 = v35 - 1;
    *(_QWORD *)(v33 + 8) = v35 - 1;
    if (v35 == 1)
    {
      v90 = *(_QWORD *)(v33 + 16);
      v37 = *(_QWORD *)(v33 + 24);
      *(_QWORD *)(v33 + 24) = 0;
      v38 = v90 != 0;
    }
    else
    {
      v37 = 0;
      v38 = 1;
    }
    v39 = __ldxr((unsigned __int8 *)v33);
    if (v39 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v33))
      {
        if (v36)
          goto LABEL_63;
LABEL_59:
        if (v37)
          (*(void (**)(uint64_t))(*(_QWORD *)v37 + 8))(v37);
        if (!v38)
          WTF::fastFree((WTF *)v33, v32);
        goto LABEL_63;
      }
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v33);
    if (v36)
      goto LABEL_63;
    goto LABEL_59;
  }
  if ((*(_BYTE *)(v5 + 45) & 1) != 0)
    goto LABEL_71;
  v40 = *(_QWORD *)(*(_QWORD *)(v5 + 24) + 8);
  if (!v40)
    goto LABEL_71;
LABEL_63:
  v41 = 0;
  do
  {
    if ((*(_WORD *)(v40 + 28) & 0x10) != 0)
      v41 = v41
          + (*(_QWORD *)(*(_QWORD *)(v40 + 96) + 24) == *(_QWORD *)(WebCore::HTMLNames::blockquoteTag + 24));
    v40 = *(_QWORD *)(v40 + 32);
  }
  while (v40);
  if ((_DWORD)v41)
    objc_msgSend(v7, "addAttribute:value:range:", off_1EE2DE278(), objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", v41), 0, v10);
  else
LABEL_71:
    objc_msgSend(v7, "removeAttribute:range:", off_1EE2DE278(), 0, v10);
  v42 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 24) + 8) + 40) + 8);
  v43 = atomic_load(WebCore::AXObjectCache::gAccessibilityEnabled);
  if ((v43 & 1) != 0)
  {
    if (*(_BYTE *)(v42 + 3362) || *(_BYTE *)(v42 + 3405))
    {
      while (1)
      {
        v117 = *(_QWORD *)(v42 + 528);
        if (!v117)
          break;
        v118 = *(_QWORD *)(v117 + 8);
        if (!v118)
          break;
        v119 = *(_QWORD *)(v118 + 120);
        if (!v119)
          break;
        v120 = *(_QWORD *)(v119 + 8);
        if (!v120)
          break;
        v42 = *(_QWORD *)(*(_QWORD *)(v120 + 40) + 8);
      }
    }
    else
    {
      v98 = *(_QWORD *)(v42 + 528);
      if (v98)
      {
        v99 = *(_QWORD *)(v98 + 8);
        if (v99)
        {
          v100 = *(_QWORD *)(*(_QWORD *)(v99 + 128) + 8);
          if (v100 && *(_BYTE *)(v100 + 144) == 0)
          {
            v102 = *(_QWORD *)(v100 + 296);
            if (v102)
              v42 = v102;
          }
        }
      }
    }
    *(_DWORD *)(v42 + 24) += 2;
    cf = (CFTypeRef)v42;
    if (*(_QWORD *)(v42 + 1944))
      v103 = *(_BYTE *)(v42 + 3405) == 0;
    else
      v103 = 0;
    if (v103)
    {
      v44 = *(WebCore::AXObjectCache **)(v42 + 1488);
      if (!v44)
      {
        v111 = (WebCore::AXObjectCache *)WTF::fastMalloc((WTF *)0x318);
        v127 = WebCore::AXObjectCache::AXObjectCache(v111, (WebCore::Document *)v42);
        std::unique_ptr<WebCore::AXObjectCache>::operator=[abi:sn180100]((WebCore::AXObjectCache **)(v42 + 1488), &v127);
        std::unique_ptr<WebCore::AXObjectCache>::~unique_ptr[abi:sn180100](&v127);
        WebCore::Document::hasEverCreatedAnAXObjectCache = 1;
        v44 = *(WebCore::AXObjectCache **)(v42 + 1488);
      }
    }
    else
    {
      v44 = 0;
    }
    WTF::Ref<WebCore::Document,WTF::RawPtrTraits<WebCore::Document>,WTF::DefaultRefDerefTraits<WebCore::Document>>::~Ref((uint64_t *)&cf);
  }
  else
  {
    v44 = 0;
  }
  v45 = WebCore::AXObjectCache::getOrCreate(v44, (WebCore::RenderObject *)v5);
  v46 = (_QWORD *)v45;
  if (v45)
  {
    v47 = *(_QWORD *)(v45 + 8);
    if (__ldaxr((unsigned __int8 *)v47))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v47))
    {
      goto LABEL_79;
    }
    MEMORY[0x19AEA534C](v47);
LABEL_79:
    ++*(_QWORD *)(v47 + 8);
    v49 = __ldxr((unsigned __int8 *)v47);
    if (v49 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v47))
        goto LABEL_84;
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v47);
  }
LABEL_84:
  (*(void (**)(CFTypeRef *__return_ptr, _QWORD *))(*v46 + 1736))(&cf, v46);
  if (cf)
  {
    v51 = (__CFString *)WTF::StringImpl::operator NSString *();
    v52 = (WTF::StringImpl *)cf;
    cf = 0;
    if (v52)
    {
      if (*(_DWORD *)v52 == 2)
        WTF::StringImpl::destroy(v52, v50);
      else
        *(_DWORD *)v52 -= 2;
    }
  }
  else
  {
    v51 = &stru_1E3487BC0;
  }
  if (-[__CFString length](v51, "length"))
    objc_msgSend(v7, "addAttribute:value:range:", off_1EE2DE280(), v51, 0, v10);
  else
    objc_msgSend(v7, "removeAttribute:range:", off_1EE2DE280(), 0, v10);
  v54 = v46[1];
  if (__ldaxr((unsigned __int8 *)v54))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v54))
  {
    goto LABEL_95;
  }
  MEMORY[0x19AEA534C](v54);
LABEL_95:
  v56 = *(_QWORD *)(v54 + 8);
  v57 = v56 - 1;
  *(_QWORD *)(v54 + 8) = v56 - 1;
  if (v56 == 1)
  {
    v89 = *(_QWORD *)(v54 + 16);
    v58 = *(_QWORD *)(v54 + 24);
    *(_QWORD *)(v54 + 24) = 0;
    v59 = v89 != 0;
  }
  else
  {
    v58 = 0;
    v59 = 1;
  }
  v60 = __ldxr((unsigned __int8 *)v54);
  if (v60 != 1)
  {
    __clrex();
LABEL_102:
    WTF::Lock::unlockSlow((WTF::Lock *)v54);
    if (v57)
      goto LABEL_107;
    goto LABEL_103;
  }
  if (__stlxr(0, (unsigned __int8 *)v54))
    goto LABEL_102;
  if (v57)
    goto LABEL_107;
LABEL_103:
  if (v58)
    (*(void (**)(uint64_t))(*(_QWORD *)v58 + 8))(v58);
  if (!v59)
    WTF::fastFree((WTF *)v54, v53);
LABEL_107:
  v61 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 24) + 8) + 40) + 8);
  v62 = atomic_load(WebCore::AXObjectCache::gAccessibilityEnabled);
  if ((v62 & 1) != 0)
  {
    if (*(_BYTE *)(v61 + 3362) || *(_BYTE *)(v61 + 3405))
    {
      while (1)
      {
        v121 = *(_QWORD *)(v61 + 528);
        if (!v121)
          break;
        v122 = *(_QWORD *)(v121 + 8);
        if (!v122)
          break;
        v123 = *(_QWORD *)(v122 + 120);
        if (!v123)
          break;
        v124 = *(_QWORD *)(v123 + 8);
        if (!v124)
          break;
        v61 = *(_QWORD *)(*(_QWORD *)(v124 + 40) + 8);
      }
    }
    else
    {
      v104 = *(_QWORD *)(v61 + 528);
      if (v104)
      {
        v105 = *(_QWORD *)(v104 + 8);
        if (v105)
        {
          v106 = *(_QWORD *)(*(_QWORD *)(v105 + 128) + 8);
          if (v106 && *(_BYTE *)(v106 + 144) == 0)
          {
            v108 = *(_QWORD *)(v106 + 296);
            if (v108)
              v61 = v108;
          }
        }
      }
    }
    *(_DWORD *)(v61 + 24) += 2;
    cf = (CFTypeRef)v61;
    if (*(_QWORD *)(v61 + 1944))
      v109 = *(_BYTE *)(v61 + 3405) == 0;
    else
      v109 = 0;
    if (v109)
    {
      v63 = *(WebCore::AXObjectCache **)(v61 + 1488);
      if (!v63)
      {
        v112 = (WebCore::AXObjectCache *)WTF::fastMalloc((WTF *)0x318);
        v127 = WebCore::AXObjectCache::AXObjectCache(v112, (WebCore::Document *)v61);
        std::unique_ptr<WebCore::AXObjectCache>::operator=[abi:sn180100]((WebCore::AXObjectCache **)(v61 + 1488), &v127);
        std::unique_ptr<WebCore::AXObjectCache>::~unique_ptr[abi:sn180100](&v127);
        WebCore::Document::hasEverCreatedAnAXObjectCache = 1;
        v63 = *(WebCore::AXObjectCache **)(v61 + 1488);
      }
    }
    else
    {
      v63 = 0;
    }
    WTF::Ref<WebCore::Document,WTF::RawPtrTraits<WebCore::Document>,WTF::DefaultRefDerefTraits<WebCore::Document>>::~Ref((uint64_t *)&cf);
  }
  else
  {
    v63 = 0;
  }
  result = WebCore::AXObjectCache::getOrCreate(v63, (WebCore::RenderObject *)v5);
  if (!result)
    goto LABEL_151;
  v65 = (_QWORD *)result;
  v66 = *(_QWORD *)(result + 8);
  if (__ldaxr((unsigned __int8 *)v66))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v66))
  {
    goto LABEL_114;
  }
  result = MEMORY[0x19AEA534C](v66);
LABEL_114:
  ++*(_QWORD *)(v66 + 8);
  v68 = __ldxr((unsigned __int8 *)v66);
  if (v68 != 1)
  {
    __clrex();
    goto LABEL_118;
  }
  if (__stlxr(0, (unsigned __int8 *)v66))
LABEL_118:
    result = WTF::Lock::unlockSlow((WTF::Lock *)v66);
  v69 = v65[25];
  if (v69)
  {
    v70 = *(unsigned int *)(v69 + 4);
    if ((_DWORD)v70)
    {
      v71 = v65[26];
      result = objc_msgSend(v7, "length");
      if (result >= (v70 + v71))
      {
        v72 = (void *)objc_msgSend((id)objc_msgSend(v7, "string"), "substringWithRange:", v71, v70);
        v73 = v65[25] ? (__CFString *)WTF::StringImpl::operator NSString *() : &stru_1E3487BC0;
        result = objc_msgSend(v72, "isEqualToString:", v73);
        if ((_DWORD)result)
        {
          v74 = off_1EE2DE288();
          if (v65[25])
            v75 = (const __CFString *)WTF::StringImpl::operator NSString *();
          else
            v75 = &stru_1E3487BC0;
          result = objc_msgSend(v7, "addAttribute:value:range:", v74, v75, v71, v70);
        }
      }
    }
  }
  v76 = v65[23];
  if (v76)
  {
    v77 = *(unsigned int *)(v76 + 4);
    if ((_DWORD)v77)
    {
      v78 = v65[24];
      result = objc_msgSend(v7, "length");
      if (result >= (v77 + v78))
      {
        v79 = (void *)objc_msgSend((id)objc_msgSend(v7, "string"), "substringWithRange:", v78, v77);
        v80 = v65[23] ? (__CFString *)WTF::StringImpl::operator NSString *() : &stru_1E3487BC0;
        result = objc_msgSend(v79, "isEqualToString:", v80);
        if ((result & 1) != 0)
          result = objc_msgSend(v7, "addAttribute:value:range:", off_1EE2DE290(), objc_msgSend((id)objc_msgSend(v7, "string"), "substringWithRange:", v78, v77), v78, v77);
      }
    }
  }
  v81 = v65[1];
  if (__ldaxr((unsigned __int8 *)v81))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v81))
  {
    goto LABEL_139;
  }
  result = MEMORY[0x19AEA534C](v81);
LABEL_139:
  v83 = *(_QWORD *)(v81 + 8);
  v84 = v83 - 1;
  *(_QWORD *)(v81 + 8) = v83 - 1;
  if (v83 == 1)
  {
    v91 = *(_QWORD *)(v81 + 16);
    v85 = *(_QWORD *)(v81 + 24);
    *(_QWORD *)(v81 + 24) = 0;
    v86 = v91 != 0;
  }
  else
  {
    v85 = 0;
    v86 = 1;
  }
  v87 = __ldxr((unsigned __int8 *)v81);
  if (v87 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v81))
    {
      if (!v84)
        goto LABEL_147;
      goto LABEL_151;
    }
  }
  else
  {
    __clrex();
  }
  result = WTF::Lock::unlockSlow((WTF::Lock *)v81);
  if (!v84)
  {
LABEL_147:
    if (v85)
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v85 + 8))(v85);
    if (!v86)
      result = WTF::fastFree((WTF *)v81, v64);
  }
LABEL_151:
  *v4 = v7;
  v88 = *(_DWORD *)(v5 + 16);
  if (!v88)
  {
    __break(0xC471u);
    JUMPOUT(0x194930660);
  }
  *(_DWORD *)(v5 + 16) = v88 - 1;
  return result;
}

void sub_19493098C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, WTF::StringImpl *a12)
{
  uint64_t v12;
  const void *v13;
  const void *v14;
  const void *v15;
  int v17;

  if (v15)
    CFRelease(v15);
  if (v14)
    CFRelease(v14);
  if (v13)
    CFRelease(v13);
  v17 = *(_DWORD *)(v12 + 16);
  if (v17)
  {
    *(_DWORD *)(v12 + 16) = v17 - 1;
    _Unwind_Resume(exception_object);
  }
  __break(0xC471u);
}

void WebCore::AccessibilityObject::attributedStringForTextMarkerRange(uint64_t a1@<X0>, WebCore::AXTextMarkerRange *a2@<X1>, _QWORD *a3@<X8>)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  const void *v11;
  id v12;
  uint64_t v13;
  const void *v14;
  WebCore::Node *v15;
  WebCore::Node *v16;
  _QWORD *v17;
  WebCore::Node *v18[2];
  WebCore::Node *v19;
  char v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  id v25;
  __int16 v26;
  _BYTE v27[128];
  uint64_t UIAccessibilityTokenAttachment;
  _QWORD v29[3];

  v29[1] = *MEMORY[0x1E0C80C00];
  WebCore::AXTextMarkerRange::simpleRange(a2, a2, (uint64_t)v18);
  if (v20)
  {
    v5 = objc_alloc_init(MEMORY[0x1E0CB3778]);
    WebCore::AccessibilityObject::contentForRange(a1, v18, &v25);
    v17 = a3;
    v23 = 0u;
    v24 = 0u;
    v21 = 0u;
    v22 = 0u;
    v6 = v25;
    v8 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v21, v27, 16);
    if (v8)
    {
      v9 = *(_QWORD *)v22;
      do
      {
        for (i = 0; i != v8; ++i)
        {
          if (*(_QWORD *)v22 != v9)
            objc_enumerationMutation(v6);
          v11 = *(const void **)(*((_QWORD *)&v21 + 1) + 8 * i);
          if (v11)
            CFRetain(*(CFTypeRef *)(*((_QWORD *)&v21 + 1) + 8 * i));
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            v26 = -4;
            v12 = objc_alloc(MEMORY[0x1E0CB3778]);
            v13 = objc_msgSend(MEMORY[0x1E0CB3940], "stringWithCharacters:length:", &v26, 1);
            UIAccessibilityTokenAttachment = getUIAccessibilityTokenAttachment();
            v29[0] = v11;
            v14 = (const void *)objc_msgSend(v12, "initWithString:attributes:", v13, objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v29, &UIAccessibilityTokenAttachment, 1));
            objc_msgSend(v5, "appendAttributedString:", v14);
            if (v14)
              CFRelease(v14);
          }
          else
          {
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0)
              objc_msgSend(v5, "appendAttributedString:", v11);
          }
          if (v11)
            CFRelease(v11);
        }
        v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v21, v27, 16);
      }
      while (v8);
    }
    *v17 = v5;
    if (v6)
      CFRelease(v6);
    if (v20)
    {
      v15 = v19;
      v19 = 0;
      if (v15)
      {
        if (*((_DWORD *)v15 + 6) == 2)
        {
          if ((*((_WORD *)v15 + 15) & 0x400) == 0)
            WebCore::Node::removedLastRef(v15, v7);
        }
        else
        {
          *((_DWORD *)v15 + 6) -= 2;
        }
      }
      v16 = v18[0];
      v18[0] = 0;
      if (v16)
      {
        if (*((_DWORD *)v16 + 6) == 2)
        {
          if ((*((_WORD *)v16 + 15) & 0x400) == 0)
            WebCore::Node::removedLastRef(v16, v7);
        }
        else
        {
          *((_DWORD *)v16 + 6) -= 2;
        }
      }
    }
  }
  else
  {
    *a3 = 0;
  }
}

void sub_194930DC4(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WebCore::Node *a10, uint64_t a11, WebCore::Node *a12, uint64_t a13, char a14)
{
  const void *v14;
  const void *v15;

  if (v15)
  {
    CFRelease(v15);
    if (!v14)
    {
LABEL_4:
      if (a14)
      {
        if (a12)
        {
          if (*((_DWORD *)a12 + 6) == 2)
          {
            if ((*((_WORD *)a12 + 15) & 0x400) == 0)
              WebCore::Node::removedLastRef(a12, a2);
          }
          else
          {
            *((_DWORD *)a12 + 6) -= 2;
          }
        }
        if (a10)
        {
          if (*((_DWORD *)a10 + 6) == 2)
          {
            if ((*((_WORD *)a10 + 15) & 0x400) == 0)
              WebCore::Node::removedLastRef(a10, a2);
          }
          else
          {
            *((_DWORD *)a10 + 6) -= 2;
          }
        }
      }
      _Unwind_Resume(exception_object);
    }
  }
  else if (!v14)
  {
    goto LABEL_4;
  }
  CFRelease(v14);
  goto LABEL_4;
}

void WebCore::AXObjectCache::attachWrapper(WebCore::AXObjectCache *this, WebCore::AccessibilityObject *a2)
{
  WebAccessibilityObjectWrapper *v3;
  WebAccessibilityObjectWrapper *v4;
  const void *v5;

  v3 = -[WebAccessibilityObjectWrapper initWithAccessibilityObject:]([WebAccessibilityObjectWrapper alloc], "initWithAccessibilityObject:", a2);
  v4 = v3;
  if (v3)
    CFRetain(v3);
  v5 = (const void *)*((_QWORD *)a2 + 3);
  *((_QWORD *)a2 + 3) = v4;
  if (v5)
    CFRelease(v5);
  if (v4)
    CFRelease(v4);
}

void sub_194930F0C(_Unwind_Exception *a1)
{
  const void *v1;

  CFRelease(v1);
  _Unwind_Resume(a1);
}

void WebCore::AXObjectCache::postPlatformNotification(uint64_t a1, uint64_t a2, int a3)
{
  int64x2_t v4;
  const char *v5;
  CFTypeRef cf;
  int64x2_t v7;

  if (a3 > 50)
  {
    if (a3 > 74)
    {
      switch(a3)
      {
        case 'K':
          v4 = vdupq_n_s64(0x12uLL);
          v5 = "AXExpandedChanged";
          break;
        case 'L':
          v4 = vdupq_n_s64(0x17uLL);
          v5 = "AXInvalidStatusChanged";
          break;
        case 'R':
          v4 = vdupq_n_s64(0x17uLL);
          v5 = "AXSortDirectionChanged";
          break;
        default:
          return;
      }
      goto LABEL_32;
    }
    if ((a3 - 60) >= 2)
    {
      if (a3 == 51)
      {
        v4 = vdupq_n_s64(0x16uLL);
        v5 = "AXSelectedTextChanged";
        goto LABEL_32;
      }
      if (a3 != 57)
        return;
      goto LABEL_27;
    }
    v4 = vdupq_n_s64(0x14uLL);
    v5 = "AXLiveRegionChanged";
  }
  else
  {
    v4 = vdupq_n_s64(0xFuLL);
    v4.i64[0] = (uint64_t)"AXFocusChanged";
    if (a3 <= 23)
    {
      if (a3 <= 9)
      {
        if (a3 == 1)
          goto LABEL_33;
        if (a3 != 2)
          return;
        v4 = vdupq_n_s64(0x18uLL);
        v5 = "AXAnnouncementRequested";
        goto LABEL_32;
      }
      if (a3 != 10)
      {
        if (a3 != 17)
          return;
        v4 = vdupq_n_s64(0x16uLL);
        v5 = "AXCurrentStateChanged";
        goto LABEL_32;
      }
LABEL_27:
      v4 = vdupq_n_s64(0xFuLL);
      v5 = "AXValueChanged";
      goto LABEL_32;
    }
    if (a3 > 38)
    {
      if (a3 == 39)
      {
        v4 = vdupq_n_s64(0xFuLL);
        v5 = "AXPageScrolled";
      }
      else
      {
        if (a3 != 49)
          return;
        v4 = vdupq_n_s64(0x17uLL);
        v5 = "AXSelectedCellsChanged";
      }
    }
    else
    {
      if (a3 == 24)
        goto LABEL_33;
      if (a3 != 29)
        return;
      v4 = vdupq_n_s64(0x16uLL);
      v5 = "AXImageOverlayChanged";
    }
  }
LABEL_32:
  v4.i64[0] = (uint64_t)v5;
LABEL_33:
  v7 = v4;
  WTF::ASCIILiteral::createNSString((WTF::ASCIILiteral *)&v7);
  objc_msgSend(*(id *)(a2 + 24), "accessibilityOverrideProcessNotification:", cf);
  objc_msgSend(*(id *)(a2 + 24), "accessibilityPostedNotification:", cf);
  if (cf)
    CFRelease(cf);
}

void sub_194931110(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, CFTypeRef cf)
{
  if (cf)
    CFRelease(cf);
  _Unwind_Resume(exception_object);
}

void WebCore::AXObjectCache::postPlatformAnnouncementNotification(WebCore::AXObjectCache *this, const WTF::String *a2)
{
  __CFString *v4;
  uint64_t v5;
  uint64_t v6;
  WebCore::Widget *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  int v21;
  CFTypeRef v22;
  uint64_t v23;
  _QWORD v24[2];
  CFTypeRef cf;
  CFTypeRef v26;
  _QWORD v27[2];

  v27[1] = *MEMORY[0x1E0C80C00];
  v24[0] = "AXAnnouncementRequested";
  v24[1] = 24;
  WTF::ASCIILiteral::createNSString((WTF::ASCIILiteral *)v24);
  if (*(_QWORD *)a2)
    v4 = (__CFString *)WTF::StringImpl::operator NSString *();
  else
    v4 = &stru_1E3487BC0;
  v5 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)this + 3) + 8) + 528);
  if (!v5)
    goto LABEL_32;
  v6 = *(_QWORD *)(v5 + 8);
  if (!v6)
    goto LABEL_32;
  v7 = *(WebCore::Widget **)(v6 + 288);
  if (!v7)
    goto LABEL_32;
  v8 = WebCore::AXObjectCache::getOrCreate(this, v7);
  if (!v8)
    goto LABEL_32;
  v9 = v8;
  v10 = *(_QWORD *)(v8 + 8);
  if (__ldaxr((unsigned __int8 *)v10))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v10))
  {
    goto LABEL_11;
  }
  MEMORY[0x19AEA534C](v10);
LABEL_11:
  ++*(_QWORD *)(v10 + 8);
  v12 = __ldxr((unsigned __int8 *)v10);
  if (v12 != 1)
  {
    __clrex();
    goto LABEL_15;
  }
  if (__stlxr(0, (unsigned __int8 *)v10))
LABEL_15:
    WTF::Lock::unlockSlow((WTF::Lock *)v10);
  objc_msgSend(*(id *)(v9 + 24), "accessibilityOverrideProcessNotification:notificationData:", cf, -[__CFString dataUsingEncoding:](v4, "dataUsingEncoding:", 4));
  v13 = *(void **)(v9 + 24);
  v26 = cf;
  v27[0] = v4;
  objc_msgSend(v13, "accessibilityPostedNotification:userInfo:", cf, objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v27, &v26, 1));
  v15 = *(_QWORD *)(v9 + 8);
  if (__ldaxr((unsigned __int8 *)v15))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v15))
  {
    goto LABEL_20;
  }
  MEMORY[0x19AEA534C](v15);
LABEL_20:
  v17 = *(_QWORD *)(v15 + 8);
  v18 = v17 - 1;
  *(_QWORD *)(v15 + 8) = v17 - 1;
  if (v17 == 1)
  {
    v23 = *(_QWORD *)(v15 + 16);
    v19 = *(_QWORD *)(v15 + 24);
    *(_QWORD *)(v15 + 24) = 0;
    v20 = v23 != 0;
  }
  else
  {
    v19 = 0;
    v20 = 1;
  }
  v21 = __ldxr((unsigned __int8 *)v15);
  if (v21 != 1)
  {
    __clrex();
LABEL_27:
    WTF::Lock::unlockSlow((WTF::Lock *)v15);
    if (v18)
      goto LABEL_32;
    goto LABEL_28;
  }
  if (__stlxr(0, (unsigned __int8 *)v15))
    goto LABEL_27;
  if (v18)
    goto LABEL_32;
LABEL_28:
  if (v19)
    (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
  if (!v20)
    WTF::fastFree((WTF *)v15, v14);
LABEL_32:
  v22 = cf;
  cf = 0;
  if (v22)
    CFRelease(v22);
}

void sub_194931360(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, CFTypeRef cf)
{
  if (cf)
    CFRelease(cf);
  _Unwind_Resume(exception_object);
}

uint64_t WebCore::AccessibilityObject::detachPlatformWrapper(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 24), "detach");
}

void *WebCore::AccessibilityObject::convertRectToPlatformSpace(id *a1, float *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  void *result;

  v6 = (*((uint64_t (**)(id *))*a1 + 215))(a1);
  if (!v6)
    return (void *)(*((uint64_t (**)(id *, float *, uint64_t))*a1 + 192))(a1, a2, a3);
  v7 = (void *)objc_msgSend(*(id *)(v6 + 40), "documentView");
  if (!v7)
    return (void *)(*((uint64_t (**)(id *, float *, uint64_t))*a1 + 192))(a1, a2, a3);
  objc_msgSend(v7, "convertRect:toView:", 0, *a2, a2[1], a2[2], a2[3]);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  result = (void *)objc_msgSend(a1[3], "_accessibilityWebDocumentView");
  if (result)
    return (void *)objc_msgSend(result, "convertRect:toView:", 0, v9, v11, v13, v15);
  return result;
}

void sub_194931544()
{
  objc_end_catch();
  JUMPOUT(0x19493154CLL);
}

uint64_t WebCore::AccessibilityObject::fileUploadButtonReturnsValueInTitle(WebCore::AccessibilityObject *this)
{
  return 0;
}

uint64_t WebCore::AccessibilityObject::accessibilitySecureFieldLength(WebCore::AccessibilityObject *this)
{
  uint64_t v2;
  uint64_t v3;
  WTF::StringImpl *v4;
  uint64_t v5;
  _DWORD *v6;
  unsigned int *v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  int v14;
  WTF::StringImpl *v16;

  v2 = (*(uint64_t (**)(WebCore::AccessibilityObject *))(*(_QWORD *)this + 848))(this);
  if (!v2)
    return 0;
  v3 = v2;
  ++*(_DWORD *)(v2 + 16);
  if (((*(uint64_t (**)(WebCore::AccessibilityObject *))(*(_QWORD *)this + 112))(this) & 1) == 0
    || (*(_BYTE *)(v3 + 45) & 1) != 0)
  {
    goto LABEL_24;
  }
  v5 = *(_QWORD *)(*(_QWORD *)(v3 + 24) + 8);
  if (v5)
  {
    if ((*(_WORD *)(v5 + 28) & 0x10) == 0
      || *(_QWORD *)(*(_QWORD *)(v5 + 96) + 24) != *(_QWORD *)(WebCore::HTMLNames::inputTag + 24))
    {
      goto LABEL_24;
    }
    v6 = *(_DWORD **)(v5 + 240);
    if (v6[3] == 64)
    {
      WebCore::FileInputType::firstElementPathForInputValue((uint64_t)v6, &v16);
LABEL_23:
      v7 = (unsigned int *)v16;
      if (!v16)
      {
LABEL_24:
        v5 = 0;
        goto LABEL_30;
      }
LABEL_28:
      v16 = 0;
      v5 = v7[1];
      if (*v7 == 2)
        WTF::StringImpl::destroy((WTF::StringImpl *)v7, v4);
      else
        *v7 -= 2;
      goto LABEL_30;
    }
    v7 = *(unsigned int **)(v5 + 216);
    if (v7)
    {
      *v7 += 2;
      goto LABEL_28;
    }
    v8 = *(_QWORD *)(v5 + 104);
    if (v8)
    {
      v9 = *(_DWORD *)(v8 + 4);
      if ((v9 & 1) != 0)
      {
        v10 = *(_QWORD *)(v8 + 40);
        LODWORD(v11) = *(_DWORD *)(v8 + 52);
        if ((_DWORD)v11)
        {
LABEL_12:
          v11 = v11;
          v12 = (_QWORD *)(v10 + 8);
          while (1)
          {
            v13 = *(v12 - 1);
            if (v13 == WebCore::HTMLNames::valueAttr
              || *(_QWORD *)(v13 + 24) == *(_QWORD *)(WebCore::HTMLNames::valueAttr + 24)
              && *(_QWORD *)(v13 + 32) == *(_QWORD *)(WebCore::HTMLNames::valueAttr + 32))
            {
              goto LABEL_21;
            }
            v12 += 2;
            if (!--v11)
            {
              v12 = (_QWORD *)MEMORY[0x1E0CBF2F8];
              goto LABEL_21;
            }
          }
        }
      }
      else
      {
        v10 = v8 + 32;
        LODWORD(v11) = v9 >> 5;
        if ((_DWORD)v11)
          goto LABEL_12;
      }
    }
    v12 = (_QWORD *)MEMORY[0x1E0CBF2F8];
LABEL_21:
    if (*v12)
    {
      (*(void (**)(WTF::StringImpl **__return_ptr))(*(_QWORD *)v6 + 296))(&v16);
      v7 = (unsigned int *)v16;
      if (v16)
        goto LABEL_28;
      v16 = 0;
      v6 = *(_DWORD **)(v5 + 240);
    }
    (*(void (**)(WTF::StringImpl **__return_ptr))(*(_QWORD *)v6 + 64))(&v16);
    goto LABEL_23;
  }
LABEL_30:
  v14 = *(_DWORD *)(v3 + 16);
  if (!v14)
  {
    __break(0xC471u);
    JUMPOUT(0x19493174CLL);
  }
  *(_DWORD *)(v3 + 16) = v14 - 1;
  return v5;
}

void sub_19493175C(_Unwind_Exception *a1)
{
  uint64_t v1;
  int v2;

  v2 = *(_DWORD *)(v1 + 16);
  if (v2)
  {
    *(_DWORD *)(v1 + 16) = v2 - 1;
    _Unwind_Resume(a1);
  }
  __break(0xC471u);
}

uint64_t WebCore::AccessibilityObject::hasTouchEventListener(WebCore::AccessibilityObject *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v2 || (v3 = *(_QWORD *)(v2 + 96)) == 0)
    v3 = WebCore::threadGlobalDataSlow(this);
  v4 = *(_QWORD *)(v3 + 40);
  if (!v4)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v3);
    v4 = *(_QWORD *)(v3 + 40);
  }
  result = (*(uint64_t (**)(WebCore::AccessibilityObject *))(*(_QWORD *)this + 840))(this);
  if (result)
  {
    v6 = result;
    do
    {
      v7 = *(_QWORD *)(v6 + 16);
      if ((v7 & 0x1000000000000) != 0)
      {
        v8 = v7 & 0xFFFFFFFFFFFFLL;
        v9 = *(unsigned int *)((v7 & 0xFFFFFFFFFFFFLL) + 0x1C);
        if ((_DWORD)v9)
        {
          v10 = *(_QWORD *)(v4 + 2552);
          if (v10)
          {
            v11 = *(_QWORD *)(v8 + 16);
            v12 = v11 + 32 * v9;
            v13 = *(_DWORD *)(v4 + 2560);
            v14 = v13 - 1;
            v15 = *(_DWORD *)(v4 + 2568);
            do
            {
              v16 = *(_DWORD *)(*(_QWORD *)v11 + 16);
              v17 = (v15 ^ (v16 >> 8)) & v14;
              v18 = *(_QWORD *)(v10 + 16 * v17);
              if (v18)
              {
                v19 = v16 >> 8;
                v20 = -1;
                do
                {
                  v21 = *(_DWORD *)(v18 + 16);
                  if (++v20 > (((_DWORD)v17 + v13 - ((v15 ^ (v21 >> 8)) & v14)) & v14))
                    break;
                  if (v18 == *(_QWORD *)v11 && v21 >> 8 == v19)
                  {
                    if ((*(_BYTE *)(v10 + 16 * v17 + 11) & 1) == 0)
                      break;
                    return 1;
                  }
                  v17 = ((_DWORD)v17 + 1) & v14;
                  v18 = *(_QWORD *)(v10 + 16 * v17);
                }
                while (v18);
              }
              v11 += 32;
            }
            while (v11 != v12);
          }
        }
      }
      v23 = (uint64_t *)(v6 + 32);
      v22 = *(_QWORD *)(v6 + 32);
      if (!v22
        || (*(_WORD *)(v22 + 28) & 8) == 0
        || (v24 = *(_QWORD *)(v22 + 72) & 0xFFFFFFFFFFFFLL) == 0
        || (v25 = *(_QWORD *)(v24 + 88)) == 0
        || (v26 = *(_QWORD *)(v25 + 224)) == 0
        || (result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v26 + 16))(v26, v6)) == 0)
      {
        if ((*(_WORD *)(v6 + 28) & 0x80) != 0)
        {
          v27 = *(_QWORD *)(v6 + 200);
          if (!v27)
            return 0;
          v23 = (uint64_t *)(v27 + 8);
        }
        result = *v23;
      }
      v6 = result;
    }
    while (result);
  }
  return result;
}

_QWORD *WebCore::AccessibilityObject::setLastPresentedTextPrediction(_QWORD *result, WebCore::Text *this, unsigned int a3, _DWORD **a4, uint64_t a5, int a6)
{
  _QWORD *v8;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  char v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  BOOL v21;
  uint64_t v22;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  unsigned int v30;
  int v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;

  v8 = result;
  if (a6)
  {
    v10 = *a4;
    if (*a4)
      *v10 += 2;
    result = (_QWORD *)result[23];
    v8[23] = v10;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (_QWORD *)WTF::StringImpl::destroy((WTF::StringImpl *)result, this);
      else
        *(_DWORD *)result -= 2;
    }
    v8[24] = a5;
  }
  if (a3 == 2)
  {
    v11 = v8[23];
    if (!v11 || !*(_DWORD *)(v11 + 4))
      return result;
    if ((*((_WORD *)this + 14) & 2) != 0)
    {
      WebCore::Text::wholeText(this, this, &v36);
      v13 = v36;
      if (v36)
      {
        v16 = *((_DWORD *)v36 + 1);
        if (!v16 || (v17 = v16 - 1, v16 == 1))
        {
          v12 = 0;
        }
        else
        {
          v18 = *((_DWORD *)v36 + 1);
          while (1)
          {
            if (v16 > v17)
            {
              v19 = *((_QWORD *)v36 + 1);
              v20 = (*((_BYTE *)v36 + 16) & 4) != 0
                  ? *(unsigned __int8 *)(v19 + v17)
                  : *(unsigned __int16 *)(v19 + 2 * v17);
              v21 = v20 > 0x20;
              v22 = (1 << v20) & 0x100003600;
              if (!v21 && v22 != 0)
                break;
            }
            --v18;
            if (!--v17)
            {
              v12 = 0;
              goto LABEL_40;
            }
          }
          WTF::StringImpl::substring(v36);
          v12 = v17 + 1;
          v25 = v36;
          v13 = v37;
          v36 = v37;
          if (v25)
          {
            if (*(_DWORD *)v25 == 2)
            {
              WTF::StringImpl::destroy(v25, v24);
              v13 = v36;
            }
            else
            {
              *(_DWORD *)v25 -= 2;
            }
          }
LABEL_40:
          if (!v13)
            goto LABEL_13;
        }
        v14 = 0;
        *(_DWORD *)v13 += 2;
LABEL_42:
        v26 = v8[23];
        if (v26)
          *(_DWORD *)v26 += 2;
        if ((v14 & 1) != 0)
        {
          v27 = 0;
          if (v26)
            goto LABEL_46;
        }
        else
        {
          v27 = *((_DWORD *)v13 + 1);
          if (v26)
          {
LABEL_46:
            v28 = *(_DWORD *)(v26 + 4);
LABEL_47:
            if ((v28 | v27) < 0)
              goto LABEL_81;
            v29 = (v27 + v28);
            if (__OFADD__(v27, v28))
              goto LABEL_81;
            if ((v14 & 1) != 0)
            {
              if (v26)
              {
LABEL_52:
                v31 = (*(unsigned __int8 *)(v26 + 16) >> 2) & 1;
                goto LABEL_53;
              }
              v31 = 1;
            }
            else
            {
              v30 = *((_DWORD *)v13 + 4);
              v31 = (v30 >> 2) & 1;
              if (v26 && (v30 & 4) != 0)
                goto LABEL_52;
            }
LABEL_53:
            WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::String,void>,WTF::StringTypeAdapter<WTF::String,void>>(v29, v31, (uint64_t)v13, v26, &v37);
            if (v37)
            {
              v33 = (WTF::StringImpl *)v8[25];
              v8[25] = v37;
              if (v33)
              {
                if (*(_DWORD *)v33 == 2)
                  WTF::StringImpl::destroy(v33, v32);
                else
                  *(_DWORD *)v33 -= 2;
              }
              v8[26] = v12;
              if (v26)
              {
                if (*(_DWORD *)v26 == 2)
                {
                  WTF::StringImpl::destroy((WTF::StringImpl *)v26, v32);
                  if ((v14 & 1) == 0)
                  {
LABEL_61:
                    if (*(_DWORD *)v13 == 2)
                      WTF::StringImpl::destroy(v13, v32);
                    else
                      *(_DWORD *)v13 -= 2;
                  }
LABEL_63:
                  v34 = MEMORY[0x1E0CBEF70];
                  *MEMORY[0x1E0CBEF70] += 2;
                  v35 = (WTF::StringImpl *)v8[23];
                  v8[23] = v34;
                  if (v35)
                  {
                    if (*(_DWORD *)v35 == 2)
                      WTF::StringImpl::destroy(v35, v32);
                    else
                      *(_DWORD *)v35 -= 2;
                  }
                  v8[24] = 0;
                  result = v36;
                  v36 = 0;
                  if (result)
                  {
                    if (*(_DWORD *)result == 2)
                      return (_QWORD *)WTF::StringImpl::destroy((WTF::StringImpl *)result, v32);
                    else
                      *(_DWORD *)result -= 2;
                  }
                  return result;
                }
                *(_DWORD *)v26 -= 2;
              }
              if ((v14 & 1) == 0)
                goto LABEL_61;
              goto LABEL_63;
            }
LABEL_81:
            __break(0xC471u);
            JUMPOUT(0x194931C68);
          }
        }
        v28 = 0;
        goto LABEL_47;
      }
      v12 = 0;
    }
    else
    {
      v12 = 0;
      v13 = 0;
      v36 = 0;
    }
LABEL_13:
    v14 = 1;
    goto LABEL_42;
  }
  if (a3 <= 1)
  {
    v15 = MEMORY[0x1E0CBEF70];
    *MEMORY[0x1E0CBEF70] += 2;
    result = (_QWORD *)v8[25];
    v8[25] = v15;
    if (result)
    {
      if (*(_DWORD *)result == 2)
        result = (_QWORD *)WTF::StringImpl::destroy((WTF::StringImpl *)result, this);
      else
        *(_DWORD *)result -= 2;
    }
    v8[26] = 0;
  }
  return result;
}

void sub_194931C74(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, WTF::StringImpl *a9)
{
  if (a9)
  {
    if (*(_DWORD *)a9 == 2)
      WTF::StringImpl::destroy(a9, a2);
    else
      *(_DWORD *)a9 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_1949322A4(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_1949325F8(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;
  char v3;
  char v5;
  WTF *v6;

  v5 = v3 ^ 1;
  if (!v2)
    v5 = 1;
  if ((v5 & 1) == 0)
  {
    v6 = *(WTF **)(v2 + 88);
    *(_QWORD *)(v2 + 88) = 0;
    if (v6)
    {
      if (*(_QWORD *)v6)
        WTF::fastFree((WTF *)(*(_QWORD *)v6 - 16), a2);
      WTF::fastFree(v6, a2);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_1949328CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, WTF *a9, int a10, int a11)
{
  const void *v11;

  if (v11)
    CFRelease(v11);
  _Unwind_Resume(exception_object);
}

void sub_194932C54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22)
{
  if (a22 != -1)
    ((void (*)(char *, uint64_t *))off_1E324B1F0[a22])(&a13, &a15);
  _Unwind_Resume(exception_object);
}

void sub_194933470(_Unwind_Exception *exception_object, WTF::StringImpl *a2)
{
  WTF::StringImpl *v2;

  if (*(_DWORD *)v2 == 2)
    WTF::StringImpl::destroy(v2, a2);
  else
    *(_DWORD *)v2 -= 2;
  _Unwind_Resume(exception_object);
}

void sub_194933560(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_1949337FC(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_1949339D8(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    WTF::fastFree((WTF *)(a11 - 16), a2);
  _Unwind_Resume(exception_object);
}

void sub_194933B7C(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    WTF::fastFree((WTF *)(a11 - 16), a2);
  _Unwind_Resume(exception_object);
}

void sub_194933D34(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;

  if (v11)
    WTF::fastFree((WTF *)(v11 - 16), a2);
  _Unwind_Resume(exception_object);
}

void sub_194933ED8(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    WTF::fastFree((WTF *)(a11 - 16), a2);
  _Unwind_Resume(exception_object);
}

void sub_194934124(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  uint64_t v9;

  if (v9)
    WTF::fastFree((WTF *)(v9 - 16), a2);
  _Unwind_Resume(exception_object);
}

void sub_1949342F4(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;

  if (v11)
    WTF::fastFree((WTF *)(v11 - 16), a2);
  _Unwind_Resume(exception_object);
}

void sub_194934514(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    WTF::fastFree((WTF *)(a11 - 16), a2);
  _Unwind_Resume(exception_object);
}

void sub_194934814(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_194935318(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  uint64_t v10;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int v18;
  uint64_t v19;

  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  v12 = *(_QWORD *)(v10 + 8);
  if (__ldaxr((unsigned __int8 *)v12))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v12))
  {
LABEL_10:
    v14 = *(_QWORD *)(v12 + 8);
    v15 = v14 - 1;
    *(_QWORD *)(v12 + 8) = v14 - 1;
    if (v14 == 1)
    {
      v19 = *(_QWORD *)(v12 + 16);
      v16 = *(_QWORD *)(v12 + 24);
      *(_QWORD *)(v12 + 24) = 0;
      v17 = v19 != 0;
    }
    else
    {
      v16 = 0;
      v17 = 1;
    }
    v18 = __ldxr((unsigned __int8 *)v12);
    if (v18 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v12))
      {
LABEL_17:
        if (!v15)
        {
          if (v16)
            (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
          if (!v17)
            WTF::fastFree((WTF *)v12, a2);
        }
        _Unwind_Resume(exception_object);
      }
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v12);
    goto LABEL_17;
  }
  MEMORY[0x19AEA534C](v12);
  goto LABEL_10;
}

void sub_194935608(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  int v10;
  uint64_t v11;

  v4 = *(_QWORD *)(v2 + 8);
  if (__ldaxr((unsigned __int8 *)v4))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v4))
  {
LABEL_6:
    v6 = *(_QWORD *)(v4 + 8);
    v7 = v6 - 1;
    *(_QWORD *)(v4 + 8) = v6 - 1;
    if (v6 == 1)
    {
      v11 = *(_QWORD *)(v4 + 16);
      v8 = *(_QWORD *)(v4 + 24);
      *(_QWORD *)(v4 + 24) = 0;
      v9 = v11 != 0;
    }
    else
    {
      v8 = 0;
      v9 = 1;
    }
    v10 = __ldxr((unsigned __int8 *)v4);
    if (v10 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v4))
      {
LABEL_13:
        if (!v7)
        {
          if (v8)
            (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
          if (!v9)
            WTF::fastFree((WTF *)v4, a2);
        }
        _Unwind_Resume(exception_object);
      }
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v4);
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v4);
  goto LABEL_6;
}

void sub_19493588C(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_194935950(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_194935A10(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_194935F80(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10, WTF::StringImpl *a11, WTF::StringImpl *a12)
{
  if (a12)
  {
    if (*(_DWORD *)a12 == 2)
      WTF::StringImpl::destroy(a12, a2);
    else
      *(_DWORD *)a12 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_1949363D8(_Unwind_Exception *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  void *v12;

  WTF::Vector<WTF::RefPtr<WebCore::AXCoreObject,WTF::RawPtrTraits<WebCore::AXCoreObject>,WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((uint64_t)&a9, a2);
  WTF::Vector<WTF::RefPtr<WebCore::AXCoreObject,WTF::RawPtrTraits<WebCore::AXCoreObject>,WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((uint64_t)&a11, v12);
  _Unwind_Resume(a1);
}

void sub_1949368A0(_Unwind_Exception *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  WTF::Vector<WTF::RefPtr<WebCore::AXCoreObject,WTF::RawPtrTraits<WebCore::AXCoreObject>,WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((uint64_t)&a9, a2);
  _Unwind_Resume(a1);
}

void sub_194936A30(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_194936AF0(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_194937050(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  uint64_t v10;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int v18;
  uint64_t v19;

  v12 = *(_QWORD *)(v10 + 8);
  if (__ldaxr((unsigned __int8 *)v12))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v12))
  {
LABEL_6:
    v14 = *(_QWORD *)(v12 + 8);
    v15 = v14 - 1;
    *(_QWORD *)(v12 + 8) = v14 - 1;
    if (v14 == 1)
    {
      v19 = *(_QWORD *)(v12 + 16);
      v16 = *(_QWORD *)(v12 + 24);
      *(_QWORD *)(v12 + 24) = 0;
      v17 = v19 != 0;
    }
    else
    {
      v16 = 0;
      v17 = 1;
    }
    v18 = __ldxr((unsigned __int8 *)v12);
    if (v18 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v12))
      {
LABEL_13:
        if (!v15)
        {
          if (v16)
            (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
          if (!v17)
            WTF::fastFree((WTF *)v12, a2);
        }
        _Unwind_Resume(exception_object);
      }
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v12);
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v12);
  goto LABEL_6;
}

void sub_1949374C8(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_194937580(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_194937788(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, CFTypeRef cf)
{
  if (cf)
    CFRelease(cf);
  _Unwind_Resume(exception_object);
}

void sub_1949378B0(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, CFTypeRef cf, WTF::StringImpl *a10)
{
  if (cf)
    CFRelease(cf);
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_194937F6C(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;
  char v3;
  char v5;
  WTF *v6;

  v5 = v3 ^ 1;
  if (!v2)
    v5 = 1;
  if ((v5 & 1) == 0)
  {
    v6 = *(WTF **)(v2 + 88);
    *(_QWORD *)(v2 + 88) = 0;
    if (v6)
    {
      if (*(_QWORD *)v6)
        WTF::fastFree((WTF *)(*(_QWORD *)v6 - 16), a2);
      WTF::fastFree(v6, a2);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_19493828C(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_194938378(_Unwind_Exception *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13)
{
  void *v14;

  WTF::Vector<WTF::RefPtr<WebCore::AXCoreObject,WTF::RawPtrTraits<WebCore::AXCoreObject>,WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((uint64_t)&a13, a2);
  if (a11)
    WTF::Vector<WTF::RefPtr<WebCore::AXCoreObject,WTF::RawPtrTraits<WebCore::AXCoreObject>,WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((uint64_t)&a9, v14);
  _Unwind_Resume(a1);
}

void sub_194938430(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_194938580(_Unwind_Exception *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  WTF::Vector<WTF::RefPtr<WebCore::AXCoreObject,WTF::RawPtrTraits<WebCore::AXCoreObject>,WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((uint64_t)&a9, a2);
  _Unwind_Resume(a1);
}

void sub_19493865C(_Unwind_Exception *a1, void *a2, uint64_t a3, ...)
{
  void *v4;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  WTF::Vector<WTF::RefPtr<WebCore::AXCoreObject,WTF::RawPtrTraits<WebCore::AXCoreObject>,WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((uint64_t)va1, a2);
  WTF::Vector<WTF::RefPtr<WebCore::AXCoreObject,WTF::RawPtrTraits<WebCore::AXCoreObject>,WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((uint64_t)va, v4);
  _Unwind_Resume(a1);
}

void sub_194938784(_Unwind_Exception *a1, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, WTF::StringImpl *a13)
{
  void *v14;

  WTF::Vector<WTF::RefPtr<WebCore::AXCoreObject,WTF::RawPtrTraits<WebCore::AXCoreObject>,WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((uint64_t)&a13, a2);
  WTF::Vector<WTF::RefPtr<WebCore::AXCoreObject,WTF::RawPtrTraits<WebCore::AXCoreObject>,WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((uint64_t)&a10, v14);
  _Unwind_Resume(a1);
}

void sub_1949388E0(_Unwind_Exception *a1, void *a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  WTF::Vector<WTF::RefPtr<WebCore::AXCoreObject,WTF::RawPtrTraits<WebCore::AXCoreObject>,WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((uint64_t)va, a2);
  _Unwind_Resume(a1);
}

void sub_194938B60(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  int v10;
  uint64_t v11;

  v4 = *(_QWORD *)(v2 + 8);
  if (__ldaxr((unsigned __int8 *)v4))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v4))
  {
LABEL_6:
    v6 = *(_QWORD *)(v4 + 8);
    v7 = v6 - 1;
    *(_QWORD *)(v4 + 8) = v6 - 1;
    if (v6 == 1)
    {
      v11 = *(_QWORD *)(v4 + 16);
      v8 = *(_QWORD *)(v4 + 24);
      *(_QWORD *)(v4 + 24) = 0;
      v9 = v11 != 0;
    }
    else
    {
      v8 = 0;
      v9 = 1;
    }
    v10 = __ldxr((unsigned __int8 *)v4);
    if (v10 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v4))
      {
LABEL_13:
        if (!v7)
        {
          if (v8)
            (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
          if (!v9)
            WTF::fastFree((WTF *)v4, a2);
        }
        _Unwind_Resume(exception_object);
      }
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v4);
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v4);
  goto LABEL_6;
}

void sub_19493943C(_Unwind_Exception *a1, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, WTF *a17, int a18, WTF::StringImpl *a19)
{
  uint64_t v19;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  WTF *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  int v30;
  uint64_t v31;

  WTF::Vector<WTF::RefPtr<WebCore::AXCoreObject,WTF::RawPtrTraits<WebCore::AXCoreObject>,WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((uint64_t)&a10, a2);
  v22 = a19;
  a19 = 0;
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v21);
    else
      *(_DWORD *)v22 -= 2;
  }
  v23 = a17;
  if (a17)
  {
    a17 = 0;
    a18 = 0;
    WTF::fastFree(v23, v21);
  }
  v24 = *(_QWORD *)(v19 + 8);
  if (__ldaxr((unsigned __int8 *)v24))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v24))
  {
LABEL_12:
    v26 = *(_QWORD *)(v24 + 8);
    v27 = v26 - 1;
    *(_QWORD *)(v24 + 8) = v26 - 1;
    if (v26 == 1)
    {
      v31 = *(_QWORD *)(v24 + 16);
      v28 = *(_QWORD *)(v24 + 24);
      *(_QWORD *)(v24 + 24) = 0;
      v29 = v31 != 0;
    }
    else
    {
      v28 = 0;
      v29 = 1;
    }
    v30 = __ldxr((unsigned __int8 *)v24);
    if (v30 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v24))
      {
LABEL_19:
        if (!v27)
        {
          if (v28)
            (*(void (**)(uint64_t))(*(_QWORD *)v28 + 8))(v28);
          if (!v29)
            WTF::fastFree((WTF *)v24, v21);
        }
        _Unwind_Resume(a1);
      }
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v24);
    goto LABEL_19;
  }
  MEMORY[0x19AEA534C](v24);
  goto LABEL_12;
}

void sub_194939838(_Unwind_Exception *a1, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, WebCore::Node *a15, uint64_t a16, uint64_t a17, WebCore::Node *a18, uint64_t a19, uint64_t a20,char a21)
{
  if (a18)
  {
    if (*((_DWORD *)a18 + 6) == 2)
    {
      if ((*((_WORD *)a18 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(a18, a2);
    }
    else
    {
      *((_DWORD *)a18 + 6) -= 2;
    }
  }
  if (a15)
  {
    if (*((_DWORD *)a15 + 6) == 2)
    {
      if ((*((_WORD *)a15 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(a15, a2);
    }
    else
    {
      *((_DWORD *)a15 + 6) -= 2;
    }
  }
  WebCore::VisibleSelection::~VisibleSelection((WebCore::VisibleSelection *)&a21);
  _Unwind_Resume(a1);
}

void sub_1949399D8(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WebCore::Node *a10)
{
  if (a10)
  {
    if (*((_DWORD *)a10 + 6) == 2)
    {
      if ((*((_WORD *)a10 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(a10, a2);
    }
    else
    {
      *((_DWORD *)a10 + 6) -= 2;
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_194939B10(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_194939C60(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, WTF::StringImpl *a9, WebCore::Node *a10, uint64_t a11, WebCore::Node *a12, uint64_t a13, char a14)
{
  if (a9)
  {
    if (*(_DWORD *)a9 == 2)
      WTF::StringImpl::destroy(a9, a2);
    else
      *(_DWORD *)a9 -= 2;
  }
  if (a14)
  {
    if (a12)
    {
      if (*((_DWORD *)a12 + 6) == 2)
      {
        if ((*((_WORD *)a12 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a12, a2);
      }
      else
      {
        *((_DWORD *)a12 + 6) -= 2;
      }
    }
    if (a10)
    {
      if (*((_DWORD *)a10 + 6) == 2)
      {
        if ((*((_WORD *)a10 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a10, a2);
      }
      else
      {
        *((_DWORD *)a10 + 6) -= 2;
      }
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_194939EE8(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WebCore::Node *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, WebCore::Node *a16, uint64_t a17, WebCore::Node *a18, uint64_t a19, char a20)
{
  if (a13)
  {
    if (*(_DWORD *)(a13 + 24) == 2)
    {
      if ((*(_WORD *)(a13 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)a13, a2);
    }
    else
    {
      *(_DWORD *)(a13 + 24) -= 2;
    }
  }
  _Unwind_Resume(exception_object);
}

void *WebCore::makeSimpleRange<WebCore::VisiblePosition,WebCore::VisiblePosition>@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  void *result;
  int v8;
  int v9;
  WebCore::Node *v10;
  int v11;
  WebCore::Node *v12;
  int v13;
  WebCore::Node *v14;
  int v15;
  char v16;
  unsigned __int8 v17;
  WebCore::Node *v18;
  int v19;
  unsigned __int8 v20;
  uint64_t v21;
  int v22;
  char v23;

  v5 = *a1;
  if (*a1)
  {
    *(_DWORD *)(v5 + 24) += 2;
    v14 = (WebCore::Node *)v5;
    v15 = *((_DWORD *)a1 + 2);
    v16 = *((_BYTE *)a1 + 12);
    WebCore::makeBoundaryPoint((uint64_t *)&v14, (uint64_t)&v18);
    if (*(_DWORD *)(v5 + 24) == 2)
    {
      if ((*(_WORD *)(v5 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v5);
    }
    else
    {
      *(_DWORD *)(v5 + 24) -= 2;
    }
  }
  else
  {
    v14 = 0;
    v15 = *((_DWORD *)a1 + 2);
    v16 = *((_BYTE *)a1 + 12);
    WebCore::makeBoundaryPoint((uint64_t *)&v14, (uint64_t)&v18);
  }
  v6 = *(_QWORD *)a2;
  if (*(_QWORD *)a2)
  {
    *(_DWORD *)(v6 + 24) += 2;
    v21 = v6;
    v22 = *(_DWORD *)(a2 + 8);
    v23 = *(_BYTE *)(a2 + 12);
    result = WebCore::makeBoundaryPoint(&v21, (uint64_t)&v14);
    if (*(_DWORD *)(v6 + 24) == 2)
    {
      if ((*(_WORD *)(v6 + 30) & 0x400) == 0)
        result = (void *)WebCore::Node::removedLastRef((WebCore::Node *)v6);
    }
    else
    {
      *(_DWORD *)(v6 + 24) -= 2;
    }
  }
  else
  {
    v21 = 0;
    v22 = *(_DWORD *)(a2 + 8);
    v23 = *(_BYTE *)(a2 + 12);
    result = WebCore::makeBoundaryPoint(&v21, (uint64_t)&v14);
  }
  v8 = v20;
  v9 = v17;
  if (v20 && v17)
  {
    v10 = v18;
    v18 = 0;
    v11 = v19;
    v12 = v14;
    v13 = v15;
    *(_QWORD *)a3 = v10;
    *(_DWORD *)(a3 + 8) = v11;
    *(_QWORD *)(a3 + 16) = v12;
    *(_DWORD *)(a3 + 24) = v13;
    *(_BYTE *)(a3 + 32) = 1;
LABEL_10:
    result = v18;
    if (v18)
    {
      if (*((_DWORD *)v18 + 6) == 2)
      {
        if ((*((_WORD *)v18 + 15) & 0x400) == 0)
          return (void *)WebCore::Node::removedLastRef(v18);
      }
      else
      {
        *((_DWORD *)v18 + 6) -= 2;
      }
    }
    return result;
  }
  *(_BYTE *)a3 = 0;
  *(_BYTE *)(a3 + 32) = 0;
  if (v9)
  {
    result = v14;
    if (v14)
    {
      if (*((_DWORD *)v14 + 6) == 2)
      {
        if ((*((_WORD *)v14 + 15) & 0x400) == 0)
          result = (void *)WebCore::Node::removedLastRef(v14);
      }
      else
      {
        *((_DWORD *)v14 + 6) -= 2;
      }
    }
  }
  if (v8)
    goto LABEL_10;
  return result;
}

void sub_19493A33C(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WebCore::Node *a10, uint64_t a11, WebCore::Node *a12, uint64_t a13, char a14, WebCore::Node *a15, uint64_t a16, WebCore::Node *a17, uint64_t a18, char a19)
{
  uint64_t v19;
  uint64_t v21;

  if (a14)
  {
    if (a12)
    {
      if (*((_DWORD *)a12 + 6) == 2)
      {
        if ((*((_WORD *)a12 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a12, a2);
      }
      else
      {
        *((_DWORD *)a12 + 6) -= 2;
      }
    }
    if (a10)
    {
      if (*((_DWORD *)a10 + 6) == 2)
      {
        if ((*((_WORD *)a10 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a10, a2);
      }
      else
      {
        *((_DWORD *)a10 + 6) -= 2;
      }
    }
  }
  if (a19)
  {
    if (a17)
    {
      if (*((_DWORD *)a17 + 6) == 2)
      {
        if ((*((_WORD *)a17 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a17, a2);
      }
      else
      {
        *((_DWORD *)a17 + 6) -= 2;
      }
    }
    if (a15)
    {
      if (*((_DWORD *)a15 + 6) == 2)
      {
        if ((*((_WORD *)a15 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a15, a2);
      }
      else
      {
        *((_DWORD *)a15 + 6) -= 2;
      }
    }
  }
  v21 = *(_QWORD *)(v19 - 56);
  *(_QWORD *)(v19 - 56) = 0;
  if (v21)
  {
    if (*(_DWORD *)(v21 + 24) == 2)
    {
      if ((*(_WORD *)(v21 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)v21, a2);
    }
    else
    {
      *(_DWORD *)(v21 + 24) -= 2;
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_19493A4FC(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WebCore::Node *a10, uint64_t a11, WebCore::Node *a12, uint64_t a13, char a14)
{
  if (a14)
  {
    if (a12)
    {
      if (*((_DWORD *)a12 + 6) == 2)
      {
        if ((*((_WORD *)a12 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a12, a2);
      }
      else
      {
        *((_DWORD *)a12 + 6) -= 2;
      }
    }
    if (a10)
    {
      if (*((_DWORD *)a10 + 6) == 2)
      {
        if ((*((_WORD *)a10 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a10, a2);
      }
      else
      {
        *((_DWORD *)a10 + 6) -= 2;
      }
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_19493A89C(_Unwind_Exception *a1, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WebCore::Node *a10, uint64_t a11, uint64_t a12, WebCore::Node *a13, uint64_t a14, uint64_t a15, WebCore::Node *a16, uint64_t a17, WebCore::Node *a18, uint64_t a19, char a20,int a21,__int16 a22,char a23,char a24)
{
  if (a10)
  {
    if (*((_DWORD *)a10 + 6) == 2)
    {
      if ((*((_WORD *)a10 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(a10, a2);
    }
    else
    {
      *((_DWORD *)a10 + 6) -= 2;
    }
  }
  if (a13)
  {
    if (*((_DWORD *)a13 + 6) == 2)
    {
      if ((*((_WORD *)a13 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(a13, a2);
    }
    else
    {
      *((_DWORD *)a13 + 6) -= 2;
    }
  }
  if (a20)
  {
    if (a18)
    {
      if (*((_DWORD *)a18 + 6) == 2)
      {
        if ((*((_WORD *)a18 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a18, a2);
      }
      else
      {
        *((_DWORD *)a18 + 6) -= 2;
      }
    }
    if (a16)
    {
      if (*((_DWORD *)a16 + 6) == 2)
      {
        if ((*((_WORD *)a16 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a16, a2);
      }
      else
      {
        *((_DWORD *)a16 + 6) -= 2;
      }
    }
  }
  WebCore::VisibleSelection::~VisibleSelection((WebCore::VisibleSelection *)&a22);
  _Unwind_Resume(a1);
}

void sub_19493AAD8(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, WebCore::Node *a9, uint64_t a10, uint64_t a11, WebCore::Node *a12, uint64_t a13, WebCore::Node *a14, uint64_t a15, char a16)
{
  if (a9)
  {
    if (*((_DWORD *)a9 + 6) == 2)
    {
      if ((*((_WORD *)a9 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(a9, a2);
    }
    else
    {
      *((_DWORD *)a9 + 6) -= 2;
    }
  }
  if (a16)
  {
    if (a14)
    {
      if (*((_DWORD *)a14 + 6) == 2)
      {
        if ((*((_WORD *)a14 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a14, a2);
      }
      else
      {
        *((_DWORD *)a14 + 6) -= 2;
      }
    }
    if (a12)
    {
      if (*((_DWORD *)a12 + 6) == 2)
      {
        if ((*((_WORD *)a12 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a12, a2);
      }
      else
      {
        *((_DWORD *)a12 + 6) -= 2;
      }
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_19493ACB8(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, WTF::StringImpl *a9, WebCore::Node *a10, uint64_t a11, WebCore::Node *a12, uint64_t a13, char a14)
{
  if (a9)
  {
    if (*(_DWORD *)a9 == 2)
      WTF::StringImpl::destroy(a9, a2);
    else
      *(_DWORD *)a9 -= 2;
  }
  if (a14)
  {
    if (a12)
    {
      if (*((_DWORD *)a12 + 6) == 2)
      {
        if ((*((_WORD *)a12 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a12, a2);
      }
      else
      {
        *((_DWORD *)a12 + 6) -= 2;
      }
    }
    if (a10)
    {
      if (*((_DWORD *)a10 + 6) == 2)
      {
        if ((*((_WORD *)a10 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a10, a2);
      }
      else
      {
        *((_DWORD *)a10 + 6) -= 2;
      }
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_19493B064(_Unwind_Exception *exception_object, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  int v10;
  uint64_t v11;

  v4 = *(_QWORD *)(v2 + 8);
  if (__ldaxr((unsigned __int8 *)v4))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v4))
  {
LABEL_6:
    v6 = *(_QWORD *)(v4 + 8);
    v7 = v6 - 1;
    *(_QWORD *)(v4 + 8) = v6 - 1;
    if (v6 == 1)
    {
      v11 = *(_QWORD *)(v4 + 16);
      v8 = *(_QWORD *)(v4 + 24);
      *(_QWORD *)(v4 + 24) = 0;
      v9 = v11 != 0;
    }
    else
    {
      v8 = 0;
      v9 = 1;
    }
    v10 = __ldxr((unsigned __int8 *)v4);
    if (v10 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v4))
      {
LABEL_13:
        if (!v7)
        {
          if (v8)
            (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
          if (!v9)
            WTF::fastFree((WTF *)v4, a2);
        }
        _Unwind_Resume(exception_object);
      }
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v4);
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v4);
  goto LABEL_6;
}

void sub_19493B11C()
{
  uint64_t v0;
  const void *v1;

  v1 = *(const void **)(v0 - 72);
  *(_QWORD *)(v0 - 72) = 0;
  if (v1)
    CFRelease(v1);
  JUMPOUT(0x19493B078);
}

void sub_19493B2E8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  const void *v3;

  v3 = *(const void **)(v1 - 56);
  *(_QWORD *)(v1 - 56) = 0;
  if (v3)
    CFRelease(v3);
  _Unwind_Resume(exception_object);
}

void sub_19493B4A8(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, WTF::StringImpl *a12)
{
  if (a12)
  {
    if (*(_DWORD *)a12 == 2)
      WTF::StringImpl::destroy(a12, a2);
    else
      *(_DWORD *)a12 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_19493B568(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_19493B618(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_19493B968(_Unwind_Exception *a1, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WebCore::Node *a10, uint64_t a11, uint64_t a12, char a13)
{
  if (a10)
  {
    if (*((_DWORD *)a10 + 6) == 2)
    {
      if ((*((_WORD *)a10 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(a10, a2);
    }
    else
    {
      *((_DWORD *)a10 + 6) -= 2;
    }
  }
  WebCore::VisibleSelection::~VisibleSelection((WebCore::VisibleSelection *)&a13);
  _Unwind_Resume(a1);
}

void sub_19493BAA0(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, WebCore::Node *a9, uint64_t a10, uint64_t a11, WebCore::Node *a12)
{
  if (a12)
  {
    if (*((_DWORD *)a12 + 6) == 2)
    {
      if ((*((_WORD *)a12 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(a12, a2);
    }
    else
    {
      *((_DWORD *)a12 + 6) -= 2;
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_19493BCBC(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, WebCore::Node *a12, uint64_t a13, uint64_t a14, WebCore::Node *a15)
{
  if (a9)
  {
    if (*(_DWORD *)(a9 + 24) == 2)
    {
      if ((*(_WORD *)(a9 + 30) & 0x400) == 0)
        WebCore::Node::removedLastRef((WebCore::Node *)a9, a2);
    }
    else
    {
      *(_DWORD *)(a9 + 24) -= 2;
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_19493BE34(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, WebCore::Node *a9, uint64_t a10, uint64_t a11, WebCore::Node *a12)
{
  if (a12)
  {
    if (*((_DWORD *)a12 + 6) == 2)
    {
      if ((*((_WORD *)a12 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(a12, a2);
    }
    else
    {
      *((_DWORD *)a12 + 6) -= 2;
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_19493C008(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, WebCore::Node *a9, uint64_t a10, WebCore::Node *a11, uint64_t a12, char a13, WebCore::Node *a14, uint64_t a15, WebCore::Node *a16, uint64_t a17, char a18)
{
  if (a13)
  {
    if (a11)
    {
      if (*((_DWORD *)a11 + 6) == 2)
      {
        if ((*((_WORD *)a11 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a11, a2);
      }
      else
      {
        *((_DWORD *)a11 + 6) -= 2;
      }
    }
    if (a9)
    {
      if (*((_DWORD *)a9 + 6) == 2)
      {
        if ((*((_WORD *)a9 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a9, a2);
      }
      else
      {
        *((_DWORD *)a9 + 6) -= 2;
      }
    }
  }
  if (a18)
  {
    if (a16)
    {
      if (*((_DWORD *)a16 + 6) == 2)
      {
        if ((*((_WORD *)a16 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a16, a2);
      }
      else
      {
        *((_DWORD *)a16 + 6) -= 2;
      }
    }
    if (a14)
    {
      if (*((_DWORD *)a14 + 6) == 2)
      {
        if ((*((_WORD *)a14 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a14, a2);
      }
      else
      {
        *((_DWORD *)a14 + 6) -= 2;
      }
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_19493C168(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WebCore::Node *a10)
{
  if (a10)
  {
    if (*((_DWORD *)a10 + 6) == 2)
    {
      if ((*((_WORD *)a10 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(a10, a2);
    }
    else
    {
      *((_DWORD *)a10 + 6) -= 2;
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_19493C22C(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WebCore::Node *a10)
{
  if (a10)
  {
    if (*((_DWORD *)a10 + 6) == 2)
    {
      if ((*((_WORD *)a10 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(a10, a2);
    }
    else
    {
      *((_DWORD *)a10 + 6) -= 2;
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_19493C3BC(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, WebCore::Node *a12, uint64_t a13, WebCore::Node *a14, uint64_t a15, char a16)
{
  if (a16)
  {
    if (a14)
    {
      if (*((_DWORD *)a14 + 6) == 2)
      {
        if ((*((_WORD *)a14 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a14, a2);
      }
      else
      {
        *((_DWORD *)a14 + 6) -= 2;
      }
    }
    if (a12)
    {
      if (*((_DWORD *)a12 + 6) == 2)
      {
        if ((*((_WORD *)a12 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a12, a2);
      }
      else
      {
        *((_DWORD *)a12 + 6) -= 2;
      }
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_19493C580(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, WebCore::Node *a12, uint64_t a13, WebCore::Node *a14, uint64_t a15, char a16)
{
  if (a16)
  {
    if (a14)
    {
      if (*((_DWORD *)a14 + 6) == 2)
      {
        if ((*((_WORD *)a14 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a14, a2);
      }
      else
      {
        *((_DWORD *)a14 + 6) -= 2;
      }
    }
    if (a12)
    {
      if (*((_DWORD *)a12 + 6) == 2)
      {
        if ((*((_WORD *)a12 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a12, a2);
      }
      else
      {
        *((_DWORD *)a12 + 6) -= 2;
      }
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_19493C71C(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10, WebCore::Node *a11, uint64_t a12, WebCore::Node *a13, uint64_t a14, char a15)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  if (a15)
  {
    if (a13)
    {
      if (*((_DWORD *)a13 + 6) == 2)
      {
        if ((*((_WORD *)a13 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a13, a2);
      }
      else
      {
        *((_DWORD *)a13 + 6) -= 2;
      }
    }
    if (a11)
    {
      if (*((_DWORD *)a11 + 6) == 2)
      {
        if ((*((_WORD *)a11 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a11, a2);
      }
      else
      {
        *((_DWORD *)a11 + 6) -= 2;
      }
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_19493C870(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, WebCore::Node *a9, uint64_t a10, WebCore::Node *a11, uint64_t a12, char a13)
{
  if (a13)
  {
    if (a11)
    {
      if (*((_DWORD *)a11 + 6) == 2)
      {
        if ((*((_WORD *)a11 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a11, a2);
      }
      else
      {
        *((_DWORD *)a11 + 6) -= 2;
      }
    }
    if (a9)
    {
      if (*((_DWORD *)a9 + 6) == 2)
      {
        if ((*((_WORD *)a9 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a9, a2);
      }
      else
      {
        *((_DWORD *)a9 + 6) -= 2;
      }
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_19493CBC0(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF *a10, int a11, WebCore::Node *a12, uint64_t a13, WebCore::Node *a14, uint64_t a15, char a16)
{
  if (a16)
  {
    if (a14)
    {
      if (*((_DWORD *)a14 + 6) == 2)
      {
        if ((*((_WORD *)a14 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a14, a2);
      }
      else
      {
        *((_DWORD *)a14 + 6) -= 2;
      }
    }
    if (a12)
    {
      if (*((_DWORD *)a12 + 6) == 2)
      {
        if ((*((_WORD *)a12 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a12, a2);
      }
      else
      {
        *((_DWORD *)a12 + 6) -= 2;
      }
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_19493CE5C(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, WebCore::Node *a9, uint64_t a10, WebCore::Node *a11, uint64_t a12, char a13)
{
  WTF *v13;

  if (v13)
    WTF::fastFree(v13, a2);
  if (a13)
  {
    if (a11)
    {
      if (*((_DWORD *)a11 + 6) == 2)
      {
        if ((*((_WORD *)a11 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a11, a2);
      }
      else
      {
        *((_DWORD *)a11 + 6) -= 2;
      }
    }
    if (a9)
    {
      if (*((_DWORD *)a9 + 6) == 2)
      {
        if ((*((_WORD *)a9 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a9, a2);
      }
      else
      {
        *((_DWORD *)a9 + 6) -= 2;
      }
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_19493CFBC(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WebCore::Node *a10)
{
  if (a10)
  {
    if (*((_DWORD *)a10 + 6) == 2)
    {
      if ((*((_WORD *)a10 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(a10, a2);
    }
    else
    {
      *((_DWORD *)a10 + 6) -= 2;
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_19493D250(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, WebCore::Node *a9, uint64_t a10, uint64_t a11, WebCore::Node *a12)
{
  if (a12)
  {
    if (*((_DWORD *)a12 + 6) == 2)
    {
      if ((*((_WORD *)a12 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(a12, a2);
    }
    else
    {
      *((_DWORD *)a12 + 6) -= 2;
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_19493D4D0(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WebCore::Node *a10, uint64_t a11, WebCore::Node *a12, uint64_t a13, char a14)
{
  if (a14)
  {
    if (a12)
    {
      if (*((_DWORD *)a12 + 6) == 2)
      {
        if ((*((_WORD *)a12 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a12, a2);
      }
      else
      {
        *((_DWORD *)a12 + 6) -= 2;
      }
    }
    if (a10)
    {
      if (*((_DWORD *)a10 + 6) == 2)
      {
        if ((*((_WORD *)a10 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a10, a2);
      }
      else
      {
        *((_DWORD *)a10 + 6) -= 2;
      }
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_19493D60C(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, WebCore::Node *a9, uint64_t a10, WebCore::Node *a11, uint64_t a12, char a13)
{
  if (a13)
  {
    if (a11)
    {
      if (*((_DWORD *)a11 + 6) == 2)
      {
        if ((*((_WORD *)a11 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a11, a2);
      }
      else
      {
        *((_DWORD *)a11 + 6) -= 2;
      }
    }
    if (a9)
    {
      if (*((_DWORD *)a9 + 6) == 2)
      {
        if ((*((_WORD *)a9 + 15) & 0x400) == 0)
          WebCore::Node::removedLastRef(a9, a2);
      }
      else
      {
        *((_DWORD *)a9 + 6) -= 2;
      }
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_19493D7F4(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_19493D8B4(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_19493DD18(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
    WTF::fastFree((WTF *)(a11 - 16), a2);
  _Unwind_Resume(exception_object);
}

void sub_19493DE9C(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_19493DF5C(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_19493E268(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_19493E3AC(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_19493E514(_Unwind_Exception *exception_object, void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  if (a12)
    WTF::Vector<WTF::RefPtr<WebCore::AXCoreObject,WTF::RawPtrTraits<WebCore::AXCoreObject>,WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector((uint64_t)&a10, a2);
  _Unwind_Resume(exception_object);
}

void sub_19493E8CC(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

void sub_19493E98C(_Unwind_Exception *exception_object, WTF::StringImpl *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, WTF::StringImpl *a10)
{
  if (a10)
  {
    if (*(_DWORD *)a10 == 2)
      WTF::StringImpl::destroy(a10, a2);
    else
      *(_DWORD *)a10 -= 2;
  }
  _Unwind_Resume(exception_object);
}

uint64_t initUIAccessibilityTokenFontName(void)
{
  void *v0;
  uint64_t *v1;
  uint64_t result;

  if (_MergedGlobals_213 == 1)
  {
    v0 = (void *)qword_1EE334F00;
  }
  else
  {
    v0 = dlopen("/System/Library/PrivateFrameworks/AXRuntime.framework/AXRuntime", 2);
    if (!v0)
    {
LABEL_8:
      __break(0xC471u);
      JUMPOUT(0x19493EDD4);
    }
    qword_1EE334F00 = (uint64_t)v0;
    _MergedGlobals_213 = 1;
  }
  v1 = (uint64_t *)dlsym(v0, "UIAccessibilityTokenFontName");
  if (!v1)
    goto LABEL_8;
  result = *v1;
  qword_1EE334EF8 = result;
  _MergedGlobals_212 = UIAccessibilityTokenFontNameFunction;
  return result;
}

uint64_t UIAccessibilityTokenFontNameFunction(void)
{
  return qword_1EE334EF8;
}

uint64_t initUIAccessibilityTokenFontFamily(void)
{
  void *v0;
  uint64_t *v1;
  uint64_t result;

  if (_MergedGlobals_213 == 1)
  {
    v0 = (void *)qword_1EE334F00;
  }
  else
  {
    v0 = dlopen("/System/Library/PrivateFrameworks/AXRuntime.framework/AXRuntime", 2);
    if (!v0)
    {
LABEL_8:
      __break(0xC471u);
      JUMPOUT(0x19493EEA0);
    }
    qword_1EE334F00 = (uint64_t)v0;
    _MergedGlobals_213 = 1;
  }
  v1 = (uint64_t *)dlsym(v0, "UIAccessibilityTokenFontFamily");
  if (!v1)
    goto LABEL_8;
  result = *v1;
  qword_1EE334F08 = result;
  off_1EE2DE250 = UIAccessibilityTokenFontFamilyFunction;
  return result;
}

uint64_t UIAccessibilityTokenFontFamilyFunction(void)
{
  return qword_1EE334F08;
}

uint64_t initUIAccessibilityTokenFontSize(void)
{
  void *v0;
  uint64_t *v1;
  uint64_t result;

  if (_MergedGlobals_213 == 1)
  {
    v0 = (void *)qword_1EE334F00;
  }
  else
  {
    v0 = dlopen("/System/Library/PrivateFrameworks/AXRuntime.framework/AXRuntime", 2);
    if (!v0)
    {
LABEL_8:
      __break(0xC471u);
      JUMPOUT(0x19493EF6CLL);
    }
    qword_1EE334F00 = (uint64_t)v0;
    _MergedGlobals_213 = 1;
  }
  v1 = (uint64_t *)dlsym(v0, "UIAccessibilityTokenFontSize");
  if (!v1)
    goto LABEL_8;
  result = *v1;
  qword_1EE334F10 = result;
  off_1EE2DE258 = UIAccessibilityTokenFontSizeFunction;
  return result;
}

uint64_t UIAccessibilityTokenFontSizeFunction(void)
{
  return qword_1EE334F10;
}

uint64_t initUIAccessibilityTokenBold(void)
{
  void *v0;
  uint64_t *v1;
  uint64_t result;

  if (_MergedGlobals_213 == 1)
  {
    v0 = (void *)qword_1EE334F00;
  }
  else
  {
    v0 = dlopen("/System/Library/PrivateFrameworks/AXRuntime.framework/AXRuntime", 2);
    if (!v0)
    {
LABEL_8:
      __break(0xC471u);
      JUMPOUT(0x19493F038);
    }
    qword_1EE334F00 = (uint64_t)v0;
    _MergedGlobals_213 = 1;
  }
  v1 = (uint64_t *)dlsym(v0, "UIAccessibilityTokenBold");
  if (!v1)
    goto LABEL_8;
  result = *v1;
  qword_1EE334F18 = result;
  off_1EE2DE260 = UIAccessibilityTokenBoldFunction;
  return result;
}

uint64_t UIAccessibilityTokenBoldFunction(void)
{
  return qword_1EE334F18;
}

uint64_t initUIAccessibilityTokenItalic(void)
{
  void *v0;
  uint64_t *v1;
  uint64_t result;

  if (_MergedGlobals_213 == 1)
  {
    v0 = (void *)qword_1EE334F00;
  }
  else
  {
    v0 = dlopen("/System/Library/PrivateFrameworks/AXRuntime.framework/AXRuntime", 2);
    if (!v0)
    {
LABEL_8:
      __break(0xC471u);
      JUMPOUT(0x19493F104);
    }
    qword_1EE334F00 = (uint64_t)v0;
    _MergedGlobals_213 = 1;
  }
  v1 = (uint64_t *)dlsym(v0, "UIAccessibilityTokenItalic");
  if (!v1)
    goto LABEL_8;
  result = *v1;
  qword_1EE334F20 = result;
  off_1EE2DE268 = UIAccessibilityTokenItalicFunction;
  return result;
}

uint64_t UIAccessibilityTokenItalicFunction(void)
{
  return qword_1EE334F20;
}

uint64_t initUIAccessibilityTokenAttachment(void)
{
  void *v0;
  uint64_t *v1;
  uint64_t result;

  if (_MergedGlobals_213 == 1)
  {
    v0 = (void *)qword_1EE334F00;
  }
  else
  {
    v0 = dlopen("/System/Library/PrivateFrameworks/AXRuntime.framework/AXRuntime", 2);
    if (!v0)
    {
LABEL_8:
      __break(0xC471u);
      JUMPOUT(0x19493F1D0);
    }
    qword_1EE334F00 = (uint64_t)v0;
    _MergedGlobals_213 = 1;
  }
  v1 = (uint64_t *)dlsym(v0, "UIAccessibilityTokenAttachment");
  if (!v1)
    goto LABEL_8;
  result = *v1;
  qword_1EE334F28 = result;
  getUIAccessibilityTokenAttachment = UIAccessibilityTokenAttachmentFunction;
  return result;
}

uint64_t UIAccessibilityTokenAttachmentFunction(void)
{
  return qword_1EE334F28;
}

uint64_t initUIAccessibilityTokenUnderline(void)
{
  void *v0;
  uint64_t *v1;
  uint64_t result;

  if (_MergedGlobals_213 == 1)
  {
    v0 = (void *)qword_1EE334F00;
  }
  else
  {
    v0 = dlopen("/System/Library/PrivateFrameworks/AXRuntime.framework/AXRuntime", 2);
    if (!v0)
    {
LABEL_8:
      __break(0xC471u);
      JUMPOUT(0x19493F29CLL);
    }
    qword_1EE334F00 = (uint64_t)v0;
    _MergedGlobals_213 = 1;
  }
  v1 = (uint64_t *)dlsym(v0, "UIAccessibilityTokenUnderline");
  if (!v1)
    goto LABEL_8;
  result = *v1;
  qword_1EE334F30 = result;
  off_1EE2DE270 = UIAccessibilityTokenUnderlineFunction;
  return result;
}

uint64_t UIAccessibilityTokenUnderlineFunction(void)
{
  return qword_1EE334F30;
}

uint64_t initUIAccessibilityTokenBlockquoteLevel(void)
{
  void *v0;
  uint64_t *v1;
  uint64_t result;

  if (_MergedGlobals_213 == 1)
  {
    v0 = (void *)qword_1EE334F00;
  }
  else
  {
    v0 = dlopen("/System/Library/PrivateFrameworks/AXRuntime.framework/AXRuntime", 2);
    if (!v0)
    {
LABEL_8:
      __break(0xC471u);
      JUMPOUT(0x19493F368);
    }
    qword_1EE334F00 = (uint64_t)v0;
    _MergedGlobals_213 = 1;
  }
  v1 = (uint64_t *)dlsym(v0, "UIAccessibilityTokenBlockquoteLevel");
  if (!v1)
    goto LABEL_8;
  result = *v1;
  qword_1EE334F38 = result;
  off_1EE2DE278 = UIAccessibilityTokenBlockquoteLevelFunction;
  return result;
}

uint64_t UIAccessibilityTokenBlockquoteLevelFunction(void)
{
  return qword_1EE334F38;
}

uint64_t initUIAccessibilityTokenLanguage(void)
{
  void *v0;
  uint64_t *v1;
  uint64_t result;

  if (_MergedGlobals_213 == 1)
  {
    v0 = (void *)qword_1EE334F00;
  }
  else
  {
    v0 = dlopen("/System/Library/PrivateFrameworks/AXRuntime.framework/AXRuntime", 2);
    if (!v0)
    {
LABEL_8:
      __break(0xC471u);
      JUMPOUT(0x19493F434);
    }
    qword_1EE334F00 = (uint64_t)v0;
    _MergedGlobals_213 = 1;
  }
  v1 = (uint64_t *)dlsym(v0, "UIAccessibilityTokenLanguage");
  if (!v1)
    goto LABEL_8;
  result = *v1;
  qword_1EE334F40 = result;
  off_1EE2DE280 = UIAccessibilityTokenLanguageFunction;
  return result;
}

uint64_t UIAccessibilityTokenLanguageFunction(void)
{
  return qword_1EE334F40;
}

uint64_t initUIAccessibilityAcceptedInlineTextCompletion(void)
{
  void *v0;
  uint64_t *v1;
  uint64_t result;

  if (_MergedGlobals_213 == 1)
  {
    v0 = (void *)qword_1EE334F00;
  }
  else
  {
    v0 = dlopen("/System/Library/PrivateFrameworks/AXRuntime.framework/AXRuntime", 2);
    if (!v0)
    {
LABEL_8:
      __break(0xC471u);
      JUMPOUT(0x19493F500);
    }
    qword_1EE334F00 = (uint64_t)v0;
    _MergedGlobals_213 = 1;
  }
  v1 = (uint64_t *)dlsym(v0, "UIAccessibilityAcceptedInlineTextCompletion");
  if (!v1)
    goto LABEL_8;
  result = *v1;
  qword_1EE334F48 = result;
  off_1EE2DE288 = UIAccessibilityAcceptedInlineTextCompletionFunction;
  return result;
}

uint64_t UIAccessibilityAcceptedInlineTextCompletionFunction(void)
{
  return qword_1EE334F48;
}

uint64_t initUIAccessibilityInlineTextCompletion(void)
{
  void *v0;
  uint64_t *v1;
  uint64_t result;

  if (_MergedGlobals_213 == 1)
  {
    v0 = (void *)qword_1EE334F00;
  }
  else
  {
    v0 = dlopen("/System/Library/PrivateFrameworks/AXRuntime.framework/AXRuntime", 2);
    if (!v0)
    {
LABEL_8:
      __break(0xC471u);
      JUMPOUT(0x19493F5CCLL);
    }
    qword_1EE334F00 = (uint64_t)v0;
    _MergedGlobals_213 = 1;
  }
  v1 = (uint64_t *)dlsym(v0, "UIAccessibilityInlineTextCompletion");
  if (!v1)
    goto LABEL_8;
  result = *v1;
  qword_1EE334F50 = result;
  off_1EE2DE290 = UIAccessibilityInlineTextCompletionFunction;
  return result;
}

uint64_t UIAccessibilityInlineTextCompletionFunction(void)
{
  return qword_1EE334F50;
}

uint64_t WebCore::Accessibility::enumerateDescendants<WebCore::AXCoreObject,accessibleElementsForObjects(WTF::Vector<WTF::RefPtr<WebCore::AXCoreObject,WTF::RawPtrTraits<WebCore::AXCoreObject>,WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> const&)::$_0>(_QWORD *a1, uint64_t *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v10;
  uint64_t result;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = (void *)a1[3];
  if (v4 && objc_msgSend(v4, "isAccessibilityElement"))
  {
    v5 = *a2;
    v15 = a1;
    v6 = *(unsigned int *)(v5 + 12);
    if ((_DWORD)v6 == *(_DWORD *)(v5 + 8))
    {
      WTF::Vector<WTF::RefPtr<WebCore::AXCoreObject,WTF::RawPtrTraits<WebCore::AXCoreObject>,WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,WebCore::AXCoreObject*>(v5, (uint64_t *)&v15);
      goto LABEL_15;
    }
    v7 = *(_QWORD *)v5;
    v8 = a1[1];
    if (__ldaxr((unsigned __int8 *)v8))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v8))
    {
      goto LABEL_9;
    }
    MEMORY[0x19AEA534C](v8);
LABEL_9:
    ++*(_QWORD *)(v8 + 8);
    v10 = __ldxr((unsigned __int8 *)v8);
    if (v10 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v8))
        goto LABEL_14;
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v8);
LABEL_14:
    *(_QWORD *)(v7 + 8 * v6) = a1;
    ++*(_DWORD *)(v5 + 12);
  }
LABEL_15:
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(*a1 + 1896))(a1, 1);
  v12 = *(unsigned int *)(result + 12);
  if ((_DWORD)v12)
  {
    v13 = *(uint64_t **)result;
    v14 = 8 * v12;
    do
    {
      result = *v13;
      if (*v13)
        result = WebCore::Accessibility::enumerateDescendants<WebCore::AXCoreObject,accessibleElementsForObjects(WTF::Vector<WTF::RefPtr<WebCore::AXCoreObject,WTF::RawPtrTraits<WebCore::AXCoreObject>,WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc> const&)::$_0>(result, a2);
      ++v13;
      v14 -= 8;
    }
    while (v14);
  }
  return result;
}

uint64_t WTF::Vector<WTF::RefPtr<WebCore::AXCoreObject,WTF::RawPtrTraits<WebCore::AXCoreObject>,WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,WebCore::AXCoreObject*>(uint64_t result, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v17;

  v3 = result;
  v4 = *(unsigned int *)(result + 8);
  v5 = *(unsigned int *)(result + 12);
  v6 = v4 + (v4 >> 2);
  if (v6 >= 0x10)
    v7 = v6 + 1;
  else
    v7 = 16;
  if (v7 <= v5 + 1)
    v8 = v5 + 1;
  else
    v8 = v7;
  if (v8 <= v4)
    goto LABEL_13;
  if (!(v8 >> 29))
  {
    v9 = *(void **)result;
    v10 = (void *)WTF::fastMalloc((WTF *)(8 * v8));
    *(_DWORD *)(v3 + 8) = v8;
    *(_QWORD *)v3 = v10;
    memcpy(v10, v9, 8 * v5);
    if (v9)
    {
      if (*(void **)v3 == v9)
      {
        *(_QWORD *)v3 = 0;
        *(_DWORD *)(v3 + 8) = 0;
      }
      WTF::fastFree((WTF *)v9, v11);
    }
LABEL_13:
    v12 = *(unsigned int *)(v3 + 12);
    v13 = *(_QWORD *)v3;
    v14 = *a2;
    if (!*a2)
      goto LABEL_23;
    v15 = *(_QWORD *)(v14 + 8);
    if (__ldaxr((unsigned __int8 *)v15))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v15))
    {
LABEL_18:
      ++*(_QWORD *)(v15 + 8);
      v17 = __ldxr((unsigned __int8 *)v15);
      if (v17 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v15))
          goto LABEL_23;
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v15);
LABEL_23:
      *(_QWORD *)(v13 + 8 * v12) = v14;
      ++*(_DWORD *)(v3 + 12);
      return 1;
    }
    MEMORY[0x19AEA534C](v15);
    goto LABEL_18;
  }
  __break(0xC471u);
  return result;
}

uint64_t WTF::Vector<WTF::RefPtr<WebCore::AXCoreObject,WTF::RawPtrTraits<WebCore::AXCoreObject>,WTF::DefaultRefDerefTraits<WebCore::AXCoreObject>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::~Vector(uint64_t a1, void *a2)
{
  uint64_t v3;
  WTF *v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  int v13;
  uint64_t v14;
  WTF *v15;

  v3 = *(unsigned int *)(a1 + 12);
  if ((_DWORD)v3)
  {
    v4 = *(WTF **)a1;
    for (i = 8 * v3; i; i -= 8)
    {
      v6 = *(_QWORD *)v4;
      *(_QWORD *)v4 = 0;
      if (!v6)
        goto LABEL_20;
      v7 = *(_QWORD *)(v6 + 8);
      if (__ldaxr((unsigned __int8 *)v7))
      {
        __clrex();
      }
      else if (!__stxr(1u, (unsigned __int8 *)v7))
      {
        goto LABEL_8;
      }
      MEMORY[0x19AEA534C](v7);
LABEL_8:
      v9 = *(_QWORD *)(v7 + 8);
      v10 = v9 - 1;
      *(_QWORD *)(v7 + 8) = v9 - 1;
      if (v9 == 1)
      {
        v14 = *(_QWORD *)(v7 + 16);
        v11 = *(_QWORD *)(v7 + 24);
        *(_QWORD *)(v7 + 24) = 0;
        v12 = v14 != 0;
      }
      else
      {
        v11 = 0;
        v12 = 1;
      }
      v13 = __ldxr((unsigned __int8 *)v7);
      if (v13 == 1)
      {
        if (!__stlxr(0, (unsigned __int8 *)v7))
        {
          if (!v10)
            goto LABEL_16;
          goto LABEL_20;
        }
      }
      else
      {
        __clrex();
      }
      WTF::Lock::unlockSlow((WTF::Lock *)v7);
      if (!v10)
      {
LABEL_16:
        if (v11)
          (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
        if (!v12)
          WTF::fastFree((WTF *)v7, a2);
      }
LABEL_20:
      v4 = (WTF *)((char *)v4 + 8);
    }
  }
  v15 = *(WTF **)a1;
  if (*(_QWORD *)a1)
  {
    *(_QWORD *)a1 = 0;
    *(_DWORD *)(a1 + 8) = 0;
    WTF::fastFree(v15, a2);
  }
  return a1;
}

_BYTE *WTF::HashTable<WebCore::AccessibilityRole,WebCore::AccessibilityRole,WTF::IdentityExtractor,WTF::IntHash<WebCore::AccessibilityRole>,WTF::StrongEnumHashTraits<WebCore::AccessibilityRole>,WTF::StrongEnumHashTraits<WebCore::AccessibilityRole>>::add(_BYTE *result, uint64_t *a2, _BYTE *a3)
{
  _BYTE *v5;
  uint64_t v6;
  char v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  _BYTE *v15;
  int v16;
  _BYTE *v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  unsigned int v25;
  uint64_t v26;
  char v27;
  unint64_t v28;

  v5 = result;
  v6 = *a2;
  if (*a2
    || (result = WTF::HashTable<WebCore::AccessibilityRole,WebCore::AccessibilityRole,WTF::IdentityExtractor,WTF::IntHash<WebCore::AccessibilityRole>,WTF::StrongEnumHashTraits<WebCore::AccessibilityRole>,WTF::StrongEnumHashTraits<WebCore::AccessibilityRole>>::rehash(a2, 8u, 0), (v6 = *a2) != 0))
  {
    v7 = 0;
    v8 = *(_DWORD *)(v6 - 8);
  }
  else
  {
    v8 = 0;
    v7 = 1;
  }
  v9 = *a3;
  v10 = 9 * ((~(v9 << 15) + v9) ^ ((~(v9 << 15) + v9) >> 10));
  v11 = (v10 ^ (v10 >> 6)) + ~((v10 ^ (v10 >> 6)) << 11);
  v12 = v11 ^ HIWORD(v11);
  v13 = v8;
  v14 = v12 & v8;
  v15 = (_BYTE *)(v6 + v14);
  v16 = *(unsigned __int8 *)(v6 + v14);
  if (v16 != 255)
  {
    v17 = 0;
    v18 = 1;
    do
    {
      if (v16 == v9)
      {
        if ((v7 & 1) != 0)
          v26 = 0;
        else
          v26 = *(unsigned int *)(v6 - 4);
        v27 = 0;
        v28 = v6 + v26;
        goto LABEL_33;
      }
      if (v16 == 254)
        v17 = v15;
      v14 = ((_DWORD)v14 + v18) & v13;
      v15 = (_BYTE *)(v6 + v14);
      v16 = *(unsigned __int8 *)(v6 + v14);
      ++v18;
    }
    while (v16 != 255);
    if (v17)
    {
      *v17 = -1;
      --*(_DWORD *)(*a2 - 16);
      LOBYTE(v9) = *a3;
      v15 = v17;
    }
  }
  *v15 = v9;
  v19 = *a2;
  if (*a2)
    v20 = *(_DWORD *)(v19 - 12) + 1;
  else
    v20 = 1;
  *(_DWORD *)(v19 - 12) = v20;
  v21 = *a2;
  if (*a2)
    v22 = *(_DWORD *)(v21 - 12);
  else
    v22 = 0;
  v23 = (*(_DWORD *)(v21 - 16) + v22);
  v24 = *(unsigned int *)(v21 - 4);
  if (v24 > 0x400)
  {
    if (v24 <= 2 * v23)
      goto LABEL_21;
  }
  else if (3 * v24 <= 4 * v23)
  {
    if (!(_DWORD)v24)
    {
      v25 = 8;
LABEL_26:
      result = WTF::HashTable<WebCore::AccessibilityRole,WebCore::AccessibilityRole,WTF::IdentityExtractor,WTF::IntHash<WebCore::AccessibilityRole>,WTF::StrongEnumHashTraits<WebCore::AccessibilityRole>,WTF::StrongEnumHashTraits<WebCore::AccessibilityRole>>::rehash(a2, v25, (uint64_t)v15);
      v15 = result;
      v21 = *a2;
      if (*a2)
        v24 = *(unsigned int *)(v21 - 4);
      else
        v24 = 0;
      goto LABEL_32;
    }
LABEL_21:
    v25 = (_DWORD)v24 << (6 * *(_DWORD *)(v21 - 12) >= (2 * v24));
    goto LABEL_26;
  }
LABEL_32:
  v28 = v21 + v24;
  v27 = 1;
LABEL_33:
  *(_QWORD *)v5 = v15;
  *((_QWORD *)v5 + 1) = v28;
  v5[16] = v27;
  return result;
}

_BYTE *WTF::HashTable<WebCore::AccessibilityRole,WebCore::AccessibilityRole,WTF::IdentityExtractor,WTF::IntHash<WebCore::AccessibilityRole>,WTF::StrongEnumHashTraits<WebCore::AccessibilityRole>,WTF::StrongEnumHashTraits<WebCore::AccessibilityRole>>::rehash(uint64_t *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  _BYTE *v22;

  v6 = *a1;
  if (*a1)
  {
    v7 = *(_DWORD *)(v6 - 4);
    v8 = *(_DWORD *)(v6 - 12);
  }
  else
  {
    v7 = 0;
    v8 = 0;
  }
  v9 = WTF::fastMalloc((WTF *)(a2 + 16));
  v11 = v9;
  v12 = v9 + 16;
  if (a2)
    memset((void *)(v9 + 16), 255, a2);
  *a1 = v12;
  *(_DWORD *)(v11 + 12) = a2;
  *(_DWORD *)(*a1 - 8) = a2 - 1;
  *(_DWORD *)(*a1 - 16) = 0;
  *(_DWORD *)(*a1 - 12) = v8;
  if (!v7)
  {
    v14 = 0;
    if (!v6)
      return v14;
    goto LABEL_18;
  }
  v13 = 0;
  v14 = 0;
  do
  {
    v15 = *(unsigned __int8 *)(v6 + v13);
    if (v15 <= 0xFD)
    {
      v16 = *a1;
      if (*a1)
        v17 = *(_DWORD *)(v16 - 8);
      else
        v17 = 0;
      v18 = 0;
      v19 = 9 * ((~(v15 << 15) + v15) ^ ((~(v15 << 15) + v15) >> 10));
      v20 = ((v19 ^ (v19 >> 6)) + ~((v19 ^ (v19 >> 6)) << 11)) ^ (((v19 ^ (v19 >> 6)) + ~((v19 ^ (v19 >> 6)) << 11)) >> 16);
      do
      {
        v21 = v20 & v17;
        v20 = ++v18 + v21;
      }
      while (*(unsigned __int8 *)(v16 + v21) != 255);
      v22 = (_BYTE *)(v16 + v21);
      *v22 = v15;
      if (v6 + v13 == a3)
        v14 = v22;
    }
    ++v13;
  }
  while (v13 != v7);
  if (v6)
LABEL_18:
    WTF::fastFree((WTF *)(v6 - 16), v10);
  return v14;
}

uint64_t WebCore::convertEnumerationToJS<WebCore::ChannelCountMode>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)(a1 + 41968);
  {
    WebCore::convertEnumerationToString(WebCore::ChannelCountMode)::$_0::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::ChannelCountMode)::$_1::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::ChannelCountMode)::values[0] = (uint64_t)&WebCore::convertEnumerationToString(WebCore::ChannelCountMode)::$_0::operator() const(void)::impl;
    unk_1EE2F4480 = &WebCore::convertEnumerationToString(WebCore::ChannelCountMode)::$_1::operator() const(void)::impl;
    WebCore::convertEnumerationToString(WebCore::ChannelCountMode)::$_2::operator() const(void)::impl += 2;
    qword_1EE2F4488 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::ChannelCountMode)::$_2::operator() const(void)::impl;
  }
  v3 = WebCore::convertEnumerationToString(WebCore::ChannelCountMode)::values[(int)a2];
  if (!v3)
    return *v2;
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  *(_DWORD *)v3 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_6:
      v6 = *(_QWORD *)(a1 + 64760);
      if (!v6 || v3 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v3 - 2;
      }
      goto LABEL_9;
    }
    v8 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_6;
      v9 = v10;
    }
    v6 = *(_QWORD *)(a1 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *v2;
  }
LABEL_9:
  if (v4)
    *(_DWORD *)v3 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v3, a2);
  return v6;
}

uint64_t WebCore::parseEnumeration<WebCore::ChannelCountMode>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  int v5;
  const char *v6;
  int v7;
  uint64_t v9;
  char **v12;
  uint16x8_t v13;
  uint16x8_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  unint64_t v21;

  v3 = a1;
  v21 = this;
  if ((this & 0xFFFE000000000002) == 0 && *(_BYTE *)(this + 5) == 2)
  {
    v4 = *(_QWORD *)(this + 8);
    if ((v4 & 1) != 0)
    {
      v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
      if (!v4)
      {
LABEL_6:
        if (v4)
          goto LABEL_7;
        return 0;
      }
    }
    else if (!v4)
    {
      goto LABEL_6;
    }
    *(_DWORD *)v4 += 2;
    goto LABEL_6;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v21, a1);
  v4 = v20;
  if (!v20)
    return 0;
LABEL_7:
  v5 = *(_DWORD *)(v4 + 16);
  v6 = *(const char **)(v4 + 8);
  v7 = *(_DWORD *)(v4 + 4);
  if (v6 != "clamped-max" && v7 == 11)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 99 || *(_QWORD *)(v6 + 1) != 0x6D2D6465706D616CLL || *(_QWORD *)(v6 + 3) != 0x78616D2D6465706DLL)
        goto LABEL_16;
    }
    else
    {
      if (*(_WORD *)v6 != 99)
        goto LABEL_16;
      v13 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v6 + 2), (int16x8_t)xmmword_1968BD1A0);
      v13.i16[0] = vminvq_u16(v13);
      if (!v13.i32[0])
        goto LABEL_16;
      v14 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v6 + 6), (int16x8_t)xmmword_1968BD1B0);
      v14.i16[0] = vminvq_u16(v14);
      if (!v14.i32[0])
        goto LABEL_16;
    }
    goto LABEL_38;
  }
  if (v6 == "clamped-max" && v7 == 11)
  {
LABEL_38:
    v12 = &WebCore::parseEnumerationFromString<WebCore::ChannelCountMode>(WTF::String const&)::mappings;
    goto LABEL_39;
  }
  if (v6 != "explicit" && v7 == 8)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 101 || *(_DWORD *)(v6 + 1) != 1768714360 || *((_DWORD *)v6 + 1) != 1953063785)
        goto LABEL_16;
    }
    else
    {
      if (*(_WORD *)v6 != 101)
        goto LABEL_16;
      v16 = *(_QWORD *)(v6 + 2);
      v17 = *((_QWORD *)v6 + 1);
      if (v16 != 0x69006C00700078 || v17 != 0x74006900630069)
        goto LABEL_16;
    }
  }
  else if (v6 != "explicit" || v7 != 8)
  {
    if (v6 == "max" || v7 != 3)
    {
      if (v7 == 3 && v6 == "max")
        goto LABEL_58;
    }
    else if ((v5 & 4) != 0)
    {
      if (*v6 == 109 && *(_WORD *)(v6 + 1) == 30817)
      {
LABEL_58:
        v12 = &off_1E324B260;
        goto LABEL_39;
      }
    }
    else if (*(_WORD *)v6 == 109 && *(_DWORD *)(v6 + 2) == 7864417)
    {
      goto LABEL_58;
    }
LABEL_16:
    v9 = 0;
    goto LABEL_40;
  }
  v12 = &off_1E324B248;
LABEL_39:
  v9 = *((unsigned int *)v12 + 4) | 0x100000000;
LABEL_40:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v9;
}

uint64_t WebCore::convertEnumerationToJS<WebCore::ChannelInterpretation>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)(a1 + 41968);
  {
    WebCore::convertEnumerationToString(WebCore::ChannelInterpretation)::$_0::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::ChannelInterpretation)::$_1::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::ChannelInterpretation)::values[0] = (uint64_t)&WebCore::convertEnumerationToString(WebCore::ChannelInterpretation)::$_0::operator() const(void)::impl;
    unk_1EE2F44A0 = &WebCore::convertEnumerationToString(WebCore::ChannelInterpretation)::$_1::operator() const(void)::impl;
  }
  v3 = WebCore::convertEnumerationToString(WebCore::ChannelInterpretation)::values[(int)a2];
  if (!v3)
    return *v2;
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  *(_DWORD *)v3 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_6:
      v6 = *(_QWORD *)(a1 + 64760);
      if (!v6 || v3 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v3 - 2;
      }
      goto LABEL_9;
    }
    v8 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_6;
      v9 = v10;
    }
    v6 = *(_QWORD *)(a1 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *v2;
  }
LABEL_9:
  if (v4)
    *(_DWORD *)v3 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v3, a2);
  return v6;
}

uint64_t WebCore::parseEnumeration<WebCore::ChannelInterpretation>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  int v5;
  const char *v6;
  int v7;
  BOOL v8;
  int v9;
  BOOL v10;
  char **v12;
  uint64_t v13;
  uint64_t v17;
  unint64_t v18;

  v3 = a1;
  v18 = this;
  if ((this & 0xFFFE000000000002) != 0 || *(_BYTE *)(this + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v18, a1);
    v4 = v17;
    if (v17)
      goto LABEL_7;
    return 0;
  }
  v4 = *(_QWORD *)(this + 8);
  if ((v4 & 1) == 0)
  {
    if (!v4)
      goto LABEL_6;
    goto LABEL_5;
  }
  v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
  if (v4)
LABEL_5:
    *(_DWORD *)v4 += 2;
LABEL_6:
  if (!v4)
    return 0;
LABEL_7:
  v5 = *(_DWORD *)(v4 + 16);
  v6 = *(const char **)(v4 + 8);
  v7 = *(_DWORD *)(v4 + 4);
  v8 = v7 != 8;
  if (v6 != "discrete" && v7 == 8)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 100 || *(_DWORD *)(v6 + 1) != 1919120233 || *((_DWORD *)v6 + 1) != 1702126962)
      {
LABEL_13:
        v9 = 8;
        goto LABEL_18;
      }
    }
    else
    {
      if (*(_WORD *)v6 != 100)
        goto LABEL_13;
      if (*(_QWORD *)(v6 + 2) != 0x72006300730069 || *((_QWORD *)v6 + 1) != 0x65007400650072)
        goto LABEL_13;
    }
LABEL_43:
    v12 = &WebCore::parseEnumerationFromString<WebCore::ChannelInterpretation>(WTF::String const&)::mappings;
    goto LABEL_44;
  }
  v10 = v6 == "discrete" && v7 == 8;
  v9 = *(_DWORD *)(v4 + 4);
  if (v10)
    goto LABEL_43;
LABEL_18:
  if (v6 == "speakers")
    v8 = 1;
  if (v8)
  {
    if (v7 != 8 || v6 != "speakers")
      goto LABEL_50;
    goto LABEL_32;
  }
  if (!v9)
    goto LABEL_32;
  if ((v5 & 4) == 0)
  {
    if (*(_WORD *)v6 != 115)
      goto LABEL_50;
    if (*((_QWORD *)v6 + 1) != 0x7300720065006BLL || *(_QWORD *)(v6 + 2) != 0x6B006100650070)
      goto LABEL_50;
    goto LABEL_32;
  }
  if (*v6 == 115 && *(_DWORD *)(v6 + 1) == 1801545072 && *((_DWORD *)v6 + 1) == 1936876907)
  {
LABEL_32:
    v12 = &off_1E324B290;
LABEL_44:
    v13 = *((unsigned int *)v12 + 4) | 0x100000000;
    goto LABEL_51;
  }
LABEL_50:
  v13 = 0;
LABEL_51:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v13;
}

uint64_t WebCore::JSDOMConstructor<WebCore::JSChannelMergerNode>::construct(WebCore::AudioNode **a1, uint64_t a2)
{
  WebCore::AudioNode *v4;
  uint64_t v5;
  uint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  JSCell *v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::AudioNode *v15;
  uint64_t v16;
  BOOL v17;
  char **v18;
  BOOL v19;
  uint64_t v21;
  JSC::JSCell *v22;
  uint64_t Object;
  JSC::Structure *v24;
  WTF::StringImpl *v25;
  unint64_t v26;
  unsigned __int8 v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char v32;
  int v33;
  WebCore::JSDOMGlobalObject *v34;
  JSC::VM *v35;
  WebCore::AudioNode *v36;
  WebCore::AudioNode *v37;
  JSC::JSCell *v38;
  JSC::JSGlobalObject *v39;
  JSC::JSObject *v40;
  JSC::JSGlobalObject *v41;
  JSC::VM *v42;
  JSC::JSObject *v43;
  JSC::Structure *v44;
  JSC::VM *FunctionRealm;
  uint64_t v46;
  unsigned int v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char **v52;
  int v53;
  JSC::JSCell *v54;
  unint64_t Structure;
  JSC::Structure *v56;
  JSC::JSCell *v57;
  uint64_t v58;
  unint64_t SubclassStructure;
  WTF::StringImpl *v61;
  WTF::StringImpl *v62;
  unint64_t v63;
  WebCore::AudioNode *v64;
  WTF::StringImpl *v65;
  WTF::StringImpl *v66;
  unint64_t v67;
  WebCore::AudioNode *v68;
  WTF::StringImpl *v69;
  WTF::StringImpl *v70;
  unint64_t v71;
  JSValue v72;
  WTF::StringImpl *v73;
  WTF::StringImpl *v74;
  JSValue v75;
  uint64_t v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  char v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  WebCore::AudioNode *v84;
  WTF::StringImpl *v85;
  int v86;
  char v87;
  __int16 v88;
  char v89;
  int v90;
  int v91[2];
  WTF::StringImpl *v92;
  int v93;
  WebCore::AudioNode *v94;
  _DWORD v95[2];
  __int16 v96;
  char v97;
  __int16 v98;
  char v99;
  __int16 v100;
  char v101;

  v4 = a1[7];
  v94 = v4;
  v5 = *(_QWORD *)(a2 + 24);
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext((WebCore::JSDOMGlobalObject *)a1);
  if (v6 && *(_BYTE *)(v6 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194940AACLL);
  }
  v11 = v6 - 192;
  if (!v6)
    v11 = 0;
  if ((*(_DWORD *)(*(_QWORD *)(v11 + 680) + 720) & 0x20) == 0)
  {
    JSC::throwTypeError();
    return 2;
  }
  v13 = *(int *)(a2 + 32);
  if ((_DWORD)v13 == 1)
  {
    v72.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)a1, v7);
    return JSC::VM::throwException(v4, (JSC::JSGlobalObject *)a1, v72);
  }
  v14 = *(_QWORD *)(a2 + 48);
  v15 = a1[7];
  v84 = v15;
  if ((v14 & 0xFFFE000000000002) != 0)
    goto LABEL_19;
  v16 = *(unsigned int *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C);
  v17 = *(_DWORD *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C) != 0;
  v18 = (char **)(16 * v16);
  if ((_DWORD)v16)
    v19 = v18 == &WebCore::JSBaseAudioContext::s_info;
  else
    v19 = 1;
  if (!v19)
  {
    do
    {
      v18 = (char **)v18[2];
      v17 = v18 != 0;
    }
    while (v18 != &WebCore::JSBaseAudioContext::s_info && v18 != 0);
  }
  if (!v17)
  {
LABEL_19:
    WebCore::throwArgumentTypeError((uint64_t)a1, (uint64_t)&v84, 0, "context", 8, "ChannelMergerNode", 18, v8, 0, 0, "BaseAudioContext", 17);
    return 0;
  }
  v21 = *(_QWORD *)(v14 + 24);
  v83 = v5;
  if ((unint64_t)(v13 - 3) >= 0xFFFFFFFFFFFFFFFELL
    || (v22 = *(JSC::JSCell **)(a2 + 56), *(_QWORD *)v91 = v15, ((unint64_t)v22 & 0xFFFFFFFFFFFFFFF7) == 2))
  {
    LOBYTE(v28) = 0;
    v29 = 0;
    LOBYTE(v30) = 0;
    v31 = 0;
    v27 = 0;
    v32 = 0;
    v33 = 6;
    goto LABEL_31;
  }
  v82 = v21;
  if (((unint64_t)v22 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v22)) == 0)
  {
    JSC::throwTypeError();
    return 0;
  }
  v24 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v26 = JSC::JSObject::get(v24, (JSC::JSGlobalObject *)a1, (unint64_t)v84);
  if (v84)
  {
    if (*(_DWORD *)v84 == 2)
      WTF::StringImpl::destroy(v84, v25);
    else
      *(_DWORD *)v84 -= 2;
  }
  if (*((_DWORD *)v15 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) != 0)
    return 0;
  if (v26 == 10)
  {
    v81 = 0;
    v27 = 0;
  }
  else
  {
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>((JSC::JSGlobalObject *)a1, v26, &v84);
    if (HIDWORD(v84))
      return 0;
    v27 = v84;
    v77 = v84 >> 8;
    v81 = 1;
  }
  WTF::AtomStringImpl::addLiteral();
  v61 = v84;
  v63 = JSC::JSObject::get(v24, (JSC::JSGlobalObject *)a1, (unint64_t)v84);
  if (v61)
  {
    if (*(_DWORD *)v61 == 2)
      WTF::StringImpl::destroy(v61, v62);
    else
      *(_DWORD *)v61 -= 2;
  }
  if (*((_DWORD *)v15 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) != 0)
    return 0;
  if (v63 == 10)
  {
    v80 = 0;
    LOBYTE(v30) = 0;
  }
  else
  {
    v84 = a1[7];
    v64 = v84;
    v30 = WebCore::parseEnumeration<WebCore::ChannelCountMode>((JSC::JSGlobalObject *)a1, v63);
    if (*((_DWORD *)v64 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v64) & 1) != 0)
      return 0;
    if ((v30 & 0xFF00000000) == 0)
      goto LABEL_120;
    v79 = v30 >> 8;
    v80 = 1;
  }
  WTF::AtomStringImpl::addLiteral();
  v65 = v84;
  v67 = JSC::JSObject::get(v24, (JSC::JSGlobalObject *)a1, (unint64_t)v84);
  if (v65)
  {
    if (*(_DWORD *)v65 == 2)
      WTF::StringImpl::destroy(v65, v66);
    else
      *(_DWORD *)v65 -= 2;
  }
  if (*((_DWORD *)v15 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) != 0)
    return 0;
  if (v67 == 10)
  {
    v29 = 0;
    LOBYTE(v28) = 0;
    goto LABEL_74;
  }
  v84 = a1[7];
  v68 = v84;
  v28 = WebCore::parseEnumeration<WebCore::ChannelInterpretation>((JSC::JSGlobalObject *)a1, v67);
  if (*((_DWORD *)v68 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v68) & 1) != 0)
    return 0;
  if (!HIDWORD(v28))
  {
LABEL_120:
    JSC::throwTypeError();
    return 0;
  }
  v78 = v28 >> 8;
  v29 = 1;
LABEL_74:
  WTF::AtomStringImpl::addLiteral();
  v69 = v84;
  v71 = JSC::JSObject::get(v24, (JSC::JSGlobalObject *)a1, (unint64_t)v84);
  if (v69)
  {
    if (*(_DWORD *)v69 == 2)
      WTF::StringImpl::destroy(v69, v70);
    else
      *(_DWORD *)v69 -= 2;
  }
  if (*((_DWORD *)v15 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) != 0)
    return 0;
  if (v71 == 10)
  {
    v33 = 6;
    v21 = v82;
    v31 = v80;
    v32 = v81;
    LODWORD(v18) = v77;
    v10 = v78;
    v9 = v79;
  }
  else
  {
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>((JSC::JSGlobalObject *)a1, v71, v95);
    v31 = v80;
    v32 = v81;
    v10 = v78;
    v9 = v79;
    if (v95[1])
      return 0;
    v33 = v95[0];
    v21 = v82;
    LODWORD(v18) = v77;
  }
LABEL_31:
  *(_WORD *)((char *)&v84 + 5) = v100;
  HIBYTE(v84) = v101;
  *(_WORD *)((char *)&v85 + 5) = v98;
  HIBYTE(v85) = v99;
  v88 = v96;
  v89 = v97;
  LODWORD(v84) = v27 | ((_DWORD)v18 << 8);
  BYTE4(v84) = v32;
  LODWORD(v85) = v30 | (v9 << 8);
  BYTE4(v85) = v31;
  v86 = v28 | (v10 << 8);
  v87 = v29;
  v90 = v33;
  WebCore::ChannelMergerNode::create((WebCore::BaseAudioContext *)(v21 - 32), (unsigned int *)&v84, (uint64_t)v91);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    goto LABEL_102;
  if (!v93)
  {
    v35 = *(JSC::VM **)(v83 + 40);
    v36 = *(WebCore::AudioNode **)v91;
    *(_QWORD *)v91 = 0;
    v84 = v36;
    if (*(uint64_t (***)(WebCore::AudioNode *__hidden))v36 != off_1E3369AE0)
    {
      __break(0xC471u);
      JUMPOUT(0x194940B88);
    }
    v12 = (JSCell *)WebCore::createWrapper<WebCore::ChannelMergerNode,WebCore::ChannelMergerNode>(v35, (uint64_t *)&v84, v34);
    v37 = v84;
    v84 = 0;
    if (v37)
      WebCore::AudioNode::deref(v37);
    goto LABEL_36;
  }
  if (v93 == 1)
  {
    v73 = (WTF::StringImpl *)LOBYTE(v91[0]);
    LOBYTE(v84) = v91[0];
    v74 = v92;
    v92 = 0;
    v85 = v74;
    if (!*((_QWORD *)v4 + 2))
    {
      v75.super.isa = (Class)WebCore::createDOMException((JSC *)a1, (JSC::JSGlobalObject *)LOBYTE(v91[0]), (JSC::JSGlobalObject *)&v85);
      JSC::VM::throwException(v4, (JSC::JSGlobalObject *)a1, v75);
      v74 = v85;
    }
    v85 = 0;
    if (v74)
    {
      if (*(_DWORD *)v74 == 2)
        WTF::StringImpl::destroy(v74, v73);
      else
        *(_DWORD *)v74 -= 2;
    }
    v12 = 0;
LABEL_36:
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    {
LABEL_102:
      v12 = 0;
LABEL_51:
      if (v93 != -1)
        ((void (*)(WebCore::AudioNode **, int *))off_1E324F8D0[v93])(&v84, v91);
      return (uint64_t)v12;
    }
    v38 = *(JSC::JSCell **)(a2 + 40);
    if (((unint64_t)v38 & 0xFFFE000000000002) != 0
      || (v39 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v38)) == 0
      || (v41 = v39, v39 == *(JSC::JSGlobalObject **)(a2 + 24))
      || (v42 = a1[7], FunctionRealm = (JSC::VM *)JSC::getFunctionRealm((JSC *)a1, v39, v40), *((_DWORD *)v42 + 20))
      && (JSC::VM::hasExceptionsAfterHandlingTraps(v42) & 1) != 0)
    {
LABEL_50:
      if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
        goto LABEL_51;
      goto LABEL_102;
    }
    v46 = *((_QWORD *)FunctionRealm + 412);
    if (v46)
    {
      v47 = *(_DWORD *)(v46 - 8);
      v48 = ((unint64_t)&WebCore::JSChannelMergerNode::s_info
           + ~((_QWORD)&WebCore::JSChannelMergerNode::s_info << 32)) ^ (((unint64_t)&WebCore::JSChannelMergerNode::s_info
                                                                       + ~((_QWORD)&WebCore::JSChannelMergerNode::s_info << 32)) >> 22);
      v49 = 9 * ((v48 + ~(v48 << 13)) ^ ((v48 + ~(v48 << 13)) >> 8));
      v50 = (v49 ^ (v49 >> 15)) + ~((v49 ^ (v49 >> 15)) << 27);
      v51 = v47 & ((v50 >> 31) ^ v50);
      v52 = *(char ***)(v46 + 16 * v51);
      if (v52 == &WebCore::JSChannelMergerNode::s_info)
      {
LABEL_46:
        v43 = *(JSC::JSObject **)(v46 + 16 * v51 + 8);
        if (v43)
        {
LABEL_48:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure((JSC::InternalFunction *)a1, v41, v43, v44);
          if (!*((_DWORD *)v42 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v42) & 1) == 0)
            JSC::JSObject::setStructure(v12, v42, SubclassStructure);
          goto LABEL_50;
        }
      }
      else
      {
        v53 = 1;
        while (v52)
        {
          v51 = ((_DWORD)v51 + v53) & v47;
          v52 = *(char ***)(v46 + 16 * v51);
          ++v53;
          if (v52 == &WebCore::JSChannelMergerNode::s_info)
            goto LABEL_46;
        }
      }
    }
    v54 = (JSC::JSCell *)WebCore::JSAudioNode::prototype(v42, FunctionRealm, v43);
    Structure = WebCore::JSChannelMergerNodePrototype::createStructure((uint64_t *)v42, (uint64_t)FunctionRealm, v54);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v57 = (JSC::JSCell *)WebCore::JSChannelMergerNodePrototype::create(v42, FunctionRealm, Structure, v56);
    v58 = WebCore::JSChannelMergerNode::createStructure((uint64_t *)v42, (uint64_t)FunctionRealm, v57);
    v43 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v58, (uint64_t)&WebCore::JSChannelMergerNode::s_info);
    goto LABEL_48;
  }
  v76 = std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::JSChannelMergerNode::analyzeHeap(v76);
}

uint64_t WebCore::JSChannelMergerNode::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSAudioNode::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSAudioNode::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSAudioNode::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSChannelMergerNodePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSChannelMergerNodePrototype::create(WebCore::JSChannelMergerNodePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  JSC::Structure *v15;
  int v16;
  unint64_t v18;
  WTF::StringImpl *v19[6];
  int v20;
  int v21;
  JSC::Structure *v22;
  int v23;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v18 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v18);
    *((_QWORD *)this + 4865) = SlowCase + (int)v18;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)SlowCase, this);
  WTF::AtomStringImpl::addLiteral();
  v9 = v19[0];
  JSC::reifyStaticProperty(this, (uint64_t)&WebCore::JSChannelMergerNode::s_info, (unint64_t *)v19, (uint64_t)&WebCore::JSChannelMergerNodePrototypeTableValues, (unsigned __int8 *)SlowCase);
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v10);
    else
      *(_DWORD *)v9 -= 2;
  }
  v11 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create((uint64_t)this, v19);
  v14 = v19[0];
  v19[0] = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  v15 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v23 = *(_DWORD *)SlowCase;
  v22 = v15;
  v16 = JSC::Structure::outOfLineCapacity(v15);
  v20 = 0;
  v21 = v16;
  v19[0] = (WTF::StringImpl *)&v21;
  v19[1] = (WTF::StringImpl *)SlowCase;
  v19[2] = this;
  v19[3] = (WTF::StringImpl *)&v23;
  v19[4] = (WTF::StringImpl *)&v22;
  v19[5] = (WTF::StringImpl *)&v20;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v15, this, v11, 6, (uint64_t)v19);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v20, v13);
  *((_DWORD *)v15 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSChannelMergerNode>,(WebCore::DOMConstructorID)248>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1984);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSAudioNode>,(WebCore::DOMConstructorID)237>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSChannelMergerNode>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSChannelMergerNode::s_info
         + ~((_QWORD)&WebCore::JSChannelMergerNode::s_info << 32)) ^ (((unint64_t)&WebCore::JSChannelMergerNode::s_info
                                                                     + ~((_QWORD)&WebCore::JSChannelMergerNode::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSChannelMergerNode::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSChannelMergerNode::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSAudioNode::prototype((WebCore::JSAudioNode *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSChannelMergerNodePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSChannelMergerNodePrototype::create((WebCore::JSChannelMergerNodePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSChannelMergerNode::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSChannelMergerNode::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1984) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsChannelMergerNodeConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSChannelMergerNodePrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSChannelMergerNode>,(WebCore::DOMConstructorID)248>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSChannelMergerNode::subspaceForImpl(WebCore::JSChannelMergerNode *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2008);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 2008);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 2008);
    *(_QWORD *)(v8 + 2008) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 2008);
  *(_QWORD *)(v3 + 2008) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::createWrapper<WebCore::ChannelMergerNode,WebCore::ChannelMergerNode>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSAudioNode *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (!v6)
    goto LABEL_7;
  v7 = *(_DWORD *)(v6 - 8);
  v8 = ((unint64_t)&WebCore::JSChannelMergerNode::s_info + ~((_QWORD)&WebCore::JSChannelMergerNode::s_info << 32)) ^ (((unint64_t)&WebCore::JSChannelMergerNode::s_info + ~((_QWORD)&WebCore::JSChannelMergerNode::s_info << 32)) >> 22);
  v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
  v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
  v11 = v7 & ((v10 >> 31) ^ v10);
  v12 = *(char ***)(v6 + 16 * v11);
  if (v12 != &WebCore::JSChannelMergerNode::s_info)
  {
    v13 = 1;
    while (v12)
    {
      v11 = ((_DWORD)v11 + v13) & v7;
      v12 = *(char ***)(v6 + 16 * v11);
      ++v13;
      if (v12 == &WebCore::JSChannelMergerNode::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
  if (!v14)
  {
LABEL_7:
    v15 = (WebCore::JSAudioNode *)*((_QWORD *)a1 + 7);
    v16 = (JSC::JSCell *)WebCore::JSAudioNode::prototype(v15, a1, a3);
    Structure = WebCore::JSChannelMergerNodePrototype::createStructure((uint64_t *)v15, (uint64_t)a1, v16);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v19 = (JSC::JSCell *)WebCore::JSChannelMergerNodePrototype::create(v15, a1, Structure, v18);
    v20 = WebCore::JSChannelMergerNode::createStructure((uint64_t *)v15, (uint64_t)a1, v19);
    v14 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSChannelMergerNode::s_info);
  }
  v21 = WebCore::JSChannelMergerNode::create(v14, a1, a2);
  WebCore::cacheWrapper<WebCore::AnalyserNode,WebCore::JSAnalyserNode>(*((_QWORD *)a1 + 415), v5, v21);
  return v21;
}

uint64_t WebCore::wrap<WebCore::ChannelMergerNode>(int a1, JSC::VM *a2, WebCore::AudioNode *this)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  WebCore::JSDOMGlobalObject *v8;
  WebCore::AudioNode *v9;
  uint64_t result;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  WebCore::AudioNode *v17;
  int v18;
  WebCore::AudioNode *v19;

  v5 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v5 + 48))
  {
    v11 = *(_QWORD *)(v5 + 32);
    if (!v11)
      goto LABEL_5;
    v12 = *(_DWORD *)(v11 - 8);
    v13 = ((unint64_t)this + ~((_QWORD)this << 32)) ^ (((unint64_t)this + ~((_QWORD)this << 32)) >> 22);
    v14 = 9 * ((v13 + ~(v13 << 13)) ^ ((v13 + ~(v13 << 13)) >> 8));
    v15 = (v14 ^ (v14 >> 15)) + ~((v14 ^ (v14 >> 15)) << 27);
    v16 = v12 & ((v15 >> 31) ^ v15);
    v17 = *(WebCore::AudioNode **)(v11 + 16 * v16);
    if (v17 != this)
    {
      v18 = 1;
      while (v17)
      {
        v16 = ((_DWORD)v16 + v18) & v12;
        v17 = *(WebCore::AudioNode **)(v11 + 16 * v16);
        ++v18;
        if (v17 == this)
          goto LABEL_14;
      }
      goto LABEL_5;
    }
LABEL_14:
    v6 = *(_QWORD *)(v11 + 16 * v16 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *((_QWORD *)this + 1);
    if (!v6)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    v7 = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return v7;
  }
LABEL_5:
  WebCore::AudioNode::ref(this);
  v19 = this;
  if (*(uint64_t (***)(WebCore::AudioNode *__hidden))this == off_1E3369AE0)
  {
    v7 = WebCore::createWrapper<WebCore::ChannelMergerNode,WebCore::ChannelMergerNode>(a2, (uint64_t *)&v19, v8);
    v9 = v19;
    v19 = 0;
    if (v9)
      WebCore::AudioNode::deref(v9);
    return v7;
  }
  result = 239;
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSDOMConstructor<WebCore::JSChannelSplitterNode>::construct(WebCore::AudioNode **a1, uint64_t a2)
{
  WebCore::AudioNode *v4;
  uint64_t v5;
  uint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  JSCell *v12;
  uint64_t v13;
  uint64_t v14;
  WebCore::AudioNode *v15;
  uint64_t v16;
  BOOL v17;
  char **v18;
  BOOL v19;
  uint64_t v21;
  JSC::JSCell *v22;
  uint64_t Object;
  JSC::Structure *v24;
  WTF::StringImpl *v25;
  unint64_t v26;
  unsigned __int8 v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char v32;
  int v33;
  WebCore::JSDOMGlobalObject *v34;
  JSC::VM *v35;
  WebCore::AudioNode *v36;
  WebCore::AudioNode *v37;
  JSC::JSCell *v38;
  JSC::JSGlobalObject *v39;
  JSC::JSObject *v40;
  JSC::JSGlobalObject *v41;
  JSC::VM *v42;
  JSC::JSObject *v43;
  JSC::Structure *v44;
  JSC::VM *FunctionRealm;
  uint64_t v46;
  unsigned int v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char **v52;
  int v53;
  JSC::JSCell *v54;
  unint64_t Structure;
  JSC::Structure *v56;
  JSC::JSCell *v57;
  uint64_t v58;
  unint64_t SubclassStructure;
  WTF::StringImpl *v61;
  WTF::StringImpl *v62;
  unint64_t v63;
  WebCore::AudioNode *v64;
  WTF::StringImpl *v65;
  WTF::StringImpl *v66;
  unint64_t v67;
  WebCore::AudioNode *v68;
  WTF::StringImpl *v69;
  WTF::StringImpl *v70;
  unint64_t v71;
  JSValue v72;
  WTF::StringImpl *v73;
  WTF::StringImpl *v74;
  JSValue v75;
  uint64_t v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  char v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  WebCore::AudioNode *v84;
  WTF::StringImpl *v85;
  int v86;
  char v87;
  __int16 v88;
  char v89;
  int v90;
  int v91[2];
  WTF::StringImpl *v92;
  int v93;
  WebCore::AudioNode *v94;
  _DWORD v95[2];
  __int16 v96;
  char v97;
  __int16 v98;
  char v99;
  __int16 v100;
  char v101;

  v4 = a1[7];
  v94 = v4;
  v5 = *(_QWORD *)(a2 + 24);
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext((WebCore::JSDOMGlobalObject *)a1);
  if (v6 && *(_BYTE *)(v6 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x1949420A0);
  }
  v11 = v6 - 192;
  if (!v6)
    v11 = 0;
  if ((*(_DWORD *)(*(_QWORD *)(v11 + 680) + 720) & 0x20) == 0)
  {
    JSC::throwTypeError();
    return 2;
  }
  v13 = *(int *)(a2 + 32);
  if ((_DWORD)v13 == 1)
  {
    v72.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)a1, v7);
    return JSC::VM::throwException(v4, (JSC::JSGlobalObject *)a1, v72);
  }
  v14 = *(_QWORD *)(a2 + 48);
  v15 = a1[7];
  v84 = v15;
  if ((v14 & 0xFFFE000000000002) != 0)
    goto LABEL_19;
  v16 = *(unsigned int *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C);
  v17 = *(_DWORD *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C) != 0;
  v18 = (char **)(16 * v16);
  if ((_DWORD)v16)
    v19 = v18 == &WebCore::JSBaseAudioContext::s_info;
  else
    v19 = 1;
  if (!v19)
  {
    do
    {
      v18 = (char **)v18[2];
      v17 = v18 != 0;
    }
    while (v18 != &WebCore::JSBaseAudioContext::s_info && v18 != 0);
  }
  if (!v17)
  {
LABEL_19:
    WebCore::throwArgumentTypeError((uint64_t)a1, (uint64_t)&v84, 0, "context", 8, "ChannelSplitterNode", 20, v8, 0, 0, "BaseAudioContext", 17);
    return 0;
  }
  v21 = *(_QWORD *)(v14 + 24);
  v83 = v5;
  if ((unint64_t)(v13 - 3) >= 0xFFFFFFFFFFFFFFFELL
    || (v22 = *(JSC::JSCell **)(a2 + 56), *(_QWORD *)v91 = v15, ((unint64_t)v22 & 0xFFFFFFFFFFFFFFF7) == 2))
  {
    LOBYTE(v28) = 0;
    v29 = 0;
    LOBYTE(v30) = 0;
    v31 = 0;
    v27 = 0;
    v32 = 0;
    v33 = 6;
    goto LABEL_31;
  }
  v82 = v21;
  if (((unint64_t)v22 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v22)) == 0)
  {
    JSC::throwTypeError();
    return 0;
  }
  v24 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v26 = JSC::JSObject::get(v24, (JSC::JSGlobalObject *)a1, (unint64_t)v84);
  if (v84)
  {
    if (*(_DWORD *)v84 == 2)
      WTF::StringImpl::destroy(v84, v25);
    else
      *(_DWORD *)v84 -= 2;
  }
  if (*((_DWORD *)v15 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) != 0)
    return 0;
  if (v26 == 10)
  {
    v81 = 0;
    v27 = 0;
  }
  else
  {
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>((JSC::JSGlobalObject *)a1, v26, &v84);
    if (HIDWORD(v84))
      return 0;
    v27 = v84;
    v77 = v84 >> 8;
    v81 = 1;
  }
  WTF::AtomStringImpl::addLiteral();
  v61 = v84;
  v63 = JSC::JSObject::get(v24, (JSC::JSGlobalObject *)a1, (unint64_t)v84);
  if (v61)
  {
    if (*(_DWORD *)v61 == 2)
      WTF::StringImpl::destroy(v61, v62);
    else
      *(_DWORD *)v61 -= 2;
  }
  if (*((_DWORD *)v15 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) != 0)
    return 0;
  if (v63 == 10)
  {
    v80 = 0;
    LOBYTE(v30) = 0;
  }
  else
  {
    v84 = a1[7];
    v64 = v84;
    v30 = WebCore::parseEnumeration<WebCore::ChannelCountMode>((JSC::JSGlobalObject *)a1, v63);
    if (*((_DWORD *)v64 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v64) & 1) != 0)
      return 0;
    if ((v30 & 0xFF00000000) == 0)
      goto LABEL_120;
    v79 = v30 >> 8;
    v80 = 1;
  }
  WTF::AtomStringImpl::addLiteral();
  v65 = v84;
  v67 = JSC::JSObject::get(v24, (JSC::JSGlobalObject *)a1, (unint64_t)v84);
  if (v65)
  {
    if (*(_DWORD *)v65 == 2)
      WTF::StringImpl::destroy(v65, v66);
    else
      *(_DWORD *)v65 -= 2;
  }
  if (*((_DWORD *)v15 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) != 0)
    return 0;
  if (v67 == 10)
  {
    v29 = 0;
    LOBYTE(v28) = 0;
    goto LABEL_74;
  }
  v84 = a1[7];
  v68 = v84;
  v28 = WebCore::parseEnumeration<WebCore::ChannelInterpretation>((JSC::JSGlobalObject *)a1, v67);
  if (*((_DWORD *)v68 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v68) & 1) != 0)
    return 0;
  if (!HIDWORD(v28))
  {
LABEL_120:
    JSC::throwTypeError();
    return 0;
  }
  v78 = v28 >> 8;
  v29 = 1;
LABEL_74:
  WTF::AtomStringImpl::addLiteral();
  v69 = v84;
  v71 = JSC::JSObject::get(v24, (JSC::JSGlobalObject *)a1, (unint64_t)v84);
  if (v69)
  {
    if (*(_DWORD *)v69 == 2)
      WTF::StringImpl::destroy(v69, v70);
    else
      *(_DWORD *)v69 -= 2;
  }
  if (*((_DWORD *)v15 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v15) & 1) != 0)
    return 0;
  if (v71 == 10)
  {
    v33 = 6;
    v21 = v82;
    v31 = v80;
    v32 = v81;
    LODWORD(v18) = v77;
    v10 = v78;
    v9 = v79;
  }
  else
  {
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>((JSC::JSGlobalObject *)a1, v71, v95);
    v31 = v80;
    v32 = v81;
    v10 = v78;
    v9 = v79;
    if (v95[1])
      return 0;
    v33 = v95[0];
    v21 = v82;
    LODWORD(v18) = v77;
  }
LABEL_31:
  *(_WORD *)((char *)&v84 + 5) = v100;
  HIBYTE(v84) = v101;
  *(_WORD *)((char *)&v85 + 5) = v98;
  HIBYTE(v85) = v99;
  v88 = v96;
  v89 = v97;
  LODWORD(v84) = v27 | ((_DWORD)v18 << 8);
  BYTE4(v84) = v32;
  LODWORD(v85) = v30 | (v9 << 8);
  BYTE4(v85) = v31;
  v86 = v28 | (v10 << 8);
  v87 = v29;
  v90 = v33;
  WebCore::ChannelSplitterNode::create((unsigned int *)(v21 - 32), (unsigned int *)&v84, (uint64_t)v91);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    goto LABEL_102;
  if (!v93)
  {
    v35 = *(JSC::VM **)(v83 + 40);
    v36 = *(WebCore::AudioNode **)v91;
    *(_QWORD *)v91 = 0;
    v84 = v36;
    if (*(uint64_t (***)(WebCore::AudioNode *__hidden))v36 != off_1E3369C48)
    {
      __break(0xC471u);
      JUMPOUT(0x19494217CLL);
    }
    v12 = (JSCell *)WebCore::createWrapper<WebCore::ChannelSplitterNode,WebCore::ChannelSplitterNode>(v35, (uint64_t *)&v84, v34);
    v37 = v84;
    v84 = 0;
    if (v37)
      WebCore::AudioNode::deref(v37);
    goto LABEL_36;
  }
  if (v93 == 1)
  {
    v73 = (WTF::StringImpl *)LOBYTE(v91[0]);
    LOBYTE(v84) = v91[0];
    v74 = v92;
    v92 = 0;
    v85 = v74;
    if (!*((_QWORD *)v4 + 2))
    {
      v75.super.isa = (Class)WebCore::createDOMException((JSC *)a1, (JSC::JSGlobalObject *)LOBYTE(v91[0]), (JSC::JSGlobalObject *)&v85);
      JSC::VM::throwException(v4, (JSC::JSGlobalObject *)a1, v75);
      v74 = v85;
    }
    v85 = 0;
    if (v74)
    {
      if (*(_DWORD *)v74 == 2)
        WTF::StringImpl::destroy(v74, v73);
      else
        *(_DWORD *)v74 -= 2;
    }
    v12 = 0;
LABEL_36:
    if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    {
LABEL_102:
      v12 = 0;
LABEL_51:
      if (v93 != -1)
        ((void (*)(WebCore::AudioNode **, int *))off_1E324F908[v93])(&v84, v91);
      return (uint64_t)v12;
    }
    v38 = *(JSC::JSCell **)(a2 + 40);
    if (((unint64_t)v38 & 0xFFFE000000000002) != 0
      || (v39 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v38)) == 0
      || (v41 = v39, v39 == *(JSC::JSGlobalObject **)(a2 + 24))
      || (v42 = a1[7], FunctionRealm = (JSC::VM *)JSC::getFunctionRealm((JSC *)a1, v39, v40), *((_DWORD *)v42 + 20))
      && (JSC::VM::hasExceptionsAfterHandlingTraps(v42) & 1) != 0)
    {
LABEL_50:
      if (!*((_DWORD *)v4 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) == 0)
        goto LABEL_51;
      goto LABEL_102;
    }
    v46 = *((_QWORD *)FunctionRealm + 412);
    if (v46)
    {
      v47 = *(_DWORD *)(v46 - 8);
      v48 = ((unint64_t)&WebCore::JSChannelSplitterNode::s_info
           + ~((_QWORD)&WebCore::JSChannelSplitterNode::s_info << 32)) ^ (((unint64_t)&WebCore::JSChannelSplitterNode::s_info
                                                                         + ~((_QWORD)&WebCore::JSChannelSplitterNode::s_info << 32)) >> 22);
      v49 = 9 * ((v48 + ~(v48 << 13)) ^ ((v48 + ~(v48 << 13)) >> 8));
      v50 = (v49 ^ (v49 >> 15)) + ~((v49 ^ (v49 >> 15)) << 27);
      v51 = v47 & ((v50 >> 31) ^ v50);
      v52 = *(char ***)(v46 + 16 * v51);
      if (v52 == &WebCore::JSChannelSplitterNode::s_info)
      {
LABEL_46:
        v43 = *(JSC::JSObject **)(v46 + 16 * v51 + 8);
        if (v43)
        {
LABEL_48:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure((JSC::InternalFunction *)a1, v41, v43, v44);
          if (!*((_DWORD *)v42 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v42) & 1) == 0)
            JSC::JSObject::setStructure(v12, v42, SubclassStructure);
          goto LABEL_50;
        }
      }
      else
      {
        v53 = 1;
        while (v52)
        {
          v51 = ((_DWORD)v51 + v53) & v47;
          v52 = *(char ***)(v46 + 16 * v51);
          ++v53;
          if (v52 == &WebCore::JSChannelSplitterNode::s_info)
            goto LABEL_46;
        }
      }
    }
    v54 = (JSC::JSCell *)WebCore::JSAudioNode::prototype(v42, FunctionRealm, v43);
    Structure = WebCore::JSChannelSplitterNodePrototype::createStructure((uint64_t *)v42, (uint64_t)FunctionRealm, v54);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v57 = (JSC::JSCell *)WebCore::JSChannelSplitterNodePrototype::create(v42, FunctionRealm, Structure, v56);
    v58 = WebCore::JSChannelSplitterNode::createStructure((uint64_t *)v42, (uint64_t)FunctionRealm, v57);
    v43 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v58, (uint64_t)&WebCore::JSChannelSplitterNode::s_info);
    goto LABEL_48;
  }
  v76 = std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::JSChannelSplitterNode::analyzeHeap(v76);
}

uint64_t WebCore::JSChannelSplitterNode::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSAudioNode::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSAudioNode::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSAudioNode::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSChannelSplitterNodePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSChannelSplitterNodePrototype::create(WebCore::JSChannelSplitterNodePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  JSC::Structure *v15;
  int v16;
  unint64_t v18;
  WTF::StringImpl *v19[6];
  int v20;
  int v21;
  JSC::Structure *v22;
  int v23;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v18 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v18);
    *((_QWORD *)this + 4865) = SlowCase + (int)v18;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)SlowCase, this);
  WTF::AtomStringImpl::addLiteral();
  v9 = v19[0];
  JSC::reifyStaticProperty(this, (uint64_t)&WebCore::JSChannelSplitterNode::s_info, (unint64_t *)v19, (uint64_t)&WebCore::JSChannelSplitterNodePrototypeTableValues, (unsigned __int8 *)SlowCase);
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v10);
    else
      *(_DWORD *)v9 -= 2;
  }
  v11 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create((uint64_t)this, v19);
  v14 = v19[0];
  v19[0] = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  v15 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v23 = *(_DWORD *)SlowCase;
  v22 = v15;
  v16 = JSC::Structure::outOfLineCapacity(v15);
  v20 = 0;
  v21 = v16;
  v19[0] = (WTF::StringImpl *)&v21;
  v19[1] = (WTF::StringImpl *)SlowCase;
  v19[2] = this;
  v19[3] = (WTF::StringImpl *)&v23;
  v19[4] = (WTF::StringImpl *)&v22;
  v19[5] = (WTF::StringImpl *)&v20;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v15, this, v11, 6, (uint64_t)v19);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v20, v13);
  *((_DWORD *)v15 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSChannelSplitterNode>,(WebCore::DOMConstructorID)249>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1992);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSAudioNode>,(WebCore::DOMConstructorID)237>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSChannelSplitterNode>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSChannelSplitterNode::s_info
         + ~((_QWORD)&WebCore::JSChannelSplitterNode::s_info << 32)) ^ (((unint64_t)&WebCore::JSChannelSplitterNode::s_info
                                                                       + ~((_QWORD)&WebCore::JSChannelSplitterNode::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSChannelSplitterNode::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSChannelSplitterNode::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSAudioNode::prototype((WebCore::JSAudioNode *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSChannelSplitterNodePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSChannelSplitterNodePrototype::create((WebCore::JSChannelSplitterNodePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSChannelSplitterNode::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSChannelSplitterNode::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 1992) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsChannelSplitterNodeConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSChannelSplitterNodePrototype::s_info != (char **)(16
                                                                   * *(unsigned int *)(16
                                                                                     * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                     + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSChannelSplitterNode>,(WebCore::DOMConstructorID)249>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSChannelSplitterNode::subspaceForImpl(WebCore::JSChannelSplitterNode *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  WTF *v17;
  void *v18;
  int v19;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2016);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v21 = *(_QWORD *)(v8 + 2016);
  if (!v21)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v9, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v11 = v22;
    v22 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v23;
    v23 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v21 = v9;
    v13 = *(_QWORD *)(v8 + 2016);
    *(_QWORD *)(v8 + 2016) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      v15 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v6 + 2832, v14 + 1, (unint64_t)&v21);
      v14 = *(unsigned int *)(v6 + 2844);
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = *v15;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
    }
    *(_DWORD *)(v6 + 2844) = v14 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v16 = *(_QWORD *)(v3 + 2016);
  *(_QWORD *)(v3 + 2016) = v4;
  if (v16)
  {
    v17 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v17, v18);
  }
  v19 = __ldxr((unsigned __int8 *)v6);
  if (v19 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::createWrapper<WebCore::ChannelSplitterNode,WebCore::ChannelSplitterNode>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSAudioNode *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (!v6)
    goto LABEL_7;
  v7 = *(_DWORD *)(v6 - 8);
  v8 = ((unint64_t)&WebCore::JSChannelSplitterNode::s_info
      + ~((_QWORD)&WebCore::JSChannelSplitterNode::s_info << 32)) ^ (((unint64_t)&WebCore::JSChannelSplitterNode::s_info
                                                                    + ~((_QWORD)&WebCore::JSChannelSplitterNode::s_info << 32)) >> 22);
  v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
  v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
  v11 = v7 & ((v10 >> 31) ^ v10);
  v12 = *(char ***)(v6 + 16 * v11);
  if (v12 != &WebCore::JSChannelSplitterNode::s_info)
  {
    v13 = 1;
    while (v12)
    {
      v11 = ((_DWORD)v11 + v13) & v7;
      v12 = *(char ***)(v6 + 16 * v11);
      ++v13;
      if (v12 == &WebCore::JSChannelSplitterNode::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
  if (!v14)
  {
LABEL_7:
    v15 = (WebCore::JSAudioNode *)*((_QWORD *)a1 + 7);
    v16 = (JSC::JSCell *)WebCore::JSAudioNode::prototype(v15, a1, a3);
    Structure = WebCore::JSChannelSplitterNodePrototype::createStructure((uint64_t *)v15, (uint64_t)a1, v16);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v19 = (JSC::JSCell *)WebCore::JSChannelSplitterNodePrototype::create(v15, a1, Structure, v18);
    v20 = WebCore::JSChannelSplitterNode::createStructure((uint64_t *)v15, (uint64_t)a1, v19);
    v14 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSChannelSplitterNode::s_info);
  }
  v21 = WebCore::JSChannelSplitterNode::create(v14, a1, a2);
  WebCore::cacheWrapper<WebCore::AnalyserNode,WebCore::JSAnalyserNode>(*((_QWORD *)a1 + 415), v5, v21);
  return v21;
}

uint64_t WebCore::wrap<WebCore::ChannelSplitterNode>(int a1, JSC::VM *a2, WebCore::AudioNode *this)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  WebCore::JSDOMGlobalObject *v8;
  WebCore::AudioNode *v9;
  uint64_t result;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  WebCore::AudioNode *v17;
  int v18;
  WebCore::AudioNode *v19;

  v5 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v5 + 48))
  {
    v11 = *(_QWORD *)(v5 + 32);
    if (!v11)
      goto LABEL_5;
    v12 = *(_DWORD *)(v11 - 8);
    v13 = ((unint64_t)this + ~((_QWORD)this << 32)) ^ (((unint64_t)this + ~((_QWORD)this << 32)) >> 22);
    v14 = 9 * ((v13 + ~(v13 << 13)) ^ ((v13 + ~(v13 << 13)) >> 8));
    v15 = (v14 ^ (v14 >> 15)) + ~((v14 ^ (v14 >> 15)) << 27);
    v16 = v12 & ((v15 >> 31) ^ v15);
    v17 = *(WebCore::AudioNode **)(v11 + 16 * v16);
    if (v17 != this)
    {
      v18 = 1;
      while (v17)
      {
        v16 = ((_DWORD)v16 + v18) & v12;
        v17 = *(WebCore::AudioNode **)(v11 + 16 * v16);
        ++v18;
        if (v17 == this)
          goto LABEL_14;
      }
      goto LABEL_5;
    }
LABEL_14:
    v6 = *(_QWORD *)(v11 + 16 * v16 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *((_QWORD *)this + 1);
    if (!v6)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    v7 = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return v7;
  }
LABEL_5:
  WebCore::AudioNode::ref(this);
  v19 = this;
  if (*(uint64_t (***)(WebCore::AudioNode *__hidden))this == off_1E3369C48)
  {
    v7 = WebCore::createWrapper<WebCore::ChannelSplitterNode,WebCore::ChannelSplitterNode>(a2, (uint64_t *)&v19, v8);
    v9 = v19;
    v19 = 0;
    if (v9)
      WebCore::AudioNode::deref(v9);
    return v7;
  }
  result = 239;
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCharacterData::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSNode::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSNode::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSNode::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCharacterDataPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCharacterData>,(WebCore::DOMConstructorID)418>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  uint64_t v18;
  unint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3344);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSNode>,(WebCore::DOMConstructorID)466>(a1, a2);
  v7 = v6;
  LODWORD(v22) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v20 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v20);
    v5[2] = SlowCase + (int)v20;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v22, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCharacterData>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v21 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v21);
    v10[2848] = v2 + (int)v21;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v22);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v22);
  v14 = v22;
  v22 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v22);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v18 = WebCore::JSCharacterData::prototype((WebCore::JSCharacterData *)a1, (JSC::VM *)a2, v17);
  v22 = 0;
  v23 = v2;
  v24 = -1;
  v25 = 0x1000000;
  v26 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v18, 14, (uint64_t)&v22);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3344) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCharacterDataConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCharacterDataPrototype::s_info != (char **)(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCharacterData>,(WebCore::DOMConstructorID)418>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCharacterData_data(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 80);
  if (!v3)
    return *(_QWORD *)(v2 + 41968);
  v4 = *(_DWORD *)(v3 + 4);
  if (!v4)
    return *(_QWORD *)(v2 + 41968);
  if (v4 == 1)
  {
    v7 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v8 = *v7;
    }
    else
    {
      v9 = *(unsigned __int16 *)v7;
      if (v9 > 0xFF)
        goto LABEL_4;
      v8 = v9;
    }
    return *(_QWORD *)(v2 + 8 * v8 + 42216);
  }
LABEL_4:
  v5 = *(_QWORD *)(v2 + 64760);
  if (!v5 || v3 != *(_QWORD *)(v5 + 8))
    return JSC::jsStringWithCacheSlowCase();
  return v5;
}

BOOL WebCore::setJSCharacterData_data(JSC::JSGlobalObject *a1, uint64_t a2, JSC::JSRopeString *this)
{
  uint64_t v3;
  BOOL v4;
  char **v5;
  BOOL v6;
  WebCore::CharacterData *v7;
  const WTF::StringImpl *v8;
  int v9;
  _BOOL8 v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v16;
  int v17;
  WTF::StringImpl *v18;

  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v3 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v4 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v5 = (char **)(16 * v3);
  if ((_DWORD)v3)
    v6 = v5 == &WebCore::JSCharacterData::s_info;
  else
    v6 = 1;
  if (!v6)
  {
    do
    {
      v5 = (char **)v5[2];
      v4 = v5 != 0;
    }
    while (v5 != &WebCore::JSCharacterData::s_info && v5 != 0);
  }
  if (!v4)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v7 = *(WebCore::CharacterData **)(a2 + 24);
  WebCore::Converter<WebCore::IDLLegacyNullToEmptyStringAdaptor<WebCore::IDLDOMString>>::convert(a1, (unint64_t)this, (uint64_t)&v16);
  v9 = v17;
  v10 = v17 == 0;
  if (!v17)
  {
    v11 = v16;
    v16 = 0;
    v18 = v11;
    WebCore::CharacterData::setData(v7, &v18, v8);
    v13 = v18;
    v18 = 0;
    if (v13)
    {
      if (*(_DWORD *)v13 == 2)
        WTF::StringImpl::destroy(v13, v12);
      else
        *(_DWORD *)v13 -= 2;
    }
    v9 = v17;
  }
  if (v9 != -1)
    ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E324FDC0[v9])(&v18, &v16);
  return v10;
}

unint64_t WebCore::jsCharacterData_length(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 80);
  if (v2 && (LODWORD(v2) = *(_DWORD *)(v2 + 4), (v2 & 0x80000000) != 0))
    return COERCE__INT64((double)v2) + 0x2000000000000;
  else
    return v2 | 0xFFFE000000000000;
}

unint64_t WebCore::jsCharacterData_previousElementSibling(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::Element *a4)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 24);
  while (1)
  {
    v4 = *(_QWORD *)(v4 + 48) & 0xFFFFFFFFFFFFLL;
    if (!v4)
      break;
    if ((*(_WORD *)(v4 + 28) & 8) != 0)
      return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), (WebCore::JSDOMGlobalObject *)v4, a4);
  }
  return 2;
}

unint64_t WebCore::jsCharacterData_nextElementSibling(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::Element *a4)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 24);
  while (1)
  {
    v4 = *(_QWORD *)(v4 + 56);
    if (!v4)
      break;
    if ((*(_WORD *)(v4 + 28) & 8) != 0)
      return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), (WebCore::JSDOMGlobalObject *)v4, a4);
  }
  return 2;
}

unint64_t WebCore::convertDictionary<WebCore::CheckVisibilityOptions>@<X0>(JSC::JSCell *this@<X1>, unint64_t result@<X0>, uint64_t a3@<X8>)
{
  JSC::VM *v4;
  BOOL v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  JSC::JSGlobalObject *v9;
  uint64_t Object;
  JSC::Structure *v11;
  WTF::StringImpl *v12;
  unint64_t v13;
  JSC::VM *v14;
  double v15;
  WTF::StringImpl *v16;
  unint64_t v17;
  JSC::VM *v18;
  WTF::StringImpl *v19;
  unint64_t v20;
  JSC::VM *v21;
  double v22;
  WTF::StringImpl *v23;
  unint64_t v24;
  JSC::VM *v25;
  double v26;
  WTF::StringImpl *v27;
  unint64_t v28;
  BOOL v29;
  double v30;
  int v31;
  BOOL v32;
  int v33;
  uint64_t v34;
  int *v35;
  int v36;
  BOOL v37;
  int v38;
  uint64_t v39;
  int *v40;
  int v41;
  BOOL v42;
  int v43;
  uint64_t v44;
  int *v45;
  int v46;
  BOOL v47;
  int v48;
  uint64_t v49;
  int *v50;
  int v51;
  BOOL v52;
  int v53;
  uint64_t v54;
  int *v55;
  int v56;
  WTF::StringImpl *v57;

  v4 = *(JSC::VM **)(result + 56);
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    v9 = (JSC::JSGlobalObject *)result;
    if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
    {
      result = JSC::throwTypeError();
      goto LABEL_68;
    }
    v11 = (JSC::Structure *)Object;
    WTF::AtomStringImpl::addLiteral();
    v13 = JSC::JSObject::get(v11, v9, (unint64_t)v57);
    if (v57)
    {
      if (*(_DWORD *)v57 == 2)
        WTF::StringImpl::destroy(v57, v12);
      else
        *(_DWORD *)v57 -= 2;
    }
    if (*((_DWORD *)v4 + 20))
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
      if ((result & 1) != 0)
        goto LABEL_68;
    }
    if (v13 == 10)
    {
      v5 = 0;
      goto LABEL_16;
    }
    v14 = (JSC::VM *)*((_QWORD *)v9 + 7);
    if (v13 >= 0xFFFE000000000000)
    {
      v32 = (_DWORD)v13 == 0;
    }
    else
    {
      *(_QWORD *)&v15 = v13 - 0x2000000000000;
      if (v13 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
      {
        v5 = v15 > 0.0 || v15 < 0.0;
LABEL_15:
        if (*((_DWORD *)v14 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v14);
          if ((result & 1) != 0)
            goto LABEL_68;
        }
LABEL_16:
        WTF::AtomStringImpl::addLiteral();
        v17 = JSC::JSObject::get(v11, v9, (unint64_t)v57);
        if (v57)
        {
          if (*(_DWORD *)v57 == 2)
            WTF::StringImpl::destroy(v57, v16);
          else
            *(_DWORD *)v57 -= 2;
        }
        if (*((_DWORD *)v4 + 20))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
          if ((result & 1) != 0)
            goto LABEL_68;
        }
        if (v17 == 10)
        {
          v6 = 0;
          goto LABEL_27;
        }
        v18 = (JSC::VM *)*((_QWORD *)v9 + 7);
        if (v17 >= 0xFFFE000000000000)
        {
          v37 = (_DWORD)v17 == 0;
        }
        else
        {
          if (v17 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
          {
            v6 = COERCE_DOUBLE(v17 - 0x2000000000000) > 0.0 || COERCE_DOUBLE(v17 - 0x2000000000000) < 0.0;
LABEL_26:
            if (*((_DWORD *)v18 + 20))
            {
              result = JSC::VM::hasExceptionsAfterHandlingTraps(v18);
              if ((result & 1) != 0)
                goto LABEL_68;
            }
LABEL_27:
            WTF::AtomStringImpl::addLiteral();
            v20 = JSC::JSObject::get(v11, v9, (unint64_t)v57);
            if (v57)
            {
              if (*(_DWORD *)v57 == 2)
                WTF::StringImpl::destroy(v57, v19);
              else
                *(_DWORD *)v57 -= 2;
            }
            if (*((_DWORD *)v4 + 20))
            {
              result = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
              if ((result & 1) != 0)
                goto LABEL_68;
            }
            if (v20 == 10)
            {
              v7 = 0;
              goto LABEL_38;
            }
            v21 = (JSC::VM *)*((_QWORD *)v9 + 7);
            if (v20 >= 0xFFFE000000000000)
            {
              v42 = (_DWORD)v20 == 0;
              goto LABEL_165;
            }
            *(_QWORD *)&v22 = v20 - 0x2000000000000;
            if (v20 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
            {
              if (v22 <= 0.0)
              {
                v7 = v22 < 0.0;
                goto LABEL_37;
              }
            }
            else
            {
              if ((v20 & 0xFFFE000000000002) != 0)
              {
                v7 = v20 == 7;
                goto LABEL_37;
              }
              v43 = *(unsigned __int8 *)(v20 + 5);
              if (v43 == 3)
              {
                v46 = *(_DWORD *)(v20 + 8);
LABEL_145:
                v42 = v46 == 0;
                goto LABEL_165;
              }
              if (v43 == 2)
              {
                v44 = *(_QWORD *)(v20 + 8);
                if ((v44 & 1) != 0)
                  v45 = (int *)(v20 + 16);
                else
                  v45 = (int *)(v44 + 4);
                v46 = *v45;
                goto LABEL_145;
              }
              if ((*(_BYTE *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE) + 0xA) & 1) != 0)
              {
                v42 = *(_QWORD *)(16 * (*(_DWORD *)v20 & 0xFFFFFFFE) + 0x28) == (_QWORD)v9;
LABEL_165:
                v7 = !v42;
LABEL_37:
                if (*((_DWORD *)v21 + 20))
                {
                  result = JSC::VM::hasExceptionsAfterHandlingTraps(v21);
                  if ((result & 1) != 0)
                    goto LABEL_68;
                }
LABEL_38:
                WTF::AtomStringImpl::addLiteral();
                v24 = JSC::JSObject::get(v11, v9, (unint64_t)v57);
                if (v57)
                {
                  if (*(_DWORD *)v57 == 2)
                    WTF::StringImpl::destroy(v57, v23);
                  else
                    *(_DWORD *)v57 -= 2;
                }
                if (*((_DWORD *)v4 + 20))
                {
                  result = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
                  if ((result & 1) != 0)
                    goto LABEL_68;
                }
                if (v24 == 10)
                {
                  v8 = 0;
                  goto LABEL_49;
                }
                v25 = (JSC::VM *)*((_QWORD *)v9 + 7);
                if (v24 >= 0xFFFE000000000000)
                {
                  v47 = (_DWORD)v24 == 0;
                  goto LABEL_169;
                }
                *(_QWORD *)&v26 = v24 - 0x2000000000000;
                if (v24 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
                {
                  if (v26 <= 0.0)
                  {
                    v8 = v26 < 0.0;
                    goto LABEL_48;
                  }
                }
                else
                {
                  if ((v24 & 0xFFFE000000000002) != 0)
                  {
                    v8 = v24 == 7;
                    goto LABEL_48;
                  }
                  v48 = *(unsigned __int8 *)(v24 + 5);
                  if (v48 == 3)
                  {
                    v51 = *(_DWORD *)(v24 + 8);
LABEL_149:
                    v47 = v51 == 0;
                    goto LABEL_169;
                  }
                  if (v48 == 2)
                  {
                    v49 = *(_QWORD *)(v24 + 8);
                    if ((v49 & 1) != 0)
                      v50 = (int *)(v24 + 16);
                    else
                      v50 = (int *)(v49 + 4);
                    v51 = *v50;
                    goto LABEL_149;
                  }
                  if ((*(_BYTE *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0xA) & 1) != 0)
                  {
                    v47 = *(_QWORD *)(16 * (*(_DWORD *)v24 & 0xFFFFFFFE) + 0x28) == (_QWORD)v9;
LABEL_169:
                    v8 = !v47;
LABEL_48:
                    if (*((_DWORD *)v25 + 20))
                    {
                      result = JSC::VM::hasExceptionsAfterHandlingTraps(v25);
                      if ((result & 1) != 0)
                        goto LABEL_68;
                    }
LABEL_49:
                    WTF::AtomStringImpl::addLiteral();
                    result = JSC::JSObject::get(v11, v9, (unint64_t)v57);
                    v28 = result;
                    if (v57)
                    {
                      if (*(_DWORD *)v57 == 2)
                        result = WTF::StringImpl::destroy(v57, v27);
                      else
                        *(_DWORD *)v57 -= 2;
                    }
                    if (*((_DWORD *)v4 + 20))
                    {
                      result = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
                      if ((result & 1) != 0)
                        goto LABEL_68;
                    }
                    if (v28 == 10)
                      goto LABEL_54;
                    result = *((_QWORD *)v9 + 7);
                    if (v28 >= 0xFFFE000000000000)
                    {
                      v52 = (_DWORD)v28 == 0;
                      goto LABEL_173;
                    }
                    *(_QWORD *)&v30 = v28 - 0x2000000000000;
                    if (v28 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
                    {
                      if (v30 <= 0.0)
                      {
                        v29 = v30 < 0.0;
                        goto LABEL_59;
                      }
                    }
                    else
                    {
                      if ((v28 & 0xFFFE000000000002) != 0)
                      {
                        v29 = v28 == 7;
                        goto LABEL_59;
                      }
                      v53 = *(unsigned __int8 *)(v28 + 5);
                      if (v53 == 3)
                      {
                        v56 = *(_DWORD *)(v28 + 8);
LABEL_153:
                        v52 = v56 == 0;
                        goto LABEL_173;
                      }
                      if (v53 == 2)
                      {
                        v54 = *(_QWORD *)(v28 + 8);
                        if ((v54 & 1) != 0)
                          v55 = (int *)(v28 + 16);
                        else
                          v55 = (int *)(v54 + 4);
                        v56 = *v55;
                        goto LABEL_153;
                      }
                      if ((*(_BYTE *)(16 * (*(_DWORD *)v28 & 0xFFFFFFFE) + 0xA) & 1) != 0)
                      {
                        v52 = *(_QWORD *)(16 * (*(_DWORD *)v28 & 0xFFFFFFFE) + 0x28) == (_QWORD)v9;
LABEL_173:
                        v29 = !v52;
LABEL_59:
                        if (!*(_DWORD *)(result + 80))
                          goto LABEL_60;
                        result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)result);
                        if ((result & 1) == 0)
                          goto LABEL_60;
LABEL_68:
                        v31 = 1;
                        goto LABEL_61;
                      }
                    }
                    v29 = 1;
                    goto LABEL_59;
                  }
                }
                v8 = 1;
                goto LABEL_48;
              }
            }
            v7 = 1;
            goto LABEL_37;
          }
          if ((v17 & 0xFFFE000000000002) != 0)
          {
            v6 = v17 == 7;
            goto LABEL_26;
          }
          v38 = *(unsigned __int8 *)(v17 + 5);
          if (v38 == 3)
          {
            v41 = *(_DWORD *)(v17 + 8);
          }
          else
          {
            if (v38 != 2)
            {
              if ((*(_BYTE *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0xA) & 1) == 0)
              {
                v6 = 1;
                goto LABEL_26;
              }
              v37 = *(_QWORD *)(16 * (*(_DWORD *)v17 & 0xFFFFFFFE) + 0x28) == (_QWORD)v9;
              goto LABEL_161;
            }
            v39 = *(_QWORD *)(v17 + 8);
            if ((v39 & 1) != 0)
              v40 = (int *)(v17 + 16);
            else
              v40 = (int *)(v39 + 4);
            v41 = *v40;
          }
          v37 = v41 == 0;
        }
LABEL_161:
        v6 = !v37;
        goto LABEL_26;
      }
      if ((v13 & 0xFFFE000000000002) != 0)
      {
        v5 = v13 == 7;
        goto LABEL_15;
      }
      v33 = *(unsigned __int8 *)(v13 + 5);
      if (v33 == 3)
      {
        v36 = *(_DWORD *)(v13 + 8);
      }
      else
      {
        if (v33 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
            v5 = 1;
            goto LABEL_15;
          }
          v32 = *(_QWORD *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x28) == (_QWORD)v9;
          goto LABEL_157;
        }
        v34 = *(_QWORD *)(v13 + 8);
        if ((v34 & 1) != 0)
          v35 = (int *)(v13 + 16);
        else
          v35 = (int *)(v34 + 4);
        v36 = *v35;
      }
      v32 = v36 == 0;
    }
LABEL_157:
    v5 = !v32;
    goto LABEL_15;
  }
  v5 = 0;
  v6 = 0;
  v7 = 0;
  v8 = 0;
LABEL_54:
  v29 = 0;
LABEL_60:
  v31 = 0;
  *(_BYTE *)a3 = v8;
  *(_BYTE *)(a3 + 1) = v29;
  *(_BYTE *)(a3 + 2) = v7;
  *(_BYTE *)(a3 + 3) = v5;
  *(_BYTE *)(a3 + 4) = v6;
LABEL_61:
  *(_DWORD *)(a3 + 8) = v31;
  return result;
}

uint64_t WebCore::JSClipboard::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEventTarget::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSClipboard>,(WebCore::DOMConstructorID)59>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 472);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventTarget>,(WebCore::DOMConstructorID)450>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSClipboard>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSClipboard::s_info + ~((_QWORD)&WebCore::JSClipboard::s_info << 32)) ^ (((unint64_t)&WebCore::JSClipboard::s_info + ~((_QWORD)&WebCore::JSClipboard::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSClipboard::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSClipboard::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEventTarget::prototype((WebCore::JSEventTarget *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSClipboardPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSClipboardPrototype::create((WebCore::JSClipboardPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSClipboard::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSClipboard::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 472) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsClipboardConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSClipboardPrototype::s_info != (char **)(16
                                                         * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSClipboard>,(WebCore::DOMConstructorID)59>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSClipboardOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  void *v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  void *v15;
  uint64_t result;
  uint64_t v17;
  void *v18;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 72);
  if (!v5)
    return 0;
  v6 = *(void **)(v5 + 8);
  if (!v6)
    return 0;
  if (a5)
  {
    *a5 = "Reachable from Navigator";
    a5[1] = 25;
  }
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) != v8)
  {
    v9 = v8[1];
    v10 = ((unint64_t)v6 + ~((_QWORD)v6 << 32)) ^ (((unint64_t)v6 + ~((_QWORD)v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(void **)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v6 == v15)
        goto LABEL_14;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x194944588);
      }
    }
  }
  v17 = a4;
  v18 = v6;
  result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, v6);
  a4 = v17;
  v6 = v18;
  if ((_DWORD)result)
  {
LABEL_14:
    if (*(_BYTE *)(a4 + 131))
      (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v6);
    return 1;
  }
  return result;
}

void WebCore::JSClipboardOwner::finalize(uint64_t a1, WTF::StringImpl *a2, uint64_t a3)
{
  WebCore::Clipboard *v3;
  int v4;
  _DWORD *v5;
  bmalloc::api *v6;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  WebCore::Clipboard *v16;
  int v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;

  v3 = *(WebCore::Clipboard **)(*(_QWORD *)a2 + 24);
  v4 = *((_DWORD *)v3 + 6);
  *((_DWORD *)v3 + 6) = v4 + 1;
  v5 = (_DWORD *)((char *)v3 + 8);
  if (!v3)
    v5 = 0;
  if (*(_DWORD *)(a3 + 48))
  {
    v10 = *(_QWORD *)(a3 + 32);
    v8 = (uint64_t *)(a3 + 32);
    v9 = v10;
    if (v10)
    {
      v11 = *(_DWORD *)(v9 - 8);
      v12 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
      v13 = 9 * ((v12 + ~(v12 << 13)) ^ ((v12 + ~(v12 << 13)) >> 8));
      v14 = (v13 ^ (v13 >> 15)) + ~((v13 ^ (v13 >> 15)) << 27);
      v15 = v11 & ((v14 >> 31) ^ v14);
      v16 = *(WebCore::Clipboard **)(v9 + 16 * v15);
      if (v16 != v3)
      {
        v17 = 1;
        while (v16)
        {
          v15 = ((_DWORD)v15 + v17) & v11;
          v16 = *(WebCore::Clipboard **)(v9 + 16 * v15);
          ++v17;
          if (v16 == v3)
            goto LABEL_14;
        }
        v15 = *(unsigned int *)(v9 - 4);
      }
LABEL_14:
      if (v15 != *(_DWORD *)(v9 - 4))
      {
        v18 = (_QWORD *)(v9 + 16 * v15);
        *v18 = -1;
        v21 = v18[1];
        v20 = v18 + 1;
        v19 = v21;
        if (v21)
        {
          *(_QWORD *)(v19 + 8) = 3;
          *v20 = 0;
        }
        ++*(_DWORD *)(*v8 - 16);
        v22 = *v8;
        if (*v8)
          v23 = *(_DWORD *)(v22 - 12) - 1;
        else
          v23 = -1;
        *(_DWORD *)(v22 - 12) = v23;
        v24 = *v8;
        if (*v8)
        {
          v25 = 6 * *(_DWORD *)(v24 - 12);
          v26 = *(_DWORD *)(v24 - 4);
          if (v25 < v26 && v26 >= 9)
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v8, v26 >> 1, 0);
        }
      }
    }
    v4 = *((_DWORD *)v3 + 6) - 1;
  }
  else if (*(_QWORD *)v5)
  {
    *(_QWORD *)(*(_QWORD *)v5 + 8) = 3;
    *(_QWORD *)v5 = 0;
  }
  if (v4)
  {
    *((_DWORD *)v3 + 6) = v4;
  }
  else
  {
    WebCore::Clipboard::~Clipboard(v3, a2);
    bmalloc::api::isoDeallocate(v6, v7);
  }
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSClipboardEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  JSC::VM *v5;
  uint64_t v7;
  int v8;
  JSC::JSCell *v9;
  JSC::VM *v10;
  _BOOL4 v11;
  _BOOL4 v12;
  _BOOL4 v13;
  uint64_t Object;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSC::VM *v17;
  double v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  unint64_t v26;
  JSC::VM *v27;
  double v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  unint64_t v31;
  void *v32;
  WebCore::JSDOMGlobalObject *v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  unsigned int v38;
  int v39;
  JSC::VM *v40;
  uint64_t v41;
  unsigned int v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char **v47;
  int v48;
  unint64_t v49;
  WebCore::JSEvent *v50;
  JSC::JSCell *v51;
  unint64_t Structure;
  JSC::Structure *v53;
  JSC::JSCell *v54;
  uint64_t v55;
  JSCell *v56;
  JSC::JSCell *v57;
  JSC::JSGlobalObject *v58;
  JSC::JSObject *v59;
  JSC::JSGlobalObject *v60;
  JSC::VM *v61;
  JSC::JSObject *v62;
  JSC::Structure *v63;
  JSC::VM *FunctionRealm;
  uint64_t v65;
  unsigned int v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char **v71;
  int v72;
  JSC::JSCell *v73;
  unint64_t v74;
  JSC::Structure *v75;
  JSC::JSCell *v76;
  uint64_t v77;
  unint64_t SubclassStructure;
  _DWORD *v79;
  uint64_t v80;
  uint64_t v82;
  _BOOL4 v83;
  uint64_t v84;
  WTF *v86;
  void *v87;
  JSValue v88;
  BOOL v89;
  int v90;
  uint64_t v91;
  int *v92;
  int v93;
  BOOL v94;
  int v95;
  uint64_t v96;
  int *v97;
  int v98;
  BOOL v99;
  int v100;
  uint64_t v101;
  int *v102;
  int v103;
  JSC::VM *v104;
  _BYTE v105[8];
  uint64_t v106;
  int v107;
  WTF::StringImpl *v108;
  int v109;
  JSC::VM *v110;
  unint64_t v111;

  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v88.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v5, a1, v88);
  }
  v7 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v108);
  v8 = v109;
  if (v109)
  {
    v56 = 0;
    goto LABEL_93;
  }
  v104 = v5;
  if ((unint64_t)(*(int *)(a2 + 32) - 3) >= 0xFFFFFFFFFFFFFFFELL)
  {
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v10 = 0;
    goto LABEL_48;
  }
  v9 = *(JSC::JSCell **)(a2 + 56);
  v10 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v110 = v10;
  if (((unint64_t)v9 & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    if (((unint64_t)v9 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v9)) == 0)
    {
LABEL_105:
      JSC::throwTypeError();
LABEL_106:
      v56 = 0;
      v80 = 1;
      v107 = 1;
      goto LABEL_92;
    }
    v2 = Object;
    WTF::AtomStringImpl::addLiteral();
    v15 = (WTF::StringImpl *)v111;
    v3 = JSC::JSObject::get((JSC::Structure *)v2, a1, v111);
    if (v15)
    {
      if (*(_DWORD *)v15 == 2)
        WTF::StringImpl::destroy(v15, v16);
      else
        *(_DWORD *)v15 -= 2;
    }
    if (*((_DWORD *)v10 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) != 0)
      goto LABEL_106;
    if (v3 == 10)
    {
      v11 = 0;
      goto LABEL_20;
    }
    v17 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v3 >= 0xFFFE000000000000)
      goto LABEL_142;
    *(_QWORD *)&v18 = v3 - 0x2000000000000;
    if (v3 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      if (v18 <= 0.0)
      {
        v11 = v18 < 0.0;
        goto LABEL_19;
      }
    }
    else
    {
      if ((v3 & 0xFFFE000000000002) != 0)
      {
        v11 = v3 == 7;
        goto LABEL_19;
      }
      v90 = *(unsigned __int8 *)(v3 + 5);
      if (v90 == 3)
      {
        v93 = *(_DWORD *)(v3 + 8);
LABEL_170:
        v89 = v93 == 0;
        goto LABEL_182;
      }
      if (v90 == 2)
      {
        v91 = *(_QWORD *)(v3 + 8);
        if ((v91 & 1) != 0)
          v92 = (int *)(v3 + 16);
        else
          v92 = (int *)(v91 + 4);
        v93 = *v92;
        goto LABEL_170;
      }
      if ((*(_BYTE *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0xA) & 1) != 0)
      {
        v89 = *(_QWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
        goto LABEL_182;
      }
    }
    v11 = 1;
    goto LABEL_19;
  }
  v11 = 0;
  v12 = 0;
  v13 = 0;
LABEL_47:
  v10 = 0;
LABEL_48:
  while (1)
  {
    v105[0] = v11;
    v105[1] = v12;
    v105[2] = v13;
    v107 = 0;
    if (!v109)
      break;
    v17 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_142:
    v89 = (_DWORD)v3 == 0;
LABEL_182:
    v11 = !v89;
LABEL_19:
    if (*((_DWORD *)v17 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) != 0)
      goto LABEL_106;
LABEL_20:
    WTF::AtomStringImpl::addLiteral();
    v19 = (WTF::StringImpl *)v111;
    v21 = JSC::JSObject::get((JSC::Structure *)v2, a1, v111);
    if (v19)
    {
      if (*(_DWORD *)v19 == 2)
        WTF::StringImpl::destroy(v19, v20);
      else
        *(_DWORD *)v19 -= 2;
    }
    if (*((_DWORD *)v10 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) != 0)
      goto LABEL_106;
    if (v21 == 10)
    {
      v12 = 0;
      goto LABEL_31;
    }
    v22 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v21 >= 0xFFFE000000000000)
    {
      v94 = (_DWORD)v21 == 0;
      goto LABEL_186;
    }
    *(_QWORD *)&v23 = v21 - 0x2000000000000;
    if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      if ((v21 & 0xFFFE000000000002) != 0)
      {
        v12 = v21 == 7;
        goto LABEL_30;
      }
      v95 = *(unsigned __int8 *)(v21 + 5);
      if (v95 == 3)
      {
        v98 = *(_DWORD *)(v21 + 8);
      }
      else
      {
        if (v95 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_176:
            v12 = 1;
            goto LABEL_30;
          }
          v94 = *(_QWORD *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
          goto LABEL_186;
        }
        v96 = *(_QWORD *)(v21 + 8);
        if ((v96 & 1) != 0)
          v97 = (int *)(v21 + 16);
        else
          v97 = (int *)(v96 + 4);
        v98 = *v97;
      }
      v94 = v98 == 0;
LABEL_186:
      v12 = !v94;
      goto LABEL_30;
    }
    if (v23 > 0.0)
      goto LABEL_176;
    v12 = v23 < 0.0;
LABEL_30:
    if (*((_DWORD *)v22 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v22) & 1) != 0)
      goto LABEL_106;
LABEL_31:
    WTF::AtomStringImpl::addLiteral();
    v24 = (WTF::StringImpl *)v111;
    v26 = JSC::JSObject::get((JSC::Structure *)v2, a1, v111);
    if (v24)
    {
      if (*(_DWORD *)v24 == 2)
        WTF::StringImpl::destroy(v24, v25);
      else
        *(_DWORD *)v24 -= 2;
    }
    if (*((_DWORD *)v10 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) != 0)
      goto LABEL_106;
    if (v26 == 10)
    {
      v13 = 0;
      goto LABEL_42;
    }
    v27 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v26 >= 0xFFFE000000000000)
    {
      v99 = (_DWORD)v26 == 0;
      goto LABEL_190;
    }
    *(_QWORD *)&v28 = v26 - 0x2000000000000;
    if (v26 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      if ((v26 & 0xFFFE000000000002) != 0)
      {
        v13 = v26 == 7;
        goto LABEL_41;
      }
      v100 = *(unsigned __int8 *)(v26 + 5);
      if (v100 == 3)
      {
        v103 = *(_DWORD *)(v26 + 8);
      }
      else
      {
        if (v100 != 2)
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_180:
            v13 = 1;
            goto LABEL_41;
          }
          v99 = *(_QWORD *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
          goto LABEL_190;
        }
        v101 = *(_QWORD *)(v26 + 8);
        if ((v101 & 1) != 0)
          v102 = (int *)(v26 + 16);
        else
          v102 = (int *)(v101 + 4);
        v103 = *v102;
      }
      v99 = v103 == 0;
LABEL_190:
      v13 = !v99;
      goto LABEL_41;
    }
    if (v28 > 0.0)
      goto LABEL_180;
    v13 = v28 < 0.0;
LABEL_41:
    if (*((_DWORD *)v27 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v27) & 1) != 0)
      goto LABEL_106;
LABEL_42:
    WTF::AtomStringImpl::addLiteral();
    v3 = v111;
    v2 = JSC::JSObject::get((JSC::Structure *)v2, a1, v111);
    if (v3)
    {
      if (*(_DWORD *)v3 == 2)
        WTF::StringImpl::destroy((WTF::StringImpl *)v3, v29);
      else
        *(_DWORD *)v3 -= 2;
    }
    if (*((_DWORD *)v10 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v10) & 1) != 0)
      goto LABEL_106;
    if ((v2 | 8) == 0xA)
      goto LABEL_47;
    v111 = *((_QWORD *)a1 + 7);
    if ((v2 & 0xFFFE000000000002) != 0)
      goto LABEL_105;
    v82 = *(unsigned int *)(16 * (*(_DWORD *)v2 & 0xFFFFFFFE) + 0x4C);
    v83 = *(_DWORD *)(16 * (*(_DWORD *)v2 & 0xFFFFFFFE) + 0x4C) != 0;
    if ((_DWORD)v82)
    {
      v84 = 16 * v82;
      if ((char **)v84 != &WebCore::JSDataTransfer::s_info)
      {
        do
        {
          v84 = *(_QWORD *)(v84 + 16);
          v83 = v84 != 0;
        }
        while ((char **)v84 != &WebCore::JSDataTransfer::s_info && v84 != 0);
      }
    }
    if (!v83)
      goto LABEL_105;
    v10 = *(JSC::VM **)(v2 + 24);
    if (!v10)
      goto LABEL_105;
    ++*(_DWORD *)v10;
  }
  v30 = v108;
  v108 = 0;
  v106 = 0;
  v31 = bmalloc::api::isoAllocate();
  WTF::MonotonicTime::now((WTF::MonotonicTime *)v31);
  *(_QWORD *)(v31 + 8) = 0;
  if (v12)
    v35 = 4;
  else
    v35 = 0;
  if (v13)
    v36 = 8;
  else
    v36 = 0;
  if (v11)
    v37 = 1736706;
  else
    v37 = 1736704;
  v38 = v37 | v35 | v36 | (v30 != 0) | *(_DWORD *)(v31 + 20) & 0xFFC00000;
  *(_DWORD *)(v31 + 16) = 1;
  *(_DWORD *)(v31 + 20) = v38;
  if (v30)
  {
    *(_DWORD *)v30 += 2;
    v38 = *(_DWORD *)(v31 + 20);
  }
  *(_QWORD *)(v31 + 24) = v30;
  *(_QWORD *)(v31 + 32) = 0;
  *(_QWORD *)(v31 + 40) = 0;
  *(_QWORD *)(v31 + 48) = 0;
  *(_QWORD *)(v31 + 56) = v34;
  *(_QWORD *)(v31 + 64) = 0;
  *(_DWORD *)(v31 + 20) = v38 | 0x4000;
  *(_QWORD *)v31 = off_1E33A1270;
  if (v10)
  {
    v39 = (*(_DWORD *)v10)++;
    *(_QWORD *)(v31 + 72) = v10;
    v111 = v31;
    if (v39)
    {
      *(_DWORD *)v10 = v39;
    }
    else
    {
      WebCore::DataTransfer::~DataTransfer(v10, v32);
      WTF::fastFree(v86, v87);
    }
  }
  else
  {
    *(_QWORD *)(v31 + 72) = 0;
    v111 = v31;
  }
  if (v30)
  {
    if (*(_DWORD *)v30 == 2)
      WTF::StringImpl::destroy(v30, (WTF::StringImpl *)v32);
    else
      *(_DWORD *)v30 -= 2;
  }
  if (*(void (***)(WebCore::ClipboardEvent *__hidden))v31 != off_1E33A1270)
  {
    __break(0xC471u);
    JUMPOUT(0x194944FC0);
  }
  v40 = *(JSC::VM **)(v7 + 40);
  v41 = *((_QWORD *)v40 + 412);
  if (!v41)
    goto LABEL_73;
  v42 = *(_DWORD *)(v41 - 8);
  v43 = ((unint64_t)&WebCore::JSClipboardEvent::s_info + ~((_QWORD)&WebCore::JSClipboardEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSClipboardEvent::s_info + ~((_QWORD)&WebCore::JSClipboardEvent::s_info << 32)) >> 22);
  v44 = 9 * ((v43 + ~(v43 << 13)) ^ ((v43 + ~(v43 << 13)) >> 8));
  v45 = (v44 ^ (v44 >> 15)) + ~((v44 ^ (v44 >> 15)) << 27);
  v46 = v42 & ((v45 >> 31) ^ v45);
  v47 = *(char ***)(v41 + 16 * v46);
  if (v47 == &WebCore::JSClipboardEvent::s_info)
  {
LABEL_72:
    v49 = *(_QWORD *)(v41 + 16 * v46 + 8);
    if (!v49)
      goto LABEL_73;
  }
  else
  {
    v48 = 1;
    while (v47)
    {
      v46 = ((_DWORD)v46 + v48) & v42;
      v47 = *(char ***)(v41 + 16 * v46);
      ++v48;
      if (v47 == &WebCore::JSClipboardEvent::s_info)
        goto LABEL_72;
    }
LABEL_73:
    v50 = (WebCore::JSEvent *)*((_QWORD *)v40 + 7);
    v51 = (JSC::JSCell *)WebCore::JSEvent::prototype(v50, *(JSC::VM **)(v7 + 40), v33);
    Structure = WebCore::JSClipboardEventPrototype::createStructure((uint64_t *)v50, (uint64_t)v40, v51);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v54 = (JSC::JSCell *)WebCore::JSClipboardEventPrototype::create(v50, v40, Structure, v53);
    v55 = WebCore::JSClipboardEvent::createStructure((uint64_t *)v50, (uint64_t)v40, v54);
    v49 = WebCore::cacheDOMStructure((JSCell *)v40, v55, (uint64_t)&WebCore::JSClipboardEvent::s_info);
  }
  v56 = (JSCell *)WebCore::JSClipboardEvent::create(v49, v40, (uint64_t *)&v111);
  WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*((_QWORD *)v40 + 415), v31, (uint64_t)v56);
  v57 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v57 & 0xFFFE000000000002) == 0)
  {
    v58 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v57);
    if (v58)
    {
      v60 = v58;
      if (v58 != *(JSC::JSGlobalObject **)(a2 + 24))
      {
        v61 = (JSC::VM *)*((_QWORD *)a1 + 7);
        FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v58, v59);
        if (!*((_DWORD *)v61 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v61) & 1) == 0)
        {
          v65 = *((_QWORD *)FunctionRealm + 412);
          if (v65)
          {
            v66 = *(_DWORD *)(v65 - 8);
            v67 = ((unint64_t)&WebCore::JSClipboardEvent::s_info
                 + ~((_QWORD)&WebCore::JSClipboardEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSClipboardEvent::s_info
                                                                          + ~((_QWORD)&WebCore::JSClipboardEvent::s_info << 32)) >> 22);
            v68 = 9 * ((v67 + ~(v67 << 13)) ^ ((v67 + ~(v67 << 13)) >> 8));
            v69 = (v68 ^ (v68 >> 15)) + ~((v68 ^ (v68 >> 15)) << 27);
            v70 = v66 & ((v69 >> 31) ^ v69);
            v71 = *(char ***)(v65 + 16 * v70);
            if (v71 == &WebCore::JSClipboardEvent::s_info)
            {
LABEL_83:
              v62 = *(JSC::JSObject **)(v65 + 16 * v70 + 8);
              if (v62)
              {
LABEL_85:
                SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v60, v62, v63);
                if (!*((_DWORD *)v61 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v61) & 1) == 0)
                  JSC::JSObject::setStructure(v56, v61, SubclassStructure);
                goto LABEL_87;
              }
            }
            else
            {
              v72 = 1;
              while (v71)
              {
                v70 = ((_DWORD)v70 + v72) & v66;
                v71 = *(char ***)(v65 + 16 * v70);
                ++v72;
                if (v71 == &WebCore::JSClipboardEvent::s_info)
                  goto LABEL_83;
              }
            }
          }
          v73 = (JSC::JSCell *)WebCore::JSEvent::prototype(v61, FunctionRealm, v62);
          v74 = WebCore::JSClipboardEventPrototype::createStructure((uint64_t *)v61, (uint64_t)FunctionRealm, v73);
          *(_DWORD *)(v74 + 16) |= 0x80000u;
          v76 = (JSC::JSCell *)WebCore::JSClipboardEventPrototype::create(v61, FunctionRealm, v74, v75);
          v77 = WebCore::JSClipboardEvent::createStructure((uint64_t *)v61, (uint64_t)FunctionRealm, v76);
          v62 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v77, (uint64_t)&WebCore::JSClipboardEvent::s_info);
          goto LABEL_85;
        }
      }
    }
  }
LABEL_87:
  if (*((_DWORD *)v104 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v104) & 1) != 0)
    v56 = 0;
  v79 = (_DWORD *)v111;
  v111 = 0;
  if (v79)
  {
    if (v79[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v79 + 8))(v79);
    else
      --v79[4];
  }
  v80 = 0;
LABEL_92:
  ((void (*)(unint64_t *, _BYTE *))off_1E324FCA0[v80])(&v111, v105);
  v8 = v109;
LABEL_93:
  if (v8 != -1)
    ((void (*)(_BYTE *, WTF::StringImpl **))off_1E324FCB0[v8])(v105, &v108);
  return v56;
}

uint64_t WebCore::JSClipboardEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSClipboardEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSClipboardEventPrototype::create(WebCore::JSClipboardEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSClipboardEvent::s_info, (uint64_t)&WebCore::JSClipboardEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSClipboardEvent>,(WebCore::DOMConstructorID)419>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3352);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSClipboardEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSClipboardEvent::s_info + ~((_QWORD)&WebCore::JSClipboardEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSClipboardEvent::s_info + ~((_QWORD)&WebCore::JSClipboardEvent::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSClipboardEvent::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSClipboardEvent::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEvent::prototype((WebCore::JSEvent *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSClipboardEventPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSClipboardEventPrototype::create((WebCore::JSClipboardEventPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSClipboardEvent::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSClipboardEvent::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3352) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsClipboardEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSClipboardEventPrototype::s_info != (char **)(16
                                                              * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSClipboardEvent>,(WebCore::DOMConstructorID)419>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsClipboardEvent_clipboardData(uint64_t a1, uint64_t a2)
{
  WebCore::DataTransfer *v2;

  v2 = *(WebCore::DataTransfer **)(*(_QWORD *)(a2 + 24) + 72);
  if (v2)
    return WebCore::wrap<WebCore::DataTransfer>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v2);
  else
    return 2;
}

uint64_t WebCore::JSClipboardEvent::subspaceForImpl(WebCore::JSClipboardEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3432);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3432))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3432);
    *(_QWORD *)(v8 + 3432) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3432);
  *(_QWORD *)(v3 + 3432) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSClipboardItem>::construct(JSC *this, uint64_t a2)
{
  JSC::VM *v3;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t *v11;
  JSValue v12;
  int v13;
  WTF::StringImpl *v14;
  JSC::JSGlobalObject *v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  WebCore::DOMGuardedObject *v27;
  WebCore::DOMGuardedObject *v28;
  int v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  WebCore::DOMGuardedObject **v33;
  WebCore::DOMGuardedObject **v34;
  WTF::StringImpl **v35;
  WebCore::DOMGuardedObject *v36;
  WebCore::DOMGuardedObject *v37;
  WTF::StringImpl *v38;
  int v39;
  WTF::StringImpl *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 *v44;
  int v46;
  JSCell *v47;
  int v48;
  JSC::VM *v49;
  uint64_t v50;
  uint64_t v51;
  WTF *v52;
  uint64_t v53;
  _DWORD **v54;
  _DWORD *v55;
  WTF::StringImpl *v56;
  JSC::VM *v57;
  uint64_t Object;
  JSC::Structure *v59;
  uint64_t v60;
  WTF::StringImpl *v61;
  WTF::StringImpl *v62;
  uint64_t v63;
  JSC::VM *v64;
  uint64_t v65;
  int v66;
  const char *v67;
  int v68;
  int v69;
  char v70;
  JSC::VM *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  JSC::JSCell *v76;
  JSC::JSGlobalObject *v77;
  JSC::JSObject *v78;
  JSC::JSGlobalObject *v79;
  JSC::VM *v80;
  JSC::Structure *v81;
  uint64_t FunctionRealm;
  uint64_t v83;
  unsigned int v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  char **v89;
  int v90;
  JSC::JSObject *v91;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v93;
  JSC::Structure *v94;
  JSC::JSCell *v95;
  uint64_t v96;
  unint64_t SubclassStructure;
  WTF *v99;
  void *v100;
  char **v101;
  uint64_t v102;
  WTF::StringImpl **v103;
  uint64_t v104;
  WTF::StringImpl *v105;
  WTF *v106;
  uint16x8_t v108;
  uint16x8_t v109;
  JSValue v110;
  int v111;
  uint16x8_t v112;
  uint16x8_t v113;
  int v115;
  uint64_t v116;
  JSC::VM *v117;
  uint64_t v118;
  int v119;
  WTF::StringImpl *v120;
  WebCore::DOMGuardedObject *v121;
  JSC::VM *v122;
  unsigned int v123;
  JSC::JSGlobalObject *v124[2];
  unint64_t v125;
  unsigned __int8 *v126;
  uint64_t v127;
  uint64_t v128;
  __int16 v129;
  __int16 v130;
  char v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  JSC::VM *v138;
  __int16 v139;
  JSC::VM *v140;
  uint64_t v141;
  uint64_t v142;

  v3 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v110.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v3, this, v110);
  }
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(unsigned __int8 **)(a2 + 48);
  v142 = *((_QWORD *)this + 7);
  if (((unint64_t)v6 & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    if (((unint64_t)v6 & 0xFFFE000000000002) != 0 || v6[5] <= 0x16u)
    {
      JSC::throwTypeError();
      v47 = 0;
      v48 = 1;
      v119 = 1;
      goto LABEL_148;
    }
    v140 = 0;
    v141 = 0;
    v7 = WTF::fastMalloc((WTF *)0xB8);
    *(_DWORD *)v7 = 1;
    *(_QWORD *)(v7 + 8) = v7 + 24;
    *(_QWORD *)(v7 + 16) = 20;
    v136 = v7;
    v137 = 0;
    v138 = v3;
    v139 = 259;
    (*(void (**)(unsigned __int8 *, JSC *, uint64_t *, _QWORD))(16
                                                                        * *(unsigned int *)(16
                                                                                          * (*(_DWORD *)v6 & 0xFFFFFFFE)
                                                                                          + 0x4C)
                                                                        + 0x78))(v6, this, &v136, 0);
    if (*((_DWORD *)v3 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v3))
    {
      v119 = 1;
      goto LABEL_86;
    }
    v9 = *(unsigned int *)(v136 + 20);
    if (!(_DWORD)v9)
    {
      v49 = 0;
      v50 = 0;
LABEL_85:
      v140 = 0;
      v117 = v49;
      HIDWORD(v141) = 0;
      v118 = v50;
      v119 = 0;
LABEL_86:
      if (v137)
        WTF::fastFree((WTF *)(v137 - 16), v8);
      v51 = v136;
      v136 = 0;
      if (v51)
      {
        if (*(_DWORD *)v51 == 1)
          goto LABEL_161;
        --*(_DWORD *)v51;
      }
      goto LABEL_91;
    }
    v116 = v5;
    v10 = *(unint64_t **)(v136 + 8);
    v11 = &v10[v9];
    while (1)
    {
      v125 = 0xFFFFFFFF00000000;
      v126 = v6;
      v127 = 0;
      v128 = 0;
      v129 = 0;
      v130 = 2;
      v131 = 0;
      LOBYTE(v132) = 0;
      v133 = 0;
      v134 = 0;
      v135 = 0;
      v13 = (*(uint64_t (**)(unsigned __int8 *, JSC *, unint64_t, JSC::JSGlobalObject **))(16 * *(unsigned int *)(16 * (*(_DWORD *)v6 & 0xFFFFFFFE) + 0x4C) + 0x68))(v6, this, *v10, v124);
      if (*((_DWORD *)v3 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v3))
      {
        v119 = 1;
LABEL_216:
        v5 = v116;
        if (v133)
        {
          v111 = *(_DWORD *)(v132 + 4);
          if (!v111)
          {
            __break(0xC471u);
            JUMPOUT(0x194946970);
          }
          *(_DWORD *)(v132 + 4) = v111 - 1;
        }
        goto LABEL_86;
      }
      if (v13 && (v125 & 4) == 0)
        break;
LABEL_49:
      if (v133)
      {
        v41 = *(_DWORD *)(v132 + 4);
        if (!v41)
        {
          __break(0xC471u);
          JUMPOUT(0x1949467A0);
        }
        *(_DWORD *)(v132 + 4) = v41 - 1;
      }
      if (++v10 == v11)
      {
        v49 = v140;
        v50 = v141;
        v5 = v116;
        goto LABEL_85;
      }
    }
    v14 = (WTF::StringImpl *)*v10;
    if (*v10)
    {
      if ((*((_BYTE *)v14 + 16) & 0x20) != 0)
      {
        v122 = (JSC::VM *)*((_QWORD *)this + 7);
        JSC::throwTypeError();
        v14 = 0;
      }
      else
      {
        *(_DWORD *)v14 += 2;
      }
    }
    if (*((_DWORD *)v3 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v3))
    {
      v39 = 1;
      v119 = 1;
      if (!v14)
        goto LABEL_48;
      goto LABEL_46;
    }
    if (v131)
    {
      v42 = JSC::JSObject::get((JSC::Structure *)v6, this, *v10);
    }
    else
    {
      if (HIBYTE(v129) == 1)
      {
        v15 = v124[0];
LABEL_19:
        if (*((_DWORD *)v3 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v3))
        {
          v39 = 1;
          v119 = 1;
LABEL_45:
          if (!v14)
            goto LABEL_48;
LABEL_46:
          if (*(_DWORD *)v14 == 2)
            WTF::StringImpl::destroy(v14, (WTF::StringImpl *)v8);
          else
            *(_DWORD *)v14 -= 2;
LABEL_48:
          if (v39)
            goto LABEL_216;
          goto LABEL_49;
        }
        v16 = (WTF::StringImpl *)*((_QWORD *)this + 7);
        v120 = v16;
        v17 = *(unsigned int *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C);
        v18 = *(_DWORD *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x4C) != 0;
        if ((_DWORD)v17)
        {
          v19 = 16 * v17;
          if ((char **)v19 != &WebCore::JSDOMGlobalObject::s_info)
          {
            do
            {
              v19 = *(_QWORD *)(v19 + 16);
              v18 = v19 != 0;
            }
            while ((char **)v19 != &WebCore::JSDOMGlobalObject::s_info && v19 != 0);
          }
        }
        if (!v18)
        {
          __break(0xC471u);
          JUMPOUT(0x194946828);
        }
        v21 = JSC::JSPromise::resolvedPromise(this, v15, v12);
        if (!*((_QWORD *)v16 + 2))
        {
          v26 = v21;
          v27 = (WebCore::DOMGuardedObject *)WTF::fastMalloc((WTF *)0x28);
          v28 = WebCore::DOMGuardedObject::DOMGuardedObject(v27, (unint64_t)this, v26);
          *(_QWORD *)v28 = &off_1E3251870;
          v123 = 0;
          v121 = v28;
          v122 = 0;
          v120 = v14;
          v29 = HIDWORD(v141);
          if (HIDWORD(v141) == (_DWORD)v141)
          {
            v30 = (_QWORD *)WTF::Vector<WTF::KeyValuePair<WTF::String,WTF::Ref<WebCore::DOMPromise,WTF::RawPtrTraits<WebCore::DOMPromise>,WTF::DefaultRefDerefTraits<WebCore::DOMPromise>>>,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>((unsigned int *)&v140, HIDWORD(v141) + 1, (unint64_t)&v120);
            v29 = HIDWORD(v141);
            v31 = (_QWORD *)((char *)v140 + 16 * HIDWORD(v141));
            v32 = *v30;
            *v30 = 0;
            v33 = (WebCore::DOMGuardedObject **)(v30 + 1);
            *v31 = v32;
            v34 = (WebCore::DOMGuardedObject **)(v31 + 1);
          }
          else
          {
            v35 = (WTF::StringImpl **)((char *)v140 + 16 * HIDWORD(v141));
            v120 = 0;
            *v35 = v14;
            v34 = v35 + 1;
            v33 = &v121;
          }
          v36 = *v33;
          *v33 = 0;
          *v34 = v36;
          HIDWORD(v141) = v29 + 1;
          v37 = v121;
          v121 = 0;
          if (v37)
          {
            if (*((_DWORD *)v37 + 4) == 1)
              (*(void (**)(WebCore::DOMGuardedObject *))(*(_QWORD *)v37 + 16))(v37);
            else
              --*((_DWORD *)v37 + 4);
          }
          v38 = v120;
          v120 = 0;
          if (v38)
          {
            if (*(_DWORD *)v38 == 2)
              WTF::StringImpl::destroy(v38, (WTF::StringImpl *)v8);
            else
              *(_DWORD *)v38 -= 2;
          }
          v24 = 0;
          v14 = 0;
          v39 = 0;
          v40 = 0;
          v25 = v123;
          if (v123 == -1)
            goto LABEL_44;
          goto LABEL_43;
        }
        v22 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
        if (!v22)
          goto LABEL_31;
        v23 = v22;
        if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v22 + 64))(v22))
          goto LABEL_31;
        v43 = *(_QWORD *)(v23 + 344);
        if (*((_QWORD *)v16 + 3) == *((_QWORD *)v16 + 2))
        {
LABEL_81:
          *(_BYTE *)(*(_QWORD *)(v43 + 8) + 93442) = 1;
          goto LABEL_32;
        }
        if (!v43)
        {
LABEL_31:
          JSC::throwTypeError();
LABEL_32:
          v24 = 1;
          v123 = 1;
          v119 = 1;
          v25 = 1;
LABEL_43:
          ((void (*)(WTF::StringImpl **, JSC::VM **))off_1E3250AB8[v25])(&v120, &v122);
          v39 = v24;
          v40 = v14;
LABEL_44:
          v14 = v40;
          goto LABEL_45;
        }
        v44 = (unsigned __int8 *)(v43 + 40);
        if (__ldaxr((unsigned __int8 *)(v43 + 40)))
        {
          __clrex();
        }
        else if (!__stxr(1u, v44))
        {
          goto LABEL_75;
        }
        MEMORY[0x19AEA534C](v43 + 40);
LABEL_75:
        v115 = *(unsigned __int8 *)(v43 + 41);
        v46 = __ldxr(v44);
        if (v46 == 1)
        {
          if (!__stlxr(0, v44))
          {
LABEL_80:
            if (v115)
              goto LABEL_81;
            goto LABEL_31;
          }
        }
        else
        {
          __clrex();
        }
        WTF::Lock::unlockSlow((WTF::Lock *)(v43 + 40));
        goto LABEL_80;
      }
      if (HIBYTE(v129) == 2)
        v42 = JSC::PropertySlot::functionGetter((JSC::PropertySlot *)v124, this);
      else
        v42 = JSC::PropertySlot::customGetter();
    }
    v15 = (JSC::JSGlobalObject *)v42;
    goto LABEL_19;
  }
  v117 = 0;
  v118 = 0;
  v119 = 0;
  while ((unint64_t)(*(int *)(a2 + 32) - 3) < 0xFFFFFFFFFFFFFFFELL)
  {
    v51 = *(_QWORD *)(a2 + 56);
    v57 = (JSC::VM *)*((_QWORD *)this + 7);
    v122 = v57;
    if ((v51 & 0xFFFFFFFFFFFFFFF7) == 2)
      break;
    if ((v51 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject((JSC::JSCell *)v51)) == 0)
    {
      JSC::throwTypeError();
LABEL_189:
      v48 = 0;
LABEL_190:
      v47 = 0;
      goto LABEL_147;
    }
    v59 = (JSC::Structure *)Object;
    v60 = v5;
    WTF::AtomStringImpl::addLiteral();
    v61 = v124[0];
    v63 = JSC::JSObject::get(v59, this, (unint64_t)v124[0]);
    if (v61)
    {
      if (*(_DWORD *)v61 == 2)
        WTF::StringImpl::destroy(v61, v62);
      else
        *(_DWORD *)v61 -= 2;
    }
    v5 = v60;
    if (*((_DWORD *)v57 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v57) & 1) != 0)
      goto LABEL_189;
    if (v63 == 10)
      break;
    v64 = (JSC::VM *)*((_QWORD *)this + 7);
    v140 = v64;
    v124[0] = (JSC::JSGlobalObject *)v63;
    if ((v63 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v63 + 5) == 2)
    {
      v65 = *(_QWORD *)(v63 + 8);
      if ((v65 & 1) != 0)
      {
        v65 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v63, this);
        if (v65)
LABEL_119:
          *(_DWORD *)v65 += 2;
      }
      else if (v65)
      {
        goto LABEL_119;
      }
      v136 = v65;
      if (v65)
        goto LABEL_121;
      goto LABEL_187;
    }
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v124, this);
    v65 = v136;
    if (v136)
    {
LABEL_121:
      v66 = *(_DWORD *)(v65 + 16);
      v67 = *(const char **)(v65 + 8);
      v68 = *(_DWORD *)(v65 + 4);
      if (v67 != "attachment" && v68 == 10)
      {
        if ((v66 & 4) != 0)
        {
          if (*v67 != 97
            || *(_QWORD *)(v67 + 1) != 0x6E656D6863617474
            || *(_QWORD *)(v67 + 2) != 0x746E656D68636174)
          {
            goto LABEL_127;
          }
LABEL_153:
          v101 = &WebCore::parseEnumerationFromString<WebCore::ClipboardItem::PresentationStyle>(WTF::String const&)::mappings;
LABEL_154:
          v70 = *((_BYTE *)v101 + 16);
          v69 = 1;
          goto LABEL_155;
        }
        if (*(_WORD *)v67 == 97)
        {
          v108 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v67 + 2), (int16x8_t)xmmword_1968A24F0);
          v108.i16[0] = vminvq_u16(v108);
          if (v108.i32[0])
          {
            v109 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v67 + 4), (int16x8_t)xmmword_1968A2500);
            v109.i16[0] = vminvq_u16(v109);
            if (v109.i32[0])
              goto LABEL_153;
          }
        }
LABEL_127:
        v69 = 0;
        v70 = 0;
        goto LABEL_155;
      }
      if (v67 == "attachment" && v68 == 10)
        goto LABEL_153;
      if (v67 != "inline" && v68 == 6)
      {
        if ((v66 & 4) != 0)
        {
          if (*v67 != 105 || *(_DWORD *)(v67 + 1) != 1852402798 || *(_DWORD *)(v67 + 2) != 1701734764)
            goto LABEL_127;
        }
        else
        {
          if (*(_WORD *)v67 != 105)
            goto LABEL_127;
          v69 = 0;
          if (*(_QWORD *)(v67 + 2) != 0x6E0069006C006ELL)
          {
            v70 = 0;
            goto LABEL_155;
          }
          v70 = 0;
          if (*(_QWORD *)(v67 + 4) != 0x65006E0069006CLL)
          {
LABEL_155:
            v136 = 0;
            if (*(_DWORD *)v65 == 2)
              WTF::StringImpl::destroy((WTF::StringImpl *)v65, v62);
            else
              *(_DWORD *)v65 -= 2;
            goto LABEL_157;
          }
        }
        v101 = &off_1E324BDC8;
        goto LABEL_154;
      }
      if (v67 == "inline" && v68 == 6)
      {
        v101 = &off_1E324BDC8;
        goto LABEL_154;
      }
      if (v67 == "unspecified" || v68 != 11)
      {
        if (v68 == 11 && v67 == "unspecified")
          goto LABEL_231;
      }
      else if ((v66 & 4) != 0)
      {
        if (*v67 == 117 && *(_QWORD *)(v67 + 1) == 0x696669636570736ELL && *(_QWORD *)(v67 + 3) == 0x6465696669636570)
        {
LABEL_231:
          v101 = &off_1E324BDE0;
          goto LABEL_154;
        }
      }
      else if (*(_WORD *)v67 == 117)
      {
        v112 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v67 + 2), (int16x8_t)xmmword_1968BD1C0);
        v112.i16[0] = vminvq_u16(v112);
        if (v112.i32[0])
        {
          v113 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v67 + 6), (int16x8_t)xmmword_1968BD1D0);
          v113.i16[0] = vminvq_u16(v113);
          if (v113.i32[0])
            goto LABEL_231;
        }
      }
      v69 = 0;
      v70 = 0;
      goto LABEL_155;
    }
LABEL_187:
    v70 = 0;
    v69 = 0;
LABEL_157:
    if (*((_DWORD *)v64 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v64) & 1) != 0)
      goto LABEL_215;
    if (!v69)
    {
      JSC::throwTypeError();
LABEL_215:
      v48 = v119;
      goto LABEL_190;
    }
    v5 = v60;
    if (!v119)
      goto LABEL_129;
    std::__throw_bad_variant_access[abi:sn180100]();
LABEL_161:
    v102 = *(unsigned int *)(v51 + 20);
    if ((_DWORD)v102)
    {
      v103 = *(WTF::StringImpl ***)(v51 + 8);
      v104 = 8 * v102;
      do
      {
        v105 = *v103;
        *v103 = 0;
        if (v105)
        {
          if (*(_DWORD *)v105 == 2)
            WTF::StringImpl::destroy(v105, (WTF::StringImpl *)v8);
          else
            *(_DWORD *)v105 -= 2;
        }
        ++v103;
        v104 -= 8;
      }
      while (v104);
    }
    v106 = *(WTF **)(v51 + 8);
    if ((WTF *)(v51 + 24) != v106 && v106 != 0)
    {
      *(_QWORD *)(v51 + 8) = 0;
      *(_DWORD *)(v51 + 16) = 0;
      WTF::fastFree(v106, v8);
    }
    WTF::fastFree((WTF *)v51, v8);
LABEL_91:
    v52 = v140;
    if (HIDWORD(v141))
    {
      v53 = 16 * HIDWORD(v141);
      v54 = (_DWORD **)((char *)v140 + 8);
      do
      {
        v55 = *v54;
        *v54 = 0;
        if (v55)
        {
          if (v55[4] == 1)
            (*(void (**)(_DWORD *))(*(_QWORD *)v55 + 16))(v55);
          else
            --v55[4];
        }
        v56 = (WTF::StringImpl *)*(v54 - 1);
        *(v54 - 1) = 0;
        if (v56)
        {
          if (*(_DWORD *)v56 == 2)
            WTF::StringImpl::destroy(v56, (WTF::StringImpl *)v8);
          else
            *(_DWORD *)v56 -= 2;
        }
        v54 += 2;
        v53 -= 16;
      }
      while (v53);
    }
    if (v52)
      WTF::fastFree(v52, v8);
    v48 = v119;
    if (v119)
    {
      v47 = 0;
      goto LABEL_147;
    }
  }
  v70 = 0;
LABEL_129:
  v71 = v117;
  v72 = v118;
  v117 = 0;
  v118 = 0;
  v73 = WTF::fastMalloc((WTF *)0x28);
  *(_DWORD *)v73 = 1;
  *(_QWORD *)(v73 + 8) = 0;
  *(_QWORD *)(v73 + 16) = 0;
  v74 = WTF::fastMalloc((WTF *)0x48);
  *(_QWORD *)v74 = off_1E3352D90;
  *(_QWORD *)(v74 + 8) = v73;
  *(_DWORD *)(v74 + 16) = 0;
  *(_OWORD *)(v74 + 24) = 0u;
  *(_OWORD *)(v74 + 40) = 0u;
  *(_QWORD *)(v74 + 56) = v71;
  *(_QWORD *)(v74 + 64) = v72;
  *(_QWORD *)(v73 + 24) = v74;
  *(_BYTE *)(v73 + 32) = v70;
  v124[0] = (JSC::JSGlobalObject *)v73;
  v47 = (JSCell *)WebCore::createWrapper<WebCore::ClipboardItem,WebCore::ClipboardItem>(*(_QWORD *)(v5 + 40), v124);
  v76 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v76 & 0xFFFE000000000002) != 0)
    goto LABEL_142;
  v77 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v76);
  if (!v77)
    goto LABEL_142;
  v79 = v77;
  if (v77 == *(JSC::JSGlobalObject **)(a2 + 24))
    goto LABEL_142;
  v80 = (JSC::VM *)*((_QWORD *)this + 7);
  FunctionRealm = JSC::getFunctionRealm(this, v77, v78);
  if (*((_DWORD *)v80 + 20))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps(v80) & 1) != 0)
      goto LABEL_142;
  }
  v83 = *(_QWORD *)(FunctionRealm + 3296);
  if (v83)
  {
    v84 = *(_DWORD *)(v83 - 8);
    v85 = ((unint64_t)&WebCore::JSClipboardItem::s_info + ~((_QWORD)&WebCore::JSClipboardItem::s_info << 32)) ^ (((unint64_t)&WebCore::JSClipboardItem::s_info + ~((_QWORD)&WebCore::JSClipboardItem::s_info << 32)) >> 22);
    v86 = 9 * ((v85 + ~(v85 << 13)) ^ ((v85 + ~(v85 << 13)) >> 8));
    v87 = (v86 ^ (v86 >> 15)) + ~((v86 ^ (v86 >> 15)) << 27);
    v88 = v84 & ((v87 >> 31) ^ v87);
    v89 = *(char ***)(v83 + 16 * v88);
    if (v89 != &WebCore::JSClipboardItem::s_info)
    {
      v90 = 1;
      while (v89)
      {
        v88 = ((_DWORD)v88 + v90) & v84;
        v89 = *(char ***)(v83 + 16 * v88);
        ++v90;
        if (v89 == &WebCore::JSClipboardItem::s_info)
          goto LABEL_138;
      }
      goto LABEL_139;
    }
LABEL_138:
    v91 = *(JSC::JSObject **)(v83 + 16 * v88 + 8);
    if (!v91)
      goto LABEL_139;
  }
  else
  {
LABEL_139:
    Structure = WebCore::JSClipboardItemPrototype::createStructure((uint64_t *)v80, FunctionRealm, *(JSC::JSCell **)(FunctionRealm + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v95 = (JSC::JSCell *)WebCore::JSClipboardItemPrototype::create(v80, Structure, v93, v94);
    v96 = WebCore::JSClipboardItem::createStructure((uint64_t *)v80, FunctionRealm, v95);
    v91 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v96, (uint64_t)&WebCore::JSClipboardItem::s_info);
  }
  SubclassStructure = JSC::InternalFunction::createSubclassStructure(this, v79, v91, v81);
  if (!*((_DWORD *)v80 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v80) & 1) == 0)
    JSC::JSObject::setStructure(v47, v80, SubclassStructure);
LABEL_142:
  if (*((_DWORD *)v3 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v3) & 1) != 0)
    v47 = 0;
  if (v124[0])
  {
    if (*(_DWORD *)v124[0] == 1)
    {
      WebCore::ClipboardItem::~ClipboardItem(v124[0], v75);
      WTF::fastFree(v99, v100);
    }
    else
    {
      --*(_DWORD *)v124[0];
    }
  }
  v48 = 0;
LABEL_147:
  if (v48 != -1)
LABEL_148:
    ((void (*)(JSC::JSGlobalObject **, JSC::VM **))off_1E324FD10[v48])(v124, &v117);
  return v47;
}

WebCore::ClipboardItem *WebCore::JSClipboardItem::destroy(WebCore::JSClipboardItem *this, JSC::JSCell *a2)
{
  WebCore::ClipboardItem *result;
  WTF *v4;
  void *v5;

  result = (WebCore::ClipboardItem *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
    {
      WebCore::ClipboardItem::~ClipboardItem(result, a2);
      return (WebCore::ClipboardItem *)WTF::fastFree(v4, v5);
    }
    else
    {
      --*(_DWORD *)result;
    }
  }
  return result;
}

uint64_t WebCore::JSClipboardItem::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSClipboardItemPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSClipboardItemPrototype::create(WebCore::JSClipboardItemPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSClipboardItem::s_info, &WebCore::JSClipboardItemPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSClipboardItem>,(WebCore::DOMConstructorID)60>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 480);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructor<WebCore::JSClipboardItem>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000001, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSClipboardItem::s_info + ~((_QWORD)&WebCore::JSClipboardItem::s_info << 32)) ^ (((unint64_t)&WebCore::JSClipboardItem::s_info + ~((_QWORD)&WebCore::JSClipboardItem::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSClipboardItem::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSClipboardItem::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSClipboardItemPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSClipboardItemPrototype::create((WebCore::JSClipboardItemPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSClipboardItem::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSClipboardItem::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 480) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsClipboardItemConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSClipboardItemPrototype::s_info != (char **)(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSClipboardItem>,(WebCore::DOMConstructorID)60>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsClipboardItem_types(JSC *a1, uint64_t a2)
{
  uint64_t v3;
  WTF::StringImpl *v4;
  uint64_t v5;
  WTF *v6;
  WTF *v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF *v11;
  int v12;
  unsigned int v13;

  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  (*(void (**)(WTF **__return_ptr))(**(_QWORD **)(*(_QWORD *)(a2 + 24) + 24) + 16))(&v11);
  v5 = WebCore::JSConverter<WebCore::IDLFrozenArray<WebCore::IDLDOMString>>::convert<WTF::String,0ul>(a1, v3, (uint64_t)&v11);
  if (v13)
  {
    v8 = v11;
    v9 = 8 * v13;
    do
    {
      v10 = *(WTF::StringImpl **)v8;
      *(_QWORD *)v8 = 0;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, v4);
        else
          *(_DWORD *)v10 -= 2;
      }
      v8 = (WTF *)((char *)v8 + 8);
      v9 -= 8;
    }
    while (v9);
  }
  v6 = v11;
  if (v11)
  {
    v11 = 0;
    v12 = 0;
    WTF::fastFree(v6, v4);
  }
  return v5;
}

uint64_t WebCore::jsClipboardItem_presentationStyle(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  v4 = *(unsigned __int8 *)(*((_QWORD *)a2 + 3) + 32);
  if ((_MergedGlobals_443[0] & 1) == 0)
  {
    _MergedGlobals_12 += 2;
    dword_1ECE77290 += 2;
    qword_1EE335000 = (uint64_t)&_MergedGlobals_12;
    unk_1EE335008 = &dword_1ECE77290;
    dword_1ECE772B0 += 2;
    qword_1EE335010 = (uint64_t)&dword_1ECE772B0;
    _MergedGlobals_443[0] = 1;
  }
  v5 = *(_QWORD *)&_MergedGlobals_443[8 * v4 + 168];
  if (!v5)
    return *v3;
  v6 = *(_DWORD *)v5;
  v7 = *(_DWORD *)(v5 + 4);
  *(_DWORD *)v5 += 2;
  if (v7)
  {
    if (v7 != 1)
    {
LABEL_6:
      v8 = *(_QWORD *)(v2 + 64760);
      if (!v8 || v5 != *(_QWORD *)(v8 + 8))
      {
        v8 = JSC::jsStringWithCacheSlowCase();
        v6 = *(_DWORD *)v5 - 2;
      }
      goto LABEL_9;
    }
    v10 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_6;
      v11 = v12;
    }
    v8 = *(_QWORD *)(v2 + 8 * v11 + 42216);
  }
  else
  {
    v8 = *v3;
  }
LABEL_9:
  if (v6)
    *(_DWORD *)v5 = v6;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v5, a2);
  return v8;
}

uint64_t WebCore::JSClipboardItemOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  void *v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  void *v15;
  uint64_t result;
  uint64_t v17;
  void *v18;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 16);
  if (!v5)
    return 0;
  v6 = *(void **)(v5 + 8);
  if (!v6)
    return 0;
  if (a5)
  {
    *a5 = "Reachable from Navigator";
    a5[1] = 25;
  }
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) != v8)
  {
    v9 = v8[1];
    v10 = ((unint64_t)v6 + ~((_QWORD)v6 << 32)) ^ (((unint64_t)v6 + ~((_QWORD)v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(void **)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v6 == v15)
        goto LABEL_14;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x194947628);
      }
    }
  }
  v17 = a4;
  v18 = v6;
  result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, v6);
  a4 = v17;
  v6 = v18;
  if ((_DWORD)result)
  {
LABEL_14:
    if (*(_BYTE *)(a4 + 131))
      (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v6);
    return 1;
  }
  return result;
}

void WebCore::JSClipboardItemOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  WebCore::ClipboardItem *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WebCore::ClipboardItem *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  WTF *v24;
  void *v25;

  v3 = *(WebCore::ClipboardItem **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(WebCore::ClipboardItem **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(WebCore::ClipboardItem **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
  {
    WebCore::ClipboardItem::~ClipboardItem(v3, a2);
    WTF::fastFree(v24, v25);
  }
  else
  {
    --*(_DWORD *)v3;
  }
}

unint64_t WebCore::createWrapper<WebCore::ClipboardItem,WebCore::ClipboardItem>(uint64_t a1, WTF **a2)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  uint64_t *v14;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v16;
  JSC::Structure *v17;
  JSC::JSCell *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  WTF *v30;
  uint64_t v31;
  uint64_t v32;
  WTF *v33;
  void *v34;
  int v35;
  unint64_t SlowCase;
  WTF *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *Allocator;
  unint64_t v43;
  _QWORD *v44;
  WTF *v45;

  v4 = *a2;
  v5 = *(_QWORD *)(a1 + 3296);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSClipboardItem::s_info + ~((_QWORD)&WebCore::JSClipboardItem::s_info << 32)) ^ (((unint64_t)&WebCore::JSClipboardItem::s_info + ~((_QWORD)&WebCore::JSClipboardItem::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSClipboardItem::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSClipboardItem::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = *(uint64_t **)(a1 + 56);
  Structure = WebCore::JSClipboardItemPrototype::createStructure(v14, a1, *(JSC::JSCell **)(a1 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v18 = (JSC::JSCell *)WebCore::JSClipboardItemPrototype::create((WebCore::JSClipboardItemPrototype *)v14, Structure, v16, v17);
  v19 = WebCore::JSClipboardItem::createStructure(v14, a1, v18);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v19, (uint64_t)&WebCore::JSClipboardItem::s_info);
LABEL_8:
  v20 = *(_QWORD *)(a1 + 56);
  v21 = *(_QWORD *)(v20 + 41456);
  v22 = *(_QWORD *)(v21 + 23536);
  v23 = *(_QWORD **)(v22 + 480);
  if (v23)
    goto LABEL_28;
  v24 = *(_QWORD *)(v21 + 22648);
  if (__ldaxr((unsigned __int8 *)v24))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v24))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v24);
LABEL_13:
  v26 = *(_QWORD *)(v24 + 2824);
  if (!*(_QWORD *)(v26 + 480))
  {
    v27 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v45, "IsoSpace T");
    v44 = 0;
    MEMORY[0x19AEA3204](v27, &v45, v20 + 192, v20 + 1872, 32, 8, &v44);
    v29 = (uint64_t)v44;
    v44 = 0;
    if (v29)
      (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
    v30 = v45;
    v45 = 0;
    if (v30)
    {
      if (*(_DWORD *)v30 == 1)
        WTF::fastFree(v30, v28);
      else
        --*(_DWORD *)v30;
    }
    v31 = *(_QWORD *)(v26 + 480);
    *(_QWORD *)(v26 + 480) = v27;
    if (v31)
      (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
  }
  v23 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v32 = *(_QWORD *)(v22 + 480);
  *(_QWORD *)(v22 + 480) = v23;
  if (v32)
  {
    v33 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v33, v34);
  }
  v35 = __ldxr((unsigned __int8 *)v24);
  if (v35 != 1)
  {
    __clrex();
    goto LABEL_27;
  }
  if (__stlxr(0, (unsigned __int8 *)v24))
LABEL_27:
    WTF::Lock::unlockSlow((WTF::Lock *)v24);
LABEL_28:
  SlowCase = v23[3];
  if (SlowCase < v23[4])
  {
LABEL_29:
    v23[3] = SlowCase + 32;
    goto LABEL_30;
  }
  SlowCase = v23[5];
  if ((SlowCase & 1) == 0)
  {
    v43 = *(_QWORD *)(SlowCase + 8) ^ v23[6];
    v23[4] = SlowCase + HIDWORD(v43);
    v23[5] = SlowCase + (int)v43;
    goto LABEL_29;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_30:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  v37 = *a2;
  *a2 = 0;
  *(_QWORD *)(SlowCase + 24) = v37;
  if (*(_BYTE *)(v20 + 755))
    __dmb(0xAu);
  v38 = *(_QWORD *)(a1 + 3320);
  if ((byte_1EE334F78 & 1) == 0)
  {
    qword_1EE334F70 = (uint64_t)&off_1E324F730;
    byte_1EE334F78 = 1;
  }
  v45 = v4;
  if ((SlowCase & 8) != 0)
    v39 = (SlowCase - 112) | 1;
  else
    v39 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v39 & 1) != 0)
    v40 = v39 + 47;
  else
    v40 = *(_QWORD *)v39 + 32;
  Allocator = *(_QWORD **)(v40 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v40 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE334F70;
  Allocator[2] = v38;
  v44 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v38 + 32), (uint64_t *)&v45, (uint64_t *)&v44);
  if (v44)
    v44[1] = 3;
  return SlowCase;
}

unint64_t WebCore::wrap<WebCore::ClipboardItem>(uint64_t a1, uint64_t a2, WebCore::ClipboardItem *a3)
{
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  WebCore::ClipboardItem *v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  WTF *v15;
  void *v16;
  WebCore::ClipboardItem *v17;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v3)
  {
    v4 = *(_DWORD *)(v3 - 8);
    v5 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v6 = 9 * ((v5 + ~(v5 << 13)) ^ ((v5 + ~(v5 << 13)) >> 8));
    v7 = (v6 ^ (v6 >> 15)) + ~((v6 ^ (v6 >> 15)) << 27);
    v8 = v4 & ((v7 >> 31) ^ v7);
    v9 = *(WebCore::ClipboardItem **)(v3 + 16 * v8);
    if (v9 == a3)
    {
LABEL_6:
      v11 = *(_QWORD *)(v3 + 16 * v8 + 8);
      if (v11)
      {
        if ((*(_BYTE *)(v11 + 8) & 3) == 0)
        {
          v12 = *(_QWORD *)v11;
          if (*(_QWORD *)v11)
            return v12;
        }
      }
    }
    else
    {
      v10 = 1;
      while (v9)
      {
        v8 = ((_DWORD)v8 + v10) & v4;
        v9 = *(WebCore::ClipboardItem **)(v3 + 16 * v8);
        ++v10;
        if (v9 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*(_DWORD *)a3;
  v17 = a3;
  v12 = WebCore::createWrapper<WebCore::ClipboardItem,WebCore::ClipboardItem>(a2, &v17);
  if (v17)
  {
    if (*(_DWORD *)v17 == 1)
    {
      WebCore::ClipboardItem::~ClipboardItem(v17, v13);
      WTF::fastFree(v15, v16);
    }
    else
    {
      --*(_DWORD *)v17;
    }
  }
  return v12;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSCloseEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  JSC::VM *v3;
  uint64_t v5;
  WTF::StringImpl *v6;
  int v7;
  JSC::JSCell *v8;
  JSC::VM *v9;
  uint64_t Object;
  unint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  unint64_t v18;
  char v19;
  WTF::StringImpl *v20;
  BOOL v21;
  JSC::VM *v22;
  double v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  unint64_t v26;
  JSC::VM *v27;
  double v28;
  WTF::StringImpl *v29;
  WTF::StringImpl *v30;
  unint64_t v31;
  JSC::VM *v32;
  double v33;
  WTF::StringImpl *v34;
  WTF::StringImpl *v35;
  JSC::VM *v36;
  double v37;
  double v38;
  double v39;
  long double v40;
  double v41;
  WTF::StringImpl *v42;
  uint64_t v43;
  int v44;
  WTF::StringImpl *v45;
  JSC::VM *v46;
  double v47;
  int v48;
  WTF::StringImpl *v49;
  _BOOL4 v50;
  _BOOL4 v51;
  _BOOL4 v52;
  BOOL v53;
  __int16 v54;
  WTF::StringImpl *v55;
  unint64_t v56;
  WTF::StringImpl *v57;
  WebCore::JSDOMGlobalObject *v58;
  uint64_t v59;
  int v60;
  unsigned int v61;
  int v62;
  JSC::VM *v63;
  uint64_t v64;
  unsigned int v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  char **v70;
  int v71;
  unint64_t v72;
  WebCore::JSEvent *v73;
  JSC::JSCell *v74;
  unint64_t Structure;
  JSC::Structure *v76;
  JSC::JSCell *v77;
  uint64_t v78;
  JSCell *v79;
  JSC::JSCell *v80;
  JSC::JSGlobalObject *v81;
  JSC::JSObject *v82;
  JSC::JSGlobalObject *v83;
  JSC::VM *v84;
  JSC::JSObject *v85;
  JSC::Structure *v86;
  JSC::VM *FunctionRealm;
  uint64_t v88;
  unsigned int v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  char **v94;
  int v95;
  JSC::JSCell *v96;
  unint64_t v97;
  JSC::Structure *v98;
  JSC::JSCell *v99;
  uint64_t v100;
  unint64_t SubclassStructure;
  _DWORD *v102;
  JSValue v104;
  double v105;
  char hasExceptionsAfterHandlingTraps;
  JSC::VM *v107;
  BOOL v108;
  int v109;
  uint64_t v110;
  int *v111;
  int v112;
  BOOL v113;
  int v114;
  uint64_t v115;
  int *v116;
  int v117;
  BOOL v118;
  int v119;
  uint64_t v120;
  int *v121;
  int v122;
  BOOL v123;
  int v124;
  uint64_t v125;
  int *v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  JSC::VM *v130;
  BOOL v131;
  BOOL v132;
  BOOL v133;
  BOOL v134;
  __int16 v135;
  WTF::StringImpl *v136;
  int v137;
  WTF::StringImpl *v138;
  int v139;
  unint64_t v140;
  int v141;
  JSC::VM *v142;
  WTF::StringImpl *v143;

  v3 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v104.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v3, a1, v104);
  }
  v5 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v138);
  v7 = v139;
  if (v139)
  {
    v79 = 0;
    goto LABEL_131;
  }
  v129 = a2;
  v130 = v3;
  v128 = v5;
  if ((unint64_t)(*(int *)(a2 + 32) - 3) >= 0xFFFFFFFFFFFFFFFELL)
  {
    v142 = (JSC::VM *)*((_QWORD *)a1 + 7);
    goto LABEL_14;
  }
  v8 = *(JSC::JSCell **)(a2 + 56);
  v9 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v142 = v9;
  if (((unint64_t)v8 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
LABEL_14:
    v16 = 0;
    v17 = 0;
    v15 = 0;
    v11 = 0;
    LOWORD(v18) = 0;
    v19 = 1;
    goto LABEL_15;
  }
  if (((unint64_t)v8 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v8)) == 0)
  {
    JSC::throwTypeError();
    goto LABEL_146;
  }
  v11 = Object;
  WTF::AtomStringImpl::addLiteral();
  v12 = (WTF::StringImpl *)v140;
  v14 = JSC::JSObject::get((JSC::Structure *)v11, a1, v140);
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v13);
    else
      *(_DWORD *)v12 -= 2;
  }
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    goto LABEL_146;
  if (v14 == 10)
  {
    v15 = 0;
    goto LABEL_24;
  }
  v22 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (v14 >= 0xFFFE000000000000)
  {
    v113 = (_DWORD)v14 == 0;
    goto LABEL_240;
  }
  *(_QWORD *)&v23 = v14 - 0x2000000000000;
  if (v14 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
  {
    if (v23 <= 0.0)
    {
      v15 = v23 < 0.0;
      goto LABEL_23;
    }
    goto LABEL_229;
  }
  if ((v14 & 0xFFFE000000000002) != 0)
  {
    v15 = v14 == 7;
    goto LABEL_23;
  }
  v114 = *(unsigned __int8 *)(v14 + 5);
  if (v114 == 3)
  {
    v117 = *(_DWORD *)(v14 + 8);
LABEL_227:
    v113 = v117 == 0;
    goto LABEL_240;
  }
  if (v114 == 2)
  {
    v115 = *(_QWORD *)(v14 + 8);
    if ((v115 & 1) != 0)
      v116 = (int *)(v14 + 16);
    else
      v116 = (int *)(v115 + 4);
    v117 = *v116;
    goto LABEL_227;
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0xA) & 1) == 0)
  {
LABEL_229:
    v15 = 1;
    goto LABEL_23;
  }
  v113 = *(_QWORD *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
LABEL_240:
  v15 = !v113;
LABEL_23:
  if (*((_DWORD *)v22 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v22) & 1) != 0)
    goto LABEL_146;
LABEL_24:
  WTF::AtomStringImpl::addLiteral();
  v24 = (WTF::StringImpl *)v140;
  v26 = JSC::JSObject::get((JSC::Structure *)v11, a1, v140);
  if (v24)
  {
    if (*(_DWORD *)v24 == 2)
      WTF::StringImpl::destroy(v24, v25);
    else
      *(_DWORD *)v24 -= 2;
  }
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    goto LABEL_146;
  if (v26 == 10)
  {
    v17 = 0;
    goto LABEL_35;
  }
  v27 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (v26 >= 0xFFFE000000000000)
  {
    v118 = (_DWORD)v26 == 0;
    goto LABEL_244;
  }
  *(_QWORD *)&v28 = v26 - 0x2000000000000;
  if (v26 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
  {
    if (v28 <= 0.0)
    {
      v17 = v28 < 0.0;
      goto LABEL_34;
    }
    goto LABEL_233;
  }
  if ((v26 & 0xFFFE000000000002) != 0)
  {
    v17 = v26 == 7;
    goto LABEL_34;
  }
  v119 = *(unsigned __int8 *)(v26 + 5);
  if (v119 == 3)
  {
    v122 = *(_DWORD *)(v26 + 8);
LABEL_231:
    v118 = v122 == 0;
    goto LABEL_244;
  }
  if (v119 == 2)
  {
    v120 = *(_QWORD *)(v26 + 8);
    if ((v120 & 1) != 0)
      v121 = (int *)(v26 + 16);
    else
      v121 = (int *)(v120 + 4);
    v122 = *v121;
    goto LABEL_231;
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0xA) & 1) == 0)
  {
LABEL_233:
    v17 = 1;
    goto LABEL_34;
  }
  v118 = *(_QWORD *)(16 * (*(_DWORD *)v26 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
LABEL_244:
  v17 = !v118;
LABEL_34:
  if (*((_DWORD *)v27 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v27) & 1) != 0)
    goto LABEL_146;
LABEL_35:
  WTF::AtomStringImpl::addLiteral();
  v29 = (WTF::StringImpl *)v140;
  v31 = JSC::JSObject::get((JSC::Structure *)v11, a1, v140);
  if (v29)
  {
    if (*(_DWORD *)v29 == 2)
      WTF::StringImpl::destroy(v29, v30);
    else
      *(_DWORD *)v29 -= 2;
  }
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    goto LABEL_146;
  if (v31 == 10)
  {
    v16 = 0;
    goto LABEL_46;
  }
  v32 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (v31 >= 0xFFFE000000000000)
  {
    v123 = (_DWORD)v31 == 0;
    goto LABEL_248;
  }
  *(_QWORD *)&v33 = v31 - 0x2000000000000;
  if (v31 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
  {
    if (v33 <= 0.0)
    {
      v16 = v33 < 0.0;
      goto LABEL_45;
    }
    goto LABEL_237;
  }
  if ((v31 & 0xFFFE000000000002) != 0)
  {
    v16 = v31 == 7;
    goto LABEL_45;
  }
  v124 = *(unsigned __int8 *)(v31 + 5);
  if (v124 == 3)
  {
    v127 = *(_DWORD *)(v31 + 8);
LABEL_235:
    v123 = v127 == 0;
    goto LABEL_248;
  }
  if (v124 == 2)
  {
    v125 = *(_QWORD *)(v31 + 8);
    if ((v125 & 1) != 0)
      v126 = (int *)(v31 + 16);
    else
      v126 = (int *)(v125 + 4);
    v127 = *v126;
    goto LABEL_235;
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)v31 & 0xFFFFFFFE) + 0xA) & 1) == 0)
  {
LABEL_237:
    v16 = 1;
    goto LABEL_45;
  }
  v123 = *(_QWORD *)(16 * (*(_DWORD *)v31 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
LABEL_248:
  v16 = !v123;
LABEL_45:
  if (*((_DWORD *)v32 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v32) & 1) != 0)
    goto LABEL_146;
LABEL_46:
  WTF::AtomStringImpl::addLiteral();
  v34 = (WTF::StringImpl *)v140;
  v18 = JSC::JSObject::get((JSC::Structure *)v11, a1, v140);
  if (v34)
  {
    if (*(_DWORD *)v34 == 2)
      WTF::StringImpl::destroy(v34, v35);
    else
      *(_DWORD *)v34 -= 2;
  }
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    goto LABEL_146;
  if (v18 != 10)
  {
    v140 = v18;
    v36 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v18 >= 0xFFFE000000000000 && (v18 & 0x80000000) == 0)
      goto LABEL_66;
    if (v18 >= 0xFFFE000000000000)
    {
      v37 = (double)(int)v18;
    }
    else if (v18 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      v107 = (JSC::VM *)*((_QWORD *)a1 + 7);
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v140, a1);
      v36 = v107;
    }
    else
    {
      *(_QWORD *)&v37 = v18 - 0x2000000000000;
    }
    if (!*((_DWORD *)v36 + 20)
      || (v105 = v37,
          hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v36),
          v37 = v105,
          (hasExceptionsAfterHandlingTraps & 1) == 0))
    {
      LOWORD(v18) = 0;
      if (fabs(v37) != INFINITY && v37 != 0.0)
      {
        v38 = -floor(-v37);
        v39 = floor(v37);
        if (v37 >= 0.0)
          v40 = v39;
        else
          v40 = v38;
        v41 = fmod(v40, 65536.0);
        if (v41 < 0.0)
          v41 = v41 + 65536.0;
        LODWORD(v18) = (int)v41;
      }
      goto LABEL_66;
    }
LABEL_146:
    v79 = 0;
    v48 = 1;
    v137 = 1;
    goto LABEL_130;
  }
  LOWORD(v18) = 0;
LABEL_66:
  WTF::AtomStringImpl::addLiteral();
  v42 = (WTF::StringImpl *)v140;
  v43 = JSC::JSObject::get((JSC::Structure *)v11, a1, v140);
  if (v42)
  {
    if (*(_DWORD *)v42 == 2)
      WTF::StringImpl::destroy(v42, v6);
    else
      *(_DWORD *)v42 -= 2;
  }
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    goto LABEL_146;
  if (v43 != 10)
  {
    WebCore::valueToUSVString(a1, v43, (uint64_t)&v140);
    v44 = v141;
    if (v141)
    {
      v20 = 0;
      v48 = 1;
      v137 = 1;
      goto LABEL_87;
    }
    v20 = (WTF::StringImpl *)v140;
    v140 = 0;
    goto LABEL_74;
  }
  v19 = 0;
LABEL_15:
  v20 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
  if (*MEMORY[0x1E0CBF738])
    *(_DWORD *)v20 += 2;
  v21 = 0;
  v141 = 0;
  v140 = 0;
  if ((v19 & 1) != 0)
    goto LABEL_85;
LABEL_74:
  WTF::AtomStringImpl::addLiteral();
  v45 = v143;
  v11 = JSC::JSObject::get((JSC::Structure *)v11, a1, (unint64_t)v143);
  if (v45)
  {
    if (*(_DWORD *)v45 == 2)
      WTF::StringImpl::destroy(v45, v6);
    else
      *(_DWORD *)v45 -= 2;
  }
  if (*((_DWORD *)v142 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v142) & 1) != 0)
    goto LABEL_171;
  if (v11 != 10)
  {
    v46 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v11 >= 0xFFFE000000000000)
      goto LABEL_183;
    *(_QWORD *)&v47 = v11 - 0x2000000000000;
    if (v11 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      if (v47 <= 0.0)
      {
        v21 = v47 < 0.0;
        goto LABEL_84;
      }
    }
    else
    {
      if ((v11 & 0xFFFE000000000002) != 0)
      {
        v21 = v11 == 7;
        goto LABEL_84;
      }
      v109 = *(unsigned __int8 *)(v11 + 5);
      if (v109 == 3)
      {
        v112 = *(_DWORD *)(v11 + 8);
LABEL_220:
        v108 = v112 == 0;
        goto LABEL_221;
      }
      if (v109 == 2)
      {
        v110 = *(_QWORD *)(v11 + 8);
        if ((v110 & 1) != 0)
          v111 = (int *)(v11 + 16);
        else
          v111 = (int *)(v110 + 4);
        v112 = *v111;
        goto LABEL_220;
      }
      if ((*(_BYTE *)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0xA) & 1) != 0)
      {
        v108 = *(_QWORD *)(16 * (*(_DWORD *)v11 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
        goto LABEL_221;
      }
    }
    v21 = 1;
    goto LABEL_84;
  }
  v21 = 0;
LABEL_85:
  v48 = 0;
  v131 = v15;
  v132 = v17;
  v133 = v16;
  v134 = v21;
  v135 = v18;
  v136 = v20;
  v20 = 0;
  while (1)
  {
    v137 = v48;
    v44 = v141;
LABEL_87:
    if (v44 != -1)
      ((void (*)(WTF::StringImpl **, unint64_t *))off_1E324FDC0[v44])(&v143, &v140);
    if (!v20)
      goto LABEL_92;
    if (*(_DWORD *)v20 != 2)
    {
      *(_DWORD *)v20 -= 2;
LABEL_92:
      if (v48)
        goto LABEL_135;
      goto LABEL_93;
    }
    WTF::StringImpl::destroy(v20, v6);
    v48 = v137;
    if (v137)
    {
LABEL_135:
      v79 = 0;
      goto LABEL_130;
    }
LABEL_93:
    if (!v139)
      break;
    v46 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_183:
    v108 = (_DWORD)v11 == 0;
LABEL_221:
    v21 = !v108;
LABEL_84:
    if (!*((_DWORD *)v46 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v46) & 1) == 0)
      goto LABEL_85;
LABEL_171:
    v48 = 1;
  }
  v49 = v138;
  v138 = 0;
  v50 = v131;
  v51 = v132;
  v52 = v133;
  v53 = v134;
  v54 = v135;
  v55 = v136;
  v136 = 0;
  v56 = bmalloc::api::isoAllocate();
  WTF::MonotonicTime::now((WTF::MonotonicTime *)v56);
  *(_QWORD *)(v56 + 8) = 0;
  if (v50)
    v60 = 1769474;
  else
    v60 = 1769472;
  v61 = v60 | (v49 != 0) | (4 * v51) | (8 * v52) | *(_DWORD *)(v56 + 20) & 0xFFC00000;
  *(_DWORD *)(v56 + 16) = 1;
  *(_DWORD *)(v56 + 20) = v61;
  if (v49)
  {
    *(_DWORD *)v49 += 2;
    v61 = *(_DWORD *)(v56 + 20);
  }
  *(_QWORD *)(v56 + 24) = v49;
  *(_QWORD *)(v56 + 32) = 0;
  *(_QWORD *)(v56 + 40) = 0;
  *(_QWORD *)(v56 + 48) = 0;
  *(_QWORD *)(v56 + 56) = v59;
  *(_QWORD *)(v56 + 64) = 0;
  *(_DWORD *)(v56 + 20) = v61 | 0x4000;
  *(_QWORD *)v56 = off_1E32518A8;
  *(_BYTE *)(v56 + 72) = v53;
  *(_WORD *)(v56 + 74) = v54;
  if (v55)
  {
    v62 = *(_DWORD *)v55;
    *(_DWORD *)v55 += 2;
    *(_QWORD *)(v56 + 80) = v55;
    v140 = v56;
    if (v62)
      *(_DWORD *)v55 = v62;
    else
      WTF::StringImpl::destroy(v55, v57);
  }
  else
  {
    *(_QWORD *)(v56 + 80) = 0;
    v140 = v56;
  }
  if (v49)
  {
    if (*(_DWORD *)v49 == 2)
      WTF::StringImpl::destroy(v49, v57);
    else
      *(_DWORD *)v49 -= 2;
  }
  if (*(void (***)(WebCore::CloseEvent *__hidden))v56 != off_1E32518A8)
  {
    __break(0xC471u);
    JUMPOUT(0x1949486FCLL);
  }
  v63 = *(JSC::VM **)(v128 + 40);
  v64 = *((_QWORD *)v63 + 412);
  if (!v64)
    goto LABEL_112;
  v65 = *(_DWORD *)(v64 - 8);
  v66 = ((unint64_t)&WebCore::JSCloseEvent::s_info + ~((_QWORD)&WebCore::JSCloseEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCloseEvent::s_info + ~((_QWORD)&WebCore::JSCloseEvent::s_info << 32)) >> 22);
  v67 = 9 * ((v66 + ~(v66 << 13)) ^ ((v66 + ~(v66 << 13)) >> 8));
  v68 = (v67 ^ (v67 >> 15)) + ~((v67 ^ (v67 >> 15)) << 27);
  v69 = v65 & ((v68 >> 31) ^ v68);
  v70 = *(char ***)(v64 + 16 * v69);
  if (v70 == &WebCore::JSCloseEvent::s_info)
  {
LABEL_111:
    v72 = *(_QWORD *)(v64 + 16 * v69 + 8);
    if (!v72)
      goto LABEL_112;
  }
  else
  {
    v71 = 1;
    while (v70)
    {
      v69 = ((_DWORD)v69 + v71) & v65;
      v70 = *(char ***)(v64 + 16 * v69);
      ++v71;
      if (v70 == &WebCore::JSCloseEvent::s_info)
        goto LABEL_111;
    }
LABEL_112:
    v73 = (WebCore::JSEvent *)*((_QWORD *)v63 + 7);
    v74 = (JSC::JSCell *)WebCore::JSEvent::prototype(v73, *(JSC::VM **)(v128 + 40), v58);
    Structure = WebCore::JSCloseEventPrototype::createStructure((uint64_t *)v73, (uint64_t)v63, v74);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v77 = (JSC::JSCell *)WebCore::JSCloseEventPrototype::create(v73, v63, Structure, v76);
    v78 = WebCore::JSCloseEvent::createStructure((uint64_t *)v73, (uint64_t)v63, v77);
    v72 = WebCore::cacheDOMStructure((JSCell *)v63, v78, (uint64_t)&WebCore::JSCloseEvent::s_info);
  }
  v79 = (JSCell *)WebCore::JSCloseEvent::create(v72, v63, (uint64_t *)&v140);
  WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*((_QWORD *)v63 + 415), v56, (uint64_t)v79);
  v80 = *(JSC::JSCell **)(v129 + 40);
  if (((unint64_t)v80 & 0xFFFE000000000002) == 0)
  {
    v81 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v80);
    if (v81)
    {
      v83 = v81;
      if (v81 != *(JSC::JSGlobalObject **)(v129 + 24))
      {
        v84 = (JSC::VM *)*((_QWORD *)a1 + 7);
        FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v81, v82);
        if (!*((_DWORD *)v84 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v84) & 1) == 0)
        {
          v88 = *((_QWORD *)FunctionRealm + 412);
          if (v88)
          {
            v89 = *(_DWORD *)(v88 - 8);
            v90 = ((unint64_t)&WebCore::JSCloseEvent::s_info + ~((_QWORD)&WebCore::JSCloseEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCloseEvent::s_info + ~((_QWORD)&WebCore::JSCloseEvent::s_info << 32)) >> 22);
            v91 = 9 * ((v90 + ~(v90 << 13)) ^ ((v90 + ~(v90 << 13)) >> 8));
            v92 = (v91 ^ (v91 >> 15)) + ~((v91 ^ (v91 >> 15)) << 27);
            v93 = v89 & ((v92 >> 31) ^ v92);
            v94 = *(char ***)(v88 + 16 * v93);
            if (v94 == &WebCore::JSCloseEvent::s_info)
            {
LABEL_122:
              v85 = *(JSC::JSObject **)(v88 + 16 * v93 + 8);
              if (v85)
              {
LABEL_124:
                SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v83, v85, v86);
                if (!*((_DWORD *)v84 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v84) & 1) == 0)
                  JSC::JSObject::setStructure(v79, v84, SubclassStructure);
                goto LABEL_126;
              }
            }
            else
            {
              v95 = 1;
              while (v94)
              {
                v93 = ((_DWORD)v93 + v95) & v89;
                v94 = *(char ***)(v88 + 16 * v93);
                ++v95;
                if (v94 == &WebCore::JSCloseEvent::s_info)
                  goto LABEL_122;
              }
            }
          }
          v96 = (JSC::JSCell *)WebCore::JSEvent::prototype(v84, FunctionRealm, v85);
          v97 = WebCore::JSCloseEventPrototype::createStructure((uint64_t *)v84, (uint64_t)FunctionRealm, v96);
          *(_DWORD *)(v97 + 16) |= 0x80000u;
          v99 = (JSC::JSCell *)WebCore::JSCloseEventPrototype::create(v84, FunctionRealm, v97, v98);
          v100 = WebCore::JSCloseEvent::createStructure((uint64_t *)v84, (uint64_t)FunctionRealm, v99);
          v85 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v100, (uint64_t)&WebCore::JSCloseEvent::s_info);
          goto LABEL_124;
        }
      }
    }
  }
LABEL_126:
  if (*((_DWORD *)v130 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v130) & 1) != 0)
    v79 = 0;
  v102 = (_DWORD *)v140;
  v140 = 0;
  if (v102)
  {
    if (v102[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v102 + 8))(v102);
    else
      --v102[4];
  }
LABEL_130:
  ((void (*)(unint64_t *, BOOL *))off_1E324FDD0[v48])(&v140, &v131);
  v7 = v139;
LABEL_131:
  if (v7 != -1)
    ((void (*)(BOOL *, WTF::StringImpl **))off_1E324FCB0[v7])(&v131, &v138);
  return v79;
}

uint64_t WebCore::JSCloseEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCloseEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCloseEventPrototype::create(WebCore::JSCloseEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSCloseEvent::s_info, &WebCore::JSCloseEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCloseEvent>,(WebCore::DOMConstructorID)285>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2280);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSCloseEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCloseEvent::s_info + ~((_QWORD)&WebCore::JSCloseEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCloseEvent::s_info + ~((_QWORD)&WebCore::JSCloseEvent::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCloseEvent::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCloseEvent::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEvent::prototype((WebCore::JSEvent *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCloseEventPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCloseEventPrototype::create((WebCore::JSCloseEventPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCloseEvent::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCloseEvent::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2280) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCloseEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCloseEventPrototype::s_info != (char **)(16
                                                          * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCloseEvent>,(WebCore::DOMConstructorID)285>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCloseEvent_wasClean(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(*(_QWORD *)(a2 + 24) + 72))
    return 7;
  else
    return 6;
}

unint64_t WebCore::jsCloseEvent_code(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int16 *)(*(_QWORD *)(a2 + 24) + 74) | 0xFFFE000000000000;
}

uint64_t WebCore::jsCloseEvent_reason(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 80);
  if (!v4)
    return *v3;
  v5 = *(_DWORD *)v4;
  v6 = *(_DWORD *)(v4 + 4);
  *(_DWORD *)v4 += 2;
  if (v6)
  {
    if (v6 != 1)
    {
LABEL_4:
      v7 = *(_QWORD *)(v2 + 64760);
      if (!v7 || v4 != *(_QWORD *)(v7 + 8))
      {
        v7 = JSC::jsStringWithCacheSlowCase();
        v5 = *(_DWORD *)v4 - 2;
      }
      goto LABEL_7;
    }
    v9 = *(unsigned __int8 **)(v4 + 8);
    if ((*(_BYTE *)(v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
        goto LABEL_4;
      v10 = v11;
    }
    v7 = *(_QWORD *)(v2 + 8 * v10 + 42216);
  }
  else
  {
    v7 = *v3;
  }
LABEL_7:
  if (v5)
    *(_DWORD *)v4 = v5;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, a2);
  return v7;
}

uint64_t WebCore::JSCloseEvent::subspaceForImpl(WebCore::JSCloseEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2304);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 2304))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 2304);
    *(_QWORD *)(v8 + 2304) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 2304);
  *(_QWORD *)(v3 + 2304) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::convertEnumerationToJS<WebCore::ColorGamut>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)(a1 + 41968);
  {
    WebCore::convertEnumerationToString(WebCore::ColorGamut)::$_0::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::ColorGamut)::$_1::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::ColorGamut)::values[0] = (uint64_t)&WebCore::convertEnumerationToString(WebCore::ColorGamut)::$_0::operator() const(void)::impl;
    *(_QWORD *)algn_1EE2F44B8 = &WebCore::convertEnumerationToString(WebCore::ColorGamut)::$_1::operator() const(void)::impl;
    WebCore::convertEnumerationToString(WebCore::ColorGamut)::$_2::operator() const(void)::impl += 2;
    qword_1EE2F44C0 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::ColorGamut)::$_2::operator() const(void)::impl;
  }
  v3 = WebCore::convertEnumerationToString(WebCore::ColorGamut)::values[a2];
  if (!v3)
    return *v2;
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  *(_DWORD *)v3 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_6:
      v6 = *(_QWORD *)(a1 + 64760);
      if (!v6 || v3 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v3 - 2;
      }
      goto LABEL_9;
    }
    v8 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_6;
      v9 = v10;
    }
    v6 = *(_QWORD *)(a1 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *v2;
  }
LABEL_9:
  if (v4)
    *(_DWORD *)v3 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v3, a2);
  return v6;
}

uint64_t WebCore::parseEnumeration<WebCore::ColorGamut>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  int v5;
  const char *v6;
  int v7;
  int v9;
  int v10;
  int v11;
  char **v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v21;
  unint64_t v22;

  v3 = a1;
  v22 = this;
  if ((this & 0xFFFE000000000002) == 0 && *(_BYTE *)(this + 5) == 2)
  {
    v4 = *(_QWORD *)(this + 8);
    if ((v4 & 1) != 0)
    {
      v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
      if (!v4)
      {
LABEL_6:
        if (v4)
          goto LABEL_7;
LABEL_40:
        v11 = 0;
        v10 = 0;
        return v11 | (v10 << 8);
      }
    }
    else if (!v4)
    {
      goto LABEL_6;
    }
    *(_DWORD *)v4 += 2;
    goto LABEL_6;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v22, a1);
  v4 = v21;
  if (!v21)
    goto LABEL_40;
LABEL_7:
  v5 = *(_DWORD *)(v4 + 16);
  v6 = *(const char **)(v4 + 8);
  v7 = *(_DWORD *)(v4 + 4);
  if (v6 != "p3" && v7 == 2)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 112)
        goto LABEL_16;
      v9 = *((unsigned __int8 *)v6 + 1);
    }
    else
    {
      if (*(_WORD *)v6 != 112)
        goto LABEL_16;
      v9 = *((unsigned __int16 *)v6 + 1);
    }
    if (v9 != 51)
      goto LABEL_16;
    goto LABEL_31;
  }
  if (v6 == "p3" && v7 == 2)
  {
LABEL_31:
    v14 = &WebCore::parseEnumerationFromString<WebCore::ColorGamut>(WTF::String const&)::mappings;
    goto LABEL_32;
  }
  if (v6 != "rec2020" && v7 == 7)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 114 || *(_DWORD *)(v6 + 1) != 808608613 || *(_DWORD *)(v6 + 3) != 808595506)
        goto LABEL_16;
    }
    else
    {
      if (*(_WORD *)v6 != 114)
        goto LABEL_16;
      v16 = *(_QWORD *)(v6 + 2);
      v17 = *(_QWORD *)(v6 + 6);
      if (v16 != 0x30003200630065 || v17 != 0x30003200300032)
        goto LABEL_16;
    }
  }
  else if (v6 != "rec2020" || v7 != 7)
  {
    if (v6 == "srgb" || v7 != 4)
    {
      if (v7 == 4 && v6 == "srgb")
        goto LABEL_58;
    }
    else if ((v5 & 4) != 0)
    {
      if (*v6 == 115 && *(_WORD *)(v6 + 1) == 26482 && *((_WORD *)v6 + 1) == 25191)
      {
LABEL_58:
        v14 = &off_1E324C330;
        goto LABEL_32;
      }
    }
    else if (*(_WORD *)v6 == 115 && *((_DWORD *)v6 + 1) == 6422631 && *(_DWORD *)(v6 + 2) == 6750322)
    {
      goto LABEL_58;
    }
LABEL_16:
    v10 = 0;
    v11 = 0;
    goto LABEL_33;
  }
  v14 = &off_1E324C318;
LABEL_32:
  v11 = *((unsigned __int8 *)v14 + 16);
  v10 = 1;
LABEL_33:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v11 | (v10 << 8);
}

WebCore::CommandLineAPIHost *WebCore::JSCommandLineAPIHost::destroy(WebCore::JSCommandLineAPIHost *this, JSC::JSCell *a2)
{
  WebCore::CommandLineAPIHost *result;
  WTF *v4;
  void *v5;

  result = (WebCore::CommandLineAPIHost *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
    {
      WebCore::CommandLineAPIHost::~CommandLineAPIHost(result, a2);
      return (WebCore::CommandLineAPIHost *)WTF::fastFree(v4, v5);
    }
    else
    {
      --*(_DWORD *)result;
    }
  }
  return result;
}

uint64_t WebCore::JSCommandLineAPIHost::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCommandLineAPIHostPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCommandLineAPIHostPrototype::create(WebCore::JSCommandLineAPIHostPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<7u>(this, (uint64_t)&WebCore::JSCommandLineAPIHost::s_info, &WebCore::JSCommandLineAPIHostPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

uint64_t WebCore::JSCommandLineAPIHost::subspaceForImpl(WebCore::JSCommandLineAPIHost *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 5672);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 5672))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 5672);
    *(_QWORD *)(v8 + 5672) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 5672);
  *(_QWORD *)(v3 + 5672) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSComment>::construct(JSC *a1, uint64_t a2)
{
  JSC::VM *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _DWORD **v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  JSC::VM *v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  WebCore::JSDOMGlobalObject *v15;
  _DWORD *v16;
  void *v17;
  JSCell *v18;
  JSC::JSCell *v19;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v21;
  JSC::JSGlobalObject *v22;
  WebCore::JSCharacterData *v23;
  JSC::VM *FunctionRealm;
  JSC::JSObject *v25;
  JSC::Structure *v26;
  unint64_t SubclassStructure;
  WebCore::Node *v28;
  uint64_t v29;
  int hasExceptionsAfterHandlingTraps;
  WTF::StringImpl *v32;
  int v33;
  uint64_t v34;
  int v35;
  JSC::VM *v36;
  WTF::StringImpl *v37;
  WebCore::Node *v38;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v36 = v4;
  v5 = *(_QWORD *)(a2 + 24);
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(v5 + 40));
  if (!v6)
    return (JSCell *)WebCore::throwConstructorScriptExecutionContextUnavailableError(a1, &v36, (uint64_t)"Comment", 8);
  v7 = v6;
  if (*(_BYTE *)(v6 + 274))
  {
    __break(0xC471u);
    goto LABEL_58;
  }
  v8 = (_DWORD **)MEMORY[0x1E0CBF738];
  if (*(_DWORD *)(a2 + 32) == 1 || (v9 = *(_QWORD *)(a2 + 48), v9 == 10))
  {
    v10 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
    if (*MEMORY[0x1E0CBF738])
      *(_DWORD *)v10 += 2;
    v35 = 0;
    goto LABEL_17;
  }
  v38 = *(WebCore::Node **)(a2 + 48);
  v11 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((v9 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v9 + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v38, a1);
    goto LABEL_14;
  }
  v12 = *(WTF::StringImpl **)(v9 + 8);
  if ((v12 & 1) != 0)
  {
    v12 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v9, a1);
    if (!v12)
      goto LABEL_13;
    goto LABEL_12;
  }
  if (v12)
LABEL_12:
    *(_DWORD *)v12 += 2;
LABEL_13:
  v37 = v12;
LABEL_14:
  if (*((_DWORD *)v11 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v11);
    v10 = v37;
    if (hasExceptionsAfterHandlingTraps)
    {
      v35 = 1;
      v37 = 0;
      if (v10)
      {
        if (*(_DWORD *)v10 == 2)
          WTF::StringImpl::destroy(v10, v32);
        else
          *(_DWORD *)v10 -= 2;
      }
      v18 = 0;
      v29 = 1;
      goto LABEL_30;
    }
  }
  else
  {
    v10 = v37;
  }
  v35 = 0;
LABEL_17:
  v34 = 0;
  v13 = bmalloc::api::isoAllocate();
  *(_OWORD *)(v13 + 8) = xmmword_1968BC9D0;
  *(_QWORD *)(v13 + 24) = 0x800100000002;
  *(_QWORD *)(v13 + 32) = 0;
  *(_QWORD *)(v13 + 40) = v7 - 96;
  *(_OWORD *)(v13 + 48) = 0u;
  *(_OWORD *)(v13 + 64) = 0u;
  ++*(_DWORD *)(v7 + 3132);
  if (!v10)
  {
    v16 = *v8;
    if (*v8)
    {
      *v16 += 2;
      *(_QWORD *)(v13 + 80) = v16;
    }
    else
    {
      *(_QWORD *)(v13 + 80) = 0;
    }
    *(_QWORD *)v13 = off_1E33A15C0;
    v38 = (WebCore::Node *)v13;
    goto LABEL_21;
  }
  v33 = *(_DWORD *)v10;
  *(_DWORD *)v10 += 2;
  *(_QWORD *)(v13 + 80) = v10;
  *(_QWORD *)v13 = off_1E33A15C0;
  v38 = (WebCore::Node *)v13;
  if (!v33)
  {
    WTF::StringImpl::destroy(v10, v14);
    if (*(uint64_t (***)(WebCore::Node *__hidden))v38 == off_1E33A15C0)
      goto LABEL_21;
    __break(0xC471u);
LABEL_58:
    JUMPOUT(0x19494A18CLL);
  }
  *(_DWORD *)v10 = v33;
LABEL_21:
  v18 = (JSCell *)WebCore::createWrapper<WebCore::Comment,WebCore::Comment>(*(JSC::VM **)(v5 + 40), (uint64_t *)&v38, v15);
  v19 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v19 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v19);
    if (Object)
    {
      v22 = Object;
      if (Object != *(JSC::JSGlobalObject **)(a2 + 24))
      {
        v23 = (WebCore::JSCharacterData *)*((_QWORD *)a1 + 7);
        FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, Object, v21);
        if (!*((_DWORD *)v23 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v23) & 1) == 0)
        {
          v25 = (JSC::JSObject *)WebCore::getDOMStructure<WebCore::JSComment>(v23, FunctionRealm);
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v22, v25, v26);
          if (!*((_DWORD *)v23 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v23) & 1) == 0)
            JSC::JSObject::setStructure(v18, v23, SubclassStructure);
        }
      }
    }
  }
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    v18 = 0;
  v28 = v38;
  v38 = 0;
  if (v28)
  {
    if (*((_DWORD *)v28 + 6) == 2)
    {
      if ((*((_WORD *)v28 + 15) & 0x400) == 0)
        WebCore::Node::removedLastRef(v28, v17);
    }
    else
    {
      *((_DWORD *)v28 + 6) -= 2;
    }
  }
  v29 = 0;
LABEL_30:
  ((void (*)(WebCore::Node **, uint64_t *))off_1E324FDC0[v29])(&v38, &v34);
  return v18;
}

uint64_t WebCore::JSComment::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSCharacterData::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSCharacterData::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSCharacterData::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSComment::createPrototype(WebCore::JSComment *this, JSC::VM *a2, WebCore::JSDOMGlobalObject *a3)
{
  JSC::JSCell *v5;
  unint64_t Structure;
  JSC::Structure *v7;

  v5 = (JSC::JSCell *)WebCore::JSCharacterData::prototype(this, a2, a3);
  Structure = WebCore::JSCommentPrototype::createStructure((uint64_t *)this, (uint64_t)a2, v5);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  return WebCore::JSCommentPrototype::create(this, a2, Structure, v7);
}

uint64_t WebCore::JSCommentPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCommentPrototype::create(WebCore::JSCommentPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  JSC::Structure *v15;
  int v16;
  unint64_t v18;
  WTF::StringImpl *v19[6];
  int v20;
  int v21;
  JSC::Structure *v22;
  int v23;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v18 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v18);
    *((_QWORD *)this + 4865) = SlowCase + (int)v18;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)SlowCase, this);
  WTF::AtomStringImpl::addLiteral();
  v9 = v19[0];
  JSC::reifyStaticProperty(this, (uint64_t)&WebCore::JSComment::s_info, (unint64_t *)v19, (uint64_t)&WebCore::JSCommentPrototypeTableValues, (unsigned __int8 *)SlowCase);
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v10);
    else
      *(_DWORD *)v9 -= 2;
  }
  v11 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create((uint64_t)this, v19);
  v14 = v19[0];
  v19[0] = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  v15 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v23 = *(_DWORD *)SlowCase;
  v22 = v15;
  v16 = JSC::Structure::outOfLineCapacity(v15);
  v20 = 0;
  v21 = v16;
  v19[0] = (WTF::StringImpl *)&v21;
  v19[1] = (WTF::StringImpl *)SlowCase;
  v19[2] = this;
  v19[3] = (WTF::StringImpl *)&v23;
  v19[4] = (WTF::StringImpl *)&v22;
  v19[5] = (WTF::StringImpl *)&v20;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v15, this, v11, 6, (uint64_t)v19);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v20, v13);
  *((_DWORD *)v15 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSComment>,(WebCore::DOMConstructorID)420>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v19;
  unint64_t v20;
  WTF::StringImpl *v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3360);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCharacterData>,(WebCore::DOMConstructorID)418>(a1, a2);
  v7 = v6;
  LODWORD(v21) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v19 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v19);
    v5[2] = SlowCase + (int)v19;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v21, &WebCore::JSDOMConstructor<WebCore::JSComment>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 >= v10[2847])
  {
    v2 = v10[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v20 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v20);
    v10[2848] = v2 + (int)v20;
  }
  v10[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v21);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v21);
  v14 = v21;
  v21 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v21);
  v16 = *(_QWORD *)(v5[227] + 2160);
  v17 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSComment>((WebCore::JSCharacterData *)a1, (JSC::VM *)a2) + 48);
  v21 = 0;
  v22 = v2;
  v23 = -1;
  v24 = 0x1000000;
  v25 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v17, 14, (uint64_t)&v21);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3360) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCommentConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCommentPrototype::s_info != (char **)(16
                                                       * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSComment>,(WebCore::DOMConstructorID)420>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSComment::subspaceForImpl(WebCore::JSComment *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  WTF *v11;
  void *v12;
  int v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  WTF *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  WTF *v23;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3440);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v7))
  {
    goto LABEL_6;
  }
  MEMORY[0x19AEA534C](v7, a2);
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  v21 = *(_QWORD *)(v9 + 3440);
  if (!v21)
  {
    v14 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v23, "IsoSpace T");
    v22 = 0;
    MEMORY[0x19AEA3204](v14, &v23, (char *)this + 192, (char *)this + 1872, 32, 8, &v22);
    v16 = v22;
    v22 = 0;
    if (v16)
      (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
    v17 = v23;
    v23 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 1)
        WTF::fastFree(v17, v15);
      else
        --*(_DWORD *)v17;
    }
    v21 = v14;
    v18 = *(_QWORD *)(v9 + 3440);
    *(_QWORD *)(v9 + 3440) = v14;
    if (v18)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
    v19 = *(unsigned int *)(v7 + 2844);
    if ((_DWORD)v19 == *(_DWORD *)(v7 + 2840))
    {
      v20 = (_QWORD *)WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::expandCapacity<(WTF::FailureAction)0>(v7 + 2832, v19 + 1, (unint64_t)&v21);
      v19 = *(unsigned int *)(v7 + 2844);
      *(_QWORD *)(*(_QWORD *)(v7 + 2832) + 8 * v19) = *v20;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v7 + 2832) + 8 * v19) = v14;
    }
    *(_DWORD *)(v7 + 2844) = v19 + 1;
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v10 = *(_QWORD *)(v3 + 3440);
  *(_QWORD *)(v3 + 3440) = v4;
  if (v10)
  {
    v11 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v11, v12);
  }
  v13 = __ldxr((unsigned __int8 *)v7);
  if (v13 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::createWrapper<WebCore::Comment,WebCore::Comment>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  unint64_t v13;
  WebCore::JSCharacterData *v14;
  JSC::JSCell *v15;
  unint64_t Structure;
  JSC::Structure *v17;
  JSC::JSCell *v18;
  uint64_t v19;
  uint64_t v20;
  int v22;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (!v6)
    goto LABEL_4;
  v7 = *(_DWORD *)(v6 - 8);
  v8 = ((unint64_t)&WebCore::JSComment::s_info + ~((_QWORD)&WebCore::JSComment::s_info << 32)) ^ (((unint64_t)&WebCore::JSComment::s_info + ~((_QWORD)&WebCore::JSComment::s_info << 32)) >> 22);
  v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
  v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
  v11 = v7 & ((v10 >> 31) ^ v10);
  v12 = *(char ***)(v6 + 16 * v11);
  if (v12 != &WebCore::JSComment::s_info)
  {
    v22 = 1;
    while (v12)
    {
      v11 = ((_DWORD)v11 + v22) & v7;
      v12 = *(char ***)(v6 + 16 * v11);
      ++v22;
      if (v12 == &WebCore::JSComment::s_info)
        goto LABEL_3;
    }
    goto LABEL_4;
  }
LABEL_3:
  v13 = *(_QWORD *)(v6 + 16 * v11 + 8);
  if (!v13)
  {
LABEL_4:
    v14 = (WebCore::JSCharacterData *)*((_QWORD *)a1 + 7);
    v15 = (JSC::JSCell *)WebCore::JSCharacterData::prototype(v14, a1, a3);
    Structure = WebCore::JSCommentPrototype::createStructure((uint64_t *)v14, (uint64_t)a1, v15);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v18 = (JSC::JSCell *)WebCore::JSCommentPrototype::create(v14, a1, Structure, v17);
    v19 = WebCore::JSComment::createStructure((uint64_t *)v14, (uint64_t)a1, v18);
    v13 = WebCore::cacheDOMStructure((JSCell *)a1, v19, (uint64_t)&WebCore::JSComment::s_info);
  }
  v20 = WebCore::JSComment::create(v13, a1, a2);
  WebCore::cacheWrapper<WebCore::CDATASection,WebCore::JSCDATASection>(*((_QWORD *)a1 + 415), v5, v20);
  return v20;
}

uint64_t WebCore::convertEnumerationToJS<WebCore::CompositeOperation>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)(a1 + 41968);
  {
    WebCore::convertEnumerationToString(WebCore::CompositeOperation)::$_0::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CompositeOperation)::$_1::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CompositeOperation)::values[0] = (uint64_t)&WebCore::convertEnumerationToString(WebCore::CompositeOperation)::$_0::operator() const(void)::impl;
    *(_QWORD *)algn_1EE2F44D8 = &WebCore::convertEnumerationToString(WebCore::CompositeOperation)::$_1::operator() const(void)::impl;
    WebCore::convertEnumerationToString(WebCore::CompositeOperation)::$_2::operator() const(void)::impl += 2;
    qword_1EE2F44E0 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::CompositeOperation)::$_2::operator() const(void)::impl;
  }
  v3 = WebCore::convertEnumerationToString(WebCore::CompositeOperation)::values[a2];
  if (!v3)
    return *v2;
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  *(_DWORD *)v3 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_6:
      v6 = *(_QWORD *)(a1 + 64760);
      if (!v6 || v3 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v3 - 2;
      }
      goto LABEL_9;
    }
    v8 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_6;
      v9 = v10;
    }
    v6 = *(_QWORD *)(a1 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *v2;
  }
LABEL_9:
  if (v4)
    *(_DWORD *)v3 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v3, a2);
  return v6;
}

uint64_t WebCore::parseEnumeration<WebCore::CompositeOperation>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  int v5;
  const char *v6;
  int v7;
  int v9;
  int v10;
  char **v13;
  uint16x8_t v14;
  uint16x8_t v15;
  uint64_t v19;
  unint64_t v20;

  v3 = a1;
  v20 = this;
  if ((this & 0xFFFE000000000002) == 0 && *(_BYTE *)(this + 5) == 2)
  {
    v4 = *(_QWORD *)(this + 8);
    if ((v4 & 1) != 0)
    {
      v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
      if (!v4)
      {
LABEL_6:
        if (v4)
          goto LABEL_7;
LABEL_33:
        v10 = 0;
        v9 = 0;
        return v10 | (v9 << 8);
      }
    }
    else if (!v4)
    {
      goto LABEL_6;
    }
    *(_DWORD *)v4 += 2;
    goto LABEL_6;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v20, a1);
  v4 = v19;
  if (!v19)
    goto LABEL_33;
LABEL_7:
  v5 = *(_DWORD *)(v4 + 16);
  v6 = *(const char **)(v4 + 8);
  v7 = *(_DWORD *)(v4 + 4);
  if (v6 != "accumulate" && v7 == 10)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 97 || *(_QWORD *)(v6 + 1) != 0x74616C756D756363 || *(_QWORD *)(v6 + 2) != 0x6574616C756D7563)
        goto LABEL_16;
    }
    else
    {
      if (*(_WORD *)v6 != 97)
        goto LABEL_16;
      v14 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v6 + 2), (int16x8_t)xmmword_1968BD1E0);
      v14.i16[0] = vminvq_u16(v14);
      if (!v14.i32[0])
        goto LABEL_16;
      v15 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v6 + 4), (int16x8_t)xmmword_1968BD1F0);
      v15.i16[0] = vminvq_u16(v15);
      if (!v15.i32[0])
        goto LABEL_16;
    }
    goto LABEL_37;
  }
  if (v6 == "accumulate" && v7 == 10)
  {
LABEL_37:
    v13 = &WebCore::parseEnumerationFromString<WebCore::CompositeOperation>(WTF::String const&)::mappings;
    goto LABEL_38;
  }
  if (v6 != "add" && v7 == 3)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 97 || *(_WORD *)(v6 + 1) != 25700)
        goto LABEL_16;
    }
    else if (*(_WORD *)v6 != 97 || *(_DWORD *)(v6 + 2) != 6553700)
    {
      goto LABEL_16;
    }
  }
  else if (v6 != "add" || v7 != 3)
  {
    if (v6 == "replace" || v7 != 7)
    {
      if (v7 == 7 && v6 == "replace")
        goto LABEL_54;
    }
    else if ((v5 & 4) != 0)
    {
      if (*v6 == 114 && *(_DWORD *)(v6 + 1) == 1634496613 && *(_DWORD *)(v6 + 3) == 1701011820)
      {
LABEL_54:
        v13 = &off_1E324C680;
        goto LABEL_38;
      }
    }
    else if (*(_WORD *)v6 == 114
           && *(_QWORD *)(v6 + 6) == 0x6500630061006CLL
           && *(_QWORD *)(v6 + 2) == 0x61006C00700065)
    {
      goto LABEL_54;
    }
LABEL_16:
    v9 = 0;
    v10 = 0;
    goto LABEL_39;
  }
  v13 = &off_1E324C668;
LABEL_38:
  v10 = *((unsigned __int8 *)v13 + 16);
  v9 = 1;
LABEL_39:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v10 | (v9 << 8);
}

uint64_t WebCore::convertEnumerationToJS<WebCore::CompositeOperationOrAuto>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)(a1 + 41968);
  {
    WebCore::convertEnumerationToString(WebCore::CompositeOperationOrAuto)::$_0::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CompositeOperationOrAuto)::$_1::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CompositeOperationOrAuto)::$_2::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CompositeOperationOrAuto)::$_3::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CompositeOperationOrAuto)::values[0] = (uint64_t)&WebCore::convertEnumerationToString(WebCore::CompositeOperationOrAuto)::$_0::operator() const(void)::impl;
    *(_QWORD *)algn_1EE2F44F8 = &WebCore::convertEnumerationToString(WebCore::CompositeOperationOrAuto)::$_1::operator() const(void)::impl;
    qword_1EE2F4500 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::CompositeOperationOrAuto)::$_2::operator() const(void)::impl;
    unk_1EE2F4508 = &WebCore::convertEnumerationToString(WebCore::CompositeOperationOrAuto)::$_3::operator() const(void)::impl;
  }
  v3 = WebCore::convertEnumerationToString(WebCore::CompositeOperationOrAuto)::values[a2];
  if (!v3)
    return *v2;
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  *(_DWORD *)v3 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_6:
      v6 = *(_QWORD *)(a1 + 64760);
      if (!v6 || v3 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v3 - 2;
      }
      goto LABEL_9;
    }
    v8 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_6;
      v9 = v10;
    }
    v6 = *(_QWORD *)(a1 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *v2;
  }
LABEL_9:
  if (v4)
    *(_DWORD *)v3 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v3, a2);
  return v6;
}

uint64_t WebCore::parseEnumeration<WebCore::CompositeOperationOrAuto>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  int v5;
  const char *v6;
  int v7;
  int v9;
  int v10;
  char **v13;
  uint16x8_t v14;
  uint16x8_t v15;
  uint64_t v19;
  unint64_t v20;

  v3 = a1;
  v20 = this;
  if ((this & 0xFFFE000000000002) == 0 && *(_BYTE *)(this + 5) == 2)
  {
    v4 = *(_QWORD *)(this + 8);
    if ((v4 & 1) != 0)
    {
      v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
      if (!v4)
      {
LABEL_6:
        if (v4)
          goto LABEL_7;
LABEL_33:
        v10 = 0;
        v9 = 0;
        return v10 | (v9 << 8);
      }
    }
    else if (!v4)
    {
      goto LABEL_6;
    }
    *(_DWORD *)v4 += 2;
    goto LABEL_6;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v20, a1);
  v4 = v19;
  if (!v19)
    goto LABEL_33;
LABEL_7:
  v5 = *(_DWORD *)(v4 + 16);
  v6 = *(const char **)(v4 + 8);
  v7 = *(_DWORD *)(v4 + 4);
  if (v6 != "accumulate" && v7 == 10)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 97 || *(_QWORD *)(v6 + 1) != 0x74616C756D756363 || *(_QWORD *)(v6 + 2) != 0x6574616C756D7563)
        goto LABEL_16;
    }
    else
    {
      if (*(_WORD *)v6 != 97)
        goto LABEL_16;
      v14 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v6 + 2), (int16x8_t)xmmword_1968BD1E0);
      v14.i16[0] = vminvq_u16(v14);
      if (!v14.i32[0])
        goto LABEL_16;
      v15 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v6 + 4), (int16x8_t)xmmword_1968BD1F0);
      v15.i16[0] = vminvq_u16(v15);
      if (!v15.i32[0])
        goto LABEL_16;
    }
    goto LABEL_37;
  }
  if (v6 == "accumulate" && v7 == 10)
  {
LABEL_37:
    v13 = &WebCore::parseEnumerationFromString<WebCore::CompositeOperationOrAuto>(WTF::String const&)::mappings;
    goto LABEL_38;
  }
  if (v6 != "add" && v7 == 3)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 97 || *(_WORD *)(v6 + 1) != 25700)
        goto LABEL_16;
    }
    else if (*(_WORD *)v6 != 97 || *(_DWORD *)(v6 + 2) != 6553700)
    {
      goto LABEL_16;
    }
    goto LABEL_29;
  }
  if (v6 == "add" && v7 == 3)
  {
LABEL_29:
    v13 = &off_1E324C6B0;
LABEL_38:
    v10 = *((unsigned __int8 *)v13 + 16);
    v9 = 1;
    goto LABEL_39;
  }
  if (v6 == "auto" || v7 != 4)
  {
    if (v6 == "auto" && v7 == 4)
      goto LABEL_54;
    if (v6 == "replace" || v7 != 7)
    {
      if (v7 != 7 || v6 != "replace")
        goto LABEL_16;
    }
    else if ((v5 & 4) != 0)
    {
      if (*v6 != 114 || *(_DWORD *)(v6 + 1) != 1634496613 || *(_DWORD *)(v6 + 3) != 1701011820)
        goto LABEL_16;
    }
    else
    {
      if (*(_WORD *)v6 != 114)
        goto LABEL_16;
      if (*(_QWORD *)(v6 + 6) != 0x6500630061006CLL || *(_QWORD *)(v6 + 2) != 0x61006C00700065)
        goto LABEL_16;
    }
    v13 = &off_1E324C6E0;
    goto LABEL_38;
  }
  if ((v5 & 4) != 0)
  {
    if (*v6 == 97 && *(_WORD *)(v6 + 1) == 29813 && *((_WORD *)v6 + 1) == 28532)
      goto LABEL_54;
LABEL_16:
    v9 = 0;
    v10 = 0;
    goto LABEL_39;
  }
  if (*(_WORD *)v6 != 97)
    goto LABEL_16;
  v9 = 0;
  if (*(_DWORD *)(v6 + 2) == 7602293)
  {
    v10 = 0;
    if (*((_DWORD *)v6 + 1) == 7274612)
    {
LABEL_54:
      v13 = &off_1E324C6C8;
      goto LABEL_38;
    }
  }
  else
  {
    v10 = 0;
  }
LABEL_39:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v10 | (v9 << 8);
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSCompositionEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  JSC::VM *v2;
  uint64_t v3;
  JSC::VM *v5;
  uint64_t v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t Object;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  WTF *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  _BOOL4 v22;
  _BOOL4 v23;
  _BOOL4 v24;
  WTF *v25;
  int v26;
  WTF::StringImpl *v27;
  uint64_t v28;
  WTF::StringImpl *v29;
  WebCore::JSDOMGlobalObject *v30;
  uint64_t v31;
  int v32;
  unsigned int v33;
  int v34;
  JSC::VM *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char **v43;
  int v44;
  unint64_t v45;
  WebCore::JSUIEvent *v46;
  JSC::JSCell *v47;
  unint64_t Structure;
  JSC::Structure *v49;
  JSC::JSCell *v50;
  uint64_t v51;
  JSCell *v52;
  JSC::JSCell *v53;
  JSC::JSGlobalObject *v54;
  JSC::JSObject *v55;
  JSC::JSGlobalObject *v56;
  JSC::VM *v57;
  WebCore::JSDOMGlobalObject *v58;
  JSC::Structure *v59;
  JSC::VM *FunctionRealm;
  uint64_t v61;
  unsigned int v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char **v67;
  int v68;
  JSC::JSCell *v69;
  unint64_t v70;
  JSC::Structure *v71;
  JSC::JSCell *v72;
  uint64_t v73;
  unint64_t SubclassStructure;
  _DWORD *v75;
  JSC::VM *v77;
  double v78;
  WTF::StringImpl *v79;
  WTF::StringImpl *v80;
  unint64_t v81;
  JSC::VM *v82;
  double v83;
  WTF::StringImpl *v84;
  WTF::StringImpl *v85;
  unint64_t v86;
  JSC::VM *v87;
  double v88;
  WTF::StringImpl *v89;
  WTF::StringImpl *v90;
  JSC::VM *v91;
  WTF::StringImpl *v92;
  WTF::StringImpl *v93;
  uint64_t v94;
  WTF::StringImpl *v95;
  WTF::StringImpl *v96;
  WTF::StringImpl *v97;
  unsigned int *v98;
  unsigned int v99;
  unsigned int v100;
  uint64_t *v101;
  unsigned int *v102;
  unsigned int v103;
  unsigned int v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  int v109;
  JSValue v110;
  WTF::StringImpl *v111;
  int hasExceptionsAfterHandlingTraps;
  unint64_t v113;
  BOOL v114;
  int v115;
  uint64_t v116;
  int *v117;
  int v118;
  BOOL v119;
  int v120;
  uint64_t v121;
  int *v122;
  int v123;
  BOOL v124;
  int v125;
  uint64_t v126;
  int *v127;
  int v128;
  uint64_t v129;
  JSC::VM *v130;
  uint64_t v131;
  uint64_t v132;
  BOOL v133;
  BOOL v134;
  BOOL v135;
  WTF *v136;
  int v137;
  WTF::StringImpl *v138;
  unsigned int v139;
  WTF::StringImpl *v140;
  int v141;
  unint64_t v142;
  int v143;
  JSC::VM *v144;
  WTF::StringImpl *v145;
  _QWORD v146[2];

  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v110.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v5, a1, v110);
  }
  v7 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v140);
  v8 = v141;
  if (!v141)
  {
    v9 = 0xFFFE000000000002;
    v129 = a2;
    v130 = v5;
    v131 = v7;
    if ((unint64_t)(*(int *)(a2 + 32) - 3) >= 0xFFFFFFFFFFFFFFFELL)
    {
      v144 = (JSC::VM *)*((_QWORD *)a1 + 7);
      v10 = 10;
    }
    else
    {
      v10 = *(_QWORD *)(a2 + 56);
      v2 = (JSC::VM *)*((_QWORD *)a1 + 7);
      v144 = v2;
      if ((v10 & 0xFFFFFFFFFFFFFFF7) != 2)
      {
        v132 = v10;
        if ((v10 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject((JSC::JSCell *)v10)) == 0)
        {
LABEL_127:
          JSC::throwTypeError();
          goto LABEL_128;
        }
        v3 = Object;
        WTF::AtomStringImpl::addLiteral();
        v12 = (WTF::StringImpl *)v142;
        v14 = JSC::JSObject::get((JSC::Structure *)v3, a1, v142);
        if (v12)
        {
          if (*(_DWORD *)v12 == 2)
            WTF::StringImpl::destroy(v12, v13);
          else
            *(_DWORD *)v12 -= 2;
        }
        if (*((_DWORD *)v2 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v2) & 1) != 0)
        {
LABEL_128:
          v52 = 0;
          LODWORD(v9) = 1;
          v139 = 1;
LABEL_65:
          ((void (*)(unint64_t *, BOOL *))off_1E324FFE0[v9])(&v142, &v133);
LABEL_66:
          v8 = v141;
          goto LABEL_67;
        }
        if (v14 == 10)
        {
          v15 = 0;
          while (1)
          {
            WTF::AtomStringImpl::addLiteral();
            v79 = (WTF::StringImpl *)v142;
            v81 = JSC::JSObject::get((JSC::Structure *)v3, a1, v142);
            if (v79)
            {
              if (*(_DWORD *)v79 == 2)
                WTF::StringImpl::destroy(v79, v80);
              else
                *(_DWORD *)v79 -= 2;
            }
            if (*((_DWORD *)v2 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v2) & 1) != 0)
              goto LABEL_128;
            if (v81 == 10)
            {
              v17 = 0;
              goto LABEL_86;
            }
            v82 = (JSC::VM *)*((_QWORD *)a1 + 7);
            if (v81 >= 0xFFFE000000000000)
              break;
            *(_QWORD *)&v83 = v81 - 0x2000000000000;
            if (v81 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              if ((v81 & v9) != 0)
              {
                v17 = v81 == 7;
                goto LABEL_85;
              }
              v120 = *(unsigned __int8 *)(v81 + 5);
              if (v120 == 3)
              {
                v123 = *(_DWORD *)(v81 + 8);
                goto LABEL_248;
              }
              if (v120 == 2)
              {
                v121 = *(_QWORD *)(v81 + 8);
                if ((v121 & 1) != 0)
                  v122 = (int *)(v81 + 16);
                else
                  v122 = (int *)(v121 + 4);
                v123 = *v122;
LABEL_248:
                v119 = v123 == 0;
              }
              else
              {
                if ((*(_BYTE *)(16 * (*(_DWORD *)v81 & 0xFFFFFFFE) + 0xA) & 1) == 0)
                {
LABEL_250:
                  v17 = 1;
                  goto LABEL_85;
                }
                v119 = *(_QWORD *)(16 * (*(_DWORD *)v81 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
              }
LABEL_260:
              v17 = !v119;
              goto LABEL_85;
            }
            if (v83 > 0.0)
              goto LABEL_250;
            v17 = v83 < 0.0;
LABEL_85:
            if (*((_DWORD *)v82 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v82) & 1) != 0)
              goto LABEL_128;
LABEL_86:
            WTF::AtomStringImpl::addLiteral();
            v84 = (WTF::StringImpl *)v142;
            v86 = JSC::JSObject::get((JSC::Structure *)v3, a1, v142);
            if (v84)
            {
              if (*(_DWORD *)v84 == 2)
                WTF::StringImpl::destroy(v84, v85);
              else
                *(_DWORD *)v84 -= 2;
            }
            if (*((_DWORD *)v2 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v2) & 1) != 0)
              goto LABEL_128;
            if (v86 == 10)
            {
              v16 = 0;
              goto LABEL_97;
            }
            v87 = (JSC::VM *)*((_QWORD *)a1 + 7);
            if (v86 >= 0xFFFE000000000000)
            {
              v124 = (_DWORD)v86 == 0;
              goto LABEL_264;
            }
            *(_QWORD *)&v88 = v86 - 0x2000000000000;
            if (v86 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
            {
              if ((v86 & v9) != 0)
              {
                v16 = v86 == 7;
                goto LABEL_96;
              }
              v125 = *(unsigned __int8 *)(v86 + 5);
              if (v125 == 3)
              {
                v128 = *(_DWORD *)(v86 + 8);
              }
              else
              {
                if (v125 != 2)
                {
                  if ((*(_BYTE *)(16 * (*(_DWORD *)v86 & 0xFFFFFFFE) + 0xA) & 1) == 0)
                  {
LABEL_254:
                    v16 = 1;
                    goto LABEL_96;
                  }
                  v124 = *(_QWORD *)(16 * (*(_DWORD *)v86 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
                  goto LABEL_264;
                }
                v126 = *(_QWORD *)(v86 + 8);
                if ((v126 & 1) != 0)
                  v127 = (int *)(v86 + 16);
                else
                  v127 = (int *)(v126 + 4);
                v128 = *v127;
              }
              v124 = v128 == 0;
LABEL_264:
              v16 = !v124;
              goto LABEL_96;
            }
            if (v88 > 0.0)
              goto LABEL_254;
            v16 = v88 < 0.0;
LABEL_96:
            if (*((_DWORD *)v87 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v87) & 1) != 0)
              goto LABEL_128;
LABEL_97:
            WTF::AtomStringImpl::addLiteral();
            v89 = (WTF::StringImpl *)v142;
            v14 = JSC::JSObject::get((JSC::Structure *)v3, a1, v142);
            if (v89)
            {
              if (*(_DWORD *)v89 == 2)
                WTF::StringImpl::destroy(v89, v90);
              else
                *(_DWORD *)v89 -= 2;
            }
            if (*((_DWORD *)v2 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v2) & 1) != 0)
              goto LABEL_128;
            if (v14 == 10)
            {
              LODWORD(v14) = 0;
            }
            else
            {
              v142 = v14;
              v91 = (JSC::VM *)*((_QWORD *)a1 + 7);
              if (v14 < 0xFFFE000000000000)
              {
                v105 = v14 - 0x2000000000000;
                if (v14 - 0x2000000000000 >= 0xFFFC000000000000)
                {
                  JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v142, a1);
                  v105 = v113;
                }
                v106 = (v105 >> 52) & 0x7FF;
                if ((v106 - 1023) <= 0x53)
                {
                  v108 = v105 >> (51 - (v105 >> 52));
                  if (v106 > 0x433)
                    LODWORD(v108) = v105 << ((v105 >> 52) - 51);
                  if (v106 >= 0x41F)
                    v109 = v108;
                  else
                    v109 = (((1 << ((v105 >> 52) + 1)) - 1) & v108) + (1 << ((v105 >> 52) + 1));
                  if ((v105 & 0x8000000000000000) == 0)
                    LODWORD(v14) = v109;
                  else
                    LODWORD(v14) = -v109;
                }
                else
                {
                  LODWORD(v14) = 0;
                }
              }
              if (*((_DWORD *)v91 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v91))
                goto LABEL_128;
            }
            WTF::AtomStringImpl::addLiteral();
            v92 = (WTF::StringImpl *)v142;
            v94 = JSC::JSObject::get((JSC::Structure *)v3, a1, v142);
            if (v92)
            {
              if (*(_DWORD *)v92 == 2)
                WTF::StringImpl::destroy(v92, v93);
              else
                *(_DWORD *)v92 -= 2;
            }
            if (*((_DWORD *)v2 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v2) & 1) != 0)
              goto LABEL_128;
            if ((v94 | 8) == 0xA)
            {
              v18 = 0;
            }
            else
            {
              v142 = *((_QWORD *)a1 + 7);
              if ((v94 & 0xFFFE000000000002) != 0)
                goto LABEL_127;
              if (*(unsigned __int8 *)(v94 + 5) < 0x17u)
                goto LABEL_127;
              if (&WebCore::JSWindowProxy::s_info != (char **)(16
                                                              * *(unsigned int *)(16 * (*(_DWORD *)v94 & 0xFFFFFFFE)
                                                                                + 0x4C)))
                goto LABEL_127;
              v107 = *(_QWORD *)(*(_QWORD *)(v94 + 16) + 3408);
              if (!(*(uint64_t (**)(uint64_t))(*(_QWORD *)v107 + 104))(v107))
                goto LABEL_127;
              v18 = *(WTF **)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v107 + 104))(v107) + 112);
              if (!v18)
                goto LABEL_127;
              ++*(_DWORD *)v18;
            }
            WTF::AtomStringImpl::addLiteral();
            v95 = (WTF::StringImpl *)v142;
            v3 = JSC::JSObject::get((JSC::Structure *)v3, a1, v142);
            if (v95)
            {
              if (*(_DWORD *)v95 == 2)
                WTF::StringImpl::destroy(v95, v96);
              else
                *(_DWORD *)v95 -= 2;
            }
            if (*((_DWORD *)v2 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v2))
            {
              v9 = 1;
              v139 = 1;
              if (!v18)
                goto LABEL_22;
              goto LABEL_20;
            }
            v10 = v132;
            if (v3 == 10)
            {
LABEL_15:
              v19 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
              if (*MEMORY[0x1E0CBF738])
                *(_DWORD *)v19 += 2;
              v132 = v10;
              goto LABEL_18;
            }
            v146[0] = v3;
            v2 = (JSC::VM *)*((_QWORD *)a1 + 7);
            if ((v3 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v3 + 5) == 2)
            {
              v97 = *(WTF::StringImpl **)(v3 + 8);
              if ((v97 & 1) != 0)
              {
                v97 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v3, a1);
                if (v97)
LABEL_120:
                  *(_DWORD *)v97 += 2;
              }
              else if (v97)
              {
                goto LABEL_120;
              }
              v145 = v97;
              goto LABEL_122;
            }
            JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)v146, a1);
LABEL_122:
            if (!*((_DWORD *)v2 + 20))
            {
              v19 = v145;
LABEL_18:
              v143 = 0;
              v9 = 0;
              v142 = 0;
              v133 = v15;
              v134 = v17;
              v135 = v16;
              v136 = v18;
              v137 = v14;
              v138 = v19;
              v18 = 0;
              goto LABEL_19;
            }
            hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v2);
            v19 = v145;
            if (!hasExceptionsAfterHandlingTraps)
              goto LABEL_18;
            v143 = 1;
            v145 = 0;
            if (v19)
            {
              if (*(_DWORD *)v19 == 2)
                WTF::StringImpl::destroy(v19, v111);
              else
                *(_DWORD *)v19 -= 2;
            }
            v9 = 1;
LABEL_19:
            v139 = v9;
            ((void (*)(_QWORD *, unint64_t *))off_1E324FDC0[v9])(v146, &v142);
            if (!v18)
              goto LABEL_22;
LABEL_20:
            if (*(_DWORD *)v18 == 1)
            {
              v2 = (JSC::VM *)*((_QWORD *)v18 + 2);
              *((_QWORD *)v18 + 2) = 0;
              if (v2)
              {
                if (*(_QWORD *)v2)
                  WTF::HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>>::deallocateTable(*(_QWORD *)v2, v20);
                WTF::fastFree(v2, v20);
              }
              v98 = (unsigned int *)*((_QWORD *)v18 + 1);
              *((_QWORD *)v18 + 1) = 0;
              if (v98)
              {
                do
                {
                  v99 = __ldaxr(v98);
                  v100 = v99 - 1;
                }
                while (__stlxr(v100, v98));
                if (!v100)
                {
                  atomic_store(1u, v98);
                  WTF::fastFree((WTF *)v98, v20);
                }
              }
              WTF::fastFree(v18, v20);
              v9 = v139;
            }
            else
            {
              --*(_DWORD *)v18;
            }
LABEL_22:
            if ((_DWORD)v9)
            {
              v52 = 0;
              if ((_DWORD)v9 == -1)
                goto LABEL_66;
              goto LABEL_65;
            }
            if (!v141)
            {
              v21 = v140;
              v140 = 0;
              v22 = v133;
              v23 = v134;
              v24 = v135;
              v25 = v136;
              v26 = v137;
              v27 = v138;
              v136 = 0;
              v138 = 0;
              v28 = bmalloc::api::isoAllocate();
              WTF::MonotonicTime::now((WTF::MonotonicTime *)v28);
              *(_QWORD *)(v28 + 8) = 0;
              if (v22)
                v32 = 1802242;
              else
                v32 = 1802240;
              v33 = v32 | (v21 != 0) | (4 * v23) | (8 * v24) | *(_DWORD *)(v28 + 20) & 0xFFC00000;
              *(_DWORD *)(v28 + 16) = 1;
              *(_DWORD *)(v28 + 20) = v33;
              if (v21)
              {
                *(_DWORD *)v21 += 2;
                v33 = *(_DWORD *)(v28 + 20);
              }
              *(_QWORD *)(v28 + 24) = v21;
              *(_QWORD *)(v28 + 32) = 0;
              *(_QWORD *)(v28 + 40) = 0;
              *(_QWORD *)(v28 + 48) = 0;
              *(_QWORD *)(v28 + 56) = v31;
              *(_QWORD *)(v28 + 64) = 0;
              *(_DWORD *)(v28 + 20) = v33 | 0x4000;
              if (v25)
                ++*(_DWORD *)v25;
              *(_QWORD *)(v28 + 72) = v25;
              *(_DWORD *)(v28 + 80) = v26;
              *(_QWORD *)v28 = off_1E33A1338;
              if (v27)
              {
                v34 = *(_DWORD *)v27;
                *(_DWORD *)v27 += 2;
                *(_QWORD *)(v28 + 88) = v27;
                v142 = v28;
                if (v34)
                  *(_DWORD *)v27 = v34;
                else
                  WTF::StringImpl::destroy(v27, v29);
              }
              else
              {
                *(_QWORD *)(v28 + 88) = 0;
                v142 = v28;
              }
              if (v25)
              {
                if (*(_DWORD *)v25 != 1)
                {
                  --*(_DWORD *)v25;
                  goto LABEL_37;
                }
                v101 = (uint64_t *)*((_QWORD *)v25 + 2);
                *((_QWORD *)v25 + 2) = 0;
                if (v101)
                {
                  if (*v101)
                    WTF::HashTable<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashMap<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>,JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>,WTF::DefaultHash<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>,WTF::HashTraits<JSC::Strong<WebCore::JSDOMWindow,(JSC::ShouldStrongDestructorGrabLock)0>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<WTF::RefPtr<WebCore::DOMWrapperWorld,WTF::RawPtrTraits<WebCore::DOMWrapperWorld>,WTF::DefaultRefDerefTraits<WebCore::DOMWrapperWorld>>>>::deallocateTable(*v101, v29);
                  WTF::fastFree((WTF *)v101, v29);
                }
                v102 = (unsigned int *)*((_QWORD *)v25 + 1);
                *((_QWORD *)v25 + 1) = 0;
                if (v102)
                {
                  do
                  {
                    v103 = __ldaxr(v102);
                    v104 = v103 - 1;
                  }
                  while (__stlxr(v104, v102));
                  if (!v104)
                  {
                    atomic_store(1u, v102);
                    WTF::fastFree((WTF *)v102, v29);
                  }
                }
                WTF::fastFree(v25, v29);
                if (!v21)
                {
LABEL_40:
                  if (*(void (***)(WebCore::CompositionEvent *__hidden))v28 != off_1E33A1338)
                  {
                    __break(0xC471u);
                    JUMPOUT(0x19494C280);
                  }
                  v35 = *(JSC::VM **)(v131 + 40);
                  v36 = v142;
                  v37 = *((_QWORD *)v35 + 412);
                  if (!v37)
                    goto LABEL_47;
                  v38 = *(_DWORD *)(v37 - 8);
                  v39 = ((unint64_t)&WebCore::JSCompositionEvent::s_info
                       + ~((_QWORD)&WebCore::JSCompositionEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCompositionEvent::s_info
                                                                                  + ~((_QWORD)&WebCore::JSCompositionEvent::s_info << 32)) >> 22);
                  v40 = 9 * ((v39 + ~(v39 << 13)) ^ ((v39 + ~(v39 << 13)) >> 8));
                  v41 = (v40 ^ (v40 >> 15)) + ~((v40 ^ (v40 >> 15)) << 27);
                  v42 = v38 & ((v41 >> 31) ^ v41);
                  v43 = *(char ***)(v37 + 16 * v42);
                  if (v43 == &WebCore::JSCompositionEvent::s_info)
                  {
LABEL_46:
                    v45 = *(_QWORD *)(v37 + 16 * v42 + 8);
                    if (!v45)
                      goto LABEL_47;
                  }
                  else
                  {
                    v44 = 1;
                    while (v43)
                    {
                      v42 = ((_DWORD)v42 + v44) & v38;
                      v43 = *(char ***)(v37 + 16 * v42);
                      ++v44;
                      if (v43 == &WebCore::JSCompositionEvent::s_info)
                        goto LABEL_46;
                    }
LABEL_47:
                    v46 = (WebCore::JSUIEvent *)*((_QWORD *)v35 + 7);
                    v47 = (JSC::JSCell *)WebCore::JSUIEvent::prototype(v46, *(JSC::VM **)(v131 + 40), v30);
                    Structure = WebCore::JSCompositionEventPrototype::createStructure((uint64_t *)v46, (uint64_t)v35, v47);
                    *(_DWORD *)(Structure + 16) |= 0x80000u;
                    v50 = (JSC::JSCell *)WebCore::JSCompositionEventPrototype::create(v46, v35, Structure, v49);
                    v51 = WebCore::JSCompositionEvent::createStructure((uint64_t *)v46, (uint64_t)v35, v50);
                    v45 = WebCore::cacheDOMStructure((JSCell *)v35, v51, (uint64_t)&WebCore::JSCompositionEvent::s_info);
                  }
                  v52 = (JSCell *)WebCore::JSCompositionEvent::create(v45, v35, (uint64_t *)&v142);
                  WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*((_QWORD *)v35 + 415), v36, (uint64_t)v52);
                  v53 = *(JSC::JSCell **)(v129 + 40);
                  if (((unint64_t)v53 & 0xFFFE000000000002) != 0
                    || (v54 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v53)) == 0
                    || (v56 = v54, v54 == *(JSC::JSGlobalObject **)(v129 + 24))
                    || (v57 = (JSC::VM *)*((_QWORD *)a1 + 7),
                        FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v54, v55),
                        *((_DWORD *)v57 + 20))
                    && (JSC::VM::hasExceptionsAfterHandlingTraps(v57) & 1) != 0)
                  {
LABEL_61:
                    if (*((_DWORD *)v130 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v130) & 1) != 0)
                      v52 = 0;
                    v75 = (_DWORD *)v142;
                    v142 = 0;
                    if (v75)
                    {
                      if (v75[4] == 1)
                        (*(void (**)(_DWORD *))(*(_QWORD *)v75 + 8))(v75);
                      else
                        --v75[4];
                    }
                    goto LABEL_65;
                  }
                  v61 = *((_QWORD *)FunctionRealm + 412);
                  if (v61)
                  {
                    v62 = *(_DWORD *)(v61 - 8);
                    v63 = ((unint64_t)&WebCore::JSCompositionEvent::s_info
                         + ~((_QWORD)&WebCore::JSCompositionEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCompositionEvent::s_info
                                                                                    + ~((_QWORD)&WebCore::JSCompositionEvent::s_info << 32)) >> 22);
                    v64 = 9 * ((v63 + ~(v63 << 13)) ^ ((v63 + ~(v63 << 13)) >> 8));
                    v65 = (v64 ^ (v64 >> 15)) + ~((v64 ^ (v64 >> 15)) << 27);
                    v66 = v62 & ((v65 >> 31) ^ v65);
                    v67 = *(char ***)(v61 + 16 * v66);
                    if (v67 != &WebCore::JSCompositionEvent::s_info)
                    {
                      v68 = 1;
                      while (v67)
                      {
                        v66 = ((_DWORD)v66 + v68) & v62;
                        v67 = *(char ***)(v61 + 16 * v66);
                        ++v68;
                        if (v67 == &WebCore::JSCompositionEvent::s_info)
                          goto LABEL_57;
                      }
                      goto LABEL_58;
                    }
LABEL_57:
                    v58 = *(WebCore::JSDOMGlobalObject **)(v61 + 16 * v66 + 8);
                    if (!v58)
                      goto LABEL_58;
                  }
                  else
                  {
LABEL_58:
                    v69 = (JSC::JSCell *)WebCore::JSUIEvent::prototype(v57, FunctionRealm, v58);
                    v70 = WebCore::JSCompositionEventPrototype::createStructure((uint64_t *)v57, (uint64_t)FunctionRealm, v69);
                    *(_DWORD *)(v70 + 16) |= 0x80000u;
                    v72 = (JSC::JSCell *)WebCore::JSCompositionEventPrototype::create(v57, FunctionRealm, v70, v71);
                    v73 = WebCore::JSCompositionEvent::createStructure((uint64_t *)v57, (uint64_t)FunctionRealm, v72);
                    v58 = (WebCore::JSDOMGlobalObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v73, (uint64_t)&WebCore::JSCompositionEvent::s_info);
                  }
                  SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v56, v58, v59);
                  if (!*((_DWORD *)v57 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v57) & 1) == 0)
                    JSC::JSObject::setStructure(v52, v57, SubclassStructure);
                  goto LABEL_61;
                }
              }
              else
              {
LABEL_37:
                if (!v21)
                  goto LABEL_40;
              }
              if (*(_DWORD *)v21 == 2)
                WTF::StringImpl::destroy(v21, v29);
              else
                *(_DWORD *)v21 -= 2;
              goto LABEL_40;
            }
            v77 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_216:
            v114 = (_DWORD)v14 == 0;
LABEL_256:
            v15 = !v114;
LABEL_74:
            if (*((_DWORD *)v77 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v77) & 1) != 0)
              goto LABEL_128;
          }
          v119 = (_DWORD)v81 == 0;
          goto LABEL_260;
        }
        v77 = (JSC::VM *)*((_QWORD *)a1 + 7);
        if (v14 >= 0xFFFE000000000000)
          goto LABEL_216;
        *(_QWORD *)&v78 = v14 - 0x2000000000000;
        if (v14 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
        {
          if (v78 <= 0.0)
          {
            v15 = v78 < 0.0;
            goto LABEL_74;
          }
        }
        else
        {
          if ((v14 & 0xFFFE000000000002) != 0)
          {
            v15 = v14 == 7;
            goto LABEL_74;
          }
          v115 = *(unsigned __int8 *)(v14 + 5);
          if (v115 == 3)
          {
            v118 = *(_DWORD *)(v14 + 8);
LABEL_244:
            v114 = v118 == 0;
            goto LABEL_256;
          }
          if (v115 == 2)
          {
            v116 = *(_QWORD *)(v14 + 8);
            if ((v116 & 1) != 0)
              v117 = (int *)(v14 + 16);
            else
              v117 = (int *)(v116 + 4);
            v118 = *v117;
            goto LABEL_244;
          }
          if ((*(_BYTE *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0xA) & 1) != 0)
          {
            v114 = *(_QWORD *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            goto LABEL_256;
          }
        }
        v15 = 1;
        goto LABEL_74;
      }
    }
    v16 = 0;
    v17 = 0;
    v15 = 0;
    LODWORD(v14) = 0;
    v18 = 0;
    goto LABEL_15;
  }
  v52 = 0;
LABEL_67:
  if (v8 != -1)
    ((void (*)(BOOL *, WTF::StringImpl **))off_1E324FCB0[v8])(&v133, &v140);
  return v52;
}

uint64_t WebCore::JSCompositionEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSUIEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSUIEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSUIEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCompositionEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCompositionEventPrototype::create(WebCore::JSCompositionEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSCompositionEvent::s_info, &WebCore::JSCompositionEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCompositionEvent>,(WebCore::DOMConstructorID)421>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t *v6;
  unint64_t v7;
  JSC::JSCell *v8;
  uint64_t Structure;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v12;
  unint64_t v13;
  WTF::StringImpl *v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  unint64_t v17;
  WebCore::JSDOMGlobalObject *v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char **v26;
  int v27;
  uint64_t v28;
  JSC::JSCell *v29;
  unint64_t v30;
  JSC::Structure *v31;
  JSC::JSCell *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v36;
  unint64_t v37;
  WTF::StringImpl *v38;
  unint64_t v39;
  int v40;
  int v41;
  uint64_t v42;

  v2 = *(_QWORD *)(a2 + 3312);
  v3 = *(_QWORD *)(v2 + 3368);
  if (v3)
    return v3;
  v6 = (uint64_t *)(a1 + 40136);
  v7 = *(_QWORD *)(v2 + 3968);
  if (!v7)
  {
    v8 = (JSC::JSCell *)WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
    Structure = WebCore::JSDOMConstructor<WebCore::JSUIEvent>::createStructure((uint64_t *)a1, a2, v8);
    v7 = WebCore::JSDOMConstructor<WebCore::JSUIEvent>::create(a1, Structure, (JSC::VM *)a2);
    *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3968) = v7;
    if (v7)
    {
      if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
    }
  }
  LODWORD(v38) = 67099;
  if ((v7 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v7);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v6;
  if (*v6 < (unint64_t)v6[1])
    goto LABEL_8;
  SlowCase = v6[2];
  if ((SlowCase & 1) == 0)
  {
    v36 = *(_QWORD *)(SlowCase + 8) ^ v6[3];
    v6[1] = SlowCase + HIDWORD(v36);
    v6[2] = SlowCase + (int)v36;
LABEL_8:
    *v6 = SlowCase + 128;
    goto LABEL_9;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_9:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v38, &WebCore::JSDOMConstructor<WebCore::JSCompositionEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v12 = (_QWORD *)v6[165];
  v3 = v12[2846];
  if (v3 < v12[2847])
    goto LABEL_12;
  v3 = v12[2848];
  if ((v3 & 1) == 0)
  {
    v37 = *(_QWORD *)(v3 + 8) ^ v12[2849];
    v12[2847] = v3 + HIDWORD(v37);
    v12[2848] = v3 + (int)v37;
LABEL_12:
    v12[2846] = v3 + 48;
    goto LABEL_13;
  }
  JSC::sanitizeStackForVM();
  v3 = JSC::LocalAllocator::allocateSlowCase();
LABEL_13:
  *(_DWORD *)v3 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v13 = *(_QWORD *)(v6[227] + 1768);
  v38 = 0;
  v39 = v3;
  v40 = -1;
  v41 = 0x1000000;
  v42 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v3, (JSC::VM *)a1, v13, 0xFFFE000000000001, 6, (uint64_t)&v38);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v15 = JSC::JSString::create(a1, &v38);
  v16 = v38;
  v38 = 0;
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v14);
    else
      *(_DWORD *)v16 -= 2;
  }
  *(_QWORD *)(v3 + 32) = v15;
  if (v15 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v3 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v3);
  v17 = *(_QWORD *)(v6[227] + 1968);
  v38 = 0;
  v39 = v3;
  v40 = -1;
  v41 = 0x1000000;
  v42 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v3, (JSC::VM *)a1, v17, v15, 6, (uint64_t)&v38);
  v19 = *(_QWORD *)(v6[227] + 2160);
  v20 = *(_QWORD *)(a2 + 3296);
  if (v20)
  {
    v21 = *(_DWORD *)(v20 - 8);
    v22 = ((unint64_t)&WebCore::JSCompositionEvent::s_info + ~((_QWORD)&WebCore::JSCompositionEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCompositionEvent::s_info + ~((_QWORD)&WebCore::JSCompositionEvent::s_info << 32)) >> 22);
    v23 = 9 * ((v22 + ~(v22 << 13)) ^ ((v22 + ~(v22 << 13)) >> 8));
    v24 = (v23 ^ (v23 >> 15)) + ~((v23 ^ (v23 >> 15)) << 27);
    v25 = v21 & ((v24 >> 31) ^ v24);
    v26 = *(char ***)(v20 + 16 * v25);
    if (v26 == &WebCore::JSCompositionEvent::s_info)
    {
LABEL_22:
      v28 = *(_QWORD *)(v20 + 16 * v25 + 8);
      if (v28)
        goto LABEL_24;
    }
    else
    {
      v27 = 1;
      while (v26)
      {
        v25 = ((_DWORD)v25 + v27) & v21;
        v26 = *(char ***)(v20 + 16 * v25);
        ++v27;
        if (v26 == &WebCore::JSCompositionEvent::s_info)
          goto LABEL_22;
      }
    }
  }
  v29 = (JSC::JSCell *)WebCore::JSUIEvent::prototype((WebCore::JSUIEvent *)a1, (JSC::VM *)a2, v18);
  v30 = WebCore::JSCompositionEventPrototype::createStructure((uint64_t *)a1, a2, v29);
  *(_DWORD *)(v30 + 16) |= 0x80000u;
  v32 = (JSC::JSCell *)WebCore::JSCompositionEventPrototype::create((WebCore::JSCompositionEventPrototype *)a1, (JSC::VM *)a2, v30, v31);
  v33 = WebCore::JSCompositionEvent::createStructure((uint64_t *)a1, a2, v32);
  v28 = WebCore::cacheDOMStructure((JSCell *)a2, v33, (uint64_t)&WebCore::JSCompositionEvent::s_info);
LABEL_24:
  v34 = *(_QWORD *)(v28 + 48);
  v38 = 0;
  v39 = v3;
  v40 = -1;
  v41 = 0x1000000;
  v42 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v3, (JSC::VM *)a1, v19, v34, 14, (uint64_t)&v38);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3368) = v3;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v3;
}

unint64_t WebCore::jsCompositionEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCompositionEventPrototype::s_info != (char **)(16
                                                                * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                  + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCompositionEvent>,(WebCore::DOMConstructorID)421>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCompositionEvent_data(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v9;
  unsigned int v10;
  unsigned int v11;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  v4 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 88);
  if (!v4)
    return *v3;
  v5 = *(_DWORD *)v4;
  v6 = *(_DWORD *)(v4 + 4);
  *(_DWORD *)v4 += 2;
  if (v6)
  {
    if (v6 != 1)
    {
LABEL_4:
      v7 = *(_QWORD *)(v2 + 64760);
      if (!v7 || v4 != *(_QWORD *)(v7 + 8))
      {
        v7 = JSC::jsStringWithCacheSlowCase();
        v5 = *(_DWORD *)v4 - 2;
      }
      goto LABEL_7;
    }
    v9 = *(unsigned __int8 **)(v4 + 8);
    if ((*(_BYTE *)(v4 + 16) & 4) != 0)
    {
      v10 = *v9;
    }
    else
    {
      v11 = *(unsigned __int16 *)v9;
      if (v11 > 0xFF)
        goto LABEL_4;
      v10 = v11;
    }
    v7 = *(_QWORD *)(v2 + 8 * v10 + 42216);
  }
  else
  {
    v7 = *v3;
  }
LABEL_7:
  if (v5)
    *(_DWORD *)v4 = v5;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, a2);
  return v7;
}

uint64_t WebCore::JSCompositionEvent::subspaceForImpl(WebCore::JSCompositionEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3448);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3448))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3448);
    *(_QWORD *)(v8 + 3448) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3448);
  *(_QWORD *)(v3 + 3448) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSCompressionStreamPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCompressionStreamPrototype::create(WebCore::JSCompressionStreamPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSCompressionStream::s_info, &WebCore::JSCompressionStreamPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::jsCompressionStreamConstructor(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  uint64_t Structure;
  JSC::Heap *v6;
  unint64_t v7;

  v2 = *(_QWORD *)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCompressionStreamPrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  result = *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 512);
  if (!result)
  {
    Structure = WebCore::JSDOMBuiltinConstructor<WebCore::JSCompressionStream>::createStructure((uint64_t *)v2, v3, *(JSC::JSCell **)(v3 + 664));
    result = WebCore::JSDOMBuiltinConstructor<WebCore::JSCompressionStream>::create(v2, Structure, v3);
    *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 512) = result;
    if (result)
    {
      if (*(_DWORD *)(v2 + 760) >= *(unsigned __int8 *)(v3 + 7))
      {
        v6 = (JSC::Heap *)(v2 + 192);
        v7 = result;
        JSC::Heap::writeBarrierSlowPath(v6, (const JSCell *)v3);
        return v7;
      }
    }
  }
  return result;
}

uint64_t WebCore::JSDOMConstructor<WebCore::JSCompressionStreamEncoder>::construct(JSC *a1, uint64_t a2)
{
  JSC::VM *v2;
  uint64_t v4;
  WTF *v5;
  int v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char **v19;
  int v20;
  unint64_t v21;
  uint64_t *v22;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v24;
  JSC::Structure *v25;
  JSC::JSCell *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  WTF *v38;
  uint64_t v39;
  uint64_t v40;
  WTF *v41;
  void *v42;
  int v43;
  unint64_t SlowCase;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *Allocator;
  JSC::JSCell *v49;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v51;
  JSC::JSGlobalObject *v52;
  JSC::VM *v53;
  JSC::Structure *v54;
  uint64_t FunctionRealm;
  uint64_t v56;
  unsigned int v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char **v62;
  int v63;
  JSC::JSObject *v64;
  unint64_t v65;
  WebCore::JSDOMGlobalObject *v66;
  JSC::Structure *v67;
  JSC::JSCell *v68;
  uint64_t v69;
  unint64_t SubclassStructure;
  JSValue v72;
  unint64_t v73;
  double v74;
  JSC::VM *v75;
  _QWORD *v77;
  WTF *v78;

  v2 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v72.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return JSC::VM::throwException(v2, a1, v72);
  }
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(WTF **)(a2 + 48);
  v78 = v5;
  if ((unint64_t)v5 < 0xFFFE000000000000)
  {
    if ((unint64_t)v5 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v78, a1);
      v7 = v74;
    }
    else
    {
      *(_QWORD *)&v7 = (char *)v5 - 0x2000000000000;
    }
    if (*((_DWORD *)v2 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v2) & 1) != 0)
      return 0;
    LOBYTE(v6) = 0;
    if (fabs(v7) != INFINITY && v7 != 0.0)
    {
      v8 = -floor(-v7);
      v9 = floor(v7);
      if (v7 >= 0.0)
        v8 = v9;
      v10 = fmod(v8, 256.0);
      if (v10 > 127.0)
        v10 = v10 + -256.0;
      v6 = (int)v10;
    }
  }
  else
  {
    LOBYTE(v6) = (_BYTE)v5;
  }
  v11 = WTF::fastMalloc((WTF *)0x98);
  *(_DWORD *)v11 = 1;
  *(_OWORD *)(v11 + 8) = xmmword_1968BD200;
  *(_WORD *)(v11 + 24) = 0;
  *(_BYTE *)(v11 + 144) = v6;
  *(_OWORD *)(v11 + 32) = 0u;
  *(_OWORD *)(v11 + 48) = 0u;
  *(_OWORD *)(v11 + 64) = 0u;
  *(_OWORD *)(v11 + 80) = 0u;
  *(_OWORD *)(v11 + 96) = 0u;
  *(_OWORD *)(v11 + 112) = 0u;
  *(_OWORD *)(v11 + 128) = 0u;
  v12 = *(_QWORD *)(v4 + 40);
  v13 = *(_QWORD *)(v12 + 3296);
  if (v13)
  {
    v14 = *(_DWORD *)(v13 - 8);
    v15 = ((unint64_t)&WebCore::JSCompressionStreamEncoder::s_info
         + ~((_QWORD)&WebCore::JSCompressionStreamEncoder::s_info << 32)) ^ (((unint64_t)&WebCore::JSCompressionStreamEncoder::s_info
                                                                            + ~((_QWORD)&WebCore::JSCompressionStreamEncoder::s_info << 32)) >> 22);
    v16 = 9 * ((v15 + ~(v15 << 13)) ^ ((v15 + ~(v15 << 13)) >> 8));
    v17 = (v16 ^ (v16 >> 15)) + ~((v16 ^ (v16 >> 15)) << 27);
    v18 = v14 & ((v17 >> 31) ^ v17);
    v19 = *(char ***)(v13 + 16 * v18);
    if (v19 == &WebCore::JSCompressionStreamEncoder::s_info)
    {
LABEL_19:
      v21 = *(_QWORD *)(v13 + 16 * v18 + 8);
      if (v21)
        goto LABEL_21;
    }
    else
    {
      v20 = 1;
      while (v19)
      {
        v18 = ((_DWORD)v18 + v20) & v14;
        v19 = *(char ***)(v13 + 16 * v18);
        ++v20;
        if (v19 == &WebCore::JSCompressionStreamEncoder::s_info)
          goto LABEL_19;
      }
    }
  }
  v22 = *(uint64_t **)(v12 + 56);
  Structure = WebCore::JSCompressionStreamEncoderPrototype::createStructure(v22, *(_QWORD *)(v4 + 40), *(JSC::JSCell **)(v12 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v26 = (JSC::JSCell *)WebCore::JSCompressionStreamEncoderPrototype::create((WebCore::JSCompressionStreamEncoderPrototype *)v22, Structure, v24, v25);
  v27 = WebCore::JSCompressionStreamEncoder::createStructure(v22, v12, v26);
  v21 = WebCore::cacheDOMStructure((JSCell *)v12, v27, (uint64_t)&WebCore::JSCompressionStreamEncoder::s_info);
LABEL_21:
  v28 = *(_QWORD *)(v12 + 56);
  v29 = *(_QWORD *)(v28 + 41456);
  v30 = *(_QWORD *)(v29 + 23536);
  v31 = *(_QWORD **)(v30 + 520);
  if (v31)
    goto LABEL_41;
  v32 = *(_QWORD *)(v29 + 22648);
  v33 = __ldaxr((unsigned __int8 *)v32);
  v75 = v2;
  if (v33)
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v32))
  {
    goto LABEL_26;
  }
  MEMORY[0x19AEA534C](v32);
LABEL_26:
  v34 = *(_QWORD *)(v32 + 2824);
  if (!*(_QWORD *)(v34 + 520))
  {
    v35 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v78, "IsoSpace T");
    v77 = 0;
    MEMORY[0x19AEA3204](v35, &v78, v28 + 192, v28 + 1872, 32, 8, &v77);
    v37 = (uint64_t)v77;
    v77 = 0;
    if (v37)
      (*(void (**)(uint64_t))(*(_QWORD *)v37 + 8))(v37);
    v38 = v78;
    v78 = 0;
    if (v38)
    {
      if (*(_DWORD *)v38 == 1)
        WTF::fastFree(v38, v36);
      else
        --*(_DWORD *)v38;
    }
    v39 = *(_QWORD *)(v34 + 520);
    *(_QWORD *)(v34 + 520) = v35;
    if (v39)
      (*(void (**)(uint64_t))(*(_QWORD *)v39 + 8))(v39);
  }
  v31 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v40 = *(_QWORD *)(v30 + 520);
  *(_QWORD *)(v30 + 520) = v31;
  if (v40)
  {
    v41 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v41, v42);
  }
  v43 = __ldxr((unsigned __int8 *)v32);
  v2 = v75;
  if (v43 != 1)
  {
    __clrex();
    goto LABEL_40;
  }
  if (__stlxr(0, (unsigned __int8 *)v32))
LABEL_40:
    WTF::Lock::unlockSlow((WTF::Lock *)v32);
LABEL_41:
  SlowCase = v31[3];
  if (SlowCase < v31[4])
  {
LABEL_42:
    v31[3] = SlowCase + 32;
    goto LABEL_43;
  }
  SlowCase = v31[5];
  if ((SlowCase & 1) == 0)
  {
    v73 = *(_QWORD *)(SlowCase + 8) ^ v31[6];
    v31[4] = SlowCase + HIDWORD(v73);
    v31[5] = SlowCase + (int)v73;
    goto LABEL_42;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_43:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v21);
  *(_QWORD *)(SlowCase + 24) = v11;
  if (*(_BYTE *)(v28 + 755))
    __dmb(0xAu);
  v45 = *(_QWORD *)(v12 + 3320);
  if ((byte_1EE334F88 & 1) == 0)
  {
    qword_1EE334F80 = (uint64_t)&off_1E324F760;
    byte_1EE334F88 = 1;
  }
  v78 = (WTF *)v11;
  if ((SlowCase & 8) != 0)
    v46 = (SlowCase - 112) | 1;
  else
    v46 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v46 & 1) != 0)
    v47 = v46 + 47;
  else
    v47 = *(_QWORD *)v46 + 32;
  Allocator = *(_QWORD **)(v47 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v47 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE334F80;
  Allocator[2] = v45;
  v77 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v45 + 32), (uint64_t *)&v78, (uint64_t *)&v77);
  if (v77)
    v77[1] = 3;
  v49 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v49 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v49);
    if (Object)
    {
      v52 = Object;
      if (Object != *(JSC::JSGlobalObject **)(a2 + 24))
      {
        v53 = (JSC::VM *)*((_QWORD *)a1 + 7);
        FunctionRealm = JSC::getFunctionRealm(a1, Object, v51);
        if (!*((_DWORD *)v53 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v53) & 1) == 0)
        {
          v56 = *(_QWORD *)(FunctionRealm + 3296);
          if (v56)
          {
            v57 = *(_DWORD *)(v56 - 8);
            v58 = ((unint64_t)&WebCore::JSCompressionStreamEncoder::s_info
                 + ~((_QWORD)&WebCore::JSCompressionStreamEncoder::s_info << 32)) ^ (((unint64_t)&WebCore::JSCompressionStreamEncoder::s_info
                                                                                    + ~((_QWORD)&WebCore::JSCompressionStreamEncoder::s_info << 32)) >> 22);
            v59 = 9 * ((v58 + ~(v58 << 13)) ^ ((v58 + ~(v58 << 13)) >> 8));
            v60 = (v59 ^ (v59 >> 15)) + ~((v59 ^ (v59 >> 15)) << 27);
            v61 = v57 & ((v60 >> 31) ^ v60);
            v62 = *(char ***)(v56 + 16 * v61);
            if (v62 == &WebCore::JSCompressionStreamEncoder::s_info)
            {
LABEL_65:
              v64 = *(JSC::JSObject **)(v56 + 16 * v61 + 8);
              if (v64)
              {
LABEL_67:
                SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v52, v64, v54);
                if (!*((_DWORD *)v53 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v53) & 1) == 0)
                  JSC::JSObject::setStructure((JSCell *)SlowCase, v53, SubclassStructure);
                goto LABEL_69;
              }
            }
            else
            {
              v63 = 1;
              while (v62)
              {
                v61 = ((_DWORD)v61 + v63) & v57;
                v62 = *(char ***)(v56 + 16 * v61);
                ++v63;
                if (v62 == &WebCore::JSCompressionStreamEncoder::s_info)
                  goto LABEL_65;
              }
            }
          }
          v65 = WebCore::JSCompressionStreamEncoderPrototype::createStructure((uint64_t *)v53, FunctionRealm, *(JSC::JSCell **)(FunctionRealm + 656));
          *(_DWORD *)(v65 + 16) |= 0x80000u;
          v68 = (JSC::JSCell *)WebCore::JSCompressionStreamEncoderPrototype::create(v53, v65, v66, v67);
          v69 = WebCore::JSCompressionStreamEncoder::createStructure((uint64_t *)v53, FunctionRealm, v68);
          v64 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v69, (uint64_t)&WebCore::JSCompressionStreamEncoder::s_info);
          goto LABEL_67;
        }
      }
    }
  }
LABEL_69:
  if (*((_DWORD *)v2 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v2) & 1) != 0)
    return 0;
  return SlowCase;
}

uint64_t WebCore::jsCompressionStreamEncoderPrototypeFunction_encode(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  unint64_t v4;
  uint64_t v5;
  _BOOL4 v6;
  char **v7;
  BOOL v8;
  uint64_t v10;
  JSC::VM *v11;
  uint64_t v12;
  JSC::JSArrayBufferView *v13;
  JSC::ArrayBufferView *v14;
  int v15;
  JSC::JSGlobalObject *v16;
  uint64_t (*v17)();
  uint64_t v18;
  JSC::ArrayBufferView *v19;
  uint64_t v20;
  int v21;
  JSValue v23;
  WTF::StringImpl *v24;
  WTF::StringImpl *v25;
  JSValue v26;
  WebCore *v27;
  JSC::JSGlobalObject *v28;
  JSC::CallFrame *v29;
  _BYTE v30[8];
  int v31;
  _BYTE v32[8];
  int v33;
  JSC::ArrayBufferView *v34;
  WTF::StringImpl *v35;
  unsigned int v36;
  uint64_t v37;
  WTF::StringImpl *v38;
  JSC::ArrayBufferView *v39;
  int v40;
  int v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)a2 + 5);
  if ((v4 & 0xFFFE000000000002) != 0)
  {
    v10 = 0;
  }
  else
  {
    v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
    v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
    v7 = (char **)(16 * v5);
    if ((_DWORD)v5)
      v8 = v7 == &WebCore::JSCompressionStreamEncoder::s_info;
    else
      v8 = 1;
    if (!v8)
    {
      do
      {
        v7 = (char **)v7[2];
        v6 = v7 != 0;
      }
      while (v7 != &WebCore::JSCompressionStreamEncoder::s_info && v7 != 0);
    }
    if (v6)
      v10 = *((_QWORD *)a2 + 5);
    else
      v10 = 0;
  }
  v11 = (JSC::VM *)*((_QWORD *)this + 7);
  if (*((_DWORD *)a2 + 8) == 1)
  {
    v23.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, a2);
    return JSC::VM::throwException(v11, this, v23);
  }
  v12 = *(_QWORD *)(v10 + 24);
  v13 = (JSC::JSArrayBufferView *)*((_QWORD *)a2 + 6);
  v37 = *((_QWORD *)this + 7);
  v14 = (JSC::ArrayBufferView *)JSC::JSArrayBuffer::toWrapped((uint64_t)v11, (uint64_t)v13);
  if (v14)
  {
    *(_DWORD *)v14 += 2;
    v15 = 1;
    LODWORD(v35) = 1;
    v34 = 0;
    v39 = v14;
    v40 = 1;
    v41 = 0;
    _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6RefPtrIN3JSC15ArrayBufferViewENS8_12RawPtrTraitsISB_EENS8_21DefaultRefDerefTraitsISB_EEEENS9_INSA_11ArrayBufferENSC_ISH_EENSE_ISH_EEEEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSM_1EJSG_SK_EEEEEEDcSO_DpT0_((uint64_t)v32);
  }
  else
  {
    JSC::JSArrayBufferView::toWrapped(v13, &v34);
    if (!v34)
    {
      JSC::throwTypeError();
      v20 = 0;
      v21 = 1;
      v41 = 1;
LABEL_29:
      ((void (*)(JSC::ArrayBufferView **, JSC::ArrayBufferView **))off_1E3250138[v21])(&v34, &v39);
      return v20;
    }
    v15 = 0;
    v39 = v34;
    v40 = 0;
    v41 = 0;
  }
  v16 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v10 & 0xFFFFFFFE) + 0x28);
  v30[0] = 0;
  v31 = -1;
  v17 = off_1E3250118[v15];
  ((void (*)(JSC::ArrayBufferView **, _BYTE *, JSC::ArrayBufferView **))v17)(&v34, v30, &v39);
  v31 = v15;
  v32[0] = 0;
  v33 = -1;
  ((void (*)(JSC::ArrayBufferView **, _BYTE *, _BYTE *))v17)(&v34, v32, v30);
  v33 = v15;
  WebCore::CompressionStreamEncoder::encode(v12, (uint64_t)v32, (uint64_t)&v34);
  v18 = v36;
  if (!v36)
  {
    v19 = v34;
    v34 = 0;
    if (v19)
    {
      v20 = JSC::ArrayBufferView::wrap(v19, this, v16);
      if (*(_DWORD *)v19 == 1)
        JSC::ArrayBufferView::operator delete();
      else
        --*(_DWORD *)v19;
    }
    else
    {
      v20 = 2;
    }
    goto LABEL_24;
  }
  if (v36 == 1)
  {
    v24 = (WTF::StringImpl *)v34;
    LOBYTE(v37) = (_BYTE)v34;
    v25 = v35;
    v35 = 0;
    v38 = v25;
    if (!*((_QWORD *)v11 + 2))
    {
      v26.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v34, (JSC::JSGlobalObject *)&v38);
      JSC::VM::throwException(v11, this, v26);
      v25 = v38;
    }
    v38 = 0;
    if (v25)
    {
      if (*(_DWORD *)v25 == 2)
        WTF::StringImpl::destroy(v25, v24);
      else
        *(_DWORD *)v25 -= 2;
    }
    v20 = 0;
LABEL_24:
    ((void (*)(uint64_t *, JSC::ArrayBufferView **))off_1E3250128[v18])(&v37, &v34);
    v36 = -1;
    if (v33 != -1)
      ((void (*)(uint64_t *, _BYTE *))off_1E3250108[v33])(&v37, v32);
    v33 = -1;
    if (v31 != -1)
      ((void (*)(uint64_t *, _BYTE *))off_1E3250108[v31])(&v37, v30);
    v21 = v41;
    if (v41 == -1)
      return v20;
    goto LABEL_29;
  }
  v27 = (WebCore *)std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::jsCompressionStreamEncoderPrototypeFunction_flush(v27, v28, v29);
}

uint64_t WebCore::jsCompressionStreamEncoderPrototypeFunction_flush(WebCore *this, JSC::JSGlobalObject *a2, JSC::CallFrame *a3)
{
  uint64_t v4;
  uint64_t v5;
  _BOOL4 v6;
  char **v7;
  BOOL v8;
  JSC::VM *v10;
  JSC::JSGlobalObject *v11;
  uint64_t v12;
  JSC::ArrayBufferView *v13;
  uint64_t v14;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  JSValue v18;
  WebCore::JSCompressionStreamEncoder *v19;
  JSC::JSCell *v20;
  JSC::ArrayBufferView *v21;
  WTF::StringImpl *v22;
  unsigned int v23;
  _BYTE v24[8];
  WTF::StringImpl *v25;

  v4 = *((_QWORD *)a2 + 5);
  v5 = *(unsigned int *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSCompressionStreamEncoder::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSCompressionStreamEncoder::s_info && v7 != 0);
  }
  if (!v6)
    v4 = 0;
  v10 = (JSC::VM *)*((_QWORD *)this + 7);
  v11 = *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28);
  WebCore::CompressionStreamEncoder::flush(*(WebCore::CompressionStreamEncoder **)(v4 + 24), (uint64_t)&v21);
  v12 = v23;
  if (!v23)
  {
    v13 = v21;
    v21 = 0;
    if (v13)
    {
      v14 = JSC::ArrayBufferView::wrap(v13, this, v11);
      if (*(_DWORD *)v13 == 1)
        JSC::ArrayBufferView::operator delete();
      else
        --*(_DWORD *)v13;
    }
    else
    {
      v14 = 2;
    }
LABEL_17:
    ((void (*)(_BYTE *, JSC::ArrayBufferView **))off_1E3250128[v12])(v24, &v21);
    return v14;
  }
  if (v23 == 1)
  {
    v16 = (WTF::StringImpl *)v21;
    v24[0] = (_BYTE)v21;
    v17 = v22;
    v22 = 0;
    v25 = v17;
    if (!*((_QWORD *)v10 + 2))
    {
      v18.super.isa = (Class)WebCore::createDOMException(this, (JSC::JSGlobalObject *)v21, (JSC::JSGlobalObject *)&v25);
      JSC::VM::throwException(v10, this, v18);
      v17 = v25;
    }
    v25 = 0;
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v16);
      else
        *(_DWORD *)v17 -= 2;
    }
    v14 = 0;
    goto LABEL_17;
  }
  v19 = (WebCore::JSCompressionStreamEncoder *)std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::JSCompressionStreamEncoder::destroy(v19, v20);
}

uint64_t WebCore::JSCompressionStreamEncoder::destroy(uint64_t this, JSC::JSCell *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(this + 24);
  *(_QWORD *)(this + 24) = 0;
  if (v2)
  {
    if (*(_DWORD *)v2 == 1)
    {
      if (*(_BYTE *)(v2 + 24))
        deflateEnd((z_streamp)(v2 + 32));
      return WTF::fastFree((WTF *)v2, a2);
    }
    else
    {
      --*(_DWORD *)v2;
    }
  }
  return this;
}

uint64_t WebCore::JSCompressionStreamEncoder::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCompressionStreamEncoderPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCompressionStreamEncoderPrototype::create(WebCore::JSCompressionStreamEncoderPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  uint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  unint64_t v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  JSC::Structure *v23;
  unint64_t v25;
  WTF::StringImpl *v26;
  unint64_t v27;
  uint64_t v28;
  int *v29;
  WTF::StringImpl **v30;
  int *v31;
  int v32;
  int v33;
  WTF::StringImpl *v34;
  int v35;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v25 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v25);
    *((_QWORD *)this + 4865) = SlowCase + (int)v25;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)SlowCase, this);
  WTF::AtomStringImpl::addLiteral();
  v9 = v26;
  JSC::reifyStaticProperty(this, (uint64_t)&WebCore::JSCompressionStreamEncoder::s_info, (unint64_t *)&v26, (uint64_t)&WebCore::JSCompressionStreamEncoderPrototypeTableValues, (unsigned __int8 *)SlowCase);
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v10);
    else
      *(_DWORD *)v9 -= 2;
  }
  v11 = *(_QWORD *)(v6[319] + 19728);
  v34 = 0;
  v12 = JSC::JSFunction::create();
  v26 = 0;
  v27 = SlowCase;
  v28 = 0x1000000FFFFFFFFLL;
  v29 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, this, v11, v12, 6, (uint64_t)&v26);
  v14 = v34;
  v34 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v13);
    else
      *(_DWORD *)v14 -= 2;
  }
  v15 = *(_QWORD *)(v6[319] + 19904);
  v34 = 0;
  v16 = JSC::JSFunction::create();
  v26 = 0;
  v27 = SlowCase;
  v28 = 0x1000000FFFFFFFFLL;
  v29 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)SlowCase, this, v15, v16, 6, (uint64_t)&v26);
  v18 = v34;
  v34 = 0;
  if (v18)
  {
    if (*(_DWORD *)v18 == 2)
      WTF::StringImpl::destroy(v18, v17);
    else
      *(_DWORD *)v18 -= 2;
  }
  v19 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v21 = JSC::JSString::create((uint64_t)this, &v26);
  v22 = v26;
  v26 = 0;
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v20);
    else
      *(_DWORD *)v22 -= 2;
  }
  v23 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v35 = *(_DWORD *)SlowCase;
  v34 = v23;
  v33 = JSC::Structure::outOfLineCapacity(v23);
  v32 = 0;
  v26 = (WTF::StringImpl *)&v33;
  v27 = SlowCase;
  v28 = (uint64_t)this;
  v29 = &v35;
  v30 = &v34;
  v31 = &v32;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v23, this, v19, 6, (uint64_t)&v26);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v32, v21);
  *((_DWORD *)v23 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCompressionStreamEncoder>,(WebCore::DOMConstructorID)65>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 520);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructor<WebCore::JSCompressionStreamEncoder>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000001, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSCompressionStreamEncoder::s_info
         + ~((_QWORD)&WebCore::JSCompressionStreamEncoder::s_info << 32)) ^ (((unint64_t)&WebCore::JSCompressionStreamEncoder::s_info
                                                                            + ~((_QWORD)&WebCore::JSCompressionStreamEncoder::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSCompressionStreamEncoder::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSCompressionStreamEncoder::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSCompressionStreamEncoderPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSCompressionStreamEncoderPrototype::create((WebCore::JSCompressionStreamEncoderPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSCompressionStreamEncoder::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSCompressionStreamEncoder::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 520) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCompressionStreamEncoderConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCompressionStreamEncoderPrototype::s_info != (char **)(16
                                                                        * *(unsigned int *)(16
                                                                                          * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                          + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCompressionStreamEncoder>,(WebCore::DOMConstructorID)65>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSCompressionStreamEncoderOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

_QWORD *WebCore::JSCompressionStreamEncoderOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _QWORD *result;

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = (~(v3 << 32) + v3) ^ ((unint64_t)(~(v3 << 32) + v3) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_QWORD *)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(_QWORD *)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
  {
    if (*(_BYTE *)(v3 + 24))
      deflateEnd((z_streamp)(v3 + 32));
    return (_QWORD *)WTF::fastFree((WTF *)v3, a2);
  }
  else
  {
    --*(_DWORD *)v3;
  }
  return result;
}

unint64_t WebCore::convertDictionaryToJS(WebCore *this, JSC::JSGlobalObject *a2, WebCore::JSDOMGlobalObject *a3, const WebCore::ComputedEffectTiming *a4)
{
  uint64_t v7;
  unint64_t v8;
  size_t v9;
  unint64_t v10;
  int v11;
  double v12;
  uint64_t v13;
  unint64_t v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  uint64_t v20;
  uint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  double v30;
  uint64_t v31;
  unint64_t v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  uint64_t v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  double v38;
  uint64_t v39;
  unint64_t v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  double v43;
  uint64_t v44;
  unint64_t v45;
  WTF::StringImpl *v46;
  WTF::StringImpl *v47;
  double v48;
  uint64_t v49;
  unint64_t v50;
  WTF::StringImpl *v51;
  WTF::StringImpl *v52;
  double v53;
  uint64_t v54;
  unint64_t v55;
  WTF::StringImpl *v56;
  WTF::StringImpl *v57;
  double v58;
  uint64_t v59;
  unint64_t v60;
  WTF::StringImpl *v61;
  WTF::StringImpl *v62;
  double v63;
  uint64_t v64;
  unint64_t v65;
  WTF::StringImpl *v66;
  WTF::StringImpl *v67;
  double v68;
  uint64_t v69;
  unint64_t v70;
  WTF::StringImpl *v71;
  WTF::StringImpl *v72;
  unsigned __int8 *v74;
  unsigned int v75;
  unsigned int v76;
  _BYTE v77[40];
  uint64_t v78;
  char v79;
  uint64_t v80;
  WTF::StringImpl *v81;
  uint64_t *v82;
  uint64_t v83;
  JSC::JSGlobalObject *v84;
  WebCore::JSDOMGlobalObject *v85;

  v7 = *((_QWORD *)this + 7);
  v8 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v9 = 8 * *(unsigned __int8 *)(v8 + 14);
  v10 = JSC::allocateCell<JSC::JSFinalObject>(v7, v9 + 16);
  v11 = *(_DWORD *)(v8 + 8);
  *(_DWORD *)v10 = v8 >> 4;
  *(_DWORD *)(v10 + 4) = v11;
  *(_QWORD *)(v10 + 8) = 0;
  bzero((void *)(v10 + 16), v9);
  if (*(_BYTE *)(v7 + 755))
    __dmb(0xAu);
  v12 = *((double *)a3 + 2);
  if ((*(_QWORD *)&v12 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v13 = (int)v12, v12 == (double)(int)v13)
    && ((_DWORD)v13 || (*(_QWORD *)&v12 & 0x8000000000000000) == 0))
  {
    v14 = v13 | 0xFFFE000000000000;
  }
  else
  {
    v14 = *(_QWORD *)&v12 + 0x2000000000000;
  }
  if (*(_DWORD *)(v7 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v7) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v15 = v81;
  v81 = 0;
  v82 = (uint64_t *)v10;
  v83 = 0x1000000FFFFFFFFLL;
  v84 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v10, (JSC::VM *)v7, (unint64_t)v15, v14, 0, (uint64_t)&v81);
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v16);
    else
      *(_DWORD *)v15 -= 2;
  }
  v17 = WebCore::convertEnumerationToJS<WebCore::PlaybackDirection>(*((_QWORD *)this + 7), (WTF::StringImpl *)*((unsigned __int8 *)a3 + 57));
  if (*(_DWORD *)(v7 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v7) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v18 = v81;
  v81 = 0;
  v82 = (uint64_t *)v10;
  v83 = 0x1000000FFFFFFFFLL;
  v84 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v10, (JSC::VM *)v7, (unint64_t)v18, v17, 0, (uint64_t)&v81);
  if (v18)
  {
    if (*(_DWORD *)v18 == 2)
      WTF::StringImpl::destroy(v18, v19);
    else
      *(_DWORD *)v18 -= 2;
  }
  if (*((_DWORD *)a3 + 2) == -1)
    v20 = -1;
  else
    v20 = *((unsigned int *)a3 + 2);
  LOBYTE(v78) = 0;
  v79 = 0;
  v80 = v20;
  v81 = (WTF::StringImpl *)&v80;
  v82 = &v78;
  v83 = (uint64_t)this;
  v84 = a2;
  v85 = a3;
  _ZN7WebCore6Detail11forEachArgsIZNS_11JSConverterINS_8IDLUnionIJNS_21IDLUnrestrictedDoubleENS_12IDLDOMStringEEEEE7convertERN3JSC14JSGlobalObjectERNS_17JSDOMGlobalObjectERKNSt3__17variantIJdN3WTF6StringEEEEEUlTyvE_JNSD_17integral_constantIlLl0EEENSL_IlLl1EEEEEET_SO_((uint64_t **)&v81, (uint64_t)v77);
  if (!v79)
  {
    std::__throw_bad_optional_access[abi:sn180100]();
    v55 = 2;
    goto LABEL_85;
  }
  v21 = v78;
  if (*(_DWORD *)(v7 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v7) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v22 = v81;
  v81 = 0;
  v82 = (uint64_t *)v10;
  v83 = 0x1000000FFFFFFFFLL;
  v84 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v10, (JSC::VM *)v7, (unint64_t)v22, v21, 0, (uint64_t)&v81);
  if (v22)
  {
    if (*(_DWORD *)v22 == 2)
      WTF::StringImpl::destroy(v22, v23);
    else
      *(_DWORD *)v22 -= 2;
  }
  v24 = *((_QWORD *)this + 7);
  v25 = *((_QWORD *)a3 + 6);
  if (v25 && (v26 = *(_DWORD *)(v25 + 4)) != 0)
  {
    if (v26 != 1)
    {
LABEL_28:
      v27 = *(_QWORD *)(v24 + 64760);
      if (!v27 || v25 != *(_QWORD *)(v27 + 8))
        v27 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_31;
    }
    v74 = *(unsigned __int8 **)(v25 + 8);
    if ((*(_BYTE *)(v25 + 16) & 4) != 0)
    {
      v75 = *v74;
    }
    else
    {
      v76 = *(unsigned __int16 *)v74;
      if (v76 > 0xFF)
        goto LABEL_28;
      v75 = v76;
    }
    v27 = *(_QWORD *)(v24 + 8 * v75 + 42216);
  }
  else
  {
    v27 = *(_QWORD *)(v24 + 41968);
  }
LABEL_31:
  if (*(_DWORD *)(v7 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v7) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v28 = v81;
  v81 = 0;
  v82 = (uint64_t *)v10;
  v83 = 0x1000000FFFFFFFFLL;
  v84 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v10, (JSC::VM *)v7, (unint64_t)v28, v27, 0, (uint64_t)&v81);
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v29);
    else
      *(_DWORD *)v28 -= 2;
  }
  v30 = *((double *)a3 + 3);
  if ((*(_QWORD *)&v30 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v31 = (int)v30, v30 == (double)(int)v31)
    && ((_DWORD)v31 || (*(_QWORD *)&v30 & 0x8000000000000000) == 0))
  {
    v32 = v31 | 0xFFFE000000000000;
  }
  else
  {
    v32 = *(_QWORD *)&v30 + 0x2000000000000;
  }
  if (*(_DWORD *)(v7 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v7) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v33 = v81;
  v81 = 0;
  v82 = (uint64_t *)v10;
  v83 = 0x1000000FFFFFFFFLL;
  v84 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v10, (JSC::VM *)v7, (unint64_t)v33, v32, 0, (uint64_t)&v81);
  if (v33)
  {
    if (*(_DWORD *)v33 == 2)
      WTF::StringImpl::destroy(v33, v34);
    else
      *(_DWORD *)v33 -= 2;
  }
  v35 = WebCore::convertEnumerationToJS<WebCore::FillMode>(*((_QWORD *)this + 7), (WTF::StringImpl *)*((unsigned __int8 *)a3 + 56));
  if (*(_DWORD *)(v7 + 80))
  {
    if ((JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v7) & 1) != 0)
      return 0;
  }
  WTF::AtomStringImpl::addLiteral();
  v36 = v81;
  v81 = 0;
  v82 = (uint64_t *)v10;
  v83 = 0x1000000FFFFFFFFLL;
  v84 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v10, (JSC::VM *)v7, (unint64_t)v36, v35, 0, (uint64_t)&v81);
  if (v36)
  {
    if (*(_DWORD *)v36 == 2)
      WTF::StringImpl::destroy(v36, v37);
    else
      *(_DWORD *)v36 -= 2;
  }
  v38 = *((double *)a3 + 4);
  if ((*(_QWORD *)&v38 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v39 = (int)v38, v38 == (double)(int)v39)
    && ((_DWORD)v39 || (*(_QWORD *)&v38 & 0x8000000000000000) == 0))
  {
    v40 = v39 | 0xFFFE000000000000;
  }
  else
  {
    v40 = *(_QWORD *)&v38 + 0x2000000000000;
  }
  if (*(_DWORD *)(v7 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v7) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v41 = v81;
  v81 = 0;
  v82 = (uint64_t *)v10;
  v83 = 0x1000000FFFFFFFFLL;
  v84 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v10, (JSC::VM *)v7, (unint64_t)v41, v40, 0, (uint64_t)&v81);
  if (v41)
  {
    if (*(_DWORD *)v41 == 2)
      WTF::StringImpl::destroy(v41, v42);
    else
      *(_DWORD *)v41 -= 2;
  }
  v43 = *((double *)a3 + 5);
  if ((*(_QWORD *)&v43 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v44 = (int)v43, v43 == (double)(int)v44)
    && ((_DWORD)v44 || (*(_QWORD *)&v43 & 0x8000000000000000) == 0))
  {
    v45 = v44 | 0xFFFE000000000000;
  }
  else
  {
    v45 = *(_QWORD *)&v43 + 0x2000000000000;
  }
  if (*(_DWORD *)(v7 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v7) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v46 = v81;
  v81 = 0;
  v82 = (uint64_t *)v10;
  v83 = 0x1000000FFFFFFFFLL;
  v84 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v10, (JSC::VM *)v7, (unint64_t)v46, v45, 0, (uint64_t)&v81);
  if (v46)
  {
    if (*(_DWORD *)v46 == 2)
      WTF::StringImpl::destroy(v46, v47);
    else
      *(_DWORD *)v46 -= 2;
  }
  v48 = *((double *)a3 + 13);
  if ((*(_QWORD *)&v48 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v49 = (int)v48, v48 == (double)(int)v49)
    && ((_DWORD)v49 || (*(_QWORD *)&v48 & 0x8000000000000000) == 0))
  {
    v50 = v49 | 0xFFFE000000000000;
  }
  else
  {
    v50 = *(_QWORD *)&v48 + 0x2000000000000;
  }
  if (*(_DWORD *)(v7 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v7) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v51 = v81;
  v81 = 0;
  v82 = (uint64_t *)v10;
  v83 = 0x1000000FFFFFFFFLL;
  v84 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v10, (JSC::VM *)v7, (unint64_t)v51, v50, 0, (uint64_t)&v81);
  if (v51)
  {
    if (*(_DWORD *)v51 == 2)
      WTF::StringImpl::destroy(v51, v52);
    else
      *(_DWORD *)v51 -= 2;
  }
  v53 = *((double *)a3 + 11);
  if ((*(_QWORD *)&v53 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v54 = (int)v53, v53 == (double)(int)v54)
    && ((_DWORD)v54 || (*(_QWORD *)&v53 & 0x8000000000000000) == 0))
  {
    v55 = v54 | 0xFFFE000000000000;
  }
  else
  {
    v55 = *(_QWORD *)&v53 + 0x2000000000000;
  }
LABEL_85:
  if (*(_DWORD *)(v7 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v7) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v56 = v81;
  v81 = 0;
  v82 = (uint64_t *)v10;
  v83 = 0x1000000FFFFFFFFLL;
  v84 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v10, (JSC::VM *)v7, (unint64_t)v56, v55, 0, (uint64_t)&v81);
  if (v56)
  {
    if (*(_DWORD *)v56 == 2)
      WTF::StringImpl::destroy(v56, v57);
    else
      *(_DWORD *)v56 -= 2;
  }
  v58 = *((double *)a3 + 12);
  if ((*(_QWORD *)&v58 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v59 = (int)v58, v58 == (double)(int)v59)
    && ((_DWORD)v59 || (*(_QWORD *)&v58 & 0x8000000000000000) == 0))
  {
    v60 = v59 | 0xFFFE000000000000;
  }
  else
  {
    v60 = *(_QWORD *)&v58 + 0x2000000000000;
  }
  if (*(_DWORD *)(v7 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v7) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v61 = v81;
  v81 = 0;
  v82 = (uint64_t *)v10;
  v83 = 0x1000000FFFFFFFFLL;
  v84 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v10, (JSC::VM *)v7, (unint64_t)v61, v60, 0, (uint64_t)&v81);
  if (v61)
  {
    if (*(_DWORD *)v61 == 2)
      WTF::StringImpl::destroy(v61, v62);
    else
      *(_DWORD *)v61 -= 2;
  }
  v63 = *((double *)a3 + 8);
  if ((*(_QWORD *)&v63 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v64 = (int)v63, v63 == (double)(int)v64)
    && ((_DWORD)v64 || (*(_QWORD *)&v63 & 0x8000000000000000) == 0))
  {
    v65 = v64 | 0xFFFE000000000000;
  }
  else
  {
    v65 = *(_QWORD *)&v63 + 0x2000000000000;
  }
  if (*(_DWORD *)(v7 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v7) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v66 = v81;
  v81 = 0;
  v82 = (uint64_t *)v10;
  v83 = 0x1000000FFFFFFFFLL;
  v84 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v10, (JSC::VM *)v7, (unint64_t)v66, v65, 0, (uint64_t)&v81);
  if (v66)
  {
    if (*(_DWORD *)v66 == 2)
      WTF::StringImpl::destroy(v66, v67);
    else
      *(_DWORD *)v66 -= 2;
  }
  v68 = *((double *)a3 + 10);
  if ((*(_QWORD *)&v68 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v69 = (int)v68, v68 == (double)(int)v69)
    && ((_DWORD)v69 || (*(_QWORD *)&v68 & 0x8000000000000000) == 0))
  {
    v70 = v69 | 0xFFFE000000000000;
  }
  else
  {
    v70 = *(_QWORD *)&v68 + 0x2000000000000;
  }
  if (*(_DWORD *)(v7 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v7) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v71 = v81;
  v81 = 0;
  v82 = (uint64_t *)v10;
  v83 = 0x1000000FFFFFFFFLL;
  v84 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v10, (JSC::VM *)v7, (unint64_t)v71, v70, 0, (uint64_t)&v81);
  if (v71)
  {
    if (*(_DWORD *)v71 == 2)
      WTF::StringImpl::destroy(v71, v72);
    else
      *(_DWORD *)v71 -= 2;
  }
  return v10;
}

WebCore::ConstantSourceNode *WebCore::JSDOMConstructor<WebCore::JSConstantSourceNode>::construct(JSC *this, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC::VM *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char **v16;
  BOOL v17;
  WebCore::ConstantSourceNode *v19;
  uint64_t v20;
  JSC::JSCell *v21;
  float v22;
  uint64_t Object;
  JSC::Structure *v24;
  WTF::StringImpl *v25;
  WebCore::AudioNode *v26;
  JSC::VM *v27;
  double v28;
  WebCore::ConstantSourceNode *v29;
  WebCore::JSDOMGlobalObject *v30;
  JSC::VM *v31;
  WebCore::AudioNode *v32;
  JSC::JSCell *v33;
  JSC::JSGlobalObject *v34;
  JSC::JSObject *v35;
  JSC::JSGlobalObject *v36;
  JSC::VM *v37;
  JSC::JSObject *v38;
  JSC::Structure *v39;
  JSC::VM *FunctionRealm;
  uint64_t v41;
  unsigned int v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char **v47;
  int v48;
  JSC::JSCell *v49;
  unint64_t Structure;
  JSC::Structure *v51;
  JSC::JSCell *v52;
  uint64_t v53;
  unint64_t SubclassStructure;
  JSValue v56;
  double v57;
  WebCore::AudioNode *v58;

  v9 = (JSC::VM *)*((_QWORD *)this + 7);
  v10 = *(int *)(a2 + 32);
  if ((_DWORD)v10 == 1)
  {
    v56.super.isa = (Class)JSC::createNotEnoughArgumentsError(this, (JSC::JSGlobalObject *)a2);
    return (WebCore::ConstantSourceNode *)JSC::VM::throwException(v9, this, v56);
  }
  v12 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 48);
  v58 = (WebCore::AudioNode *)*((_QWORD *)this + 7);
  if ((v13 & 0xFFFE000000000002) != 0)
    goto LABEL_13;
  v14 = *(unsigned int *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C);
  v15 = *(_DWORD *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x4C) != 0;
  v16 = (char **)(16 * v14);
  if ((_DWORD)v14)
    v17 = v16 == &WebCore::JSBaseAudioContext::s_info;
  else
    v17 = 1;
  if (!v17)
  {
    do
    {
      v16 = (char **)v16[2];
      v15 = v16 != 0;
    }
    while (v16 != &WebCore::JSBaseAudioContext::s_info && v16 != 0);
  }
  if (!v15)
  {
LABEL_13:
    WebCore::throwArgumentTypeError((uint64_t)this, (uint64_t)&v58, 0, "context", 8, "ConstantSourceNode", 19, a8, 0, 0, "BaseAudioContext", 17);
    return 0;
  }
  v20 = *(_QWORD *)(v13 + 24);
  if ((unint64_t)(v10 - 3) >= 0xFFFFFFFFFFFFFFFELL)
  {
    v22 = 1.0;
  }
  else
  {
    v21 = *(JSC::JSCell **)(a2 + 56);
    v22 = 1.0;
    if (((unint64_t)v21 & 0xFFFFFFFFFFFFFFF7) != 2)
    {
      if (((unint64_t)v21 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v21)) == 0)
      {
        JSC::throwTypeError();
        return 0;
      }
      v24 = (JSC::Structure *)Object;
      WTF::AtomStringImpl::addLiteral();
      v26 = (WebCore::AudioNode *)JSC::JSObject::get(v24, this, (unint64_t)v58);
      if (v58)
      {
        if (*(_DWORD *)v58 == 2)
          WTF::StringImpl::destroy(v58, v25);
        else
          *(_DWORD *)v58 -= 2;
      }
      if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
        return 0;
      if (v26 != (WebCore::AudioNode *)10)
      {
        v27 = (JSC::VM *)*((_QWORD *)this + 7);
        v58 = v26;
        if ((unint64_t)v26 >= 0xFFFE000000000000)
        {
          v28 = (double)(int)v26;
        }
        else if ((unint64_t)v26 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v58, this);
          v28 = v57;
        }
        else
        {
          *(_QWORD *)&v28 = (char *)v26 - 0x2000000000000;
        }
        if (*((_DWORD *)v27 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v27) & 1) != 0)
          return 0;
        if ((*(_QWORD *)&v28 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
          || v28 < -3.40282347e38
          || v28 > 3.40282347e38)
        {
          JSC::throwTypeError();
          return 0;
        }
        v22 = v28;
      }
    }
  }
  v19 = (WebCore::ConstantSourceNode *)bmalloc::api::isoAllocate();
  v29 = WebCore::ConstantSourceNode::ConstantSourceNode(v19, (WebCore::BaseAudioContext *)(v20 - 32), v22);
  WebCore::ActiveDOMObject::suspendIfNeeded((_QWORD *)v29 + 19);
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
  {
    if (!v19)
      return v19;
    WebCore::AudioNode::deref(v19);
    return 0;
  }
  v31 = *(JSC::VM **)(v12 + 40);
  v58 = v19;
  if (*(uint64_t (***)(WebCore::AudioNode *__hidden))v19 != off_1E3369DB0)
  {
    __break(0xC471u);
    JUMPOUT(0x19494FC18);
  }
  v19 = (WebCore::ConstantSourceNode *)WebCore::createWrapper<WebCore::ConstantSourceNode,WebCore::ConstantSourceNode>(v31, (uint64_t *)&v58, v30);
  v32 = v58;
  v58 = 0;
  if (v32)
    WebCore::AudioNode::deref(v32);
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    return 0;
  v33 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v33 & 0xFFFE000000000002) == 0)
  {
    v34 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v33);
    if (v34)
    {
      v36 = v34;
      if (v34 != *(JSC::JSGlobalObject **)(a2 + 24))
      {
        v37 = (JSC::VM *)*((_QWORD *)this + 7);
        FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(this, v34, v35);
        if (!*((_DWORD *)v37 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v37) & 1) == 0)
        {
          v41 = *((_QWORD *)FunctionRealm + 412);
          if (v41)
          {
            v42 = *(_DWORD *)(v41 - 8);
            v43 = ((unint64_t)&WebCore::JSConstantSourceNode::s_info
                 + ~((_QWORD)&WebCore::JSConstantSourceNode::s_info << 32)) ^ (((unint64_t)&WebCore::JSConstantSourceNode::s_info
                                                                              + ~((_QWORD)&WebCore::JSConstantSourceNode::s_info << 32)) >> 22);
            v44 = 9 * ((v43 + ~(v43 << 13)) ^ ((v43 + ~(v43 << 13)) >> 8));
            v45 = (v44 ^ (v44 >> 15)) + ~((v44 ^ (v44 >> 15)) << 27);
            v46 = v42 & ((v45 >> 31) ^ v45);
            v47 = *(char ***)(v41 + 16 * v46);
            if (v47 == &WebCore::JSConstantSourceNode::s_info)
            {
LABEL_46:
              v38 = *(JSC::JSObject **)(v41 + 16 * v46 + 8);
              if (v38)
              {
LABEL_48:
                SubclassStructure = JSC::InternalFunction::createSubclassStructure(this, v36, v38, v39);
                if (!*((_DWORD *)v37 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v37) & 1) == 0)
                  JSC::JSObject::setStructure((JSCell *)v19, v37, SubclassStructure);
                goto LABEL_50;
              }
            }
            else
            {
              v48 = 1;
              while (v47)
              {
                v46 = ((_DWORD)v46 + v48) & v42;
                v47 = *(char ***)(v41 + 16 * v46);
                ++v48;
                if (v47 == &WebCore::JSConstantSourceNode::s_info)
                  goto LABEL_46;
              }
            }
          }
          v49 = (JSC::JSCell *)WebCore::JSAudioScheduledSourceNode::prototype(v37, FunctionRealm, v38);
          Structure = WebCore::JSConstantSourceNodePrototype::createStructure((uint64_t *)v37, (uint64_t)FunctionRealm, v49);
          *(_DWORD *)(Structure + 16) |= 0x80000u;
          v52 = (JSC::JSCell *)WebCore::JSConstantSourceNodePrototype::create(v37, FunctionRealm, Structure, v51);
          v53 = WebCore::JSConstantSourceNode::createStructure((uint64_t *)v37, (uint64_t)FunctionRealm, v52);
          v38 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v53, (uint64_t)&WebCore::JSConstantSourceNode::s_info);
          goto LABEL_48;
        }
      }
    }
  }
LABEL_50:
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    return 0;
  return v19;
}

uint64_t WebCore::JSConstantSourceNode::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSAudioScheduledSourceNode::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSAudioScheduledSourceNode::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSAudioScheduledSourceNode::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSConstantSourceNodePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSConstantSourceNodePrototype::create(WebCore::JSConstantSourceNodePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSConstantSourceNode::s_info, (uint64_t)&WebCore::JSConstantSourceNodePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSConstantSourceNode>,(WebCore::DOMConstructorID)250>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2000);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSAudioScheduledSourceNode>,(WebCore::DOMConstructorID)241>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSConstantSourceNode>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSConstantSourceNode::s_info
         + ~((_QWORD)&WebCore::JSConstantSourceNode::s_info << 32)) ^ (((unint64_t)&WebCore::JSConstantSourceNode::s_info
                                                                      + ~((_QWORD)&WebCore::JSConstantSourceNode::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSConstantSourceNode::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSConstantSourceNode::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSAudioScheduledSourceNode::prototype((WebCore::JSAudioScheduledSourceNode *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSConstantSourceNodePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSConstantSourceNodePrototype::create((WebCore::JSConstantSourceNodePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSConstantSourceNode::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSConstantSourceNode::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2000) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsConstantSourceNodeConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSConstantSourceNodePrototype::s_info != (char **)(16
                                                                  * *(unsigned int *)(16
                                                                                    * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                    + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSConstantSourceNode>,(WebCore::DOMConstructorID)250>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsConstantSourceNode_offset(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::AudioParam>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WTF **)(*(_QWORD *)(a2 + 24) + 216));
}

uint64_t WebCore::JSConstantSourceNode::subspaceForImpl(WebCore::JSConstantSourceNode *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2024);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v20 = *(_QWORD *)(v8 + 2024);
  if (!v20)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v22, "IsoSpace T");
    v21 = 0;
    MEMORY[0x19AEA3204](v9, &v22, (char *)this + 192, (char *)this + 1872, 32, 8, &v21);
    v11 = v21;
    v21 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v22;
    v22 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v20 = v9;
    v13 = *(_QWORD *)(v8 + 2024);
    *(_QWORD *)(v8 + 2024) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v6 + 2832, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
      *(_DWORD *)(v6 + 2844) = v14 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 2024);
  *(_QWORD *)(v3 + 2024) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSConstantSourceNodeOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(_QWORD **)(*(_QWORD *)a2 + 24);
  v6 = v5[20];
  if (!v6)
    return 0;
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7 || *(_BYTE *)(v7 + 180))
    return 0;
  if (v5[21] || (result = (*(uint64_t (**)(_QWORD *))(v5[19] + 64))(v5 + 19), (_DWORD)result))
  {
    if (a5)
    {
      *a5 = "ActiveDOMObject with pending activity";
      a5[1] = 38;
    }
    return 1;
  }
  return result;
}

WTF::Thread *WebCore::JSConstantSourceNodeOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  WebCore::AudioNode *v4;
  WTF::Thread *result;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  WebCore::AudioNode *v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;

  v4 = *(WebCore::AudioNode **)(*(_QWORD *)a2 + 24);
  result = WebCore::AudioNode::ref(v4);
  v6 = (char *)v4 + 8;
  if (!v4)
    v6 = 0;
  if (*(_DWORD *)(a3 + 48))
  {
    v9 = *(_QWORD *)(a3 + 32);
    v8 = (uint64_t *)(a3 + 32);
    v7 = v9;
    if (v9)
    {
      v10 = *(_DWORD *)(v7 - 8);
      v11 = ((unint64_t)v4 + ~((_QWORD)v4 << 32)) ^ (((unint64_t)v4 + ~((_QWORD)v4 << 32)) >> 22);
      v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
      v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
      v14 = v10 & ((v13 >> 31) ^ v13);
      v15 = *(WebCore::AudioNode **)(v7 + 16 * v14);
      if (v15 != v4)
      {
        v16 = 1;
        while (v15)
        {
          v14 = ((_DWORD)v14 + v16) & v10;
          v15 = *(WebCore::AudioNode **)(v7 + 16 * v14);
          ++v16;
          if (v15 == v4)
            goto LABEL_14;
        }
        v14 = *(unsigned int *)(v7 - 4);
      }
LABEL_14:
      if (v14 != *(_DWORD *)(v7 - 4))
      {
        v17 = (_QWORD *)(v7 + 16 * v14);
        *v17 = -1;
        v20 = v17[1];
        v19 = v17 + 1;
        v18 = v20;
        if (v20)
        {
          *(_QWORD *)(v18 + 8) = 3;
          *v19 = 0;
        }
        ++*(_DWORD *)(*v8 - 16);
        v21 = *v8;
        if (*v8)
          v22 = *(_DWORD *)(v21 - 12) - 1;
        else
          v22 = -1;
        *(_DWORD *)(v21 - 12) = v22;
        v23 = *v8;
        if (*v8)
        {
          v24 = 6 * *(_DWORD *)(v23 - 12);
          v25 = *(_DWORD *)(v23 - 4);
          if (v24 < v25 && v25 >= 9)
            result = (WTF::Thread *)WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v8, v25 >> 1, 0);
        }
      }
    }
  }
  else if (*(_QWORD *)v6)
  {
    *(_QWORD *)(*(_QWORD *)v6 + 8) = 3;
    *(_QWORD *)v6 = 0;
  }
  if (v4)
    return WebCore::AudioNode::deref(v4);
  return result;
}

uint64_t WebCore::createWrapper<WebCore::ConstantSourceNode,WebCore::ConstantSourceNode>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSAudioScheduledSourceNode *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (!v6)
    goto LABEL_7;
  v7 = *(_DWORD *)(v6 - 8);
  v8 = ((unint64_t)&WebCore::JSConstantSourceNode::s_info
      + ~((_QWORD)&WebCore::JSConstantSourceNode::s_info << 32)) ^ (((unint64_t)&WebCore::JSConstantSourceNode::s_info
                                                                   + ~((_QWORD)&WebCore::JSConstantSourceNode::s_info << 32)) >> 22);
  v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
  v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
  v11 = v7 & ((v10 >> 31) ^ v10);
  v12 = *(char ***)(v6 + 16 * v11);
  if (v12 != &WebCore::JSConstantSourceNode::s_info)
  {
    v13 = 1;
    while (v12)
    {
      v11 = ((_DWORD)v11 + v13) & v7;
      v12 = *(char ***)(v6 + 16 * v11);
      ++v13;
      if (v12 == &WebCore::JSConstantSourceNode::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
  if (!v14)
  {
LABEL_7:
    v15 = (WebCore::JSAudioScheduledSourceNode *)*((_QWORD *)a1 + 7);
    v16 = (JSC::JSCell *)WebCore::JSAudioScheduledSourceNode::prototype(v15, a1, a3);
    Structure = WebCore::JSConstantSourceNodePrototype::createStructure((uint64_t *)v15, (uint64_t)a1, v16);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v19 = (JSC::JSCell *)WebCore::JSConstantSourceNodePrototype::create(v15, a1, Structure, v18);
    v20 = WebCore::JSConstantSourceNode::createStructure((uint64_t *)v15, (uint64_t)a1, v19);
    v14 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSConstantSourceNode::s_info);
  }
  v21 = WebCore::JSConstantSourceNode::create(v14, a1, a2);
  WebCore::cacheWrapper<WebCore::ConstantSourceNode,WebCore::JSConstantSourceNode>(*((_QWORD *)a1 + 415), v5, v21);
  return v21;
}

uint64_t WebCore::wrap<WebCore::ConstantSourceNode>(int a1, JSC::VM *a2, WebCore::AudioNode *this)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  WebCore::JSDOMGlobalObject *v8;
  WebCore::AudioNode *v9;
  uint64_t result;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  WebCore::AudioNode *v17;
  int v18;
  WebCore::AudioNode *v19;

  v5 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v5 + 48))
  {
    v11 = *(_QWORD *)(v5 + 32);
    if (!v11)
      goto LABEL_5;
    v12 = *(_DWORD *)(v11 - 8);
    v13 = ((unint64_t)this + ~((_QWORD)this << 32)) ^ (((unint64_t)this + ~((_QWORD)this << 32)) >> 22);
    v14 = 9 * ((v13 + ~(v13 << 13)) ^ ((v13 + ~(v13 << 13)) >> 8));
    v15 = (v14 ^ (v14 >> 15)) + ~((v14 ^ (v14 >> 15)) << 27);
    v16 = v12 & ((v15 >> 31) ^ v15);
    v17 = *(WebCore::AudioNode **)(v11 + 16 * v16);
    if (v17 != this)
    {
      v18 = 1;
      while (v17)
      {
        v16 = ((_DWORD)v16 + v18) & v12;
        v17 = *(WebCore::AudioNode **)(v11 + 16 * v16);
        ++v18;
        if (v17 == this)
          goto LABEL_14;
      }
      goto LABEL_5;
    }
LABEL_14:
    v6 = *(_QWORD *)(v11 + 16 * v16 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *((_QWORD *)this + 1);
    if (!v6)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    v7 = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return v7;
  }
LABEL_5:
  WebCore::AudioNode::ref(this);
  v19 = this;
  if (*(uint64_t (***)(WebCore::AudioNode *__hidden))this == off_1E3369DB0)
  {
    v7 = WebCore::createWrapper<WebCore::ConstantSourceNode,WebCore::ConstantSourceNode>(a2, (uint64_t *)&v19, v8);
    v9 = v19;
    v19 = 0;
    if (v9)
      WebCore::AudioNode::deref(v9);
    return v7;
  }
  result = 273;
  __break(0xC471u);
  return result;
}

unint64_t WebCore::convertDictionaryToJS(WebCore *this, JSC::JSGlobalObject *a2, WebCore::JSDOMGlobalObject *a3, const WebCore::ContactInfo *a4)
{
  uint64_t v7;
  unint64_t v8;
  size_t v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  WTF *v13;
  uint64_t v14;
  char v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  WTF *v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  uint64_t v21;
  WTF *v22;
  uint64_t v23;
  char v24;
  WTF::StringImpl *v25;
  uint64_t v26;
  WTF *v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  WTF *v31;
  uint64_t v32;
  char v33;
  WTF::StringImpl *v34;
  uint64_t v35;
  WTF *v36;
  WTF::StringImpl *v37;
  WTF::StringImpl *v38;
  uint64_t v40;
  WTF::StringImpl **v41;
  WTF::StringImpl *v42;
  uint64_t v43;
  WTF::StringImpl **v44;
  WTF::StringImpl *v45;
  uint64_t v46;
  WTF::StringImpl **v47;
  WTF::StringImpl *v48;
  uint64_t v49;
  uint64_t v50;
  WTF::StringImpl *v51;
  WTF *v52;
  uint64_t v53;
  uint64_t v54;
  WTF::StringImpl *v55;
  uint64_t v56;
  uint64_t v57;
  WTF *v58;
  uint64_t v59;
  _DWORD *v60;
  uint64_t v61;
  uint64_t v62;
  WTF::StringImpl *v63;
  WTF *v64;
  uint64_t v65;
  uint64_t v66;
  WTF::StringImpl *v67;
  uint64_t v68;
  uint64_t v69;
  WTF *v70;
  uint64_t v71;
  _DWORD *v72;
  uint64_t v73;
  uint64_t v74;
  WTF::StringImpl *v75;
  WTF *v76;
  uint64_t v77;
  uint64_t v78;
  WTF::StringImpl *v79;
  uint64_t v80;
  uint64_t v81;
  WTF *v82;
  uint64_t v83;
  _DWORD *v84;
  WTF *v85;
  uint64_t v86;
  WTF::StringImpl *v87;
  WTF *v88;
  uint64_t v89;
  WTF::StringImpl *v90;
  WTF *v91;
  uint64_t v92;
  WTF::StringImpl *v93;
  _DWORD **v94;
  uint64_t v95;
  _QWORD *v96;
  _DWORD *v97;
  _DWORD **v98;
  uint64_t v99;
  _QWORD *v100;
  _DWORD *v101;
  _DWORD **v102;
  uint64_t v103;
  _QWORD *v104;
  _DWORD *v105;
  _DWORD **v106;
  uint64_t v107;
  _QWORD *v108;
  _DWORD *v109;
  _DWORD **v110;
  uint64_t v111;
  _QWORD *v112;
  _DWORD *v113;
  _DWORD **v114;
  uint64_t v115;
  _QWORD *v116;
  _DWORD *v117;
  uint64_t v118;
  uint64_t v119;
  WTF *v120;
  unint64_t v121;
  int v122;
  int v123;
  uint64_t v124;

  v7 = *((_QWORD *)this + 7);
  v8 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v9 = 8 * *(unsigned __int8 *)(v8 + 14);
  v10 = JSC::allocateCell<JSC::JSFinalObject>(v7, v9 + 16);
  v11 = *(_DWORD *)(v8 + 8);
  *(_DWORD *)v10 = v8 >> 4;
  *(_DWORD *)(v10 + 4) = v11;
  *(_QWORD *)(v10 + 8) = 0;
  bzero((void *)(v10 + 16), v9);
  if (*(_BYTE *)(v7 + 755))
    __dmb(0xAu);
  v12 = *((unsigned int *)a3 + 7);
  if (!(_DWORD)v12)
    goto LABEL_4;
  if (v12 >> 29)
  {
    __break(0xC471u);
    goto LABEL_179;
  }
  v49 = 8 * v12;
  v50 = WTF::fastMalloc((WTF *)(8 * v12));
  v52 = (WTF *)v50;
  v53 = *((unsigned int *)a3 + 7);
  if ((_DWORD)v53)
  {
    v94 = (_DWORD **)*((_QWORD *)a3 + 2);
    v95 = 8 * v53;
    v96 = (_QWORD *)v50;
    do
    {
      v97 = *v94;
      if (*v94)
        *v97 += 2;
      *v96++ = v97;
      ++v94;
      v95 -= 8;
    }
    while (v95);
  }
  v54 = 0;
  do
  {
    v55 = *(WTF::StringImpl **)((char *)v52 + v54);
    *(_QWORD *)((char *)v52 + v54) = 0;
    if (v55)
    {
      if (*(_DWORD *)v55 == 2)
        WTF::StringImpl::destroy(v55, v51);
      else
        *(_DWORD *)v55 -= 2;
    }
    v54 += 8;
  }
  while (v49 != v54);
  WTF::fastFree(v52, v51);
  v14 = *((unsigned int *)a3 + 7);
  if ((_DWORD)v14)
  {
    if (v14 >> 29)
    {
      __break(0xC471u);
      JUMPOUT(0x194951474);
    }
    v56 = WTF::fastMalloc((WTF *)(8 * v14));
    v13 = (WTF *)v56;
    v57 = *((unsigned int *)a3 + 7);
    if ((_DWORD)v57)
    {
      v98 = (_DWORD **)*((_QWORD *)a3 + 2);
      v99 = 8 * v57;
      v100 = (_QWORD *)v56;
      do
      {
        v101 = *v98;
        if (*v98)
          *v101 += 2;
        *v100++ = v101;
        ++v98;
        v99 -= 8;
      }
      while (v99);
    }
    HIDWORD(v121) = v14;
    v58 = (WTF *)WTF::fastMalloc((WTF *)(8 * v14));
    v59 = 0;
    LODWORD(v121) = v14;
    v120 = v58;
    do
    {
      v60 = *(_DWORD **)((char *)v13 + v59);
      if (v60)
        *v60 += 2;
      *(_QWORD *)((char *)v58 + v59) = v60;
      v59 += 8;
    }
    while (8 * v14 != v59);
    v15 = 0;
  }
  else
  {
LABEL_4:
    v13 = 0;
    v14 = 0;
    v120 = 0;
    v121 = 0;
    v15 = 1;
  }
  v17 = WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLUSVString>>::convert<WTF::String,0ul>((uint64_t)this, (uint64_t)a2, (uint64_t)&v120);
  if (HIDWORD(v121))
  {
    v85 = v120;
    v86 = 8 * HIDWORD(v121);
    do
    {
      v87 = *(WTF::StringImpl **)v85;
      *(_QWORD *)v85 = 0;
      if (v87)
      {
        if (*(_DWORD *)v87 == 2)
        {
          v118 = v86;
          WTF::StringImpl::destroy(v87, v16);
          v86 = v118;
        }
        else
        {
          *(_DWORD *)v87 -= 2;
        }
      }
      v85 = (WTF *)((char *)v85 + 8);
      v86 -= 8;
    }
    while (v86);
  }
  v18 = v120;
  if (v120)
  {
    v120 = 0;
    LODWORD(v121) = 0;
    WTF::fastFree(v18, v16);
    if ((v15 & 1) != 0)
      goto LABEL_8;
  }
  else if ((v15 & 1) != 0)
  {
    goto LABEL_8;
  }
  v40 = 8 * v14;
  v41 = (WTF::StringImpl **)v13;
  do
  {
    v42 = *v41;
    *v41 = 0;
    if (v42)
    {
      if (*(_DWORD *)v42 == 2)
        WTF::StringImpl::destroy(v42, v16);
      else
        *(_DWORD *)v42 -= 2;
    }
    ++v41;
    v40 -= 8;
  }
  while (v40);
LABEL_8:
  if (v13)
    WTF::fastFree(v13, v16);
  if (*(_DWORD *)(v7 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v7) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v19 = v120;
  v120 = 0;
  v121 = v10;
  v122 = -1;
  v123 = 0x1000000;
  v124 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v10, (JSC::VM *)v7, (unint64_t)v19, v17, 0, (uint64_t)&v120);
  if (v19)
  {
    if (*(_DWORD *)v19 == 2)
      WTF::StringImpl::destroy(v19, v20);
    else
      *(_DWORD *)v19 -= 2;
  }
  v21 = *((unsigned int *)a3 + 3);
  if (!(_DWORD)v21)
    goto LABEL_15;
  if (v21 >> 29)
  {
    __break(0xC471u);
    JUMPOUT(0x19495147CLL);
  }
  v61 = 8 * v21;
  v62 = WTF::fastMalloc((WTF *)(8 * v21));
  v64 = (WTF *)v62;
  v65 = *((unsigned int *)a3 + 3);
  if ((_DWORD)v65)
  {
    v102 = *(_DWORD ***)a3;
    v103 = 8 * v65;
    v104 = (_QWORD *)v62;
    do
    {
      v105 = *v102;
      if (*v102)
        *v105 += 2;
      *v104++ = v105;
      ++v102;
      v103 -= 8;
    }
    while (v103);
  }
  v66 = 0;
  do
  {
    v67 = *(WTF::StringImpl **)((char *)v64 + v66);
    *(_QWORD *)((char *)v64 + v66) = 0;
    if (v67)
    {
      if (*(_DWORD *)v67 == 2)
        WTF::StringImpl::destroy(v67, v63);
      else
        *(_DWORD *)v67 -= 2;
    }
    v66 += 8;
  }
  while (v61 != v66);
  WTF::fastFree(v64, v63);
  v23 = *((unsigned int *)a3 + 3);
  if ((_DWORD)v23)
  {
    if (v23 >> 29)
    {
      __break(0xC471u);
      JUMPOUT(0x194951484);
    }
    v68 = WTF::fastMalloc((WTF *)(8 * v23));
    v22 = (WTF *)v68;
    v69 = *((unsigned int *)a3 + 3);
    if ((_DWORD)v69)
    {
      v106 = *(_DWORD ***)a3;
      v107 = 8 * v69;
      v108 = (_QWORD *)v68;
      do
      {
        v109 = *v106;
        if (*v106)
          *v109 += 2;
        *v108++ = v109;
        ++v106;
        v107 -= 8;
      }
      while (v107);
    }
    else
    {
      v120 = 0;
      v121 = 0;
    }
    HIDWORD(v121) = v23;
    v70 = (WTF *)WTF::fastMalloc((WTF *)(8 * v23));
    v71 = 0;
    LODWORD(v121) = v23;
    v120 = v70;
    do
    {
      v72 = *(_DWORD **)((char *)v22 + v71);
      if (v72)
        *v72 += 2;
      *(_QWORD *)((char *)v70 + v71) = v72;
      v71 += 8;
    }
    while (8 * v23 != v71);
    v24 = 0;
  }
  else
  {
LABEL_15:
    v22 = 0;
    v23 = 0;
    v120 = 0;
    v121 = 0;
    v24 = 1;
  }
  v26 = WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLUSVString>>::convert<WTF::String,0ul>((uint64_t)this, (uint64_t)a2, (uint64_t)&v120);
  if (HIDWORD(v121))
  {
    v88 = v120;
    v89 = 8 * HIDWORD(v121);
    do
    {
      v90 = *(WTF::StringImpl **)v88;
      *(_QWORD *)v88 = 0;
      if (v90)
      {
        if (*(_DWORD *)v90 == 2)
        {
          v119 = v89;
          WTF::StringImpl::destroy(v90, v25);
          v89 = v119;
        }
        else
        {
          *(_DWORD *)v90 -= 2;
        }
      }
      v88 = (WTF *)((char *)v88 + 8);
      v89 -= 8;
    }
    while (v89);
  }
  v27 = v120;
  if (v120)
  {
    v120 = 0;
    LODWORD(v121) = 0;
    WTF::fastFree(v27, v25);
    if ((v24 & 1) != 0)
      goto LABEL_19;
  }
  else if ((v24 & 1) != 0)
  {
    goto LABEL_19;
  }
  v43 = 8 * v23;
  v44 = (WTF::StringImpl **)v22;
  do
  {
    v45 = *v44;
    *v44 = 0;
    if (v45)
    {
      if (*(_DWORD *)v45 == 2)
        WTF::StringImpl::destroy(v45, v25);
      else
        *(_DWORD *)v45 -= 2;
    }
    ++v44;
    v43 -= 8;
  }
  while (v43);
LABEL_19:
  if (v22)
    WTF::fastFree(v22, v25);
  if (*(_DWORD *)(v7 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v7) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v28 = v120;
  v120 = 0;
  v121 = v10;
  v122 = -1;
  v123 = 0x1000000;
  v124 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v10, (JSC::VM *)v7, (unint64_t)v28, v26, 0, (uint64_t)&v120);
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v29);
    else
      *(_DWORD *)v28 -= 2;
  }
  v30 = *((unsigned int *)a3 + 11);
  if (!(_DWORD)v30)
    goto LABEL_26;
  if (v30 >> 29)
  {
    __break(0xC471u);
    JUMPOUT(0x19495148CLL);
  }
  v73 = 8 * v30;
  v74 = WTF::fastMalloc((WTF *)(8 * v30));
  v76 = (WTF *)v74;
  v77 = *((unsigned int *)a3 + 11);
  if ((_DWORD)v77)
  {
    v110 = (_DWORD **)*((_QWORD *)a3 + 4);
    v111 = 8 * v77;
    v112 = (_QWORD *)v74;
    do
    {
      v113 = *v110;
      if (*v110)
        *v113 += 2;
      *v112++ = v113;
      ++v110;
      v111 -= 8;
    }
    while (v111);
  }
  v78 = 0;
  do
  {
    v79 = *(WTF::StringImpl **)((char *)v76 + v78);
    *(_QWORD *)((char *)v76 + v78) = 0;
    if (v79)
    {
      if (*(_DWORD *)v79 == 2)
        WTF::StringImpl::destroy(v79, v75);
      else
        *(_DWORD *)v79 -= 2;
    }
    v78 += 8;
  }
  while (v73 != v78);
  WTF::fastFree(v76, v75);
  v32 = *((unsigned int *)a3 + 11);
  if (!(_DWORD)v32)
  {
LABEL_26:
    v31 = 0;
    v32 = 0;
    v120 = 0;
    v121 = 0;
    v33 = 1;
    goto LABEL_27;
  }
  if (v32 >> 29)
  {
    __break(0xC471u);
LABEL_179:
    JUMPOUT(0x19495146CLL);
  }
  v80 = WTF::fastMalloc((WTF *)(8 * v32));
  v31 = (WTF *)v80;
  v81 = *((unsigned int *)a3 + 11);
  if ((_DWORD)v81)
  {
    v114 = (_DWORD **)*((_QWORD *)a3 + 4);
    v115 = 8 * v81;
    v116 = (_QWORD *)v80;
    do
    {
      v117 = *v114;
      if (*v114)
        *v117 += 2;
      *v116++ = v117;
      ++v114;
      v115 -= 8;
    }
    while (v115);
  }
  HIDWORD(v121) = v32;
  v82 = (WTF *)WTF::fastMalloc((WTF *)(8 * v32));
  v83 = 0;
  LODWORD(v121) = v32;
  v120 = v82;
  do
  {
    v84 = *(_DWORD **)((char *)v31 + v83);
    if (v84)
      *v84 += 2;
    *(_QWORD *)((char *)v82 + v83) = v84;
    v83 += 8;
  }
  while (8 * v32 != v83);
  v33 = 0;
LABEL_27:
  v35 = WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLUSVString>>::convert<WTF::String,0ul>((uint64_t)this, (uint64_t)a2, (uint64_t)&v120);
  if (HIDWORD(v121))
  {
    v91 = v120;
    v92 = 8 * HIDWORD(v121);
    do
    {
      v93 = *(WTF::StringImpl **)v91;
      *(_QWORD *)v91 = 0;
      if (v93)
      {
        if (*(_DWORD *)v93 == 2)
          WTF::StringImpl::destroy(v93, v34);
        else
          *(_DWORD *)v93 -= 2;
      }
      v91 = (WTF *)((char *)v91 + 8);
      v92 -= 8;
    }
    while (v92);
  }
  v36 = v120;
  if (v120)
  {
    v120 = 0;
    LODWORD(v121) = 0;
    WTF::fastFree(v36, v34);
    if ((v33 & 1) != 0)
      goto LABEL_30;
  }
  else if ((v33 & 1) != 0)
  {
    goto LABEL_30;
  }
  v46 = 8 * v32;
  v47 = (WTF::StringImpl **)v31;
  do
  {
    v48 = *v47;
    *v47 = 0;
    if (v48)
    {
      if (*(_DWORD *)v48 == 2)
        WTF::StringImpl::destroy(v48, v34);
      else
        *(_DWORD *)v48 -= 2;
    }
    ++v47;
    v46 -= 8;
  }
  while (v46);
LABEL_30:
  if (v31)
    WTF::fastFree(v31, v34);
  if (*(_DWORD *)(v7 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v7) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v37 = v120;
  v120 = 0;
  v121 = v10;
  v122 = -1;
  v123 = 0x1000000;
  v124 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v10, (JSC::VM *)v7, (unint64_t)v37, v35, 0, (uint64_t)&v120);
  if (v37)
  {
    if (*(_DWORD *)v37 == 2)
      WTF::StringImpl::destroy(v37, v38);
    else
      *(_DWORD *)v37 -= 2;
  }
  return v10;
}

uint64_t WebCore::convertEnumerationToJS<WebCore::ContactProperty>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)(a1 + 41968);
  {
    WebCore::convertEnumerationToString(WebCore::ContactProperty)::$_0::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::ContactProperty)::$_1::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::ContactProperty)::values[0] = (uint64_t)&WebCore::convertEnumerationToString(WebCore::ContactProperty)::$_0::operator() const(void)::impl;
    unk_1EE2F4520 = &WebCore::convertEnumerationToString(WebCore::ContactProperty)::$_1::operator() const(void)::impl;
    WebCore::convertEnumerationToString(WebCore::ContactProperty)::$_2::operator() const(void)::impl += 2;
    qword_1EE2F4528 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::ContactProperty)::$_2::operator() const(void)::impl;
  }
  v3 = WebCore::convertEnumerationToString(WebCore::ContactProperty)::values[a2];
  if (!v3)
    return *v2;
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  *(_DWORD *)v3 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_6:
      v6 = *(_QWORD *)(a1 + 64760);
      if (!v6 || v3 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v3 - 2;
      }
      goto LABEL_9;
    }
    v8 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_6;
      v9 = v10;
    }
    v6 = *(_QWORD *)(a1 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *v2;
  }
LABEL_9:
  if (v4)
    *(_DWORD *)v3 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v3, a2);
  return v6;
}

uint64_t WebCore::parseEnumeration<WebCore::ContactProperty>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  int v5;
  const char *v6;
  int v7;
  int v9;
  int v10;
  char **v13;
  int v15;
  int v16;
  uint64_t v19;
  unint64_t v20;

  v3 = a1;
  v20 = this;
  if ((this & 0xFFFE000000000002) == 0 && *(_BYTE *)(this + 5) == 2)
  {
    v4 = *(_QWORD *)(this + 8);
    if ((v4 & 1) != 0)
    {
      v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
      if (!v4)
      {
LABEL_6:
        if (v4)
          goto LABEL_7;
LABEL_34:
        v10 = 0;
        v9 = 0;
        return v10 | (v9 << 8);
      }
    }
    else if (!v4)
    {
      goto LABEL_6;
    }
    *(_DWORD *)v4 += 2;
    goto LABEL_6;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v20, a1);
  v4 = v19;
  if (!v19)
    goto LABEL_34;
LABEL_7:
  v5 = *(_DWORD *)(v4 + 16);
  v6 = *(const char **)(v4 + 8);
  v7 = *(_DWORD *)(v4 + 4);
  if (v6 != "email" && v7 == 5)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 101 || *(_WORD *)(v6 + 1) != 24941 || *(_WORD *)(v6 + 3) != 27753)
        goto LABEL_16;
    }
    else if (*(_WORD *)v6 != 101 || *(_QWORD *)(v6 + 2) != 0x6C00690061006DLL)
    {
      goto LABEL_16;
    }
    goto LABEL_37;
  }
  if (v6 == "email" && v7 == 5)
  {
LABEL_37:
    v13 = &WebCore::parseEnumerationFromString<WebCore::ContactProperty>(WTF::String const&)::mappings;
    goto LABEL_38;
  }
  if (v6 != "name" && v7 == 4)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 110 || *(_WORD *)(v6 + 1) != 28001 || *((_WORD *)v6 + 1) != 25965)
        goto LABEL_16;
    }
    else
    {
      if (*(_WORD *)v6 != 110)
        goto LABEL_16;
      v15 = *(_DWORD *)(v6 + 2);
      v16 = *((_DWORD *)v6 + 1);
      if (v15 != 7143521 || v16 != 6619245)
        goto LABEL_16;
    }
  }
  else if (v6 != "name" || v7 != 4)
  {
    if (v6 == "tel" || v7 != 3)
    {
      if (v7 == 3 && v6 == "tel")
        goto LABEL_57;
    }
    else if ((v5 & 4) != 0)
    {
      if (*v6 == 116 && *(_WORD *)(v6 + 1) == 27749)
      {
LABEL_57:
        v13 = &off_1E324D130;
        goto LABEL_38;
      }
    }
    else if (*(_WORD *)v6 == 116 && *(_DWORD *)(v6 + 2) == 7077989)
    {
      goto LABEL_57;
    }
LABEL_16:
    v9 = 0;
    v10 = 0;
    goto LABEL_39;
  }
  v13 = &off_1E324D118;
LABEL_38:
  v10 = *((unsigned __int8 *)v13 + 16);
  v9 = 1;
LABEL_39:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v10 | (v9 << 8);
}

_QWORD *WebCore::JSContactsManager::destroy(WebCore::JSContactsManager *this, JSC::JSCell *a2)
{
  _QWORD *result;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;
  _QWORD *v11;
  _QWORD *v12;

  result = (_QWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
    {
      v4 = (unsigned int *)result[2];
      result[2] = 0;
      if (v4)
      {
        do
        {
          v5 = __ldaxr(v4);
          v6 = v5 - 1;
        }
        while (__stlxr(v6, v4));
        if (!v6)
        {
          atomic_store(1u, v4);
          v12 = result;
          WTF::fastFree((WTF *)v4, a2);
          result = v12;
        }
      }
      v7 = result[1];
      if (v7)
      {
        *(_QWORD *)(v7 + 8) = 0;
        v8 = (unsigned int *)result[1];
        result[1] = 0;
        if (v8)
        {
          do
          {
            v9 = __ldaxr(v8);
            v10 = v9 - 1;
          }
          while (__stlxr(v10, v8));
          if (!v10)
          {
            atomic_store(1u, v8);
            v11 = result;
            WTF::fastFree((WTF *)v8, a2);
            result = v11;
          }
        }
      }
      else
      {
        result[1] = 0;
      }
      return (_QWORD *)bmalloc::api::isoDeallocate((bmalloc::api *)result, a2);
    }
    else
    {
      --*(_DWORD *)result;
    }
  }
  return result;
}

uint64_t WebCore::JSContactsManager::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSContactsManagerPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSContactsManagerPrototype::create(WebCore::JSContactsManagerPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSContactsManager::s_info, &WebCore::JSContactsManagerPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSContactsManager>,(WebCore::DOMConstructorID)68>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 544);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSContactsManager>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSContactsManager::s_info + ~((_QWORD)&WebCore::JSContactsManager::s_info << 32)) ^ (((unint64_t)&WebCore::JSContactsManager::s_info + ~((_QWORD)&WebCore::JSContactsManager::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSContactsManager::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSContactsManager::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSContactsManagerPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSContactsManagerPrototype::create((WebCore::JSContactsManagerPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSContactsManager::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSContactsManager::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 544) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsContactsManagerConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSContactsManagerPrototype::s_info != (char **)(16
                                                               * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                 + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSContactsManager>,(WebCore::DOMConstructorID)68>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSContactsManagerOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  void *v6;
  WTF::ConcurrentPtrHashSet *v7;
  _DWORD *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  void *v15;
  uint64_t result;
  uint64_t v17;
  void *v18;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 16);
  if (!v5)
    return 0;
  v6 = *(void **)(v5 + 8);
  if (!v6)
    return 0;
  if (a5)
  {
    *a5 = "Reachable from Navigator";
    a5[1] = 25;
  }
  v7 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v8 = (_DWORD *)*((_QWORD *)v7 + 6);
  if ((_DWORD *)((char *)v7 + 56) != v8)
  {
    v9 = v8[1];
    v10 = ((unint64_t)v6 + ~((_QWORD)v6 << 32)) ^ (((unint64_t)v6 + ~((_QWORD)v6 << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = v13;
    while (1)
    {
      v15 = *(void **)&v8[2 * v14 + 4];
      if (!v15)
        return 0;
      if (v6 == v15)
        goto LABEL_14;
      v14 = (v14 + 1) & v9;
      if (v14 == v13)
      {
        __break(0xC471u);
        JUMPOUT(0x19495227CLL);
      }
    }
  }
  v17 = a4;
  v18 = v6;
  result = WTF::ConcurrentPtrHashSet::containsImplSlow(v7, v6);
  a4 = v17;
  v6 = v18;
  if ((_DWORD)result)
  {
LABEL_14:
    if (*(_BYTE *)(a4 + 131))
      (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v6);
    return 1;
  }
  return result;
}

void WebCore::JSContactsManagerOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  bmalloc::api *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  bmalloc::api *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int *v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;

  v3 = *(bmalloc::api **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(bmalloc::api **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(bmalloc::api **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
  {
    v24 = (unsigned int *)*((_QWORD *)v3 + 2);
    *((_QWORD *)v3 + 2) = 0;
    if (v24)
    {
      do
      {
        v25 = __ldaxr(v24);
        v26 = v25 - 1;
      }
      while (__stlxr(v26, v24));
      if (!v26)
      {
        atomic_store(1u, v24);
        WTF::fastFree((WTF *)v24, a2);
      }
    }
    v27 = *((_QWORD *)v3 + 1);
    if (v27)
    {
      *(_QWORD *)(v27 + 8) = 0;
      v28 = (unsigned int *)*((_QWORD *)v3 + 1);
      *((_QWORD *)v3 + 1) = 0;
      if (v28)
      {
        do
        {
          v29 = __ldaxr(v28);
          v30 = v29 - 1;
        }
        while (__stlxr(v30, v28));
        if (!v30)
        {
          atomic_store(1u, v28);
          WTF::fastFree((WTF *)v28, a2);
        }
      }
    }
    else
    {
      *((_QWORD *)v3 + 1) = 0;
    }
    bmalloc::api::isoDeallocate(v3, a2);
  }
  else
  {
    --*(_DWORD *)v3;
  }
}

unint64_t WebCore::wrap<WebCore::ContactsManager>(uint64_t a1, uint64_t a2, WTF *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF *v11;
  int v12;
  uint64_t v13;
  unint64_t SlowCase;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  uint64_t *v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  WTF *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  WTF *v44;
  void *v45;
  int v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *Allocator;
  unint64_t v52;
  _QWORD *v53;
  WTF *v54;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          SlowCase = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return SlowCase;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*(_DWORD *)a3;
  v15 = *(_QWORD *)(a2 + 3296);
  if (v15)
  {
    v16 = *(_DWORD *)(v15 - 8);
    v17 = ((unint64_t)&WebCore::JSContactsManager::s_info + ~((_QWORD)&WebCore::JSContactsManager::s_info << 32)) ^ (((unint64_t)&WebCore::JSContactsManager::s_info + ~((_QWORD)&WebCore::JSContactsManager::s_info << 32)) >> 22);
    v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
    v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
    v20 = v16 & ((v19 >> 31) ^ v19);
    v21 = *(char ***)(v15 + 16 * v20);
    if (v21 == &WebCore::JSContactsManager::s_info)
    {
LABEL_14:
      v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
      if (v23)
        goto LABEL_16;
    }
    else
    {
      v22 = 1;
      while (v21)
      {
        v20 = ((_DWORD)v20 + v22) & v16;
        v21 = *(char ***)(v15 + 16 * v20);
        ++v22;
        if (v21 == &WebCore::JSContactsManager::s_info)
          goto LABEL_14;
      }
    }
  }
  v24 = *(uint64_t **)(a2 + 56);
  Structure = WebCore::JSContactsManagerPrototype::createStructure(v24, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSContactsManagerPrototype::create((WebCore::JSContactsManagerPrototype *)v24, Structure, v26, v27);
  v29 = WebCore::JSContactsManager::createStructure(v24, a2, v28);
  v23 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSContactsManager::s_info);
LABEL_16:
  v30 = *(_QWORD *)(a2 + 56);
  v31 = *(_QWORD *)(v30 + 41456);
  v32 = *(_QWORD *)(v31 + 23536);
  v33 = *(_QWORD **)(v32 + 544);
  if (v33)
    goto LABEL_36;
  v34 = *(_QWORD *)(v31 + 22648);
  if (__ldaxr((unsigned __int8 *)v34))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v34))
  {
    goto LABEL_21;
  }
  MEMORY[0x19AEA534C](v34);
LABEL_21:
  v36 = *(_QWORD *)(v34 + 2824);
  if (!*(_QWORD *)(v36 + 544))
  {
    v37 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v54, "IsoSpace T");
    v53 = 0;
    MEMORY[0x19AEA3204](v37, &v54, v30 + 192, v30 + 1872, 32, 8, &v53);
    v39 = (uint64_t)v53;
    v53 = 0;
    if (v39)
      (*(void (**)(uint64_t))(*(_QWORD *)v39 + 8))(v39);
    v40 = v54;
    v54 = 0;
    if (v40)
    {
      if (*(_DWORD *)v40 == 1)
        WTF::fastFree(v40, v38);
      else
        --*(_DWORD *)v40;
    }
    v41 = *(_QWORD *)(v36 + 544);
    *(_QWORD *)(v36 + 544) = v37;
    if (v41)
      (*(void (**)(uint64_t))(*(_QWORD *)v41 + 8))(v41);
  }
  v33 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v43 = *(_QWORD *)(v32 + 544);
  *(_QWORD *)(v32 + 544) = v33;
  if (v43)
  {
    v44 = (WTF *)MEMORY[0x19AEA3528](v43, v42);
    WTF::fastFree(v44, v45);
  }
  v46 = __ldxr((unsigned __int8 *)v34);
  if (v46 != 1)
  {
    __clrex();
    goto LABEL_35;
  }
  if (__stlxr(0, (unsigned __int8 *)v34))
LABEL_35:
    WTF::Lock::unlockSlow((WTF::Lock *)v34);
LABEL_36:
  SlowCase = v33[3];
  if (SlowCase >= v33[4])
  {
    SlowCase = v33[5];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_38;
    }
    v52 = *(_QWORD *)(SlowCase + 8) ^ v33[6];
    v33[4] = SlowCase + HIDWORD(v52);
    v33[5] = SlowCase + (int)v52;
  }
  v33[3] = SlowCase + 32;
LABEL_38:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v23);
  *(_QWORD *)(SlowCase + 24) = a3;
  if (*(_BYTE *)(v30 + 755))
    __dmb(0xAu);
  v47 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE334F98 & 1) == 0)
  {
    qword_1EE334F90 = (uint64_t)&off_1E324F790;
    byte_1EE334F98 = 1;
  }
  v54 = a3;
  if ((SlowCase & 8) != 0)
    v48 = (SlowCase - 112) | 1;
  else
    v48 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v48 & 1) != 0)
    v49 = v48 + 47;
  else
    v49 = *(_QWORD *)v48 + 32;
  Allocator = *(_QWORD **)(v49 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v49 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE334F90;
  Allocator[2] = v47;
  v53 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v47 + 32), (uint64_t *)&v54, (uint64_t *)&v53);
  if (v53)
    v53[1] = 3;
  return SlowCase;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSContentVisibilityAutoStateChangeEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  JSC::VM *v5;
  uint64_t v7;
  int v8;
  JSC::JSCell *v9;
  int v10;
  _BOOL4 v11;
  int v12;
  unint64_t v13;
  uint64_t Object;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  JSC::VM *v17;
  double v18;
  WTF::StringImpl *v19;
  WTF::StringImpl *v20;
  unint64_t v21;
  JSC::VM *v22;
  double v23;
  _BOOL4 v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  unint64_t v27;
  _BOOL4 v28;
  JSC::VM *v29;
  double v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  JSC::VM *v33;
  double v34;
  int v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  WTF::StringImpl *v38;
  WebCore::JSDOMGlobalObject *v39;
  uint64_t v40;
  int v41;
  unsigned int v42;
  JSC::VM *v43;
  uint64_t v44;
  unsigned int v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char **v50;
  int v51;
  unint64_t v52;
  WebCore::JSEvent *v53;
  JSC::JSCell *v54;
  unint64_t Structure;
  JSC::Structure *v56;
  JSC::JSCell *v57;
  uint64_t v58;
  JSCell *v59;
  JSC::JSCell *v60;
  JSC::JSGlobalObject *v61;
  JSC::JSObject *v62;
  JSC::JSGlobalObject *v63;
  JSC::VM *v64;
  WebCore::JSDOMGlobalObject *v65;
  JSC::Structure *v66;
  JSC::VM *FunctionRealm;
  uint64_t v68;
  unsigned int v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char **v74;
  int v75;
  JSC::JSCell *v76;
  unint64_t v77;
  JSC::Structure *v78;
  JSC::JSCell *v79;
  uint64_t v80;
  unint64_t SubclassStructure;
  _DWORD *v82;
  JSValue v84;
  BOOL v85;
  int v86;
  uint64_t v87;
  int *v88;
  int v89;
  BOOL v90;
  int v91;
  uint64_t v92;
  int *v93;
  int v94;
  BOOL v95;
  int v96;
  uint64_t v97;
  int *v98;
  int v99;
  BOOL v100;
  int v101;
  uint64_t v102;
  int *v103;
  int v104;
  _BOOL4 v105;
  JSC::VM *v106;
  WTF::StringImpl *v107;
  int v108;
  uint64_t v109;
  unint64_t v110;

  v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v84.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v5, a1, v84);
  }
  v7 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v107);
  v8 = v108;
  if (!v108)
  {
    if ((unint64_t)(*(int *)(a2 + 32) - 3) < 0xFFFFFFFFFFFFFFFELL)
    {
      v9 = *(JSC::JSCell **)(a2 + 56);
      v2 = *((_QWORD *)a1 + 7);
      v109 = v2;
      if (((unint64_t)v9 & 0xFFFFFFFFFFFFFFF7) == 2)
      {
        v10 = 0;
        v11 = 0;
        v12 = 0;
        LODWORD(v13) = 0;
        goto LABEL_63;
      }
      if (((unint64_t)v9 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v9)) == 0)
      {
        JSC::throwTypeError();
      }
      else
      {
        v3 = Object;
        v106 = v5;
        WTF::AtomStringImpl::addLiteral();
        v15 = (WTF::StringImpl *)v110;
        v13 = JSC::JSObject::get((JSC::Structure *)v3, a1, v110);
        if (v15)
        {
          if (*(_DWORD *)v15 == 2)
            WTF::StringImpl::destroy(v15, v16);
          else
            *(_DWORD *)v15 -= 2;
        }
        if (!*(_DWORD *)(v2 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v2) & 1) == 0)
        {
          if (v13 == 10)
          {
            v11 = 0;
            goto LABEL_20;
          }
          v17 = (JSC::VM *)*((_QWORD *)a1 + 7);
          if (v13 >= 0xFFFE000000000000)
            goto LABEL_134;
          *(_QWORD *)&v18 = v13 - 0x2000000000000;
          if (v13 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
          {
            v11 = v18 > 0.0 || v18 < 0.0;
            goto LABEL_19;
          }
          if ((v13 & 0xFFFE000000000002) != 0)
          {
            v11 = v13 == 7;
            goto LABEL_19;
          }
          v86 = *(unsigned __int8 *)(v13 + 5);
          if (v86 == 3)
          {
            v89 = *(_DWORD *)(v13 + 8);
          }
          else
          {
            if (v86 != 2)
            {
              if ((*(_BYTE *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0xA) & 1) != 0)
              {
                v85 = *(_QWORD *)(16 * (*(_DWORD *)v13 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
                goto LABEL_188;
              }
              v11 = 1;
              goto LABEL_19;
            }
            v87 = *(_QWORD *)(v13 + 8);
            if ((v87 & 1) != 0)
              v88 = (int *)(v13 + 16);
            else
              v88 = (int *)(v87 + 4);
            v89 = *v88;
          }
          v85 = v89 == 0;
          goto LABEL_188;
        }
      }
LABEL_108:
      v59 = 0;
LABEL_96:
      v8 = v108;
      goto LABEL_97;
    }
    v10 = 0;
    v11 = 0;
    v12 = 0;
    LODWORD(v13) = 0;
    while (1)
    {
LABEL_63:
      if (!v108)
      {
        v35 = v10 | v11 | v12;
        v36 = v107;
        v107 = 0;
        v37 = bmalloc::api::isoAllocate();
        WTF::MonotonicTime::now((WTF::MonotonicTime *)v37);
        *(_QWORD *)(v37 + 8) = 0;
        if ((_BYTE)v35)
          v41 = 1835010;
        else
          v41 = 1835008;
        v42 = v41 | (8 * ((v35 & 0xFF0000) != 0)) | (4 * ((v35 & 0xFF00 | v13) != 0)) | (v36 != 0) | *(_DWORD *)(v37 + 20) & 0xFFC00000;
        *(_DWORD *)(v37 + 16) = 1;
        *(_DWORD *)(v37 + 20) = v42;
        if (v36)
        {
          *(_DWORD *)v36 += 2;
          v42 = *(_DWORD *)(v37 + 20);
        }
        *(_QWORD *)(v37 + 24) = v36;
        *(_QWORD *)(v37 + 32) = 0;
        *(_QWORD *)(v37 + 40) = 0;
        *(_QWORD *)(v37 + 48) = 0;
        *(_QWORD *)(v37 + 56) = v40;
        *(_QWORD *)(v37 + 64) = 0;
        *(_DWORD *)(v37 + 20) = v42 | 0x4000;
        *(_QWORD *)v37 = off_1E33A17F8;
        *(_BYTE *)(v37 + 72) = HIBYTE(v35);
        v110 = v37;
        if (v36)
        {
          if (*(_DWORD *)v36 == 2)
          {
            WTF::StringImpl::destroy(v36, v38);
            if (*(void (***)(WebCore::ContentVisibilityAutoStateChangeEvent *__hidden))v37 != off_1E33A17F8)
            {
              __break(0xC471u);
              JUMPOUT(0x194953058);
            }
          }
          else
          {
            *(_DWORD *)v36 -= 2;
          }
        }
        v43 = *(JSC::VM **)(v7 + 40);
        v44 = *((_QWORD *)v43 + 412);
        if (!v44)
          goto LABEL_78;
        v45 = *(_DWORD *)(v44 - 8);
        v46 = ((unint64_t)&WebCore::JSContentVisibilityAutoStateChangeEvent::s_info
             + ~((_QWORD)&WebCore::JSContentVisibilityAutoStateChangeEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSContentVisibilityAutoStateChangeEvent::s_info
                                                                                             + ~((_QWORD)&WebCore::JSContentVisibilityAutoStateChangeEvent::s_info << 32)) >> 22);
        v47 = 9 * ((v46 + ~(v46 << 13)) ^ ((v46 + ~(v46 << 13)) >> 8));
        v48 = (v47 ^ (v47 >> 15)) + ~((v47 ^ (v47 >> 15)) << 27);
        v49 = v45 & ((v48 >> 31) ^ v48);
        v50 = *(char ***)(v44 + 16 * v49);
        if (v50 == &WebCore::JSContentVisibilityAutoStateChangeEvent::s_info)
        {
LABEL_77:
          v52 = *(_QWORD *)(v44 + 16 * v49 + 8);
          if (!v52)
            goto LABEL_78;
        }
        else
        {
          v51 = 1;
          while (v50)
          {
            v49 = ((_DWORD)v49 + v51) & v45;
            v50 = *(char ***)(v44 + 16 * v49);
            ++v51;
            if (v50 == &WebCore::JSContentVisibilityAutoStateChangeEvent::s_info)
              goto LABEL_77;
          }
LABEL_78:
          v53 = (WebCore::JSEvent *)*((_QWORD *)v43 + 7);
          v54 = (JSC::JSCell *)WebCore::JSEvent::prototype(v53, *(JSC::VM **)(v7 + 40), v39);
          Structure = WebCore::JSContentVisibilityAutoStateChangeEventPrototype::createStructure((uint64_t *)v53, (uint64_t)v43, v54);
          *(_DWORD *)(Structure + 16) |= 0x80000u;
          v57 = (JSC::JSCell *)WebCore::JSContentVisibilityAutoStateChangeEventPrototype::create(v53, v43, Structure, v56);
          v58 = WebCore::JSContentVisibilityAutoStateChangeEvent::createStructure((uint64_t *)v53, (uint64_t)v43, v57);
          v52 = WebCore::cacheDOMStructure((JSCell *)v43, v58, (uint64_t)&WebCore::JSContentVisibilityAutoStateChangeEvent::s_info);
        }
        v59 = (JSCell *)WebCore::JSContentVisibilityAutoStateChangeEvent::create(v52, v43, (uint64_t *)&v110);
        WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*((_QWORD *)v43 + 415), v37, (uint64_t)v59);
        v60 = *(JSC::JSCell **)(a2 + 40);
        if (((unint64_t)v60 & 0xFFFE000000000002) != 0
          || (v61 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v60)) == 0
          || (v63 = v61, v61 == *(JSC::JSGlobalObject **)(a2 + 24))
          || (v64 = (JSC::VM *)*((_QWORD *)a1 + 7),
              FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v61, v62),
              *((_DWORD *)v64 + 20))
          && (JSC::VM::hasExceptionsAfterHandlingTraps(v64) & 1) != 0)
        {
LABEL_92:
          if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
            v59 = 0;
          v82 = (_DWORD *)v110;
          v110 = 0;
          if (v82)
          {
            if (v82[4] == 1)
              (*(void (**)(_DWORD *))(*(_QWORD *)v82 + 8))(v82);
            else
              --v82[4];
          }
          goto LABEL_96;
        }
        v68 = *((_QWORD *)FunctionRealm + 412);
        if (v68)
        {
          v69 = *(_DWORD *)(v68 - 8);
          v70 = ((unint64_t)&WebCore::JSContentVisibilityAutoStateChangeEvent::s_info
               + ~((_QWORD)&WebCore::JSContentVisibilityAutoStateChangeEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSContentVisibilityAutoStateChangeEvent::s_info
                                                                                               + ~((_QWORD)&WebCore::JSContentVisibilityAutoStateChangeEvent::s_info << 32)) >> 22);
          v71 = 9 * ((v70 + ~(v70 << 13)) ^ ((v70 + ~(v70 << 13)) >> 8));
          v72 = (v71 ^ (v71 >> 15)) + ~((v71 ^ (v71 >> 15)) << 27);
          v73 = v69 & ((v72 >> 31) ^ v72);
          v74 = *(char ***)(v68 + 16 * v73);
          if (v74 != &WebCore::JSContentVisibilityAutoStateChangeEvent::s_info)
          {
            v75 = 1;
            while (v74)
            {
              v73 = ((_DWORD)v73 + v75) & v69;
              v74 = *(char ***)(v68 + 16 * v73);
              ++v75;
              if (v74 == &WebCore::JSContentVisibilityAutoStateChangeEvent::s_info)
                goto LABEL_88;
            }
            goto LABEL_89;
          }
LABEL_88:
          v65 = *(WebCore::JSDOMGlobalObject **)(v68 + 16 * v73 + 8);
          if (!v65)
            goto LABEL_89;
        }
        else
        {
LABEL_89:
          v76 = (JSC::JSCell *)WebCore::JSEvent::prototype(v64, FunctionRealm, v65);
          v77 = WebCore::JSContentVisibilityAutoStateChangeEventPrototype::createStructure((uint64_t *)v64, (uint64_t)FunctionRealm, v76);
          *(_DWORD *)(v77 + 16) |= 0x80000u;
          v79 = (JSC::JSCell *)WebCore::JSContentVisibilityAutoStateChangeEventPrototype::create(v64, FunctionRealm, v77, v78);
          v80 = WebCore::JSContentVisibilityAutoStateChangeEvent::createStructure((uint64_t *)v64, (uint64_t)FunctionRealm, v79);
          v65 = (WebCore::JSDOMGlobalObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v80, (uint64_t)&WebCore::JSContentVisibilityAutoStateChangeEvent::s_info);
        }
        SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v63, v65, v66);
        if (!*((_DWORD *)v64 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v64) & 1) == 0)
          JSC::JSObject::setStructure(v59, v64, SubclassStructure);
        goto LABEL_92;
      }
      v17 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_134:
      v85 = (_DWORD)v13 == 0;
LABEL_188:
      v11 = !v85;
LABEL_19:
      if (*((_DWORD *)v17 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) != 0)
        goto LABEL_108;
LABEL_20:
      WTF::AtomStringImpl::addLiteral();
      v19 = (WTF::StringImpl *)v110;
      v21 = JSC::JSObject::get((JSC::Structure *)v3, a1, v110);
      if (v19)
      {
        if (*(_DWORD *)v19 == 2)
          WTF::StringImpl::destroy(v19, v20);
        else
          *(_DWORD *)v19 -= 2;
      }
      if (*(_DWORD *)(v2 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v2) & 1) != 0)
        goto LABEL_108;
      if (v21 == 10)
      {
        v105 = 0;
        goto LABEL_31;
      }
      v22 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v21 >= 0xFFFE000000000000)
        break;
      *(_QWORD *)&v23 = v21 - 0x2000000000000;
      if (v21 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        if ((v21 & 0xFFFE000000000002) != 0)
        {
          v24 = v21 == 7;
          goto LABEL_30;
        }
        v91 = *(unsigned __int8 *)(v21 + 5);
        if (v91 == 3)
        {
          v94 = *(_DWORD *)(v21 + 8);
          goto LABEL_176;
        }
        if (v91 == 2)
        {
          v92 = *(_QWORD *)(v21 + 8);
          if ((v92 & 1) != 0)
            v93 = (int *)(v21 + 16);
          else
            v93 = (int *)(v92 + 4);
          v94 = *v93;
LABEL_176:
          v90 = v94 == 0;
        }
        else
        {
          if ((*(_BYTE *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0xA) & 1) == 0)
          {
LABEL_178:
            v24 = 1;
            goto LABEL_30;
          }
          v90 = *(_QWORD *)(16 * (*(_DWORD *)v21 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
        }
LABEL_192:
        v24 = !v90;
        goto LABEL_30;
      }
      if (v23 > 0.0)
        goto LABEL_178;
      v24 = v23 < 0.0;
LABEL_30:
      v105 = v24;
      if (*((_DWORD *)v22 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v22) & 1) != 0)
        goto LABEL_108;
LABEL_31:
      WTF::AtomStringImpl::addLiteral();
      v25 = (WTF::StringImpl *)v110;
      v27 = JSC::JSObject::get((JSC::Structure *)v3, a1, v110);
      if (v25)
      {
        if (*(_DWORD *)v25 == 2)
          WTF::StringImpl::destroy(v25, v26);
        else
          *(_DWORD *)v25 -= 2;
      }
      if (*(_DWORD *)(v2 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v2) & 1) != 0)
        goto LABEL_108;
      if (v27 != 10)
      {
        v29 = (JSC::VM *)*((_QWORD *)a1 + 7);
        if (v27 >= 0xFFFE000000000000)
        {
          v95 = (_DWORD)v27 == 0;
          goto LABEL_196;
        }
        *(_QWORD *)&v30 = v27 - 0x2000000000000;
        if (v27 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
        {
          if (v30 <= 0.0)
          {
            v28 = v30 < 0.0;
            goto LABEL_41;
          }
        }
        else
        {
          if ((v27 & 0xFFFE000000000002) != 0)
          {
            v28 = v27 == 7;
            goto LABEL_41;
          }
          v96 = *(unsigned __int8 *)(v27 + 5);
          if (v96 == 3)
          {
            v99 = *(_DWORD *)(v27 + 8);
            goto LABEL_180;
          }
          if (v96 == 2)
          {
            v97 = *(_QWORD *)(v27 + 8);
            if ((v97 & 1) != 0)
              v98 = (int *)(v27 + 16);
            else
              v98 = (int *)(v97 + 4);
            v99 = *v98;
LABEL_180:
            v95 = v99 == 0;
LABEL_196:
            v28 = !v95;
LABEL_41:
            if (*((_DWORD *)v29 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v29) & 1) != 0)
              goto LABEL_108;
            goto LABEL_42;
          }
          if ((*(_BYTE *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0xA) & 1) != 0)
          {
            v95 = *(_QWORD *)(16 * (*(_DWORD *)v27 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            goto LABEL_196;
          }
        }
        v28 = 1;
        goto LABEL_41;
      }
      v28 = 0;
LABEL_42:
      WTF::AtomStringImpl::addLiteral();
      v31 = (WTF::StringImpl *)v110;
      v3 = JSC::JSObject::get((JSC::Structure *)v3, a1, v110);
      if (v31)
      {
        if (*(_DWORD *)v31 == 2)
          WTF::StringImpl::destroy(v31, v32);
        else
          *(_DWORD *)v31 -= 2;
      }
      if (*(_DWORD *)(v2 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v2) & 1) != 0)
        goto LABEL_108;
      if (v3 == 10)
      {
        v12 = 0;
        if (v28)
          goto LABEL_48;
LABEL_59:
        v10 = 0;
        v5 = v106;
        if (v105)
LABEL_60:
          LODWORD(v13) = 256;
        else
          LODWORD(v13) = 0;
      }
      else
      {
        v33 = (JSC::VM *)*((_QWORD *)a1 + 7);
        if (v3 >= 0xFFFE000000000000)
        {
          v100 = (_DWORD)v3 == 0;
          goto LABEL_200;
        }
        *(_QWORD *)&v34 = v3 - 0x2000000000000;
        if (v3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
        {
          if ((v3 & 0xFFFE000000000002) != 0)
          {
            v2 = v3 == 7;
            goto LABEL_54;
          }
          v101 = *(unsigned __int8 *)(v3 + 5);
          if (v101 == 3)
          {
            v104 = *(_DWORD *)(v3 + 8);
            goto LABEL_184;
          }
          if (v101 == 2)
          {
            v102 = *(_QWORD *)(v3 + 8);
            if ((v102 & 1) != 0)
              v103 = (int *)(v3 + 16);
            else
              v103 = (int *)(v102 + 4);
            v104 = *v103;
LABEL_184:
            v100 = v104 == 0;
          }
          else
          {
            if ((*(_BYTE *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
            {
LABEL_186:
              v2 = 1;
              goto LABEL_54;
            }
            v100 = *(_QWORD *)(16 * (*(_DWORD *)v3 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
          }
LABEL_200:
          v2 = !v100;
          goto LABEL_54;
        }
        if (v34 > 0.0)
          goto LABEL_186;
        v2 = v34 < 0.0;
LABEL_54:
        if (*((_DWORD *)v33 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v33) & 1) != 0)
          goto LABEL_108;
        if ((_DWORD)v2)
          v12 = 0x1000000;
        else
          v12 = 0;
        if (!v28)
          goto LABEL_59;
LABEL_48:
        v10 = 0x10000;
        if (v105)
        {
          v5 = v106;
          goto LABEL_60;
        }
        LODWORD(v13) = 0;
        v5 = v106;
      }
    }
    v90 = (_DWORD)v21 == 0;
    goto LABEL_192;
  }
  v59 = 0;
LABEL_97:
  if (v8 != -1)
    ((void (*)(unint64_t *, WTF::StringImpl **))off_1E324FCB0[v8])(&v110, &v107);
  return v59;
}

uint64_t WebCore::JSContentVisibilityAutoStateChangeEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSContentVisibilityAutoStateChangeEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSContentVisibilityAutoStateChangeEventPrototype::create(WebCore::JSContentVisibilityAutoStateChangeEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<2u>(this, (uint64_t)&WebCore::JSContentVisibilityAutoStateChangeEvent::s_info, (uint64_t)&WebCore::JSContentVisibilityAutoStateChangeEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSContentVisibilityAutoStateChangeEvent>,(WebCore::DOMConstructorID)422>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v11;
  unint64_t v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  WebCore::JSDOMGlobalObject *v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char **v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3376);
  if (v2)
    return v2;
  v6 = (uint64_t *)(a1 + 40136);
  v7 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
  v8 = v7;
  LODWORD(v36) = 67099;
  if ((v7 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v7);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v6;
  if (*v6 < (unint64_t)v6[1])
    goto LABEL_7;
  SlowCase = v6[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v6[3];
    v6[1] = SlowCase + HIDWORD(v34);
    v6[2] = SlowCase + (int)v34;
LABEL_7:
    *v6 = SlowCase + 128;
    goto LABEL_8;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_8:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v8, &v36, &WebCore::JSDOMConstructor<WebCore::JSContentVisibilityAutoStateChangeEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v11 = (_QWORD *)v6[165];
  v2 = v11[2846];
  if (v2 < v11[2847])
    goto LABEL_11;
  v2 = v11[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v11[2849];
    v11[2847] = v2 + HIDWORD(v35);
    v11[2848] = v2 + (int)v35;
LABEL_11:
    v11[2846] = v2 + 48;
    goto LABEL_12;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_12:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v12 = *(_QWORD *)(v6[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v12, 0xFFFE000000000001, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v14 = JSC::JSString::create(a1, &v36);
  v15 = v36;
  v36 = 0;
  if (v15)
  {
    if (*(_DWORD *)v15 == 2)
      WTF::StringImpl::destroy(v15, v13);
    else
      *(_DWORD *)v15 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v14;
  if (v14 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v16 = *(_QWORD *)(v6[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v16, v14, 6, (uint64_t)&v36);
  v18 = *(_QWORD *)(v6[227] + 2160);
  v19 = *(_QWORD *)(a2 + 3296);
  if (v19)
  {
    v20 = *(_DWORD *)(v19 - 8);
    v21 = ((unint64_t)&WebCore::JSContentVisibilityAutoStateChangeEvent::s_info
         + ~((_QWORD)&WebCore::JSContentVisibilityAutoStateChangeEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSContentVisibilityAutoStateChangeEvent::s_info
                                                                                         + ~((_QWORD)&WebCore::JSContentVisibilityAutoStateChangeEvent::s_info << 32)) >> 22);
    v22 = 9 * ((v21 + ~(v21 << 13)) ^ ((v21 + ~(v21 << 13)) >> 8));
    v23 = (v22 ^ (v22 >> 15)) + ~((v22 ^ (v22 >> 15)) << 27);
    v24 = v20 & ((v23 >> 31) ^ v23);
    v25 = *(char ***)(v19 + 16 * v24);
    if (v25 == &WebCore::JSContentVisibilityAutoStateChangeEvent::s_info)
    {
LABEL_18:
      v26 = *(_QWORD *)(v19 + 16 * v24 + 8);
      if (v26)
        goto LABEL_20;
    }
    else
    {
      v33 = 1;
      while (v25)
      {
        v24 = ((_DWORD)v24 + v33) & v20;
        v25 = *(char ***)(v19 + 16 * v24);
        ++v33;
        if (v25 == &WebCore::JSContentVisibilityAutoStateChangeEvent::s_info)
          goto LABEL_18;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEvent::prototype((WebCore::JSEvent *)a1, (JSC::VM *)a2, v17);
  Structure = WebCore::JSContentVisibilityAutoStateChangeEventPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSContentVisibilityAutoStateChangeEventPrototype::create((WebCore::JSContentVisibilityAutoStateChangeEventPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSContentVisibilityAutoStateChangeEvent::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSContentVisibilityAutoStateChangeEvent::s_info);
LABEL_20:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v18, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3376) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsContentVisibilityAutoStateChangeEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSContentVisibilityAutoStateChangeEventPrototype::s_info != (char **)(16
                                                                                     * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSContentVisibilityAutoStateChangeEvent>,(WebCore::DOMConstructorID)422>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsContentVisibilityAutoStateChangeEvent_skipped(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(*(_QWORD *)(a2 + 24) + 72))
    return 7;
  else
    return 6;
}

uint64_t WebCore::JSContentVisibilityAutoStateChangeEvent::subspaceForImpl(WebCore::JSContentVisibilityAutoStateChangeEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 3456);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 3456))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 32, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 3456);
    *(_QWORD *)(v8 + 3456) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 3456);
  *(_QWORD *)(v3 + 3456) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::JSDOMConstructor<WebCore::JSConvolverNode>::construct(WebCore::JSDOMGlobalObject *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  JSC::JSGlobalObject *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  JSCell *v12;
  uint64_t v13;
  uint64_t v14;
  JSC::VM *v15;
  uint64_t v16;
  BOOL v17;
  char **v18;
  char **v19;
  BOOL v20;
  uint64_t v22;
  JSC::JSCell *v23;
  uint64_t Object;
  JSC::Structure *v25;
  WTF::StringImpl *v26;
  unint64_t v27;
  char v28;
  unsigned __int8 v29;
  char v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  WTF **v34;
  BOOL v35;
  WTF::StringImpl *v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  WTF::StringImpl *v39;
  WTF::StringImpl *v40;
  WTF::StringImpl *v41;
  unint64_t v42;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44;
  WTF::StringImpl *v45;
  uint64_t v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;
  unint64_t v49;
  JSC::VM *v50;
  double v51;
  void *v52;
  WebCore::JSDOMGlobalObject *v53;
  WTF **v54;
  JSC::VM *v55;
  WTF::StringImpl *v56;
  WebCore::AudioNode *v57;
  JSC::JSCell *v58;
  JSC::JSGlobalObject *v59;
  JSC::JSObject *v60;
  JSC::JSGlobalObject *v61;
  JSC::VM *v62;
  JSC::JSObject *v63;
  JSC::Structure *v64;
  JSC::VM *FunctionRealm;
  uint64_t v66;
  unsigned int v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char **v72;
  int v73;
  JSC::JSCell *v74;
  unint64_t Structure;
  JSC::Structure *v76;
  JSC::JSCell *v77;
  uint64_t v78;
  unint64_t SubclassStructure;
  uint64_t v80;
  uint64_t v82;
  _BOOL4 v83;
  uint64_t v84;
  JSValue v86;
  WTF::StringImpl *v87;
  WTF::StringImpl *v88;
  JSValue v89;
  char hasExceptionsAfterHandlingTraps;
  void *v91;
  int v92;
  int v93;
  uint64_t v94;
  int *v95;
  int v96;
  BOOL v97;
  uint64_t v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned __int8 v102;
  uint64_t v103;
  char v104;
  char v105;
  char v106;
  uint64_t v107;
  WTF::StringImpl *v108[2];
  uint64_t v109;
  WTF *v110;
  BOOL v111;
  int v112[2];
  WTF::StringImpl *v113;
  int v114;
  uint64_t v115;
  __int16 v116;
  char v117;
  __int16 v118;
  char v119;
  __int16 v120;
  char v121;
  JSC::VM *v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  BOOL v126;
  int v127;
  uint64_t v128;

  v128 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)a1 + 7);
  v115 = v4;
  v5 = *(_QWORD *)(a2 + 24);
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(a1);
  if (v6 && *(_BYTE *)(v6 + 274))
  {
    __break(0xC471u);
    JUMPOUT(0x194954660);
  }
  v11 = v6 - 192;
  if (!v6)
    v11 = 0;
  if ((*(_DWORD *)(*(_QWORD *)(v11 + 680) + 720) & 0x20) == 0)
  {
    JSC::throwTypeError();
    return 2;
  }
  v13 = *(int *)(a2 + 32);
  if ((_DWORD)v13 == 1)
  {
    v86.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, v7);
    return JSC::VM::throwException((JSC::VM *)v4, a1, v86);
  }
  v14 = *(_QWORD *)(a2 + 48);
  v15 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v122 = v15;
  if ((v14 & 0xFFFE000000000002) != 0)
    goto LABEL_19;
  v16 = *(unsigned int *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C);
  v17 = *(_DWORD *)(16 * (*(_DWORD *)v14 & 0xFFFFFFFE) + 0x4C) != 0;
  v18 = (char **)(16 * v16);
  v20 = (_DWORD)v16 == 0;
  v19 = &WebCore::JSBaseAudioContext::s_info;
  v20 = v20 || v18 == &WebCore::JSBaseAudioContext::s_info;
  if (!v20)
  {
    do
    {
      v18 = (char **)v18[2];
      v17 = v18 != 0;
    }
    while (v18 != &WebCore::JSBaseAudioContext::s_info && v18 != 0);
  }
  if (!v17)
  {
LABEL_19:
    WebCore::throwArgumentTypeError((uint64_t)a1, (uint64_t)&v122, 0, "context", 8, "ConvolverNode", 14, v8, 0, 0, "BaseAudioContext", 17);
    return 0;
  }
  v22 = *(_QWORD *)(v14 + 24);
  v107 = v5;
  if ((unint64_t)(v13 - 3) >= 0xFFFFFFFFFFFFFFFELL
    || (v23 = *(JSC::JSCell **)(a2 + 56), *(_QWORD *)v112 = v15, ((unint64_t)v23 & 0xFFFFFFFFFFFFFFF7) == 2))
  {
    v28 = 0;
    v29 = 0;
    v30 = 0;
    LOBYTE(v31) = 0;
    v32 = 0;
    LOBYTE(v33) = 0;
    v34 = 0;
    v35 = 0;
    goto LABEL_69;
  }
  v103 = v22;
  if (((unint64_t)v23 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v23)) == 0)
  {
    JSC::throwTypeError();
    v12 = 0;
    v80 = 1;
    v127 = 1;
    goto LABEL_94;
  }
  v25 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v27 = JSC::JSObject::get(v25, a1, (unint64_t)v108[0]);
  if (v108[0])
  {
    if (*(_DWORD *)v108[0] == 2)
      WTF::StringImpl::destroy(v108[0], v26);
    else
      *(_DWORD *)v108[0] -= 2;
  }
  if (*((_DWORD *)v15 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v15))
    goto LABEL_106;
  if (v27 == 10)
  {
    v106 = 0;
    v102 = 0;
  }
  else
  {
    WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a1, v27, v108);
    if (HIDWORD(v108[0]))
    {
LABEL_106:
      v127 = 1;
LABEL_107:
      v12 = 0;
      v80 = 1;
LABEL_94:
      ((void (*)(WTF::StringImpl **, __int128 *))off_1E3250280[v80])(v108, &v123);
      return (uint64_t)v12;
    }
    v102 = v108[0];
    v99 = LODWORD(v108[0]) >> 8;
    v106 = 1;
  }
  WTF::AtomStringImpl::addLiteral();
  v36 = v108[0];
  v38 = JSC::JSObject::get(v25, a1, (unint64_t)v108[0]);
  if (v36)
  {
    if (*(_DWORD *)v36 == 2)
      WTF::StringImpl::destroy(v36, v37);
    else
      *(_DWORD *)v36 -= 2;
  }
  if (*((_DWORD *)v15 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v15))
    goto LABEL_106;
  if (v38 == 10)
  {
    v105 = 0;
    LOBYTE(v31) = 0;
  }
  else
  {
    v108[0] = *((WTF::StringImpl **)a1 + 7);
    v39 = v108[0];
    v31 = WebCore::parseEnumeration<WebCore::ChannelCountMode>(a1, v38);
    if (*((_DWORD *)v39 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v39) & 1) != 0)
      goto LABEL_106;
    if ((v31 & 0xFF00000000) == 0)
      goto LABEL_105;
    v101 = v31 >> 8;
    v105 = 1;
  }
  WTF::AtomStringImpl::addLiteral();
  v40 = v108[0];
  v42 = JSC::JSObject::get(v25, a1, (unint64_t)v108[0]);
  if (v40)
  {
    if (*(_DWORD *)v40 == 2)
      WTF::StringImpl::destroy(v40, v41);
    else
      *(_DWORD *)v40 -= 2;
  }
  if (*((_DWORD *)v15 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v15))
    goto LABEL_106;
  if (v42 == 10)
  {
    v104 = 0;
    LOBYTE(v33) = 0;
  }
  else
  {
    v108[0] = *((WTF::StringImpl **)a1 + 7);
    v43 = v108[0];
    v33 = WebCore::parseEnumeration<WebCore::ChannelInterpretation>(a1, v42);
    if (*((_DWORD *)v43 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v43) & 1) != 0)
      goto LABEL_106;
    if (!HIDWORD(v33))
      goto LABEL_105;
    v100 = v33 >> 8;
    v104 = 1;
  }
  WTF::AtomStringImpl::addLiteral();
  v44 = v108[0];
  v46 = JSC::JSObject::get(v25, a1, (unint64_t)v108[0]);
  if (v44)
  {
    if (*(_DWORD *)v44 == 2)
      WTF::StringImpl::destroy(v44, v45);
    else
      *(_DWORD *)v44 -= 2;
  }
  if (*((_DWORD *)v15 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v15))
  {
    v127 = 1;
    goto LABEL_107;
  }
  if ((v46 | 8) == 0xA)
  {
    v34 = 0;
    goto LABEL_57;
  }
  v108[0] = *((WTF::StringImpl **)a1 + 7);
  if ((v46 & 0xFFFE000000000002) != 0)
    goto LABEL_105;
  v82 = *(unsigned int *)(16 * (*(_DWORD *)v46 & 0xFFFFFFFE) + 0x4C);
  v83 = *(_DWORD *)(16 * (*(_DWORD *)v46 & 0xFFFFFFFE) + 0x4C) != 0;
  if ((_DWORD)v82)
  {
    v84 = 16 * v82;
    if ((char **)v84 != &WebCore::JSAudioBuffer::s_info)
    {
      do
      {
        v84 = *(_QWORD *)(v84 + 16);
        v83 = v84 != 0;
      }
      while ((char **)v84 != &WebCore::JSAudioBuffer::s_info && v84 != 0);
    }
  }
  if (!v83 || (v34 = *(WTF ***)(v46 + 24)) == 0)
  {
LABEL_105:
    JSC::throwTypeError();
    goto LABEL_106;
  }
  ++*(_DWORD *)v34;
LABEL_57:
  WTF::AtomStringImpl::addLiteral();
  v47 = v108[0];
  v49 = JSC::JSObject::get(v25, a1, (unint64_t)v108[0]);
  v30 = v105;
  v28 = v106;
  v10 = v100;
  v9 = v101;
  v32 = v104;
  if (v47)
  {
    if (*(_DWORD *)v47 == 2)
    {
      WTF::StringImpl::destroy(v47, v48);
      v10 = v100;
      v9 = v101;
      v32 = v104;
      v30 = v105;
      v28 = v106;
    }
    else
    {
      *(_DWORD *)v47 -= 2;
    }
  }
  if (*((_DWORD *)v15 + 20))
  {
    hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v15);
    v10 = v100;
    v9 = v101;
    v32 = v104;
    v30 = v105;
    v28 = v106;
    if ((hasExceptionsAfterHandlingTraps & 1) != 0)
      goto LABEL_151;
  }
  if (v49 != 10)
  {
    v50 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v49 >= 0xFFFE000000000000)
    {
      v35 = (_DWORD)v49 != 0;
      goto LABEL_67;
    }
    *(_QWORD *)&v51 = v49 - 0x2000000000000;
    if (v49 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      v35 = v51 > 0.0 || v51 < 0.0;
LABEL_67:
      if (*((_DWORD *)v50 + 20))
      {
        v92 = JSC::VM::hasExceptionsAfterHandlingTraps(v50);
        v10 = v100;
        v9 = v101;
        v32 = v104;
        v30 = v105;
        v28 = v106;
        if (v92)
        {
LABEL_151:
          v127 = 1;
          if (v34)
            WTF::RefCounted<WebCore::AudioBuffer>::deref(v34, v91);
          goto LABEL_107;
        }
      }
      goto LABEL_68;
    }
    if ((v49 & 0xFFFE000000000002) != 0)
    {
      v35 = v49 == 7;
      goto LABEL_67;
    }
    v93 = *(unsigned __int8 *)(v49 + 5);
    if (v93 == 3)
    {
      v96 = *(_DWORD *)(v49 + 8);
    }
    else
    {
      if (v93 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)v49 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v35 = 1;
LABEL_169:
          v30 = v105;
          v28 = v106;
          v10 = v100;
          v9 = v101;
          v32 = v104;
          goto LABEL_67;
        }
        v97 = *(_QWORD *)(16 * (*(_DWORD *)v49 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
LABEL_166:
        v35 = !v97;
        goto LABEL_169;
      }
      v94 = *(_QWORD *)(v49 + 8);
      if ((v94 & 1) != 0)
        v95 = (int *)(v49 + 16);
      else
        v95 = (int *)(v94 + 4);
      v96 = *v95;
    }
    v97 = v96 == 0;
    goto LABEL_166;
  }
  v35 = 0;
LABEL_68:
  v22 = v103;
  v29 = v102;
  LODWORD(v19) = v99;
LABEL_69:
  LODWORD(v123) = v29 | ((_DWORD)v19 << 8);
  BYTE4(v123) = v28;
  *(_WORD *)((char *)&v123 + 5) = v120;
  BYTE7(v123) = v121;
  DWORD2(v123) = v31 | (v9 << 8);
  BYTE12(v123) = v30;
  HIBYTE(v123) = v119;
  *(_WORD *)((char *)&v123 + 13) = v118;
  LODWORD(v124) = v33 | (v10 << 8);
  BYTE4(v124) = v32;
  *(_WORD *)((char *)&v124 + 5) = v116;
  HIBYTE(v124) = v117;
  v126 = v35;
  v127 = 0;
  *(_OWORD *)v108 = v123;
  v125 = 0;
  v109 = v124;
  v110 = (WTF *)v34;
  v111 = v35;
  WebCore::ConvolverNode::create((unsigned int *)(v22 - 32), (uint64_t)v108, (uint64_t)v112);
  v54 = (WTF **)v110;
  v110 = 0;
  if (v54)
    WTF::RefCounted<WebCore::AudioBuffer>::deref(v54, v52);
  if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
    goto LABEL_131;
  if (!v114)
  {
    v55 = *(JSC::VM **)(v107 + 40);
    v56 = *(WTF::StringImpl **)v112;
    *(_QWORD *)v112 = 0;
    v108[0] = v56;
    if (*(uint64_t (***)(WebCore::AudioNode *__hidden))v56 != off_1E3369F80)
    {
      __break(0xC471u);
      JUMPOUT(0x19495474CLL);
    }
    v12 = (JSCell *)WebCore::createWrapper<WebCore::ConvolverNode,WebCore::ConvolverNode>(v55, (uint64_t *)v108, v53);
    v57 = v108[0];
    v108[0] = 0;
    if (v57)
      WebCore::AudioNode::deref(v57);
    goto LABEL_76;
  }
  if (v114 == 1)
  {
    v87 = (WTF::StringImpl *)LOBYTE(v112[0]);
    LOBYTE(v108[0]) = v112[0];
    v88 = v113;
    v113 = 0;
    v108[1] = v88;
    if (!*(_QWORD *)(v4 + 16))
    {
      v89.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v112[0]), (JSC::JSGlobalObject *)&v108[1]);
      JSC::VM::throwException((JSC::VM *)v4, a1, v89);
      v88 = v108[1];
    }
    v108[1] = 0;
    if (v88)
    {
      if (*(_DWORD *)v88 == 2)
        WTF::StringImpl::destroy(v88, v87);
      else
        *(_DWORD *)v88 -= 2;
    }
    v12 = 0;
LABEL_76:
    if (*(_DWORD *)(v4 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) != 0)
      goto LABEL_131;
    v58 = *(JSC::JSCell **)(a2 + 40);
    if (((unint64_t)v58 & 0xFFFE000000000002) != 0
      || (v59 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v58)) == 0
      || (v61 = v59, v59 == *(JSC::JSGlobalObject **)(a2 + 24))
      || (v62 = (JSC::VM *)*((_QWORD *)a1 + 7),
          FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v59, v60),
          *((_DWORD *)v62 + 20))
      && (JSC::VM::hasExceptionsAfterHandlingTraps(v62) & 1) != 0)
    {
LABEL_90:
      if (!*(_DWORD *)(v4 + 80) || (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v4) & 1) == 0)
      {
LABEL_91:
        if (v114 != -1)
          ((void (*)(WTF::StringImpl **, int *))off_1E3250270[v114])(v108, v112);
        v80 = 0;
        goto LABEL_94;
      }
LABEL_131:
      v12 = 0;
      goto LABEL_91;
    }
    v66 = *((_QWORD *)FunctionRealm + 412);
    if (v66)
    {
      v67 = *(_DWORD *)(v66 - 8);
      v68 = ((unint64_t)&WebCore::JSConvolverNode::s_info + ~((_QWORD)&WebCore::JSConvolverNode::s_info << 32)) ^ (((unint64_t)&WebCore::JSConvolverNode::s_info + ~((_QWORD)&WebCore::JSConvolverNode::s_info << 32)) >> 22);
      v69 = 9 * ((v68 + ~(v68 << 13)) ^ ((v68 + ~(v68 << 13)) >> 8));
      v70 = (v69 ^ (v69 >> 15)) + ~((v69 ^ (v69 >> 15)) << 27);
      v71 = v67 & ((v70 >> 31) ^ v70);
      v72 = *(char ***)(v66 + 16 * v71);
      if (v72 == &WebCore::JSConvolverNode::s_info)
      {
LABEL_86:
        v63 = *(JSC::JSObject **)(v66 + 16 * v71 + 8);
        if (v63)
        {
LABEL_88:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v61, v63, v64);
          if (!*((_DWORD *)v62 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v62) & 1) == 0)
            JSC::JSObject::setStructure(v12, v62, SubclassStructure);
          goto LABEL_90;
        }
      }
      else
      {
        v73 = 1;
        while (v72)
        {
          v71 = ((_DWORD)v71 + v73) & v67;
          v72 = *(char ***)(v66 + 16 * v71);
          ++v73;
          if (v72 == &WebCore::JSConvolverNode::s_info)
            goto LABEL_86;
        }
      }
    }
    v74 = (JSC::JSCell *)WebCore::JSAudioNode::prototype(v62, FunctionRealm, v63);
    Structure = WebCore::JSConvolverNodePrototype::createStructure((uint64_t *)v62, (uint64_t)FunctionRealm, v74);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v77 = (JSC::JSCell *)WebCore::JSConvolverNodePrototype::create(v62, FunctionRealm, Structure, v76);
    v78 = WebCore::JSConvolverNode::createStructure((uint64_t *)v62, (uint64_t)FunctionRealm, v77);
    v63 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v78, (uint64_t)&WebCore::JSConvolverNode::s_info);
    goto LABEL_88;
  }
  v98 = std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::JSConvolverNode::analyzeHeap(v98);
}

uint64_t WebCore::JSConvolverNode::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSAudioNode::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSAudioNode::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSAudioNode::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSConvolverNodePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSConvolverNodePrototype::create(WebCore::JSConvolverNodePrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSConvolverNode::s_info, &WebCore::JSConvolverNodePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSConvolverNode>,(WebCore::DOMConstructorID)251>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2008);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSAudioNode>,(WebCore::DOMConstructorID)237>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSConvolverNode>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSConvolverNode::s_info + ~((_QWORD)&WebCore::JSConvolverNode::s_info << 32)) ^ (((unint64_t)&WebCore::JSConvolverNode::s_info + ~((_QWORD)&WebCore::JSConvolverNode::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSConvolverNode::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSConvolverNode::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSAudioNode::prototype((WebCore::JSAudioNode *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSConvolverNodePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSConvolverNodePrototype::create((WebCore::JSConvolverNodePrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSConvolverNode::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSConvolverNode::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2008) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsConvolverNodeConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSConvolverNodePrototype::s_info != (char **)(16
                                                             * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                               + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSConvolverNode>,(WebCore::DOMConstructorID)251>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsConvolverNode_buffer(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::AudioBuffer *a4)
{
  WebCore::JSDOMGlobalObject *v4;

  v4 = *(WebCore::JSDOMGlobalObject **)(*(_QWORD *)(a2 + 24) + 160);
  if (v4)
    return WebCore::toJS(a1, *(JSC::JSGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), v4, a4);
  else
    return 2;
}

BOOL WebCore::setJSConvolverNode_buffer(JSC *a1, uint64_t a2, uint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  uint64_t *v10;
  WTF *v11;
  uint64_t v12;
  _BOOL4 v13;
  char **v14;
  BOOL v15;
  void *v18;
  WTF **v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  JSValue v22;
  WTF::StringImpl *v23;
  WTF *v24;
  WTF::StringImpl *v25;
  int v26[2];
  WTF::StringImpl *v27;
  char v28;

  v4 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSConvolverNode::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSConvolverNode::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v10 = *(uint64_t **)(a2 + 24);
  if ((a3 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v11 = 0;
  }
  else
  {
    *(_QWORD *)v26 = v4;
    if ((a3 & 0xFFFE000000000002) != 0)
      goto LABEL_25;
    v12 = *(unsigned int *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C);
    v13 = *(_DWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x4C) != 0;
    v14 = (char **)(16 * v12);
    if ((_DWORD)v12)
      v15 = v14 == &WebCore::JSAudioBuffer::s_info;
    else
      v15 = 1;
    if (!v15)
    {
      do
      {
        v14 = (char **)v14[2];
        v13 = v14 != 0;
      }
      while (v14 != &WebCore::JSAudioBuffer::s_info && v14 != 0);
    }
    if (!v13 || (v11 = *(WTF **)(a3 + 24)) == 0)
    {
LABEL_25:
      WebCore::throwAttributeTypeError((int)a1, (int)v26, "ConvolverNode", 14, "buffer", 7, "AudioBuffer", 12);
      return 0;
    }
    ++*(_DWORD *)v11;
  }
  v24 = v11;
  WebCore::ConvolverNode::setBufferForBindings(v10, (uint64_t *)&v24, v26);
  v19 = (WTF **)v24;
  v24 = 0;
  if (v19)
    WTF::RefCounted<WebCore::AudioBuffer>::deref(v19, v18);
  if (v28)
  {
    v20 = (WTF::StringImpl *)LOBYTE(v26[0]);
    LOBYTE(v24) = v26[0];
    v21 = v27;
    v27 = 0;
    v25 = v21;
    if (!*((_QWORD *)v4 + 2))
    {
      v22.super.isa = (Class)WebCore::createDOMException(a1, (JSC::JSGlobalObject *)LOBYTE(v26[0]), (JSC::JSGlobalObject *)&v25);
      JSC::VM::throwException(v4, a1, v22);
      v21 = v25;
    }
    v25 = 0;
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v20);
      else
        *(_DWORD *)v21 -= 2;
    }
    if (v28)
    {
      v23 = v27;
      v27 = 0;
      if (v23)
      {
        if (*(_DWORD *)v23 == 2)
          WTF::StringImpl::destroy(v23, v20);
        else
          *(_DWORD *)v23 -= 2;
      }
    }
  }
  return 1;
}

uint64_t WebCore::jsConvolverNode_normalize(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(*(_QWORD *)(a2 + 24) + 169))
    return 7;
  else
    return 6;
}

uint64_t WebCore::setJSConvolverNode_normalize(uint64_t a1, uint64_t a2, unint64_t a3)
{
  JSC::VM *v4;
  uint64_t v5;
  BOOL v6;
  char **v7;
  BOOL v8;
  double v10;
  BOOL v11;
  uint64_t v12;
  BOOL v14;
  int v15;
  uint64_t v16;
  int *v17;
  int v18;

  v4 = *(JSC::VM **)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  v5 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
  v6 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
  v7 = (char **)(16 * v5);
  if ((_DWORD)v5)
    v8 = v7 == &WebCore::JSConvolverNode::s_info;
  else
    v8 = 1;
  if (!v8)
  {
    do
    {
      v7 = (char **)v7[2];
      v6 = v7 != 0;
    }
    while (v7 != &WebCore::JSConvolverNode::s_info && v7 != 0);
  }
  if (!v6)
    return JSC::throwDOMAttributeSetterTypeError() != 0;
  if (a3 >= 0xFFFE000000000000)
  {
    v14 = (_DWORD)a3 == 0;
    goto LABEL_37;
  }
  *(_QWORD *)&v10 = a3 - 0x2000000000000;
  if (a3 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
  {
    if ((a3 & 0xFFFE000000000002) != 0)
    {
      v11 = a3 == 7;
      goto LABEL_16;
    }
    v15 = *(unsigned __int8 *)(a3 + 5);
    if (v15 == 3)
    {
      v18 = *(_DWORD *)(a3 + 8);
    }
    else
    {
      if (v15 != 2)
      {
        if ((*(_BYTE *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0xA) & 1) == 0)
        {
          v11 = 1;
          goto LABEL_16;
        }
        v14 = *(_QWORD *)(16 * (*(_DWORD *)a3 & 0xFFFFFFFE) + 0x28) == a1;
        goto LABEL_37;
      }
      v16 = *(_QWORD *)(a3 + 8);
      if ((v16 & 1) != 0)
        v17 = (int *)(a3 + 16);
      else
        v17 = (int *)(v16 + 4);
      v18 = *v17;
    }
    v14 = v18 == 0;
LABEL_37:
    v11 = !v14;
    goto LABEL_16;
  }
  v11 = v10 > 0.0 || v10 < 0.0;
LABEL_16:
  v12 = *(_QWORD *)(a2 + 24);
  if (*((_DWORD *)v4 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v4) & 1) != 0)
    return 0;
  *(_BYTE *)(v12 + 169) = v11;
  return 1;
}

uint64_t WebCore::JSConvolverNode::subspaceForImpl(WebCore::JSConvolverNode *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  WTF *v22;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 2032);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  v20 = *(_QWORD *)(v8 + 2032);
  if (!v20)
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v22, "IsoSpace T");
    v21 = 0;
    MEMORY[0x19AEA3204](v9, &v22, (char *)this + 192, (char *)this + 1872, 32, 8, &v21);
    v11 = v21;
    v21 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v22;
    v22 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v20 = v9;
    v13 = *(_QWORD *)(v8 + 2032);
    *(_QWORD *)(v8 + 2032) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    v14 = *(unsigned int *)(v6 + 2844);
    if ((_DWORD)v14 == *(_DWORD *)(v6 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v6 + 2832, (unint64_t)&v20);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v6 + 2832) + 8 * v14) = v9;
      *(_DWORD *)(v6 + 2844) = v14 + 1;
    }
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 2032);
  *(_QWORD *)(v3 + 2032) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::createWrapper<WebCore::ConvolverNode,WebCore::ConvolverNode>(JSC::VM *a1, uint64_t *a2, WebCore::JSDOMGlobalObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  int v13;
  unint64_t v14;
  WebCore::JSAudioNode *v15;
  JSC::JSCell *v16;
  unint64_t Structure;
  JSC::Structure *v18;
  JSC::JSCell *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *a2;
  v6 = *((_QWORD *)a1 + 412);
  if (!v6)
    goto LABEL_7;
  v7 = *(_DWORD *)(v6 - 8);
  v8 = ((unint64_t)&WebCore::JSConvolverNode::s_info + ~((_QWORD)&WebCore::JSConvolverNode::s_info << 32)) ^ (((unint64_t)&WebCore::JSConvolverNode::s_info + ~((_QWORD)&WebCore::JSConvolverNode::s_info << 32)) >> 22);
  v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
  v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
  v11 = v7 & ((v10 >> 31) ^ v10);
  v12 = *(char ***)(v6 + 16 * v11);
  if (v12 != &WebCore::JSConvolverNode::s_info)
  {
    v13 = 1;
    while (v12)
    {
      v11 = ((_DWORD)v11 + v13) & v7;
      v12 = *(char ***)(v6 + 16 * v11);
      ++v13;
      if (v12 == &WebCore::JSConvolverNode::s_info)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v14 = *(_QWORD *)(v6 + 16 * v11 + 8);
  if (!v14)
  {
LABEL_7:
    v15 = (WebCore::JSAudioNode *)*((_QWORD *)a1 + 7);
    v16 = (JSC::JSCell *)WebCore::JSAudioNode::prototype(v15, a1, a3);
    Structure = WebCore::JSConvolverNodePrototype::createStructure((uint64_t *)v15, (uint64_t)a1, v16);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v19 = (JSC::JSCell *)WebCore::JSConvolverNodePrototype::create(v15, a1, Structure, v18);
    v20 = WebCore::JSConvolverNode::createStructure((uint64_t *)v15, (uint64_t)a1, v19);
    v14 = WebCore::cacheDOMStructure((JSCell *)a1, v20, (uint64_t)&WebCore::JSConvolverNode::s_info);
  }
  v21 = WebCore::JSConvolverNode::create(v14, a1, a2);
  WebCore::cacheWrapper<WebCore::AnalyserNode,WebCore::JSAnalyserNode>(*((_QWORD *)a1 + 415), v5, v21);
  return v21;
}

uint64_t WebCore::wrap<WebCore::ConvolverNode>(int a1, JSC::VM *a2, WebCore::AudioNode *this)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  WebCore::JSDOMGlobalObject *v8;
  WebCore::AudioNode *v9;
  uint64_t result;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  WebCore::AudioNode *v17;
  int v18;
  WebCore::AudioNode *v19;

  v5 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v5 + 48))
  {
    v11 = *(_QWORD *)(v5 + 32);
    if (!v11)
      goto LABEL_5;
    v12 = *(_DWORD *)(v11 - 8);
    v13 = ((unint64_t)this + ~((_QWORD)this << 32)) ^ (((unint64_t)this + ~((_QWORD)this << 32)) >> 22);
    v14 = 9 * ((v13 + ~(v13 << 13)) ^ ((v13 + ~(v13 << 13)) >> 8));
    v15 = (v14 ^ (v14 >> 15)) + ~((v14 ^ (v14 >> 15)) << 27);
    v16 = v12 & ((v15 >> 31) ^ v15);
    v17 = *(WebCore::AudioNode **)(v11 + 16 * v16);
    if (v17 != this)
    {
      v18 = 1;
      while (v17)
      {
        v16 = ((_DWORD)v16 + v18) & v12;
        v17 = *(WebCore::AudioNode **)(v11 + 16 * v16);
        ++v18;
        if (v17 == this)
          goto LABEL_14;
      }
      goto LABEL_5;
    }
LABEL_14:
    v6 = *(_QWORD *)(v11 + 16 * v16 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *((_QWORD *)this + 1);
    if (!v6)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    v7 = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return v7;
  }
LABEL_5:
  WebCore::AudioNode::ref(this);
  v19 = this;
  if (*(uint64_t (***)(WebCore::AudioNode *__hidden))this == off_1E3369F80)
  {
    v7 = WebCore::createWrapper<WebCore::ConvolverNode,WebCore::ConvolverNode>(a2, (uint64_t *)&v19, v8);
    v9 = v19;
    v19 = 0;
    if (v9)
      WebCore::AudioNode::deref(v9);
    return v7;
  }
  result = 316;
  __break(0xC471u);
  return result;
}

JSCell *WebCore::JSDOMConstructor<WebCore::JSCookieChangeEvent>::construct(JSC::JSGlobalObject *a1, uint64_t a2)
{
  JSC::VM *v2;
  JSC::Structure *v3;
  unint64_t v4;
  JSC::VM *v6;
  int v8;
  JSC::JSCell *v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  unsigned int v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t Object;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  JSC::VM *v20;
  double v21;
  BOOL v22;
  WTF::StringImpl *v23;
  WTF::StringImpl *v24;
  JSC::VM *v25;
  double v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  JSC::VM *v29;
  double v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  WTF::StringImpl *v34;
  void *v35;
  uint64_t v36;
  WTF::StringImpl *v37;
  _BOOL4 v38;
  _BOOL4 v39;
  _BOOL4 v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  WTF::StringImpl *v46;
  WebCore::JSDOMGlobalObject *v47;
  uint64_t v48;
  int v49;
  unsigned int v50;
  JSC::VM *v51;
  uint64_t v52;
  unsigned int v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char **v58;
  int v59;
  unint64_t v60;
  WebCore::JSEvent *v61;
  JSC::JSCell *v62;
  unint64_t Structure;
  JSC::Structure *v64;
  JSC::JSCell *v65;
  uint64_t v66;
  JSCell *v67;
  JSC::JSCell *v68;
  JSC::JSGlobalObject *v69;
  JSC::JSObject *v70;
  JSC::JSGlobalObject *v71;
  JSC::VM *v72;
  JSC::JSObject *v73;
  JSC::Structure *v74;
  JSC::VM *FunctionRealm;
  uint64_t v76;
  unsigned int v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  char **v82;
  int v83;
  JSC::JSCell *v84;
  unint64_t v85;
  JSC::Structure *v86;
  JSC::JSCell *v87;
  uint64_t v88;
  unint64_t SubclassStructure;
  _DWORD *v90;
  JSCell *v91;
  JSValue v93;
  BOOL v94;
  int v95;
  uint64_t v96;
  int *v97;
  int v98;
  BOOL v99;
  int v100;
  uint64_t v101;
  int *v102;
  int v103;
  BOOL v104;
  int v105;
  uint64_t v106;
  int *v107;
  int v108;
  BOOL v109;
  JSC::VM *v110;
  uint64_t v111;
  BOOL v112;
  BOOL v113;
  BOOL v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unsigned int v119;
  WTF::StringImpl *v120;
  int v121;
  unint64_t v122;
  uint64_t v123;
  int v124;
  JSC::VM *v125;
  _BYTE v126[9];

  v6 = (JSC::VM *)*((_QWORD *)a1 + 7);
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v93.super.isa = (Class)JSC::createNotEnoughArgumentsError(a1, (JSC::JSGlobalObject *)a2);
    return (JSCell *)JSC::VM::throwException(v6, a1, v93);
  }
  v111 = *(_QWORD *)(a2 + 24);
  WebCore::convert<WebCore::IDLAtomStringAdaptor<WebCore::IDLDOMString>>(a1, *(_QWORD *)(a2 + 48), (uint64_t)&v120);
  v8 = v121;
  if (v121)
  {
    v91 = 0;
    goto LABEL_95;
  }
  v110 = v6;
  if ((unint64_t)(*(int *)(a2 + 32) - 3) >= 0xFFFFFFFFFFFFFFFELL)
  {
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v4 = 0;
    v15 = 0;
    v125 = (JSC::VM *)*((_QWORD *)a1 + 7);
    v16 = 0;
    goto LABEL_59;
  }
  v9 = *(JSC::JSCell **)(a2 + 56);
  v2 = (JSC::VM *)*((_QWORD *)a1 + 7);
  v125 = v2;
  if (((unint64_t)v9 & 0xFFFFFFFFFFFFFFF7) != 2)
  {
    if (((unint64_t)v9 & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(v9)) == 0)
    {
      JSC::throwTypeError();
      goto LABEL_107;
    }
    v3 = (JSC::Structure *)Object;
    WTF::AtomStringImpl::addLiteral();
    v18 = (WTF::StringImpl *)v122;
    v4 = JSC::JSObject::get(v3, a1, v122);
    if (v18)
    {
      if (*(_DWORD *)v18 == 2)
        WTF::StringImpl::destroy(v18, v19);
      else
        *(_DWORD *)v18 -= 2;
    }
    if (*((_DWORD *)v2 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v2))
      goto LABEL_107;
    if (v4 == 10)
    {
      v109 = 0;
      goto LABEL_20;
    }
    v20 = (JSC::VM *)*((_QWORD *)a1 + 7);
    if (v4 >= 0xFFFE000000000000)
      goto LABEL_142;
    *(_QWORD *)&v21 = v4 - 0x2000000000000;
    if (v4 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      if (v21 <= 0.0)
      {
        v22 = v21 < 0.0;
        goto LABEL_19;
      }
    }
    else
    {
      if ((v4 & 0xFFFE000000000002) != 0)
      {
        v22 = v4 == 7;
        goto LABEL_19;
      }
      v95 = *(unsigned __int8 *)(v4 + 5);
      if (v95 == 3)
      {
        v98 = *(_DWORD *)(v4 + 8);
LABEL_170:
        v94 = v98 == 0;
        goto LABEL_182;
      }
      if (v95 == 2)
      {
        v96 = *(_QWORD *)(v4 + 8);
        if ((v96 & 1) != 0)
          v97 = (int *)(v4 + 16);
        else
          v97 = (int *)(v96 + 4);
        v98 = *v97;
        goto LABEL_170;
      }
      if ((*(_BYTE *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0xA) & 1) != 0)
      {
        v94 = *(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
        goto LABEL_182;
      }
    }
    v22 = 1;
    goto LABEL_19;
  }
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  v14 = 0;
  v4 = 0;
  v15 = 0;
  v16 = 0;
LABEL_59:
  v112 = v10;
  v113 = v11;
  v114 = v12;
  v115 = v4;
  v116 = __PAIR64__(v13, v14);
  v117 = v15;
  v118 = v16;
  v119 = 0;
  while (1)
  {
    v36 = v119;
    if (v119)
    {
      v67 = 0;
      goto LABEL_94;
    }
    if (!v121)
      break;
    v20 = (JSC::VM *)std::__throw_bad_variant_access[abi:sn180100]();
LABEL_142:
    v94 = (_DWORD)v4 == 0;
LABEL_182:
    v22 = !v94;
LABEL_19:
    v109 = v22;
    if (*((_DWORD *)v20 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v20))
    {
LABEL_107:
      v119 = 1;
    }
    else
    {
LABEL_20:
      WTF::AtomStringImpl::addLiteral();
      v23 = (WTF::StringImpl *)v122;
      v4 = JSC::JSObject::get(v3, a1, v122);
      if (v23)
      {
        if (*(_DWORD *)v23 == 2)
          WTF::StringImpl::destroy(v23, v24);
        else
          *(_DWORD *)v23 -= 2;
      }
      if (*((_DWORD *)v2 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v2))
        goto LABEL_107;
      if (v4 == 10)
      {
        v11 = 0;
        goto LABEL_31;
      }
      v25 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v4 >= 0xFFFE000000000000)
      {
        v99 = (_DWORD)v4 == 0;
        goto LABEL_186;
      }
      *(_QWORD *)&v26 = v4 - 0x2000000000000;
      if (v4 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        if ((v4 & 0xFFFE000000000002) != 0)
        {
          v11 = v4 == 7;
          goto LABEL_30;
        }
        v100 = *(unsigned __int8 *)(v4 + 5);
        if (v100 == 3)
        {
          v103 = *(_DWORD *)(v4 + 8);
        }
        else
        {
          if (v100 != 2)
          {
            if ((*(_BYTE *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0xA) & 1) == 0)
            {
LABEL_176:
              v11 = 1;
              goto LABEL_30;
            }
            v99 = *(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            goto LABEL_186;
          }
          v101 = *(_QWORD *)(v4 + 8);
          if ((v101 & 1) != 0)
            v102 = (int *)(v4 + 16);
          else
            v102 = (int *)(v101 + 4);
          v103 = *v102;
        }
        v99 = v103 == 0;
LABEL_186:
        v11 = !v99;
        goto LABEL_30;
      }
      if (v26 > 0.0)
        goto LABEL_176;
      v11 = v26 < 0.0;
LABEL_30:
      if (*((_DWORD *)v25 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v25))
        goto LABEL_107;
LABEL_31:
      WTF::AtomStringImpl::addLiteral();
      v27 = (WTF::StringImpl *)v122;
      v4 = JSC::JSObject::get(v3, a1, v122);
      if (v27)
      {
        if (*(_DWORD *)v27 == 2)
          WTF::StringImpl::destroy(v27, v28);
        else
          *(_DWORD *)v27 -= 2;
      }
      if (*((_DWORD *)v2 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v2))
        goto LABEL_107;
      if (v4 == 10)
      {
        v12 = 0;
        goto LABEL_42;
      }
      v29 = (JSC::VM *)*((_QWORD *)a1 + 7);
      if (v4 >= 0xFFFE000000000000)
      {
        v104 = (_DWORD)v4 == 0;
        goto LABEL_190;
      }
      *(_QWORD *)&v30 = v4 - 0x2000000000000;
      if (v4 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
      {
        if ((v4 & 0xFFFE000000000002) != 0)
        {
          v12 = v4 == 7;
          goto LABEL_41;
        }
        v105 = *(unsigned __int8 *)(v4 + 5);
        if (v105 == 3)
        {
          v108 = *(_DWORD *)(v4 + 8);
        }
        else
        {
          if (v105 != 2)
          {
            if ((*(_BYTE *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0xA) & 1) == 0)
            {
LABEL_180:
              v12 = 1;
              goto LABEL_41;
            }
            v104 = *(_QWORD *)(16 * (*(_DWORD *)v4 & 0xFFFFFFFE) + 0x28) == (_QWORD)a1;
            goto LABEL_190;
          }
          v106 = *(_QWORD *)(v4 + 8);
          if ((v106 & 1) != 0)
            v107 = (int *)(v4 + 16);
          else
            v107 = (int *)(v106 + 4);
          v108 = *v107;
        }
        v104 = v108 == 0;
LABEL_190:
        v12 = !v104;
        goto LABEL_41;
      }
      if (v30 > 0.0)
        goto LABEL_180;
      v12 = v30 < 0.0;
LABEL_41:
      if (*((_DWORD *)v29 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v29))
        goto LABEL_107;
LABEL_42:
      WTF::AtomStringImpl::addLiteral();
      v31 = (WTF::StringImpl *)v122;
      v4 = JSC::JSObject::get(v3, a1, v122);
      if (v31)
      {
        if (*(_DWORD *)v31 == 2)
          WTF::StringImpl::destroy(v31, v32);
        else
          *(_DWORD *)v31 -= 2;
      }
      if (*((_DWORD *)v2 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v2))
        goto LABEL_107;
      if (v4 == 10)
      {
        v13 = 0;
        v14 = 0;
        v4 = 0;
        goto LABEL_50;
      }
      WebCore::Detail::SequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::CookieListItem>>>::convert(a1, v4, (uint64_t)&v122);
      if (v124)
      {
        v119 = 1;
        if (v124 != -1)
          ((void (*)(_BYTE *, unint64_t *))off_1E3250390[v124])(v126, &v122);
      }
      else
      {
        v4 = v122;
        v14 = v123;
        v13 = HIDWORD(v123);
LABEL_50:
        WTF::AtomStringImpl::addLiteral();
        v33 = (WTF::StringImpl *)v122;
        v3 = (JSC::Structure *)JSC::JSObject::get(v3, a1, v122);
        if (v33)
        {
          if (*(_DWORD *)v33 == 2)
            WTF::StringImpl::destroy(v33, v34);
          else
            *(_DWORD *)v33 -= 2;
        }
        if (*((_DWORD *)v2 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v2))
        {
          v119 = 1;
        }
        else
        {
          if (v3 == (JSC::Structure *)10)
          {
            v15 = 0;
            v16 = 0;
LABEL_58:
            v10 = v109;
            goto LABEL_59;
          }
          WebCore::Detail::SequenceConverterImpl<WebCore::IDLSequence<WebCore::IDLDictionary<WebCore::CookieListItem>>>::convert(a1, (uint64_t)v3, (uint64_t)&v122);
          if (!v124)
          {
            v15 = v122;
            v16 = v123;
            goto LABEL_58;
          }
          v119 = 1;
          if (v124 != -1)
            ((void (*)(_BYTE *, unint64_t *))off_1E3250390[v124])(v126, &v122);
        }
        if (v13)
          WTF::VectorDestructor<true,WebCore::CookieListItem>::destruct((WTF::StringImpl *)v4, (WTF::StringImpl *)(v4 + 56 * v13));
        if (v4)
          WTF::fastFree((WTF *)v4, v35);
      }
    }
  }
  v37 = v120;
  v120 = 0;
  v38 = v112;
  v39 = v113;
  v40 = v114;
  v41 = v115;
  v115 = 0;
  v42 = v116;
  v116 = 0;
  v43 = v117;
  v117 = 0;
  v44 = v118;
  v118 = 0;
  v45 = bmalloc::api::isoAllocate();
  WTF::MonotonicTime::now((WTF::MonotonicTime *)v45);
  *(_QWORD *)(v45 + 8) = 0;
  if (v38)
    v49 = 1867778;
  else
    v49 = 1867776;
  v50 = v49 | (v37 != 0) | (4 * v39) | (8 * v40) | *(_DWORD *)(v45 + 20) & 0xFFC00000;
  *(_DWORD *)(v45 + 16) = 1;
  *(_DWORD *)(v45 + 20) = v50;
  if (v37)
  {
    *(_DWORD *)v37 += 2;
    v50 = *(_DWORD *)(v45 + 20);
  }
  *(_QWORD *)(v45 + 24) = v37;
  *(_QWORD *)(v45 + 32) = 0;
  *(_QWORD *)(v45 + 40) = 0;
  *(_QWORD *)(v45 + 48) = 0;
  *(_QWORD *)(v45 + 56) = v48;
  *(_DWORD *)(v45 + 20) = v50 | 0x4000;
  *(_QWORD *)v45 = off_1E3354460;
  *(_QWORD *)(v45 + 64) = 0;
  *(_QWORD *)(v45 + 72) = v41;
  *(_QWORD *)(v45 + 80) = v42;
  *(_QWORD *)(v45 + 88) = v43;
  *(_QWORD *)(v45 + 96) = v44;
  v122 = v45;
  if (v37)
  {
    if (*(_DWORD *)v37 == 2)
    {
      WTF::StringImpl::destroy(v37, v46);
      if (*(void (***)(WebCore::CookieChangeEvent *__hidden))v45 != off_1E3354460)
      {
        __break(0xC471u);
        JUMPOUT(0x1949561F8);
      }
    }
    else
    {
      *(_DWORD *)v37 -= 2;
    }
  }
  v51 = *(JSC::VM **)(v111 + 40);
  v52 = *((_QWORD *)v51 + 412);
  if (!v52)
    goto LABEL_76;
  v53 = *(_DWORD *)(v52 - 8);
  v54 = ((unint64_t)&WebCore::JSCookieChangeEvent::s_info + ~((_QWORD)&WebCore::JSCookieChangeEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCookieChangeEvent::s_info + ~((_QWORD)&WebCore::JSCookieChangeEvent::s_info << 32)) >> 22);
  v55 = 9 * ((v54 + ~(v54 << 13)) ^ ((v54 + ~(v54 << 13)) >> 8));
  v56 = (v55 ^ (v55 >> 15)) + ~((v55 ^ (v55 >> 15)) << 27);
  v57 = v53 & ((v56 >> 31) ^ v56);
  v58 = *(char ***)(v52 + 16 * v57);
  if (v58 == &WebCore::JSCookieChangeEvent::s_info)
  {
LABEL_75:
    v60 = *(_QWORD *)(v52 + 16 * v57 + 8);
    if (!v60)
      goto LABEL_76;
  }
  else
  {
    v59 = 1;
    while (v58)
    {
      v57 = ((_DWORD)v57 + v59) & v53;
      v58 = *(char ***)(v52 + 16 * v57);
      ++v59;
      if (v58 == &WebCore::JSCookieChangeEvent::s_info)
        goto LABEL_75;
    }
LABEL_76:
    v61 = (WebCore::JSEvent *)*((_QWORD *)v51 + 7);
    v62 = (JSC::JSCell *)WebCore::JSEvent::prototype(v61, *(JSC::VM **)(v111 + 40), v47);
    Structure = WebCore::JSCookieChangeEventPrototype::createStructure((uint64_t *)v61, (uint64_t)v51, v62);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v65 = (JSC::JSCell *)WebCore::JSCookieChangeEventPrototype::create(v61, v51, Structure, v64);
    v66 = WebCore::JSCookieChangeEvent::createStructure((uint64_t *)v61, (uint64_t)v51, v65);
    v60 = WebCore::cacheDOMStructure((JSCell *)v51, v66, (uint64_t)&WebCore::JSCookieChangeEvent::s_info);
  }
  v67 = (JSCell *)WebCore::JSCookieChangeEvent::create(v60, v51, (uint64_t *)&v122);
  WebCore::cacheWrapper<WebCore::AnimationPlaybackEvent,WebCore::JSAnimationPlaybackEvent>(*((_QWORD *)v51 + 415), v45, (uint64_t)v67);
  v68 = *(JSC::JSCell **)(a2 + 40);
  if (((unint64_t)v68 & 0xFFFE000000000002) == 0)
  {
    v69 = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v68);
    if (v69)
    {
      v71 = v69;
      if (v69 != *(JSC::JSGlobalObject **)(a2 + 24))
      {
        v72 = (JSC::VM *)*((_QWORD *)a1 + 7);
        FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(a1, v69, v70);
        if (!*((_DWORD *)v72 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v72) & 1) == 0)
        {
          v76 = *((_QWORD *)FunctionRealm + 412);
          if (v76)
          {
            v77 = *(_DWORD *)(v76 - 8);
            v78 = ((unint64_t)&WebCore::JSCookieChangeEvent::s_info
                 + ~((_QWORD)&WebCore::JSCookieChangeEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCookieChangeEvent::s_info
                                                                             + ~((_QWORD)&WebCore::JSCookieChangeEvent::s_info << 32)) >> 22);
            v79 = 9 * ((v78 + ~(v78 << 13)) ^ ((v78 + ~(v78 << 13)) >> 8));
            v80 = (v79 ^ (v79 >> 15)) + ~((v79 ^ (v79 >> 15)) << 27);
            v81 = v77 & ((v80 >> 31) ^ v80);
            v82 = *(char ***)(v76 + 16 * v81);
            if (v82 == &WebCore::JSCookieChangeEvent::s_info)
            {
LABEL_86:
              v73 = *(JSC::JSObject **)(v76 + 16 * v81 + 8);
              if (v73)
              {
LABEL_88:
                SubclassStructure = JSC::InternalFunction::createSubclassStructure(a1, v71, v73, v74);
                if (!*((_DWORD *)v72 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v72) & 1) == 0)
                  JSC::JSObject::setStructure(v67, v72, SubclassStructure);
                goto LABEL_90;
              }
            }
            else
            {
              v83 = 1;
              while (v82)
              {
                v81 = ((_DWORD)v81 + v83) & v77;
                v82 = *(char ***)(v76 + 16 * v81);
                ++v83;
                if (v82 == &WebCore::JSCookieChangeEvent::s_info)
                  goto LABEL_86;
              }
            }
          }
          v84 = (JSC::JSCell *)WebCore::JSEvent::prototype(v72, FunctionRealm, v73);
          v85 = WebCore::JSCookieChangeEventPrototype::createStructure((uint64_t *)v72, (uint64_t)FunctionRealm, v84);
          *(_DWORD *)(v85 + 16) |= 0x80000u;
          v87 = (JSC::JSCell *)WebCore::JSCookieChangeEventPrototype::create(v72, FunctionRealm, v85, v86);
          v88 = WebCore::JSCookieChangeEvent::createStructure((uint64_t *)v72, (uint64_t)FunctionRealm, v87);
          v73 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v88, (uint64_t)&WebCore::JSCookieChangeEvent::s_info);
          goto LABEL_88;
        }
      }
    }
  }
LABEL_90:
  if (*((_DWORD *)v110 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v110) & 1) != 0)
    v67 = 0;
  v90 = (_DWORD *)v122;
  v122 = 0;
  if (v90)
  {
    if (v90[4] == 1)
      (*(void (**)(_DWORD *))(*(_QWORD *)v90 + 8))(v90);
    else
      --v90[4];
  }
LABEL_94:
  ((void (*)(unint64_t *, BOOL *))off_1E3250308[v36])(&v122, &v112);
  v91 = v67;
  v8 = v121;
LABEL_95:
  if (v8 != -1)
    ((void (*)(BOOL *, WTF::StringImpl **))off_1E324FCB0[v8])(&v112, &v120);
  return v91;
}

uint64_t WebCore::JSCookieChangeEvent::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEvent::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEvent::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCookieChangeEvent::visitChildren(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v7;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  result = JSC::JSObject::visitChildren();
  v5 = *(_QWORD *)(a1 + 32);
  if ((v5 & 0xFFFE000000000002) != 0 || v5 == 0)
    goto LABEL_6;
  if ((v5 & 8) != 0)
  {
    if ((*(_BYTE *)(v5 - 79) & 1) != 0)
      goto LABEL_16;
  }
  else
  {
    v9 = v5 & 0xFFFFFFFFFFFFC000;
    if (*(_DWORD *)(v5 & 0xFFFFFFFFFFFFC000 | 0x20) != *(_DWORD *)(a2 + 132))
    {
      v11 = *(_QWORD *)(a1 + 32);
      v12 = v5 & 0xFFFFFFFFFFFFC000;
      result = JSC::MarkedBlock::aboutToMarkSlow((JSC::MarkedBlock *)(v5 & 0xFFFFFFFFFFFFC000));
      v5 = v11;
      v9 = v12;
    }
    if (((*(_QWORD *)(v9 + 8 * ((v5 >> 10) & 0xF) + 40) >> (v5 >> 4)) & 1) != 0)
    {
LABEL_16:
      if (!*(_QWORD *)(a2 + 168))
        goto LABEL_6;
    }
  }
  result = JSC::SlotVisitor::appendSlow();
LABEL_6:
  v7 = *(_QWORD *)(a1 + 40);
  if ((v7 & 0xFFFE000000000002) == 0 && v7 != 0)
  {
    if ((v7 & 8) != 0)
    {
      if ((*(_BYTE *)(v7 - 79) & 1) == 0)
        return JSC::SlotVisitor::appendSlow();
    }
    else
    {
      v10 = v7 & 0xFFFFFFFFFFFFC000;
      if (*(_DWORD *)(v7 & 0xFFFFFFFFFFFFC000 | 0x20) != *(_DWORD *)(a2 + 132))
      {
        result = JSC::MarkedBlock::aboutToMarkSlow((JSC::MarkedBlock *)(v7 & 0xFFFFFFFFFFFFC000));
        v10 = v7 & 0xFFFFFFFFFFFFC000;
      }
      if (((*(_QWORD *)(v10 + 8 * ((v7 >> 10) & 0xF) + 40) >> (v7 >> 4)) & 1) == 0)
        return JSC::SlotVisitor::appendSlow();
    }
    if (*(_QWORD *)(a2 + 168))
      return JSC::SlotVisitor::appendSlow();
  }
  return result;
}

uint64_t WebCore::JSCookieChangeEvent::visitChildren(WebCore::JSCookieChangeEvent *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    result = JSC::JSObject::visitChildren();
    if ((*((_QWORD *)this + 4) & 0xFFFE000000000002) == 0)
      result = (*(uint64_t (**)(JSC::JSCell *))(*(_QWORD *)a2 + 24))(a2);
    if ((*((_QWORD *)this + 5) & 0xFFFE000000000002) == 0)
      result = (*(uint64_t (**)(JSC::JSCell *))(*(_QWORD *)a2 + 24))(a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSCookieChangeEventPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCookieChangeEventPrototype::create(WebCore::JSCookieChangeEventPrototype *this, JSC::VM *a2, unint64_t a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a3 + 8);
  *(_DWORD *)SlowCase = a3 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSCookieChangeEvent::s_info, &WebCore::JSCookieChangeEventPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCookieChangeEvent>,(WebCore::DOMConstructorID)69>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  JSC::Structure *v29;
  JSC::JSCell *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  int v38;
  int v39;
  uint64_t v40;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 552);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEvent>,(WebCore::DOMConstructorID)448>(a1, a2);
  v7 = v6;
  LODWORD(v36) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v34 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v34);
    v5[2] = SlowCase + (int)v34;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v36, &WebCore::JSDOMConstructor<WebCore::JSCookieChangeEvent>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v35 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v35);
    v10[2848] = v2 + (int)v35;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v36);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v36);
  v14 = v36;
  v36 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v36);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCookieChangeEvent::s_info
         + ~((_QWORD)&WebCore::JSCookieChangeEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSCookieChangeEvent::s_info
                                                                     + ~((_QWORD)&WebCore::JSCookieChangeEvent::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCookieChangeEvent::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCookieChangeEvent::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEvent::prototype((WebCore::JSEvent *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCookieChangeEventPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v30 = (JSC::JSCell *)WebCore::JSCookieChangeEventPrototype::create((WebCore::JSCookieChangeEventPrototype *)a1, (JSC::VM *)a2, Structure, v29);
  v31 = WebCore::JSCookieChangeEvent::createStructure((uint64_t *)a1, a2, v30);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v31, (uint64_t)&WebCore::JSCookieChangeEvent::s_info);
LABEL_22:
  v32 = *(_QWORD *)(v26 + 48);
  v36 = 0;
  v37 = v2;
  v38 = -1;
  v39 = 0x1000000;
  v40 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v32, 14, (uint64_t)&v36);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 552) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCookieChangeEventConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCookieChangeEventPrototype::s_info != (char **)(16
                                                                 * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                   + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCookieChangeEvent>,(WebCore::DOMConstructorID)69>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCookieChangeEvent_changed(JSC *a1, uint64_t a2)
{
  uint64_t v2;
  JSC::VM *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a2 + 32);
  if (!v2)
  {
    v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
    v2 = WebCore::JSConverter<WebCore::IDLFrozenArray<WebCore::IDLDictionary<WebCore::CookieListItem>>>::convert<WebCore::CookieListItem,0ul>(a1, *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(a2 + 24) + 72);
    if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    {
      return 0;
    }
    else
    {
      v6 = *((_QWORD *)a1 + 7);
      *(_QWORD *)(a2 + 32) = v2;
      if ((v2 & 0xFFFE000000000002) == 0 && v2 && *(_DWORD *)(v6 + 760) >= *(unsigned __int8 *)(a2 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v6 + 192), (const JSCell *)a2);
    }
  }
  return v2;
}

uint64_t WebCore::jsCookieChangeEvent_deleted(JSC *a1, uint64_t a2)
{
  uint64_t v2;
  JSC::VM *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a2 + 40);
  if (!v2)
  {
    v5 = (JSC::VM *)*((_QWORD *)a1 + 7);
    v2 = WebCore::JSConverter<WebCore::IDLFrozenArray<WebCore::IDLDictionary<WebCore::CookieListItem>>>::convert<WebCore::CookieListItem,0ul>(a1, *(WebCore::JSDOMGlobalObject **)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(_QWORD *)(a2 + 24) + 88);
    if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    {
      return 0;
    }
    else
    {
      v6 = *((_QWORD *)a1 + 7);
      *(_QWORD *)(a2 + 40) = v2;
      if ((v2 & 0xFFFE000000000002) == 0 && v2 && *(_DWORD *)(v6 + 760) >= *(unsigned __int8 *)(a2 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v6 + 192), (const JSCell *)a2);
    }
  }
  return v2;
}

uint64_t WebCore::JSCookieChangeEvent::subspaceForImpl(WebCore::JSCookieChangeEvent *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  WTF *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  WTF *v16;
  void *v17;
  int v18;
  uint64_t v20;
  WTF *v21;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 552);
  if (v4)
    return v4;
  v6 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v6))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v6, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v6))
    goto LABEL_5;
LABEL_6:
  v8 = *(_QWORD *)(v6 + 2824);
  if (!*(_QWORD *)(v8 + 552))
  {
    v9 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v21, "IsoSpace T");
    v20 = 0;
    MEMORY[0x19AEA3204](v9, &v21, (char *)this + 192, (char *)this + 1872, 48, 8, &v20);
    v11 = v20;
    v20 = 0;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = v21;
    v21 = 0;
    if (v12)
    {
      if (*(_DWORD *)v12 == 1)
        WTF::fastFree(v12, v10);
      else
        --*(_DWORD *)v12;
    }
    v13 = *(_QWORD *)(v8 + 552);
    *(_QWORD *)(v8 + 552) = v9;
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v15 = *(_QWORD *)(v3 + 552);
  *(_QWORD *)(v3 + 552) = v4;
  if (v15)
  {
    v16 = (WTF *)MEMORY[0x19AEA3528](v15, v14);
    WTF::fastFree(v16, v17);
  }
  v18 = __ldxr((unsigned __int8 *)v6);
  if (v18 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v6))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v6);
  return v4;
}

uint64_t WebCore::convertDictionary<WebCore::CookieListItem>@<X0>(WebCore::JSDOMGlobalObject *this@<X0>, JSC::JSCell *a2@<X1>, uint64_t a3@<X8>)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::Structure *Object;
  uint64_t v8;
  uint64_t v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t result;
  WTF::StringImpl *v16;
  uint64_t v17;
  char v18;
  double v19;
  WTF::StringImpl *v20;
  WTF::StringImpl *v21;
  WTF::StringImpl *v22;
  unint64_t v23;
  JSC::VM *v24;
  WTF::StringImpl *v25;
  WTF::StringImpl *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  WTF::StringImpl *v31;
  WTF::StringImpl *v32;
  WTF::StringImpl *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int16 v38;
  WTF::StringImpl *v39;
  WTF::StringImpl *v40;
  unint64_t v41;
  WTF::StringImpl *v42;
  WTF::StringImpl *v43;
  WTF::StringImpl *v44;
  uint64_t v45;
  JSC::Structure *v46;
  WTF::StringImpl *v47;
  WTF::StringImpl *v48;
  unint64_t v49;
  BOOL v50;
  WTF::StringImpl *v51;
  WTF::StringImpl *v52;
  WTF::StringImpl *v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  double v57;
  BOOL v58;
  int v59;
  uint64_t v60;
  int *v61;
  int v62;
  WTF::StringImpl *v63;
  char v64;
  WTF::StringImpl *v65;
  int v66;
  JSC::VM *v67;
  WTF::StringImpl *v68;
  unsigned int v69;
  char v70;

  v5 = (JSC::VM *)*((_QWORD *)this + 7);
  v67 = v5;
  v6 = (unint64_t)a2 & 0xFFFFFFFFFFFFFFF7;
  if (((unint64_t)a2 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    Object = 0;
  }
  else if (((unint64_t)a2 & 0xFFFE000000000002) != 0
         || (Object = (JSC::Structure *)JSC::JSCell::getObject(a2)) == 0)
  {
    result = JSC::throwTypeError();
    goto LABEL_105;
  }
  v8 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 136))(v8);
  v10 = 0;
  if (v6 == 2 || (*(_QWORD *)(v9 + 432) & 0x2000000000000000) == 0)
    goto LABEL_17;
  WTF::AtomStringImpl::addLiteral();
  v12 = JSC::JSObject::get(Object, this, (unint64_t)v68);
  if (v68)
  {
    if (*(_DWORD *)v68 == 2)
      WTF::StringImpl::destroy(v68, v11);
    else
      *(_DWORD *)v68 -= 2;
  }
  if (*((_DWORD *)v5 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    if ((_DWORD)result)
      goto LABEL_105;
  }
  if (v12 == 10)
  {
    v10 = 0;
    goto LABEL_17;
  }
  if ((v12 & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v10 = 0;
    v66 = 0;
LABEL_15:
    v13 = 0;
    v65 = 0;
    v14 = 1;
    goto LABEL_16;
  }
  result = WebCore::valueToUSVString(this, v12, (uint64_t)&v68);
  LOBYTE(v65) = 0;
  v66 = -1;
  v13 = v69;
  if (v69 == -1)
  {
LABEL_105:
    *(_DWORD *)(a3 + 56) = 1;
    return result;
  }
  result = ((uint64_t (*)(char *, WTF::StringImpl **, WTF::StringImpl **))off_1E3250AA8[v69])(&v70, &v65, &v68);
  v66 = v13;
  if (v69 != -1)
  {
    result = ((uint64_t (*)(char *, WTF::StringImpl **))off_1E324FDC0[v69])(&v70, &v68);
    v13 = v66;
  }
  if (!v13)
  {
    v10 = v65;
    goto LABEL_15;
  }
  *(_DWORD *)(a3 + 56) = 1;
  if (v13 == -1)
    return result;
  v10 = 0;
  v14 = 0;
LABEL_16:
  result = ((uint64_t (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E324FDC0[v13])(&v68, &v65);
  if (!v14)
    goto LABEL_121;
LABEL_17:
  v17 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v17 + 136))(v17) + 432) & 0x2000000000000000) == 0)
  {
    v18 = 0;
    v19 = 0.0;
    if (v6 == 2)
      goto LABEL_40;
    goto LABEL_35;
  }
  if (v6 != 2)
  {
    WTF::AtomStringImpl::addLiteral();
    v21 = v68;
    v23 = JSC::JSObject::get(Object, this, (unint64_t)v68);
    if (v21)
    {
      if (*(_DWORD *)v21 == 2)
        WTF::StringImpl::destroy(v21, v22);
      else
        *(_DWORD *)v21 -= 2;
    }
    if (*((_DWORD *)v5 + 20))
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
      if ((_DWORD)result)
        goto LABEL_149;
    }
    if (v23 == 10 || (v23 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v18 = 0;
      v19 = 0.0;
LABEL_35:
      WTF::AtomStringImpl::addLiteral();
      v25 = v68;
      v27 = JSC::JSObject::get(Object, this, (unint64_t)v68);
      if (v25)
      {
        if (*(_DWORD *)v25 == 2)
          WTF::StringImpl::destroy(v25, v26);
        else
          *(_DWORD *)v25 -= 2;
      }
      if (*((_DWORD *)v5 + 20))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
        if ((_DWORD)result)
          goto LABEL_149;
      }
      if (v27 == 10)
      {
LABEL_40:
        v20 = 0;
        goto LABEL_43;
      }
      result = WebCore::valueToUSVString(this, v27, (uint64_t)&v68);
      v28 = v69;
      if (!v69)
      {
        v20 = v68;
        v68 = 0;
        _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJS9_SB_EEEEEEDcSF_DpT0_((uint64_t)&v65, (WTF::StringImpl *)&v68);
        goto LABEL_43;
      }
      *(_DWORD *)(a3 + 56) = 1;
      if ((_DWORD)v28 != -1)
        result = ((uint64_t (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E324FDC0[v28])(&v65, &v68);
LABEL_121:
      v20 = 0;
      goto LABEL_122;
    }
    v68 = (WTF::StringImpl *)v23;
    v24 = (JSC::VM *)*((_QWORD *)this + 7);
    v65 = v24;
    if (v23 >= 0xFFFE000000000000)
    {
      v19 = (double)(int)v23;
    }
    else if (v23 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v68, this);
      v19 = v57;
    }
    else
    {
      *(_QWORD *)&v19 = v23 - 0x2000000000000;
    }
    if (!*((_DWORD *)v24 + 20) || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v24), (result & 1) == 0))
    {
      if ((*(_QWORD *)&v19 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
      {
        v18 = 1;
        goto LABEL_35;
      }
      result = JSC::throwTypeError();
    }
LABEL_149:
    v20 = 0;
LABEL_150:
    *(_DWORD *)(a3 + 56) = 1;
    goto LABEL_122;
  }
  v18 = 0;
  v20 = 0;
  v19 = 0.0;
LABEL_43:
  v29 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
  v30 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v29 + 136))(v29);
  v31 = 0;
  v64 = v18;
  if (v6 == 2 || (*(_QWORD *)(v30 + 432) & 0x2000000000000000) == 0)
  {
LABEL_53:
    v36 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    v37 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v36 + 136))(v36);
    LOBYTE(v38) = 0;
    if (v6 != 2 && (*(_QWORD *)(v37 + 432) & 0x2000000000000000) != 0)
    {
      WTF::AtomStringImpl::addLiteral();
      v39 = v68;
      v41 = JSC::JSObject::get(Object, this, (unint64_t)v68);
      if (v39)
      {
        if (*(_DWORD *)v39 == 2)
          WTF::StringImpl::destroy(v39, v40);
        else
          *(_DWORD *)v39 -= 2;
      }
      if (*((_DWORD *)v5 + 20))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
        if ((_DWORD)result)
          goto LABEL_138;
      }
      if (v41 == 10)
      {
        LOBYTE(v38) = 0;
        goto LABEL_63;
      }
      v68 = (WTF::StringImpl *)*((_QWORD *)this + 7);
      v42 = v68;
      v38 = WebCore::parseEnumeration<WebCore::CookieSameSite>(this, v41);
      if (*((_DWORD *)v42 + 20))
      {
        result = JSC::VM::hasExceptionsAfterHandlingTraps(v42);
        if ((result & 1) != 0)
        {
LABEL_138:
          *(_DWORD *)(a3 + 56) = 1;
          goto LABEL_142;
        }
      }
      if (v38 <= 0xFFu)
      {
        result = JSC::throwTypeError();
        goto LABEL_138;
      }
    }
LABEL_63:
    v63 = v31;
    v43 = v20;
    v44 = v10;
    v45 = WebCore::JSDOMGlobalObject::scriptExecutionContext(this);
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v45 + 136))(v45);
    if ((*(_QWORD *)(result + 432) & 0x2000000000000000) == 0)
    {
      v46 = Object;
LABEL_71:
      v50 = 0;
LABEL_72:
      if (v6 == 2)
      {
        v51 = 0;
        v10 = v44;
LABEL_80:
        v20 = v43;
LABEL_83:
        *(_QWORD *)a3 = v20;
        *(_QWORD *)(a3 + 8) = v51;
        *(_QWORD *)(a3 + 16) = v10;
        *(_QWORD *)(a3 + 24) = v63;
        *(double *)(a3 + 32) = v19;
        *(_BYTE *)(a3 + 40) = v64;
        *(_DWORD *)(a3 + 41) = (_DWORD)v68;
        *(_DWORD *)(a3 + 44) = *(_DWORD *)((char *)&v68 + 3);
        *(_BYTE *)(a3 + 48) = v50;
        *(_BYTE *)(a3 + 49) = v38;
        *(_DWORD *)(a3 + 56) = 0;
        return result;
      }
      WTF::AtomStringImpl::addLiteral();
      v52 = v68;
      result = JSC::JSObject::get(v46, this, (unint64_t)v68);
      v54 = result;
      if (v52)
      {
        if (*(_DWORD *)v52 == 2)
          result = WTF::StringImpl::destroy(v52, v53);
        else
          *(_DWORD *)v52 -= 2;
      }
      if (!*((_DWORD *)v5 + 20) || (result = JSC::VM::hasExceptionsAfterHandlingTraps(v5), !(_DWORD)result))
      {
        v10 = v44;
        if (v54 == 10)
        {
          v51 = 0;
          goto LABEL_80;
        }
        result = WebCore::valueToUSVString(this, v54, (uint64_t)&v68);
        v55 = v69;
        v20 = v43;
        if (!v69)
        {
          v51 = v68;
          v68 = 0;
          result = (uint64_t)_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJS9_SB_EEEEEEDcSF_DpT0_((uint64_t)&v65, (WTF::StringImpl *)&v68);
          goto LABEL_83;
        }
        *(_DWORD *)(a3 + 56) = 1;
        if ((_DWORD)v55 != -1)
          result = ((uint64_t (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E324FDC0[v55])(&v65, &v68);
LABEL_141:
        v31 = v63;
LABEL_142:
        if (v31)
        {
          if (*(_DWORD *)v31 == 2)
            result = WTF::StringImpl::destroy(v31, v16);
          else
            *(_DWORD *)v31 -= 2;
        }
        goto LABEL_122;
      }
LABEL_136:
      *(_DWORD *)(a3 + 56) = 1;
      v10 = v44;
      v20 = v43;
      goto LABEL_141;
    }
    v46 = Object;
    if (v6 == 2)
      goto LABEL_71;
    WTF::AtomStringImpl::addLiteral();
    v47 = v68;
    result = JSC::JSObject::get(v46, this, (unint64_t)v68);
    v49 = result;
    if (v47)
    {
      if (*(_DWORD *)v47 == 2)
        result = WTF::StringImpl::destroy(v47, v48);
      else
        *(_DWORD *)v47 -= 2;
    }
    if (*((_DWORD *)v5 + 20))
    {
      result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
      if ((_DWORD)result)
        goto LABEL_136;
    }
    if (v49 == 10)
      goto LABEL_71;
    result = *((_QWORD *)this + 7);
    if (v49 >= 0xFFFE000000000000)
    {
      v58 = (_DWORD)v49 == 0;
      goto LABEL_163;
    }
    *(_QWORD *)&v56 = v49 - 0x2000000000000;
    if (v49 - 0x2000000000000 <= 0xFFFBFFFFFFFFFFFFLL)
    {
      if (v56 <= 0.0)
      {
        v50 = v56 < 0.0;
        goto LABEL_89;
      }
    }
    else
    {
      if ((v49 & 0xFFFE000000000002) != 0)
      {
        v50 = v49 == 7;
        goto LABEL_89;
      }
      v59 = *(unsigned __int8 *)(v49 + 5);
      if (v59 == 3)
      {
        v62 = *(_DWORD *)(v49 + 8);
LABEL_162:
        v58 = v62 == 0;
        goto LABEL_163;
      }
      if (v59 == 2)
      {
        v60 = *(_QWORD *)(v49 + 8);
        if ((v60 & 1) != 0)
          v61 = (int *)(v49 + 16);
        else
          v61 = (int *)(v60 + 4);
        v62 = *v61;
        goto LABEL_162;
      }
      if ((*(_BYTE *)(16 * (*(_DWORD *)v49 & 0xFFFFFFFE) + 0xA) & 1) != 0)
      {
        v58 = *(_QWORD *)(16 * (*(_DWORD *)v49 & 0xFFFFFFFE) + 0x28) == (_QWORD)this;
LABEL_163:
        v50 = !v58;
LABEL_89:
        if (*(_DWORD *)(result + 80))
        {
          result = JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)result);
          if ((_DWORD)result)
            goto LABEL_136;
        }
        goto LABEL_72;
      }
    }
    v50 = 1;
    goto LABEL_89;
  }
  WTF::AtomStringImpl::addLiteral();
  v32 = v68;
  v34 = JSC::JSObject::get(Object, this, (unint64_t)v68);
  if (v32)
  {
    if (*(_DWORD *)v32 == 2)
      WTF::StringImpl::destroy(v32, v33);
    else
      *(_DWORD *)v32 -= 2;
  }
  if (*((_DWORD *)v5 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v5);
    if ((_DWORD)result)
      goto LABEL_150;
  }
  if (v34 == 10)
  {
    v31 = 0;
    goto LABEL_53;
  }
  result = WebCore::valueToUSVString(this, v34, (uint64_t)&v68);
  v35 = v69;
  if (!v69)
  {
    v31 = v68;
    v68 = 0;
    _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJS9_SB_EEEEEEDcSF_DpT0_((uint64_t)&v65, (WTF::StringImpl *)&v68);
    goto LABEL_53;
  }
  *(_DWORD *)(a3 + 56) = 1;
  if ((_DWORD)v35 != -1)
    result = ((uint64_t (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E324FDC0[v35])(&v65, &v68);
LABEL_122:
  if (v10)
  {
    if (*(_DWORD *)v10 == 2)
    {
      result = WTF::StringImpl::destroy(v10, v16);
      if (!v20)
        return result;
      goto LABEL_126;
    }
    *(_DWORD *)v10 -= 2;
  }
  if (!v20)
    return result;
LABEL_126:
  if (*(_DWORD *)v20 == 2)
    return WTF::StringImpl::destroy(v20, v16);
  *(_DWORD *)v20 -= 2;
  return result;
}

unint64_t WebCore::convertDictionaryToJS(uint64_t a1, WebCore::JSDOMGlobalObject *a2, double *a3)
{
  uint64_t v6;
  unint64_t v7;
  size_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  unint64_t v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  double v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  WTF::StringImpl *v28;
  WTF::StringImpl *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  WTF::StringImpl *v35;
  WTF::StringImpl *v36;
  uint64_t v37;
  WTF::StringImpl *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  WTF::StringImpl *v46;
  WTF::StringImpl *v47;
  uint64_t v48;
  uint64_t v49;
  WTF::StringImpl *v50;
  WTF::StringImpl *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  WTF::StringImpl *v56;
  WTF::StringImpl *v57;
  unsigned __int8 *v59;
  unsigned int v60;
  unsigned __int8 *v61;
  unsigned int v62;
  unsigned __int8 *v63;
  unsigned int v64;
  unsigned __int8 *v65;
  unsigned int v66;
  unsigned __int8 *v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  WTF::StringImpl *v74;
  unint64_t v75;
  int v76;
  int v77;
  uint64_t v78;

  v6 = *(_QWORD *)(a1 + 56);
  v7 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v8 = 8 * *(unsigned __int8 *)(v7 + 14);
  v9 = JSC::allocateCell<JSC::JSFinalObject>(v6, v8 + 16);
  v10 = *(_DWORD *)(v7 + 8);
  *(_DWORD *)v9 = v7 >> 4;
  *(_DWORD *)(v9 + 4) = v10;
  *(_QWORD *)(v9 + 8) = 0;
  bzero((void *)(v9 + 16), v8);
  if (*(_BYTE *)(v6 + 755))
    __dmb(0xAu);
  v11 = WebCore::JSDOMGlobalObject::scriptExecutionContext(a2);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 136))(v11) + 432) & 0x2000000000000000) == 0)
    goto LABEL_14;
  v12 = *((_QWORD *)a3 + 2);
  if (!v12)
    goto LABEL_14;
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(_DWORD *)(v12 + 4);
  if (v14)
  {
    if (v14 != 1)
    {
LABEL_7:
      v15 = *(_QWORD *)(v13 + 64760);
      if (!v15 || v12 != *(_QWORD *)(v15 + 8))
        v15 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_10;
    }
    v65 = *(unsigned __int8 **)(v12 + 8);
    if ((*(_BYTE *)(v12 + 16) & 4) != 0)
    {
      v66 = *v65;
    }
    else
    {
      v72 = *(unsigned __int16 *)v65;
      if (v72 > 0xFF)
        goto LABEL_7;
      v66 = v72;
    }
    v15 = *(_QWORD *)(v13 + 8 * v66 + 42216);
  }
  else
  {
    v15 = *(_QWORD *)(v13 + 41968);
  }
LABEL_10:
  if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v16 = v74;
  v74 = 0;
  v75 = v9;
  v76 = -1;
  v77 = 0x1000000;
  v78 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v16, v15, 0, (uint64_t)&v74);
  if (v16)
  {
    if (*(_DWORD *)v16 == 2)
      WTF::StringImpl::destroy(v16, v17);
    else
      *(_DWORD *)v16 -= 2;
  }
LABEL_14:
  v18 = WebCore::JSDOMGlobalObject::scriptExecutionContext(a2);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v18 + 136))(v18) + 432) & 0x2000000000000000) != 0
    && *((_BYTE *)a3 + 40))
  {
    v19 = a3[4];
    if ((*(_QWORD *)&v19 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (v20 = (int)v19, v19 == (double)(int)v20)
      && ((_DWORD)v20 || (*(_QWORD *)&v19 & 0x8000000000000000) == 0))
    {
      v21 = v20 | 0xFFFE000000000000;
    }
    else
    {
      v21 = *(_QWORD *)&v19 + 0x2000000000000;
    }
    if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v22 = v74;
    v74 = 0;
    v75 = v9;
    v76 = -1;
    v77 = 0x1000000;
    v78 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v22, v21, 0, (uint64_t)&v74);
    if (v22)
    {
      if (*(_DWORD *)v22 == 2)
        WTF::StringImpl::destroy(v22, v23);
      else
        *(_DWORD *)v22 -= 2;
    }
  }
  v24 = *a3;
  if (!*(_QWORD *)a3)
    goto LABEL_36;
  v25 = *(_QWORD *)(a1 + 56);
  v26 = *(_DWORD *)(*(_QWORD *)&v24 + 4);
  if (v26)
  {
    if (v26 != 1)
    {
LABEL_29:
      v27 = *(_QWORD *)(v25 + 64760);
      if (!v27 || *(_QWORD *)&v24 != *(_QWORD *)(v27 + 8))
        v27 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_32;
    }
    v59 = *(unsigned __int8 **)(*(_QWORD *)&v24 + 8);
    if ((*(_BYTE *)(*(_QWORD *)&v24 + 16) & 4) != 0)
    {
      v60 = *v59;
    }
    else
    {
      v69 = *(unsigned __int16 *)v59;
      if (v69 > 0xFF)
        goto LABEL_29;
      v60 = v69;
    }
    v27 = *(_QWORD *)(v25 + 8 * v60 + 42216);
  }
  else
  {
    v27 = *(_QWORD *)(v25 + 41968);
  }
LABEL_32:
  if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v28 = v74;
  v74 = 0;
  v75 = v9;
  v76 = -1;
  v77 = 0x1000000;
  v78 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v28, v27, 0, (uint64_t)&v74);
  if (v28)
  {
    if (*(_DWORD *)v28 == 2)
      WTF::StringImpl::destroy(v28, v29);
    else
      *(_DWORD *)v28 -= 2;
  }
LABEL_36:
  v30 = WebCore::JSDOMGlobalObject::scriptExecutionContext(a2);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v30 + 136))(v30) + 432) & 0x2000000000000000) == 0)
    goto LABEL_47;
  v31 = *((_QWORD *)a3 + 3);
  if (!v31)
    goto LABEL_47;
  v32 = *(_QWORD *)(a1 + 56);
  v33 = *(_DWORD *)(v31 + 4);
  if (v33)
  {
    if (v33 != 1)
    {
LABEL_40:
      v34 = *(_QWORD *)(v32 + 64760);
      if (!v34 || v31 != *(_QWORD *)(v34 + 8))
        v34 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_43;
    }
    v67 = *(unsigned __int8 **)(v31 + 8);
    if ((*(_BYTE *)(v31 + 16) & 4) != 0)
    {
      v68 = *v67;
    }
    else
    {
      v73 = *(unsigned __int16 *)v67;
      if (v73 > 0xFF)
        goto LABEL_40;
      v68 = v73;
    }
    v34 = *(_QWORD *)(v32 + 8 * v68 + 42216);
  }
  else
  {
    v34 = *(_QWORD *)(v32 + 41968);
  }
LABEL_43:
  if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v35 = v74;
  v74 = 0;
  v75 = v9;
  v76 = -1;
  v77 = 0x1000000;
  v78 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v35, v34, 0, (uint64_t)&v74);
  if (v35)
  {
    if (*(_DWORD *)v35 == 2)
      WTF::StringImpl::destroy(v35, v36);
    else
      *(_DWORD *)v35 -= 2;
  }
LABEL_47:
  v37 = WebCore::JSDOMGlobalObject::scriptExecutionContext(a2);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v37 + 136))(v37) + 432) & 0x2000000000000000) == 0)
    goto LABEL_62;
  v39 = *((unsigned __int8 *)a3 + 49);
  v40 = *(_QWORD *)(a1 + 56);
  v41 = (uint64_t *)(v40 + 41968);
  if ((byte_1EE334F59 & 1) == 0)
  {
    dword_1ECE772D0 += 2;
    unk_1EE335018 = &dword_1ECE772D0;
    dword_1ECE772F0 += 2;
    unk_1EE335020 = &dword_1ECE772F0;
    dword_1ECE77310 += 2;
    unk_1EE335028 = &dword_1ECE77310;
    byte_1EE334F59 = 1;
  }
  v42 = *(_QWORD *)&_MergedGlobals_443[8 * v39 + 192];
  if (v42)
  {
    v43 = *(_DWORD *)v42;
    v44 = *(_DWORD *)(v42 + 4);
    *(_DWORD *)v42 += 2;
    if (v44)
    {
      if (v44 != 1)
      {
LABEL_53:
        v45 = *(_QWORD *)(v40 + 64760);
        if (!v45 || v42 != *(_QWORD *)(v45 + 8))
        {
          v45 = JSC::jsStringWithCacheSlowCase();
          v43 = *(_DWORD *)v42 - 2;
        }
        goto LABEL_56;
      }
      v63 = *(unsigned __int8 **)(v42 + 8);
      if ((*(_BYTE *)(v42 + 16) & 4) != 0)
      {
        v64 = *v63;
      }
      else
      {
        v71 = *(unsigned __int16 *)v63;
        if (v71 > 0xFF)
          goto LABEL_53;
        v64 = v71;
      }
      v45 = *(_QWORD *)(v40 + 8 * v64 + 42216);
    }
    else
    {
      v45 = *v41;
    }
LABEL_56:
    if (v43)
      *(_DWORD *)v42 = v43;
    else
      WTF::StringImpl::destroy((WTF::StringImpl *)v42, v38);
    goto LABEL_58;
  }
  v45 = *v41;
LABEL_58:
  if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v46 = v74;
  v74 = 0;
  v75 = v9;
  v76 = -1;
  v77 = 0x1000000;
  v78 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v46, v45, 0, (uint64_t)&v74);
  if (v46)
  {
    if (*(_DWORD *)v46 == 2)
      WTF::StringImpl::destroy(v46, v47);
    else
      *(_DWORD *)v46 -= 2;
  }
LABEL_62:
  v48 = WebCore::JSDOMGlobalObject::scriptExecutionContext(a2);
  if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v48 + 136))(v48) + 432) & 0x2000000000000000) != 0)
  {
    if (*((_BYTE *)a3 + 48))
      v49 = 7;
    else
      v49 = 6;
    if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v50 = v74;
    v74 = 0;
    v75 = v9;
    v76 = -1;
    v77 = 0x1000000;
    v78 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v50, v49, 0, (uint64_t)&v74);
    if (v50)
    {
      if (*(_DWORD *)v50 == 2)
        WTF::StringImpl::destroy(v50, v51);
      else
        *(_DWORD *)v50 -= 2;
    }
  }
  v52 = *((_QWORD *)a3 + 1);
  if (!v52)
    return v9;
  v53 = *(_QWORD *)(a1 + 56);
  v54 = *(_DWORD *)(v52 + 4);
  if (v54)
  {
    if (v54 != 1)
    {
LABEL_73:
      v55 = *(_QWORD *)(v53 + 64760);
      if (!v55 || v52 != *(_QWORD *)(v55 + 8))
        v55 = JSC::jsStringWithCacheSlowCase();
      goto LABEL_76;
    }
    v61 = *(unsigned __int8 **)(v52 + 8);
    if ((*(_BYTE *)(v52 + 16) & 4) != 0)
    {
      v62 = *v61;
    }
    else
    {
      v70 = *(unsigned __int16 *)v61;
      if (v70 > 0xFF)
        goto LABEL_73;
      v62 = v70;
    }
    v55 = *(_QWORD *)(v53 + 8 * v62 + 42216);
  }
  else
  {
    v55 = *(_QWORD *)(v53 + 41968);
  }
LABEL_76:
  if (*(_DWORD *)(v6 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v6) & 1) != 0)
    return 0;
  WTF::AtomStringImpl::addLiteral();
  v56 = v74;
  v74 = 0;
  v75 = v9;
  v76 = -1;
  v77 = 0x1000000;
  v78 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v9, (JSC::VM *)v6, (unint64_t)v56, v55, 0, (uint64_t)&v74);
  if (v56)
  {
    if (*(_DWORD *)v56 == 2)
      WTF::StringImpl::destroy(v56, v57);
    else
      *(_DWORD *)v56 -= 2;
  }
  return v9;
}

uint64_t WebCore::parseEnumeration<WebCore::CookieSameSite>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  int v5;
  const char *v6;
  int v7;
  int v9;
  int v10;
  char **v13;
  int v15;
  int v16;
  uint64_t v20;
  unint64_t v21;

  v3 = a1;
  v21 = this;
  if ((this & 0xFFFE000000000002) == 0 && *(_BYTE *)(this + 5) == 2)
  {
    v4 = *(_QWORD *)(this + 8);
    if ((v4 & 1) != 0)
    {
      v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
      if (!v4)
      {
LABEL_6:
        if (v4)
          goto LABEL_7;
LABEL_33:
        v10 = 0;
        v9 = 0;
        return v10 | (v9 << 8);
      }
    }
    else if (!v4)
    {
      goto LABEL_6;
    }
    *(_DWORD *)v4 += 2;
    goto LABEL_6;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v21, a1);
  v4 = v20;
  if (!v20)
    goto LABEL_33;
LABEL_7:
  v5 = *(_DWORD *)(v4 + 16);
  v6 = *(const char **)(v4 + 8);
  v7 = *(_DWORD *)(v4 + 4);
  if (v6 != "lax" && v7 == 3)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 108 || *(_WORD *)(v6 + 1) != 30817)
        goto LABEL_15;
    }
    else if (*(_WORD *)v6 != 108 || *(_DWORD *)(v6 + 2) != 7864417)
    {
      goto LABEL_15;
    }
    goto LABEL_36;
  }
  if (v6 == "lax" && v7 == 3)
  {
LABEL_36:
    v13 = &WebCore::parseEnumerationFromString<WebCore::CookieSameSite>(WTF::String const&)::mappings;
    goto LABEL_37;
  }
  if (v6 != "none" && v7 == 4)
  {
    if ((v5 & 4) != 0)
    {
      if (*v6 != 110 || *(_WORD *)(v6 + 1) != 28271 || *((_WORD *)v6 + 1) != 25966)
        goto LABEL_15;
    }
    else
    {
      if (*(_WORD *)v6 != 110)
        goto LABEL_15;
      v15 = *(_DWORD *)(v6 + 2);
      v16 = *((_DWORD *)v6 + 1);
      if (v15 != 7209071 || v16 != 6619246)
        goto LABEL_15;
    }
  }
  else if (v6 != "none" || v7 != 4)
  {
    if (v6 == "strict" || v7 != 6)
    {
      if (v7 == 6 && v6 == "strict")
        goto LABEL_57;
    }
    else if ((v5 & 4) != 0)
    {
      if (*v6 == 115 && *(_DWORD *)(v6 + 1) == 1667854964 && *(_DWORD *)(v6 + 2) == 1952672114)
      {
LABEL_57:
        v13 = &off_1E324DA80;
        goto LABEL_37;
      }
    }
    else if (*(_WORD *)v6 == 115
           && *(_QWORD *)(v6 + 4) == 0x74006300690072
           && *(_QWORD *)(v6 + 2) == 0x63006900720074)
    {
      goto LABEL_57;
    }
LABEL_15:
    v9 = 0;
    v10 = 0;
    goto LABEL_38;
  }
  v13 = &off_1E324DA68;
LABEL_37:
  v10 = *((unsigned __int8 *)v13 + 16);
  v9 = 1;
LABEL_38:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v10 | (v9 << 8);
}

uint64_t WebCore::JSCookieStore::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSEventTarget::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSEventTarget::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCookieStorePrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCookieStorePrototype::create(WebCore::JSCookieStorePrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  uint64_t v9;
  BOOL v10;
  char **v11;
  BOOL v12;
  WTF::StringImpl *v14;
  int v15;
  WTF::StringImpl *v16;
  unint64_t v17;
  WTF::StringImpl *v18;
  uint64_t v19;
  WTF::StringImpl *v20;
  JSC::Structure *v21;
  int v22;
  unint64_t v24;
  WTF::StringImpl *v25[6];
  int v26;
  int v27;
  JSC::Structure *v28;
  int v29;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v24 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v24);
    *((_QWORD *)this + 4865) = SlowCase + (int)v24;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<6u>(this, (uint64_t)&WebCore::JSCookieStore::s_info, &WebCore::JSCookieStorePrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(unsigned int *)(16 * (**(_DWORD **)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x28) & 0xFFFFFFFE) + 0x4C);
  v10 = *(_DWORD *)(16 * (**(_DWORD **)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x28) & 0xFFFFFFFE) + 0x4C) != 0;
  v11 = (char **)(16 * v9);
  if ((_DWORD)v9)
    v12 = v11 == &WebCore::JSDOMWindowBase::s_info;
  else
    v12 = 1;
  if (!v12)
  {
    do
    {
      v11 = (char **)v11[2];
      v10 = v11 != 0;
    }
    while (v11 != &WebCore::JSDOMWindowBase::s_info && v11 != 0);
  }
  if (!v10)
  {
    WTF::AtomStringImpl::addLiteral();
    v14 = v25[0];
    v15 = *((_DWORD *)this + 23281);
    *((_DWORD *)this + 23281) = 1;
    LODWORD(v25[0]) = -1;
    WORD2(v25[0]) = 1;
    JSC::JSObject::deleteProperty();
    *((_DWORD *)this + 23281) = v15;
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        WTF::StringImpl::destroy(v14, v16);
      else
        *(_DWORD *)v14 -= 2;
    }
    if ((*(_BYTE *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE) + 0x10) & 3) != 0)
      JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE)), this, (JSC::JSObject *)SlowCase);
  }
  v17 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v19 = JSC::JSString::create((uint64_t)this, v25);
  v20 = v25[0];
  v25[0] = 0;
  if (v20)
  {
    if (*(_DWORD *)v20 == 2)
      WTF::StringImpl::destroy(v20, v18);
    else
      *(_DWORD *)v20 -= 2;
  }
  v21 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v29 = *(_DWORD *)SlowCase;
  v28 = v21;
  v22 = JSC::Structure::outOfLineCapacity(v21);
  v26 = 0;
  v27 = v22;
  v25[0] = (WTF::StringImpl *)&v27;
  v25[1] = (WTF::StringImpl *)SlowCase;
  v25[2] = this;
  v25[3] = (WTF::StringImpl *)&v29;
  v25[4] = (WTF::StringImpl *)&v28;
  v25[5] = (WTF::StringImpl *)&v26;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v21, this, v17, 6, (uint64_t)v25);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v26, v19);
  *((_DWORD *)v21 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCookieStore>,(WebCore::DOMConstructorID)70>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 560);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSEventTarget>,(WebCore::DOMConstructorID)450>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCookieStore>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000000, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCookieStore::s_info + ~((_QWORD)&WebCore::JSCookieStore::s_info << 32)) ^ (((unint64_t)&WebCore::JSCookieStore::s_info + ~((_QWORD)&WebCore::JSCookieStore::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCookieStore::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCookieStore::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSEventTarget::prototype((WebCore::JSEventTarget *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCookieStorePrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSCookieStorePrototype::create((WebCore::JSCookieStorePrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSCookieStore::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSCookieStore::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 560) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCookieStoreConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCookieStorePrototype::s_info != (char **)(16
                                                           * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCookieStore>,(WebCore::DOMConstructorID)70>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCookieStore_onchange(WebCore *a1, uint64_t a2, uint64_t a3, WebCore::DOMWrapperWorld *a4)
{
  WebCore *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  bmalloc::api *v12;
  void *v13;

  v5 = *(WebCore **)(a2 + 24);
  ++*((_DWORD *)v5 + 6);
  v6 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
  if (!v6 || (v7 = *(_QWORD *)(v6 + 96)) == 0)
    v7 = WebCore::threadGlobalDataSlow(a1);
  v8 = *(_QWORD *)(v7 + 40);
  if (!v8)
  {
    WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v7);
    v8 = *(_QWORD *)(v7 + 40);
  }
  v10 = WebCore::eventHandlerAttribute(v5, (WebCore::EventTarget *)(v8 + 368), *(const WTF::AtomString **)(*(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28) + 3320), a4);
  if (*((_DWORD *)v5 + 6) == 1)
  {
    WebCore::CookieStore::~CookieStore(v5, v9);
    bmalloc::api::isoDeallocate(v12, v13);
  }
  else
  {
    --*((_DWORD *)v5 + 6);
  }
  return v10;
}

BOOL WebCore::setJSCookieStore_onchange(WebCore *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  char **v8;
  BOOL v9;
  WebCore::EventTarget *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  bmalloc::api *v17;
  void *v18;

  v3 = *((_QWORD *)a1 + 7);
  if ((a2 & 0xFFFE000000000002) == 0)
  {
    v6 = *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C);
    v7 = *(_DWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C) != 0;
    v8 = (char **)(16 * v6);
    if ((_DWORD)v6)
      v9 = v8 == &WebCore::JSCookieStore::s_info;
    else
      v9 = 1;
    if (!v9)
    {
      do
      {
        v8 = (char **)v8[2];
        v7 = v8 != 0;
      }
      while (v8 != &WebCore::JSCookieStore::s_info && v8 != 0);
    }
    if (v7)
    {
      v11 = *(WebCore::EventTarget **)(a2 + 24);
      ++*((_DWORD *)v11 + 6);
      v12 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 3)) + 736);
      if (!v12 || (v13 = *(_QWORD *)(v12 + 96)) == 0)
        v13 = WebCore::threadGlobalDataSlow(a1);
      v14 = *(_QWORD *)(v13 + 40);
      if (!v14)
      {
        WebCore::ThreadGlobalData::initializeEventNames((WebCore::EventNames **)v13);
        v14 = *(_QWORD *)(v13 + 40);
      }
      WebCore::EventTarget::setAttributeEventListener<WebCore::JSEventListener>(v11, (WTF::StringImpl **)(v14 + 368), a3, (_DWORD *)a2);
      if (*((_DWORD *)v11 + 6) == 1)
      {
        WebCore::CookieStore::~CookieStore(v11, v15);
        bmalloc::api::isoDeallocate(v17, v18);
        if (a3)
        {
LABEL_19:
          if ((a3 & 0xFFFE000000000002) == 0 && *(_DWORD *)(v3 + 760) >= *(unsigned __int8 *)(a2 + 7))
            JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v3 + 192), (const JSCell *)a2);
        }
      }
      else
      {
        --*((_DWORD *)v11 + 6);
        if (a3)
          goto LABEL_19;
      }
      return 1;
    }
  }
  return JSC::throwDOMAttributeSetterTypeError() != 0;
}

uint64_t WebCore::JSCookieStoreOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(_QWORD **)(*(_QWORD *)a2 + 24);
  v6 = v5[5];
  if (!v6)
    return 0;
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7 || *(_BYTE *)(v7 + 180))
    return 0;
  if (v5[6] || (result = (*(uint64_t (**)(_QWORD *))(v5[4] + 64))(v5 + 4), (_DWORD)result))
  {
    if (a5)
    {
      *a5 = "ActiveDOMObject with pending activity";
      a5[1] = 38;
    }
    return 1;
  }
  return result;
}

void WebCore::JSCookieStoreOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  WebCore::CookieStore *v3;
  int v4;
  _DWORD *v5;
  bmalloc::api *v6;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  WebCore::CookieStore *v16;
  int v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;

  v3 = *(WebCore::CookieStore **)(*(_QWORD *)a2 + 24);
  v4 = *((_DWORD *)v3 + 6);
  *((_DWORD *)v3 + 6) = v4 + 1;
  v5 = (_DWORD *)((char *)v3 + 8);
  if (!v3)
    v5 = 0;
  if (*(_DWORD *)(a3 + 48))
  {
    v10 = *(_QWORD *)(a3 + 32);
    v8 = (uint64_t *)(a3 + 32);
    v9 = v10;
    if (v10)
    {
      v11 = *(_DWORD *)(v9 - 8);
      v12 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
      v13 = 9 * ((v12 + ~(v12 << 13)) ^ ((v12 + ~(v12 << 13)) >> 8));
      v14 = (v13 ^ (v13 >> 15)) + ~((v13 ^ (v13 >> 15)) << 27);
      v15 = v11 & ((v14 >> 31) ^ v14);
      v16 = *(WebCore::CookieStore **)(v9 + 16 * v15);
      if (v16 != v3)
      {
        v17 = 1;
        while (v16)
        {
          v15 = ((_DWORD)v15 + v17) & v11;
          v16 = *(WebCore::CookieStore **)(v9 + 16 * v15);
          ++v17;
          if (v16 == v3)
            goto LABEL_14;
        }
        v15 = *(unsigned int *)(v9 - 4);
      }
LABEL_14:
      if (v15 != *(_DWORD *)(v9 - 4))
      {
        v18 = (_QWORD *)(v9 + 16 * v15);
        *v18 = -1;
        v21 = v18[1];
        v20 = v18 + 1;
        v19 = v21;
        if (v21)
        {
          *(_QWORD *)(v19 + 8) = 3;
          *v20 = 0;
        }
        ++*(_DWORD *)(*v8 - 16);
        v22 = *v8;
        if (*v8)
          v23 = *(_DWORD *)(v22 - 12) - 1;
        else
          v23 = -1;
        *(_DWORD *)(v22 - 12) = v23;
        v24 = *v8;
        if (*v8)
        {
          v25 = 6 * *(_DWORD *)(v24 - 12);
          v26 = *(_DWORD *)(v24 - 4);
          if (v25 < v26 && v26 >= 9)
            WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v8, v26 >> 1, 0);
        }
      }
    }
    v4 = *((_DWORD *)v3 + 6) - 1;
  }
  else if (*(_QWORD *)v5)
  {
    *(_QWORD *)(*(_QWORD *)v5 + 8) = 3;
    *(_QWORD *)v5 = 0;
  }
  if (v4)
  {
    *((_DWORD *)v3 + 6) = v4;
  }
  else
  {
    WebCore::CookieStore::~CookieStore(v3, a2);
    bmalloc::api::isoDeallocate(v6, v7);
  }
}

unint64_t WebCore::wrap<WebCore::CookieStore>(int a1, JSC::VM *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t SlowCase;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char **v14;
  int v15;
  unint64_t v16;
  WebCore::JSEventTarget *v17;
  JSC::JSCell *v18;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v20;
  JSC::Structure *v21;
  JSC::JSCell *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  WTF *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  WTF *v38;
  void *v39;
  int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *Allocator;
  uint64_t v45;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  unsigned int v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  WTF *v61;

  v5 = *((_QWORD *)a2 + 415);
  if (*(_DWORD *)(v5 + 48))
  {
    v50 = *(_QWORD *)(v5 + 32);
    if (!v50)
      goto LABEL_5;
    v51 = *(_DWORD *)(v50 - 8);
    v52 = (~(a3 << 32) + a3) ^ ((unint64_t)(~(a3 << 32) + a3) >> 22);
    v53 = 9 * ((v52 + ~(v52 << 13)) ^ ((v52 + ~(v52 << 13)) >> 8));
    v54 = (v53 ^ (v53 >> 15)) + ~((v53 ^ (v53 >> 15)) << 27);
    v55 = v51 & ((v54 >> 31) ^ v54);
    v56 = *(_QWORD *)(v50 + 16 * v55);
    if (v56 != a3)
    {
      v57 = 1;
      while (v56)
      {
        v55 = ((_DWORD)v55 + v57) & v51;
        v56 = *(_QWORD *)(v50 + 16 * v55);
        ++v57;
        if (v56 == a3)
          goto LABEL_65;
      }
      goto LABEL_5;
    }
LABEL_65:
    v6 = *(_QWORD *)(v50 + 16 * v55 + 8);
    if (!v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *(_QWORD *)(a3 + 8);
    if (!v6)
      goto LABEL_5;
  }
  if ((*(_BYTE *)(v6 + 8) & 3) == 0)
  {
    SlowCase = *(_QWORD *)v6;
    if (*(_QWORD *)v6)
      return SlowCase;
  }
LABEL_5:
  ++*(_DWORD *)(a3 + 24);
  if (*(uint64_t (***)(WebCore::CookieStore *__hidden))a3 != off_1E3354528)
  {
    __break(0xC471u);
    JUMPOUT(0x194959A0CLL);
  }
  v8 = *((_QWORD *)a2 + 412);
  if (v8)
  {
    v9 = *(_DWORD *)(v8 - 8);
    v10 = ((unint64_t)&WebCore::JSCookieStore::s_info + ~((_QWORD)&WebCore::JSCookieStore::s_info << 32)) ^ (((unint64_t)&WebCore::JSCookieStore::s_info + ~((_QWORD)&WebCore::JSCookieStore::s_info << 32)) >> 22);
    v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
    v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
    v13 = v9 & ((v12 >> 31) ^ v12);
    v14 = *(char ***)(v8 + 16 * v13);
    if (v14 == &WebCore::JSCookieStore::s_info)
    {
LABEL_11:
      v16 = *(_QWORD *)(v8 + 16 * v13 + 8);
      if (v16)
        goto LABEL_13;
    }
    else
    {
      v15 = 1;
      while (v14)
      {
        v13 = ((_DWORD)v13 + v15) & v9;
        v14 = *(char ***)(v8 + 16 * v13);
        ++v15;
        if (v14 == &WebCore::JSCookieStore::s_info)
          goto LABEL_11;
      }
    }
  }
  v17 = (WebCore::JSEventTarget *)*((_QWORD *)a2 + 7);
  v18 = (JSC::JSCell *)WebCore::JSEventTarget::prototype(v17, a2, (WebCore::JSDOMGlobalObject *)a3);
  Structure = WebCore::JSCookieStorePrototype::createStructure((uint64_t *)v17, (uint64_t)a2, v18);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v22 = (JSC::JSCell *)WebCore::JSCookieStorePrototype::create(v17, Structure, v20, v21);
  v23 = WebCore::JSCookieStore::createStructure((uint64_t *)v17, (uint64_t)a2, v22);
  v16 = WebCore::cacheDOMStructure((JSCell *)a2, v23, (uint64_t)&WebCore::JSCookieStore::s_info);
LABEL_13:
  v24 = *((_QWORD *)a2 + 7);
  v25 = *(_QWORD *)(v24 + 41456);
  v26 = *(_QWORD *)(v25 + 23536);
  v27 = *(_QWORD **)(v26 + 560);
  if (v27)
    goto LABEL_35;
  v28 = *(_QWORD *)(v25 + 22648);
  if (__ldaxr((unsigned __int8 *)v28))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v28))
  {
    goto LABEL_18;
  }
  MEMORY[0x19AEA534C](v28);
LABEL_18:
  v30 = *(_QWORD *)(v28 + 2824);
  v59 = *(_QWORD *)(v30 + 560);
  if (!v59)
  {
    v31 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v61, "IsoSpace T");
    v60 = 0;
    MEMORY[0x19AEA3204](v31, &v61, v24 + 192, v24 + 1872, 32, 8, &v60);
    v33 = (uint64_t)v60;
    v60 = 0;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
    v34 = v61;
    v61 = 0;
    if (v34)
    {
      if (*(_DWORD *)v34 == 1)
        WTF::fastFree(v34, v32);
      else
        --*(_DWORD *)v34;
    }
    v59 = v31;
    v35 = *(_QWORD *)(v30 + 560);
    *(_QWORD *)(v30 + 560) = v31;
    if (v35)
      (*(void (**)(uint64_t))(*(_QWORD *)v35 + 8))(v35);
    v36 = *(unsigned int *)(v28 + 2844);
    if ((_DWORD)v36 == *(_DWORD *)(v28 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v28 + 2832, (unint64_t)&v59);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v28 + 2832) + 8 * v36) = v31;
      *(_DWORD *)(v28 + 2844) = v36 + 1;
    }
  }
  v27 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v37 = *(_QWORD *)(v26 + 560);
  *(_QWORD *)(v26 + 560) = v27;
  if (v37)
  {
    v38 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v38, v39);
  }
  v40 = __ldxr((unsigned __int8 *)v28);
  if (v40 != 1)
  {
    __clrex();
    goto LABEL_34;
  }
  if (__stlxr(0, (unsigned __int8 *)v28))
LABEL_34:
    WTF::Lock::unlockSlow((WTF::Lock *)v28);
LABEL_35:
  SlowCase = v27[3];
  if (SlowCase < v27[4])
  {
LABEL_36:
    v27[3] = SlowCase + 32;
    goto LABEL_37;
  }
  SlowCase = v27[5];
  if ((SlowCase & 1) == 0)
  {
    v58 = *(_QWORD *)(SlowCase + 8) ^ v27[6];
    v27[4] = SlowCase + HIDWORD(v58);
    v27[5] = SlowCase + (int)v58;
    goto LABEL_36;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_37:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v16);
  *(_QWORD *)(SlowCase + 24) = a3;
  if (*(_BYTE *)(v24 + 755))
    __dmb(0xAu);
  v41 = *((_QWORD *)a2 + 415);
  if ((byte_1EE334FA8 & 1) == 0)
  {
    qword_1EE334FA0 = (uint64_t)&off_1E324F7C0;
    byte_1EE334FA8 = 1;
  }
  if (!*(_DWORD *)(v41 + 48))
  {
    if ((SlowCase & 8) != 0)
      v42 = (SlowCase - 112) | 1;
    else
      v42 = SlowCase & 0xFFFFFFFFFFFFC000;
    if ((v42 & 1) != 0)
      v43 = v42 + 47;
    else
      v43 = *(_QWORD *)v42 + 32;
    Allocator = *(_QWORD **)(v43 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v43 + 16) = *Allocator;
    *Allocator = SlowCase;
    Allocator[1] = &qword_1EE334FA0;
    Allocator[2] = v41;
    v45 = *(_QWORD *)(a3 + 8);
    *(_QWORD *)(a3 + 8) = Allocator;
    if (!v45)
      return SlowCase;
LABEL_59:
    *(_QWORD *)(v45 + 8) = 3;
    return SlowCase;
  }
  v61 = (WTF *)a3;
  if ((SlowCase & 8) != 0)
    v47 = (SlowCase - 112) | 1;
  else
    v47 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v47 & 1) != 0)
    v48 = v47 + 47;
  else
    v48 = *(_QWORD *)v47 + 32;
  v49 = *(_QWORD **)(v48 + 16);
  if (!v49)
    v49 = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v48 + 16) = *v49;
  *v49 = SlowCase;
  v49[1] = &qword_1EE334FA0;
  v49[2] = v41;
  v60 = v49;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v41 + 32), (uint64_t *)&v61, (uint64_t *)&v60);
  v45 = (uint64_t)v60;
  if (v60)
    goto LABEL_59;
  return SlowCase;
}

uint64_t WebCore::convertDictionary<WebCore::CookieStoreGetOptions>(uint64_t result, JSC::JSGlobalObject *a2, JSC::JSCell *this)
{
  uint64_t v3;
  JSC::VM *v4;
  WTF::StringImpl *v5;
  uint64_t Object;
  JSC::Structure *v8;
  WTF::StringImpl *v9;
  uint64_t v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  WTF::StringImpl *v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  uint64_t v17;
  WTF::StringImpl *v18;
  unsigned int v19;
  JSC::VM *v20;
  char v21;

  v3 = result;
  v4 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v20 = v4;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    v5 = 0;
LABEL_18:
    v15 = 0;
LABEL_21:
    *(_QWORD *)v3 = v5;
    *(_QWORD *)(v3 + 8) = v15;
    *(_DWORD *)(v3 + 16) = 0;
    return result;
  }
  if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
  {
    result = JSC::throwTypeError();
LABEL_26:
    *(_DWORD *)(v3 + 16) = 1;
    return result;
  }
  v8 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v10 = JSC::JSObject::get(v8, a2, (unint64_t)v18);
  if (v18)
  {
    if (*(_DWORD *)v18 == 2)
      WTF::StringImpl::destroy(v18, v9);
    else
      *(_DWORD *)v18 -= 2;
  }
  if (*((_DWORD *)v4 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v4);
    if ((_DWORD)result)
      goto LABEL_26;
  }
  if (v10 == 10)
  {
    v5 = 0;
  }
  else
  {
    result = WebCore::valueToUSVString(a2, v10, (uint64_t)&v18);
    v11 = v19;
    if (v19)
    {
      *(_DWORD *)(v3 + 16) = 1;
      if ((_DWORD)v11 != -1)
        return ((uint64_t (*)(char *, WTF::StringImpl **))off_1E324FDC0[v11])(&v21, &v18);
      return result;
    }
    v5 = v18;
    v18 = 0;
    _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJS9_SB_EEEEEEDcSF_DpT0_((uint64_t)&v21, (WTF::StringImpl *)&v18);
  }
  WTF::AtomStringImpl::addLiteral();
  v12 = v18;
  result = JSC::JSObject::get(v8, a2, (unint64_t)v18);
  v14 = result;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      result = WTF::StringImpl::destroy(v12, v13);
    else
      *(_DWORD *)v12 -= 2;
  }
  if (*((_DWORD *)v4 + 20) && (result = JSC::VM::hasExceptionsAfterHandlingTraps(v4), (_DWORD)result))
  {
    *(_DWORD *)(v3 + 16) = 1;
  }
  else
  {
    if (v14 == 10)
      goto LABEL_18;
    result = WebCore::valueToUSVString(a2, v14, (uint64_t)&v18);
    v17 = v19;
    if (!v19)
    {
      v15 = v18;
      v18 = 0;
      result = (uint64_t)_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0EEE10__dispatchB8sn180100IOZNS0_6__dtorINS0_8__traitsIJN3WTF6StringEN7WebCore25ConversionResultExceptionEEEELNS0_6_TraitE1EE9__destroyB8sn180100EvEUlRT_E_JRNS0_6__baseILSD_1EJS9_SB_EEEEEEDcSF_DpT0_((uint64_t)&v21, (WTF::StringImpl *)&v18);
      goto LABEL_21;
    }
    *(_DWORD *)(v3 + 16) = 1;
    if ((_DWORD)v17 != -1)
      result = ((uint64_t (*)(char *, WTF::StringImpl **))off_1E324FDC0[v17])(&v21, &v18);
  }
  if (v5)
  {
    if (*(_DWORD *)v5 == 2)
      return WTF::StringImpl::destroy(v5, v16);
    else
      *(_DWORD *)v5 -= 2;
  }
  return result;
}

WTF *WebCore::JSCookieStoreManager::destroy(WebCore::JSCookieStoreManager *this, JSC::JSCell *a2)
{
  WTF *result;

  result = (WTF *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (*(_DWORD *)result == 1)
      return (WTF *)WTF::fastFree(result, a2);
    else
      --*(_DWORD *)result;
  }
  return result;
}

uint64_t WebCore::JSCookieStoreManager::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCookieStoreManagerPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCookieStoreManagerPrototype::create(WebCore::JSCookieStoreManagerPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<4u>(this, (uint64_t)&WebCore::JSCookieStoreManager::s_info, &WebCore::JSCookieStoreManagerPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCookieStoreManager>,(WebCore::DOMConstructorID)71>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 568);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCookieStoreManager>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSCookieStoreManager::s_info
         + ~((_QWORD)&WebCore::JSCookieStoreManager::s_info << 32)) ^ (((unint64_t)&WebCore::JSCookieStoreManager::s_info
                                                                      + ~((_QWORD)&WebCore::JSCookieStoreManager::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSCookieStoreManager::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSCookieStoreManager::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSCookieStoreManagerPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSCookieStoreManagerPrototype::create((WebCore::JSCookieStoreManagerPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSCookieStoreManager::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSCookieStoreManager::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 568) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCookieStoreManagerConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCookieStoreManagerPrototype::s_info != (char **)(16
                                                                  * *(unsigned int *)(16
                                                                                    * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                    + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCookieStoreManager>,(WebCore::DOMConstructorID)71>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSCookieStoreManagerOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

_QWORD *WebCore::JSCookieStoreManagerOwner::finalize(uint64_t a1, void *a2, uint64_t a3)
{
  WTF *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  WTF *v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  _QWORD *result;

  v3 = *(WTF **)(*(_QWORD *)a2 + 24);
  ++*(_DWORD *)v3;
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(WTF **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v13 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v13) & v7;
        v12 = *(WTF **)(v5 + 16 * v11);
        ++v13;
        if (v12 == v3)
          goto LABEL_6;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_6:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v14 = (_QWORD *)(v5 + 16 * v11);
      *v14 = -1;
      v17 = v14[1];
      v16 = v14 + 1;
      v15 = v17;
      if (v17)
      {
        *(_QWORD *)(v15 + 8) = 3;
        *v16 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v18 = *v4;
      if (*v4)
        v19 = *(_DWORD *)(v18 - 12) - 1;
      else
        v19 = -1;
      *(_DWORD *)(v18 - 12) = v19;
      v20 = *v4;
      if (*v4)
      {
        v21 = 6 * *(_DWORD *)(v20 - 12);
        v22 = *(_DWORD *)(v20 - 4);
        if (v21 < v22 && v22 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v22 >> 1, 0);
      }
    }
  }
  if (*(_DWORD *)v3 == 1)
    return (_QWORD *)WTF::fastFree(v3, a2);
  --*(_DWORD *)v3;
  return result;
}

unint64_t WebCore::wrap<WebCore::CookieStoreManager>(uint64_t a1, uint64_t a2, WTF *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF *v11;
  int v12;
  uint64_t v13;
  unint64_t SlowCase;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  uint64_t *v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  WTF *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  WTF *v44;
  void *v45;
  int v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *Allocator;
  unint64_t v52;
  _QWORD *v53;
  WTF *v54;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          SlowCase = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return SlowCase;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*(_DWORD *)a3;
  v15 = *(_QWORD *)(a2 + 3296);
  if (v15)
  {
    v16 = *(_DWORD *)(v15 - 8);
    v17 = ((unint64_t)&WebCore::JSCookieStoreManager::s_info
         + ~((_QWORD)&WebCore::JSCookieStoreManager::s_info << 32)) ^ (((unint64_t)&WebCore::JSCookieStoreManager::s_info
                                                                      + ~((_QWORD)&WebCore::JSCookieStoreManager::s_info << 32)) >> 22);
    v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
    v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
    v20 = v16 & ((v19 >> 31) ^ v19);
    v21 = *(char ***)(v15 + 16 * v20);
    if (v21 == &WebCore::JSCookieStoreManager::s_info)
    {
LABEL_14:
      v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
      if (v23)
        goto LABEL_16;
    }
    else
    {
      v22 = 1;
      while (v21)
      {
        v20 = ((_DWORD)v20 + v22) & v16;
        v21 = *(char ***)(v15 + 16 * v20);
        ++v22;
        if (v21 == &WebCore::JSCookieStoreManager::s_info)
          goto LABEL_14;
      }
    }
  }
  v24 = *(uint64_t **)(a2 + 56);
  Structure = WebCore::JSCookieStoreManagerPrototype::createStructure(v24, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSCookieStoreManagerPrototype::create((WebCore::JSCookieStoreManagerPrototype *)v24, Structure, v26, v27);
  v29 = WebCore::JSCookieStoreManager::createStructure(v24, a2, v28);
  v23 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSCookieStoreManager::s_info);
LABEL_16:
  v30 = *(_QWORD *)(a2 + 56);
  v31 = *(_QWORD *)(v30 + 41456);
  v32 = *(_QWORD *)(v31 + 23536);
  v33 = *(_QWORD **)(v32 + 568);
  if (v33)
    goto LABEL_36;
  v34 = *(_QWORD *)(v31 + 22648);
  if (__ldaxr((unsigned __int8 *)v34))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v34))
  {
    goto LABEL_21;
  }
  MEMORY[0x19AEA534C](v34);
LABEL_21:
  v36 = *(_QWORD *)(v34 + 2824);
  if (!*(_QWORD *)(v36 + 568))
  {
    v37 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v54, "IsoSpace T");
    v53 = 0;
    MEMORY[0x19AEA3204](v37, &v54, v30 + 192, v30 + 1872, 32, 8, &v53);
    v39 = (uint64_t)v53;
    v53 = 0;
    if (v39)
      (*(void (**)(uint64_t))(*(_QWORD *)v39 + 8))(v39);
    v40 = v54;
    v54 = 0;
    if (v40)
    {
      if (*(_DWORD *)v40 == 1)
        WTF::fastFree(v40, v38);
      else
        --*(_DWORD *)v40;
    }
    v41 = *(_QWORD *)(v36 + 568);
    *(_QWORD *)(v36 + 568) = v37;
    if (v41)
      (*(void (**)(uint64_t))(*(_QWORD *)v41 + 8))(v41);
  }
  v33 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v43 = *(_QWORD *)(v32 + 568);
  *(_QWORD *)(v32 + 568) = v33;
  if (v43)
  {
    v44 = (WTF *)MEMORY[0x19AEA3528](v43, v42);
    WTF::fastFree(v44, v45);
  }
  v46 = __ldxr((unsigned __int8 *)v34);
  if (v46 != 1)
  {
    __clrex();
    goto LABEL_35;
  }
  if (__stlxr(0, (unsigned __int8 *)v34))
LABEL_35:
    WTF::Lock::unlockSlow((WTF::Lock *)v34);
LABEL_36:
  SlowCase = v33[3];
  if (SlowCase >= v33[4])
  {
    SlowCase = v33[5];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_38;
    }
    v52 = *(_QWORD *)(SlowCase + 8) ^ v33[6];
    v33[4] = SlowCase + HIDWORD(v52);
    v33[5] = SlowCase + (int)v52;
  }
  v33[3] = SlowCase + 32;
LABEL_38:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v23);
  *(_QWORD *)(SlowCase + 24) = a3;
  if (*(_BYTE *)(v30 + 755))
    __dmb(0xAu);
  v47 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE334FB8 & 1) == 0)
  {
    qword_1EE334FB0 = (uint64_t)&off_1E324F7F0;
    byte_1EE334FB8 = 1;
  }
  v54 = a3;
  if ((SlowCase & 8) != 0)
    v48 = (SlowCase - 112) | 1;
  else
    v48 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v48 & 1) != 0)
    v49 = v48 + 47;
  else
    v49 = *(_QWORD *)v48 + 32;
  Allocator = *(_QWORD **)(v49 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v49 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE334FB0;
  Allocator[2] = v47;
  v53 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v47 + 32), (uint64_t *)&v54, (uint64_t *)&v53);
  if (v53)
    v53[1] = 3;
  return SlowCase;
}

uint64_t WebCore::JSCountQueuingStrategyPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCountQueuingStrategyPrototype::create(WebCore::JSCountQueuingStrategyPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<3u>(this, (uint64_t)&WebCore::JSCountQueuingStrategy::s_info, &WebCore::JSCountQueuingStrategyPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::jsCountQueuingStrategyConstructor(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  uint64_t Structure;
  JSC::Heap *v6;
  unint64_t v7;

  v2 = *(_QWORD *)(a1 + 56);
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCountQueuingStrategyPrototype::s_info != (char **)(16
                                                                    * *(unsigned int *)(16
                                                                                      * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                      + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  v3 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
  result = *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 1712);
  if (!result)
  {
    Structure = WebCore::JSDOMBuiltinConstructor<WebCore::JSCountQueuingStrategy>::createStructure((uint64_t *)v2, v3, *(JSC::JSCell **)(v3 + 664));
    result = WebCore::JSDOMBuiltinConstructor<WebCore::JSCountQueuingStrategy>::create(v2, Structure, v3);
    *(_QWORD *)(*(_QWORD *)(v3 + 3312) + 1712) = result;
    if (result)
    {
      if (*(_DWORD *)(v2 + 760) >= *(unsigned __int8 *)(v3 + 7))
      {
        v6 = (JSC::Heap *)(v2 + 192);
        v7 = result;
        JSC::Heap::writeBarrierSlowPath(v6, (const JSCell *)v3);
        return v7;
      }
    }
  }
  return result;
}

WebCore::JSCreateHTMLCallback *WebCore::JSCreateHTMLCallback::JSCreateHTMLCallback(WebCore::JSCreateHTMLCallback *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3)
{
  WebCore::ScriptExecutionContext *v6;
  _QWORD *v7;
  _QWORD *Allocator;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  v6 = (WebCore::ScriptExecutionContext *)WebCore::JSDOMGlobalObject::scriptExecutionContext(a3);
  *((_DWORD *)this + 4) = 1;
  *(_QWORD *)this = &off_1E33A18C0;
  *((_QWORD *)this + 1) = 0;
  WebCore::ContextDestructionObserver::observeContext(this, v6);
  *(_QWORD *)this = &off_1E324E3B0;
  v7 = (_QWORD *)WTF::fastMalloc((WTF *)0x18);
  Allocator = 0;
  if (a3)
  {
    v16 = v7;
    if ((a3 & 8) != 0)
      v12 = ((unint64_t)a3 - 112) | 1;
    else
      v12 = (unint64_t)a3 & 0xFFFFFFFFFFFFC000;
    if ((v12 & 1) != 0)
      v13 = v12 + 47;
    else
      v13 = *(_QWORD *)v12 + 32;
    Allocator = *(_QWORD **)(v13 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v13 + 16) = *Allocator;
    *Allocator = a3;
    Allocator[1] = 0;
    Allocator[2] = 0;
    v7 = v16;
  }
  *v7 = Allocator;
  v7[1] = &off_1E32268A0;
  v9 = v7 + 1;
  if (a2)
  {
    v17 = v7;
    if ((a2 & 8) != 0)
      v14 = (a2 - 112) | 1;
    else
      v14 = a2 & 0xFFFFFFFFFFFFC000;
    if ((v14 & 1) != 0)
      v15 = v14 + 47;
    else
      v15 = *(_QWORD *)v14 + 32;
    v10 = *(_QWORD **)(v15 + 16);
    if (!v10)
      v10 = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v15 + 16) = *v10;
    *v10 = a2;
    v10[1] = v9;
    v10[2] = this;
    v7 = v17;
  }
  else
  {
    v10 = 0;
  }
  v7[2] = v10;
  *((_QWORD *)this + 3) = v7;
  return this;
}

void WebCore::JSCreateHTMLCallback::~JSCreateHTMLCallback(WebCore::JSCreateHTMLCallback *this, void *a2)
{
  WTF *v2;
  void *v3;

  WebCore::JSAbortAlgorithm::~JSAbortAlgorithm(this, a2);
  WTF::fastFree(v2, v3);
}

uint64_t WebCore::JSCreateHTMLCallback::handleEvent@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X2>, _DWORD *a4@<X8>)
{
  uint64_t result;
  uint64_t v9;
  JSC::JSGlobalObject *v10;
  uint64_t v11;
  objc_class **v12;
  uint64_t v13;
  int v14;
  objc_class *v15;
  unsigned int v16;
  WTF *v17;
  JSValue v18;
  unsigned __int8 *v19;
  unsigned int v20;
  _DWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  JSC::Structure *v25;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  unsigned int v32;
  _QWORD *v33;
  uint64_t v34;
  Class **v35;
  unsigned int v36;
  uint64_t v37;
  JSValue v38;
  int v39;
  BOOL v40;
  uint64_t *v41;
  unsigned int v42;
  uint64_t v43;
  char v44[8];
  uint64_t v45;
  WTF *v46;
  _OWORD v47[4];
  uint64_t v48;
  _BYTE v49[15];
  char v50;

  result = WebCore::ActiveDOMCallback::canInvokeCallback((WebCore::ActiveDOMCallback *)a1, a2);
  if ((result & 1) == 0)
  {
    *a4 = 2;
    a4[2] = 1;
    return result;
  }
  ++*(_DWORD *)(a1 + 16);
  v9 = **(_QWORD **)(a1 + 24);
  if (!v9 || (*(_BYTE *)(v9 + 8) & 3) != 0)
    v10 = 0;
  else
    v10 = *(JSC::JSGlobalObject **)v9;
  MEMORY[0x19AEA3294](v49, *((_QWORD *)v10 + 7));
  v44[0] = 0;
  v45 = 0x800000000;
  v46 = (WTF *)((char *)v47 + 8);
  v48 = 0;
  memset(v47, 0, sizeof(v47));
  v11 = *((_QWORD *)v10 + 7);
  v12 = (objc_class **)(v11 + 41968);
  v13 = *a2;
  if (!*a2)
    goto LABEL_17;
  v14 = *(_DWORD *)(v13 + 4);
  if (!v14)
    goto LABEL_17;
  if (v14 == 1)
  {
    v19 = *(unsigned __int8 **)(v13 + 8);
    if ((*(_BYTE *)(v13 + 16) & 4) != 0)
    {
      v20 = *v19;
    }
    else
    {
      v32 = *(unsigned __int16 *)v19;
      if (v32 > 0xFF)
        goto LABEL_8;
      v20 = v32;
    }
    v12 = (objc_class **)(v11 + 8 * v20 + 42216);
LABEL_17:
    v15 = *v12;
LABEL_18:
    v16 = 0;
    v17 = (WTF *)((char *)v47 + 8);
    goto LABEL_19;
  }
LABEL_8:
  v15 = *(objc_class **)(v11 + 64760);
  if (v15 && v13 == *((_QWORD *)v15 + 1))
    goto LABEL_18;
  v15 = (objc_class *)JSC::jsStringWithCacheSlowCase();
  v16 = v45;
  v17 = v46;
  if (v46 == (WTF *)((char *)v47 + 8))
  {
LABEL_19:
    *((_QWORD *)v17 + v16) = v15;
    LODWORD(v45) = v16 + 1;
    goto LABEL_20;
  }
  v18.super.isa = v15;
  if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v45, v18) == 1)
    v44[0] = 1;
LABEL_20:
  v21 = (_DWORD *)*a3;
  if (v21)
  {
    v36 = *v21;
    v35 = (Class **)(v21 + 2);
    v34 = v36;
    if (v36)
    {
      v37 = 8 * v34;
      do
      {
        if (*v35)
          v38.super.isa = **v35;
        else
          v38.super.isa = 0;
        v39 = v45;
        if ((_DWORD)v45 != HIDWORD(v45) && (v46 != (WTF *)((char *)v47 + 8) ? (v40 = v46 == 0) : (v40 = 1), v40))
        {
          *((JSValue *)v46 + v45) = v38;
          LODWORD(v45) = v39 + 1;
        }
        else if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v45, v38) == 1)
        {
          v44[0] = 1;
        }
        ++v35;
        v37 -= 8;
      }
      while (v37);
    }
  }
  v43 = 0;
  v22 = *(uint64_t **)(a1 + 24);
  v23 = *v22;
  if (*v22 && (*(_BYTE *)(v23 + 8) & 3) == 0 && *(_QWORD *)v23)
  {
    v24 = v22[2];
    if (!v24 || (*(_BYTE *)(v24 + 8) & 3) != 0)
      v25 = 0;
    else
      v25 = *(JSC::Structure **)v24;
    v26 = WebCore::JSCallbackData::invokeCallback(*(JSC::JSGlobalObject **)v23, v25, 10, (uint64_t)v44, 0, 0, &v43);
    if (v43)
    {
      JSC::VM::throwException();
      *a4 = 1;
      a4[2] = 1;
      goto LABEL_34;
    }
    v28 = v26;
  }
  else
  {
    v28 = 0;
  }
  WebCore::Converter<WebCore::IDLNullable<WebCore::IDLDOMString>>::convert(v10, v28, (uint64_t)&v41);
  v29 = v42;
  if (v42)
  {
    *a4 = 1;
    a4[2] = 1;
    if ((_DWORD)v29 == -1)
      goto LABEL_34;
  }
  else
  {
    v30 = (uint64_t)v41;
    v41 = 0;
    *(_QWORD *)a4 = v30;
    a4[2] = 0;
  }
  ((void (*)(char *, uint64_t **))off_1E324FDC0[v29])(&v50, &v41);
LABEL_34:
  v31 = *(uint64_t **)&v47[0];
  if (*(_QWORD *)&v47[0])
  {
    v41 = &v45;
    v33 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v47[0], (uint64_t *)&v41);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v31, v33);
  }
  if (v46 != (WTF *)((char *)v47 + 8) && v46)
    WTF::fastFree(v46, v27);
  result = MEMORY[0x19AEA32A0](v49);
  if (*(_DWORD *)(a1 + 16) == 1)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
  --*(_DWORD *)(a1 + 16);
  return result;
}

uint64_t WebCore::JSCreateHTMLCallback::visitJSFunction(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = *(uint64_t **)(*(_QWORD *)(a1 + 24) + 16);
  if (!v3 || (v3[1] & 3) != 0)
    v4 = 0;
  else
    v4 = *v3;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 24))(a2, v4);
}

{
  return WebCore::JSCallbackData::visitJSFunction<JSC::SlotVisitor>(*(_QWORD *)(a1 + 24), a2);
}

WebCore::JSCreateScriptCallback *WebCore::JSCreateScriptCallback::JSCreateScriptCallback(WebCore::JSCreateScriptCallback *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3)
{
  WebCore::ScriptExecutionContext *v6;
  _QWORD *v7;
  _QWORD *Allocator;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  v6 = (WebCore::ScriptExecutionContext *)WebCore::JSDOMGlobalObject::scriptExecutionContext(a3);
  *((_DWORD *)this + 4) = 1;
  *(_QWORD *)this = &off_1E33A18C0;
  *((_QWORD *)this + 1) = 0;
  WebCore::ContextDestructionObserver::observeContext(this, v6);
  *(_QWORD *)this = &off_1E324E3F8;
  v7 = (_QWORD *)WTF::fastMalloc((WTF *)0x18);
  Allocator = 0;
  if (a3)
  {
    v16 = v7;
    if ((a3 & 8) != 0)
      v12 = ((unint64_t)a3 - 112) | 1;
    else
      v12 = (unint64_t)a3 & 0xFFFFFFFFFFFFC000;
    if ((v12 & 1) != 0)
      v13 = v12 + 47;
    else
      v13 = *(_QWORD *)v12 + 32;
    Allocator = *(_QWORD **)(v13 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v13 + 16) = *Allocator;
    *Allocator = a3;
    Allocator[1] = 0;
    Allocator[2] = 0;
    v7 = v16;
  }
  *v7 = Allocator;
  v7[1] = &off_1E32268A0;
  v9 = v7 + 1;
  if (a2)
  {
    v17 = v7;
    if ((a2 & 8) != 0)
      v14 = (a2 - 112) | 1;
    else
      v14 = a2 & 0xFFFFFFFFFFFFC000;
    if ((v14 & 1) != 0)
      v15 = v14 + 47;
    else
      v15 = *(_QWORD *)v14 + 32;
    v10 = *(_QWORD **)(v15 + 16);
    if (!v10)
      v10 = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v15 + 16) = *v10;
    *v10 = a2;
    v10[1] = v9;
    v10[2] = this;
    v7 = v17;
  }
  else
  {
    v10 = 0;
  }
  v7[2] = v10;
  *((_QWORD *)this + 3) = v7;
  return this;
}

void WebCore::JSCreateScriptCallback::~JSCreateScriptCallback(WebCore::JSCreateScriptCallback *this, void *a2)
{
  WTF *v2;
  void *v3;

  WebCore::JSAbortAlgorithm::~JSAbortAlgorithm(this, a2);
  WTF::fastFree(v2, v3);
}

uint64_t WebCore::JSCreateScriptCallback::handleEvent@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X2>, _DWORD *a4@<X8>)
{
  uint64_t result;
  uint64_t v9;
  JSC::JSGlobalObject *v10;
  uint64_t v11;
  objc_class **v12;
  uint64_t v13;
  int v14;
  objc_class *v15;
  unsigned int v16;
  WTF *v17;
  JSValue v18;
  unsigned __int8 *v19;
  unsigned int v20;
  _DWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  JSC::Structure *v25;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  unsigned int v32;
  _QWORD *v33;
  uint64_t v34;
  Class **v35;
  unsigned int v36;
  uint64_t v37;
  JSValue v38;
  int v39;
  BOOL v40;
  uint64_t *v41;
  unsigned int v42;
  uint64_t v43;
  char v44[8];
  uint64_t v45;
  WTF *v46;
  _OWORD v47[4];
  uint64_t v48;
  _BYTE v49[15];
  char v50;

  result = WebCore::ActiveDOMCallback::canInvokeCallback((WebCore::ActiveDOMCallback *)a1, a2);
  if ((result & 1) == 0)
  {
    *a4 = 2;
    a4[2] = 1;
    return result;
  }
  ++*(_DWORD *)(a1 + 16);
  v9 = **(_QWORD **)(a1 + 24);
  if (!v9 || (*(_BYTE *)(v9 + 8) & 3) != 0)
    v10 = 0;
  else
    v10 = *(JSC::JSGlobalObject **)v9;
  MEMORY[0x19AEA3294](v49, *((_QWORD *)v10 + 7));
  v44[0] = 0;
  v45 = 0x800000000;
  v46 = (WTF *)((char *)v47 + 8);
  v48 = 0;
  memset(v47, 0, sizeof(v47));
  v11 = *((_QWORD *)v10 + 7);
  v12 = (objc_class **)(v11 + 41968);
  v13 = *a2;
  if (!*a2)
    goto LABEL_17;
  v14 = *(_DWORD *)(v13 + 4);
  if (!v14)
    goto LABEL_17;
  if (v14 == 1)
  {
    v19 = *(unsigned __int8 **)(v13 + 8);
    if ((*(_BYTE *)(v13 + 16) & 4) != 0)
    {
      v20 = *v19;
    }
    else
    {
      v32 = *(unsigned __int16 *)v19;
      if (v32 > 0xFF)
        goto LABEL_8;
      v20 = v32;
    }
    v12 = (objc_class **)(v11 + 8 * v20 + 42216);
LABEL_17:
    v15 = *v12;
LABEL_18:
    v16 = 0;
    v17 = (WTF *)((char *)v47 + 8);
    goto LABEL_19;
  }
LABEL_8:
  v15 = *(objc_class **)(v11 + 64760);
  if (v15 && v13 == *((_QWORD *)v15 + 1))
    goto LABEL_18;
  v15 = (objc_class *)JSC::jsStringWithCacheSlowCase();
  v16 = v45;
  v17 = v46;
  if (v46 == (WTF *)((char *)v47 + 8))
  {
LABEL_19:
    *((_QWORD *)v17 + v16) = v15;
    LODWORD(v45) = v16 + 1;
    goto LABEL_20;
  }
  v18.super.isa = v15;
  if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v45, v18) == 1)
    v44[0] = 1;
LABEL_20:
  v21 = (_DWORD *)*a3;
  if (v21)
  {
    v36 = *v21;
    v35 = (Class **)(v21 + 2);
    v34 = v36;
    if (v36)
    {
      v37 = 8 * v34;
      do
      {
        if (*v35)
          v38.super.isa = **v35;
        else
          v38.super.isa = 0;
        v39 = v45;
        if ((_DWORD)v45 != HIDWORD(v45) && (v46 != (WTF *)((char *)v47 + 8) ? (v40 = v46 == 0) : (v40 = 1), v40))
        {
          *((JSValue *)v46 + v45) = v38;
          LODWORD(v45) = v39 + 1;
        }
        else if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v45, v38) == 1)
        {
          v44[0] = 1;
        }
        ++v35;
        v37 -= 8;
      }
      while (v37);
    }
  }
  v43 = 0;
  v22 = *(uint64_t **)(a1 + 24);
  v23 = *v22;
  if (*v22 && (*(_BYTE *)(v23 + 8) & 3) == 0 && *(_QWORD *)v23)
  {
    v24 = v22[2];
    if (!v24 || (*(_BYTE *)(v24 + 8) & 3) != 0)
      v25 = 0;
    else
      v25 = *(JSC::Structure **)v24;
    v26 = WebCore::JSCallbackData::invokeCallback(*(JSC::JSGlobalObject **)v23, v25, 10, (uint64_t)v44, 0, 0, &v43);
    if (v43)
    {
      JSC::VM::throwException();
      *a4 = 1;
      a4[2] = 1;
      goto LABEL_34;
    }
    v28 = v26;
  }
  else
  {
    v28 = 0;
  }
  WebCore::Converter<WebCore::IDLNullable<WebCore::IDLDOMString>>::convert(v10, v28, (uint64_t)&v41);
  v29 = v42;
  if (v42)
  {
    *a4 = 1;
    a4[2] = 1;
    if ((_DWORD)v29 == -1)
      goto LABEL_34;
  }
  else
  {
    v30 = (uint64_t)v41;
    v41 = 0;
    *(_QWORD *)a4 = v30;
    a4[2] = 0;
  }
  ((void (*)(char *, uint64_t **))off_1E324FDC0[v29])(&v50, &v41);
LABEL_34:
  v31 = *(uint64_t **)&v47[0];
  if (*(_QWORD *)&v47[0])
  {
    v41 = &v45;
    v33 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v47[0], (uint64_t *)&v41);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v31, v33);
  }
  if (v46 != (WTF *)((char *)v47 + 8) && v46)
    WTF::fastFree(v46, v27);
  result = MEMORY[0x19AEA32A0](v49);
  if (*(_DWORD *)(a1 + 16) == 1)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
  --*(_DWORD *)(a1 + 16);
  return result;
}

uint64_t WebCore::JSCreateScriptCallback::visitJSFunction(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = *(uint64_t **)(*(_QWORD *)(a1 + 24) + 16);
  if (!v3 || (v3[1] & 3) != 0)
    v4 = 0;
  else
    v4 = *v3;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 24))(a2, v4);
}

{
  return WebCore::JSCallbackData::visitJSFunction<JSC::SlotVisitor>(*(_QWORD *)(a1 + 24), a2);
}

WebCore::JSCreateScriptURLCallback *WebCore::JSCreateScriptURLCallback::JSCreateScriptURLCallback(WebCore::JSCreateScriptURLCallback *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3)
{
  WebCore::ScriptExecutionContext *v6;
  _QWORD *v7;
  _QWORD *Allocator;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  v6 = (WebCore::ScriptExecutionContext *)WebCore::JSDOMGlobalObject::scriptExecutionContext(a3);
  *((_DWORD *)this + 4) = 1;
  *(_QWORD *)this = &off_1E33A18C0;
  *((_QWORD *)this + 1) = 0;
  WebCore::ContextDestructionObserver::observeContext(this, v6);
  *(_QWORD *)this = &off_1E324E440;
  v7 = (_QWORD *)WTF::fastMalloc((WTF *)0x18);
  Allocator = 0;
  if (a3)
  {
    v16 = v7;
    if ((a3 & 8) != 0)
      v12 = ((unint64_t)a3 - 112) | 1;
    else
      v12 = (unint64_t)a3 & 0xFFFFFFFFFFFFC000;
    if ((v12 & 1) != 0)
      v13 = v12 + 47;
    else
      v13 = *(_QWORD *)v12 + 32;
    Allocator = *(_QWORD **)(v13 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v13 + 16) = *Allocator;
    *Allocator = a3;
    Allocator[1] = 0;
    Allocator[2] = 0;
    v7 = v16;
  }
  *v7 = Allocator;
  v7[1] = &off_1E32268A0;
  v9 = v7 + 1;
  if (a2)
  {
    v17 = v7;
    if ((a2 & 8) != 0)
      v14 = (a2 - 112) | 1;
    else
      v14 = a2 & 0xFFFFFFFFFFFFC000;
    if ((v14 & 1) != 0)
      v15 = v14 + 47;
    else
      v15 = *(_QWORD *)v14 + 32;
    v10 = *(_QWORD **)(v15 + 16);
    if (!v10)
      v10 = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v15 + 16) = *v10;
    *v10 = a2;
    v10[1] = v9;
    v10[2] = this;
    v7 = v17;
  }
  else
  {
    v10 = 0;
  }
  v7[2] = v10;
  *((_QWORD *)this + 3) = v7;
  return this;
}

void WebCore::JSCreateScriptURLCallback::~JSCreateScriptURLCallback(WebCore::JSCreateScriptURLCallback *this, void *a2)
{
  WTF *v2;
  void *v3;

  WebCore::JSAbortAlgorithm::~JSAbortAlgorithm(this, a2);
  WTF::fastFree(v2, v3);
}

uint64_t WebCore::JSCreateScriptURLCallback::handleEvent@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X2>, _DWORD *a4@<X8>)
{
  uint64_t result;
  uint64_t v9;
  JSC::JSGlobalObject *v10;
  uint64_t v11;
  objc_class **v12;
  uint64_t v13;
  int v14;
  objc_class *v15;
  unsigned int v16;
  WTF *v17;
  JSValue v18;
  unsigned __int8 *v19;
  unsigned int v20;
  _DWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  JSC::Structure *v25;
  uint64_t v26;
  void *v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t *v31;
  unsigned int v32;
  _QWORD *v33;
  uint64_t v34;
  Class **v35;
  unsigned int v36;
  uint64_t v37;
  JSValue v38;
  int v39;
  BOOL v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  char v44[8];
  uint64_t v45;
  WTF *v46;
  _OWORD v47[4];
  uint64_t v48;
  char v49[8];
  uint64_t *v50;
  int v51;
  char v52;

  result = WebCore::ActiveDOMCallback::canInvokeCallback((WebCore::ActiveDOMCallback *)a1, a2);
  if ((result & 1) == 0)
  {
    *a4 = 2;
    a4[2] = 1;
    return result;
  }
  ++*(_DWORD *)(a1 + 16);
  v9 = **(_QWORD **)(a1 + 24);
  if (!v9 || (*(_BYTE *)(v9 + 8) & 3) != 0)
    v10 = 0;
  else
    v10 = *(JSC::JSGlobalObject **)v9;
  MEMORY[0x19AEA3294](v49, *((_QWORD *)v10 + 7));
  v44[0] = 0;
  v45 = 0x800000000;
  v46 = (WTF *)((char *)v47 + 8);
  v48 = 0;
  memset(v47, 0, sizeof(v47));
  v11 = *((_QWORD *)v10 + 7);
  v12 = (objc_class **)(v11 + 41968);
  v13 = *a2;
  if (!*a2)
    goto LABEL_17;
  v14 = *(_DWORD *)(v13 + 4);
  if (!v14)
    goto LABEL_17;
  if (v14 == 1)
  {
    v19 = *(unsigned __int8 **)(v13 + 8);
    if ((*(_BYTE *)(v13 + 16) & 4) != 0)
    {
      v20 = *v19;
    }
    else
    {
      v32 = *(unsigned __int16 *)v19;
      if (v32 > 0xFF)
        goto LABEL_8;
      v20 = v32;
    }
    v12 = (objc_class **)(v11 + 8 * v20 + 42216);
LABEL_17:
    v15 = *v12;
LABEL_18:
    v16 = 0;
    v17 = (WTF *)((char *)v47 + 8);
    goto LABEL_19;
  }
LABEL_8:
  v15 = *(objc_class **)(v11 + 64760);
  if (v15 && v13 == *((_QWORD *)v15 + 1))
    goto LABEL_18;
  v15 = (objc_class *)JSC::jsStringWithCacheSlowCase();
  v16 = v45;
  v17 = v46;
  if (v46 == (WTF *)((char *)v47 + 8))
  {
LABEL_19:
    *((_QWORD *)v17 + v16) = v15;
    LODWORD(v45) = v16 + 1;
    goto LABEL_20;
  }
  v18.super.isa = v15;
  if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v45, v18) == 1)
    v44[0] = 1;
LABEL_20:
  v21 = (_DWORD *)*a3;
  if (v21)
  {
    v36 = *v21;
    v35 = (Class **)(v21 + 2);
    v34 = v36;
    if (v36)
    {
      v37 = 8 * v34;
      do
      {
        if (*v35)
          v38.super.isa = **v35;
        else
          v38.super.isa = 0;
        v39 = v45;
        if ((_DWORD)v45 != HIDWORD(v45) && (v46 != (WTF *)((char *)v47 + 8) ? (v40 = v46 == 0) : (v40 = 1), v40))
        {
          *((JSValue *)v46 + v45) = v38;
          LODWORD(v45) = v39 + 1;
        }
        else if (JSC::MarkedVectorBase::slowAppend((JSC::MarkedVectorBase *)&v45, v38) == 1)
        {
          v44[0] = 1;
        }
        ++v35;
        v37 -= 8;
      }
      while (v37);
    }
  }
  v43 = 0;
  v22 = *(uint64_t **)(a1 + 24);
  v23 = *v22;
  if (!*v22 || (*(_BYTE *)(v23 + 8) & 3) != 0 || !*(_QWORD *)v23)
  {
    v27 = 0;
    goto LABEL_30;
  }
  v24 = v22[2];
  if (!v24 || (*(_BYTE *)(v24 + 8) & 3) != 0)
    v25 = 0;
  else
    v25 = *(JSC::Structure **)v24;
  v26 = WebCore::JSCallbackData::invokeCallback(*(JSC::JSGlobalObject **)v23, v25, 10, (uint64_t)v44, 0, 0, &v43);
  if (!v43)
  {
    v27 = (void *)v26;
    if ((v26 & 0xFFFFFFFFFFFFFFF7) == 2)
    {
      v29 = 0;
      v42 = 0;
      goto LABEL_37;
    }
LABEL_30:
    WebCore::valueToUSVString(v10, (uint64_t)v27, (uint64_t)&v50);
    LOBYTE(v41) = 0;
    v42 = -1;
    v28 = v51;
    if (v51 == -1)
      goto LABEL_38;
    ((void (*)(char *, uint64_t *, uint64_t **))off_1E3250AA8[v51])(&v52, &v41, &v50);
    v42 = v28;
    if (v51 != -1)
    {
      ((void (*)(char *, uint64_t **))off_1E324FDC0[v51])(&v52, &v50);
      v28 = v42;
    }
    if (v28)
    {
LABEL_38:
      v30 = 1;
      *a4 = 1;
LABEL_39:
      a4[2] = v30;
      if (v42 != -1)
        ((void (*)(uint64_t **, uint64_t *))off_1E324FDC0[v42])(&v50, &v41);
      goto LABEL_41;
    }
    v29 = v41;
LABEL_37:
    v30 = 0;
    v41 = 0;
    *(_QWORD *)a4 = v29;
    goto LABEL_39;
  }
  JSC::VM::throwException();
  *a4 = 1;
  a4[2] = 1;
LABEL_41:
  v31 = *(uint64_t **)&v47[0];
  if (*(_QWORD *)&v47[0])
  {
    v50 = &v45;
    v33 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v47[0], (uint64_t *)&v50);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v31, v33);
  }
  if (v46 != (WTF *)((char *)v47 + 8) && v46)
    WTF::fastFree(v46, v27);
  result = MEMORY[0x19AEA32A0](v49);
  if (*(_DWORD *)(a1 + 16) == 1)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
  --*(_DWORD *)(a1 + 16);
  return result;
}

uint64_t WebCore::JSCreateScriptURLCallback::visitJSFunction(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = *(uint64_t **)(*(_QWORD *)(a1 + 24) + 16);
  if (!v3 || (v3[1] & 3) != 0)
    v4 = 0;
  else
    v4 = *v3;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 24))(a2, v4);
}

{
  return WebCore::JSCallbackData::visitJSFunction<JSC::SlotVisitor>(*(_QWORD *)(a1 + 24), a2);
}

uint64_t WebCore::parseEnumeration<WebCore::MediationRequirement>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  const char *v5;
  int v6;
  unint64_t v7;
  int v9;
  int v10;
  BOOL v12;
  char **v13;
  uint16x8_t v14;
  uint16x8_t v15;
  int v18;
  uint64_t v19;
  uint64_t v22;
  unint64_t v23;

  v3 = a1;
  v23 = this;
  if ((this & 0xFFFE000000000002) == 0 && *(_BYTE *)(this + 5) == 2)
  {
    v4 = *(_QWORD *)(this + 8);
    if ((v4 & 1) != 0)
    {
      v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
      if (!v4)
      {
LABEL_6:
        if (v4)
          goto LABEL_7;
LABEL_31:
        v10 = 0;
        v9 = 0;
        return v10 | (v9 << 8);
      }
    }
    else if (!v4)
    {
      goto LABEL_6;
    }
    *(_DWORD *)v4 += 2;
    goto LABEL_6;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v23, a1);
  v4 = v22;
  if (!v22)
    goto LABEL_31;
LABEL_7:
  v5 = *(const char **)(v4 + 8);
  v6 = *(_DWORD *)(v4 + 4);
  v7 = ((unint64_t)*(unsigned int *)(v4 + 16) >> 2) & 1;
  if (v5 != "conditional" && v6 == 11)
  {
    if ((_DWORD)v7)
    {
      if (*v5 != 99 || *(_QWORD *)(v5 + 1) != 0x6E6F697469646E6FLL || *(_QWORD *)(v5 + 3) != 0x6C616E6F69746964)
        goto LABEL_16;
    }
    else
    {
      if (*(_WORD *)v5 != 99)
        goto LABEL_16;
      v14 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 2), (int16x8_t)xmmword_1968BD210);
      v14.i16[0] = vminvq_u16(v14);
      if (!v14.i32[0])
        goto LABEL_16;
      v15 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 6), (int16x8_t)xmmword_1968BD220);
      v15.i16[0] = vminvq_u16(v15);
      if (!v15.i32[0])
        goto LABEL_16;
    }
LABEL_35:
    v13 = &WebCore::parseEnumerationFromString<WebCore::MediationRequirement>(WTF::String const&)::mappings;
    goto LABEL_36;
  }
  if (v5 == "conditional" && v6 == 11)
    goto LABEL_35;
  v12 = v6 != 8;
  if (v5 != "optional" && v6 == 8)
  {
    if ((_DWORD)v7)
    {
      if (*v5 == 111 && *(_DWORD *)(v5 + 1) == 1869182064 && *((_DWORD *)v5 + 1) == 1818324591)
        goto LABEL_27;
    }
    else if (*(_WORD *)v5 == 111
           && *(_QWORD *)(v5 + 2) == 0x6F006900740070
           && *((_QWORD *)v5 + 1) == 0x6C0061006E006FLL)
    {
      goto LABEL_27;
    }
    v12 = 0;
    v18 = 8;
LABEL_47:
    if (v5 == "required" || v12)
    {
      v19 = v7 << 32;
      if (v5 == "required" && v6 == 8)
        goto LABEL_54;
    }
    else
    {
      if (!v18)
      {
LABEL_54:
        v13 = &off_1E324E4A8;
        goto LABEL_36;
      }
      if ((_DWORD)v7)
      {
        if (*v5 == 114 && *(_DWORD *)(v5 + 1) == 1769304421 && *((_DWORD *)v5 + 1) == 1684370025)
          goto LABEL_54;
        v19 = 1;
      }
      else if (*(_WORD *)v5 == 114)
      {
        v19 = 0;
        if (*(_QWORD *)(v5 + 2) == 0x69007500710065 && *((_QWORD *)v5 + 1) == 0x64006500720069)
          goto LABEL_54;
      }
      else
      {
        v19 = 0;
      }
    }
    if (v5 == "silent" || v18 != 6)
    {
      if (v18 == 6 && v5 == "silent")
        goto LABEL_62;
    }
    else if (v19)
    {
      if (*v5 == 115 && *(_DWORD *)(v5 + 1) == 1852140649 && *(_DWORD *)(v5 + 2) == 1953391980)
      {
LABEL_62:
        v13 = &off_1E324E4C0;
        goto LABEL_36;
      }
    }
    else if (*(_WORD *)v5 == 115
           && *(_QWORD *)(v5 + 4) == 0x74006E0065006CLL
           && *(_QWORD *)(v5 + 2) == 0x6E0065006C0069)
    {
      goto LABEL_62;
    }
LABEL_16:
    v9 = 0;
    v10 = 0;
    goto LABEL_37;
  }
  if (v5 != "optional")
  {
    v18 = *(_DWORD *)(v4 + 4);
    goto LABEL_47;
  }
  v18 = *(_DWORD *)(v4 + 4);
  if (v6 != 8)
    goto LABEL_47;
LABEL_27:
  v13 = &off_1E324E490;
LABEL_36:
  v10 = *((unsigned __int8 *)v13 + 16);
  v9 = 1;
LABEL_37:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v10 | (v9 << 8);
}

uint64_t WebCore::JSCredentialsContainer::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCredentialsContainerPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCredentialsContainerPrototype::create(WebCore::JSCredentialsContainerPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSCredentialsContainer::s_info, &WebCore::JSCredentialsContainerPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCredentialsContainer>,(WebCore::DOMConstructorID)74>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 592);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCredentialsContainer>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSCredentialsContainer::s_info
         + ~((_QWORD)&WebCore::JSCredentialsContainer::s_info << 32)) ^ (((unint64_t)&WebCore::JSCredentialsContainer::s_info
                                                                        + ~((_QWORD)&WebCore::JSCredentialsContainer::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSCredentialsContainer::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSCredentialsContainer::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSCredentialsContainerPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSCredentialsContainerPrototype::create((WebCore::JSCredentialsContainerPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSCredentialsContainer::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSCredentialsContainer::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 592) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCredentialsContainerConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCredentialsContainerPrototype::s_info != (char **)(16
                                                                    * *(unsigned int *)(16
                                                                                      * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                      + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCredentialsContainer>,(WebCore::DOMConstructorID)74>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSCredentialsContainerOwner::isReachableFromOpaqueRoots()
{
  return 0;
}

unint64_t WebCore::wrap<WebCore::CredentialsContainer>(uint64_t a1, uint64_t a2, WTF *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF *v11;
  int v12;
  uint64_t v13;
  unint64_t SlowCase;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  int v22;
  unint64_t v23;
  uint64_t *v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  WTF *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  WTF *v44;
  void *v45;
  int v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *Allocator;
  unint64_t v52;
  _QWORD *v53;
  WTF *v54;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          SlowCase = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return SlowCase;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*((_DWORD *)a3 + 2);
  v15 = *(_QWORD *)(a2 + 3296);
  if (v15)
  {
    v16 = *(_DWORD *)(v15 - 8);
    v17 = ((unint64_t)&WebCore::JSCredentialsContainer::s_info
         + ~((_QWORD)&WebCore::JSCredentialsContainer::s_info << 32)) ^ (((unint64_t)&WebCore::JSCredentialsContainer::s_info
                                                                        + ~((_QWORD)&WebCore::JSCredentialsContainer::s_info << 32)) >> 22);
    v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
    v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
    v20 = v16 & ((v19 >> 31) ^ v19);
    v21 = *(char ***)(v15 + 16 * v20);
    if (v21 == &WebCore::JSCredentialsContainer::s_info)
    {
LABEL_14:
      v23 = *(_QWORD *)(v15 + 16 * v20 + 8);
      if (v23)
        goto LABEL_16;
    }
    else
    {
      v22 = 1;
      while (v21)
      {
        v20 = ((_DWORD)v20 + v22) & v16;
        v21 = *(char ***)(v15 + 16 * v20);
        ++v22;
        if (v21 == &WebCore::JSCredentialsContainer::s_info)
          goto LABEL_14;
      }
    }
  }
  v24 = *(uint64_t **)(a2 + 56);
  Structure = WebCore::JSCredentialsContainerPrototype::createStructure(v24, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSCredentialsContainerPrototype::create((WebCore::JSCredentialsContainerPrototype *)v24, Structure, v26, v27);
  v29 = WebCore::JSCredentialsContainer::createStructure(v24, a2, v28);
  v23 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSCredentialsContainer::s_info);
LABEL_16:
  v30 = *(_QWORD *)(a2 + 56);
  v31 = *(_QWORD *)(v30 + 41456);
  v32 = *(_QWORD *)(v31 + 23536);
  v33 = *(_QWORD **)(v32 + 592);
  if (v33)
    goto LABEL_36;
  v34 = *(_QWORD *)(v31 + 22648);
  if (__ldaxr((unsigned __int8 *)v34))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v34))
  {
    goto LABEL_21;
  }
  MEMORY[0x19AEA534C](v34);
LABEL_21:
  v36 = *(_QWORD *)(v34 + 2824);
  if (!*(_QWORD *)(v36 + 592))
  {
    v37 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v54, "IsoSpace T");
    v53 = 0;
    MEMORY[0x19AEA3204](v37, &v54, v30 + 192, v30 + 1872, 32, 8, &v53);
    v39 = (uint64_t)v53;
    v53 = 0;
    if (v39)
      (*(void (**)(uint64_t))(*(_QWORD *)v39 + 8))(v39);
    v40 = v54;
    v54 = 0;
    if (v40)
    {
      if (*(_DWORD *)v40 == 1)
        WTF::fastFree(v40, v38);
      else
        --*(_DWORD *)v40;
    }
    v41 = *(_QWORD *)(v36 + 592);
    *(_QWORD *)(v36 + 592) = v37;
    if (v41)
      (*(void (**)(uint64_t))(*(_QWORD *)v41 + 8))(v41);
  }
  v33 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v43 = *(_QWORD *)(v32 + 592);
  *(_QWORD *)(v32 + 592) = v33;
  if (v43)
  {
    v44 = (WTF *)MEMORY[0x19AEA3528](v43, v42);
    WTF::fastFree(v44, v45);
  }
  v46 = __ldxr((unsigned __int8 *)v34);
  if (v46 != 1)
  {
    __clrex();
    goto LABEL_35;
  }
  if (__stlxr(0, (unsigned __int8 *)v34))
LABEL_35:
    WTF::Lock::unlockSlow((WTF::Lock *)v34);
LABEL_36:
  SlowCase = v33[3];
  if (SlowCase >= v33[4])
  {
    SlowCase = v33[5];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_38;
    }
    v52 = *(_QWORD *)(SlowCase + 8) ^ v33[6];
    v33[4] = SlowCase + HIDWORD(v52);
    v33[5] = SlowCase + (int)v52;
  }
  v33[3] = SlowCase + 32;
LABEL_38:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v23);
  *(_QWORD *)(SlowCase + 24) = a3;
  if (*(_BYTE *)(v30 + 755))
    __dmb(0xAu);
  v47 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE334FC8 & 1) == 0)
  {
    qword_1EE334FC0 = (uint64_t)&off_1E324F820;
    byte_1EE334FC8 = 1;
  }
  v54 = a3;
  if ((SlowCase & 8) != 0)
    v48 = (SlowCase - 112) | 1;
  else
    v48 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v48 & 1) != 0)
    v49 = v48 + 47;
  else
    v49 = *(_QWORD *)v48 + 32;
  Allocator = *(_QWORD **)(v49 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v49 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE334FC0;
  Allocator[2] = v47;
  v53 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v47 + 32), (uint64_t *)&v54, (uint64_t *)&v53);
  if (v53)
    v53[1] = 3;
  return SlowCase;
}

WTF::StringImpl *WebCore::JSCryptoPrototype::finishCreation(WebCore::JSCryptoPrototype *this, JSC::VM *a2)
{
  int *v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *result;
  WTF::StringImpl *v13;
  int v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  int v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;

  v4 = (int *)((char *)a2 + 93124);
  if (*((_BYTE *)a2 + 755))
    __dmb(0xAu);
  v5 = (char *)a2 + 41952;
  JSC::reifyStaticProperties<4u>(a2, (uint64_t)&WebCore::JSCrypto::s_info, &WebCore::JSCryptoPrototypeTableValues, this);
  v6 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)this & 0xFFFFFFFE)
                                                                                         + 0x28));
  v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 24))(v6);
  if ((v7 & 1) == 0)
  {
    WTF::AtomStringImpl::addLiteral();
    v13 = v19;
    v14 = *v4;
    *v4 = 1;
    LODWORD(v19) = -1;
    WORD2(v19) = 1;
    JSC::JSObject::deleteProperty();
    *v4 = v14;
    if (v13)
    {
      if (*(_DWORD *)v13 == 2)
        WTF::StringImpl::destroy(v13, v15);
      else
        *(_DWORD *)v13 -= 2;
    }
  }
  v8 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)this & 0xFFFFFFFE)
                                                                                         + 0x28));
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 24))(v8) & 1) != 0)
  {
    if ((v7 & 1) != 0)
      goto LABEL_6;
  }
  else
  {
    WTF::AtomStringImpl::addLiteral();
    v16 = v19;
    v17 = *v4;
    *v4 = 1;
    LODWORD(v19) = -1;
    WORD2(v19) = 1;
    JSC::JSObject::deleteProperty();
    *v4 = v17;
    if (v16)
    {
      if (*(_DWORD *)v16 == 2)
        WTF::StringImpl::destroy(v16, v18);
      else
        *(_DWORD *)v16 -= 2;
    }
  }
  if ((*(_BYTE *)(16 * (*(_DWORD *)this & 0xFFFFFFFE) + 0x10) & 3) != 0)
    JSC::Structure::flattenDictionaryStructure((JSC::Structure *)(16 * (*(_DWORD *)this & 0xFFFFFFFE)), a2, this);
LABEL_6:
  v9 = *(_QWORD *)(*(_QWORD *)v5 + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v10 = JSC::jsNontrivialString((uint64_t)a2, &v19);
  JSC::JSObject::putDirectWithoutTransition((int *)this, a2, v9, v10, 6);
  result = v19;
  v19 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      return (WTF::StringImpl *)WTF::StringImpl::destroy(result, v11);
    else
      *(_DWORD *)result -= 2;
  }
  return result;
}

_DWORD *WebCore::JSCrypto::destroy(WebCore::JSCrypto *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

uint64_t WebCore::JSCrypto::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

unint64_t WebCore::JSCrypto::createPrototype(WebCore::JSCrypto *this, JSC::JSCell **a2, WebCore::JSDOMGlobalObject *a3)
{
  unint64_t v4;
  WebCore::JSDOMGlobalObject *v5;
  JSC::Structure *v6;

  v4 = JSC::Structure::create((uint64_t *)this, (int)a2, a2[82]);
  *(_DWORD *)(v4 + 16) |= 0x80000u;
  return WebCore::JSCryptoPrototype::create(this, v4, v5, v6);
}

unint64_t WebCore::JSCryptoPrototype::create(WebCore::JSCryptoPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  unint64_t v6;
  int v7;

  v6 = JSC::allocateCell<WebCore::JSAbstractRangePrototype>((uint64_t)this);
  v7 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)v6 = a2 >> 4;
  *(_DWORD *)(v6 + 4) = v7;
  *(_QWORD *)(v6 + 8) = 0;
  WebCore::JSCryptoPrototype::finishCreation((WebCore::JSCryptoPrototype *)v6, this);
  return v6;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCrypto>,(WebCore::DOMConstructorID)710>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v18;
  unint64_t v19;
  WTF::StringImpl *v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5680);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v20) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v18 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v18);
    v5[2] = SlowCase + (int)v18;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v20, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCrypto>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 >= v9[2847])
  {
    v2 = v9[2848];
    if ((v2 & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      v2 = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_11;
    }
    v19 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v19);
    v9[2848] = v2 + (int)v19;
  }
  v9[2846] = v2 + 48;
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v20 = 0;
  v21 = v2;
  v22 = -1;
  v23 = 0x1000000;
  v24 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v20);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v20);
  v13 = v20;
  v20 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v20 = 0;
  v21 = v2;
  v22 = -1;
  v23 = 0x1000000;
  v24 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v20);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(WebCore::getDOMStructure<WebCore::JSCrypto>((WebCore::JSCrypto *)a1, (JSC::JSCell **)a2) + 48);
  v20 = 0;
  v21 = v2;
  v22 = -1;
  v23 = 0x1000000;
  v24 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v16, 14, (uint64_t)&v20);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 5680) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCryptoConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCryptoPrototype::s_info != (char **)(16
                                                      * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCrypto>,(WebCore::DOMConstructorID)710>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

unint64_t WebCore::jsCrypto_subtle(uint64_t a1, uint64_t a2)
{
  return WebCore::wrap<WebCore::SubtleCrypto>(a1, *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28), *(WTF **)(*(_QWORD *)(a2 + 24) + 24));
}

uint64_t WebCore::JSCrypto::subspaceForImpl(WebCore::JSCrypto *this, JSC::VM *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *((_QWORD *)this + 5182);
  v3 = *(_QWORD *)(v2 + 23536);
  v4 = *(_QWORD *)(v3 + 5760);
  if (v4)
    return v4;
  v7 = *(_QWORD *)(v2 + 22648);
  if (__ldaxr((unsigned __int8 *)v7))
  {
    __clrex();
LABEL_5:
    MEMORY[0x19AEA534C](v7, a2);
    goto LABEL_6;
  }
  if (__stxr(1u, (unsigned __int8 *)v7))
    goto LABEL_5;
LABEL_6:
  v9 = *(_QWORD *)(v7 + 2824);
  if (!*(_QWORD *)(v9 + 5760))
  {
    v12 = 32;
    std::make_unique[abi:sn180100]<JSC::IsoSubspace,char const(&)[11],JSC::Heap &,JSC::JSDestructibleObjectHeapCellType &,unsigned long,unsigned char const&>("IsoSpace T", (uint64_t)this + 192, (uint64_t)this + 1872, &v12, JSC::JSCell::numberOfLowerTierCells, &v13);
    v11 = *(_QWORD *)(v9 + 5760);
    *(_QWORD *)(v9 + 5760) = v13;
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  }
  v4 = WTF::fastMalloc((WTF *)0x58);
  v13 = JSC::GCClient::IsoSubspace::IsoSubspace();
  WebCore::JSCrypto::subspaceForImpl(JSC::VM &)::$_1::operator()<WebCore::ExtendedDOMClientIsoSubspaces,std::unique_ptr<JSC::GCClient::IsoSubspace>>(v3, &v13);
  std::unique_ptr<JSC::GCClient::IsoSubspace>::~unique_ptr[abi:sn180100](&v13);
  v10 = __ldxr((unsigned __int8 *)v7);
  if (v10 == 1)
  {
    if (!__stlxr(0, (unsigned __int8 *)v7))
      return v4;
  }
  else
  {
    __clrex();
  }
  WTF::Lock::unlockSlow((WTF::Lock *)v7);
  return v4;
}

uint64_t WebCore::JSCryptoOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  WTF::ConcurrentPtrHashSet *v8;
  _DWORD *v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  unsigned int v15;
  void *v16;
  uint64_t result;
  uint64_t v18;
  void *v19;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 8);
  if (!v5)
    return 0;
  v6 = *(_QWORD *)(v5 + 8);
  if (!v6)
    return 0;
  v7 = (void *)(v6 - 96);
  if (a5)
  {
    *a5 = "Reachable from ScriptExecutionContext";
    a5[1] = 38;
  }
  v8 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v9 = (_DWORD *)*((_QWORD *)v8 + 6);
  if ((_DWORD *)((char *)v8 + 56) != v9)
  {
    v10 = v9[1];
    v11 = ((unint64_t)v7 + ~((_QWORD)v7 << 32)) ^ (((unint64_t)v7 + ~((_QWORD)v7 << 32)) >> 22);
    v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
    v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
    v14 = v10 & ((v13 >> 31) ^ v13);
    v15 = v14;
    while (1)
    {
      v16 = *(void **)&v9[2 * v15 + 4];
      if (!v16)
        return 0;
      if (v7 == v16)
        goto LABEL_14;
      v15 = (v15 + 1) & v10;
      if (v15 == v14)
      {
        __break(0xC471u);
        JUMPOUT(0x19495DA74);
      }
    }
  }
  v18 = a4;
  v19 = v7;
  result = WTF::ConcurrentPtrHashSet::containsImplSlow(v8, v7);
  a4 = v18;
  v7 = v19;
  if ((_DWORD)result)
  {
LABEL_14:
    if (*(_BYTE *)(a4 + 131))
      (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v7);
    return 1;
  }
  return result;
}

uint64_t WebCore::JSCryptoOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t result;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  ++v3[4];
  result = WebCore::uncacheWrapper<WebCore::Crypto,WebCore::JSCrypto>(a3, (uint64_t)v3);
  if (v3[4] == 1)
    return (*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 16))(v3);
  --v3[4];
  return result;
}

uint64_t WebCore::toJSNewlyCreated(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  if (*(uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))*a2 == &off_1E33FE000)
    return WebCore::createWrapper<WebCore::Crypto,WebCore::Crypto>(a1, a2);
  result = 304;
  __break(0xC471u);
  return result;
}

{
  uint64_t result;

  if (*(uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))*a2 == &off_1E33AE770)
    return WebCore::createWrapper<WebCore::FileReader,WebCore::FileReader>(a1, a2);
  result = 616;
  __break(0xC471u);
  return result;
}

{
  uint64_t result;

  if (*(uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))*a2 == &off_1E3357010)
    return WebCore::createWrapper<WebCore::Geolocation,WebCore::Geolocation>(a1, a2);
  result = 330;
  __break(0xC471u);
  return result;
}

{
  uint64_t v2;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  uint64_t *v14;
  unint64_t Structure;
  JSC::Structure *v16;
  JSC::JSCell *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;

  v2 = *a2;
  if (*(void (***)(WebCore::PushNotificationEvent *__hidden))*a2 == off_1E3365F40)
  {
    v5 = *(_QWORD *)(a1 + 3296);
    if (v5)
    {
      v6 = *(_DWORD *)(v5 - 8);
      v7 = ((unint64_t)&WebCore::JSPushNotificationEvent::s_info
          + ~((_QWORD)&WebCore::JSPushNotificationEvent::s_info << 32)) ^ (((unint64_t)&WebCore::JSPushNotificationEvent::s_info
                                                                          + ~((_QWORD)&WebCore::JSPushNotificationEvent::s_info << 32)) >> 22);
      v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
      v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
      v10 = v6 & ((v9 >> 31) ^ v9);
      v11 = *(char ***)(v5 + 16 * v10);
      if (v11 == &WebCore::JSPushNotificationEvent::s_info)
      {
LABEL_7:
        v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
        if (v13)
        {
LABEL_9:
          v19 = WebCore::JSPushNotificationEvent::create(v13, (JSC::VM *)a1, a2);
          WebCore::cacheWrapper<WebCore::PushNotificationEvent,WebCore::JSPushNotificationEvent>(*(_QWORD *)(a1 + 3320), v2, v19);
          return v19;
        }
      }
      else
      {
        v12 = 1;
        while (v11)
        {
          v10 = ((_DWORD)v10 + v12) & v6;
          v11 = *(char ***)(v5 + 16 * v10);
          ++v12;
          if (v11 == &WebCore::JSPushNotificationEvent::s_info)
            goto LABEL_7;
        }
      }
    }
    v14 = *(uint64_t **)(a1 + 56);
    Structure = WebCore::JSPushNotificationEventPrototype::createStructure(v14, a1, *(JSC::JSCell **)(a1 + 656));
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v17 = (JSC::JSCell *)WebCore::JSPushNotificationEventPrototype::create((WebCore::JSPushNotificationEventPrototype *)v14, (JSC::VM *)a1, Structure, v16);
    v18 = WebCore::JSPushNotificationEvent::createStructure(v14, a1, v17);
    v13 = WebCore::cacheDOMStructure((JSCell *)a1, v18, (uint64_t)&WebCore::JSPushNotificationEvent::s_info);
    goto LABEL_9;
  }
  result = 287;
  __break(0xC471u);
  return result;
}

uint64_t WebCore::createWrapper<WebCore::Crypto,WebCore::Crypto>(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *a2;
  v5 = WebCore::getDOMStructure<WebCore::JSCrypto>(*(WebCore::JSCrypto **)(a1 + 56), (JSC::JSCell **)a1);
  v6 = WebCore::JSCrypto::create(v5, (JSC::VM *)a1, a2);
  WebCore::cacheWrapper<WebCore::Crypto,WebCore::JSCrypto>(*(_QWORD *)(a1 + 3320), v4, v6);
  return v6;
}

uint64_t WebCore::wrap<WebCore::Crypto>(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v14;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v3)
  {
    v4 = *(_DWORD *)(v3 - 8);
    v5 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v6 = 9 * ((v5 + ~(v5 << 13)) ^ ((v5 + ~(v5 << 13)) >> 8));
    v7 = (v6 ^ (v6 >> 15)) + ~((v6 ^ (v6 >> 15)) << 27);
    v8 = v4 & ((v7 >> 31) ^ v7);
    v9 = *(_DWORD **)(v3 + 16 * v8);
    if (v9 == a3)
    {
LABEL_6:
      v11 = *(_QWORD *)(v3 + 16 * v8 + 8);
      if (v11)
      {
        if ((*(_BYTE *)(v11 + 8) & 3) == 0)
        {
          v12 = *(_QWORD *)v11;
          if (*(_QWORD *)v11)
            return v12;
        }
      }
    }
    else
    {
      v10 = 1;
      while (v9)
      {
        v8 = ((_DWORD)v8 + v10) & v4;
        v9 = *(_DWORD **)(v3 + 16 * v8);
        ++v10;
        if (v9 == a3)
          goto LABEL_6;
      }
    }
  }
  ++a3[4];
  v14 = a3;
  v12 = WebCore::toJSNewlyCreated(a2, (uint64_t *)&v14);
  if (v14)
  {
    if (v14[4] == 1)
      (*(void (**)(void))(*(_QWORD *)v14 + 16))();
    else
      --v14[4];
  }
  return v12;
}

uint64_t WebCore::convertDictionary<WebCore::CryptoAlgorithmParameters>@<X0>(JSC::JSCell *this@<X1>, JSC::VM **a2@<X0>, uint64_t a3@<X8>)
{
  uint64_t Object;
  JSC::Structure *v6;
  WTF::StringImpl *v7;
  uint64_t v8;
  uint64_t result;
  JSC::VM *v10;
  WTF::StringImpl *v11;
  WTF::StringImpl *v12;
  int v13;
  uint64_t v14;
  WTF::StringImpl *v15;
  WTF::StringImpl *v16;
  WTF::StringImpl *v17;
  int v18;
  JSC::VM *v19;
  WTF::StringImpl *v20;
  uint64_t v21;

  v19 = a2[7];
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
    goto LABEL_9;
  if (((unint64_t)this & 0xFFFE000000000002) != 0 || (Object = JSC::JSCell::getObject(this)) == 0)
  {
    result = JSC::throwTypeError();
    goto LABEL_10;
  }
  v6 = (JSC::Structure *)Object;
  WTF::AtomStringImpl::addLiteral();
  v8 = JSC::JSObject::get(v6, (JSC::JSGlobalObject *)a2, (unint64_t)v17);
  if (v17)
  {
    if (*(_DWORD *)v17 == 2)
      WTF::StringImpl::destroy(v17, v7);
    else
      *(_DWORD *)v17 -= 2;
  }
  if (*((_DWORD *)v19 + 20))
  {
    result = JSC::VM::hasExceptionsAfterHandlingTraps(v19);
    if ((_DWORD)result)
      goto LABEL_10;
  }
  if (v8 == 10)
  {
LABEL_9:
    result = (uint64_t)WebCore::throwRequiredMemberTypeError((int)a2, (int)&v19, "name", 5, "CryptoAlgorithmParameters", 26, "DOMString", 10);
LABEL_10:
    *(_DWORD *)(a3 + 24) = 1;
    return result;
  }
  v21 = v8;
  v10 = a2[7];
  if ((v8 & 0xFFFE000000000002) == 0 && *(_BYTE *)(v8 + 5) == 2)
  {
    v11 = *(WTF::StringImpl **)(v8 + 8);
    if ((v11 & 1) != 0)
    {
      v11 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v8, (JSC::JSGlobalObject *)a2);
      if (!v11)
        goto LABEL_16;
    }
    else if (!v11)
    {
LABEL_16:
      v20 = v11;
      goto LABEL_17;
    }
    *(_DWORD *)v11 += 2;
    goto LABEL_16;
  }
  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v21, (JSC::JSGlobalObject *)a2);
LABEL_17:
  if (*((_DWORD *)v10 + 20))
  {
    v12 = v20;
    if (JSC::VM::hasExceptionsAfterHandlingTraps(v10))
    {
      v18 = 1;
      v20 = 0;
      if (v12)
      {
        if (*(_DWORD *)v12 == 2)
          WTF::StringImpl::destroy(v12, v16);
        else
          *(_DWORD *)v12 -= 2;
      }
      v12 = 0;
      v13 = 1;
      v14 = 1;
      goto LABEL_22;
    }
  }
  else
  {
    v12 = v20;
  }
  v18 = 0;
  v17 = 0;
  *(_QWORD *)a3 = off_1E3226840;
  if (v12)
    *(_DWORD *)v12 += 2;
  v13 = 0;
  v14 = 0;
  *(_QWORD *)(a3 + 8) = v12;
LABEL_22:
  *(_DWORD *)(a3 + 24) = v13;
  result = ((uint64_t (*)(uint64_t *, WTF::StringImpl **))off_1E324FDC0[v14])(&v21, &v17);
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      return WTF::StringImpl::destroy(v12, v15);
    else
      *(_DWORD *)v12 -= 2;
  }
  return result;
}

unsigned int *WebCore::JSCryptoKey::destroy(WebCore::JSCryptoKey *this, JSCell *a2)
{
  unsigned int *result;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;

  result = (unsigned int *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    v4 = result + 2;
    do
    {
      v5 = __ldaxr(v4);
      v6 = v5 - 1;
    }
    while (__stlxr(v6, v4));
    if (!v6)
    {
      atomic_store(1u, result + 2);
      return (unsigned int *)(*(uint64_t (**)(unsigned int *))(*(_QWORD *)result + 8))(result);
    }
  }
  return result;
}

uint64_t WebCore::JSCryptoKey::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCryptoKey::visitChildren(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v7;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  result = JSC::JSObject::visitChildren();
  v5 = *(_QWORD *)(a1 + 32);
  if ((v5 & 0xFFFE000000000002) != 0 || v5 == 0)
    goto LABEL_6;
  if ((v5 & 8) != 0)
  {
    if ((*(_BYTE *)(v5 - 79) & 1) != 0)
      goto LABEL_16;
  }
  else
  {
    v9 = v5 & 0xFFFFFFFFFFFFC000;
    if (*(_DWORD *)(v5 & 0xFFFFFFFFFFFFC000 | 0x20) != *(_DWORD *)(a2 + 132))
    {
      v11 = *(_QWORD *)(a1 + 32);
      v12 = v5 & 0xFFFFFFFFFFFFC000;
      result = JSC::MarkedBlock::aboutToMarkSlow((JSC::MarkedBlock *)(v5 & 0xFFFFFFFFFFFFC000));
      v5 = v11;
      v9 = v12;
    }
    if (((*(_QWORD *)(v9 + 8 * ((v5 >> 10) & 0xF) + 40) >> (v5 >> 4)) & 1) != 0)
    {
LABEL_16:
      if (!*(_QWORD *)(a2 + 168))
        goto LABEL_6;
    }
  }
  result = JSC::SlotVisitor::appendSlow();
LABEL_6:
  v7 = *(_QWORD *)(a1 + 40);
  if ((v7 & 0xFFFE000000000002) == 0 && v7 != 0)
  {
    if ((v7 & 8) != 0)
    {
      if ((*(_BYTE *)(v7 - 79) & 1) == 0)
        return JSC::SlotVisitor::appendSlow();
    }
    else
    {
      v10 = v7 & 0xFFFFFFFFFFFFC000;
      if (*(_DWORD *)(v7 & 0xFFFFFFFFFFFFC000 | 0x20) != *(_DWORD *)(a2 + 132))
      {
        result = JSC::MarkedBlock::aboutToMarkSlow((JSC::MarkedBlock *)(v7 & 0xFFFFFFFFFFFFC000));
        v10 = v7 & 0xFFFFFFFFFFFFC000;
      }
      if (((*(_QWORD *)(v10 + 8 * ((v7 >> 10) & 0xF) + 40) >> (v7 >> 4)) & 1) == 0)
        return JSC::SlotVisitor::appendSlow();
    }
    if (*(_QWORD *)(a2 + 168))
      return JSC::SlotVisitor::appendSlow();
  }
  return result;
}

uint64_t WebCore::JSCryptoKey::visitChildren(WebCore::JSCryptoKey *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    result = JSC::JSObject::visitChildren();
    if ((*((_QWORD *)this + 4) & 0xFFFE000000000002) == 0)
      result = (*(uint64_t (**)(JSC::JSCell *))(*(_QWORD *)a2 + 24))(a2);
    if ((*((_QWORD *)this + 5) & 0xFFFE000000000002) == 0)
      result = (*(uint64_t (**)(JSC::JSCell *))(*(_QWORD *)a2 + 24))(a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSCryptoKeyPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCryptoKeyPrototype::create(WebCore::JSCryptoKeyPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<5u>(this, (uint64_t)&WebCore::JSCryptoKey::s_info, &WebCore::JSCryptoKeyPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCryptoKey>,(WebCore::DOMConstructorID)329>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2632);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCryptoKey>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSCryptoKey::s_info + ~((_QWORD)&WebCore::JSCryptoKey::s_info << 32)) ^ (((unint64_t)&WebCore::JSCryptoKey::s_info + ~((_QWORD)&WebCore::JSCryptoKey::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSCryptoKey::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSCryptoKey::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSCryptoKeyPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSCryptoKeyPrototype::create((WebCore::JSCryptoKeyPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSCryptoKey::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSCryptoKey::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2632) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCryptoKeyConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCryptoKeyPrototype::s_info != (char **)(16
                                                         * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCryptoKey>,(WebCore::DOMConstructorID)329>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::jsCryptoKey_type(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned int v12;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = (uint64_t *)(v2 + 41968);
  v4 = *(unsigned __int8 *)(*((_QWORD *)a2 + 3) + 13);
  if ((byte_1EE334F5A & 1) == 0)
  {
    dword_1ECE77330 += 2;
    unk_1EE335030 = &dword_1ECE77330;
    dword_1ECE77350 += 2;
    unk_1EE335038 = &dword_1ECE77350;
    dword_1ECE77370 += 2;
    unk_1EE335040 = &dword_1ECE77370;
    byte_1EE334F5A = 1;
  }
  v5 = *(_QWORD *)&_MergedGlobals_443[8 * v4 + 216];
  if (!v5)
    return *v3;
  v6 = *(_DWORD *)v5;
  v7 = *(_DWORD *)(v5 + 4);
  *(_DWORD *)v5 += 2;
  if (v7)
  {
    if (v7 != 1)
    {
LABEL_6:
      v8 = *(_QWORD *)(v2 + 64760);
      if (!v8 || v5 != *(_QWORD *)(v8 + 8))
      {
        v8 = JSC::jsStringWithCacheSlowCase();
        v6 = *(_DWORD *)v5 - 2;
      }
      goto LABEL_9;
    }
    v10 = *(unsigned __int8 **)(v5 + 8);
    if ((*(_BYTE *)(v5 + 16) & 4) != 0)
    {
      v11 = *v10;
    }
    else
    {
      v12 = *(unsigned __int16 *)v10;
      if (v12 > 0xFF)
        goto LABEL_6;
      v11 = v12;
    }
    v8 = *(_QWORD *)(v2 + 8 * v11 + 42216);
  }
  else
  {
    v8 = *v3;
  }
LABEL_9:
  if (v6)
    *(_DWORD *)v5 = v6;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v5, a2);
  return v8;
}

uint64_t WebCore::jsCryptoKey_extractable(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(*(_QWORD *)(a2 + 24) + 14))
    return 7;
  else
    return 6;
}

uint64_t WebCore::jsCryptoKey_usages(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  JSC::VM *v5;
  uint64_t v6;
  void *v7;
  WTF *v8;
  uint64_t v9;
  WTF *v11;
  int v12;

  v2 = *(_QWORD *)(a2 + 40);
  if (!v2)
  {
    v5 = *(JSC::VM **)(a1 + 56);
    v6 = *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28);
    WebCore::CryptoKey::usages(*(char **)(a2 + 24), (uint64_t)&v11);
    v2 = WebCore::JSConverter<WebCore::IDLSequence<WebCore::IDLEnumeration<WebCore::CryptoKeyUsage>>>::convert<WebCore::CryptoKeyUsage,0ul>(a1, v6, (unsigned int **)&v11);
    v8 = v11;
    if (v11)
    {
      v11 = 0;
      v12 = 0;
      WTF::fastFree(v8, v7);
    }
    if (*((_DWORD *)v5 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v5) & 1) != 0)
    {
      return 0;
    }
    else
    {
      v9 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a2 + 40) = v2;
      if ((v2 & 0xFFFE000000000002) == 0 && v2 && *(_DWORD *)(v9 + 760) >= *(unsigned __int8 *)(a2 + 7))
        JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(v9 + 192), (const JSCell *)a2);
    }
  }
  return v2;
}

uint64_t WebCore::JSCryptoKeyOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  void *v5;
  WTF::ConcurrentPtrHashSet *v6;
  _DWORD *v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unsigned int v13;
  void *v14;
  uint64_t result;
  uint64_t v16;
  void *v17;

  v5 = *(void **)(*(_QWORD *)a2 + 24);
  if (a5)
  {
    *a5 = "Reachable from CryptoKey";
    a5[1] = 25;
  }
  v6 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v7 = (_DWORD *)*((_QWORD *)v6 + 6);
  if ((_DWORD *)((char *)v6 + 56) == v7)
  {
    v16 = a4;
    v17 = v5;
    result = WTF::ConcurrentPtrHashSet::containsImplSlow(v6, v5);
    a4 = v16;
    v5 = v17;
    if ((_DWORD)result)
    {
LABEL_12:
      if (*(_BYTE *)(a4 + 131))
        (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v5);
      return 1;
    }
  }
  else
  {
    v8 = v7[1];
    v9 = ((unint64_t)v5 + ~((_QWORD)v5 << 32)) ^ (((unint64_t)v5 + ~((_QWORD)v5 << 32)) >> 22);
    v10 = 9 * ((v9 + ~(v9 << 13)) ^ ((v9 + ~(v9 << 13)) >> 8));
    v11 = (v10 ^ (v10 >> 15)) + ~((v10 ^ (v10 >> 15)) << 27);
    v12 = v8 & ((v11 >> 31) ^ v11);
    v13 = v12;
    while (1)
    {
      v14 = *(void **)&v7[2 * v13 + 4];
      if (!v14)
        return 0;
      if (v5 == v14)
        goto LABEL_12;
      v13 = (v13 + 1) & v8;
      if (v13 == v12)
      {
        __break(0xC471u);
        JUMPOUT(0x19495FBA8);
      }
    }
  }
  return result;
}

_QWORD *WebCore::JSCryptoKeyOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  int v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  BOOL v25;
  unsigned int v26;
  unsigned int v27;
  _QWORD *result;

  v3 = *(unsigned int **)(*(_QWORD *)a2 + 24);
  v4 = v3 + 2;
  do
    v5 = __ldaxr(v4);
  while (__stlxr(v5 + 1, v4));
  v8 = *(_QWORD *)(a3 + 32);
  v6 = (uint64_t *)(a3 + 32);
  v7 = v8;
  if (!v8)
    goto LABEL_18;
  v9 = *(_DWORD *)(v7 - 8);
  v10 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
  v11 = 9 * ((v10 + ~(v10 << 13)) ^ ((v10 + ~(v10 << 13)) >> 8));
  v12 = (v11 ^ (v11 >> 15)) + ~((v11 ^ (v11 >> 15)) << 27);
  v13 = v9 & ((v12 >> 31) ^ v12);
  v14 = *(unsigned int **)(v7 + 16 * v13);
  if (v14 != v3)
  {
    v15 = 1;
    while (v14)
    {
      v13 = ((_DWORD)v13 + v15) & v9;
      v14 = *(unsigned int **)(v7 + 16 * v13);
      ++v15;
      if (v14 == v3)
        goto LABEL_8;
    }
    v13 = *(unsigned int *)(v7 - 4);
  }
  if (v13 == *(_DWORD *)(v7 - 4))
    goto LABEL_18;
LABEL_8:
  v16 = (_QWORD *)(v7 + 16 * v13);
  *v16 = -1;
  v19 = v16[1];
  v18 = v16 + 1;
  v17 = v19;
  if (v19)
  {
    *(_QWORD *)(v17 + 8) = 3;
    *v18 = 0;
  }
  ++*(_DWORD *)(*v6 - 16);
  v20 = *v6;
  v21 = *v6 ? *(_DWORD *)(v20 - 12) - 1 : -1;
  *(_DWORD *)(v20 - 12) = v21;
  v22 = *v6;
  if (*v6
    && ((v23 = 6 * *(_DWORD *)(v22 - 12), v24 = *(_DWORD *)(v22 - 4), v23 < v24) ? (v25 = v24 >= 9) : (v25 = 0), v25))
  {
    result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v6, v24 >> 1, 0);
    if (!v3)
      return result;
  }
  else
  {
LABEL_18:
    if (!v3)
      return result;
  }
  do
  {
    v26 = __ldaxr(v4);
    v27 = v26 - 1;
  }
  while (__stlxr(v27, v4));
  if (!v27)
  {
    atomic_store(1u, v3 + 2);
    return (_QWORD *)(*(uint64_t (**)(unsigned int *))(*(_QWORD *)v3 + 8))(v3);
  }
  return result;
}

unint64_t WebCore::createWrapper<WebCore::CryptoKey,WebCore::CryptoKey>(uint64_t a1, WTF **a2)
{
  WTF *v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char **v11;
  int v12;
  unint64_t v13;
  uint64_t *v14;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v16;
  JSC::Structure *v17;
  JSC::JSCell *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  WTF *v30;
  uint64_t v31;
  uint64_t v32;
  WTF *v33;
  void *v34;
  int v35;
  unint64_t SlowCase;
  WTF *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *Allocator;
  unint64_t v43;
  _QWORD *v44;
  WTF *v45;

  v4 = *a2;
  v5 = *(_QWORD *)(a1 + 3296);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)&WebCore::JSCryptoKey::s_info + ~((_QWORD)&WebCore::JSCryptoKey::s_info << 32)) ^ (((unint64_t)&WebCore::JSCryptoKey::s_info + ~((_QWORD)&WebCore::JSCryptoKey::s_info << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(char ***)(v5 + 16 * v10);
    if (v11 == &WebCore::JSCryptoKey::s_info)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
        goto LABEL_8;
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(char ***)(v5 + 16 * v10);
        ++v12;
        if (v11 == &WebCore::JSCryptoKey::s_info)
          goto LABEL_6;
      }
    }
  }
  v14 = *(uint64_t **)(a1 + 56);
  Structure = WebCore::JSCryptoKeyPrototype::createStructure(v14, a1, *(JSC::JSCell **)(a1 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v18 = (JSC::JSCell *)WebCore::JSCryptoKeyPrototype::create((WebCore::JSCryptoKeyPrototype *)v14, Structure, v16, v17);
  v19 = WebCore::JSCryptoKey::createStructure(v14, a1, v18);
  v13 = WebCore::cacheDOMStructure((JSCell *)a1, v19, (uint64_t)&WebCore::JSCryptoKey::s_info);
LABEL_8:
  v20 = *(_QWORD *)(a1 + 56);
  v21 = *(_QWORD *)(v20 + 41456);
  v22 = *(_QWORD *)(v21 + 23536);
  v23 = *(_QWORD **)(v22 + 2672);
  if (v23)
    goto LABEL_28;
  v24 = *(_QWORD *)(v21 + 22648);
  if (__ldaxr((unsigned __int8 *)v24))
  {
    __clrex();
  }
  else if (!__stxr(1u, (unsigned __int8 *)v24))
  {
    goto LABEL_13;
  }
  MEMORY[0x19AEA534C](v24);
LABEL_13:
  v26 = *(_QWORD *)(v24 + 2824);
  if (!*(_QWORD *)(v26 + 2672))
  {
    v27 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v45, "IsoSpace T");
    v44 = 0;
    MEMORY[0x19AEA3204](v27, &v45, v20 + 192, v20 + 1872, 48, 8, &v44);
    v29 = (uint64_t)v44;
    v44 = 0;
    if (v29)
      (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
    v30 = v45;
    v45 = 0;
    if (v30)
    {
      if (*(_DWORD *)v30 == 1)
        WTF::fastFree(v30, v28);
      else
        --*(_DWORD *)v30;
    }
    v31 = *(_QWORD *)(v26 + 2672);
    *(_QWORD *)(v26 + 2672) = v27;
    if (v31)
      (*(void (**)(uint64_t))(*(_QWORD *)v31 + 8))(v31);
  }
  v23 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v32 = *(_QWORD *)(v22 + 2672);
  *(_QWORD *)(v22 + 2672) = v23;
  if (v32)
  {
    v33 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v33, v34);
  }
  v35 = __ldxr((unsigned __int8 *)v24);
  if (v35 != 1)
  {
    __clrex();
    goto LABEL_27;
  }
  if (__stlxr(0, (unsigned __int8 *)v24))
LABEL_27:
    WTF::Lock::unlockSlow((WTF::Lock *)v24);
LABEL_28:
  SlowCase = v23[3];
  if (SlowCase < v23[4])
  {
LABEL_29:
    v23[3] = SlowCase + 48;
    goto LABEL_30;
  }
  SlowCase = v23[5];
  if ((SlowCase & 1) == 0)
  {
    v43 = *(_QWORD *)(SlowCase + 8) ^ v23[6];
    v23[4] = SlowCase + HIDWORD(v43);
    v23[5] = SlowCase + (int)v43;
    goto LABEL_29;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_30:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v13);
  v37 = *a2;
  *a2 = 0;
  *(_QWORD *)(SlowCase + 32) = 0;
  *(_QWORD *)(SlowCase + 40) = 0;
  *(_QWORD *)(SlowCase + 24) = v37;
  if (*(_BYTE *)(v20 + 755))
    __dmb(0xAu);
  v38 = *(_QWORD *)(a1 + 3320);
  if ((byte_1EE334FE8 & 1) == 0)
  {
    qword_1EE334FE0 = (uint64_t)&off_1E324F880;
    byte_1EE334FE8 = 1;
  }
  v45 = v4;
  if ((SlowCase & 8) != 0)
    v39 = (SlowCase - 112) | 1;
  else
    v39 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v39 & 1) != 0)
    v40 = v39 + 47;
  else
    v40 = *(_QWORD *)v39 + 32;
  Allocator = *(_QWORD **)(v40 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v40 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE334FE0;
  Allocator[2] = v38;
  v44 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v38 + 32), (uint64_t *)&v45, (uint64_t *)&v44);
  if (v44)
    v44[1] = 3;
  return SlowCase;
}

unint64_t WebCore::toJS(WebCore *this, JSC::JSGlobalObject *a2, WebCore::JSDOMGlobalObject *a3, WebCore::CryptoKey *a4)
{
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  WebCore::JSDOMGlobalObject *v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int v19;
  WTF *v21;

  v4 = *(_QWORD *)(*((_QWORD *)a2 + 415) + 32);
  if (v4)
  {
    v5 = *(_DWORD *)(v4 - 8);
    v6 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v7 = 9 * ((v6 + ~(v6 << 13)) ^ ((v6 + ~(v6 << 13)) >> 8));
    v8 = (v7 ^ (v7 >> 15)) + ~((v7 ^ (v7 >> 15)) << 27);
    v9 = v5 & ((v8 >> 31) ^ v8);
    v10 = *(WebCore::JSDOMGlobalObject **)(v4 + 16 * v9);
    if (v10 == a3)
    {
LABEL_6:
      v12 = *(_QWORD *)(v4 + 16 * v9 + 8);
      if (v12)
      {
        if ((*(_BYTE *)(v12 + 8) & 3) == 0)
        {
          v13 = *(_QWORD *)v12;
          if (*(_QWORD *)v12)
            return v13;
        }
      }
    }
    else
    {
      v11 = 1;
      while (v10)
      {
        v9 = ((_DWORD)v9 + v11) & v5;
        v10 = *(WebCore::JSDOMGlobalObject **)(v4 + 16 * v9);
        ++v11;
        if (v10 == a3)
          goto LABEL_6;
      }
    }
  }
  v14 = (unsigned int *)((char *)a3 + 8);
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 + 1, v14));
  v21 = a3;
  v13 = WebCore::createWrapper<WebCore::CryptoKey,WebCore::CryptoKey>((uint64_t)a2, &v21);
  v16 = (unsigned int *)v21;
  v21 = 0;
  if (v16)
  {
    v17 = v16 + 2;
    do
    {
      v18 = __ldaxr(v17);
      v19 = v18 - 1;
    }
    while (__stlxr(v19, v17));
    if (!v19)
    {
      atomic_store(1u, v16 + 2);
      (*(void (**)(unsigned int *))(*(_QWORD *)v16 + 8))(v16);
    }
  }
  return v13;
}

unint64_t WebCore::convertDictionaryToJS(uint64_t a1, JSC::JSGlobalObject *a2, WebCore::JSDOMGlobalObject **a3)
{
  uint64_t v5;
  unint64_t v6;
  size_t v7;
  unint64_t v8;
  int v9;
  WebCore *v10;
  WebCore::CryptoKey *v11;
  WebCore::JSDOMGlobalObject *v12;
  unint64_t v13;
  WTF::StringImpl *v14;
  WTF::StringImpl *v15;
  unint64_t v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v20;
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;

  v5 = *(_QWORD *)(a1 + 56);
  v6 = JSC::StructureCache::emptyObjectStructureForPrototype();
  v7 = 8 * *(unsigned __int8 *)(v6 + 14);
  v8 = JSC::allocateCell<JSC::JSFinalObject>(v5, v7 + 16);
  v9 = *(_DWORD *)(v6 + 8);
  *(_DWORD *)v8 = v6 >> 4;
  *(_DWORD *)(v8 + 4) = v9;
  *(_QWORD *)(v8 + 8) = 0;
  bzero((void *)(v8 + 16), v7);
  if (*(_BYTE *)(v5 + 755))
    __dmb(0xAu);
  v12 = a3[1];
  if (v12)
  {
    v13 = WebCore::toJS(v10, a2, v12, v11);
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v14 = v20;
    v20 = 0;
    v21 = v8;
    v22 = -1;
    v23 = 0x1000000;
    v24 = 0;
    v10 = (WebCore *)JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v14, v13, 0, (uint64_t)&v20);
    if (v14)
    {
      if (*(_DWORD *)v14 == 2)
        v10 = (WebCore *)WTF::StringImpl::destroy(v14, v15);
      else
        *(_DWORD *)v14 -= 2;
    }
  }
  if (*a3)
  {
    v16 = WebCore::toJS(v10, a2, *a3, v11);
    if (*(_DWORD *)(v5 + 80) && (JSC::VM::hasExceptionsAfterHandlingTraps((JSC::VM *)v5) & 1) != 0)
      return 0;
    WTF::AtomStringImpl::addLiteral();
    v17 = v20;
    v20 = 0;
    v21 = v8;
    v22 = -1;
    v23 = 0x1000000;
    v24 = 0;
    JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v8, (JSC::VM *)v5, (unint64_t)v17, v16, 0, (uint64_t)&v20);
    if (v17)
    {
      if (*(_DWORD *)v17 == 2)
        WTF::StringImpl::destroy(v17, v18);
      else
        *(_DWORD *)v17 -= 2;
    }
  }
  return v8;
}

uint64_t WebCore::convertEnumerationToJS<WebCore::CryptoKeyUsage>(uint64_t a1, WTF::StringImpl *a2)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)(a1 + 41968);
  {
    WebCore::convertEnumerationToString(WebCore::CryptoKeyUsage)::$_0::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CryptoKeyUsage)::$_1::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CryptoKeyUsage)::$_2::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CryptoKeyUsage)::$_3::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CryptoKeyUsage)::$_4::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CryptoKeyUsage)::$_5::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CryptoKeyUsage)::values[0] = (uint64_t)&WebCore::convertEnumerationToString(WebCore::CryptoKeyUsage)::$_0::operator() const(void)::impl;
    unk_1EE2F4540 = &WebCore::convertEnumerationToString(WebCore::CryptoKeyUsage)::$_1::operator() const(void)::impl;
    qword_1EE2F4548 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::CryptoKeyUsage)::$_2::operator() const(void)::impl;
    unk_1EE2F4550 = &WebCore::convertEnumerationToString(WebCore::CryptoKeyUsage)::$_3::operator() const(void)::impl;
    qword_1EE2F4558 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::CryptoKeyUsage)::$_4::operator() const(void)::impl;
    unk_1EE2F4560 = &WebCore::convertEnumerationToString(WebCore::CryptoKeyUsage)::$_5::operator() const(void)::impl;
    WebCore::convertEnumerationToString(WebCore::CryptoKeyUsage)::$_6::operator() const(void)::impl += 2;
    WebCore::convertEnumerationToString(WebCore::CryptoKeyUsage)::$_7::operator() const(void)::impl += 2;
    qword_1EE2F4568 = (uint64_t)&WebCore::convertEnumerationToString(WebCore::CryptoKeyUsage)::$_6::operator() const(void)::impl;
    unk_1EE2F4570 = &WebCore::convertEnumerationToString(WebCore::CryptoKeyUsage)::$_7::operator() const(void)::impl;
  }
  v3 = WebCore::convertEnumerationToString(WebCore::CryptoKeyUsage)::values[(int)a2];
  if (!v3)
    return *v2;
  v4 = *(_DWORD *)v3;
  v5 = *(_DWORD *)(v3 + 4);
  *(_DWORD *)v3 += 2;
  if (v5)
  {
    if (v5 != 1)
    {
LABEL_6:
      v6 = *(_QWORD *)(a1 + 64760);
      if (!v6 || v3 != *(_QWORD *)(v6 + 8))
      {
        v6 = JSC::jsStringWithCacheSlowCase();
        v4 = *(_DWORD *)v3 - 2;
      }
      goto LABEL_9;
    }
    v8 = *(unsigned __int8 **)(v3 + 8);
    if ((*(_BYTE *)(v3 + 16) & 4) != 0)
    {
      v9 = *v8;
    }
    else
    {
      v10 = *(unsigned __int16 *)v8;
      if (v10 > 0xFF)
        goto LABEL_6;
      v9 = v10;
    }
    v6 = *(_QWORD *)(a1 + 8 * v9 + 42216);
  }
  else
  {
    v6 = *v2;
  }
LABEL_9:
  if (v4)
    *(_DWORD *)v3 = v4;
  else
    WTF::StringImpl::destroy((WTF::StringImpl *)v3, a2);
  return v6;
}

uint64_t WebCore::parseEnumeration<WebCore::CryptoKeyUsage>(JSC::JSGlobalObject *a1, unint64_t this)
{
  JSC::JSGlobalObject *v3;
  uint64_t v4;
  const char *v5;
  int v6;
  unint64_t v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  int v11;
  uint64_t v12;
  char **v13;
  uint64_t v16;
  uint16x8_t v19;
  uint16x8_t v20;
  uint16x8_t v21;
  uint16x8_t v24;
  uint64_t v25;
  unint64_t v26;

  v3 = a1;
  v26 = this;
  if ((this & 0xFFFE000000000002) != 0 || *(_BYTE *)(this + 5) != 2)
  {
    JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v26, a1);
    v4 = v25;
    if (v25)
      goto LABEL_7;
    return 0;
  }
  v4 = *(_QWORD *)(this + 8);
  if ((v4 & 1) == 0)
  {
    if (!v4)
      goto LABEL_6;
    goto LABEL_5;
  }
  v4 = *(_QWORD *)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)this, v3);
  if (v4)
LABEL_5:
    *(_DWORD *)v4 += 2;
LABEL_6:
  if (!v4)
    return 0;
LABEL_7:
  v5 = *(const char **)(v4 + 8);
  v6 = *(_DWORD *)(v4 + 4);
  v7 = ((unint64_t)*(unsigned int *)(v4 + 16) >> 2) & 1;
  v8 = v6 != 7;
  if (v5 == "decrypt" || v6 != 7)
  {
    if (v5 == "decrypt" && v6 == 7)
      goto LABEL_58;
    if (v5 == "deriveBits" || v6 != 10)
    {
      if (v5 != "deriveBits" || v6 != 10)
      {
        v9 = v6 == 9;
        v10 = v6 != 9;
        if (v5 != "deriveKey" && v6 == 9)
        {
          if ((_DWORD)v7)
          {
            if (*v5 == 100 && *(_DWORD *)(v5 + 1) == 1986622053 && *(_DWORD *)(v5 + 5) == 2036681573)
              goto LABEL_136;
          }
          else if (*(_WORD *)v5 == 100)
          {
            v24 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 2), (int16x8_t)xmmword_1968BD250);
            v24.i16[0] = vminvq_u16(v24);
            if (v24.i32[0])
              goto LABEL_136;
          }
          v10 = 0;
          v11 = 9;
          goto LABEL_14;
        }
        if (v5 != "deriveKey")
        {
          v11 = *(_DWORD *)(v4 + 4);
          goto LABEL_14;
        }
        v11 = *(_DWORD *)(v4 + 4);
        if (v6 != 9)
          goto LABEL_14;
LABEL_136:
        v13 = &off_1E324EE10;
        goto LABEL_59;
      }
LABEL_41:
      v13 = &off_1E324EDF8;
      goto LABEL_59;
    }
    if ((_DWORD)v7)
    {
      if (*v5 == 100 && *(_QWORD *)(v5 + 1) == 0x7469426576697265 && *(_QWORD *)(v5 + 2) == 0x7374694265766972)
        goto LABEL_41;
    }
    else if (*(_WORD *)v5 == 100)
    {
      v19 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 2), (int16x8_t)xmmword_1968BD230);
      v19.i16[0] = vminvq_u16(v19);
      v9 = v19.i8[0];
      if (v19.i32[0])
      {
        v20 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 4), (int16x8_t)xmmword_1968BD240);
        v20.i16[0] = vminvq_u16(v20);
        v9 = v20.i8[0];
        if (v20.i32[0])
          goto LABEL_41;
      }
LABEL_77:
      v10 = 1;
      v11 = 10;
      goto LABEL_14;
    }
    v9 = 0;
    goto LABEL_77;
  }
  if (!(_DWORD)v7)
  {
    if (*(_WORD *)v5 != 100)
      goto LABEL_13;
    if (*(_QWORD *)(v5 + 2) != 0x79007200630065 || *(_QWORD *)(v5 + 6) != 0x74007000790072)
      goto LABEL_13;
LABEL_58:
    v13 = &WebCore::parseEnumerationFromString<WebCore::CryptoKeyUsage>(WTF::String const&)::mappings;
    goto LABEL_59;
  }
  if (*v5 == 100 && *(_DWORD *)(v5 + 1) == 2037539685 && *(_DWORD *)(v5 + 3) == 1953528178)
    goto LABEL_58;
LABEL_13:
  v8 = 0;
  v9 = 0;
  v10 = 1;
  v11 = 7;
LABEL_14:
  v12 = v7 << 32;
  if (v5 == "encrypt" || v8)
  {
    if (v5 == "encrypt" && v6 == 7)
      goto LABEL_44;
  }
  else
  {
    if (!v11)
      goto LABEL_44;
    if ((_DWORD)v7)
    {
      if (*v5 != 101 || *(_DWORD *)(v5 + 1) != 2037539694 || *(_DWORD *)(v5 + 3) != 1953528178)
        goto LABEL_21;
LABEL_44:
      v13 = &off_1E324EE28;
      goto LABEL_59;
    }
    if (*(_WORD *)v5 != 101)
    {
      v12 = 0;
      goto LABEL_21;
    }
    v12 = 0;
    if (*(_QWORD *)(v5 + 2) == 0x7900720063006ELL && *(_QWORD *)(v5 + 6) == 0x74007000790072)
      goto LABEL_44;
  }
LABEL_21:
  if (v5 == "sign" || v11 != 4)
  {
    if (v5 == "sign" && v11 == 4)
      goto LABEL_27;
  }
  else
  {
    if (v12)
    {
      if (*v5 == 115 && *(_WORD *)(v5 + 1) == 26473 && *((_WORD *)v5 + 1) == 28263)
      {
LABEL_27:
        v13 = &off_1E324EE40;
LABEL_59:
        v16 = *((unsigned int *)v13 + 4) | 0x100000000;
        goto LABEL_60;
      }
      goto LABEL_80;
    }
    if (*(_WORD *)v5 != 115)
    {
      v12 = 0;
LABEL_80:
      v11 = 4;
      goto LABEL_81;
    }
    v12 = 0;
    v11 = 4;
    if (*(_DWORD *)(v5 + 2) == 6750313 && *((_DWORD *)v5 + 1) == 7209063)
      goto LABEL_27;
  }
LABEL_81:
  if (v5 == "unwrapKey")
    v10 = 1;
  if (v10)
  {
    if (v5 != "unwrapKey")
      v9 = 0;
    if (v9)
      goto LABEL_89;
  }
  else
  {
    if (!v11)
    {
LABEL_89:
      v13 = &off_1E324EE58;
      goto LABEL_59;
    }
    if (v12)
    {
      if (*v5 == 117 && *(_DWORD *)(v5 + 1) == 1634891630 && *(_DWORD *)(v5 + 5) == 2036681584)
        goto LABEL_89;
    }
    else
    {
      if (*(_WORD *)v5 == 117)
      {
        v21 = (uint16x8_t)vceqq_s16(*(int16x8_t *)(v5 + 2), (int16x8_t)xmmword_1968BD260);
        v21.i16[0] = vminvq_u16(v21);
        if (v21.i32[0])
          goto LABEL_89;
      }
      v12 = 0;
    }
  }
  if (v5 == "verify" || v11 != 6)
  {
    if (v5 == "verify" && v11 == 6)
      goto LABEL_99;
  }
  else if (v12)
  {
    if (*v5 == 118 && *(_DWORD *)(v5 + 1) == 1718186597 && *(_DWORD *)(v5 + 2) == 2036754802)
    {
LABEL_99:
      v13 = &off_1E324EE70;
      goto LABEL_59;
    }
    v11 = 6;
    v12 = 1;
  }
  else if (*(_WORD *)v5 == 118)
  {
    v12 = 0;
    v11 = 6;
    if (*(_QWORD *)(v5 + 2) == 0x66006900720065 && *(_QWORD *)(v5 + 4) == 0x79006600690072)
      goto LABEL_99;
  }
  else
  {
    v12 = 0;
    v11 = 6;
  }
  if (v5 == "wrapKey")
    v8 = 1;
  if (v8)
  {
    if (v6 == 7 && v5 == "wrapKey")
      goto LABEL_109;
  }
  else
  {
    if (!v11)
    {
LABEL_109:
      v13 = &off_1E324EE88;
      goto LABEL_59;
    }
    if (v12)
    {
      if (*v5 == 119 && *(_DWORD *)(v5 + 1) == 1265656178 && *(_DWORD *)(v5 + 3) == 2036681584)
        goto LABEL_109;
    }
    else if (*(_WORD *)v5 == 119
           && *(_QWORD *)(v5 + 6) == 0x790065004B0070
           && *(_QWORD *)(v5 + 2) == 0x4B007000610072)
    {
      goto LABEL_109;
    }
  }
  v16 = 0;
LABEL_60:
  if (*(_DWORD *)v4 == 2)
    WTF::StringImpl::destroy((WTF::StringImpl *)v4, v3);
  else
    *(_DWORD *)v4 -= 2;
  return v16;
}

WTF::StringImpl *WebCore::convertDictionary<WebCore::CustomAnimationOptions>@<X0>(JSC::JSCell *this@<X1>, JSC::JSGlobalObject *a2@<X0>, uint64_t a3@<X8>)
{
  JSC::VM *v5;
  unint64_t v6;
  JSC::Structure *Object;
  uint64_t v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  double v11;
  JSC::VM *v12;
  WTF::StringImpl *v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  unsigned __int16 v16;
  WTF::StringImpl *v17;
  WTF::StringImpl *v18;
  WTF::StringImpl *v19;
  unint64_t v20;
  int v21;
  WTF::StringImpl *v22;
  WTF::StringImpl *v23;
  uint64_t v24;
  WTF::StringImpl *v25;
  JSC::VM *v26;
  WTF::StringImpl *v27;
  WTF::StringImpl *v28;
  double v29;
  WTF::StringImpl *v30;
  WTF::StringImpl *v31;
  unint64_t v32;
  double v33;
  JSC::VM *v34;
  WTF::StringImpl *v35;
  WTF::StringImpl *v36;
  unint64_t v37;
  unsigned __int16 v38;
  int v39;
  JSC::VM *v40;
  WTF::StringImpl *v41;
  WTF::StringImpl *v42;
  unint64_t v43;
  double v44;
  JSC::VM *v45;
  WTF::StringImpl *v46;
  WTF::StringImpl *v47;
  unint64_t v48;
  JSC::VM *v49;
  uint64_t v50;
  WTF::StringImpl *v51;
  WTF::StringImpl *v52;
  unint64_t v53;
  uint64_t v54;
  WTF::StringImpl *v55;
  uint64_t v56;
  WTF::StringImpl *v57;
  JSC::VM *v58;
  WTF::StringImpl *v59;
  WTF::StringImpl *v60;
  int v61;
  int v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  WTF::StringImpl *v66;
  WTF::StringImpl *result;
  JSC::VM *v68;
  unsigned __int16 v69;
  int v70;
  char hasExceptionsAfterHandlingTraps;
  char v72;
  char v73;
  char v74;
  int v75;
  double v76;
  double v77;
  double v78;
  double v79;
  WTF::StringImpl *v80;
  int v81;
  uint64_t v82;
  int v83;
  __int128 v84;
  __int128 v85;
  WTF::StringImpl *v86;
  __int16 v87;
  WTF::StringImpl *v88;
  uint64_t v89;
  JSC::VM *v90;
  WTF::StringImpl *v91;
  int v92;
  WTF::StringImpl *v93;
  WTF::StringImpl *v94;
  WTF::StringImpl *v95;
  unint64_t v96;
  int v97;
  int v98;
  uint64_t v99;

  v99 = *MEMORY[0x1E0C80C00];
  v5 = (JSC::VM *)*((_QWORD *)a2 + 7);
  v90 = v5;
  v6 = (unint64_t)this & 0xFFFFFFFFFFFFFFF7;
  if (((unint64_t)this & 0xFFFFFFFFFFFFFFF7) == 2)
  {
    Object = 0;
  }
  else if (((unint64_t)this & 0xFFFE000000000002) != 0
         || (Object = (JSC::Structure *)JSC::JSCell::getObject(this)) == 0)
  {
    result = (WTF::StringImpl *)JSC::throwTypeError();
    *(_DWORD *)(a3 + 88) = 1;
    return result;
  }
  v8 = WebCore::autoAtomData;
  if (WebCore::autoAtomData)
    *(_DWORD *)WebCore::autoAtomData += 2;
  v82 = v8;
  v83 = 1;
  v84 = 0uLL;
  *(_QWORD *)&v85 = 0;
  *((_QWORD *)&v85 + 1) = 0x3FF0000000000000;
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v86 = v95;
  v87 = 4;
  v88 = 0;
  v89 = 0;
  if (v6 == 2)
  {
    *(_QWORD *)&v84 = 0;
    goto LABEL_32;
  }
  WTF::AtomStringImpl::addLiteral();
  v10 = (WTF::StringImpl *)JSC::JSObject::get(Object, a2, (unint64_t)v95);
  if (v95)
  {
    if (*(_DWORD *)v95 == 2)
      WTF::StringImpl::destroy(v95, v9);
    else
      *(_DWORD *)v95 -= 2;
  }
  if (!*((_DWORD *)v5 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v5))
  {
    v11 = 0.0;
    if (v10 == (WTF::StringImpl *)10)
      goto LABEL_19;
    v95 = v10;
    v12 = (JSC::VM *)*((_QWORD *)a2 + 7);
    v91 = v12;
    if ((unint64_t)v10 >= 0xFFFE000000000000)
    {
      v11 = (double)(int)v10;
    }
    else if ((unint64_t)v10 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
    {
      JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v95, a2);
    }
    else
    {
      *(_QWORD *)&v11 = (char *)v10 - 0x2000000000000;
    }
    if (*((_DWORD *)v12 + 20))
    {
      v76 = v11;
      hasExceptionsAfterHandlingTraps = JSC::VM::hasExceptionsAfterHandlingTraps(v12);
      v11 = v76;
      if ((hasExceptionsAfterHandlingTraps & 1) != 0)
        goto LABEL_206;
    }
    if ((*(_QWORD *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
    {
LABEL_19:
      *(double *)&v84 = v11;
      WTF::AtomStringImpl::addLiteral();
      v13 = v95;
      v15 = JSC::JSObject::get(Object, a2, (unint64_t)v95);
      if (v13)
      {
        if (*(_DWORD *)v13 == 2)
          WTF::StringImpl::destroy(v13, v14);
        else
          *(_DWORD *)v13 -= 2;
      }
      if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
        goto LABEL_206;
      if (v15 == 10)
      {
        LOBYTE(v16) = 0;
      }
      else
      {
        v95 = (WTF::StringImpl *)*((_QWORD *)a2 + 7);
        v17 = v95;
        v16 = WebCore::parseEnumeration<WebCore::PlaybackDirection>(a2, v15);
        if (*((_DWORD *)v17 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v17) & 1) != 0)
          goto LABEL_206;
        if (v16 <= 0xFFu)
        {
          JSC::throwTypeError();
          goto LABEL_206;
        }
      }
      HIBYTE(v87) = v16;
      WTF::AtomStringImpl::addLiteral();
      v18 = v95;
      v20 = JSC::JSObject::get(Object, a2, (unint64_t)v95);
      if (v18)
      {
        if (*(_DWORD *)v18 == 2)
          WTF::StringImpl::destroy(v18, v19);
        else
          *(_DWORD *)v18 -= 2;
      }
      if (!*((_DWORD *)v5 + 20) || !JSC::VM::hasExceptionsAfterHandlingTraps(v5))
      {
        if (v20 != 10)
        {
          WebCore::Converter<WebCore::IDLUnion<WebCore::IDLUnrestrictedDouble,WebCore::IDLDOMString>>::convert(a2, v20, (uint64_t)&v95);
          v39 = v98;
          if (v98)
          {
            *(_DWORD *)(a3 + 88) = 1;
LABEL_131:
            if (v39 != -1)
              ((void (*)(WTF::StringImpl **, unint64_t *))off_1E32508B8[v39])(&v91, &v96);
            goto LABEL_133;
          }
          v21 = v97;
          LOBYTE(v91) = 0;
          v92 = -1;
          if (v97 == -1)
          {
            if (v83 == -1)
              goto LABEL_37;
            ((void (*)(WTF::StringImpl **, uint64_t *))off_1E3250888[v83])(&v80, &v82);
            v83 = -1;
LABEL_34:
            if (v92 != -1)
              ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E3250888[v92])(&v80, &v91);
            if (v6 == 2)
            {
LABEL_42:
              WTF::StringImpl::createWithoutCopyingNonEmpty();
              v25 = v80;
              goto LABEL_51;
            }
LABEL_37:
            WTF::AtomStringImpl::addLiteral();
            v22 = v91;
            v24 = JSC::JSObject::get(Object, a2, (unint64_t)v91);
            if (v22)
            {
              if (*(_DWORD *)v22 == 2)
                WTF::StringImpl::destroy(v22, v23);
              else
                *(_DWORD *)v22 -= 2;
            }
            if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
            {
              *(_DWORD *)(a3 + 88) = 1;
              goto LABEL_130;
            }
            if (v24 == 10)
              goto LABEL_42;
            v80 = (WTF::StringImpl *)v24;
            v26 = (JSC::VM *)*((_QWORD *)a2 + 7);
            if ((v24 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v24 + 5) != 2)
            {
              JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v80, a2);
LABEL_49:
              if (*((_DWORD *)v26 + 20))
              {
                v70 = JSC::VM::hasExceptionsAfterHandlingTraps(v26);
                v25 = v94;
                if (v70)
                {
                  v65 = 1;
                  v92 = 1;
                  v94 = 0;
                  if (v25)
                  {
                    if (*(_DWORD *)v25 == 2)
                      WTF::StringImpl::destroy(v25, v23);
                    else
                      *(_DWORD *)v25 -= 2;
                  }
                  *(_DWORD *)(a3 + 88) = 1;
                  goto LABEL_129;
                }
              }
              else
              {
                v25 = v94;
              }
LABEL_51:
              v92 = 0;
              v91 = 0;
              v28 = v86;
              v86 = v25;
              if (v28)
              {
                if (*(_DWORD *)v28 == 2)
                  WTF::StringImpl::destroy(v28, v23);
                else
                  *(_DWORD *)v28 -= 2;
              }
              if (v6 == 2)
              {
                LOBYTE(v87) = 4;
                *((_QWORD *)&v84 + 1) = 0;
                *(_QWORD *)&v85 = 0;
                v29 = 1.0;
              }
              else
              {
                WTF::AtomStringImpl::addLiteral();
                v30 = v80;
                v32 = JSC::JSObject::get(Object, a2, (unint64_t)v80);
                if (v30)
                {
                  if (*(_DWORD *)v30 == 2)
                    WTF::StringImpl::destroy(v30, v31);
                  else
                    *(_DWORD *)v30 -= 2;
                }
                if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
                  goto LABEL_144;
                v33 = 0.0;
                if (v32 != 10)
                {
                  v80 = (WTF::StringImpl *)v32;
                  v34 = (JSC::VM *)*((_QWORD *)a2 + 7);
                  v94 = v34;
                  if (v32 >= 0xFFFE000000000000)
                  {
                    v33 = (double)(int)v32;
                  }
                  else if (v32 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
                  {
                    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v80, a2);
                  }
                  else
                  {
                    *(_QWORD *)&v33 = v32 - 0x2000000000000;
                  }
                  if (*((_DWORD *)v34 + 20))
                  {
                    v77 = v33;
                    v72 = JSC::VM::hasExceptionsAfterHandlingTraps(v34);
                    v33 = v77;
                    if ((v72 & 1) != 0)
                      goto LABEL_144;
                  }
                  if ((*(_QWORD *)&v33 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
                    goto LABEL_187;
                }
                *((double *)&v84 + 1) = v33;
                WTF::AtomStringImpl::addLiteral();
                v35 = v80;
                v37 = JSC::JSObject::get(Object, a2, (unint64_t)v80);
                if (v35)
                {
                  if (*(_DWORD *)v35 == 2)
                    WTF::StringImpl::destroy(v35, v36);
                  else
                    *(_DWORD *)v35 -= 2;
                }
                if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
                  goto LABEL_144;
                if (v37 == 10)
                {
                  LOBYTE(v38) = 4;
                }
                else
                {
                  v80 = (WTF::StringImpl *)*((_QWORD *)a2 + 7);
                  v40 = v80;
                  v38 = WebCore::parseEnumeration<WebCore::FillMode>(a2, v37);
                  if (*((_DWORD *)v40 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v40) & 1) != 0)
                    goto LABEL_144;
                  if (v38 <= 0xFFu)
                    goto LABEL_194;
                }
                LOBYTE(v87) = v38;
                WTF::AtomStringImpl::addLiteral();
                v41 = v80;
                v43 = JSC::JSObject::get(Object, a2, (unint64_t)v80);
                if (v41)
                {
                  if (*(_DWORD *)v41 == 2)
                    WTF::StringImpl::destroy(v41, v42);
                  else
                    *(_DWORD *)v41 -= 2;
                }
                if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
                  goto LABEL_144;
                v44 = 0.0;
                if (v43 != 10)
                {
                  v80 = (WTF::StringImpl *)v43;
                  v45 = (JSC::VM *)*((_QWORD *)a2 + 7);
                  v94 = v45;
                  if (v43 >= 0xFFFE000000000000)
                  {
                    v44 = (double)(int)v43;
                  }
                  else if (v43 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
                  {
                    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v80, a2);
                  }
                  else
                  {
                    *(_QWORD *)&v44 = v43 - 0x2000000000000;
                  }
                  if (*((_DWORD *)v45 + 20))
                  {
                    v78 = v44;
                    v73 = JSC::VM::hasExceptionsAfterHandlingTraps(v45);
                    v44 = v78;
                    if ((v73 & 1) != 0)
                      goto LABEL_144;
                  }
                  if ((*(_QWORD *)&v44 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
                  {
LABEL_187:
                    JSC::throwTypeError();
                    goto LABEL_144;
                  }
                }
                *(double *)&v85 = v44;
                WTF::AtomStringImpl::addLiteral();
                v46 = v80;
                v48 = JSC::JSObject::get(Object, a2, (unint64_t)v80);
                if (v46)
                {
                  if (*(_DWORD *)v46 == 2)
                    WTF::StringImpl::destroy(v46, v47);
                  else
                    *(_DWORD *)v46 -= 2;
                }
                if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
                  goto LABEL_144;
                v29 = 1.0;
                if (v48 != 10)
                {
                  v80 = (WTF::StringImpl *)v48;
                  v49 = (JSC::VM *)*((_QWORD *)a2 + 7);
                  if (v48 >= 0xFFFE000000000000)
                  {
                    v29 = (double)(int)v48;
                  }
                  else if (v48 - 0x2000000000000 > 0xFFFBFFFFFFFFFFFFLL)
                  {
                    JSC::JSValue::toNumberSlowCase((JSC::JSValue *)&v80, a2);
                  }
                  else
                  {
                    *(_QWORD *)&v29 = v48 - 0x2000000000000;
                  }
                  if (*((_DWORD *)v49 + 20))
                  {
                    v79 = v29;
                    v74 = JSC::VM::hasExceptionsAfterHandlingTraps(v49);
                    v29 = v79;
                    if ((v74 & 1) != 0)
                      goto LABEL_144;
                  }
                }
              }
              *((double *)&v85 + 1) = v29;
              v50 = WebCore::JSDOMGlobalObject::scriptExecutionContext(a2);
              if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v50 + 136))(v50) + 472) & 0x20000) == 0)
              {
LABEL_106:
                if (v6 == 2)
                  goto LABEL_112;
                WTF::AtomStringImpl::addLiteral();
                v55 = v80;
                v56 = JSC::JSObject::get(Object, a2, (unint64_t)v80);
                if (v55)
                {
                  if (*(_DWORD *)v55 == 2)
                    WTF::StringImpl::destroy(v55, v51);
                  else
                    *(_DWORD *)v55 -= 2;
                }
                if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
                  goto LABEL_144;
                if (v56 == 10)
                {
LABEL_112:
                  v57 = (WTF::StringImpl *)*MEMORY[0x1E0CBF738];
                  if (*MEMORY[0x1E0CBF738])
                    *(_DWORD *)v57 += 2;
                  goto LABEL_122;
                }
                v94 = (WTF::StringImpl *)v56;
                v58 = (JSC::VM *)*((_QWORD *)a2 + 7);
                if ((v56 & 0xFFFE000000000002) != 0 || *(_BYTE *)(v56 + 5) != 2)
                {
                  JSC::JSValue::toWTFStringSlowCase((JSC::JSValue *)&v94, a2);
LABEL_120:
                  if (*((_DWORD *)v58 + 20))
                  {
                    v75 = JSC::VM::hasExceptionsAfterHandlingTraps(v58);
                    v57 = v93;
                    if (v75)
                    {
                      v81 = 1;
                      v93 = 0;
                      if (v57)
                      {
                        if (*(_DWORD *)v57 == 2)
                          WTF::StringImpl::destroy(v57, v51);
                        else
                          *(_DWORD *)v57 -= 2;
                      }
                      v62 = 1;
                      goto LABEL_128;
                    }
                  }
                  else
                  {
                    v57 = v93;
                  }
LABEL_122:
                  v81 = 0;
                  v80 = 0;
                  v60 = v88;
                  v88 = v57;
                  if (v60)
                  {
                    if (*(_DWORD *)v60 == 2)
                      WTF::StringImpl::destroy(v60, v51);
                    else
                      *(_DWORD *)v60 -= 2;
                  }
                  *(_BYTE *)(a3 + 8) = 0;
                  *(_DWORD *)(a3 + 16) = -1;
                  v61 = v83;
                  if (v83 != -1)
                  {
                    ((void (*)(WTF::StringImpl **))off_1E3250898[v83])(&v94);
                    *(_DWORD *)(a3 + 16) = v61;
                  }
                  v62 = 0;
                  v63 = v85;
                  *(_OWORD *)(a3 + 24) = v84;
                  *(_QWORD *)(a3 + 56) = v86;
                  *(_WORD *)(a3 + 64) = v87;
                  v64 = v89;
                  *(_QWORD *)(a3 + 72) = v88;
                  *(_QWORD *)(a3 + 80) = v64;
                  *(_OWORD *)(a3 + 40) = v63;
                  v86 = 0;
                  v88 = 0;
LABEL_128:
                  *(_DWORD *)(a3 + 88) = v62;
                  ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E324FDC0[v62])(&v94, &v80);
                  v65 = 0;
LABEL_129:
                  ((void (*)(WTF::StringImpl **, WTF::StringImpl **))off_1E324FDC0[v65])(&v80, &v91);
LABEL_130:
                  v39 = v98;
                  goto LABEL_131;
                }
                v59 = *(WTF::StringImpl **)(v56 + 8);
                if ((v59 & 1) != 0)
                {
                  v59 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v56, a2);
                  if (!v59)
                    goto LABEL_119;
                }
                else if (!v59)
                {
LABEL_119:
                  v93 = v59;
                  goto LABEL_120;
                }
                *(_DWORD *)v59 += 2;
                goto LABEL_119;
              }
              if (v6 == 2)
                goto LABEL_104;
              WTF::AtomStringImpl::addLiteral();
              v52 = v80;
              v53 = JSC::JSObject::get(Object, a2, (unint64_t)v80);
              if (v52)
              {
                if (*(_DWORD *)v52 == 2)
                  WTF::StringImpl::destroy(v52, v51);
                else
                  *(_DWORD *)v52 -= 2;
              }
              if (*((_DWORD *)v5 + 20) && JSC::VM::hasExceptionsAfterHandlingTraps(v5))
                goto LABEL_144;
              if (v53 == 10)
              {
LABEL_104:
                v54 = 0x100000000;
LABEL_105:
                v89 = v54;
                goto LABEL_106;
              }
              if (v53 >> 49)
              {
                WebCore::convertToInteger<WebCore::IDLUnsignedLong>(a2, v53, &v80);
                if (!HIDWORD(v80))
                {
                  v54 = v80;
                  goto LABEL_105;
                }
LABEL_144:
                v65 = 0;
                *(_DWORD *)(a3 + 88) = 1;
                goto LABEL_129;
              }
              v80 = (WTF::StringImpl *)*((_QWORD *)a2 + 7);
              v68 = v80;
              v69 = WebCore::parseEnumeration<WebCore::AnimationFrameRatePreset>(a2, v53);
              if (*((_DWORD *)v68 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v68) & 1) != 0)
                goto LABEL_144;
              if (v69 > 0xFFu)
              {
                v54 = v69 | 0x100000000;
                goto LABEL_105;
              }
LABEL_194:
              JSC::throwTypeError();
              goto LABEL_144;
            }
            v27 = *(WTF::StringImpl **)(v24 + 8);
            if ((v27 & 1) != 0)
            {
              v27 = *(WTF::StringImpl **)JSC::JSRopeString::resolveRope((JSC::JSRopeString *)v24, a2);
              if (!v27)
                goto LABEL_48;
            }
            else if (!v27)
            {
LABEL_48:
              v94 = v27;
              goto LABEL_49;
            }
            *(_DWORD *)v27 += 2;
            goto LABEL_48;
          }
LABEL_33:
          ((void (*)(WTF::StringImpl **, WTF::StringImpl **, unint64_t *))off_1E3250898[v21])(&v80, &v91, &v96);
          v92 = v21;
          v80 = (WTF::StringImpl *)&v82;
          ((void (*)(WTF::StringImpl **, uint64_t *, WTF::StringImpl **))off_1E32508A8[v21])(&v80, &v82, &v91);
          goto LABEL_34;
        }
LABEL_32:
        WTF::StringImpl::createWithoutCopyingNonEmpty();
        v96 = (unint64_t)v91;
        v21 = 1;
        v97 = 1;
        v98 = 0;
        LOBYTE(v91) = 0;
        v92 = -1;
        goto LABEL_33;
      }
    }
    else
    {
      JSC::throwTypeError();
    }
  }
LABEL_206:
  *(_DWORD *)(a3 + 88) = 1;
LABEL_133:
  v66 = v88;
  v88 = 0;
  if (v66)
  {
    if (*(_DWORD *)v66 == 2)
      WTF::StringImpl::destroy(v66, v23);
    else
      *(_DWORD *)v66 -= 2;
  }
  result = v86;
  v86 = 0;
  if (result)
  {
    if (*(_DWORD *)result == 2)
      result = (WTF::StringImpl *)WTF::StringImpl::destroy(result, v23);
    else
      *(_DWORD *)result -= 2;
  }
  if (v83 != -1)
    return (WTF::StringImpl *)((uint64_t (*)(WTF::StringImpl **, uint64_t *))off_1E3250888[v83])(&v95, &v82);
  return result;
}

unint64_t WebCore::JSDOMConstructor<WebCore::JSCustomEffect>::construct(WTF **this, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  JSC *v8;
  WTF *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  WebCore::JSDOMGlobalObject *v13;
  unsigned int v14;
  WebCore::JSCustomEffectCallback *v15;
  JSC::JSCell *v16;
  int v17;
  int v18;
  int v19;
  uint64_t (*v20)();
  int v21;
  int v22;
  WebCore::JSDOMGlobalObject *v23;
  WebCore::JSCustomEffectCallback *v24;
  JSC::VM *v25;
  WTF *v26;
  uint64_t v27;
  unsigned int v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char **v33;
  int v34;
  unint64_t v35;
  WebCore::JSAnimationEffect *v36;
  JSC::JSCell *v37;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v39;
  JSC::Structure *v40;
  JSC::JSCell *v41;
  uint64_t v42;
  WTF *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  WTF *v54;
  uint64_t v55;
  uint64_t v56;
  WTF *v57;
  void *v58;
  int v59;
  unint64_t SlowCase;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  WebCore::JSCustomEffectCallback *Allocator;
  JSC::JSCell *v65;
  JSC::JSGlobalObject *Object;
  JSC::JSObject *v67;
  JSC::JSGlobalObject *v68;
  JSC::VM *v69;
  JSC::JSObject *v70;
  JSC::Structure *v71;
  JSC::VM *FunctionRealm;
  uint64_t v73;
  unsigned int v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  char **v79;
  int v80;
  JSC::JSCell *v81;
  unint64_t v82;
  WebCore::JSDOMGlobalObject *v83;
  JSC::Structure *v84;
  JSC::JSCell *v85;
  uint64_t v86;
  unint64_t SubclassStructure;
  uint64_t v88;
  JSValue v90;
  WTF::StringImpl *v91;
  WTF::StringImpl *v92;
  JSValue v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  JSC *v97;
  WebCore::JSCustomEffectCallback *v98;
  int v99;
  char v100;
  uint64_t v101;
  char v102[8];
  _BYTE v103[64];
  int v104;
  char v105;
  int v106;
  WTF *v107;
  WTF::StringImpl *v108;
  WTF *v109;
  int v110;
  int v111;
  int v112;
  WebCore::JSCustomEffectCallback *v113;
  _BYTE v114[64];
  int v115;
  WTF *v116;
  WTF::StringImpl *v117;
  int v118;
  int v119;
  char v120;
  uint64_t v121;

  v8 = (JSC *)this;
  v121 = *MEMORY[0x1E0C80C00];
  v9 = this[7];
  if (*(_DWORD *)(a2 + 32) == 1)
  {
    v90.super.isa = (Class)JSC::createNotEnoughArgumentsError((JSC *)this, (JSC::JSGlobalObject *)a2);
    return JSC::VM::throwException(v9, v8, v90);
  }
  v10 = a2;
  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(a2 + 48);
  v13 = *(WebCore::JSDOMGlobalObject **)(v11 + 40);
  v107 = this[7];
  if ((v12 & 0xFFFE000000000002) != 0
    || (v14 = *(unsigned __int8 *)(v12 + 5), v14 < 0x17)
    || (v14 & 0xFE) != 0x1A
    && ((*(_BYTE *)(v12 + 6) & 4) == 0
     || ((*(void (**)(uint64_t *__return_ptr, unint64_t))(16
                                                                         * *(unsigned int *)(16
                                                                                           * (*(_DWORD *)v12 & 0xFFFFFFFE)
                                                                                           + 0x4C)
                                                                         + 0x38))(&v101, v12), !(_BYTE)v101)))
  {
    WebCore::throwArgumentMustBeFunctionError((uint64_t)v8, (uint64_t)&v107, 0, "callback", 9, "CustomEffect", 13, a8, 0, 0);
    SlowCase = 0;
    v88 = 1;
    v99 = 1;
LABEL_107:
    ((void (*)(uint64_t *, WebCore::JSCustomEffectCallback **))off_1E3250908[v88])(&v101, &v98);
    return SlowCase;
  }
  v15 = (WebCore::JSCustomEffectCallback *)WTF::fastMalloc((WTF *)0x20);
  v98 = WebCore::JSCustomEffectCallback::JSCustomEffectCallback(v15, v12, v13);
  v99 = 0;
  v96 = v10;
  v97 = v8;
  if ((unint64_t)(*(int *)(v10 + 32) - 3) >= 0xFFFFFFFFFFFFFFFELL
    || (v16 = *(JSC::JSCell **)(v10 + 56), v16 == (JSC::JSCell *)10))
  {
    v102[0] = 0;
    v105 = 0;
    v106 = 0;
    v98 = 0;
    v113 = v15;
    LOBYTE(v107) = 0;
    LOBYTE(v111) = 0;
    goto LABEL_35;
  }
  if (((unint64_t)v16 & 0xFFFFFFFFFFFFFFF7) == 2
    || ((unint64_t)v16 & 0xFFFE000000000002) == 0 && *((unsigned __int8 *)v16 + 5) >= 0x17u)
  {
    WebCore::convertDictionary<WebCore::EffectTiming>(v16, v8, (uint64_t)&v116);
    WebCore::Detail::ConversionResultStorage<std::variant<double,WebCore::EffectTiming>>::ConversionResultStorage<WebCore::EffectTiming>(WebCore::Detail::ConversionResultStorage<WebCore::EffectTiming> &&)::{lambda(void)#1}::operator()((WTF::StringImpl *)&v107, (uint64_t)&v116);
    if (v119 != -1)
      ((void (*)(WebCore::JSCustomEffectCallback **, WTF::StringImpl **))off_1E3250B08[v119])(&v113, &v117);
  }
  else
  {
    WebCore::Converter<WebCore::IDLUnrestrictedDouble>::convert(v8, (unint64_t)v16, (uint64_t)&v116);
    v17 = (int)v117;
    if ((_DWORD)v117)
    {
      v17 = 1;
    }
    else
    {
      v109 = v116;
      v111 = 0;
    }
    v112 = v17;
  }
  v18 = v112;
  if (!v112)
  {
    v114[0] = 0;
    v115 = -1;
    v19 = v111;
    if (v111 == -1)
    {
      LOBYTE(v117) = 0;
      v120 = 1;
      v102[0] = 0;
      v103[0] = 0;
      v104 = -1;
      v105 = 1;
      v106 = 0;
      v8 = v97;
    }
    else
    {
      v20 = off_1E32508D8[v111];
      ((void (*)(WTF **, _BYTE *, WTF **))v20)(&v116, v114, &v109);
      v115 = v19;
      LOBYTE(v117) = 0;
      v119 = -1;
      ((void (*)(char *, WTF::StringImpl **, _BYTE *))v20)(&v100, &v117, v114);
      v119 = v19;
      v120 = 1;
      v102[0] = 0;
      v105 = 0;
      v103[0] = 0;
      v104 = -1;
      ((void (*)(char *, _BYTE *, WTF::StringImpl **))v20)(&v100, v103, &v117);
      v104 = v19;
      v105 = 1;
      v106 = 0;
      v8 = v97;
      if (!v120)
      {
LABEL_25:
        if (v115 != -1)
          ((void (*)(char *, _BYTE *))off_1E32508C8[v115])(&v100, v114);
        v18 = v112;
        goto LABEL_28;
      }
      if (v119 != -1)
        ((void (*)(char *, WTF::StringImpl **))off_1E32508C8[v119])(&v100, &v117);
    }
    v119 = -1;
    goto LABEL_25;
  }
  v106 = 1;
LABEL_28:
  if (v18 != -1)
    ((void (*)(WTF **, WTF::StringImpl **))off_1E3250B18[v18])(&v116, &v108);
  v21 = v106;
  if (v106)
  {
    SlowCase = 0;
LABEL_104:
    if (v21 != -1)
      ((void (*)(WTF **, char *))off_1E32508F8[v21])(&v107, v102);
    v88 = 0;
    goto LABEL_107;
  }
  v98 = 0;
  v113 = v15;
  LOBYTE(v107) = 0;
  LOBYTE(v111) = 0;
  if (v105)
  {
    LOBYTE(v108) = 0;
    v110 = -1;
    v22 = v104;
    if (v104 != -1)
    {
      ((void (*)(char *, WTF::StringImpl **, _BYTE *))off_1E32508D8[v104])(&v100, &v108, v103);
      v110 = v22;
    }
    LOBYTE(v111) = 1;
  }
LABEL_35:
  WebCore::CustomEffect::create((uint64_t *)&v113, (uint64_t)&v107, (uint64_t)&v116);
  if ((_BYTE)v111 && v110 != -1)
    ((void (*)(char *, WTF::StringImpl **))off_1E32508C8[v110])(&v100, &v108);
  v24 = v113;
  v113 = 0;
  if (v24)
  {
    if (*((_DWORD *)v24 + 4) == 1)
      (*(void (**)(WebCore::JSCustomEffectCallback *))(*(_QWORD *)v24 + 16))(v24);
    else
      --*((_DWORD *)v24 + 4);
  }
  if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    goto LABEL_127;
  if (!v118)
  {
    v25 = *(JSC::VM **)(v11 + 40);
    v26 = v116;
    v116 = 0;
    if (*(void (***)(WebCore::CustomEffect *__hidden))v26 != off_1E338CFB0)
    {
      __break(0xC471u);
      JUMPOUT(0x1949625D4);
    }
    v27 = *((_QWORD *)v25 + 412);
    if (v27)
    {
      v28 = *(_DWORD *)(v27 - 8);
      v29 = ((unint64_t)&WebCore::JSCustomEffect::s_info + ~((_QWORD)&WebCore::JSCustomEffect::s_info << 32)) ^ (((unint64_t)&WebCore::JSCustomEffect::s_info + ~((_QWORD)&WebCore::JSCustomEffect::s_info << 32)) >> 22);
      v30 = 9 * ((v29 + ~(v29 << 13)) ^ ((v29 + ~(v29 << 13)) >> 8));
      v31 = (v30 ^ (v30 >> 15)) + ~((v30 ^ (v30 >> 15)) << 27);
      v32 = v28 & ((v31 >> 31) ^ v31);
      v33 = *(char ***)(v27 + 16 * v32);
      if (v33 == &WebCore::JSCustomEffect::s_info)
      {
LABEL_49:
        v35 = *(_QWORD *)(v27 + 16 * v32 + 8);
        if (v35)
          goto LABEL_51;
      }
      else
      {
        v34 = 1;
        while (v33)
        {
          v32 = ((_DWORD)v32 + v34) & v28;
          v33 = *(char ***)(v27 + 16 * v32);
          ++v34;
          if (v33 == &WebCore::JSCustomEffect::s_info)
            goto LABEL_49;
        }
      }
    }
    v36 = (WebCore::JSAnimationEffect *)*((_QWORD *)v25 + 7);
    v37 = (JSC::JSCell *)WebCore::JSAnimationEffect::prototype(v36, v25, v23);
    Structure = WebCore::JSCustomEffectPrototype::createStructure((uint64_t *)v36, (uint64_t)v25, v37);
    *(_DWORD *)(Structure + 16) |= 0x80000u;
    v41 = (JSC::JSCell *)WebCore::JSCustomEffectPrototype::create(v36, Structure, v39, v40);
    v42 = WebCore::JSCustomEffect::createStructure((uint64_t *)v36, (uint64_t)v25, v41);
    v35 = WebCore::cacheDOMStructure((JSCell *)v25, v42, (uint64_t)&WebCore::JSCustomEffect::s_info);
LABEL_51:
    v43 = v9;
    v44 = *((_QWORD *)v25 + 7);
    v45 = *(_QWORD *)(v44 + 41456);
    v46 = *(_QWORD *)(v45 + 23536);
    v47 = *(_QWORD **)(v46 + 2624);
    if (v47)
      goto LABEL_71;
    v48 = *(_QWORD *)(v45 + 22648);
    if (__ldaxr((unsigned __int8 *)v48))
    {
      __clrex();
    }
    else if (!__stxr(1u, (unsigned __int8 *)v48))
    {
      goto LABEL_56;
    }
    MEMORY[0x19AEA534C](v48);
LABEL_56:
    v50 = *(_QWORD *)(v48 + 2824);
    if (!*(_QWORD *)(v50 + 2624))
    {
      v51 = WTF::fastMalloc((WTF *)0xF8);
      WTF::CString::CString((WTF::CString *)&v107, "IsoSpace T");
      v113 = 0;
      MEMORY[0x19AEA3204](v51, &v107, v44 + 192, v44 + 1872, 32, 8, &v113);
      v53 = (uint64_t)v113;
      v113 = 0;
      if (v53)
        (*(void (**)(uint64_t))(*(_QWORD *)v53 + 8))(v53);
      v54 = v107;
      v107 = 0;
      if (v54)
      {
        if (*(_DWORD *)v54 == 1)
          WTF::fastFree(v54, v52);
        else
          --*(_DWORD *)v54;
      }
      v55 = *(_QWORD *)(v50 + 2624);
      *(_QWORD *)(v50 + 2624) = v51;
      if (v55)
        (*(void (**)(uint64_t))(*(_QWORD *)v55 + 8))(v55);
    }
    v47 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
    JSC::GCClient::IsoSubspace::IsoSubspace();
    v56 = *(_QWORD *)(v46 + 2624);
    *(_QWORD *)(v46 + 2624) = v47;
    if (v56)
    {
      v57 = (WTF *)MEMORY[0x19AEA3528]();
      WTF::fastFree(v57, v58);
    }
    v59 = __ldxr((unsigned __int8 *)v48);
    if (v59 == 1)
    {
      if (!__stlxr(0, (unsigned __int8 *)v48))
      {
LABEL_71:
        SlowCase = v47[3];
        if (SlowCase >= v47[4])
        {
          SlowCase = v47[5];
          if ((SlowCase & 1) != 0)
          {
            JSC::sanitizeStackForVM();
            SlowCase = JSC::LocalAllocator::allocateSlowCase();
            goto LABEL_73;
          }
          v94 = *(_QWORD *)(SlowCase + 8) ^ v47[6];
          v47[4] = SlowCase + HIDWORD(v94);
          v47[5] = SlowCase + (int)v94;
        }
        v47[3] = SlowCase + 32;
LABEL_73:
        *(_DWORD *)SlowCase = 0;
        WebCore::JSDOMObject::JSDOMObject(SlowCase, v35);
        *(_QWORD *)(SlowCase + 24) = v26;
        if (*(_BYTE *)(v44 + 755))
          __dmb(0xAu);
        v61 = *((_QWORD *)v25 + 415);
        v9 = v43;
        {
          WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::AnimationEffect *)::owner = (uint64_t)&off_1E3226610;
        }
        v107 = v26;
        if ((SlowCase & 8) != 0)
          v62 = (SlowCase - 112) | 1;
        else
          v62 = SlowCase & 0xFFFFFFFFFFFFC000;
        v10 = v96;
        if ((v62 & 1) != 0)
          v63 = v62 + 47;
        else
          v63 = *(_QWORD *)v62 + 32;
        v8 = v97;
        Allocator = *(WebCore::JSCustomEffectCallback **)(v63 + 16);
        if (!Allocator)
          Allocator = (WebCore::JSCustomEffectCallback *)JSC::WeakSet::findAllocator();
        *(_QWORD *)(v63 + 16) = *(_QWORD *)Allocator;
        *(_QWORD *)Allocator = SlowCase;
        *((_QWORD *)Allocator + 1) = &WebCore::wrapperOwner(WebCore::DOMWrapperWorld &,WebCore::AnimationEffect *)::owner;
        *((_QWORD *)Allocator + 2) = v61;
        v113 = Allocator;
        JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v61 + 32), (uint64_t *)&v107, (uint64_t *)&v113);
        if (v113)
          *((_QWORD *)v113 + 1) = 3;
        goto LABEL_86;
      }
    }
    else
    {
      __clrex();
    }
    WTF::Lock::unlockSlow((WTF::Lock *)v48);
    goto LABEL_71;
  }
  if (v118 == 1)
  {
    v91 = (WTF::StringImpl *)v116;
    LOBYTE(v107) = (_BYTE)v116;
    v92 = v117;
    v117 = 0;
    v108 = v92;
    if (!*((_QWORD *)v9 + 2))
    {
      v93.super.isa = (Class)WebCore::createDOMException(v8, (JSC::JSGlobalObject *)v116, (JSC::JSGlobalObject *)&v108);
      JSC::VM::throwException(v9, v8, v93);
      v92 = v108;
    }
    v108 = 0;
    if (v92)
    {
      if (*(_DWORD *)v92 == 2)
        WTF::StringImpl::destroy(v92, v91);
      else
        *(_DWORD *)v92 -= 2;
    }
    SlowCase = 0;
LABEL_86:
    if (*((_DWORD *)v9 + 20) && (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) != 0)
    {
LABEL_127:
      SlowCase = 0;
LABEL_101:
      if (v118 != -1)
        ((void (*)(WTF **, WTF **))off_1E32508E8[v118])(&v107, &v116);
      v21 = v106;
      goto LABEL_104;
    }
    v65 = *(JSC::JSCell **)(v10 + 40);
    if (((unint64_t)v65 & 0xFFFE000000000002) != 0
      || (Object = (JSC::JSGlobalObject *)JSC::JSCell::getObject(v65)) == 0
      || (v68 = Object, Object == *(JSC::JSGlobalObject **)(v10 + 24))
      || (v69 = (JSC::VM *)*((_QWORD *)v8 + 7),
          FunctionRealm = (JSC::VM *)JSC::getFunctionRealm(v8, Object, v67),
          *((_DWORD *)v69 + 20))
      && (JSC::VM::hasExceptionsAfterHandlingTraps(v69) & 1) != 0)
    {
LABEL_100:
      if (!*((_DWORD *)v9 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v9) & 1) == 0)
        goto LABEL_101;
      goto LABEL_127;
    }
    v73 = *((_QWORD *)FunctionRealm + 412);
    if (v73)
    {
      v74 = *(_DWORD *)(v73 - 8);
      v75 = ((unint64_t)&WebCore::JSCustomEffect::s_info + ~((_QWORD)&WebCore::JSCustomEffect::s_info << 32)) ^ (((unint64_t)&WebCore::JSCustomEffect::s_info + ~((_QWORD)&WebCore::JSCustomEffect::s_info << 32)) >> 22);
      v76 = 9 * ((v75 + ~(v75 << 13)) ^ ((v75 + ~(v75 << 13)) >> 8));
      v77 = (v76 ^ (v76 >> 15)) + ~((v76 ^ (v76 >> 15)) << 27);
      v78 = v74 & ((v77 >> 31) ^ v77);
      v79 = *(char ***)(v73 + 16 * v78);
      if (v79 == &WebCore::JSCustomEffect::s_info)
      {
LABEL_96:
        v70 = *(JSC::JSObject **)(v73 + 16 * v78 + 8);
        if (v70)
        {
LABEL_98:
          SubclassStructure = JSC::InternalFunction::createSubclassStructure(v8, v68, v70, v71);
          if (!*((_DWORD *)v69 + 20) || (JSC::VM::hasExceptionsAfterHandlingTraps(v69) & 1) == 0)
            JSC::JSObject::setStructure((JSCell *)SlowCase, v69, SubclassStructure);
          goto LABEL_100;
        }
      }
      else
      {
        v80 = 1;
        while (v79)
        {
          v78 = ((_DWORD)v78 + v80) & v74;
          v79 = *(char ***)(v73 + 16 * v78);
          ++v80;
          if (v79 == &WebCore::JSCustomEffect::s_info)
            goto LABEL_96;
        }
      }
    }
    v81 = (JSC::JSCell *)WebCore::JSAnimationEffect::prototype(v69, FunctionRealm, v70);
    v82 = WebCore::JSCustomEffectPrototype::createStructure((uint64_t *)v69, (uint64_t)FunctionRealm, v81);
    *(_DWORD *)(v82 + 16) |= 0x80000u;
    v85 = (JSC::JSCell *)WebCore::JSCustomEffectPrototype::create(v69, v82, v83, v84);
    v86 = WebCore::JSCustomEffect::createStructure((uint64_t *)v69, (uint64_t)FunctionRealm, v85);
    v70 = (JSC::JSObject *)WebCore::cacheDOMStructure((JSCell *)FunctionRealm, v86, (uint64_t)&WebCore::JSCustomEffect::s_info);
    goto LABEL_98;
  }
  v95 = std::__throw_bad_variant_access[abi:sn180100]();
  return WebCore::JSCustomEffect::analyzeHeap(v95);
}

uint64_t WebCore::JSCustomEffect::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return WebCore::JSAnimationEffect::analyzeHeap(a1, a2);
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return WebCore::JSAnimationEffect::analyzeHeap(a1, a2);
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return WebCore::JSAnimationEffect::analyzeHeap(a1, a2);
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCustomEffectPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCustomEffectPrototype::create(WebCore::JSCustomEffectPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  JSC::Structure *v15;
  int v16;
  unint64_t v18;
  WTF::StringImpl *v19[6];
  int v20;
  int v21;
  JSC::Structure *v22;
  int v23;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v18 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v18);
    *((_QWORD *)this + 4865) = SlowCase + (int)v18;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x10) & 3) == 0)
    JSC::JSObject::convertToDictionary((JSC::JSObject *)SlowCase, this);
  WTF::AtomStringImpl::addLiteral();
  v9 = v19[0];
  JSC::reifyStaticProperty(this, (uint64_t)&WebCore::JSCustomEffect::s_info, (unint64_t *)v19, (uint64_t)&WebCore::JSCustomEffectPrototypeTableValues, (unsigned __int8 *)SlowCase);
  if (v9)
  {
    if (*(_DWORD *)v9 == 2)
      WTF::StringImpl::destroy(v9, v10);
    else
      *(_DWORD *)v9 -= 2;
  }
  v11 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create((uint64_t)this, v19);
  v14 = v19[0];
  v19[0] = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  v15 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v23 = *(_DWORD *)SlowCase;
  v22 = v15;
  v16 = JSC::Structure::outOfLineCapacity(v15);
  v20 = 0;
  v21 = v16;
  v19[0] = (WTF::StringImpl *)&v21;
  v19[1] = (WTF::StringImpl *)SlowCase;
  v19[2] = this;
  v19[3] = (WTF::StringImpl *)&v23;
  v19[4] = (WTF::StringImpl *)&v22;
  v19[5] = (WTF::StringImpl *)&v20;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v15, this, v11, 6, (uint64_t)v19);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v20, v13);
  *((_DWORD *)v15 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCustomEffect>,(WebCore::DOMConstructorID)323>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v10;
  unint64_t v11;
  WTF::StringImpl *v12;
  uint64_t v13;
  WTF::StringImpl *v14;
  unint64_t v15;
  WebCore::JSDOMGlobalObject *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char **v24;
  int v25;
  uint64_t v26;
  JSC::JSCell *v27;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v29;
  JSC::Structure *v30;
  JSC::JSCell *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  unint64_t v36;
  WTF::StringImpl *v37;
  unint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2584);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSAnimationEffect>,(WebCore::DOMConstructorID)316>(a1, a2);
  v7 = v6;
  LODWORD(v37) = 67099;
  if ((v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject((JSC::JSCell *)v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v35 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v35);
    v5[2] = SlowCase + (int)v35;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v7, &v37, &WebCore::JSDOMConstructor<WebCore::JSCustomEffect>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v10 = (_QWORD *)v5[165];
  v2 = v10[2846];
  if (v2 < v10[2847])
    goto LABEL_10;
  v2 = v10[2848];
  if ((v2 & 1) == 0)
  {
    v36 = *(_QWORD *)(v2 + 8) ^ v10[2849];
    v10[2847] = v2 + HIDWORD(v36);
    v10[2848] = v2 + (int)v36;
LABEL_10:
    v10[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v11 = *(_QWORD *)(v5[227] + 1768);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v11, 0xFFFE000000000001, 6, (uint64_t)&v37);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v13 = JSC::JSString::create(a1, &v37);
  v14 = v37;
  v37 = 0;
  if (v14)
  {
    if (*(_DWORD *)v14 == 2)
      WTF::StringImpl::destroy(v14, v12);
    else
      *(_DWORD *)v14 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v13;
  if (v13 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v15 = *(_QWORD *)(v5[227] + 1968);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v13, 6, (uint64_t)&v37);
  v17 = *(_QWORD *)(v5[227] + 2160);
  v18 = *(_QWORD *)(a2 + 3296);
  if (v18)
  {
    v19 = *(_DWORD *)(v18 - 8);
    v20 = ((unint64_t)&WebCore::JSCustomEffect::s_info + ~((_QWORD)&WebCore::JSCustomEffect::s_info << 32)) ^ (((unint64_t)&WebCore::JSCustomEffect::s_info + ~((_QWORD)&WebCore::JSCustomEffect::s_info << 32)) >> 22);
    v21 = 9 * ((v20 + ~(v20 << 13)) ^ ((v20 + ~(v20 << 13)) >> 8));
    v22 = (v21 ^ (v21 >> 15)) + ~((v21 ^ (v21 >> 15)) << 27);
    v23 = v19 & ((v22 >> 31) ^ v22);
    v24 = *(char ***)(v18 + 16 * v23);
    if (v24 == &WebCore::JSCustomEffect::s_info)
    {
LABEL_20:
      v26 = *(_QWORD *)(v18 + 16 * v23 + 8);
      if (v26)
        goto LABEL_22;
    }
    else
    {
      v25 = 1;
      while (v24)
      {
        v23 = ((_DWORD)v23 + v25) & v19;
        v24 = *(char ***)(v18 + 16 * v23);
        ++v25;
        if (v24 == &WebCore::JSCustomEffect::s_info)
          goto LABEL_20;
      }
    }
  }
  v27 = (JSC::JSCell *)WebCore::JSAnimationEffect::prototype((WebCore::JSAnimationEffect *)a1, (JSC::VM *)a2, v16);
  Structure = WebCore::JSCustomEffectPrototype::createStructure((uint64_t *)a1, a2, v27);
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v31 = (JSC::JSCell *)WebCore::JSCustomEffectPrototype::create((WebCore::JSCustomEffectPrototype *)a1, Structure, v29, v30);
  v32 = WebCore::JSCustomEffect::createStructure((uint64_t *)a1, a2, v31);
  v26 = WebCore::cacheDOMStructure((JSCell *)a2, v32, (uint64_t)&WebCore::JSCustomEffect::s_info);
LABEL_22:
  v33 = *(_QWORD *)(v26 + 48);
  v37 = 0;
  v38 = v2;
  v39 = -1;
  v40 = 0x1000000;
  v41 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v17, v33, 14, (uint64_t)&v37);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 2584) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCustomEffectConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCustomEffectPrototype::s_info != (char **)(16
                                                            * *(unsigned int *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                              + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructor<WebCore::JSCustomEffect>,(WebCore::DOMConstructorID)323>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

WebCore::JSCustomEffectCallback *WebCore::JSCustomEffectCallback::JSCustomEffectCallback(WebCore::JSCustomEffectCallback *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3)
{
  WebCore::ScriptExecutionContext *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *Allocator;
  _QWORD *v10;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = (WebCore::ScriptExecutionContext *)WebCore::JSDOMGlobalObject::scriptExecutionContext(a3);
  *((_DWORD *)this + 4) = 1;
  *(_QWORD *)this = &off_1E33A18C0;
  *((_QWORD *)this + 1) = 0;
  WebCore::ContextDestructionObserver::observeContext(this, v6);
  *(_QWORD *)this = &off_1E324F1B0;
  v7 = (_QWORD *)WTF::fastMalloc((WTF *)0x18);
  v8 = WebCore::JSDOMGlobalObject::scriptExecutionContext(a3);
  Allocator = 0;
  if (a3)
  {
    v16 = v8;
    if ((a3 & 8) != 0)
      v12 = ((unint64_t)a3 - 112) | 1;
    else
      v12 = (unint64_t)a3 & 0xFFFFFFFFFFFFC000;
    if ((v12 & 1) != 0)
      v13 = v12 + 47;
    else
      v13 = *(_QWORD *)v12 + 32;
    Allocator = *(_QWORD **)(v13 + 16);
    if (!Allocator)
      Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v13 + 16) = *Allocator;
    *Allocator = a3;
    Allocator[1] = 0;
    Allocator[2] = 0;
    v8 = v16;
  }
  *v7 = Allocator;
  v7[1] = &off_1E32268A0;
  if (a2)
  {
    v17 = v8;
    if ((a2 & 8) != 0)
      v14 = (a2 - 112) | 1;
    else
      v14 = a2 & 0xFFFFFFFFFFFFC000;
    if ((v14 & 1) != 0)
      v15 = v14 + 47;
    else
      v15 = *(_QWORD *)v14 + 32;
    v10 = *(_QWORD **)(v15 + 16);
    if (!v10)
      v10 = (_QWORD *)JSC::WeakSet::findAllocator();
    *(_QWORD *)(v15 + 16) = *v10;
    *v10 = a2;
    v10[1] = v7 + 1;
    v10[2] = v17;
  }
  else
  {
    v10 = 0;
  }
  v7[2] = v10;
  *((_QWORD *)this + 3) = v7;
  return this;
}

void WebCore::JSCustomEffectCallback::~JSCustomEffectCallback(WebCore::JSCustomEffectCallback *this, void *a2)
{
  WTF *v2;
  void *v3;

  WebCore::JSAbortAlgorithm::~JSAbortAlgorithm(this, a2);
  WTF::fastFree(v2, v3);
}

uint64_t WebCore::JSCustomEffectCallback::handleEvent(uint64_t **this, double a2, void *a3)
{
  void *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  JSC::Structure *v12;
  uint64_t *v14;
  _QWORD *v15;
  _BYTE v16[8];
  _DWORD v17[2];
  WTF *v18;
  _OWORD v19[4];
  uint64_t v20;
  _BYTE v21[8];
  _DWORD *v22;

  if (!WebCore::ActiveDOMCallback::canInvokeCallback((WebCore::ActiveDOMCallback *)this, a3))
    return 2;
  ++*((_DWORD *)this + 4);
  MEMORY[0x19AEA3294](v21, *(_QWORD *)(*(_QWORD *)*this[3] + 56));
  v16[0] = 0;
  v17[1] = 8;
  v18 = (WTF *)((char *)v19 + 8);
  memset(v19, 0, sizeof(v19));
  v20 = 0;
  if ((*(_QWORD *)&a2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (v6 = (int)a2, (double)(int)v6 == a2)
    && ((_DWORD)v6 || (*(_QWORD *)&a2 & 0x8000000000000000) == 0))
  {
    v7 = v6 | 0xFFFE000000000000;
  }
  else
  {
    v7 = *(_QWORD *)&a2 + 0x2000000000000;
  }
  *((_QWORD *)&v19[0] + 1) = v7;
  v17[0] = 1;
  v22 = 0;
  v9 = this[3];
  v10 = *v9;
  if (*v9
    && (*(_BYTE *)(v10 + 8) & 3) == 0
    && *(_QWORD *)v10
    && ((v11 = v9[2]) == 0 || (*(_BYTE *)(v11 + 8) & 3) != 0 ? (v12 = 0) : (v12 = *(JSC::Structure **)v11),
        WebCore::JSCallbackData::invokeCallback(*(JSC::JSGlobalObject **)v10, v12, 10, (uint64_t)v16, 0, 0, (uint64_t *)&v22), (v5 = v22) != 0))
  {
    WebCore::reportException(*(JSC::JSGlobalObject **)(16 * (**(_DWORD **)this[3][2] & 0xFFFFFFFE) + 0x28), (uint64_t)v22, 0, 0, 0);
    v8 = 1;
  }
  else
  {
    v8 = 0;
  }
  if (*(_QWORD *)&v19[0])
  {
    v22 = v17;
    v14 = *(uint64_t **)&v19[0];
    v15 = (_QWORD *)WTF::HashTable<JSC::MarkedVectorBase *,JSC::MarkedVectorBase *,WTF::IdentityExtractor,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>>::find<WTF::IdentityHashTranslator<WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::DefaultHash<JSC::MarkedVectorBase *>>,JSC::MarkedVectorBase *>(*(uint64_t **)&v19[0], (uint64_t *)&v22);
    WTF::HashSet<JSC::MarkedVectorBase *,WTF::DefaultHash<JSC::MarkedVectorBase *>,WTF::HashTraits<JSC::MarkedVectorBase *>,WTF::HashTableTraits>::remove(v14, v15);
  }
  if (v18 != (WTF *)((char *)v19 + 8) && v18)
    WTF::fastFree(v18, v5);
  MEMORY[0x19AEA32A0](v21);
  if (*((_DWORD *)this + 4) == 1)
    ((void (*)(uint64_t **))(*this)[2])(this);
  else
    --*((_DWORD *)this + 4);
  return v8;
}

uint64_t WebCore::JSCustomElementRegistry::visitOutputConstraints<JSC::AbstractSlotVisitor>(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 88);
  if (!v2 || !*(_BYTE *)(v2 + 24))
    return WebCore::CustomElementRegistry::visitJSCustomElementInterfaces<JSC::AbstractSlotVisitor>(*(_QWORD *)(a1 + 24), a2);
  result = 75;
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCustomElementRegistry::visitOutputConstraints<JSC::SlotVisitor>(uint64_t a1, uint64_t a2)
{
  return WebCore::CustomElementRegistry::visitJSCustomElementInterfaces<JSC::SlotVisitor>(*(_QWORD *)(a1 + 24), a2);
}

_DWORD *WebCore::JSCustomElementRegistry::destroy(WebCore::JSCustomElementRegistry *this, JSCell *a2)
{
  _DWORD *result;

  result = (_DWORD *)*((_QWORD *)this + 3);
  *((_QWORD *)this + 3) = 0;
  if (result)
  {
    if (result[4] == 1)
      return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 16))(result);
    else
      --result[4];
  }
  return result;
}

uint64_t WebCore::JSCustomElementRegistry::analyzeHeap(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  int v8;
  WTF::StringImpl *v9;
  WTF::StringImpl *v10;
  WTF::StringImpl *v11;

  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 64))(a2, a1, *(_QWORD *)(a1 + 24));
  if (!WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                          * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                          + 0x28)))
    return JSC::JSObject::analyzeHeap();
  v4 = WebCore::JSDOMGlobalObject::scriptExecutionContext(*(WebCore::JSDOMGlobalObject **)(16
                                                                                         * (*(_DWORD *)a1 & 0xFFFFFFFE)
                                                                                         + 0x28));
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 112))(v4);
  v6 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v7 = *(_DWORD *)(v6 + 4);
    *(_DWORD *)v6 += 2;
    if (v7 < 0 || (result = (v7 + 4), __OFADD__(v7, 4)))
    {
      v11 = 0;
      goto LABEL_19;
    }
    v8 = (*(unsigned __int8 *)(v6 + 16) >> 2) & 1;
  }
  else
  {
    v8 = 1;
    result = 4;
  }
  result = WTF::tryMakeStringImplFromAdaptersInternal<WTF::StringTypeAdapter<WTF::ASCIILiteral,void>,WTF::StringTypeAdapter<WTF::String,void>>(result, v8, (int8x16_t *)"url ", 4u, v6, &v11);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, WTF::StringImpl **))(*(_QWORD *)a2 + 72))(a2, a1, &v11);
    v10 = v11;
    v11 = 0;
    if (v10)
    {
      if (*(_DWORD *)v10 == 2)
      {
        WTF::StringImpl::destroy(v10, v9);
        if (v6)
        {
LABEL_11:
          if (*(_DWORD *)v6 == 2)
            WTF::StringImpl::destroy((WTF::StringImpl *)v6, v9);
          else
            *(_DWORD *)v6 -= 2;
        }
        return JSC::JSObject::analyzeHeap();
      }
      *(_DWORD *)v10 -= 2;
    }
    if (v6)
      goto LABEL_11;
    return JSC::JSObject::analyzeHeap();
  }
LABEL_19:
  __break(0xC471u);
  return result;
}

uint64_t WebCore::JSCustomElementRegistry::visitChildren(uint64_t a1, uint64_t a2)
{
  JSC::JSObject::visitChildren();
  return WebCore::CustomElementRegistry::visitJSCustomElementInterfaces<JSC::SlotVisitor>(*(_QWORD *)(a1 + 24), a2);
}

uint64_t WebCore::JSCustomElementRegistry::visitChildren(WebCore::JSCustomElementRegistry *this, JSC::JSCell *a2, JSC::AbstractSlotVisitor *a3)
{
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];
  uint64_t v8;
  char v9;

  v7[0] = a2;
  v7[1] = this;
  v9 = 0;
  v5 = *((_QWORD *)a2 + 11);
  v8 = v5;
  if (v5 && *(_BYTE *)(v5 + 24))
  {
    result = 75;
    __break(0xC471u);
  }
  else
  {
    *((_QWORD *)a2 + 11) = v7;
    JSC::JSObject::visitChildren();
    result = WebCore::CustomElementRegistry::visitJSCustomElementInterfaces<JSC::AbstractSlotVisitor>(*((_QWORD *)this + 3), (uint64_t)a2);
    *(_QWORD *)(v7[0] + 88) = v8;
  }
  return result;
}

uint64_t WebCore::JSCustomElementRegistryPrototype::createStructure(uint64_t *a1, uint64_t a2, JSC::JSCell *a3)
{
  uint64_t *v4;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  uint64_t result;
  unint64_t v8;

  v4 = a1 + 5017;
  if (((unint64_t)a3 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(a3);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v4;
  if (*v4 < (unint64_t)v4[1])
    goto LABEL_5;
  SlowCase = v4[2];
  if ((SlowCase & 1) == 0)
  {
    v8 = *(_QWORD *)(SlowCase + 8) ^ v4[3];
    v4[1] = SlowCase + HIDWORD(v8);
    v4[2] = SlowCase + (int)v8;
LABEL_5:
    *v4 = SlowCase + 128;
    goto LABEL_6;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_6:
  *(_DWORD *)SlowCase = 0;
  result = MEMORY[0x19AEA4278]();
  if (*((_BYTE *)a1 + 755))
    __dmb(0xAu);
  return result;
}

unint64_t WebCore::JSCustomElementRegistryPrototype::create(WebCore::JSCustomElementRegistryPrototype *this, unint64_t a2, WebCore::JSDOMGlobalObject *a3, JSC::Structure *a4)
{
  _QWORD *v6;
  unint64_t SlowCase;
  int v8;
  unint64_t v9;
  WTF::StringImpl *v10;
  uint64_t v11;
  WTF::StringImpl *v12;
  JSC::Structure *v13;
  int v14;
  unint64_t v16;
  WTF::StringImpl *v17[6];
  int v18;
  int v19;
  JSC::Structure *v20;
  int v21;

  v6 = (_QWORD *)((char *)this + 38904);
  SlowCase = *((_QWORD *)this + 4863);
  if (SlowCase < *((_QWORD *)this + 4864))
    goto LABEL_2;
  SlowCase = *((_QWORD *)this + 4865);
  if ((SlowCase & 1) == 0)
  {
    v16 = *(_QWORD *)(SlowCase + 8) ^ *((_QWORD *)this + 4866);
    *((_QWORD *)this + 4864) = SlowCase + HIDWORD(v16);
    *((_QWORD *)this + 4865) = SlowCase + (int)v16;
LABEL_2:
    *v6 = SlowCase + 16;
    goto LABEL_3;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_3:
  *(_DWORD *)SlowCase = 0;
  v8 = *(_DWORD *)(a2 + 8);
  *(_DWORD *)SlowCase = a2 >> 4;
  *(_DWORD *)(SlowCase + 4) = v8;
  *(_QWORD *)(SlowCase + 8) = 0;
  if (*((_BYTE *)this + 755))
    __dmb(0xAu);
  JSC::reifyStaticProperties<6u>(this, (uint64_t)&WebCore::JSCustomElementRegistry::s_info, &WebCore::JSCustomElementRegistryPrototypeTableValues, (JSC::JSObject *)SlowCase);
  v9 = *(_QWORD *)(v6[381] + 2776);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v11 = JSC::JSString::create((uint64_t)this, v17);
  v12 = v17[0];
  v17[0] = 0;
  if (v12)
  {
    if (*(_DWORD *)v12 == 2)
      WTF::StringImpl::destroy(v12, v10);
    else
      *(_DWORD *)v12 -= 2;
  }
  v13 = (JSC::Structure *)(16 * (*(_DWORD *)SlowCase & 0xFFFFFFFE));
  v21 = *(_DWORD *)SlowCase;
  v20 = v13;
  v14 = JSC::Structure::outOfLineCapacity(v13);
  v18 = 0;
  v19 = v14;
  v17[0] = (WTF::StringImpl *)&v19;
  v17[1] = (WTF::StringImpl *)SlowCase;
  v17[2] = this;
  v17[3] = (WTF::StringImpl *)&v21;
  v17[4] = (WTF::StringImpl *)&v20;
  v17[5] = (WTF::StringImpl *)&v18;
  JSC::Structure::add<(JSC::Structure::ShouldPin)1,JSC::JSObject::prepareToPutDirectWithoutTransition(JSC::VM &,JSC::PropertyName,unsigned int,JSC::StructureID,JSC::Structure*)::{lambda(JSC::GCSafeConcurrentJSLocker const&,int,int)#1}>(v13, this, v9, 6, (uint64_t)v17);
  if ((*(_BYTE *)((16 * *(unsigned int *)SlowCase) | 0x12) & 8) != 0)
    JSC::VM::invalidateStructureChainIntegrity();
  JSC::JSObject::putDirectOffset(SlowCase, (uint64_t)this, v18, v11);
  *((_DWORD *)v13 + 4) |= 0x10u;
  return SlowCase;
}

unint64_t WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCustomElementRegistry>,(WebCore::DOMConstructorID)423>(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v5;
  JSC::JSCell *v6;
  JSC::JSObject *Object;
  uint64_t SlowCase;
  _QWORD *v9;
  unint64_t v10;
  WTF::StringImpl *v11;
  uint64_t v12;
  WTF::StringImpl *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  int v23;
  uint64_t v24;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v26;
  JSC::Structure *v27;
  JSC::JSCell *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  unint64_t v33;
  WTF::StringImpl *v34;
  unint64_t v35;
  int v36;
  int v37;
  uint64_t v38;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3384);
  if (v2)
    return v2;
  v5 = (uint64_t *)(a1 + 40136);
  v6 = *(JSC::JSCell **)(a2 + 664);
  LODWORD(v34) = 67099;
  if (((unint64_t)v6 & 0xFFFE000000000002) == 0)
  {
    Object = (JSC::JSObject *)JSC::JSCell::getObject(v6);
    if (Object)
      JSC::JSObject::didBecomePrototype(Object, (JSC::VM *)a1);
  }
  SlowCase = *v5;
  if (*v5 < (unint64_t)v5[1])
    goto LABEL_6;
  SlowCase = v5[2];
  if ((SlowCase & 1) == 0)
  {
    v32 = *(_QWORD *)(SlowCase + 8) ^ v5[3];
    v5[1] = SlowCase + HIDWORD(v32);
    v5[2] = SlowCase + (int)v32;
LABEL_6:
    *v5 = SlowCase + 128;
    goto LABEL_7;
  }
  JSC::sanitizeStackForVM();
  SlowCase = JSC::LocalAllocator::allocateSlowCase();
LABEL_7:
  *(_DWORD *)SlowCase = 0;
  MEMORY[0x19AEA4278](SlowCase, a1, a2, v6, &v34, &WebCore::JSDOMConstructorNotConstructable<WebCore::JSCustomElementRegistry>::s_info, 0, 0);
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  *(_DWORD *)(SlowCase + 16) |= 0x80000u;
  v9 = (_QWORD *)v5[165];
  v2 = v9[2846];
  if (v2 < v9[2847])
    goto LABEL_10;
  v2 = v9[2848];
  if ((v2 & 1) == 0)
  {
    v33 = *(_QWORD *)(v2 + 8) ^ v9[2849];
    v9[2847] = v2 + HIDWORD(v33);
    v9[2848] = v2 + (int)v33;
LABEL_10:
    v9[2846] = v2 + 48;
    goto LABEL_11;
  }
  JSC::sanitizeStackForVM();
  v2 = JSC::LocalAllocator::allocateSlowCase();
LABEL_11:
  *(_DWORD *)v2 = 0;
  JSC::InternalFunction::InternalFunction();
  if (*(_BYTE *)(a1 + 755))
    __dmb(0xAu);
  v10 = *(_QWORD *)(v5[227] + 1768);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v10, 0xFFFE000000000000, 6, (uint64_t)&v34);
  WTF::StringImpl::createWithoutCopyingNonEmpty();
  v12 = JSC::JSString::create(a1, &v34);
  v13 = v34;
  v34 = 0;
  if (v13)
  {
    if (*(_DWORD *)v13 == 2)
      WTF::StringImpl::destroy(v13, v11);
    else
      *(_DWORD *)v13 -= 2;
  }
  *(_QWORD *)(v2 + 32) = v12;
  if (v12 && *(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(v2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)v2);
  v14 = *(_QWORD *)(v5[227] + 1968);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v14, v12, 6, (uint64_t)&v34);
  v15 = *(_QWORD *)(v5[227] + 2160);
  v16 = *(_QWORD *)(a2 + 3296);
  if (v16)
  {
    v17 = *(_DWORD *)(v16 - 8);
    v18 = ((unint64_t)&WebCore::JSCustomElementRegistry::s_info
         + ~((_QWORD)&WebCore::JSCustomElementRegistry::s_info << 32)) ^ (((unint64_t)&WebCore::JSCustomElementRegistry::s_info
                                                                         + ~((_QWORD)&WebCore::JSCustomElementRegistry::s_info << 32)) >> 22);
    v19 = 9 * ((v18 + ~(v18 << 13)) ^ ((v18 + ~(v18 << 13)) >> 8));
    v20 = (v19 ^ (v19 >> 15)) + ~((v19 ^ (v19 >> 15)) << 27);
    v21 = v17 & ((v20 >> 31) ^ v20);
    v22 = *(char ***)(v16 + 16 * v21);
    if (v22 == &WebCore::JSCustomElementRegistry::s_info)
    {
LABEL_20:
      v24 = *(_QWORD *)(v16 + 16 * v21 + 8);
      if (v24)
        goto LABEL_22;
    }
    else
    {
      v23 = 1;
      while (v22)
      {
        v21 = ((_DWORD)v21 + v23) & v17;
        v22 = *(char ***)(v16 + 16 * v21);
        ++v23;
        if (v22 == &WebCore::JSCustomElementRegistry::s_info)
          goto LABEL_20;
      }
    }
  }
  Structure = WebCore::JSCustomElementRegistryPrototype::createStructure((uint64_t *)a1, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v28 = (JSC::JSCell *)WebCore::JSCustomElementRegistryPrototype::create((WebCore::JSCustomElementRegistryPrototype *)a1, Structure, v26, v27);
  v29 = WebCore::JSCustomElementRegistry::createStructure((uint64_t *)a1, a2, v28);
  v24 = WebCore::cacheDOMStructure((JSCell *)a2, v29, (uint64_t)&WebCore::JSCustomElementRegistry::s_info);
LABEL_22:
  v30 = *(_QWORD *)(v24 + 48);
  v34 = 0;
  v35 = v2;
  v36 = -1;
  v37 = 0x1000000;
  v38 = 0;
  JSC::JSObject::putDirectInternal<(JSC::JSObject::PutMode)1>((unsigned __int8 *)v2, (JSC::VM *)a1, v15, v30, 14, (uint64_t)&v34);
  *(_QWORD *)(*(_QWORD *)(a2 + 3312) + 3384) = v2;
  if (*(_DWORD *)(a1 + 760) >= *(unsigned __int8 *)(a2 + 7))
    JSC::Heap::writeBarrierSlowPath((JSC::Heap *)(a1 + 192), (const JSCell *)a2);
  return v2;
}

unint64_t WebCore::jsCustomElementRegistryConstructor(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0xFFFE000000000002) != 0
    || &WebCore::JSCustomElementRegistryPrototype::s_info != (char **)(16
                                                                     * *(unsigned int *)(16
                                                                                       * (*(_DWORD *)a2 & 0xFFFFFFFE)
                                                                                       + 0x4C)))
  {
    return JSC::throwTypeError();
  }
  else
  {
    return WebCore::getDOMConstructor<WebCore::JSDOMConstructorNotConstructable<WebCore::JSCustomElementRegistry>,(WebCore::DOMConstructorID)423>(*(_QWORD *)(a1 + 56), *(_QWORD *)(16 * (*(_DWORD *)a2 & 0xFFFFFFFE) + 0x28));
  }
}

uint64_t WebCore::JSCustomElementRegistryOwner::isReachableFromOpaqueRoots(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  WTF::ConcurrentPtrHashSet *v8;
  _DWORD *v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  unsigned int v15;
  void *v16;
  uint64_t result;
  uint64_t v18;
  void *v19;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 24) + 8);
  if (!v5)
    return 0;
  v6 = *(_QWORD *)(v5 + 8);
  if (!v6)
    return 0;
  v7 = (void *)(v6 - 96);
  if (a5)
  {
    *a5 = "Reachable from ScriptExecutionContext";
    a5[1] = 38;
  }
  v8 = *(WTF::ConcurrentPtrHashSet **)(a4 + 120);
  v9 = (_DWORD *)*((_QWORD *)v8 + 6);
  if ((_DWORD *)((char *)v8 + 56) != v9)
  {
    v10 = v9[1];
    v11 = ((unint64_t)v7 + ~((_QWORD)v7 << 32)) ^ (((unint64_t)v7 + ~((_QWORD)v7 << 32)) >> 22);
    v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
    v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
    v14 = v10 & ((v13 >> 31) ^ v13);
    v15 = v14;
    while (1)
    {
      v16 = *(void **)&v9[2 * v15 + 4];
      if (!v16)
        return 0;
      if (v7 == v16)
        goto LABEL_14;
      v15 = (v15 + 1) & v10;
      if (v15 == v14)
      {
        __break(0xC471u);
        JUMPOUT(0x194963E88);
      }
    }
  }
  v18 = a4;
  v19 = v7;
  result = WTF::ConcurrentPtrHashSet::containsImplSlow(v8, v7);
  a4 = v18;
  v7 = v19;
  if ((_DWORD)result)
  {
LABEL_14:
    if (*(_BYTE *)(a4 + 131))
      (*(void (**)(uint64_t, void *))(*(_QWORD *)a4 + 152))(a4, v7);
    return 1;
  }
  return result;
}

_QWORD *WebCore::JSCustomElementRegistryOwner::finalize(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  int v23;
  _QWORD *result;

  v3 = *(_DWORD **)(*(_QWORD *)a2 + 24);
  ++v3[4];
  v6 = *(_QWORD *)(a3 + 32);
  v4 = (uint64_t *)(a3 + 32);
  v5 = v6;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 - 8);
    v8 = ((unint64_t)v3 + ~((_QWORD)v3 << 32)) ^ (((unint64_t)v3 + ~((_QWORD)v3 << 32)) >> 22);
    v9 = 9 * ((v8 + ~(v8 << 13)) ^ ((v8 + ~(v8 << 13)) >> 8));
    v10 = (v9 ^ (v9 >> 15)) + ~((v9 ^ (v9 >> 15)) << 27);
    v11 = v7 & ((v10 >> 31) ^ v10);
    v12 = *(_DWORD **)(v5 + 16 * v11);
    if (v12 != v3)
    {
      v23 = 1;
      while (v12)
      {
        v11 = ((_DWORD)v11 + v23) & v7;
        v12 = *(_DWORD **)(v5 + 16 * v11);
        ++v23;
        if (v12 == v3)
          goto LABEL_3;
      }
      v11 = *(unsigned int *)(v5 - 4);
    }
LABEL_3:
    if (v11 != *(_DWORD *)(v5 - 4))
    {
      v13 = (_QWORD *)(v5 + 16 * v11);
      *v13 = -1;
      v16 = v13[1];
      v15 = v13 + 1;
      v14 = v16;
      if (v16)
      {
        *(_QWORD *)(v14 + 8) = 3;
        *v15 = 0;
      }
      ++*(_DWORD *)(*v4 - 16);
      v17 = *v4;
      if (*v4)
        v18 = *(_DWORD *)(v17 - 12) - 1;
      else
        v18 = -1;
      *(_DWORD *)(v17 - 12) = v18;
      v19 = *v4;
      if (*v4)
      {
        v20 = 6 * *(_DWORD *)(v19 - 12);
        v21 = *(_DWORD *)(v19 - 4);
        if (v20 < v21 && v21 >= 9)
          result = WTF::HashTable<void *,WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>,WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<void *,JSC::Weak<JSC::JSObject>>>,WTF::DefaultHash<void *>,WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>::KeyValuePairTraits,WTF::HashTraits<void *>>::rehash(v4, v21 >> 1, 0);
      }
    }
  }
  if (v3[4] == 1)
    return (_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v3 + 16))(v3);
  --v3[4];
  return result;
}

unint64_t WebCore::wrap<WebCore::CustomElementRegistry>(uint64_t a1, uint64_t a2, WTF *a3)
{
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  WTF *v11;
  int v12;
  uint64_t v13;
  unint64_t SlowCase;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char **v21;
  unint64_t v22;
  uint64_t *v23;
  unint64_t Structure;
  WebCore::JSDOMGlobalObject *v25;
  JSC::Structure *v26;
  JSC::JSCell *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *Allocator;
  int v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  WTF *v43;
  void *v44;
  int v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  WTF *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  WTF *v55;

  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 3320) + 32);
  if (v5)
  {
    v6 = *(_DWORD *)(v5 - 8);
    v7 = ((unint64_t)a3 + ~((_QWORD)a3 << 32)) ^ (((unint64_t)a3 + ~((_QWORD)a3 << 32)) >> 22);
    v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
    v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
    v10 = v6 & ((v9 >> 31) ^ v9);
    v11 = *(WTF **)(v5 + 16 * v10);
    if (v11 == a3)
    {
LABEL_6:
      v13 = *(_QWORD *)(v5 + 16 * v10 + 8);
      if (v13)
      {
        if ((*(_BYTE *)(v13 + 8) & 3) == 0)
        {
          SlowCase = *(_QWORD *)v13;
          if (*(_QWORD *)v13)
            return SlowCase;
        }
      }
    }
    else
    {
      v12 = 1;
      while (v11)
      {
        v10 = ((_DWORD)v10 + v12) & v6;
        v11 = *(WTF **)(v5 + 16 * v10);
        ++v12;
        if (v11 == a3)
          goto LABEL_6;
      }
    }
  }
  ++*((_DWORD *)a3 + 4);
  if (*(uint64_t (***)(WebCore::ContextDestructionObserver *__hidden))a3 != &off_1E33A18E8)
  {
    __break(0xC471u);
    JUMPOUT(0x194964490);
  }
  v15 = *(_QWORD *)(a2 + 3296);
  if (v15)
  {
    v16 = *(_DWORD *)(v15 - 8);
    v17 = ((unint64_t)&WebCore::JSCustomElementRegistry::s_info
         + ~((_QWORD)&WebCore::JSCustomElementRegistry::s_info << 32)) ^ (((unint64_t)&WebCore::JSCustomElementRegistry::s_info
                                                                         + ~((_QWORD)&WebCore::JSCustomElementRegistry::s_info << 32)) >> 22);
    v18 = 9 * ((v17 + ~(v17 << 13)) ^ ((v17 + ~(v17 << 13)) >> 8));
    v19 = (v18 ^ (v18 >> 15)) + ~((v18 ^ (v18 >> 15)) << 27);
    v20 = v16 & ((v19 >> 31) ^ v19);
    v21 = *(char ***)(v15 + 16 * v20);
    if (v21 == &WebCore::JSCustomElementRegistry::s_info)
    {
LABEL_12:
      v22 = *(_QWORD *)(v15 + 16 * v20 + 8);
      if (v22)
        goto LABEL_14;
    }
    else
    {
      v38 = 1;
      while (v21)
      {
        v20 = ((_DWORD)v20 + v38) & v16;
        v21 = *(char ***)(v15 + 16 * v20);
        ++v38;
        if (v21 == &WebCore::JSCustomElementRegistry::s_info)
          goto LABEL_12;
      }
    }
  }
  v23 = *(uint64_t **)(a2 + 56);
  Structure = WebCore::JSCustomElementRegistryPrototype::createStructure(v23, a2, *(JSC::JSCell **)(a2 + 656));
  *(_DWORD *)(Structure + 16) |= 0x80000u;
  v27 = (JSC::JSCell *)WebCore::JSCustomElementRegistryPrototype::create((WebCore::JSCustomElementRegistryPrototype *)v23, Structure, v25, v26);
  v28 = WebCore::JSCustomElementRegistry::createStructure(v23, a2, v27);
  v22 = WebCore::cacheDOMStructure((JSCell *)a2, v28, (uint64_t)&WebCore::JSCustomElementRegistry::s_info);
LABEL_14:
  v29 = *(_QWORD *)(a2 + 56);
  v30 = *(_QWORD *)(v29 + 41456);
  v31 = *(_QWORD *)(v30 + 23536);
  v32 = *(_QWORD **)(v31 + 3464);
  if (v32)
    goto LABEL_15;
  v39 = *(_QWORD *)(v30 + 22648);
  if (__ldaxr((unsigned __int8 *)v39))
  {
    __clrex();
LABEL_37:
    MEMORY[0x19AEA534C](v39);
    goto LABEL_38;
  }
  if (__stxr(1u, (unsigned __int8 *)v39))
    goto LABEL_37;
LABEL_38:
  v41 = *(_QWORD *)(v39 + 2824);
  v53 = *(_QWORD *)(v41 + 3464);
  if (!v53)
  {
    v46 = WTF::fastMalloc((WTF *)0xF8);
    WTF::CString::CString((WTF::CString *)&v55, "IsoSpace T");
    v54 = 0;
    MEMORY[0x19AEA3204](v46, &v55, v29 + 192, v29 + 1872, 32, 8, &v54);
    v48 = (uint64_t)v54;
    v54 = 0;
    if (v48)
      (*(void (**)(uint64_t))(*(_QWORD *)v48 + 8))(v48);
    v49 = v55;
    v55 = 0;
    if (v49)
    {
      if (*(_DWORD *)v49 == 1)
        WTF::fastFree(v49, v47);
      else
        --*(_DWORD *)v49;
    }
    v53 = v46;
    v50 = *(_QWORD *)(v41 + 3464);
    *(_QWORD *)(v41 + 3464) = v46;
    if (v50)
      (*(void (**)(uint64_t))(*(_QWORD *)v50 + 8))(v50);
    v51 = *(unsigned int *)(v39 + 2844);
    if ((_DWORD)v51 == *(_DWORD *)(v39 + 2840))
    {
      WTF::Vector<JSC::IsoSubspace *,0ul,WTF::CrashOnOverflow,16ul,WTF::FastMalloc>::appendSlowCase<(WTF::FailureAction)0,JSC::IsoSubspace *&>(v39 + 2832, (unint64_t)&v53);
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)(v39 + 2832) + 8 * v51) = v46;
      *(_DWORD *)(v39 + 2844) = v51 + 1;
    }
  }
  v32 = (_QWORD *)WTF::fastMalloc((WTF *)0x58);
  JSC::GCClient::IsoSubspace::IsoSubspace();
  v42 = *(_QWORD *)(v31 + 3464);
  *(_QWORD *)(v31 + 3464) = v32;
  if (v42)
  {
    v43 = (WTF *)MEMORY[0x19AEA3528]();
    WTF::fastFree(v43, v44);
  }
  v45 = __ldxr((unsigned __int8 *)v39);
  if (v45 != 1)
  {
    __clrex();
    goto LABEL_45;
  }
  if (__stlxr(0, (unsigned __int8 *)v39))
LABEL_45:
    WTF::Lock::unlockSlow((WTF::Lock *)v39);
LABEL_15:
  SlowCase = v32[3];
  if (SlowCase >= v32[4])
  {
    SlowCase = v32[5];
    if ((SlowCase & 1) != 0)
    {
      JSC::sanitizeStackForVM();
      SlowCase = JSC::LocalAllocator::allocateSlowCase();
      goto LABEL_17;
    }
    v52 = *(_QWORD *)(SlowCase + 8) ^ v32[6];
    v32[4] = SlowCase + HIDWORD(v52);
    v32[5] = SlowCase + (int)v52;
  }
  v32[3] = SlowCase + 32;
LABEL_17:
  *(_DWORD *)SlowCase = 0;
  WebCore::JSDOMObject::JSDOMObject(SlowCase, v22);
  *(_QWORD *)(SlowCase + 24) = a3;
  if (*(_BYTE *)(v29 + 755))
    __dmb(0xAu);
  v33 = *(_QWORD *)(a2 + 3320);
  if ((byte_1EE334FF8 & 1) == 0)
  {
    qword_1EE334FF0 = (uint64_t)&off_1E324F8B0;
    byte_1EE334FF8 = 1;
  }
  v55 = a3;
  if ((SlowCase & 8) != 0)
    v34 = (SlowCase - 112) | 1;
  else
    v34 = SlowCase & 0xFFFFFFFFFFFFC000;
  if ((v34 & 1) != 0)
    v35 = v34 + 47;
  else
    v35 = *(_QWORD *)v34 + 32;
  Allocator = *(_QWORD **)(v35 + 16);
  if (!Allocator)
    Allocator = (_QWORD *)JSC::WeakSet::findAllocator();
  *(_QWORD *)(v35 + 16) = *Allocator;
  *Allocator = SlowCase;
  Allocator[1] = &qword_1EE334FF0;
  Allocator[2] = v33;
  v54 = Allocator;
  JSC::weakAdd<WTF::HashMap<void *,JSC::Weak<JSC::JSObject>,WTF::DefaultHash<void *>,WTF::HashTraits<void *>,WTF::HashTraits<JSC::Weak<JSC::JSObject>>,WTF::HashTableTraits>,void *,JSC::Weak<JSC::JSObject>>((uint64_t *)(v33 + 32), (uint64_t *)&v55, (uint64_t *)&v54);
  if (v54)
    v54[1] = 3;
  return SlowCase;
}

